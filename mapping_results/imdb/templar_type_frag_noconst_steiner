objc[20800]: Class JavaLaunchHelper is implemented in both /Library/Java/JavaVirtualMachines/jdk1.8.0_121.jdk/Contents/Home/bin/java (0x10e9d94c0) and /Library/Java/JavaVirtualMachines/jdk1.8.0_121.jdk/Contents/Home/jre/lib/libinstrument.dylib (0x10eaa14e0). One of the two will be used. Which one is undefined.
Connecting to database: <jdbc:mysql://localhost:3306/imdb>
Database connected!
00:00  INFO: ===== FOLD 0 =====
Original log size: 95
Trimming log to 100.0%...
Final log size: 95
00:00  INFO: ===== Parsing Results =====
00:00  INFO: Total Queries: 95
00:00  INFO: Correctly Parsed: 95/95

Loading cache from: <data/imdb/imdb.cands.cache>
Cache loaded!
== QUERY ID: 12 ==
Pruned candidates for birthplace: 9
 - actor.birth_city (0.7039)
 - writer.birth_city (0.7039)
 - producer.birth_city (0.7039)
 - director.birth_city (0.7039)
 - director.name (0.65245)
 - actor.name (0.65245)
 - producer.name (0.65245)
 - writer.name (0.65245)
 - company.name (0.65245)
Pruned candidates for Kevin Spacey: 4
 - producer.name = 'Kevin Spacey' (1.0)
 - writer.name = 'Kevin Spacey' (1.0)
 - director.name = 'Kevin Spacey' (1.0)
 - actor.name = 'Kevin Spacey' (1.0)
TOTAL INTERPS COUNT: 36
TOTAL SCORE: 0.6911899880063767, TIES: 3
--
birthplace :: actor.birth_city; producer.birth_city; director.birth_city; writer.birth_city : producer.birth_city (0.7039)
Kevin Spacey :: actor.name = 'Kevin Spacey'; producer.name = 'Kevin Spacey'; director.name = 'Kevin Spacey'; writer.name = 'Kevin Spacey' : producer.name = 'Kevin Spacey' (1.0)
--
birthplace :: actor.birth_city; producer.birth_city; director.birth_city; writer.birth_city : writer.birth_city (0.7039)
Kevin Spacey :: actor.name = 'Kevin Spacey'; producer.name = 'Kevin Spacey'; director.name = 'Kevin Spacey'; writer.name = 'Kevin Spacey' : writer.name = 'Kevin Spacey' (1.0)
--
birthplace :: actor.birth_city; producer.birth_city; director.birth_city; writer.birth_city : director.birth_city (0.7039)
Kevin Spacey :: actor.name = 'Kevin Spacey'; producer.name = 'Kevin Spacey'; director.name = 'Kevin Spacey'; writer.name = 'Kevin Spacey' : director.name = 'Kevin Spacey' (1.0)
--
birthplace :: actor.birth_city; producer.birth_city; director.birth_city; writer.birth_city : actor.birth_city (0.7039)
Kevin Spacey :: actor.name = 'Kevin Spacey'; producer.name = 'Kevin Spacey'; director.name = 'Kevin Spacey'; writer.name = 'Kevin Spacey' : actor.name = 'Kevin Spacey' (1.0)
QUERY > [Ties0: Y] [Ties1: Y] [Ties1/t: 1.00]
FRAGMENT (Total: 2)> [Ties0: 2] [Ties1: 2] [Ties1/t: 2.00]
Saving cache...
Saved cache to <data/imdb/imdb.cands.cache>!
== QUERY ID: 42 ==
Pruned candidates for tv series: 1
 - tv_series.title (1.0)
Pruned candidates for created by: 5
 - made_by (0.77155)
 - written_by (0.76945)
 - directed_by (0.76755)
 - cast (0.55735)
 - copyright (0.5572)
Pruned candidates for Shonda Rhimes: 4
 - producer.name = 'Shonda Rhimes' (1.0)
 - director.name = 'Shonda Rhimes' (1.0)
 - writer.name = 'Shonda Rhimes' (1.0)
 - actor.name = 'Shonda Rhimes' (1.0)
TOTAL INTERPS COUNT: 20
Returning 0.0 because Steiner tree doesn't contain written_by
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain cast
Returning 0.0 because Steiner tree doesn't contain copyright
Returning 0.0 because Steiner tree doesn't contain made_by
Returning 0.0 because Steiner tree doesn't contain written_by
Returning 0.0 because Steiner tree doesn't contain cast
Returning 0.0 because Steiner tree doesn't contain copyright
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain cast
Returning 0.0 because Steiner tree doesn't contain copyright
Returning 0.0 because Steiner tree doesn't contain made_by
Returning 0.0 because Steiner tree doesn't contain written_by
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain copyright
TOTAL SCORE: 0.7437441958432517, TIES: 0
--
tv series :: tv_series.title : tv_series.title (1.0)
created by :: made_by : made_by (0.77155)
Shonda Rhimes :: producer.name = 'Shonda Rhimes' : producer.name = 'Shonda Rhimes' (1.0)
QUERY > [Ties0: Y] [Ties1: Y] [Ties1/t: 1.00]
FRAGMENT (Total: 3)> [Ties0: 3] [Ties1: 3] [Ties1/t: 3.00]
== QUERY ID: 123 ==
Pruned candidates for movie: 1
 - movie.title (1.0)
Pruned candidates for actors: 1
 - count(actor.name) = max(count(actor.name)) (0.9999999)
Pruned candidates for China: 10
 - writer.name = 'China' (1.0)
 - producer.nationality = 'China' (1.0)
 - movie.title = 'China' (1.0)
 - director.name = 'China' (1.0)
 - company.name = 'China' (1.0)
 - director.nationality = 'China' (1.0)
 - producer.name = 'China' (1.0)
 - writer.nationality = 'China' (1.0)
 - actor.nationality = 'China' (1.0)
 - actor.name = 'China' (1.0)
TOTAL INTERPS COUNT: 10
TOTAL SCORE: 0.8212123798282858, TIES: 0
--
movie :: movie.title : movie.title (1.0)
actors :: count(actor.name) = max(count(actor.name)) : count(actor.name) = max(count(actor.name)) (0.9999999)
China :: actor.nationality = 'China' : actor.name = 'China' (1.0)
QUERY > [Ties0: N] [Ties1: N] [Ties1/t: 0.00]
FRAGMENT (Total: 3)> [Ties0: 2] [Ties1: 2] [Ties1/t: 2.00]
== QUERY ID: 26 ==
Pruned candidates for movies: 1
 - movie.title (0.9999999)
Pruned candidates for featuring: 5
 - tv_series (0.6595)
 - directed_by (0.59885)
 - made_by (0.57665)
 - written_by (0.5763)
 - cast (0.57585)
Pruned candidates for Kate Winslet: 1
 - actor.name = 'Kate Winslet' (1.0)
TOTAL INTERPS COUNT: 5
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain made_by
Returning 0.0 because Steiner tree doesn't contain written_by
TOTAL SCORE: 0.7527492936551609, TIES: 0
--
movies :: movie.title : movie.title (0.9999999)
featuring :: actor; cast : tv_series (0.6595)
Kate Winslet :: actor.name = 'Kate Winslet' : actor.name = 'Kate Winslet' (1.0)
QUERY > [Ties0: N] [Ties1: N] [Ties1/t: 0.00]
FRAGMENT (Total: 3)> [Ties0: 2] [Ties1: 2] [Ties1/t: 2.00]
== QUERY ID: 85 ==
Pruned candidates for movies: 1
 - movie.title (0.9999999)
Pruned candidates for nuclear weapons: 1
 - keyword.keyword = 'nuclear-weapons' (1.0)
TOTAL INTERPS COUNT: 1
TOTAL SCORE: 0.83049967406652, TIES: 0
--
movies :: movie.title : movie.title (0.9999999)
nuclear weapons :: keyword.keyword = 'nuclear-weapons' : keyword.keyword = 'nuclear-weapons' (1.0)
QUERY > [Ties0: Y] [Ties1: Y] [Ties1/t: 1.00]
FRAGMENT (Total: 2)> [Ties0: 2] [Ties1: 2] [Ties1/t: 2.00]
== QUERY ID: 73 ==
Pruned candidates for actors: 1
 - actor.name (0.9999999)
Pruned candidates for played: 5
 - cast (0.6295)
 - actor (0.5995)
 - tv_series (0.59235)
 - made_by (0.57695)
 - movie (0.5751)
Pruned candidates for movie Camp X-Ray: 1
 - movie.title = 'Camp X-Ray' (1.0)
TOTAL INTERPS COUNT: 5
Returning 0.0 because Steiner tree doesn't contain made_by
TOTAL SCORE: 0.7451210455341221, TIES: 0
--
actors :: actor.name : actor.name (0.9999999)
played :: actor; cast : cast (0.6295)
movie Camp X-Ray :: movie.title = 'Camp X-Ray' : movie.title = 'Camp X-Ray' (1.0)
QUERY > [Ties0: Y] [Ties1: Y] [Ties1/t: 1.00]
FRAGMENT (Total: 3)> [Ties0: 3] [Ties1: 3] [Ties1/t: 3.00]
Saving cache...
Saved cache to <data/imdb/imdb.cands.cache>!
== QUERY ID: 128 ==
Pruned candidates for latest: 5
 - movie.release_year = max(movie.release_year) (0.6627000000000001)
 - tv_series.release_year = max(tv_series.release_year) (0.6627000000000001)
 - movie.mid = max(movie.mid) (0.5938)
 - company.name = max(company.name) (0.5753)
 - company.country_code = max(company.country_code) (0.5602)
Pruned candidates for movie: 1
 - movie.title (1.0)
Pruned candidates for Jim Jarmusch: 4
 - writer.name = 'Jim Jarmusch' (1.0)
 - producer.name = 'Jim Jarmusch' (1.0)
 - actor.name = 'Jim Jarmusch' (1.0)
 - director.name = 'Jim Jarmusch' (1.0)
TOTAL INTERPS COUNT: 20
TOTAL SCORE: 0.7382468570399368, TIES: 0
--
latest :: movie.release_year = max(movie.release_year) : movie.release_year = max(movie.release_year) (0.6627000000000001)
movie :: movie.title : movie.title (1.0)
Jim Jarmusch :: director.name = 'Jim Jarmusch'; writer.name = 'Jim Jarmusch'; producer.name = 'Jim Jarmusch' : director.name = 'Jim Jarmusch' (1.0)
QUERY > [Ties0: Y] [Ties1: Y] [Ties1/t: 1.00]
FRAGMENT (Total: 3)> [Ties0: 3] [Ties1: 3] [Ties1/t: 3.00]
== QUERY ID: 92 ==
Pruned candidates for movies: 1
 - count(movie.title) (0.9999999)
Pruned candidates for 2013: 6
 - actor.birth_year = 2013 (0.9999)
 - movie.release_year = 2013 (0.9999)
 - tv_series.release_year = 2013 (0.9999)
 - tags.id = 2013 (0.9999)
 - keyword.id = 2013 (0.9999)
 - company.id = 2013 (0.9999)
TOTAL INTERPS COUNT: 6
TOTAL SCORE: 0.8932104398259805, TIES: 0
--
movies :: count(movie.title) : count(movie.title) (0.9999999)
2013 :: movie.release_year = 2013 : movie.release_year = 2013 (0.9999)
QUERY > [Ties0: Y] [Ties1: Y] [Ties1/t: 1.00]
FRAGMENT (Total: 2)> [Ties0: 2] [Ties1: 2] [Ties1/t: 2.00]
== QUERY ID: 46 ==
Pruned candidates for writer: 1
 - writer.name (1.0)
Pruned candidates for movie Django Unchained: 1
 - movie.title = 'Django Unchained' (1.0)
TOTAL INTERPS COUNT: 1
TOTAL SCORE: 0.8333333333333334, TIES: 0
--
writer :: writer.name : writer.name (1.0)
movie Django Unchained :: movie.title = 'Django Unchained' : movie.title = 'Django Unchained' (1.0)
QUERY > [Ties0: Y] [Ties1: Y] [Ties1/t: 1.00]
FRAGMENT (Total: 2)> [Ties0: 2] [Ties1: 2] [Ties1/t: 2.00]
== QUERY ID: 68 ==
Pruned candidates for movies: 1
 - movie.title (0.9999999)
Pruned candidates for Iraq war: 1
 - keyword.keyword = 'iraq-war' (1.0)
TOTAL INTERPS COUNT: 1
TOTAL SCORE: 0.83049967406652, TIES: 0
--
movies :: movie.title : movie.title (0.9999999)
Iraq war :: keyword.keyword = 'iraq-war' : keyword.keyword = 'iraq-war' (1.0)
QUERY > [Ties0: Y] [Ties1: Y] [Ties1/t: 1.00]
FRAGMENT (Total: 2)> [Ties0: 2] [Ties1: 2] [Ties1/t: 2.00]
== QUERY ID: 108 ==
Pruned candidates for actors: 1
 - count(actor.name) (0.9999999)
Pruned candidates for movie Saving Private Ryan: 1
 - movie.title = 'Saving Private Ryan' (1.0)
TOTAL INTERPS COUNT: 1
TOTAL SCORE: 0.8594929969095907, TIES: 0
--
actors :: count(actor.name) : count(actor.name) (0.9999999)
movie Saving Private Ryan :: movie.title = 'Saving Private Ryan' : movie.title = 'Saving Private Ryan' (1.0)
QUERY > [Ties0: Y] [Ties1: Y] [Ties1/t: 1.00]
FRAGMENT (Total: 2)> [Ties0: 2] [Ties1: 2] [Ties1/t: 2.00]
Saving cache...
Saved cache to <data/imdb/imdb.cands.cache>!
== QUERY ID: 103 ==
Pruned candidates for movies: 1
 - count(movie.title) (0.9999999)
Pruned candidates for Quentin Tarantino: 4
 - director.name = 'Quentin Tarantino' (1.0)
 - actor.name = 'Quentin Tarantino' (1.0)
 - producer.name = 'Quentin Tarantino' (1.0)
 - writer.name = 'Quentin Tarantino' (1.0)
Pruned candidates for direct: 5
 - directed_by (0.668)
 - written_by (0.59855)
 - movie (0.58215)
 - made_by (0.5763)
 - keyword (0.5717)
Pruned candidates for before 2002: 6
 - producer.birth_year < 2002 (0.7510283549906754)
 - writer.birth_year < 2002 (0.7510283549906754)
 - director.birth_year < 2002 (0.7510283549906754)
 - actor.birth_year < 2002 (0.7510283549906754)
 - movie.release_year < 2002 (0.746655372310412)
 - tv_series.release_year < 2002 (0.746655372310412)
Pruned candidates for after 2010: 5
 - movie.mid > 2010 (0.7953217839340251)
 - director.did > 2010 (0.7732012739254895)
 - actor.birth_year > 2010 (0.7726838227891146)
 - tv_series.release_year > 2010 (0.7693768907369131)
 - movie.release_year > 2010 (0.7693768907369131)
TOTAL INTERPS COUNT: 600
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain written_by
Returning 0.0 because Steiner tree doesn't contain written_by
Returning 0.0 because Steiner tree doesn't contain written_by
Returning 0.0 because Steiner tree doesn't contain keyword
Returning 0.0 because Steiner tree doesn't contain keyword
Returning 0.0 because Steiner tree doesn't contain keyword
Returning 0.0 because Steiner tree doesn't contain keyword
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain made_by
Returning 0.0 because Steiner tree doesn't contain made_by
Returning 0.0 because Steiner tree doesn't contain made_by
Returning 0.0 because Steiner tree doesn't contain keyword
Returning 0.0 because Steiner tree doesn't contain keyword
Returning 0.0 because Steiner tree doesn't contain keyword
Returning 0.0 because Steiner tree doesn't contain keyword
Returning 0.0 because Steiner tree doesn't contain written_by
Returning 0.0 because Steiner tree doesn't contain written_by
Returning 0.0 because Steiner tree doesn't contain written_by
Returning 0.0 because Steiner tree doesn't contain made_by
Returning 0.0 because Steiner tree doesn't contain made_by
Returning 0.0 because Steiner tree doesn't contain made_by
Returning 0.0 because Steiner tree doesn't contain keyword
Returning 0.0 because Steiner tree doesn't contain keyword
Returning 0.0 because Steiner tree doesn't contain keyword
Returning 0.0 because Steiner tree doesn't contain keyword
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain written_by
Returning 0.0 because Steiner tree doesn't contain written_by
Returning 0.0 because Steiner tree doesn't contain written_by
Returning 0.0 because Steiner tree doesn't contain made_by
Returning 0.0 because Steiner tree doesn't contain made_by
Returning 0.0 because Steiner tree doesn't contain made_by
Returning 0.0 because Steiner tree doesn't contain keyword
Returning 0.0 because Steiner tree doesn't contain keyword
Returning 0.0 because Steiner tree doesn't contain keyword
Returning 0.0 because Steiner tree doesn't contain keyword
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain written_by
Returning 0.0 because Steiner tree doesn't contain written_by
Returning 0.0 because Steiner tree doesn't contain written_by
Returning 0.0 because Steiner tree doesn't contain made_by
Returning 0.0 because Steiner tree doesn't contain made_by
Returning 0.0 because Steiner tree doesn't contain made_by
Returning 0.0 because Steiner tree doesn't contain keyword
Returning 0.0 because Steiner tree doesn't contain keyword
Returning 0.0 because Steiner tree doesn't contain keyword
Returning 0.0 because Steiner tree doesn't contain keyword
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain written_by
Returning 0.0 because Steiner tree doesn't contain written_by
Returning 0.0 because Steiner tree doesn't contain written_by
Returning 0.0 because Steiner tree doesn't contain made_by
Returning 0.0 because Steiner tree doesn't contain made_by
Returning 0.0 because Steiner tree doesn't contain keyword
Returning 0.0 because Steiner tree doesn't contain keyword
Returning 0.0 because Steiner tree doesn't contain keyword
Returning 0.0 because Steiner tree doesn't contain keyword
Returning 0.0 because Steiner tree doesn't contain written_by
Returning 0.0 because Steiner tree doesn't contain written_by
Returning 0.0 because Steiner tree doesn't contain written_by
Returning 0.0 because Steiner tree doesn't contain keyword
Returning 0.0 because Steiner tree doesn't contain keyword
Returning 0.0 because Steiner tree doesn't contain keyword
Returning 0.0 because Steiner tree doesn't contain keyword
Returning 0.0 because Steiner tree doesn't contain made_by
Returning 0.0 because Steiner tree doesn't contain made_by
Returning 0.0 because Steiner tree doesn't contain made_by
Returning 0.0 because Steiner tree doesn't contain keyword
Returning 0.0 because Steiner tree doesn't contain keyword
Returning 0.0 because Steiner tree doesn't contain keyword
Returning 0.0 because Steiner tree doesn't contain keyword
Returning 0.0 because Steiner tree doesn't contain written_by
Returning 0.0 because Steiner tree doesn't contain written_by
Returning 0.0 because Steiner tree doesn't contain written_by
Returning 0.0 because Steiner tree doesn't contain made_by
Returning 0.0 because Steiner tree doesn't contain made_by
Returning 0.0 because Steiner tree doesn't contain made_by
Returning 0.0 because Steiner tree doesn't contain keyword
Returning 0.0 because Steiner tree doesn't contain keyword
Returning 0.0 because Steiner tree doesn't contain keyword
Returning 0.0 because Steiner tree doesn't contain keyword
Returning 0.0 because Steiner tree doesn't contain written_by
Returning 0.0 because Steiner tree doesn't contain written_by
Returning 0.0 because Steiner tree doesn't contain written_by
Returning 0.0 because Steiner tree doesn't contain made_by
Returning 0.0 because Steiner tree doesn't contain made_by
Returning 0.0 because Steiner tree doesn't contain made_by
Returning 0.0 because Steiner tree doesn't contain keyword
Returning 0.0 because Steiner tree doesn't contain keyword
Returning 0.0 because Steiner tree doesn't contain keyword
Returning 0.0 because Steiner tree doesn't contain keyword
Returning 0.0 because Steiner tree doesn't contain written_by
Returning 0.0 because Steiner tree doesn't contain written_by
Returning 0.0 because Steiner tree doesn't contain written_by
Returning 0.0 because Steiner tree doesn't contain made_by
Returning 0.0 because Steiner tree doesn't contain made_by
Returning 0.0 because Steiner tree doesn't contain made_by
Returning 0.0 because Steiner tree doesn't contain keyword
Returning 0.0 because Steiner tree doesn't contain keyword
Returning 0.0 because Steiner tree doesn't contain keyword
Returning 0.0 because Steiner tree doesn't contain keyword
Returning 0.0 because Steiner tree doesn't contain written_by
Returning 0.0 because Steiner tree doesn't contain written_by
Returning 0.0 because Steiner tree doesn't contain written_by
Returning 0.0 because Steiner tree doesn't contain made_by
Returning 0.0 because Steiner tree doesn't contain made_by
Returning 0.0 because Steiner tree doesn't contain made_by
Returning 0.0 because Steiner tree doesn't contain keyword
Returning 0.0 because Steiner tree doesn't contain keyword
Returning 0.0 because Steiner tree doesn't contain keyword
Returning 0.0 because Steiner tree doesn't contain keyword
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain written_by
Returning 0.0 because Steiner tree doesn't contain written_by
Returning 0.0 because Steiner tree doesn't contain written_by
Returning 0.0 because Steiner tree doesn't contain keyword
Returning 0.0 because Steiner tree doesn't contain keyword
Returning 0.0 because Steiner tree doesn't contain keyword
Returning 0.0 because Steiner tree doesn't contain keyword
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain made_by
Returning 0.0 because Steiner tree doesn't contain made_by
Returning 0.0 because Steiner tree doesn't contain made_by
Returning 0.0 because Steiner tree doesn't contain keyword
Returning 0.0 because Steiner tree doesn't contain keyword
Returning 0.0 because Steiner tree doesn't contain keyword
Returning 0.0 because Steiner tree doesn't contain keyword
Returning 0.0 because Steiner tree doesn't contain written_by
Returning 0.0 because Steiner tree doesn't contain written_by
Returning 0.0 because Steiner tree doesn't contain written_by
Returning 0.0 because Steiner tree doesn't contain made_by
Returning 0.0 because Steiner tree doesn't contain made_by
Returning 0.0 because Steiner tree doesn't contain made_by
Returning 0.0 because Steiner tree doesn't contain keyword
Returning 0.0 because Steiner tree doesn't contain keyword
Returning 0.0 because Steiner tree doesn't contain keyword
Returning 0.0 because Steiner tree doesn't contain keyword
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain written_by
Returning 0.0 because Steiner tree doesn't contain written_by
Returning 0.0 because Steiner tree doesn't contain written_by
Returning 0.0 because Steiner tree doesn't contain made_by
Returning 0.0 because Steiner tree doesn't contain made_by
Returning 0.0 because Steiner tree doesn't contain made_by
Returning 0.0 because Steiner tree doesn't contain keyword
Returning 0.0 because Steiner tree doesn't contain keyword
Returning 0.0 because Steiner tree doesn't contain keyword
Returning 0.0 because Steiner tree doesn't contain keyword
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain written_by
Returning 0.0 because Steiner tree doesn't contain written_by
Returning 0.0 because Steiner tree doesn't contain written_by
Returning 0.0 because Steiner tree doesn't contain made_by
Returning 0.0 because Steiner tree doesn't contain made_by
Returning 0.0 because Steiner tree doesn't contain made_by
Returning 0.0 because Steiner tree doesn't contain keyword
Returning 0.0 because Steiner tree doesn't contain keyword
Returning 0.0 because Steiner tree doesn't contain keyword
Returning 0.0 because Steiner tree doesn't contain keyword
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain written_by
Returning 0.0 because Steiner tree doesn't contain written_by
Returning 0.0 because Steiner tree doesn't contain written_by
Returning 0.0 because Steiner tree doesn't contain made_by
Returning 0.0 because Steiner tree doesn't contain made_by
Returning 0.0 because Steiner tree doesn't contain made_by
Returning 0.0 because Steiner tree doesn't contain keyword
Returning 0.0 because Steiner tree doesn't contain keyword
Returning 0.0 because Steiner tree doesn't contain keyword
Returning 0.0 because Steiner tree doesn't contain keyword
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain written_by
Returning 0.0 because Steiner tree doesn't contain written_by
Returning 0.0 because Steiner tree doesn't contain written_by
Returning 0.0 because Steiner tree doesn't contain keyword
Returning 0.0 because Steiner tree doesn't contain keyword
Returning 0.0 because Steiner tree doesn't contain keyword
Returning 0.0 because Steiner tree doesn't contain keyword
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain made_by
Returning 0.0 because Steiner tree doesn't contain made_by
Returning 0.0 because Steiner tree doesn't contain keyword
Returning 0.0 because Steiner tree doesn't contain keyword
Returning 0.0 because Steiner tree doesn't contain keyword
Returning 0.0 because Steiner tree doesn't contain keyword
Returning 0.0 because Steiner tree doesn't contain written_by
Returning 0.0 because Steiner tree doesn't contain written_by
Returning 0.0 because Steiner tree doesn't contain written_by
Returning 0.0 because Steiner tree doesn't contain made_by
Returning 0.0 because Steiner tree doesn't contain made_by
Returning 0.0 because Steiner tree doesn't contain made_by
Returning 0.0 because Steiner tree doesn't contain keyword
Returning 0.0 because Steiner tree doesn't contain keyword
Returning 0.0 because Steiner tree doesn't contain keyword
Returning 0.0 because Steiner tree doesn't contain keyword
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain written_by
Returning 0.0 because Steiner tree doesn't contain written_by
Returning 0.0 because Steiner tree doesn't contain written_by
Returning 0.0 because Steiner tree doesn't contain made_by
Returning 0.0 because Steiner tree doesn't contain made_by
Returning 0.0 because Steiner tree doesn't contain made_by
Returning 0.0 because Steiner tree doesn't contain keyword
Returning 0.0 because Steiner tree doesn't contain keyword
Returning 0.0 because Steiner tree doesn't contain keyword
Returning 0.0 because Steiner tree doesn't contain keyword
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain written_by
Returning 0.0 because Steiner tree doesn't contain written_by
Returning 0.0 because Steiner tree doesn't contain written_by
Returning 0.0 because Steiner tree doesn't contain made_by
Returning 0.0 because Steiner tree doesn't contain made_by
Returning 0.0 because Steiner tree doesn't contain keyword
Returning 0.0 because Steiner tree doesn't contain keyword
Returning 0.0 because Steiner tree doesn't contain keyword
Returning 0.0 because Steiner tree doesn't contain keyword
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain written_by
Returning 0.0 because Steiner tree doesn't contain written_by
Returning 0.0 because Steiner tree doesn't contain written_by
Returning 0.0 because Steiner tree doesn't contain made_by
Returning 0.0 because Steiner tree doesn't contain made_by
Returning 0.0 because Steiner tree doesn't contain keyword
Returning 0.0 because Steiner tree doesn't contain keyword
Returning 0.0 because Steiner tree doesn't contain keyword
Returning 0.0 because Steiner tree doesn't contain keyword
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain written_by
Returning 0.0 because Steiner tree doesn't contain written_by
Returning 0.0 because Steiner tree doesn't contain written_by
Returning 0.0 because Steiner tree doesn't contain keyword
Returning 0.0 because Steiner tree doesn't contain keyword
Returning 0.0 because Steiner tree doesn't contain keyword
Returning 0.0 because Steiner tree doesn't contain keyword
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain made_by
Returning 0.0 because Steiner tree doesn't contain made_by
Returning 0.0 because Steiner tree doesn't contain made_by
Returning 0.0 because Steiner tree doesn't contain keyword
Returning 0.0 because Steiner tree doesn't contain keyword
Returning 0.0 because Steiner tree doesn't contain keyword
Returning 0.0 because Steiner tree doesn't contain keyword
Returning 0.0 because Steiner tree doesn't contain written_by
Returning 0.0 because Steiner tree doesn't contain written_by
Returning 0.0 because Steiner tree doesn't contain written_by
Returning 0.0 because Steiner tree doesn't contain made_by
Returning 0.0 because Steiner tree doesn't contain made_by
Returning 0.0 because Steiner tree doesn't contain made_by
Returning 0.0 because Steiner tree doesn't contain keyword
Returning 0.0 because Steiner tree doesn't contain keyword
Returning 0.0 because Steiner tree doesn't contain keyword
Returning 0.0 because Steiner tree doesn't contain keyword
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain written_by
Returning 0.0 because Steiner tree doesn't contain written_by
Returning 0.0 because Steiner tree doesn't contain written_by
Returning 0.0 because Steiner tree doesn't contain made_by
Returning 0.0 because Steiner tree doesn't contain made_by
Returning 0.0 because Steiner tree doesn't contain made_by
Returning 0.0 because Steiner tree doesn't contain keyword
Returning 0.0 because Steiner tree doesn't contain keyword
Returning 0.0 because Steiner tree doesn't contain keyword
Returning 0.0 because Steiner tree doesn't contain keyword
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain written_by
Returning 0.0 because Steiner tree doesn't contain written_by
Returning 0.0 because Steiner tree doesn't contain written_by
Returning 0.0 because Steiner tree doesn't contain made_by
Returning 0.0 because Steiner tree doesn't contain made_by
Returning 0.0 because Steiner tree doesn't contain made_by
Returning 0.0 because Steiner tree doesn't contain keyword
Returning 0.0 because Steiner tree doesn't contain keyword
Returning 0.0 because Steiner tree doesn't contain keyword
Returning 0.0 because Steiner tree doesn't contain keyword
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain written_by
Returning 0.0 because Steiner tree doesn't contain written_by
Returning 0.0 because Steiner tree doesn't contain written_by
Returning 0.0 because Steiner tree doesn't contain made_by
Returning 0.0 because Steiner tree doesn't contain made_by
Returning 0.0 because Steiner tree doesn't contain keyword
Returning 0.0 because Steiner tree doesn't contain keyword
Returning 0.0 because Steiner tree doesn't contain keyword
Returning 0.0 because Steiner tree doesn't contain keyword
TOTAL SCORE: 0.6854402568105147, TIES: 0
--
movies :: count(movie.title) : count(movie.title) (0.9999999)
Quentin Tarantino :: director.name = 'Quentin Tarantino' : director.name = 'Quentin Tarantino' (1.0)
direct :: directed_by; director : directed_by (0.668)
before 2002 :: movie.release_year < 2002 : movie.release_year < 2002 (0.746655372310412)
after 2010 :: movie.release_year > 2010 : movie.mid > 2010 (0.7953217839340251)
QUERY > [Ties0: N] [Ties1: N] [Ties1/t: 0.00]
FRAGMENT (Total: 5)> [Ties0: 4] [Ties1: 4] [Ties1/t: 4.00]
== QUERY ID: 16 ==
Pruned candidates for actors: 1
 - actor.name (0.9999999)
Pruned candidates for Milan: 7
 - actor.birth_city = 'Milan' (1.0)
 - producer.birth_city = 'Milan' (1.0)
 - tv_series.title = 'Milan' (1.0)
 - movie.title = 'Milan' (1.0)
 - director.birth_city = 'Milan' (1.0)
 - writer.birth_city = 'Milan' (1.0)
 - actor.name = 'Milan' (1.0)
TOTAL INTERPS COUNT: 7
TOTAL SCORE: 0.9477097491751983, TIES: 0
--
actors :: actor.name : actor.name (0.9999999)
Milan :: actor.birth_city = 'Milan' : actor.birth_city = 'Milan' (1.0)
QUERY > [Ties0: Y] [Ties1: Y] [Ties1/t: 1.00]
FRAGMENT (Total: 2)> [Ties0: 2] [Ties1: 2] [Ties1/t: 2.00]
== QUERY ID: 111 ==
Pruned candidates for companies: 1
 - count(company.name) (0.9999999)
Pruned candidates for Camp X-Ray: 2
 - movie.title = 'Camp X-Ray' (1.0)
 - keyword.keyword = 'camp-x-ray' (1.0)
TOTAL INTERPS COUNT: 2
TOTAL SCORE: 0.8276025823736932, TIES: 0
--
companies :: count(company.name) : count(company.name) (0.9999999)
Camp X-Ray :: movie.title = 'Camp X-Ray' : movie.title = 'Camp X-Ray' (1.0)
QUERY > [Ties0: Y] [Ties1: Y] [Ties1/t: 1.00]
FRAGMENT (Total: 2)> [Ties0: 2] [Ties1: 2] [Ties1/t: 2.00]
== QUERY ID: 44 ==
Pruned candidates for movies: 1
 - movie.title (0.9999999)
Pruned candidates for directed by: 1
 - directed_by (1.0)
Pruned candidates for Quentin Tarantino: 4
 - director.name = 'Quentin Tarantino' (1.0)
 - actor.name = 'Quentin Tarantino' (1.0)
 - producer.name = 'Quentin Tarantino' (1.0)
 - writer.name = 'Quentin Tarantino' (1.0)
Pruned candidates for featuring: 5
 - tv_series (0.6595)
 - directed_by (0.59885)
 - made_by (0.57665)
 - written_by (0.5763)
 - cast (0.57585)
Pruned candidates for Christoph Waltz: 4
 - director.name = 'Christoph Waltz' (1.0)
 - writer.name = 'Christoph Waltz' (1.0)
 - producer.name = 'Christoph Waltz' (1.0)
 - actor.name = 'Christoph Waltz' (1.0)
TOTAL INTERPS COUNT: 80
Returning 0.0 because Steiner tree doesn't contain tv_series
Returning 0.0 because Steiner tree doesn't contain tv_series
Returning 0.0 because Steiner tree doesn't contain tv_series
Returning 0.0 because Steiner tree doesn't contain made_by
Returning 0.0 because Steiner tree doesn't contain made_by
Returning 0.0 because Steiner tree doesn't contain made_by
Returning 0.0 because Steiner tree doesn't contain written_by
Returning 0.0 because Steiner tree doesn't contain written_by
Returning 0.0 because Steiner tree doesn't contain written_by
Returning 0.0 because Steiner tree doesn't contain tv_series
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain made_by
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain tv_series
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain written_by
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain made_by
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain written_by
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain directed_by
TOTAL SCORE: 0.7746894712511788, TIES: 1
--
movies :: movie.title : movie.title (0.9999999)
directed by :: directed_by; director : directed_by (1.0)
Quentin Tarantino :: director.name = 'Quentin Tarantino' : actor.name = 'Quentin Tarantino' (1.0)
featuring :: actor; cast : tv_series (0.6595)
Christoph Waltz :: actor.name = 'Christoph Waltz' : director.name = 'Christoph Waltz' (1.0)
--
movies :: movie.title : movie.title (0.9999999)
directed by :: directed_by; director : directed_by (1.0)
Quentin Tarantino :: director.name = 'Quentin Tarantino' : director.name = 'Quentin Tarantino' (1.0)
featuring :: actor; cast : tv_series (0.6595)
Christoph Waltz :: actor.name = 'Christoph Waltz' : actor.name = 'Christoph Waltz' (1.0)
QUERY > [Ties0: N] [Ties1: N] [Ties1/t: 0.00]
FRAGMENT (Total: 5)> [Ties0: 2] [Ties1: 4] [Ties1/t: 3.00]
== QUERY ID: 130 ==
Pruned candidates for latest: 5
 - movie.release_year = max(movie.release_year) (0.6627000000000001)
 - tv_series.release_year = max(tv_series.release_year) (0.6627000000000001)
 - movie.mid = max(movie.mid) (0.5938)
 - company.name = max(company.name) (0.5753)
 - company.country_code = max(company.country_code) (0.5602)
Pruned candidates for movie: 1
 - movie.title (1.0)
Pruned candidates for Gabriele Ferzetti: 1
 - actor.name = 'Gabriele Ferzetti' (1.0)
Pruned candidates for acted: 5
 - written_by (0.652)
 - directed_by (0.65105)
 - made_by (0.6064)
 - cast (0.5967)
 - actor (0.58095)
TOTAL INTERPS COUNT: 25
Returning 0.0 because Steiner tree doesn't contain written_by
Returning 0.0 because Steiner tree doesn't contain written_by
Returning 0.0 because Steiner tree doesn't contain written_by
Returning 0.0 because Steiner tree doesn't contain written_by
Returning 0.0 because Steiner tree doesn't contain written_by
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain made_by
Returning 0.0 because Steiner tree doesn't contain made_by
Returning 0.0 because Steiner tree doesn't contain made_by
Returning 0.0 because Steiner tree doesn't contain made_by
Returning 0.0 because Steiner tree doesn't contain made_by
TOTAL SCORE: 0.65289365500208, TIES: 0
--
latest :: movie.release_year = max(movie.release_year) : tv_series.release_year = max(tv_series.release_year) (0.6627000000000001)
movie :: movie.title : movie.title (1.0)
Gabriele Ferzetti :: actor.name = 'Gabriele Ferzetti' : actor.name = 'Gabriele Ferzetti' (1.0)
acted :: actor; cast : cast (0.5967)
QUERY > [Ties0: N] [Ties1: N] [Ties1/t: 0.00]
FRAGMENT (Total: 4)> [Ties0: 3] [Ties1: 3] [Ties1/t: 3.00]
Saving cache...
Saved cache to <data/imdb/imdb.cands.cache>!
== QUERY ID: 76 ==
Pruned candidates for films: 5
 - movie.title (0.86815)
 - actor.name (0.7181500000000001)
 - genre.genre (0.7158)
 - tv_series.num_of_episodes (0.6484995)
 - tv_series.title (0.64715)
Pruned candidates for Rowan Atkinson: 4
 - writer.name = 'Rowan Atkinson' (1.0)
 - director.name = 'Rowan Atkinson' (1.0)
 - actor.name = 'Rowan Atkinson' (1.0)
 - producer.name = 'Rowan Atkinson' (1.0)
Pruned candidates for Mr. Bean: 3
 - keyword.keyword = 'mr-bean' (1.0)
 - tv_series.title = 'Mr. Bean' (0.99999999)
 - cast.role = 'Mr. Bean' (0.99999999)
TOTAL INTERPS COUNT: 60
TOTAL SCORE: 0.7750856306546845, TIES: 0
--
films :: movie.title : movie.title (0.86815)
Rowan Atkinson :: actor.name = 'Rowan Atkinson' : producer.name = 'Rowan Atkinson' (1.0)
Mr. Bean :: cast.role = 'Mr. Bean' : cast.role = 'Mr. Bean' (0.99999999)
QUERY > [Ties0: N] [Ties1: N] [Ties1/t: 0.00]
FRAGMENT (Total: 3)> [Ties0: 2] [Ties1: 2] [Ties1/t: 2.00]
== QUERY ID: 67 ==
Pruned candidates for year: 6
 - movie.release_year (0.83155)
 - tv_series.release_year (0.83155)
 - writer.birth_year (0.79285)
 - producer.birth_year (0.79285)
 - actor.birth_year (0.79285)
 - director.birth_year (0.79285)
Pruned candidates for movie The Imitation Game: 1
 - movie.title = 'The Imitation Game' (1.0)
TOTAL INTERPS COUNT: 6
TOTAL SCORE: 0.7912362473033918, TIES: 0
--
year :: movie.release_year : movie.release_year (0.83155)
movie The Imitation Game :: movie.title = 'The Imitation Game' : movie.title = 'The Imitation Game' (1.0)
QUERY > [Ties0: Y] [Ties1: Y] [Ties1/t: 1.00]
FRAGMENT (Total: 2)> [Ties0: 2] [Ties1: 2] [Ties1/t: 2.00]
== QUERY ID: 79 ==
Pruned candidates for acted: 5
 - director.did (0.63595)
 - directed_by.did (0.63595)
 - cast.role (0.61725)
 - cast.role (0.5967)
 - actor.name (0.58095)
Pruned candidates for role Mr. Bean: 1
 - cast.role = 'Mr. Bean' (0.99999999)
TOTAL INTERPS COUNT: 5
TOTAL SCORE: 0.6578183096027934, TIES: 0
--
acted :: actor.name : actor.name (0.58095)
role Mr. Bean :: cast.role = 'Mr. Bean' : cast.role = 'Mr. Bean' (0.99999999)
QUERY > [Ties0: Y] [Ties1: Y] [Ties1/t: 1.00]
FRAGMENT (Total: 2)> [Ties0: 2] [Ties1: 2] [Ties1/t: 2.00]
== QUERY ID: 99 ==
Pruned candidates for movies: 1
 - count(movie.title) (0.9999999)
Pruned candidates for Persians: 2
 - cast.role = 'Persian' (0.9999999)
 - keyword.keyword = 'persian' (0.9999999)
Pruned candidates for released after 1990: 7
 - movie.release_year > 1990 (0.882537310826007)
 - tv_series.release_year > 1990 (0.882537310826007)
 - movie.mid > 1990 (0.7895490200107907)
 - director.birth_year > 1990 (0.7873614163775108)
 - writer.birth_year > 1990 (0.7873614163775108)
 - actor.birth_year > 1990 (0.7873614163775108)
 - producer.birth_year > 1990 (0.7873614163775108)
TOTAL INTERPS COUNT: 14
TOTAL SCORE: 0.787363226319331, TIES: 0
--
movies :: count(movie.title) : count(movie.title) (0.9999999)
Persians :: keyword.keyword = 'persian' : cast.role = 'Persian' (0.9999999)
released after 1990 :: movie.release_year > 1990 : movie.release_year > 1990 (0.882537310826007)
QUERY > [Ties0: N] [Ties1: N] [Ties1/t: 0.00]
FRAGMENT (Total: 3)> [Ties0: 2] [Ties1: 2] [Ties1/t: 2.00]
== QUERY ID: 24 ==
Pruned candidates for acted: 5
 - director.did (0.63595)
 - directed_by.did (0.63595)
 - cast.role (0.61725)
 - cast.role (0.5967)
 - actor.name (0.58095)
Pruned candidates for John Nash: 4
 - actor.name = 'John Nash' (1.0)
 - director.name = 'John Nash' (1.0)
 - writer.name = 'John Nash' (1.0)
 - cast.role = 'John Nash' (1.0)
Pruned candidates for movie A Beautiful Mind: 1
 - movie.title = 'A Beautiful Mind' (1.0)
TOTAL INTERPS COUNT: 20
TOTAL SCORE: 0.725747894075229, TIES: 0
--
acted :: actor.name : actor.name (0.58095)
John Nash :: cast.role = 'John Nash' : cast.role = 'John Nash' (1.0)
movie A Beautiful Mind :: movie.title = 'A Beautiful Mind' : movie.title = 'A Beautiful Mind' (1.0)
QUERY > [Ties0: Y] [Ties1: Y] [Ties1/t: 1.00]
FRAGMENT (Total: 3)> [Ties0: 3] [Ties1: 3] [Ties1/t: 3.00]
Saving cache...
Saved cache to <data/imdb/imdb.cands.cache>!
== QUERY ID: 23 ==
Pruned candidates for director: 1
 - director.name (1.0)
Pruned candidates for movie Joy: 3
 - movie.title = 'Joy' (1.0)
 - movie.title = 'Joyô' (0.99999999)
 - movie.title = 'Joys' (0.9999999)
Pruned candidates for 2015: 5
 - tags.id = 2015 (0.9999)
 - movie.release_year = 2015 (0.9999)
 - keyword.id = 2015 (0.9999)
 - company.id = 2015 (0.9999)
 - tv_series.release_year = 2015 (0.9999)
TOTAL INTERPS COUNT: 15
TOTAL SCORE: 0.8159222691361919, TIES: 0
--
director :: director.name : director.name (1.0)
movie Joy :: movie.title = 'Joy' : movie.title = 'Joy' (1.0)
2015 :: movie.release_year = 2015 : tags.id = 2015 (0.9999)
QUERY > [Ties0: N] [Ties1: N] [Ties1/t: 0.00]
FRAGMENT (Total: 3)> [Ties0: 2] [Ties1: 2] [Ties1/t: 2.00]
== QUERY ID: 62 ==
Pruned candidates for actors: 1
 - actor.name (0.9999999)
Pruned candidates for Italy: 6
 - director.nationality = 'Italy' (1.0)
 - actor.nationality = 'Italy' (1.0)
 - producer.nationality = 'Italy' (1.0)
 - writer.nationality = 'Italy' (1.0)
 - cast.role = 'Italis' (0.9999999)
 - cast.role = 'Itali' (0.9999999)
Pruned candidates for born after 1980: 5
 - writer.birth_year > 1980 (0.8680003744238824)
 - director.birth_year > 1980 (0.8680003744238824)
 - producer.birth_year > 1980 (0.8680003744238824)
 - actor.birth_year > 1980 (0.8680003744238824)
 - movie.mid > 1980 (0.7896123384294347)
TOTAL INTERPS COUNT: 30
TOTAL SCORE: 0.7831266319320701, TIES: 0
--
actors :: actor.name : actor.name (0.9999999)
Italy :: actor.nationality = 'Italy' : actor.nationality = 'Italy' (1.0)
born after 1980 :: actor.birth_year > 1980 : actor.birth_year > 1980 (0.8680003744238824)
QUERY > [Ties0: Y] [Ties1: Y] [Ties1/t: 1.00]
FRAGMENT (Total: 3)> [Ties0: 3] [Ties1: 3] [Ties1/t: 3.00]
== QUERY ID: 93 ==
Pruned candidates for movies: 1
 - count(movie.title) (0.9999999)
Pruned candidates for Ronald Reagan: 2
 - producer.name = 'Ronald Reagan' (1.0)
 - actor.name = 'Ronald Reagan' (1.0)
Pruned candidates for act: 5
 - directed_by (0.61295)
 - written_by (0.6098)
 - cast (0.59865)
 - actor (0.5897)
 - movie (0.58385)
TOTAL INTERPS COUNT: 10
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain written_by
Returning 0.0 because Steiner tree doesn't contain written_by
Returning 0.0 because Steiner tree doesn't contain cast
Returning 0.0 because Steiner tree doesn't contain actor
TOTAL SCORE: 0.7531683674193385, TIES: 0
--
movies :: count(movie.title) : count(movie.title) (0.9999999)
Ronald Reagan :: actor.name = 'Ronald Reagan' : actor.name = 'Ronald Reagan' (1.0)
act :: actor; cast : cast (0.59865)
QUERY > [Ties0: Y] [Ties1: Y] [Ties1/t: 1.00]
FRAGMENT (Total: 3)> [Ties0: 3] [Ties1: 3] [Ties1/t: 3.00]
== QUERY ID: 10 ==
Pruned candidates for born: 8
 - actor.birth_year (0.745)
 - producer.birth_year (0.745)
 - director.birth_year (0.745)
 - writer.birth_year (0.745)
 - writer.birth_city (0.73905)
 - producer.birth_city (0.73905)
 - director.birth_city (0.73905)
 - actor.birth_city (0.73905)
Pruned candidates for Kevin Spacey: 4
 - producer.name = 'Kevin Spacey' (1.0)
 - writer.name = 'Kevin Spacey' (1.0)
 - director.name = 'Kevin Spacey' (1.0)
 - actor.name = 'Kevin Spacey' (1.0)
TOTAL INTERPS COUNT: 32
TOTAL SCORE: 0.7660999546671281, TIES: 0
--
born :: actor.birth_year; producer.birth_year; director.birth_year; writer.birth_year : actor.birth_year (0.745)
Kevin Spacey :: actor.name = 'Kevin Spacey'; producer.name = 'Kevin Spacey'; director.name = 'Kevin Spacey'; writer.name = 'Kevin Spacey' : actor.name = 'Kevin Spacey' (1.0)
QUERY > [Ties0: Y] [Ties1: Y] [Ties1/t: 1.00]
FRAGMENT (Total: 2)> [Ties0: 2] [Ties1: 2] [Ties1/t: 2.00]
== QUERY ID: 115 ==
Pruned candidates for actors: 1
 - actor.name (0.9999999)
Pruned candidates for acted: 5
 - written_by (0.652)
 - directed_by (0.65105)
 - made_by (0.6064)
 - cast (0.5967)
 - actor (0.58095)
Pruned candidates for movie: 1
 - movie (1.0)
Pruned candidates for Tom Hanks: 4
 - producer.name = 'Tom Hanks' (1.0)
 - actor.name = 'Tom Hanks' (1.0)
 - writer.name = 'Tom Hanks' (1.0)
 - director.name = 'Tom Hanks' (1.0)
TOTAL INTERPS COUNT: 20
Returning 0.0 because Steiner tree doesn't contain written_by
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain written_by
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain made_by
Returning 0.0 because Steiner tree doesn't contain cast
Returning 0.0 because Steiner tree doesn't contain movie
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain made_by
Returning 0.0 because Steiner tree doesn't contain written_by
Returning 0.0 because Steiner tree doesn't contain made_by
TOTAL SCORE: 0.742603114461188, TIES: 0
--
actors :: actor.name : actor.name (0.9999999)
acted :: actor; cast : directed_by (0.65105)
movie :: movie : movie (1.0)
Tom Hanks :: actor.name = 'Tom Hanks' : director.name = 'Tom Hanks' (1.0)
QUERY > [Ties0: N] [Ties1: N] [Ties1/t: 0.00]
FRAGMENT (Total: 4)> [Ties0: 2] [Ties1: 2] [Ties1/t: 2.00]
Saving cache...
Saved cache to <data/imdb/imdb.cands.cache>!
== QUERY ID: 107 ==
Pruned candidates for female: 7
 - producer.gender = 'female' (1.0)
 - keyword.keyword = 'female' (1.0)
 - writer.gender = 'female' (1.0)
 - actor.gender = 'female' (1.0)
 - director.gender = 'female' (1.0)
 - movie.title = 'Female' (1.0)
 - cast.role = 'Female' (1.0)
Pruned candidates for actors: 1
 - count(actor.name) (0.9999999)
Pruned candidates for New York City: 7
 - actor.birth_city = 'New York City' (1.0)
 - writer.birth_city = 'New York City' (1.0)
 - producer.birth_city = 'New York City' (1.0)
 - movie.title = 'New York City' (1.0)
 - director.birth_city = 'New York City' (1.0)
 - keyword.keyword = 'new-york-city' (1.0)
 - cast.role = 'New York City' (1.0)
Pruned candidates for after 1980: 6
 - movie.mid > 1980 (0.7953217839340251)
 - director.did > 1980 (0.7732012739254895)
 - actor.birth_year > 1980 (0.7726838227891146)
 - writer.birth_year > 1980 (0.7726838227891146)
 - director.birth_year > 1980 (0.7726838227891146)
 - producer.birth_year > 1980 (0.7726838227891146)
TOTAL INTERPS COUNT: 294
TOTAL SCORE: 0.8713938843841844, TIES: 0
--
female :: actor.gender = 'female' : actor.gender = 'female' (1.0)
actors :: count(actor.name) : count(actor.name) (0.9999999)
New York City :: actor.birth_city = 'New York City' : actor.birth_city = 'New York City' (1.0)
after 1980 :: actor.birth_year > 1980 : actor.birth_year > 1980 (0.7726838227891146)
QUERY > [Ties0: Y] [Ties1: Y] [Ties1/t: 1.00]
FRAGMENT (Total: 4)> [Ties0: 4] [Ties1: 4] [Ties1/t: 4.00]
== QUERY ID: 40 ==
Pruned candidates for movies: 1
 - movie.title (0.9999999)
Pruned candidates for Autism: 2
 - movie.title = 'Autism' (1.0)
 - keyword.keyword = 'autism' (1.0)
TOTAL INTERPS COUNT: 2
TOTAL SCORE: 0.8374633924632668, TIES: 0
--
movies :: movie.title : movie.title (0.9999999)
Autism :: keyword.keyword = 'autism' : movie.title = 'Autism' (1.0)
QUERY > [Ties0: N] [Ties1: N] [Ties1/t: 0.00]
FRAGMENT (Total: 2)> [Ties0: 1] [Ties1: 1] [Ties1/t: 1.00]
== QUERY ID: 29 ==
Pruned candidates for actor: 1
 - actor.name (1.0)
Pruned candidates for played: 5
 - cast (0.6295)
 - actor (0.5995)
 - tv_series (0.59235)
 - made_by (0.57695)
 - movie (0.5751)
Pruned candidates for Vinny Gambini: 1
 - cast.role = 'Vinny Gambini' (1.0)
Pruned candidates for movie My Cousin Vinny: 1
 - movie.title = 'My Cousin Vinny' (1.0)
TOTAL INTERPS COUNT: 5
Returning 0.0 because Steiner tree doesn't contain made_by
TOTAL SCORE: 0.7708084459543414, TIES: 0
--
actor :: actor.name : actor.name (1.0)
played :: actor; cast : cast (0.6295)
Vinny Gambini :: cast.role = 'Vinny Gambini' : cast.role = 'Vinny Gambini' (1.0)
movie My Cousin Vinny :: movie.title = 'My Cousin Vinny' : movie.title = 'My Cousin Vinny' (1.0)
QUERY > [Ties0: Y] [Ties1: Y] [Ties1/t: 1.00]
FRAGMENT (Total: 4)> [Ties0: 4] [Ties1: 4] [Ties1/t: 4.00]
== QUERY ID: 74 ==
Pruned candidates for actors: 1
 - actor.name (0.9999999)
Pruned candidates for Canada: 10
 - actor.name = 'Canada' (1.0)
 - producer.nationality = 'Canada' (1.0)
 - director.name = 'CANADA' (1.0)
 - actor.nationality = 'Canada' (1.0)
 - producer.name = 'CANADA' (1.0)
 - writer.nationality = 'Canada' (1.0)
 - director.nationality = 'Canada' (1.0)
 - company.name = 'Canada' (1.0)
 - movie.title = 'Canada' (1.0)
 - writer.name = 'CANADA' (1.0)
Pruned candidates for James Bond movies: 5
 - movie.title = 'James Bond' (0.94335)
 - movie.title = 'James Bond 777' (0.9433495000000001)
 - movie.title = 'Jatt James Bond' (0.9433495000000001)
 - movie.title = '007: 40 Years of Humour in the James Bond Films' (0.9351479899999999)
 - movie.title = '30 Years of James Bond' (0.923699)
TOTAL INTERPS COUNT: 50
TOTAL SCORE: 0.8349142231106081, TIES: 0
--
actors :: actor.name : actor.name (0.9999999)
Canada :: actor.nationality = 'Canada' : actor.nationality = 'Canada' (1.0)
James Bond movies :: movie.title = 'James Bond' : movie.title = 'James Bond' (0.94335)
QUERY > [Ties0: Y] [Ties1: Y] [Ties1/t: 1.00]
FRAGMENT (Total: 3)> [Ties0: 3] [Ties1: 3] [Ties1/t: 3.00]
== QUERY ID: 55 ==
Pruned candidates for movies: 1
 - movie.title (0.9999999)
Pruned candidates for featuring: 5
 - tv_series (0.6595)
 - directed_by (0.59885)
 - made_by (0.57665)
 - written_by (0.5763)
 - cast (0.57585)
Pruned candidates for Kevin Spacey: 4
 - producer.name = 'Kevin Spacey' (1.0)
 - writer.name = 'Kevin Spacey' (1.0)
 - director.name = 'Kevin Spacey' (1.0)
 - actor.name = 'Kevin Spacey' (1.0)
TOTAL INTERPS COUNT: 20
Returning 0.0 because Steiner tree doesn't contain tv_series
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain written_by
Returning 0.0 because Steiner tree doesn't contain cast
Returning 0.0 because Steiner tree doesn't contain tv_series
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain made_by
Returning 0.0 because Steiner tree doesn't contain cast
Returning 0.0 because Steiner tree doesn't contain made_by
Returning 0.0 because Steiner tree doesn't contain written_by
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain made_by
Returning 0.0 because Steiner tree doesn't contain written_by
TOTAL SCORE: 0.7527492936551609, TIES: 0
--
movies :: movie.title : movie.title (0.9999999)
featuring :: actor; cast : tv_series (0.6595)
Kevin Spacey :: actor.name = 'Kevin Spacey' : actor.name = 'Kevin Spacey' (1.0)
QUERY > [Ties0: N] [Ties1: N] [Ties1/t: 0.00]
FRAGMENT (Total: 3)> [Ties0: 2] [Ties1: 2] [Ties1/t: 2.00]
Saving cache...
Saved cache to <data/imdb/imdb.cands.cache>!
== QUERY ID: 19 ==
Pruned candidates for movies: 1
 - movie.title (0.9999999)
Pruned candidates for directed by: 1
 - directed_by (1.0)
Pruned candidates for Steven Spielberg: 4
 - writer.name = 'Steven Spielberg' (1.0)
 - director.name = 'Steven Spielberg' (1.0)
 - actor.name = 'Steven Spielberg' (1.0)
 - producer.name = 'Steven Spielberg' (1.0)
Pruned candidates for after 2006: 6
 - movie.mid > 2006 (0.7953217839340251)
 - director.did > 2006 (0.7732012739254895)
 - producer.birth_year > 2006 (0.7726838227891146)
 - actor.birth_year > 2006 (0.7726838227891146)
 - tv_series.release_year > 2006 (0.7693768907369131)
 - movie.release_year > 2006 (0.7693768907369131)
TOTAL INTERPS COUNT: 24
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain directed_by
TOTAL SCORE: 0.792868342898173, TIES: 0
--
movies :: movie.title : movie.title (0.9999999)
directed by :: directed_by; director : directed_by (1.0)
Steven Spielberg :: director.name = 'Steven Spielberg' : director.name = 'Steven Spielberg' (1.0)
after 2006 :: movie.release_year > 2006 : movie.release_year > 2006 (0.7693768907369131)
QUERY > [Ties0: Y] [Ties1: Y] [Ties1/t: 1.00]
FRAGMENT (Total: 4)> [Ties0: 4] [Ties1: 4] [Ties1/t: 4.00]
== QUERY ID: 78 ==
Pruned candidates for where from: 6
 - movie.mid (0.61765)
 - director.did (0.6073500000000001)
 - directed_by.did (0.6073500000000001)
 - company.country_code (0.58395)
 - actor.aid (0.5801499999999999)
 - cast.aid (0.5801499999999999)
Pruned candidates for director: 1
 - director (1.0)
Pruned candidates for The Past: 3
 - cast.role = 'The Past' (1.0)
 - movie.title = 'The Past' (1.0)
 - keyword.keyword = 'the-past' (1.0)
TOTAL INTERPS COUNT: 18
Returning 0.0 because Steiner tree doesn't contain director
Returning 0.0 because Steiner tree doesn't contain director
Returning 0.0 because Steiner tree doesn't contain director
Returning 0.0 because Steiner tree doesn't contain director
Returning 0.0 because Steiner tree doesn't contain director
Returning 0.0 because Steiner tree doesn't contain director
Returning 0.0 because Steiner tree doesn't contain director
Returning 0.0 because Steiner tree doesn't contain director
Returning 0.0 because Steiner tree doesn't contain director
Returning 0.0 because Steiner tree doesn't contain director
Returning 0.0 because Steiner tree doesn't contain director
Returning 0.0 because Steiner tree doesn't contain director
Returning 0.0 because Steiner tree doesn't contain director
Returning 0.0 because Steiner tree doesn't contain director
Returning 0.0 because Steiner tree doesn't contain director
TOTAL SCORE: 0.6876671759979652, TIES: 0
--
where from :: director.birth_city; director.nationality : director.did (0.6073500000000001)
director :: director : director (1.0)
The Past :: movie.title = 'The Past' : movie.title = 'The Past' (1.0)
QUERY > [Ties0: N] [Ties1: N] [Ties1/t: 0.00]
FRAGMENT (Total: 3)> [Ties0: 2] [Ties1: 2] [Ties1/t: 2.00]
Saving cache...
Saved cache to <data/imdb/imdb.cands.cache>!
==== FOLD RESULTS ====
21,21,21.000,33,81,83,82.000,96
00:36  INFO: ===== FOLD 1 =====
Original log size: 97
Trimming log to 100.0%...
Final log size: 97
00:37  INFO: ===== Parsing Results =====
00:37  INFO: Total Queries: 97
00:37  INFO: Correctly Parsed: 97/97

Loading cache from: <data/imdb/imdb.cands.cache>
Cache loaded!
== QUERY ID: 86 ==
Pruned candidates for directors: 1
 - director.name (0.9999999)
Pruned candidates for movies: 1
 - movie (0.9999999)
Pruned candidates for nuclear weapons: 1
 - keyword.keyword = 'nuclear-weapons' (1.0)
TOTAL INTERPS COUNT: 1
TOTAL SCORE: 0.8071634506607797, TIES: 0
--
directors :: director.name : director.name (0.9999999)
movies :: movie : movie (0.9999999)
nuclear weapons :: keyword.keyword = 'nuclear-weapons' : keyword.keyword = 'nuclear-weapons' (1.0)
QUERY > [Ties0: Y] [Ties1: Y] [Ties1/t: 1.00]
FRAGMENT (Total: 3)> [Ties0: 3] [Ties1: 3] [Ties1/t: 3.00]
Saving cache...
Saved cache to <data/imdb/imdb.cands.cache>!
== QUERY ID: 82 ==
Pruned candidates for company: 1
 - company.name (1.0)
Pruned candidates for Mickey Mouse series: 5
 - tv_series.title = 'Mickey Mouse' (0.9581)
 - tv_series.title = 'Mickey Mouse Works' (0.9238)
 - tv_series.title = 'The Mickey Mouse Club' (0.91045)
 - tv_series.title = 'The New Mickey Mouse Club' (0.89505)
 - tv_series.title = 'Mickey Mouse Clubhouse' (0.8897999999999999)
TOTAL INTERPS COUNT: 5
TOTAL SCORE: 0.7921893710543011, TIES: 0
--
company :: company.name : company.name (1.0)
Mickey Mouse series :: tv_series.title = 'Mickey Mouse' : tv_series.title = 'Mickey Mouse' (0.9581)
QUERY > [Ties0: Y] [Ties1: Y] [Ties1/t: 1.00]
FRAGMENT (Total: 2)> [Ties0: 2] [Ties1: 2] [Ties1/t: 2.00]
== QUERY ID: 37 ==
Pruned candidates for movies: 1
 - movie.title (0.9999999)
Pruned candidates for Walt Disney: 5
 - company.name = 'Walt Disney' (1.0)
 - director.name = 'Walt Disney' (1.0)
 - writer.name = 'Walt Disney' (1.0)
 - actor.name = 'Walt Disney' (1.0)
 - producer.name = 'Walt Disney' (1.0)
Pruned candidates for after 2010: 5
 - movie.mid > 2010 (0.7953217839340251)
 - director.did > 2010 (0.7732012739254895)
 - actor.birth_year > 2010 (0.7726838227891146)
 - tv_series.release_year > 2010 (0.7693768907369131)
 - movie.release_year > 2010 (0.7693768907369131)
TOTAL INTERPS COUNT: 25
TOTAL SCORE: 0.7871263947626309, TIES: 0
--
movies :: movie.title : movie.title (0.9999999)
Walt Disney :: company.name = 'Walt Disney' : director.name = 'Walt Disney' (1.0)
after 2010 :: movie.release_year > 2010 : movie.release_year > 2010 (0.7693768907369131)
QUERY > [Ties0: N] [Ties1: N] [Ties1/t: 0.00]
FRAGMENT (Total: 3)> [Ties0: 2] [Ties1: 2] [Ties1/t: 2.00]
== QUERY ID: 48 ==
Pruned candidates for movies: 1
 - movie.title (0.9999999)
Pruned candidates for featuring: 5
 - tv_series (0.6595)
 - directed_by (0.59885)
 - made_by (0.57665)
 - written_by (0.5763)
 - cast (0.57585)
Pruned candidates for Kerry Washington: 2
 - actor.name = 'Kerry Washington' (1.0)
 - producer.name = 'Kerry Washington' (1.0)
TOTAL INTERPS COUNT: 10
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain written_by
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain written_by
Returning 0.0 because Steiner tree doesn't contain cast
TOTAL SCORE: 0.7566395080475674, TIES: 0
--
movies :: movie.title : movie.title (0.9999999)
featuring :: actor; cast : tv_series (0.6595)
Kerry Washington :: actor.name = 'Kerry Washington' : actor.name = 'Kerry Washington' (1.0)
QUERY > [Ties0: N] [Ties1: N] [Ties1/t: 0.00]
FRAGMENT (Total: 3)> [Ties0: 2] [Ties1: 2] [Ties1/t: 2.00]
== QUERY ID: 90 ==
Pruned candidates for movies: 1
 - count(movie.title) (0.9999999)
Pruned candidates for year 2012: 6
 - movie.release_year = 2012 (0.9118480383265624)
 - tv_series.release_year = 2012 (0.9118480383265624)
 - actor.birth_year = 2012 (0.8903767264478559)
 - keyword.id = 2012 (0.6706750442651046)
 - company.id = 2012 (0.6706750442651046)
 - tags.id = 2012 (0.6706750442651046)
TOTAL INTERPS COUNT: 6
TOTAL SCORE: 0.8447380416994801, TIES: 0
--
movies :: count(movie.title) : count(movie.title) (0.9999999)
year 2012 :: movie.release_year = 2012 : movie.release_year = 2012 (0.9118480383265624)
QUERY > [Ties0: Y] [Ties1: Y] [Ties1/t: 1.00]
FRAGMENT (Total: 2)> [Ties0: 2] [Ties1: 2] [Ties1/t: 2.00]
== QUERY ID: 45 ==
Pruned candidates for directed: 5
 - director.name (0.6349)
 - movie.title (0.62815)
 - cast.role (0.6082)
 - writer.name (0.60425)
 - actor.name (0.5967)
Pruned candidates for movie Inglourious Basterds: 1
 - movie.title = 'Inglourious Basterds' (1.0)
TOTAL INTERPS COUNT: 5
TOTAL SCORE: 0.6880662238202067, TIES: 0
--
directed :: director.name : actor.name (0.5967)
movie Inglourious Basterds :: movie.title = 'Inglourious Basterds' : movie.title = 'Inglourious Basterds' (1.0)
QUERY > [Ties0: N] [Ties1: N] [Ties1/t: 0.00]
FRAGMENT (Total: 2)> [Ties0: 1] [Ties1: 1] [Ties1/t: 1.00]
Saving cache...
Saved cache to <data/imdb/imdb.cands.cache>!
== QUERY ID: 59 ==
Pruned candidates for female: 7
 - producer.gender = 'female' (1.0)
 - keyword.keyword = 'female' (1.0)
 - writer.gender = 'female' (1.0)
 - actor.gender = 'female' (1.0)
 - director.gender = 'female' (1.0)
 - movie.title = 'Female' (1.0)
 - cast.role = 'Female' (1.0)
Pruned candidates for actors: 1
 - actor.name (0.9999999)
Pruned candidates for Austin: 9
 - director.birth_city = 'Austin' (1.0)
 - producer.name = 'Austin' (1.0)
 - actor.name = 'Austin' (1.0)
 - producer.birth_city = 'Austin' (1.0)
 - writer.birth_city = 'Austin' (1.0)
 - actor.birth_city = 'Austin' (1.0)
 - movie.title = 'Austin' (1.0)
 - writer.name = 'Austin' (1.0)
 - director.name = 'Austin' (1.0)
TOTAL INTERPS COUNT: 63
TOTAL SCORE: 0.9128796594086938, TIES: 0
--
female :: actor.gender = 'female' : actor.gender = 'female' (1.0)
actors :: actor.name : actor.name (0.9999999)
Austin :: actor.birth_city = 'Austin' : actor.birth_city = 'Austin' (1.0)
QUERY > [Ties0: Y] [Ties1: Y] [Ties1/t: 1.00]
FRAGMENT (Total: 3)> [Ties0: 3] [Ties1: 3] [Ties1/t: 3.00]
== QUERY ID: 27 ==
Pruned candidates for budget: 2
 - movie.budget (1.0)
 - tv_series.budget (1.0)
Pruned candidates for movie Juno: 1
 - movie.title = 'Juno' (1.0)
Pruned candidates for 2007: 7
 - tv_series.release_year = 2007 (0.9999)
 - keyword.id = 2007 (0.9999)
 - producer.birth_year = 2007 (0.9999)
 - tags.id = 2007 (0.9999)
 - actor.birth_year = 2007 (0.9999)
 - movie.release_year = 2007 (0.9999)
 - company.id = 2007 (0.9999)
TOTAL INTERPS COUNT: 14
TOTAL SCORE: 0.828866681315187, TIES: 0
--
budget :: movie.budget : movie.budget (1.0)
movie Juno :: movie.title = 'Juno' : movie.title = 'Juno' (1.0)
2007 :: movie.release_year = 2007 : tags.id = 2007 (0.9999)
QUERY > [Ties0: N] [Ties1: N] [Ties1/t: 0.00]
FRAGMENT (Total: 3)> [Ties0: 2] [Ties1: 2] [Ties1/t: 2.00]
== QUERY ID: 31 ==
Pruned candidates for movies: 1
 - movie.title (0.9999999)
Pruned candidates for directors: 1
 - director (0.9999999)
Pruned candidates for Los Angeles: 5
 - writer.birth_city = 'Los Angeles' (1.0)
 - movie.title = 'Los Angeles' (1.0)
 - director.birth_city = 'Los Angeles' (1.0)
 - actor.birth_city = 'Los Angeles' (1.0)
 - producer.birth_city = 'Los Angeles' (1.0)
TOTAL INTERPS COUNT: 5
Returning 0.0 because Steiner tree doesn't contain director
Returning 0.0 because Steiner tree doesn't contain director
Returning 0.0 because Steiner tree doesn't contain director
Returning 0.0 because Steiner tree doesn't contain director
TOTAL SCORE: 0.8102597301875174, TIES: 0
--
movies :: movie.title : movie.title (0.9999999)
directors :: directed_by; director : director (0.9999999)
Los Angeles :: director.birth_city = 'Los Angeles' : director.birth_city = 'Los Angeles' (1.0)
QUERY > [Ties0: Y] [Ties1: Y] [Ties1/t: 1.00]
FRAGMENT (Total: 3)> [Ties0: 3] [Ties1: 3] [Ties1/t: 3.00]
== QUERY ID: 94 ==
Pruned candidates for actors: 1
 - count(actor.name) (0.9999999)
Pruned candidates for Los Angeles: 5
 - writer.birth_city = 'Los Angeles' (1.0)
 - movie.title = 'Los Angeles' (1.0)
 - director.birth_city = 'Los Angeles' (1.0)
 - actor.birth_city = 'Los Angeles' (1.0)
 - producer.birth_city = 'Los Angeles' (1.0)
Pruned candidates for after 2000: 6
 - movie.mid > 2000 (0.7953217839340251)
 - director.did > 2000 (0.7732012739254895)
 - writer.birth_year > 2000 (0.7726838227891146)
 - director.birth_year > 2000 (0.7726838227891146)
 - producer.birth_year > 2000 (0.7726838227891146)
 - actor.birth_year > 2000 (0.7726838227891146)
TOTAL INTERPS COUNT: 30
TOTAL SCORE: 0.8661009360198333, TIES: 0
--
actors :: count(actor.name) : count(actor.name) (0.9999999)
Los Angeles :: actor.birth_city = 'Los Angeles' : actor.birth_city = 'Los Angeles' (1.0)
after 2000 :: actor.birth_year > 2000 : actor.birth_year > 2000 (0.7726838227891146)
QUERY > [Ties0: Y] [Ties1: Y] [Ties1/t: 1.00]
FRAGMENT (Total: 3)> [Ties0: 3] [Ties1: 3] [Ties1/t: 3.00]
== QUERY ID: 36 ==
Pruned candidates for actors: 1
 - actor.name (0.9999999)
Pruned candidates for New York City: 7
 - actor.birth_city = 'New York City' (1.0)
 - writer.birth_city = 'New York City' (1.0)
 - producer.birth_city = 'New York City' (1.0)
 - movie.title = 'New York City' (1.0)
 - director.birth_city = 'New York City' (1.0)
 - keyword.keyword = 'new-york-city' (1.0)
 - cast.role = 'New York City' (1.0)
Pruned candidates for after 1990: 6
 - movie.mid > 1990 (0.7953217839340251)
 - director.did > 1990 (0.7732012739254895)
 - producer.birth_year > 1990 (0.7726838227891146)
 - actor.birth_year > 1990 (0.7726838227891146)
 - director.birth_year > 1990 (0.7726838227891146)
 - writer.birth_year > 1990 (0.7726838227891146)
TOTAL INTERPS COUNT: 42
TOTAL SCORE: 0.8661009360198333, TIES: 0
--
actors :: actor.name : actor.name (0.9999999)
New York City :: actor.birth_city = 'New York City' : actor.birth_city = 'New York City' (1.0)
after 1990 :: actor.birth_year > 1990 : actor.birth_year > 1990 (0.7726838227891146)
QUERY > [Ties0: Y] [Ties1: Y] [Ties1/t: 1.00]
FRAGMENT (Total: 3)> [Ties0: 3] [Ties1: 3] [Ties1/t: 3.00]
Saving cache...
Saved cache to <data/imdb/imdb.cands.cache>!
== QUERY ID: 2 ==
Pruned candidates for year born: 8
 - director.birth_year (0.84765)
 - writer.birth_year (0.84765)
 - actor.birth_year (0.84765)
 - producer.birth_year (0.84765)
 - writer.birth_city (0.738)
 - actor.birth_city (0.738)
 - director.birth_city (0.738)
 - producer.birth_city (0.738)
Pruned candidates for Ellen Page: 2
 - actor.name = 'Ellen Page' (1.0)
 - producer.name = 'Ellen Page' (1.0)
TOTAL INTERPS COUNT: 16
TOTAL SCORE: 0.8245315467636852, TIES: 0
--
year born :: actor.birth_year : actor.birth_year (0.84765)
Ellen Page :: actor.name = 'Ellen Page' : actor.name = 'Ellen Page' (1.0)
QUERY > [Ties0: Y] [Ties1: Y] [Ties1/t: 1.00]
FRAGMENT (Total: 2)> [Ties0: 2] [Ties1: 2] [Ties1/t: 2.00]
== QUERY ID: 69 ==
Pruned candidates for directors: 1
 - director.name (0.9999999)
Pruned candidates for Afghanistan: 7
 - actor.birth_city = 'Afghanistan' (1.0)
 - writer.nationality = 'Afghanistan' (1.0)
 - movie.title = 'Afghanistan' (1.0)
 - actor.nationality = 'Afghanistan' (1.0)
 - producer.nationality = 'Afghanistan' (1.0)
 - keyword.keyword = 'afghanistan' (1.0)
 - director.nationality = 'Afghanistan' (1.0)
TOTAL INTERPS COUNT: 7
TOTAL SCORE: 0.8402421418292757, TIES: 0
--
directors :: director.name : director.name (0.9999999)
Afghanistan :: director.nationality = 'Afghanistan' : movie.title = 'Afghanistan' (1.0)
QUERY > [Ties0: N] [Ties1: N] [Ties1/t: 0.00]
FRAGMENT (Total: 2)> [Ties0: 1] [Ties1: 1] [Ties1/t: 1.00]
== QUERY ID: 106 ==
Pruned candidates for movies: 1
 - count(movie.title) (0.9999999)
Pruned candidates for Netflix: 2
 - company.name = 'Netflix' (1.0)
 - keyword.keyword = 'netflix' (1.0)
TOTAL INTERPS COUNT: 2
TOTAL SCORE: 0.8489897548556626, TIES: 0
--
movies :: count(movie.title) : count(movie.title) (0.9999999)
Netflix :: company.name = 'Netflix' : keyword.keyword = 'netflix' (1.0)
QUERY > [Ties0: N] [Ties1: N] [Ties1/t: 0.00]
FRAGMENT (Total: 2)> [Ties0: 1] [Ties1: 1] [Ties1/t: 1.00]
== QUERY ID: 109 ==
Pruned candidates for movies: 1
 - count(movie.title) (0.9999999)
Pruned candidates for Shahab Hosseini: 2
 - writer.name = 'Shahab Hosseini' (1.0)
 - actor.name = 'Shahab Hosseini' (1.0)
Pruned candidates for act: 5
 - directed_by (0.61295)
 - written_by (0.6098)
 - cast (0.59865)
 - actor (0.5897)
 - movie (0.58385)
TOTAL INTERPS COUNT: 10
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain written_by
Returning 0.0 because Steiner tree doesn't contain cast
Returning 0.0 because Steiner tree doesn't contain actor
TOTAL SCORE: 0.7523032915121343, TIES: 0
--
movies :: count(movie.title) : count(movie.title) (0.9999999)
Shahab Hosseini :: actor.name = 'Shahab Hosseini' : actor.name = 'Shahab Hosseini' (1.0)
act :: actor; cast : cast (0.59865)
QUERY > [Ties0: Y] [Ties1: Y] [Ties1/t: 1.00]
FRAGMENT (Total: 3)> [Ties0: 3] [Ties1: 3] [Ties1/t: 3.00]
== QUERY ID: 4 ==
Pruned candidates for movies: 1
 - movie.title (0.9999999)
Pruned candidates for 2015: 5
 - tags.id = 2015 (0.9999)
 - movie.release_year = 2015 (0.9999)
 - keyword.id = 2015 (0.9999)
 - company.id = 2015 (0.9999)
 - tv_series.release_year = 2015 (0.9999)
TOTAL INTERPS COUNT: 5
TOTAL SCORE: 0.880772162566126, TIES: 0
--
movies :: movie.title : movie.title (0.9999999)
2015 :: movie.release_year = 2015 : movie.release_year = 2015 (0.9999)
QUERY > [Ties0: Y] [Ties1: Y] [Ties1/t: 1.00]
FRAGMENT (Total: 2)> [Ties0: 2] [Ties1: 2] [Ties1/t: 2.00]
Saving cache...
Saved cache to <data/imdb/imdb.cands.cache>!
== QUERY ID: 70 ==
Pruned candidates for name: 5
 - writer.name (1.0)
 - company.name (1.0)
 - director.name (1.0)
 - producer.name (1.0)
 - actor.name (1.0)
Pruned candidates for actors: 1
 - actor (0.9999999)
Pruned candidates for Afghanistan: 7
 - actor.birth_city = 'Afghanistan' (1.0)
 - writer.nationality = 'Afghanistan' (1.0)
 - movie.title = 'Afghanistan' (1.0)
 - actor.nationality = 'Afghanistan' (1.0)
 - producer.nationality = 'Afghanistan' (1.0)
 - keyword.keyword = 'afghanistan' (1.0)
 - director.nationality = 'Afghanistan' (1.0)
TOTAL INTERPS COUNT: 35
Returning 0.0 because Steiner tree doesn't contain actor
Returning 0.0 because Steiner tree doesn't contain actor
Returning 0.0 because Steiner tree doesn't contain actor
Returning 0.0 because Steiner tree doesn't contain actor
Returning 0.0 because Steiner tree doesn't contain actor
Returning 0.0 because Steiner tree doesn't contain actor
Returning 0.0 because Steiner tree doesn't contain actor
Returning 0.0 because Steiner tree doesn't contain actor
Returning 0.0 because Steiner tree doesn't contain actor
Returning 0.0 because Steiner tree doesn't contain actor
Returning 0.0 because Steiner tree doesn't contain actor
Returning 0.0 because Steiner tree doesn't contain actor
Returning 0.0 because Steiner tree doesn't contain actor
Returning 0.0 because Steiner tree doesn't contain actor
Returning 0.0 because Steiner tree doesn't contain actor
Returning 0.0 because Steiner tree doesn't contain actor
Returning 0.0 because Steiner tree doesn't contain actor
Returning 0.0 because Steiner tree doesn't contain actor
Returning 0.0 because Steiner tree doesn't contain actor
Returning 0.0 because Steiner tree doesn't contain actor
TOTAL SCORE: 0.9206045111644379, TIES: 0
--
name :: actor.name : actor.name (1.0)
actors :: actor : actor (0.9999999)
Afghanistan :: actor.nationality = 'Afghanistan' : actor.birth_city = 'Afghanistan' (1.0)
QUERY > [Ties0: N] [Ties1: N] [Ties1/t: 0.00]
FRAGMENT (Total: 3)> [Ties0: 2] [Ties1: 2] [Ties1/t: 2.00]
== QUERY ID: 43 ==
Pruned candidates for acts: 5
 - genre.genre (0.5885)
 - cast.role (0.5871999999999999)
 - tv_series.num_of_episodes (0.5842495)
 - cast.role (0.57145)
 - company.country_code (0.5641)
Pruned candidates for Olivia Pope: 2
 - cast.role = 'Olivia Pope' (1.0)
 - actor.name = 'Olivia Pope' (1.0)
Pruned candidates for series Scandal: 5
 - tv_series.title = 'Scandal' (0.93405)
 - tv_series.title = 'Scandal!' (0.93404999)
 - tv_series.title = 'Sungkyunkwan Scandal' (0.9340495)
 - tv_series.title = 'Scandal After Show' (0.8966000000000001)
 - tv_series.title = 'Everyday Scandal' (0.88225)
TOTAL INTERPS COUNT: 50
TOTAL SCORE: 0.6739803345136663, TIES: 0
--
acts :: actor.name : cast.role (0.5871999999999999)
Olivia Pope :: cast.role = 'Olivia Pope' : cast.role = 'Olivia Pope' (1.0)
series Scandal :: tv_series.title = 'Scandal' : tv_series.title = 'Scandal' (0.93405)
QUERY > [Ties0: N] [Ties1: N] [Ties1/t: 0.00]
FRAGMENT (Total: 3)> [Ties0: 2] [Ties1: 2] [Ties1/t: 2.00]
== QUERY ID: 95 ==
Pruned candidates for movies: 1
 - count(movie.title) (0.9999999)
Pruned candidates for Humphrey Bogart: 2
 - actor.name = 'Humphrey Bogart' (1.0)
 - producer.name = 'Humphrey Bogart' (1.0)
Pruned candidates for act: 5
 - directed_by (0.61295)
 - written_by (0.6098)
 - cast (0.59865)
 - actor (0.5897)
 - movie (0.58385)
Pruned candidates for before 1942: 6
 - writer.birth_year < 1942 (0.7510283549906754)
 - actor.birth_year < 1942 (0.7510283549906754)
 - producer.birth_year < 1942 (0.7510283549906754)
 - director.birth_year < 1942 (0.7510283549906754)
 - tv_series.release_year < 1942 (0.746655372310412)
 - movie.release_year < 1942 (0.746655372310412)
TOTAL INTERPS COUNT: 60
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain cast
Returning 0.0 because Steiner tree doesn't contain actor
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain written_by
Returning 0.0 because Steiner tree doesn't contain written_by
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain written_by
Returning 0.0 because Steiner tree doesn't contain written_by
Returning 0.0 because Steiner tree doesn't contain cast
Returning 0.0 because Steiner tree doesn't contain actor
Returning 0.0 because Steiner tree doesn't contain written_by
Returning 0.0 because Steiner tree doesn't contain written_by
Returning 0.0 because Steiner tree doesn't contain cast
Returning 0.0 because Steiner tree doesn't contain actor
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain written_by
Returning 0.0 because Steiner tree doesn't contain written_by
Returning 0.0 because Steiner tree doesn't contain cast
Returning 0.0 because Steiner tree doesn't contain actor
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain written_by
Returning 0.0 because Steiner tree doesn't contain written_by
Returning 0.0 because Steiner tree doesn't contain cast
Returning 0.0 because Steiner tree doesn't contain actor
TOTAL SCORE: 0.675895731596122, TIES: 0
--
movies :: count(movie.title) : count(movie.title) (0.9999999)
Humphrey Bogart :: actor.name = 'Humphrey Bogart' : actor.name = 'Humphrey Bogart' (1.0)
act :: actor; cast : cast (0.59865)
before 1942 :: movie.release_year < 1942 : actor.birth_year < 1942 (0.7510283549906754)
QUERY > [Ties0: N] [Ties1: N] [Ties1/t: 0.00]
FRAGMENT (Total: 4)> [Ties0: 3] [Ties1: 3] [Ties1/t: 3.00]
== QUERY ID: 21 ==
Pruned candidates for actor: 1
 - actor.name (1.0)
Pruned candidates for played: 5
 - cast (0.6295)
 - actor (0.5995)
 - tv_series (0.59235)
 - made_by (0.57695)
 - movie (0.5751)
Pruned candidates for Captain Miller: 1
 - cast.role = 'Captain Miller' (1.0)
Pruned candidates for movie Saving Private Ryan: 1
 - movie.title = 'Saving Private Ryan' (1.0)
TOTAL INTERPS COUNT: 5
TOTAL SCORE: 0.7746402922643864, TIES: 0
--
actor :: actor.name : actor.name (1.0)
played :: actor; cast : cast (0.6295)
Captain Miller :: cast.role = 'Captain Miller' : cast.role = 'Captain Miller' (1.0)
movie Saving Private Ryan :: movie.title = 'Saving Private Ryan' : movie.title = 'Saving Private Ryan' (1.0)
QUERY > [Ties0: Y] [Ties1: Y] [Ties1/t: 1.00]
FRAGMENT (Total: 4)> [Ties0: 4] [Ties1: 4] [Ties1/t: 4.00]
== QUERY ID: 1 ==
Pruned candidates for year: 6
 - movie.release_year (0.83155)
 - tv_series.release_year (0.83155)
 - writer.birth_year (0.79285)
 - producer.birth_year (0.79285)
 - actor.birth_year (0.79285)
 - director.birth_year (0.79285)
Pruned candidates for movie Dead Poets Society: 1
 - movie.title = 'Dead Poets Society' (1.0)
TOTAL INTERPS COUNT: 6
TOTAL SCORE: 0.7872499342375177, TIES: 0
--
year :: movie.release_year : movie.release_year (0.83155)
movie Dead Poets Society :: movie.title = 'Dead Poets Society' : movie.title = 'Dead Poets Society' (1.0)
QUERY > [Ties0: Y] [Ties1: Y] [Ties1/t: 1.00]
FRAGMENT (Total: 2)> [Ties0: 2] [Ties1: 2] [Ties1/t: 2.00]
Saving cache...
Saved cache to <data/imdb/imdb.cands.cache>!
== QUERY ID: 53 ==
Pruned candidates for tv series: 1
 - tv_series.title (1.0)
Pruned candidates for Netflix: 2
 - company.name = 'Netflix' (1.0)
 - keyword.keyword = 'netflix' (1.0)
TOTAL INTERPS COUNT: 2
TOTAL SCORE: 0.81, TIES: 0
--
tv series :: tv_series.title : tv_series.title (1.0)
Netflix :: company.name = 'Netflix' : keyword.keyword = 'netflix' (1.0)
QUERY > [Ties0: N] [Ties1: N] [Ties1/t: 0.00]
FRAGMENT (Total: 2)> [Ties0: 1] [Ties1: 1] [Ties1/t: 1.00]
== QUERY ID: 22 ==
Pruned candidates for genre: 1
 - genre.genre (1.0)
Pruned candidates for movie Jurassic Park: 1
 - movie.title = 'Jurassic Park' (1.0)
TOTAL INTERPS COUNT: 1
TOTAL SCORE: 0.8094733093343135, TIES: 0
--
genre :: genre.genre : genre.genre (1.0)
movie Jurassic Park :: movie.title = 'Jurassic Park' : movie.title = 'Jurassic Park' (1.0)
QUERY > [Ties0: Y] [Ties1: Y] [Ties1/t: 1.00]
FRAGMENT (Total: 2)> [Ties0: 2] [Ties1: 2] [Ties1/t: 2.00]
== QUERY ID: 32 ==
Pruned candidates for company: 1
 - company.name (1.0)
Pruned candidates for movie Juno: 1
 - movie.title = 'Juno' (1.0)
TOTAL INTERPS COUNT: 1
TOTAL SCORE: 0.8278282369978908, TIES: 0
--
company :: company.name : company.name (1.0)
movie Juno :: movie.title = 'Juno' : movie.title = 'Juno' (1.0)
QUERY > [Ties0: Y] [Ties1: Y] [Ties1/t: 1.00]
FRAGMENT (Total: 2)> [Ties0: 2] [Ties1: 2] [Ties1/t: 2.00]
== QUERY ID: 49 ==
Pruned candidates for directors: 1
 - director.name (0.9999999)
Pruned candidates for movies: 1
 - movie (0.9999999)
Pruned candidates for featuring: 5
 - tv_series (0.6595)
 - directed_by (0.59885)
 - made_by (0.57665)
 - written_by (0.5763)
 - cast (0.57585)
Pruned candidates for Kate Winslet: 1
 - actor.name = 'Kate Winslet' (1.0)
TOTAL INTERPS COUNT: 5
Returning 0.0 because Steiner tree doesn't contain movie
Returning 0.0 because Steiner tree doesn't contain made_by
Returning 0.0 because Steiner tree doesn't contain written_by
TOTAL SCORE: 0.711180178553036, TIES: 0
--
directors :: director.name : director.name (0.9999999)
movies :: movie : movie (0.9999999)
featuring :: actor; cast : directed_by (0.59885)
Kate Winslet :: actor.name = 'Kate Winslet' : actor.name = 'Kate Winslet' (1.0)
QUERY > [Ties0: N] [Ties1: N] [Ties1/t: 0.00]
FRAGMENT (Total: 4)> [Ties0: 3] [Ties1: 3] [Ties1/t: 3.00]
== QUERY ID: 50 ==
Pruned candidates for producers: 1
 - producer.name (0.9999999)
Pruned candidates for movies: 1
 - movie (0.9999999)
Pruned candidates for Kate Winslet: 1
 - actor.name = 'Kate Winslet' (1.0)
Pruned candidates for actor: 1
 - actor (1.0)
TOTAL INTERPS COUNT: 1
TOTAL SCORE: 0.8072943472014439, TIES: 0
--
producers :: producer.name : producer.name (0.9999999)
movies :: movie : movie (0.9999999)
Kate Winslet :: actor.name = 'Kate Winslet' : actor.name = 'Kate Winslet' (1.0)
actor :: actor : actor (1.0)
QUERY > [Ties0: Y] [Ties1: Y] [Ties1/t: 1.00]
FRAGMENT (Total: 4)> [Ties0: 4] [Ties1: 4] [Ties1/t: 4.00]
Saving cache...
Saved cache to <data/imdb/imdb.cands.cache>!
== QUERY ID: 75 ==
Pruned candidates for James Bond: 3
 - actor.name = 'James Bond' (1.0)
 - movie.title = 'James Bond' (1.0)
 - cast.role = 'Bond James' (1.0)
Pruned candidates for directors: 1
 - director.name (0.9999999)
TOTAL INTERPS COUNT: 3
TOTAL SCORE: 0.8402421418292757, TIES: 0
--
James Bond :: movie.title = 'James Bond' : movie.title = 'James Bond' (1.0)
directors :: director.name : director.name (0.9999999)
QUERY > [Ties0: Y] [Ties1: Y] [Ties1/t: 1.00]
FRAGMENT (Total: 2)> [Ties0: 2] [Ties1: 2] [Ties1/t: 2.00]
== QUERY ID: 25 ==
Pruned candidates for movies: 1
 - movie.title (0.9999999)
Pruned candidates for written by: 1
 - written_by (1.0)
Pruned candidates for Matt Damon: 4
 - actor.name = 'Matt Damon' (1.0)
 - writer.name = 'Matt Damon' (1.0)
 - director.name = 'Matt Damon' (1.0)
 - producer.name = 'Matt Damon' (1.0)
TOTAL INTERPS COUNT: 4
Returning 0.0 because Steiner tree doesn't contain written_by
Returning 0.0 because Steiner tree doesn't contain written_by
Returning 0.0 because Steiner tree doesn't contain written_by
TOTAL SCORE: 0.8099999733333325, TIES: 0
--
movies :: movie.title : movie.title (0.9999999)
written by :: written_by; writer : written_by (1.0)
Matt Damon :: writer.name = 'Matt Damon' : writer.name = 'Matt Damon' (1.0)
QUERY > [Ties0: Y] [Ties1: Y] [Ties1/t: 1.00]
FRAGMENT (Total: 3)> [Ties0: 3] [Ties1: 3] [Ties1/t: 3.00]
== QUERY ID: 5 ==
Pruned candidates for actors: 1
 - actor.name (0.9999999)
Pruned candidates for Los Angeles: 5
 - writer.birth_city = 'Los Angeles' (1.0)
 - movie.title = 'Los Angeles' (1.0)
 - director.birth_city = 'Los Angeles' (1.0)
 - actor.birth_city = 'Los Angeles' (1.0)
 - producer.birth_city = 'Los Angeles' (1.0)
TOTAL INTERPS COUNT: 5
TOTAL SCORE: 0.9206044978311045, TIES: 0
--
actors :: actor.name : actor.name (0.9999999)
Los Angeles :: actor.birth_city = 'Los Angeles' : actor.birth_city = 'Los Angeles' (1.0)
QUERY > [Ties0: Y] [Ties1: Y] [Ties1/t: 1.00]
FRAGMENT (Total: 2)> [Ties0: 2] [Ties1: 2] [Ties1/t: 2.00]
== QUERY ID: 34 ==
Pruned candidates for actors: 1
 - actor.name (0.9999999)
Pruned candidates for New York City: 7
 - actor.birth_city = 'New York City' (1.0)
 - writer.birth_city = 'New York City' (1.0)
 - producer.birth_city = 'New York City' (1.0)
 - movie.title = 'New York City' (1.0)
 - director.birth_city = 'New York City' (1.0)
 - keyword.keyword = 'new-york-city' (1.0)
 - cast.role = 'New York City' (1.0)
Pruned candidates for 1984: 9
 - writer.birth_year = 1984 (0.9999)
 - company.id = 1984 (0.9999)
 - director.birth_year = 1984 (0.9999)
 - producer.birth_year = 1984 (0.9999)
 - keyword.id = 1984 (0.9999)
 - tv_series.release_year = 1984 (0.9999)
 - actor.birth_year = 1984 (0.9999)
 - tags.id = 1984 (0.9999)
 - movie.release_year = 1984 (0.9999)
TOTAL INTERPS COUNT: 63
TOTAL SCORE: 0.8199733057786165, TIES: 0
--
actors :: actor.name : actor.name (0.9999999)
New York City :: actor.birth_city = 'New York City' : actor.birth_city = 'New York City' (1.0)
1984 :: actor.birth_year = 1984 : actor.birth_year = 1984 (0.9999)
QUERY > [Ties0: Y] [Ties1: Y] [Ties1/t: 1.00]
FRAGMENT (Total: 3)> [Ties0: 3] [Ties1: 3] [Ties1/t: 3.00]
== QUERY ID: 52 ==
Pruned candidates for company: 1
 - company.name (1.0)
Pruned candidates for series Scandal: 5
 - tv_series.title = 'Scandal' (0.93405)
 - tv_series.title = 'Scandal!' (0.93404999)
 - tv_series.title = 'Sungkyunkwan Scandal' (0.9340495)
 - tv_series.title = 'Scandal After Show' (0.8966000000000001)
 - tv_series.title = 'Everyday Scandal' (0.88225)
TOTAL INTERPS COUNT: 5
TOTAL SCORE: 0.7822988070063502, TIES: 0
--
company :: company.name : company.name (1.0)
series Scandal :: tv_series.title = 'Scandal' : tv_series.title = 'Scandal' (0.93405)
QUERY > [Ties0: Y] [Ties1: Y] [Ties1/t: 1.00]
FRAGMENT (Total: 2)> [Ties0: 2] [Ties1: 2] [Ties1/t: 2.00]
Saving cache...
Saved cache to <data/imdb/imdb.cands.cache>!
== QUERY ID: 9 ==
Pruned candidates for nationality: 4
 - writer.nationality (1.0)
 - producer.nationality (1.0)
 - actor.nationality (1.0)
 - director.nationality (1.0)
Pruned candidates for actor Christoph Waltz: 1
 - actor.name = 'Christoph Waltz' (1.0)
TOTAL INTERPS COUNT: 4
TOTAL SCORE: 0.852522573143889, TIES: 0
--
nationality :: actor.nationality : actor.nationality (1.0)
actor Christoph Waltz :: actor.name = 'Christoph Waltz' : actor.name = 'Christoph Waltz' (1.0)
QUERY > [Ties0: Y] [Ties1: Y] [Ties1/t: 1.00]
FRAGMENT (Total: 2)> [Ties0: 2] [Ties1: 2] [Ties1/t: 2.00]
== QUERY ID: 89 ==
Pruned candidates for movies: 1
 - count(movie.title) (0.9999999)
Pruned candidates for Alfred Hitchcock: 4
 - producer.name = 'Alfred Hitchcock' (1.0)
 - director.name = 'Alfred Hitchcock' (1.0)
 - actor.name = 'Alfred Hitchcock' (1.0)
 - writer.name = 'Alfred Hitchcock' (1.0)
Pruned candidates for direct: 5
 - directed_by (0.668)
 - written_by (0.59855)
 - movie (0.58215)
 - made_by (0.5763)
 - keyword (0.5717)
TOTAL INTERPS COUNT: 20
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain written_by
Returning 0.0 because Steiner tree doesn't contain written_by
Returning 0.0 because Steiner tree doesn't contain written_by
Returning 0.0 because Steiner tree doesn't contain made_by
Returning 0.0 because Steiner tree doesn't contain keyword
Returning 0.0 because Steiner tree doesn't contain keyword
Returning 0.0 because Steiner tree doesn't contain keyword
Returning 0.0 because Steiner tree doesn't contain keyword
TOTAL SCORE: 0.7671920370513329, TIES: 0
--
movies :: count(movie.title) : count(movie.title) (0.9999999)
Alfred Hitchcock :: director.name = 'Alfred Hitchcock' : director.name = 'Alfred Hitchcock' (1.0)
direct :: directed_by; director : directed_by (0.668)
QUERY > [Ties0: Y] [Ties1: Y] [Ties1/t: 1.00]
FRAGMENT (Total: 3)> [Ties0: 3] [Ties1: 3] [Ties1/t: 3.00]
Saving cache...
Saved cache to <data/imdb/imdb.cands.cache>!
==== FOLD RESULTS ====
22,22,22.000,33,77,77,77.000,88
00:47  INFO: ===== FOLD 2 =====
Original log size: 98
Trimming log to 100.0%...
Final log size: 98
00:47  INFO: ===== Parsing Results =====
00:47  INFO: Total Queries: 98
00:47  INFO: Correctly Parsed: 98/98

Loading cache from: <data/imdb/imdb.cands.cache>
Cache loaded!
== QUERY ID: 121 ==
Pruned candidates for acted: 5
 - director.did (0.63595)
 - directed_by.did (0.63595)
 - cast.role (0.61725)
 - cast.role (0.5967)
 - actor.name (0.58095)
Pruned candidates for movies: 1
 - count(movie.title) = max(count(movie.title)) (0.9999999)
Pruned candidates for directed by: 1
 - directed_by (1.0)
Pruned candidates for Jim Jarmusch: 4
 - writer.name = 'Jim Jarmusch' (1.0)
 - producer.name = 'Jim Jarmusch' (1.0)
 - actor.name = 'Jim Jarmusch' (1.0)
 - director.name = 'Jim Jarmusch' (1.0)
TOTAL INTERPS COUNT: 20
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain directed_by
TOTAL SCORE: 0.7247086043278854, TIES: 1
--
acted :: actor.name : director.did (0.63595)
movies :: count(movie.title) = max(count(movie.title)) : count(movie.title) = max(count(movie.title)) (0.9999999)
directed by :: directed_by; director : directed_by (1.0)
Jim Jarmusch :: director.name = 'Jim Jarmusch' : director.name = 'Jim Jarmusch' (1.0)
--
acted :: actor.name : directed_by.did (0.63595)
movies :: count(movie.title) = max(count(movie.title)) : count(movie.title) = max(count(movie.title)) (0.9999999)
directed by :: directed_by; director : directed_by (1.0)
Jim Jarmusch :: director.name = 'Jim Jarmusch' : director.name = 'Jim Jarmusch' (1.0)
QUERY > [Ties0: N] [Ties1: N] [Ties1/t: 0.00]
FRAGMENT (Total: 4)> [Ties0: 3] [Ties1: 3] [Ties1/t: 3.00]
Saving cache...
Saved cache to <data/imdb/imdb.cands.cache>!
== QUERY ID: 118 ==
Pruned candidates for movies: 1
 - movie.title (0.9999999)
Pruned candidates for featuring: 5
 - tv_series (0.6595)
 - directed_by (0.59885)
 - made_by (0.57665)
 - written_by (0.5763)
 - cast (0.57585)
Pruned candidates for Matt Damon: 4
 - actor.name = 'Matt Damon' (1.0)
 - writer.name = 'Matt Damon' (1.0)
 - director.name = 'Matt Damon' (1.0)
 - producer.name = 'Matt Damon' (1.0)
Pruned candidates for Ben Affleck: 4
 - writer.name = 'Ben Affleck' (1.0)
 - producer.name = 'Ben Affleck' (1.0)
 - director.name = 'Ben Affleck' (1.0)
 - actor.name = 'Ben Affleck' (1.0)
TOTAL INTERPS COUNT: 80
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain tv_series
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain made_by
Returning 0.0 because Steiner tree doesn't contain cast
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain cast
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain written_by
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain cast
Returning 0.0 because Steiner tree doesn't contain written_by
Returning 0.0 because Steiner tree doesn't contain cast
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain written_by
Returning 0.0 because Steiner tree doesn't contain cast
Returning 0.0 because Steiner tree doesn't contain written_by
Returning 0.0 because Steiner tree doesn't contain written_by
Returning 0.0 because Steiner tree doesn't contain written_by
Returning 0.0 because Steiner tree doesn't contain cast
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain written_by
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain written_by
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain written_by
TOTAL SCORE: 0.755186338585817, TIES: 1
--
movies :: movie.title : movie.title (0.9999999)
featuring :: actor; cast : tv_series (0.6595)
Matt Damon :: actor.name = 'Matt Damon' : actor.name = 'Matt Damon' (1.0)
Ben Affleck :: actor.name = 'Ben Affleck' : director.name = 'Ben Affleck' (1.0)
--
movies :: movie.title : movie.title (0.9999999)
featuring :: actor; cast : tv_series (0.6595)
Matt Damon :: actor.name = 'Matt Damon' : director.name = 'Matt Damon' (1.0)
Ben Affleck :: actor.name = 'Ben Affleck' : actor.name = 'Ben Affleck' (1.0)
QUERY > [Ties0: N] [Ties1: N] [Ties1/t: 0.00]
FRAGMENT (Total: 4)> [Ties0: 1] [Ties1: 3] [Ties1/t: 2.00]
== QUERY ID: 65 ==
Pruned candidates for acts: 5
 - genre.genre (0.5885)
 - cast.role (0.5871999999999999)
 - tv_series.num_of_episodes (0.5842495)
 - cast.role (0.57145)
 - company.country_code (0.5641)
Pruned candidates for Alan Turing: 1
 - cast.role = 'Alan Turing' (1.0)
Pruned candidates for movie The Imitation Game: 1
 - movie.title = 'The Imitation Game' (1.0)
TOTAL INTERPS COUNT: 5
TOTAL SCORE: 0.6916280610633093, TIES: 0
--
acts :: actor.name : tv_series.num_of_episodes (0.5842495)
Alan Turing :: cast.role = 'Alan Turing' : cast.role = 'Alan Turing' (1.0)
movie The Imitation Game :: movie.title = 'The Imitation Game' : movie.title = 'The Imitation Game' (1.0)
QUERY > [Ties0: N] [Ties1: N] [Ties1/t: 0.00]
FRAGMENT (Total: 3)> [Ties0: 2] [Ties1: 2] [Ties1/t: 2.00]
== QUERY ID: 7 ==
Pruned candidates for actors: 1
 - actor.name (0.9999999)
Pruned candidates for born 1984: 6
 - director.birth_year = 1984 (0.8630906673113782)
 - actor.birth_year = 1984 (0.8630906673113782)
 - producer.birth_year = 1984 (0.8630906673113782)
 - writer.birth_year = 1984 (0.8630906673113782)
 - movie.release_year = 1984 (0.7479599253970763)
 - tv_series.release_year = 1984 (0.7479599253970763)
TOTAL INTERPS COUNT: 6
TOTAL SCORE: 0.797654453205832, TIES: 0
--
actors :: actor.name : actor.name (0.9999999)
born 1984 :: actor.birth_year = 1984 : actor.birth_year = 1984 (0.8630906673113782)
QUERY > [Ties0: Y] [Ties1: Y] [Ties1/t: 1.00]
FRAGMENT (Total: 2)> [Ties0: 2] [Ties1: 2] [Ties1/t: 2.00]
== QUERY ID: 129 ==
Pruned candidates for producer: 1
 - producer.name (1.0)
Pruned candidates for directors: 1
 - count(director.name) = max(count(director.name)) (0.9999999)
TOTAL INTERPS COUNT: 1
TOTAL SCORE: 0.8065805987070916, TIES: 0
--
producer :: producer.name : producer.name (1.0)
directors :: count(director.name) = max(count(director.name)) : count(director.name) = max(count(director.name)) (0.9999999)
QUERY > [Ties0: Y] [Ties1: Y] [Ties1/t: 1.00]
FRAGMENT (Total: 2)> [Ties0: 2] [Ties1: 2] [Ties1/t: 2.00]
== QUERY ID: 124 ==
Pruned candidates for actors: 1
 - actor.name (0.9999999)
Pruned candidates for played: 5
 - cast (0.6295)
 - actor (0.5995)
 - tv_series (0.59235)
 - made_by (0.57695)
 - movie (0.5751)
Pruned candidates for latest: 5
 - movie.release_year = max(movie.release_year) (0.6627000000000001)
 - tv_series.release_year = max(tv_series.release_year) (0.6627000000000001)
 - movie.mid = max(movie.mid) (0.5938)
 - company.name = max(company.name) (0.5753)
 - company.country_code = max(company.country_code) (0.5602)
Pruned candidates for movie: 1
 - movie (1.0)
Pruned candidates for Quentin Tarantino: 4
 - director.name = 'Quentin Tarantino' (1.0)
 - actor.name = 'Quentin Tarantino' (1.0)
 - producer.name = 'Quentin Tarantino' (1.0)
 - writer.name = 'Quentin Tarantino' (1.0)
TOTAL INTERPS COUNT: 100
Returning 0.0 because Steiner tree doesn't contain made_by
Returning 0.0 because Steiner tree doesn't contain movie
Returning 0.0 because Steiner tree doesn't contain movie
Returning 0.0 because Steiner tree doesn't contain movie
Returning 0.0 because Steiner tree doesn't contain made_by
Returning 0.0 because Steiner tree doesn't contain movie
Returning 0.0 because Steiner tree doesn't contain made_by
Returning 0.0 because Steiner tree doesn't contain movie
Returning 0.0 because Steiner tree doesn't contain made_by
Returning 0.0 because Steiner tree doesn't contain movie
Returning 0.0 because Steiner tree doesn't contain made_by
Returning 0.0 because Steiner tree doesn't contain made_by
Returning 0.0 because Steiner tree doesn't contain movie
Returning 0.0 because Steiner tree doesn't contain movie
Returning 0.0 because Steiner tree doesn't contain movie
Returning 0.0 because Steiner tree doesn't contain made_by
Returning 0.0 because Steiner tree doesn't contain movie
Returning 0.0 because Steiner tree doesn't contain made_by
Returning 0.0 because Steiner tree doesn't contain movie
Returning 0.0 because Steiner tree doesn't contain made_by
Returning 0.0 because Steiner tree doesn't contain movie
Returning 0.0 because Steiner tree doesn't contain made_by
Returning 0.0 because Steiner tree doesn't contain movie
Returning 0.0 because Steiner tree doesn't contain movie
Returning 0.0 because Steiner tree doesn't contain movie
Returning 0.0 because Steiner tree doesn't contain movie
Returning 0.0 because Steiner tree doesn't contain movie
Returning 0.0 because Steiner tree doesn't contain movie
Returning 0.0 because Steiner tree doesn't contain movie
Returning 0.0 because Steiner tree doesn't contain made_by
Returning 0.0 because Steiner tree doesn't contain made_by
Returning 0.0 because Steiner tree doesn't contain made_by
Returning 0.0 because Steiner tree doesn't contain made_by
TOTAL SCORE: 0.7018640223284065, TIES: 0
--
actors :: actor.name : actor.name (0.9999999)
played :: actor; cast : cast (0.6295)
latest :: movie.release_year = max(movie.release_year) : movie.release_year = max(movie.release_year) (0.6627000000000001)
movie :: movie : movie (1.0)
Quentin Tarantino :: director.name = 'Quentin Tarantino' : actor.name = 'Quentin Tarantino' (1.0)
QUERY > [Ties0: N] [Ties1: N] [Ties1/t: 0.00]
FRAGMENT (Total: 5)> [Ties0: 4] [Ties1: 4] [Ties1/t: 4.00]
Saving cache...
Saved cache to <data/imdb/imdb.cands.cache>!
== QUERY ID: 119 ==
Pruned candidates for movies: 1
 - max(count(movie.title)) (0.9999999)
Pruned candidates for Brad Pitt: 3
 - producer.name = 'Brad Pitt' (1.0)
 - actor.name = 'Brad Pitt' (1.0)
 - cast.role = 'Brad Pitt'' (0.99999999)
Pruned candidates for act: 5
 - directed_by (0.61295)
 - written_by (0.6098)
 - cast (0.59865)
 - actor (0.5897)
 - movie (0.58385)
Pruned candidates for year: 6
 - tv_series.release_year (0.83155)
 - movie.release_year (0.83155)
 - producer.birth_year (0.79285)
 - director.birth_year (0.79285)
 - actor.birth_year (0.79285)
 - writer.birth_year (0.79285)
TOTAL INTERPS COUNT: 90
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain written_by
Returning 0.0 because Steiner tree doesn't contain written_by
Returning 0.0 because Steiner tree doesn't contain written_by
Returning 0.0 because Steiner tree doesn't contain cast
Returning 0.0 because Steiner tree doesn't contain actor
Returning 0.0 because Steiner tree doesn't contain actor
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain written_by
Returning 0.0 because Steiner tree doesn't contain written_by
Returning 0.0 because Steiner tree doesn't contain written_by
Returning 0.0 because Steiner tree doesn't contain cast
Returning 0.0 because Steiner tree doesn't contain actor
Returning 0.0 because Steiner tree doesn't contain actor
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain written_by
Returning 0.0 because Steiner tree doesn't contain written_by
Returning 0.0 because Steiner tree doesn't contain written_by
Returning 0.0 because Steiner tree doesn't contain cast
Returning 0.0 because Steiner tree doesn't contain actor
Returning 0.0 because Steiner tree doesn't contain actor
Returning 0.0 because Steiner tree doesn't contain written_by
Returning 0.0 because Steiner tree doesn't contain written_by
Returning 0.0 because Steiner tree doesn't contain written_by
Returning 0.0 because Steiner tree doesn't contain cast
Returning 0.0 because Steiner tree doesn't contain actor
Returning 0.0 because Steiner tree doesn't contain actor
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain written_by
Returning 0.0 because Steiner tree doesn't contain written_by
Returning 0.0 because Steiner tree doesn't contain written_by
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain cast
Returning 0.0 because Steiner tree doesn't contain actor
Returning 0.0 because Steiner tree doesn't contain actor
TOTAL SCORE: 0.6919784005692962, TIES: 0
--
movies :: max(count(movie.title)) : max(count(movie.title)) (0.9999999)
Brad Pitt :: actor.name = 'Brad Pitt' : cast.role = 'Brad Pitt'' (0.99999999)
act :: actor; cast : cast (0.59865)
year :: movie.release_year : movie.release_year (0.83155)
QUERY > [Ties0: N] [Ties1: N] [Ties1/t: 0.00]
FRAGMENT (Total: 4)> [Ties0: 3] [Ties1: 3] [Ties1/t: 3.00]
== QUERY ID: 96 ==
Pruned candidates for movies: 1
 - count(movie.title) (0.9999999)
Pruned candidates for Brad Pitt: 3
 - producer.name = 'Brad Pitt' (1.0)
 - actor.name = 'Brad Pitt' (1.0)
 - cast.role = 'Brad Pitt'' (0.99999999)
Pruned candidates for acts: 5
 - genre (0.5885)
 - directed_by (0.57645)
 - cast (0.57145)
 - written_by (0.5714)
 - actor (0.5638)
Pruned candidates for year: 6
 - tv_series.release_year (0.83155)
 - movie.release_year (0.83155)
 - producer.birth_year (0.79285)
 - director.birth_year (0.79285)
 - actor.birth_year (0.79285)
 - writer.birth_year (0.79285)
TOTAL INTERPS COUNT: 90
Returning 0.0 because Steiner tree doesn't contain genre
Returning 0.0 because Steiner tree doesn't contain genre
Returning 0.0 because Steiner tree doesn't contain genre
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain cast
Returning 0.0 because Steiner tree doesn't contain written_by
Returning 0.0 because Steiner tree doesn't contain written_by
Returning 0.0 because Steiner tree doesn't contain written_by
Returning 0.0 because Steiner tree doesn't contain actor
Returning 0.0 because Steiner tree doesn't contain actor
Returning 0.0 because Steiner tree doesn't contain genre
Returning 0.0 because Steiner tree doesn't contain genre
Returning 0.0 because Steiner tree doesn't contain genre
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain cast
Returning 0.0 because Steiner tree doesn't contain written_by
Returning 0.0 because Steiner tree doesn't contain written_by
Returning 0.0 because Steiner tree doesn't contain written_by
Returning 0.0 because Steiner tree doesn't contain actor
Returning 0.0 because Steiner tree doesn't contain actor
Returning 0.0 because Steiner tree doesn't contain genre
Returning 0.0 because Steiner tree doesn't contain genre
Returning 0.0 because Steiner tree doesn't contain genre
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain cast
Returning 0.0 because Steiner tree doesn't contain written_by
Returning 0.0 because Steiner tree doesn't contain written_by
Returning 0.0 because Steiner tree doesn't contain written_by
Returning 0.0 because Steiner tree doesn't contain actor
Returning 0.0 because Steiner tree doesn't contain actor
Returning 0.0 because Steiner tree doesn't contain genre
Returning 0.0 because Steiner tree doesn't contain genre
Returning 0.0 because Steiner tree doesn't contain genre
Returning 0.0 because Steiner tree doesn't contain cast
Returning 0.0 because Steiner tree doesn't contain written_by
Returning 0.0 because Steiner tree doesn't contain written_by
Returning 0.0 because Steiner tree doesn't contain written_by
Returning 0.0 because Steiner tree doesn't contain actor
Returning 0.0 because Steiner tree doesn't contain actor
Returning 0.0 because Steiner tree doesn't contain genre
Returning 0.0 because Steiner tree doesn't contain genre
Returning 0.0 because Steiner tree doesn't contain genre
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain written_by
Returning 0.0 because Steiner tree doesn't contain written_by
Returning 0.0 because Steiner tree doesn't contain written_by
Returning 0.0 because Steiner tree doesn't contain genre
Returning 0.0 because Steiner tree doesn't contain genre
Returning 0.0 because Steiner tree doesn't contain genre
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain cast
Returning 0.0 because Steiner tree doesn't contain actor
Returning 0.0 because Steiner tree doesn't contain actor
TOTAL SCORE: 0.6842118604590491, TIES: 0
--
movies :: count(movie.title) : count(movie.title) (0.9999999)
Brad Pitt :: actor.name = 'Brad Pitt' : cast.role = 'Brad Pitt'' (0.99999999)
acts :: actor; cast : cast (0.57145)
year :: movie.release_year : movie.release_year (0.83155)
QUERY > [Ties0: N] [Ties1: N] [Ties1/t: 0.00]
FRAGMENT (Total: 4)> [Ties0: 3] [Ties1: 3] [Ties1/t: 3.00]
== QUERY ID: 80 ==
Pruned candidates for genres: 1
 - genre.genre (0.9999999)
Pruned candidates for movies: 1
 - movie (0.9999999)
Pruned candidates for directed by: 1
 - directed_by (1.0)
Pruned candidates for Asghar Farhadi: 5
 - director.name = 'Asghar Farhadi' (1.0)
 - actor.name = 'Asghar Farhadi' (1.0)
 - producer.name = 'Asghar Farhadi' (1.0)
 - company.name = 'Asghar Farhadi' (1.0)
 - writer.name = 'Asghar Farhadi' (1.0)
TOTAL INTERPS COUNT: 5
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain directed_by
TOTAL SCORE: 0.8070297491994388, TIES: 0
--
genres :: genre.genre : genre.genre (0.9999999)
movies :: movie : movie (0.9999999)
directed by :: directed_by; director : directed_by (1.0)
Asghar Farhadi :: director.name = 'Asghar Farhadi' : director.name = 'Asghar Farhadi' (1.0)
QUERY > [Ties0: Y] [Ties1: Y] [Ties1/t: 1.00]
FRAGMENT (Total: 4)> [Ties0: 4] [Ties1: 4] [Ties1/t: 4.00]
== QUERY ID: 98 ==
Pruned candidates for movies: 1
 - count(movie.title) (0.9999999)
Pruned candidates for Iraq war: 1
 - keyword.keyword = 'iraq-war' (1.0)
Pruned candidates for 2015: 5
 - tags.id = 2015 (0.9999)
 - movie.release_year = 2015 (0.9999)
 - keyword.id = 2015 (0.9999)
 - company.id = 2015 (0.9999)
 - tv_series.release_year = 2015 (0.9999)
TOTAL INTERPS COUNT: 5
TOTAL SCORE: 0.8167406616156961, TIES: 1
--
movies :: count(movie.title) : count(movie.title) (0.9999999)
Iraq war :: keyword.keyword = 'iraq-war' : keyword.keyword = 'iraq-war' (1.0)
2015 :: movie.release_year = 2015 : tags.id = 2015 (0.9999)
--
movies :: count(movie.title) : count(movie.title) (0.9999999)
Iraq war :: keyword.keyword = 'iraq-war' : keyword.keyword = 'iraq-war' (1.0)
2015 :: movie.release_year = 2015 : keyword.id = 2015 (0.9999)
QUERY > [Ties0: N] [Ties1: N] [Ties1/t: 0.00]
FRAGMENT (Total: 3)> [Ties0: 2] [Ties1: 2] [Ties1/t: 2.00]
== QUERY ID: 101 ==
Pruned candidates for movies: 1
 - count(movie.title) (0.9999999)
Pruned candidates for Quentin Tarantino: 4
 - director.name = 'Quentin Tarantino' (1.0)
 - actor.name = 'Quentin Tarantino' (1.0)
 - producer.name = 'Quentin Tarantino' (1.0)
 - writer.name = 'Quentin Tarantino' (1.0)
Pruned candidates for direct: 5
 - directed_by (0.668)
 - written_by (0.59855)
 - movie (0.58215)
 - made_by (0.5763)
 - keyword (0.5717)
Pruned candidates for after 2010: 5
 - movie.mid > 2010 (0.7953217839340251)
 - director.did > 2010 (0.7732012739254895)
 - actor.birth_year > 2010 (0.7726838227891146)
 - tv_series.release_year > 2010 (0.7693768907369131)
 - movie.release_year > 2010 (0.7693768907369131)
TOTAL INTERPS COUNT: 100
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain written_by
Returning 0.0 because Steiner tree doesn't contain written_by
Returning 0.0 because Steiner tree doesn't contain written_by
Returning 0.0 because Steiner tree doesn't contain made_by
Returning 0.0 because Steiner tree doesn't contain keyword
Returning 0.0 because Steiner tree doesn't contain keyword
Returning 0.0 because Steiner tree doesn't contain keyword
Returning 0.0 because Steiner tree doesn't contain keyword
Returning 0.0 because Steiner tree doesn't contain written_by
Returning 0.0 because Steiner tree doesn't contain written_by
Returning 0.0 because Steiner tree doesn't contain written_by
Returning 0.0 because Steiner tree doesn't contain keyword
Returning 0.0 because Steiner tree doesn't contain keyword
Returning 0.0 because Steiner tree doesn't contain keyword
Returning 0.0 because Steiner tree doesn't contain keyword
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain written_by
Returning 0.0 because Steiner tree doesn't contain written_by
Returning 0.0 because Steiner tree doesn't contain written_by
Returning 0.0 because Steiner tree doesn't contain keyword
Returning 0.0 because Steiner tree doesn't contain keyword
Returning 0.0 because Steiner tree doesn't contain keyword
Returning 0.0 because Steiner tree doesn't contain keyword
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain written_by
Returning 0.0 because Steiner tree doesn't contain written_by
Returning 0.0 because Steiner tree doesn't contain written_by
Returning 0.0 because Steiner tree doesn't contain keyword
Returning 0.0 because Steiner tree doesn't contain keyword
Returning 0.0 because Steiner tree doesn't contain keyword
Returning 0.0 because Steiner tree doesn't contain keyword
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain written_by
Returning 0.0 because Steiner tree doesn't contain written_by
Returning 0.0 because Steiner tree doesn't contain written_by
Returning 0.0 because Steiner tree doesn't contain made_by
Returning 0.0 because Steiner tree doesn't contain keyword
Returning 0.0 because Steiner tree doesn't contain keyword
Returning 0.0 because Steiner tree doesn't contain keyword
Returning 0.0 because Steiner tree doesn't contain keyword
TOTAL SCORE: 0.72967837594275, TIES: 0
--
movies :: count(movie.title) : count(movie.title) (0.9999999)
Quentin Tarantino :: director.name = 'Quentin Tarantino' : director.name = 'Quentin Tarantino' (1.0)
direct :: directed_by; director : directed_by (0.668)
after 2010 :: movie.release_year > 2010 : movie.release_year > 2010 (0.7693768907369131)
QUERY > [Ties0: Y] [Ties1: Y] [Ties1/t: 1.00]
FRAGMENT (Total: 4)> [Ties0: 4] [Ties1: 4] [Ties1/t: 4.00]
Saving cache...
Saved cache to <data/imdb/imdb.cands.cache>!
== QUERY ID: 113 ==
Pruned candidates for companies: 1
 - count(company.name) (0.9999999)
Pruned candidates for Gabriele Ferzetti: 1
 - actor.name = 'Gabriele Ferzetti' (1.0)
TOTAL INTERPS COUNT: 1
TOTAL SCORE: 0.8065450254497398, TIES: 0
--
companies :: count(company.name) : count(company.name) (0.9999999)
Gabriele Ferzetti :: actor.name = 'Gabriele Ferzetti' : actor.name = 'Gabriele Ferzetti' (1.0)
QUERY > [Ties0: Y] [Ties1: Y] [Ties1/t: 1.00]
FRAGMENT (Total: 2)> [Ties0: 2] [Ties1: 2] [Ties1/t: 2.00]
== QUERY ID: 114 ==
Pruned candidates for movies: 1
 - movie.title (0.9999999)
Pruned candidates for star: 5
 - actor (0.7294499999999999)
 - movie (0.6321)
 - tv_series (0.62445)
 - producer (0.62225)
 - writer (0.6179)
Pruned candidates for Angelina Jolie: 4
 - actor.name = 'Angelina Jolie' (1.0)
 - producer.name = 'Angelina Jolie' (1.0)
 - director.name = 'Angelina Jolie' (1.0)
 - writer.name = 'Angelina Jolie' (1.0)
Pruned candidates for Brad Pitt: 3
 - producer.name = 'Brad Pitt' (1.0)
 - actor.name = 'Brad Pitt' (1.0)
 - cast.role = 'Brad Pitt'' (0.99999999)
TOTAL INTERPS COUNT: 60
Returning 0.0 because Steiner tree doesn't contain writer
Returning 0.0 because Steiner tree doesn't contain actor
Returning 0.0 because Steiner tree doesn't contain writer
Returning 0.0 because Steiner tree doesn't contain actor
Returning 0.0 because Steiner tree doesn't contain writer
Returning 0.0 because Steiner tree doesn't contain actor
Returning 0.0 because Steiner tree doesn't contain producer
Returning 0.0 because Steiner tree doesn't contain writer
Returning 0.0 because Steiner tree doesn't contain writer
Returning 0.0 because Steiner tree doesn't contain producer
Returning 0.0 because Steiner tree doesn't contain writer
Returning 0.0 because Steiner tree doesn't contain producer
Returning 0.0 because Steiner tree doesn't contain producer
Returning 0.0 because Steiner tree doesn't contain writer
Returning 0.0 because Steiner tree doesn't contain actor
Returning 0.0 because Steiner tree doesn't contain writer
Returning 0.0 because Steiner tree doesn't contain actor
Returning 0.0 because Steiner tree doesn't contain producer
Returning 0.0 because Steiner tree doesn't contain writer
Returning 0.0 because Steiner tree doesn't contain actor
Returning 0.0 because Steiner tree doesn't contain producer
TOTAL SCORE: 0.7811347216818053, TIES: 0
--
movies :: movie.title : movie.title (0.9999999)
star :: actor; cast : actor (0.7294499999999999)
Angelina Jolie :: actor.name = 'Angelina Jolie' : director.name = 'Angelina Jolie' (1.0)
Brad Pitt :: actor.name = 'Brad Pitt' : actor.name = 'Brad Pitt' (1.0)
QUERY > [Ties0: N] [Ties1: N] [Ties1/t: 0.00]
FRAGMENT (Total: 4)> [Ties0: 3] [Ties1: 3] [Ties1/t: 3.00]
== QUERY ID: 66 ==
Pruned candidates for actor: 1
 - actor.name (1.0)
Pruned candidates for Alan Turing: 1
 - cast.role = 'Alan Turing' (1.0)
Pruned candidates for The Imitation Game: 1
 - movie.title = 'The Imitation Game' (1.0)
TOTAL INTERPS COUNT: 1
TOTAL SCORE: 0.8583145819910104, TIES: 0
--
actor :: actor.name : actor.name (1.0)
Alan Turing :: cast.role = 'Alan Turing' : cast.role = 'Alan Turing' (1.0)
The Imitation Game :: movie.title = 'The Imitation Game' : movie.title = 'The Imitation Game' (1.0)
QUERY > [Ties0: Y] [Ties1: Y] [Ties1/t: 1.00]
FRAGMENT (Total: 3)> [Ties0: 3] [Ties1: 3] [Ties1/t: 3.00]
== QUERY ID: 3 ==
Pruned candidates for nationality: 4
 - writer.nationality (1.0)
 - producer.nationality (1.0)
 - actor.nationality (1.0)
 - director.nationality (1.0)
Pruned candidates for actress Ellen Page: 6
 - tv_series.num_of_episodes (0.6619495)
 - genre.gid (0.6591)
 - classification.gid (0.6591)
 - keyword.keyword (0.6487)
 - producer.pid (0.62815)
 - made_by.pid (0.62815)
TOTAL INTERPS COUNT: 24
TOTAL SCORE: 0.6615338417945318, TIES: 0
--
nationality :: actor.nationality : actor.nationality (1.0)
actress Ellen Page :: actor.name = 'Ellen Page' : tv_series.num_of_episodes (0.6619495)
QUERY > [Ties0: N] [Ties1: N] [Ties1/t: 0.00]
FRAGMENT (Total: 2)> [Ties0: 1] [Ties1: 1] [Ties1/t: 1.00]
== QUERY ID: 15 ==
Pruned candidates for actors: 1
 - actor.name (0.9999999)
Pruned candidates for Italy: 6
 - director.nationality = 'Italy' (1.0)
 - actor.nationality = 'Italy' (1.0)
 - producer.nationality = 'Italy' (1.0)
 - writer.nationality = 'Italy' (1.0)
 - cast.role = 'Italis' (0.9999999)
 - cast.role = 'Itali' (0.9999999)
TOTAL INTERPS COUNT: 6
TOTAL SCORE: 0.9206044978311045, TIES: 0
--
actors :: actor.name : actor.name (0.9999999)
Italy :: actor.nationality = 'Italy' : actor.nationality = 'Italy' (1.0)
QUERY > [Ties0: Y] [Ties1: Y] [Ties1/t: 1.00]
FRAGMENT (Total: 2)> [Ties0: 2] [Ties1: 2] [Ties1/t: 2.00]
Saving cache...
Saved cache to <data/imdb/imdb.cands.cache>!
== QUERY ID: 63 ==
Pruned candidates for female: 7
 - producer.gender = 'female' (1.0)
 - keyword.keyword = 'female' (1.0)
 - writer.gender = 'female' (1.0)
 - actor.gender = 'female' (1.0)
 - director.gender = 'female' (1.0)
 - movie.title = 'Female' (1.0)
 - cast.role = 'Female' (1.0)
Pruned candidates for actors: 1
 - actor.name (0.9999999)
Pruned candidates for New York City: 7
 - actor.birth_city = 'New York City' (1.0)
 - writer.birth_city = 'New York City' (1.0)
 - producer.birth_city = 'New York City' (1.0)
 - movie.title = 'New York City' (1.0)
 - director.birth_city = 'New York City' (1.0)
 - keyword.keyword = 'new-york-city' (1.0)
 - cast.role = 'New York City' (1.0)
Pruned candidates for after 1980: 6
 - movie.mid > 1980 (0.7953217839340251)
 - director.did > 1980 (0.7732012739254895)
 - actor.birth_year > 1980 (0.7726838227891146)
 - writer.birth_year > 1980 (0.7726838227891146)
 - director.birth_year > 1980 (0.7726838227891146)
 - producer.birth_year > 1980 (0.7726838227891146)
TOTAL INTERPS COUNT: 294
TOTAL SCORE: 0.8667026673334979, TIES: 0
--
female :: actor.gender = 'female' : actor.gender = 'female' (1.0)
actors :: actor.name : actor.name (0.9999999)
New York City :: actor.birth_city = 'New York City' : actor.birth_city = 'New York City' (1.0)
after 1980 :: actor.birth_year > 1980 : actor.birth_year > 1980 (0.7726838227891146)
QUERY > [Ties0: Y] [Ties1: Y] [Ties1/t: 1.00]
FRAGMENT (Total: 4)> [Ties0: 4] [Ties1: 4] [Ties1/t: 4.00]
== QUERY ID: 87 ==
Pruned candidates for movies: 1
 - count(movie.title) (0.9999999)
Pruned candidates for Jennifer Aniston: 3
 - producer.name = 'Jennifer Aniston' (1.0)
 - director.name = 'Jennifer Aniston' (1.0)
 - actor.name = 'Jennifer Aniston' (1.0)
Pruned candidates for acted: 5
 - written_by (0.652)
 - directed_by (0.65105)
 - made_by (0.6064)
 - cast (0.5967)
 - actor (0.58095)
Pruned candidates for after 2010: 5
 - movie.mid > 2010 (0.7953217839340251)
 - director.did > 2010 (0.7732012739254895)
 - actor.birth_year > 2010 (0.7726838227891146)
 - tv_series.release_year > 2010 (0.7693768907369131)
 - movie.release_year > 2010 (0.7693768907369131)
TOTAL INTERPS COUNT: 75
Returning 0.0 because Steiner tree doesn't contain written_by
Returning 0.0 because Steiner tree doesn't contain written_by
Returning 0.0 because Steiner tree doesn't contain written_by
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain cast
Returning 0.0 because Steiner tree doesn't contain actor
Returning 0.0 because Steiner tree doesn't contain actor
Returning 0.0 because Steiner tree doesn't contain written_by
Returning 0.0 because Steiner tree doesn't contain written_by
Returning 0.0 because Steiner tree doesn't contain written_by
Returning 0.0 because Steiner tree doesn't contain cast
Returning 0.0 because Steiner tree doesn't contain actor
Returning 0.0 because Steiner tree doesn't contain actor
Returning 0.0 because Steiner tree doesn't contain written_by
Returning 0.0 because Steiner tree doesn't contain written_by
Returning 0.0 because Steiner tree doesn't contain written_by
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain written_by
Returning 0.0 because Steiner tree doesn't contain written_by
Returning 0.0 because Steiner tree doesn't contain written_by
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain cast
Returning 0.0 because Steiner tree doesn't contain actor
Returning 0.0 because Steiner tree doesn't contain actor
Returning 0.0 because Steiner tree doesn't contain written_by
Returning 0.0 because Steiner tree doesn't contain written_by
Returning 0.0 because Steiner tree doesn't contain written_by
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain cast
Returning 0.0 because Steiner tree doesn't contain actor
Returning 0.0 because Steiner tree doesn't contain actor
TOTAL SCORE: 0.7253400046949967, TIES: 0
--
movies :: count(movie.title) : count(movie.title) (0.9999999)
Jennifer Aniston :: actor.name = 'Jennifer Aniston' : director.name = 'Jennifer Aniston' (1.0)
acted :: actor; cast : directed_by (0.65105)
after 2010 :: movie.release_year > 2010 : movie.release_year > 2010 (0.7693768907369131)
QUERY > [Ties0: N] [Ties1: N] [Ties1/t: 0.00]
FRAGMENT (Total: 4)> [Ties0: 2] [Ties1: 2] [Ties1/t: 2.00]
== QUERY ID: 97 ==
Pruned candidates for movies: 1
 - count(movie.title) (0.9999999)
Pruned candidates for Tom Cruise: 5
 - producer.name = 'Tom Cruise' (1.0)
 - director.name = 'Tom Cruise' (1.0)
 - actor.name = 'Tom Cruise' (1.0)
 - writer.name = 'Tom Cruise' (1.0)
 - cast.role = ''Tom Cruise'' (0.99999998)
Pruned candidates for acted: 5
 - written_by (0.652)
 - directed_by (0.65105)
 - made_by (0.6064)
 - cast (0.5967)
 - actor (0.58095)
TOTAL INTERPS COUNT: 25
Returning 0.0 because Steiner tree doesn't contain written_by
Returning 0.0 because Steiner tree doesn't contain written_by
Returning 0.0 because Steiner tree doesn't contain written_by
Returning 0.0 because Steiner tree doesn't contain written_by
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain made_by
Returning 0.0 because Steiner tree doesn't contain cast
Returning 0.0 because Steiner tree doesn't contain cast
Returning 0.0 because Steiner tree doesn't contain actor
Returning 0.0 because Steiner tree doesn't contain actor
Returning 0.0 because Steiner tree doesn't contain actor
Returning 0.0 because Steiner tree doesn't contain actor
TOTAL SCORE: 0.759735007271058, TIES: 0
--
movies :: count(movie.title) : count(movie.title) (0.9999999)
Tom Cruise :: actor.name = 'Tom Cruise' : director.name = 'Tom Cruise' (1.0)
acted :: actor; cast : directed_by (0.65105)
QUERY > [Ties0: N] [Ties1: N] [Ties1/t: 0.00]
FRAGMENT (Total: 3)> [Ties0: 1] [Ties1: 1] [Ties1/t: 1.00]
== QUERY ID: 71 ==
Pruned candidates for writer: 1
 - writer.name (1.0)
Pruned candidates for The Truman Show: 1
 - movie.title = 'The Truman Show' (1.0)
TOTAL INTERPS COUNT: 1
TOTAL SCORE: 0.8294883912309795, TIES: 0
--
writer :: writer.name : writer.name (1.0)
The Truman Show :: movie.title = 'The Truman Show' : movie.title = 'The Truman Show' (1.0)
QUERY > [Ties0: Y] [Ties1: Y] [Ties1/t: 1.00]
FRAGMENT (Total: 2)> [Ties0: 2] [Ties1: 2] [Ties1/t: 2.00]
== QUERY ID: 84 ==
Pruned candidates for male: 10
 - producer.gender = 'male' (1.0)
 - actor.gender = 'male' (1.0)
 - writer.gender = 'male' (1.0)
 - writer.name = 'Male' (1.0)
 - actor.name = 'Male' (1.0)
 - director.birth_city = 'Male' (1.0)
 - director.gender = 'male' (1.0)
 - producer.birth_city = 'Male' (1.0)
 - movie.title = 'Male' (1.0)
 - writer.birth_city = 'Male' (1.0)
Pruned candidates for directors: 1
 - director.name (0.9999999)
Pruned candidates for NBCUniversal company: 1
 - company.name = 'NBCUniversal' (1.0)
TOTAL INTERPS COUNT: 10
TOTAL SCORE: 0.8104045434828627, TIES: 0
--
male :: director.gender = 'male' : director.gender = 'male' (1.0)
directors :: director.name : director.name (0.9999999)
NBCUniversal company :: company.name = 'NBCUniversal' : company.name = 'NBCUniversal' (1.0)
QUERY > [Ties0: Y] [Ties1: Y] [Ties1/t: 1.00]
FRAGMENT (Total: 3)> [Ties0: 3] [Ties1: 3] [Ties1/t: 3.00]
Saving cache...
Saved cache to <data/imdb/imdb.cands.cache>!
== QUERY ID: 28 ==
Pruned candidates for comedies: 4
 - cast.role = 'Comediant',cast.role (0.9999999)
 - genre.genre = 'Comedy',movie.title (0.9999999)
 - cast.role = 'Comedy',cast.role (0.9999999)
 - movie.title = 'Comedy',movie.title (0.9999999)
Pruned candidates for year 2015: 5
 - tv_series.release_year = 2015 (0.9118480383265624)
 - movie.release_year = 2015 (0.9118480383265624)
 - tags.id = 2015 (0.6706750442651046)
 - company.id = 2015 (0.6706750442651046)
 - keyword.id = 2015 (0.6706750442651046)
TOTAL INTERPS COUNT: 20
TOTAL SCORE: 0.7839258381353033, TIES: 2
--
comedies :: genre.genre = 'Comedy',movie.title : cast.role = 'Comediant',cast.role (0.9999999)
year 2015 :: movie.release_year = 2015 : movie.release_year = 2015 (0.9118480383265624)
--
comedies :: genre.genre = 'Comedy',movie.title : cast.role = 'Comedy',cast.role (0.9999999)
year 2015 :: movie.release_year = 2015 : movie.release_year = 2015 (0.9118480383265624)
--
comedies :: genre.genre = 'Comedy',movie.title : movie.title = 'Comedy',movie.title (0.9999999)
year 2015 :: movie.release_year = 2015 : movie.release_year = 2015 (0.9118480383265624)
QUERY > [Ties0: N] [Ties1: N] [Ties1/t: 0.00]
FRAGMENT (Total: 2)> [Ties0: 1] [Ties1: 1] [Ties1/t: 1.00]
== QUERY ID: 120 ==
Pruned candidates for actor: 1
 - actor.name (1.0)
Pruned candidates for films: 5
 - count(movie.title) = max(count(movie.title)) (0.86815)
 - count(actor.name) = max(count(actor.name)) (0.7181500000000001)
 - count(genre.genre) = max(count(genre.genre)) (0.7158)
 - count(writer.name) = max(count(writer.name)) (0.6222)
 - count(producer.name) = max(count(producer.name)) (0.61175)
TOTAL INTERPS COUNT: 5
TOTAL SCORE: 0.7565076498742047, TIES: 0
--
actor :: actor.name : actor.name (1.0)
films :: count(movie.title) = max(count(movie.title)) : count(movie.title) = max(count(movie.title)) (0.86815)
QUERY > [Ties0: Y] [Ties1: Y] [Ties1/t: 1.00]
FRAGMENT (Total: 2)> [Ties0: 2] [Ties1: 2] [Ties1/t: 2.00]
== QUERY ID: 116 ==
Pruned candidates for movies: 1
 - movie.title (0.9999999)
Pruned candidates for director: 1
 - director (1.0)
Pruned candidates for movie Revolutionary Road: 1
 - movie.title = 'Revolutionary Road' (1.0)
TOTAL INTERPS COUNT: 1
Returning 0.0 because Steiner tree doesn't contain director
TOTAL SCORE: 0.0, TIES: 0
--
movies :: movie.title : movie.title (0.9999999)
director :: director : director (1.0)
movie Revolutionary Road :: movie.title = 'Revolutionary Road' : movie.title = 'Revolutionary Road' (1.0)
QUERY > [Ties0: Y] [Ties1: Y] [Ties1/t: 1.00]
FRAGMENT (Total: 3)> [Ties0: 3] [Ties1: 3] [Ties1/t: 3.00]
== QUERY ID: 77 ==
Pruned candidates for movies: 1
 - movie.title (0.9999999)
Pruned candidates for directed by: 1
 - directed_by (1.0)
Pruned candidates for Asghar Farhadi: 5
 - director.name = 'Asghar Farhadi' (1.0)
 - actor.name = 'Asghar Farhadi' (1.0)
 - producer.name = 'Asghar Farhadi' (1.0)
 - company.name = 'Asghar Farhadi' (1.0)
 - writer.name = 'Asghar Farhadi' (1.0)
Pruned candidates for Taraneh Alidoosti: 1
 - actor.name = 'Taraneh Alidoosti' (1.0)
Pruned candidates for played: 5
 - cast (0.6295)
 - actor (0.5995)
 - tv_series (0.59235)
 - made_by (0.57695)
 - movie (0.5751)
TOTAL INTERPS COUNT: 25
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain directed_by
TOTAL SCORE: 0.7679239800838485, TIES: 0
--
movies :: movie.title : movie.title (0.9999999)
directed by :: directed_by; director : directed_by (1.0)
Asghar Farhadi :: director.name = 'Asghar Farhadi' : director.name = 'Asghar Farhadi' (1.0)
Taraneh Alidoosti :: actor.name = 'Taraneh Alidoosti' : actor.name = 'Taraneh Alidoosti' (1.0)
played :: actor; cast : cast (0.6295)
QUERY > [Ties0: Y] [Ties1: Y] [Ties1/t: 1.00]
FRAGMENT (Total: 5)> [Ties0: 5] [Ties1: 5] [Ties1/t: 5.00]
== QUERY ID: 14 ==
Pruned candidates for nationality: 4
 - writer.nationality (1.0)
 - producer.nationality (1.0)
 - actor.nationality (1.0)
 - director.nationality (1.0)
Pruned candidates for Kevin Spacey: 4
 - producer.name = 'Kevin Spacey' (1.0)
 - writer.name = 'Kevin Spacey' (1.0)
 - director.name = 'Kevin Spacey' (1.0)
 - actor.name = 'Kevin Spacey' (1.0)
TOTAL INTERPS COUNT: 16
TOTAL SCORE: 0.8577350269189626, TIES: 0
--
nationality :: actor.nationality; producer.nationality; director.nationality; writer.nationality : actor.nationality (1.0)
Kevin Spacey :: actor.name = 'Kevin Spacey'; producer.name = 'Kevin Spacey'; director.name = 'Kevin Spacey'; writer.name = 'Kevin Spacey' : actor.name = 'Kevin Spacey' (1.0)
QUERY > [Ties0: Y] [Ties1: Y] [Ties1/t: 1.00]
FRAGMENT (Total: 2)> [Ties0: 2] [Ties1: 2] [Ties1/t: 2.00]
Saving cache...
Saved cache to <data/imdb/imdb.cands.cache>!
== QUERY ID: 64 ==
Pruned candidates for female: 7
 - producer.gender = 'female' (1.0)
 - keyword.keyword = 'female' (1.0)
 - writer.gender = 'female' (1.0)
 - actor.gender = 'female' (1.0)
 - director.gender = 'female' (1.0)
 - movie.title = 'Female' (1.0)
 - cast.role = 'Female' (1.0)
Pruned candidates for actors: 1
 - actor.name (0.9999999)
Pruned candidates for movie Saving Private Ryan: 1
 - movie.title = 'Saving Private Ryan' (1.0)
TOTAL INTERPS COUNT: 7
TOTAL SCORE: 0.8583145553243429, TIES: 0
--
female :: actor.gender = 'female' : cast.role = 'Female' (1.0)
actors :: actor.name : actor.name (0.9999999)
movie Saving Private Ryan :: movie.title = 'Saving Private Ryan' : movie.title = 'Saving Private Ryan' (1.0)
QUERY > [Ties0: N] [Ties1: N] [Ties1/t: 0.00]
FRAGMENT (Total: 3)> [Ties0: 2] [Ties1: 2] [Ties1/t: 2.00]
== QUERY ID: 100 ==
Pruned candidates for movies: 1
 - count(movie.title) (0.9999999)
Pruned candidates for Matt Damon: 4
 - actor.name = 'Matt Damon' (1.0)
 - writer.name = 'Matt Damon' (1.0)
 - director.name = 'Matt Damon' (1.0)
 - producer.name = 'Matt Damon' (1.0)
Pruned candidates for direct: 5
 - directed_by (0.668)
 - written_by (0.59855)
 - movie (0.58215)
 - made_by (0.5763)
 - keyword (0.5717)
TOTAL INTERPS COUNT: 20
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain written_by
Returning 0.0 because Steiner tree doesn't contain written_by
Returning 0.0 because Steiner tree doesn't contain written_by
Returning 0.0 because Steiner tree doesn't contain made_by
Returning 0.0 because Steiner tree doesn't contain keyword
Returning 0.0 because Steiner tree doesn't contain keyword
Returning 0.0 because Steiner tree doesn't contain keyword
Returning 0.0 because Steiner tree doesn't contain keyword
TOTAL SCORE: 0.7657007455012532, TIES: 0
--
movies :: count(movie.title) : count(movie.title) (0.9999999)
Matt Damon :: director.name = 'Matt Damon' : director.name = 'Matt Damon' (1.0)
direct :: directed_by; director : directed_by (0.668)
QUERY > [Ties0: Y] [Ties1: Y] [Ties1/t: 1.00]
FRAGMENT (Total: 3)> [Ties0: 3] [Ties1: 3] [Ties1/t: 3.00]
== QUERY ID: 105 ==
Pruned candidates for movies: 1
 - count(movie.title) (0.9999999)
Pruned candidates for Steven Spielberg: 4
 - writer.name = 'Steven Spielberg' (1.0)
 - director.name = 'Steven Spielberg' (1.0)
 - actor.name = 'Steven Spielberg' (1.0)
 - producer.name = 'Steven Spielberg' (1.0)
Pruned candidates for direct: 5
 - directed_by (0.668)
 - written_by (0.59855)
 - movie (0.58215)
 - made_by (0.5763)
 - keyword (0.5717)
TOTAL INTERPS COUNT: 20
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain written_by
Returning 0.0 because Steiner tree doesn't contain written_by
Returning 0.0 because Steiner tree doesn't contain written_by
Returning 0.0 because Steiner tree doesn't contain made_by
Returning 0.0 because Steiner tree doesn't contain keyword
Returning 0.0 because Steiner tree doesn't contain keyword
Returning 0.0 because Steiner tree doesn't contain keyword
Returning 0.0 because Steiner tree doesn't contain keyword
TOTAL SCORE: 0.7657007455012532, TIES: 0
--
movies :: count(movie.title) : count(movie.title) (0.9999999)
Steven Spielberg :: director.name = 'Steven Spielberg' : director.name = 'Steven Spielberg' (1.0)
direct :: directed_by; director : directed_by (0.668)
QUERY > [Ties0: Y] [Ties1: Y] [Ties1/t: 1.00]
FRAGMENT (Total: 3)> [Ties0: 3] [Ties1: 3] [Ties1/t: 3.00]
== QUERY ID: 58 ==
Pruned candidates for movies: 1
 - movie.title (0.9999999)
Pruned candidates for Robin Wright: 3
 - director.name = 'Robin Wright' (1.0)
 - actor.name = 'Robin Wright' (1.0)
 - producer.name = 'Robin Wright' (1.0)
TOTAL INTERPS COUNT: 3
TOTAL SCORE: 0.8719528628669694, TIES: 0
--
movies :: movie.title : movie.title (0.9999999)
Robin Wright :: actor.name = 'Robin Wright' : actor.name = 'Robin Wright' (1.0)
QUERY > [Ties0: Y] [Ties1: Y] [Ties1/t: 1.00]
FRAGMENT (Total: 2)> [Ties0: 2] [Ties1: 2] [Ties1/t: 2.00]
== QUERY ID: 104 ==
Pruned candidates for movies: 1
 - count(movie.title) (0.9999999)
Pruned candidates for featuring: 5
 - tv_series (0.6595)
 - directed_by (0.59885)
 - made_by (0.57665)
 - written_by (0.5763)
 - cast (0.57585)
Pruned candidates for Brad Pitt: 3
 - producer.name = 'Brad Pitt' (1.0)
 - actor.name = 'Brad Pitt' (1.0)
 - cast.role = 'Brad Pitt'' (0.99999999)
TOTAL INTERPS COUNT: 15
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain written_by
Returning 0.0 because Steiner tree doesn't contain cast
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain written_by
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain written_by
TOTAL SCORE: 0.7479167847246232, TIES: 0
--
movies :: count(movie.title) : count(movie.title) (0.9999999)
featuring :: actor; cast : tv_series (0.6595)
Brad Pitt :: actor.name = 'Brad Pitt' : actor.name = 'Brad Pitt' (1.0)
QUERY > [Ties0: N] [Ties1: N] [Ties1/t: 0.00]
FRAGMENT (Total: 3)> [Ties0: 2] [Ties1: 2] [Ties1/t: 2.00]
Saving cache...
Saved cache to <data/imdb/imdb.cands.cache>!
== QUERY ID: 47 ==
Pruned candidates for series: 5
 - tv_series.title (0.8351)
 - tv_series.num_of_episodes (0.6271995)
 - tv_series.title (0.60395)
 - movie.title (0.60395)
 - movie.title (0.5979)
Pruned candidates for featuring: 5
 - tv_series (0.6595)
 - directed_by (0.59885)
 - made_by (0.57665)
 - written_by (0.5763)
 - cast (0.57585)
Pruned candidates for Kerry Washington: 2
 - actor.name = 'Kerry Washington' (1.0)
 - producer.name = 'Kerry Washington' (1.0)
TOTAL INTERPS COUNT: 50
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain made_by
Returning 0.0 because Steiner tree doesn't contain made_by
Returning 0.0 because Steiner tree doesn't contain made_by
Returning 0.0 because Steiner tree doesn't contain written_by
Returning 0.0 because Steiner tree doesn't contain written_by
Returning 0.0 because Steiner tree doesn't contain written_by
Returning 0.0 because Steiner tree doesn't contain written_by
Returning 0.0 because Steiner tree doesn't contain written_by
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain written_by
Returning 0.0 because Steiner tree doesn't contain written_by
Returning 0.0 because Steiner tree doesn't contain written_by
Returning 0.0 because Steiner tree doesn't contain written_by
Returning 0.0 because Steiner tree doesn't contain written_by
Returning 0.0 because Steiner tree doesn't contain cast
Returning 0.0 because Steiner tree doesn't contain cast
Returning 0.0 because Steiner tree doesn't contain cast
Returning 0.0 because Steiner tree doesn't contain cast
Returning 0.0 because Steiner tree doesn't contain cast
TOTAL SCORE: 0.718999754195069, TIES: 0
--
series :: tv_series.title : tv_series.title (0.8351)
featuring :: actor; cast : tv_series (0.6595)
Kerry Washington :: actor.name = 'Kerry Washington' : producer.name = 'Kerry Washington' (1.0)
QUERY > [Ties0: N] [Ties1: N] [Ties1/t: 0.00]
FRAGMENT (Total: 3)> [Ties0: 1] [Ties1: 1] [Ties1/t: 1.00]
Saving cache...
Saved cache to <data/imdb/imdb.cands.cache>!
==== FOLD RESULTS ====
17,17,17.000,32,79,81,80.000,99
01:10  INFO: ===== FOLD 3 =====
Original log size: 96
Trimming log to 100.0%...
Final log size: 96
01:10  INFO: ===== Parsing Results =====
01:10  INFO: Total Queries: 96
01:10  INFO: Correctly Parsed: 96/96

Loading cache from: <data/imdb/imdb.cands.cache>
Cache loaded!
== QUERY ID: 88 ==
Pruned candidates for actors: 1
 - count(actor.name) (0.9999999)
Pruned candidates for movie Grumpier Old Men: 1
 - movie.title = 'Grumpier Old Men' (1.0)
TOTAL INTERPS COUNT: 1
TOTAL SCORE: 0.864756477767762, TIES: 0
--
actors :: count(actor.name) : count(actor.name) (0.9999999)
movie Grumpier Old Men :: movie.title = 'Grumpier Old Men' : movie.title = 'Grumpier Old Men' (1.0)
QUERY > [Ties0: Y] [Ties1: Y] [Ties1/t: 1.00]
FRAGMENT (Total: 2)> [Ties0: 2] [Ties1: 2] [Ties1/t: 2.00]
Saving cache...
Saved cache to <data/imdb/imdb.cands.cache>!
== QUERY ID: 72 ==
Pruned candidates for Sci-Fi: 4
 - company.name = 'Sci Fi' (1.0)
 - cast.role = 'Sci-Fi' (1.0)
 - genre.genre = 'Sci-Fi' (1.0)
 - cast.role = 'Sci Fi' (1.0)
Pruned candidates for movies: 1
 - movie.title (0.9999999)
Pruned candidates for released 2010: 7
 - movie.release_year = 2010 (0.8921717295453829)
 - tv_series.release_year = 2010 (0.8921717295453829)
 - actor.birth_year = 2010 (0.7670991787246288)
 - producer.birth_year = 2010 (0.7670991787246288)
 - company.id = 2010 (0.7203805244452407)
 - keyword.id = 2010 (0.7203805244452407)
 - tags.id = 2010 (0.7203805244452407)
TOTAL INTERPS COUNT: 28
TOTAL SCORE: 0.8059759956215645, TIES: 0
--
Sci-Fi :: genre.genre = 'Sci-Fi' : genre.genre = 'Sci-Fi' (1.0)
movies :: movie.title : movie.title (0.9999999)
released 2010 :: movie.release_year = 2010 : movie.release_year = 2010 (0.8921717295453829)
QUERY > [Ties0: Y] [Ties1: Y] [Ties1/t: 1.00]
FRAGMENT (Total: 3)> [Ties0: 3] [Ties1: 3] [Ties1/t: 3.00]
== QUERY ID: 126 ==
Pruned candidates for movies: 1
 - movie.title (0.9999999)
Pruned candidates for featuring: 5
 - tv_series (0.6595)
 - directed_by (0.59885)
 - made_by (0.57665)
 - written_by (0.5763)
 - cast (0.57585)
Pruned candidates for Jason Robards: 1
 - actor.name = 'Jason Robards' (1.0)
Pruned candidates for Woody Strode: 1
 - actor.name = 'Woody Strode' (1.0)
TOTAL INTERPS COUNT: 5
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain written_by
TOTAL SCORE: 0.7288773074928621, TIES: 0
--
movies :: movie.title : movie.title (0.9999999)
featuring :: actor; cast : tv_series (0.6595)
Jason Robards :: actor.name = 'Jason Robards' : actor.name = 'Jason Robards' (1.0)
Woody Strode :: actor.name = 'Woody Strode' : actor.name = 'Woody Strode' (1.0)
QUERY > [Ties0: N] [Ties1: N] [Ties1/t: 0.00]
FRAGMENT (Total: 4)> [Ties0: 3] [Ties1: 3] [Ties1/t: 3.00]
== QUERY ID: 39 ==
Pruned candidates for movies: 1
 - movie.title (0.9999999)
Pruned candidates for Alfred Hitchcock: 4
 - producer.name = 'Alfred Hitchcock' (1.0)
 - director.name = 'Alfred Hitchcock' (1.0)
 - actor.name = 'Alfred Hitchcock' (1.0)
 - writer.name = 'Alfred Hitchcock' (1.0)
Pruned candidates for direct: 5
 - directed_by (0.668)
 - written_by (0.59855)
 - movie (0.58215)
 - made_by (0.5763)
 - keyword (0.5717)
TOTAL INTERPS COUNT: 20
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain written_by
Returning 0.0 because Steiner tree doesn't contain written_by
Returning 0.0 because Steiner tree doesn't contain written_by
Returning 0.0 because Steiner tree doesn't contain made_by
Returning 0.0 because Steiner tree doesn't contain made_by
Returning 0.0 because Steiner tree doesn't contain keyword
Returning 0.0 because Steiner tree doesn't contain keyword
Returning 0.0 because Steiner tree doesn't contain keyword
Returning 0.0 because Steiner tree doesn't contain keyword
TOTAL SCORE: 0.760016556288404, TIES: 0
--
movies :: movie.title : movie.title (0.9999999)
Alfred Hitchcock :: director.name = 'Alfred Hitchcock' : director.name = 'Alfred Hitchcock' (1.0)
direct :: directed_by; director : directed_by (0.668)
QUERY > [Ties0: Y] [Ties1: Y] [Ties1/t: 1.00]
FRAGMENT (Total: 3)> [Ties0: 3] [Ties1: 3] [Ties1/t: 3.00]
== QUERY ID: 20 ==
Pruned candidates for director: 1
 - director.name (1.0)
Pruned candidates for movie Catch Me If You Can: 1
 - movie.title = 'Catch Me If You Can' (1.0)
TOTAL INTERPS COUNT: 1
TOTAL SCORE: 0.846464185559742, TIES: 0
--
director :: director.name : director.name (1.0)
movie Catch Me If You Can :: movie.title = 'Catch Me If You Can' : movie.title = 'Catch Me If You Can' (1.0)
QUERY > [Ties0: Y] [Ties1: Y] [Ties1/t: 1.00]
FRAGMENT (Total: 2)> [Ties0: 2] [Ties1: 2] [Ties1/t: 2.00]
== QUERY ID: 11 ==
Pruned candidates for year born: 8
 - director.birth_year (0.84765)
 - writer.birth_year (0.84765)
 - actor.birth_year (0.84765)
 - producer.birth_year (0.84765)
 - writer.birth_city (0.738)
 - actor.birth_city (0.738)
 - director.birth_city (0.738)
 - producer.birth_city (0.738)
Pruned candidates for Kevin Spacey: 4
 - producer.name = 'Kevin Spacey' (1.0)
 - writer.name = 'Kevin Spacey' (1.0)
 - director.name = 'Kevin Spacey' (1.0)
 - actor.name = 'Kevin Spacey' (1.0)
TOTAL INTERPS COUNT: 32
TOTAL SCORE: 0.790976383146055, TIES: 0
--
year born :: actor.birth_year; producer.birth_year; director.birth_year; writer.birth_year : actor.birth_year (0.84765)
Kevin Spacey :: actor.name = 'Kevin Spacey'; producer.name = 'Kevin Spacey'; director.name = 'Kevin Spacey'; writer.name = 'Kevin Spacey' : actor.name = 'Kevin Spacey' (1.0)
QUERY > [Ties0: Y] [Ties1: Y] [Ties1/t: 1.00]
FRAGMENT (Total: 2)> [Ties0: 2] [Ties1: 2] [Ties1/t: 2.00]
Saving cache...
Saved cache to <data/imdb/imdb.cands.cache>!
== QUERY ID: 17 ==
Pruned candidates for budget: 2
 - movie.budget (1.0)
 - tv_series.budget (1.0)
Pruned candidates for Finding Nemo: 1
 - movie.title = 'Finding Nemo' (1.0)
TOTAL INTERPS COUNT: 2
TOTAL SCORE: 0.8589767824619589, TIES: 0
--
budget :: movie.budget : movie.budget (1.0)
Finding Nemo :: movie.title = 'Finding Nemo' : movie.title = 'Finding Nemo' (1.0)
QUERY > [Ties0: Y] [Ties1: Y] [Ties1/t: 1.00]
FRAGMENT (Total: 2)> [Ties0: 2] [Ties1: 2] [Ties1/t: 2.00]
== QUERY ID: 61 ==
Pruned candidates for movies: 1
 - movie.title (0.9999999)
Pruned candidates for directed by: 1
 - directed_by (1.0)
Pruned candidates for Steven Spielberg: 4
 - writer.name = 'Steven Spielberg' (1.0)
 - director.name = 'Steven Spielberg' (1.0)
 - actor.name = 'Steven Spielberg' (1.0)
 - producer.name = 'Steven Spielberg' (1.0)
Pruned candidates for featuring: 5
 - tv_series (0.6595)
 - directed_by (0.59885)
 - made_by (0.57665)
 - written_by (0.5763)
 - cast (0.57585)
Pruned candidates for Matt Damon: 4
 - actor.name = 'Matt Damon' (1.0)
 - writer.name = 'Matt Damon' (1.0)
 - director.name = 'Matt Damon' (1.0)
 - producer.name = 'Matt Damon' (1.0)
TOTAL INTERPS COUNT: 80
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain written_by
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain tv_series
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain made_by
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain cast
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain tv_series
Returning 0.0 because Steiner tree doesn't contain tv_series
Returning 0.0 because Steiner tree doesn't contain tv_series
Returning 0.0 because Steiner tree doesn't contain made_by
Returning 0.0 because Steiner tree doesn't contain made_by
Returning 0.0 because Steiner tree doesn't contain written_by
Returning 0.0 because Steiner tree doesn't contain written_by
Returning 0.0 because Steiner tree doesn't contain written_by
Returning 0.0 because Steiner tree doesn't contain cast
Returning 0.0 because Steiner tree doesn't contain cast
Returning 0.0 because Steiner tree doesn't contain cast
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain tv_series
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain written_by
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain cast
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain directed_by
TOTAL SCORE: 0.7727130535747815, TIES: 1
--
movies :: movie.title : movie.title (0.9999999)
directed by :: directed_by; director : directed_by (1.0)
Steven Spielberg :: director.name = 'Steven Spielberg' : director.name = 'Steven Spielberg' (1.0)
featuring :: actor; cast : tv_series (0.6595)
Matt Damon :: actor.name = 'Matt Damon' : actor.name = 'Matt Damon' (1.0)
--
movies :: movie.title : movie.title (0.9999999)
directed by :: directed_by; director : directed_by (1.0)
Steven Spielberg :: director.name = 'Steven Spielberg' : actor.name = 'Steven Spielberg' (1.0)
featuring :: actor; cast : tv_series (0.6595)
Matt Damon :: actor.name = 'Matt Damon' : director.name = 'Matt Damon' (1.0)
QUERY > [Ties0: N] [Ties1: N] [Ties1/t: 0.00]
FRAGMENT (Total: 5)> [Ties0: 2] [Ties1: 4] [Ties1/t: 3.00]
== QUERY ID: 56 ==
Pruned candidates for director: 1
 - director.name (1.0)
Pruned candidates for series House of Cards: 5
 - tv_series.title = 'House of Cards' (0.940149)
 - tv_series.title = 'House of Card' (0.901049)
 - company.country_code (0.6250495)
 - tv_series.num_of_episodes (0.598149)
 - movie.mid (0.5911495)
Pruned candidates for Netflix: 2
 - company.name = 'Netflix' (1.0)
 - keyword.keyword = 'netflix' (1.0)
TOTAL INTERPS COUNT: 10
TOTAL SCORE: 0.790857805413243, TIES: 0
--
director :: director.name : director.name (1.0)
series House of Cards :: tv_series.title = 'House of Cards' : tv_series.title = 'House of Cards' (0.940149)
Netflix :: company.name = 'Netflix' : keyword.keyword = 'netflix' (1.0)
QUERY > [Ties0: N] [Ties1: N] [Ties1/t: 0.00]
FRAGMENT (Total: 3)> [Ties0: 2] [Ties1: 2] [Ties1/t: 2.00]
== QUERY ID: 35 ==
Pruned candidates for movies: 1
 - movie.title (0.9999999)
Pruned candidates for Persians: 2
 - cast.role = 'Persian' (0.9999999)
 - keyword.keyword = 'persian' (0.9999999)
TOTAL INTERPS COUNT: 2
TOTAL SCORE: 0.8471403720791032, TIES: 0
--
movies :: movie.title : movie.title (0.9999999)
Persians :: keyword.keyword = 'persian' : keyword.keyword = 'persian' (0.9999999)
QUERY > [Ties0: Y] [Ties1: Y] [Ties1/t: 1.00]
FRAGMENT (Total: 2)> [Ties0: 2] [Ties1: 2] [Ties1/t: 2.00]
== QUERY ID: 102 ==
Pruned candidates for movies: 1
 - count(movie.title) (0.9999999)
Pruned candidates for Quentin Tarantino: 4
 - director.name = 'Quentin Tarantino' (1.0)
 - actor.name = 'Quentin Tarantino' (1.0)
 - producer.name = 'Quentin Tarantino' (1.0)
 - writer.name = 'Quentin Tarantino' (1.0)
Pruned candidates for direct: 5
 - directed_by (0.668)
 - written_by (0.59855)
 - movie (0.58215)
 - made_by (0.5763)
 - keyword (0.5717)
Pruned candidates for before 2010: 6
 - writer.birth_year < 2010 (0.7510283549906754)
 - director.birth_year < 2010 (0.7510283549906754)
 - actor.birth_year < 2010 (0.7510283549906754)
 - producer.birth_year < 2010 (0.7510283549906754)
 - movie.release_year < 2010 (0.746655372310412)
 - tv_series.release_year < 2010 (0.746655372310412)
TOTAL INTERPS COUNT: 120
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain made_by
Returning 0.0 because Steiner tree doesn't contain made_by
Returning 0.0 because Steiner tree doesn't contain keyword
Returning 0.0 because Steiner tree doesn't contain keyword
Returning 0.0 because Steiner tree doesn't contain keyword
Returning 0.0 because Steiner tree doesn't contain keyword
Returning 0.0 because Steiner tree doesn't contain written_by
Returning 0.0 because Steiner tree doesn't contain written_by
Returning 0.0 because Steiner tree doesn't contain written_by
Returning 0.0 because Steiner tree doesn't contain made_by
Returning 0.0 because Steiner tree doesn't contain made_by
Returning 0.0 because Steiner tree doesn't contain keyword
Returning 0.0 because Steiner tree doesn't contain keyword
Returning 0.0 because Steiner tree doesn't contain keyword
Returning 0.0 because Steiner tree doesn't contain keyword
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain written_by
Returning 0.0 because Steiner tree doesn't contain written_by
Returning 0.0 because Steiner tree doesn't contain written_by
Returning 0.0 because Steiner tree doesn't contain keyword
Returning 0.0 because Steiner tree doesn't contain keyword
Returning 0.0 because Steiner tree doesn't contain keyword
Returning 0.0 because Steiner tree doesn't contain keyword
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain written_by
Returning 0.0 because Steiner tree doesn't contain written_by
Returning 0.0 because Steiner tree doesn't contain written_by
Returning 0.0 because Steiner tree doesn't contain keyword
Returning 0.0 because Steiner tree doesn't contain keyword
Returning 0.0 because Steiner tree doesn't contain keyword
Returning 0.0 because Steiner tree doesn't contain keyword
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain written_by
Returning 0.0 because Steiner tree doesn't contain written_by
Returning 0.0 because Steiner tree doesn't contain written_by
Returning 0.0 because Steiner tree doesn't contain made_by
Returning 0.0 because Steiner tree doesn't contain made_by
Returning 0.0 because Steiner tree doesn't contain keyword
Returning 0.0 because Steiner tree doesn't contain keyword
Returning 0.0 because Steiner tree doesn't contain keyword
Returning 0.0 because Steiner tree doesn't contain keyword
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain written_by
Returning 0.0 because Steiner tree doesn't contain written_by
Returning 0.0 because Steiner tree doesn't contain written_by
Returning 0.0 because Steiner tree doesn't contain keyword
Returning 0.0 because Steiner tree doesn't contain keyword
Returning 0.0 because Steiner tree doesn't contain keyword
Returning 0.0 because Steiner tree doesn't contain keyword
TOTAL SCORE: 0.7144280667059961, TIES: 0
--
movies :: count(movie.title) : count(movie.title) (0.9999999)
Quentin Tarantino :: director.name = 'Quentin Tarantino' : director.name = 'Quentin Tarantino' (1.0)
direct :: directed_by; director : directed_by (0.668)
before 2010 :: movie.release_year < 2010 : movie.release_year < 2010 (0.746655372310412)
QUERY > [Ties0: Y] [Ties1: Y] [Ties1/t: 1.00]
FRAGMENT (Total: 4)> [Ties0: 4] [Ties1: 4] [Ties1/t: 4.00]
Saving cache...
Saved cache to <data/imdb/imdb.cands.cache>!
== QUERY ID: 51 ==
Pruned candidates for series: 5
 - tv_series.title (0.8351)
 - tv_series.num_of_episodes (0.6271995)
 - tv_series.title (0.60395)
 - movie.title (0.60395)
 - movie.title (0.5979)
Pruned candidates for Scott Foley: 4
 - producer.name = 'Scott Foley' (1.0)
 - director.name = 'Scott Foley' (1.0)
 - writer.name = 'Scott Foley' (1.0)
 - actor.name = 'Scott Foley' (1.0)
Pruned candidates for actor: 1
 - actor (1.0)
TOTAL INTERPS COUNT: 20
Returning 0.0 because Steiner tree doesn't contain actor
Returning 0.0 because Steiner tree doesn't contain actor
Returning 0.0 because Steiner tree doesn't contain actor
Returning 0.0 because Steiner tree doesn't contain actor
Returning 0.0 because Steiner tree doesn't contain actor
Returning 0.0 because Steiner tree doesn't contain actor
Returning 0.0 because Steiner tree doesn't contain actor
Returning 0.0 because Steiner tree doesn't contain actor
Returning 0.0 because Steiner tree doesn't contain actor
Returning 0.0 because Steiner tree doesn't contain actor
Returning 0.0 because Steiner tree doesn't contain actor
Returning 0.0 because Steiner tree doesn't contain actor
Returning 0.0 because Steiner tree doesn't contain actor
Returning 0.0 because Steiner tree doesn't contain actor
Returning 0.0 because Steiner tree doesn't contain actor
TOTAL SCORE: 0.7805751241404737, TIES: 0
--
series :: tv_series.title : tv_series.title (0.8351)
Scott Foley :: actor.name = 'Scott Foley' : actor.name = 'Scott Foley' (1.0)
actor :: actor : actor (1.0)
QUERY > [Ties0: Y] [Ties1: Y] [Ties1/t: 1.00]
FRAGMENT (Total: 3)> [Ties0: 3] [Ties1: 3] [Ties1/t: 3.00]
== QUERY ID: 6 ==
Pruned candidates for actors: 1
 - actor.name (0.9999999)
Pruned candidates for Canada: 10
 - actor.name = 'Canada' (1.0)
 - producer.nationality = 'Canada' (1.0)
 - director.name = 'CANADA' (1.0)
 - actor.nationality = 'Canada' (1.0)
 - producer.name = 'CANADA' (1.0)
 - writer.nationality = 'Canada' (1.0)
 - director.nationality = 'Canada' (1.0)
 - company.name = 'Canada' (1.0)
 - movie.title = 'Canada' (1.0)
 - writer.name = 'CANADA' (1.0)
TOTAL INTERPS COUNT: 10
TOTAL SCORE: 0.8984731527834653, TIES: 0
--
actors :: actor.name : actor.name (0.9999999)
Canada :: actor.nationality = 'Canada' : actor.nationality = 'Canada' (1.0)
QUERY > [Ties0: Y] [Ties1: Y] [Ties1/t: 1.00]
FRAGMENT (Total: 2)> [Ties0: 2] [Ties1: 2] [Ties1/t: 2.00]
== QUERY ID: 33 ==
Pruned candidates for movies: 1
 - movie.title (0.9999999)
Pruned candidates for Netflix: 2
 - company.name = 'Netflix' (1.0)
 - keyword.keyword = 'netflix' (1.0)
TOTAL INTERPS COUNT: 2
TOTAL SCORE: 0.8471404120791022, TIES: 0
--
movies :: movie.title : movie.title (0.9999999)
Netflix :: company.name = 'Netflix' : keyword.keyword = 'netflix' (1.0)
QUERY > [Ties0: N] [Ties1: N] [Ties1/t: 0.00]
FRAGMENT (Total: 2)> [Ties0: 1] [Ties1: 1] [Ties1/t: 1.00]
== QUERY ID: 127 ==
Pruned candidates for directed: 5
 - director.name (0.6349)
 - movie.title (0.62815)
 - cast.role (0.6082)
 - writer.name (0.60425)
 - actor.name (0.5967)
Pruned candidates for latest: 5
 - movie.release_year = max(movie.release_year) (0.6627000000000001)
 - tv_series.release_year = max(tv_series.release_year) (0.6627000000000001)
 - movie.mid = max(movie.mid) (0.5938)
 - company.name = max(company.name) (0.5753)
 - company.country_code = max(company.country_code) (0.5602)
Pruned candidates for movie: 1
 - movie (1.0)
Pruned candidates for NBCUniversal: 1
 - company.name = 'NBCUniversal' (1.0)
TOTAL INTERPS COUNT: 25
Returning 0.0 because Steiner tree doesn't contain movie
Returning 0.0 because Steiner tree doesn't contain movie
TOTAL SCORE: 0.6545572399447281, TIES: 0
--
directed :: director.name : director.name (0.6349)
latest :: movie.release_year = max(movie.release_year) : tv_series.release_year = max(tv_series.release_year) (0.6627000000000001)
movie :: movie : movie (1.0)
NBCUniversal :: company.name = 'NBCUniversal' : company.name = 'NBCUniversal' (1.0)
QUERY > [Ties0: N] [Ties1: N] [Ties1/t: 0.00]
FRAGMENT (Total: 4)> [Ties0: 3] [Ties1: 3] [Ties1/t: 3.00]
== QUERY ID: 60 ==
Pruned candidates for actors: 1
 - actor.name (0.9999999)
Pruned candidates for Austin: 9
 - director.birth_city = 'Austin' (1.0)
 - producer.name = 'Austin' (1.0)
 - actor.name = 'Austin' (1.0)
 - producer.birth_city = 'Austin' (1.0)
 - writer.birth_city = 'Austin' (1.0)
 - actor.birth_city = 'Austin' (1.0)
 - movie.title = 'Austin' (1.0)
 - writer.name = 'Austin' (1.0)
 - director.name = 'Austin' (1.0)
Pruned candidates for born after 1980: 5
 - writer.birth_year > 1980 (0.8680003744238824)
 - director.birth_year > 1980 (0.8680003744238824)
 - producer.birth_year > 1980 (0.8680003744238824)
 - actor.birth_year > 1980 (0.8680003744238824)
 - movie.mid > 1980 (0.7896123384294347)
TOTAL INTERPS COUNT: 45
TOTAL SCORE: 0.8951867532120504, TIES: 0
--
actors :: actor.name : actor.name (0.9999999)
Austin :: actor.birth_city = 'Austin' : actor.birth_city = 'Austin' (1.0)
born after 1980 :: actor.birth_year > 1980 : actor.birth_year > 1980 (0.8680003744238824)
QUERY > [Ties0: Y] [Ties1: Y] [Ties1/t: 1.00]
FRAGMENT (Total: 3)> [Ties0: 3] [Ties1: 3] [Ties1/t: 3.00]
Saving cache...
Saved cache to <data/imdb/imdb.cands.cache>!
== QUERY ID: 54 ==
Pruned candidates for movies: 1
 - movie.title (0.9999999)
Pruned candidates for Netflix: 2
 - company.name = 'Netflix' (1.0)
 - keyword.keyword = 'netflix' (1.0)
TOTAL INTERPS COUNT: 2
TOTAL SCORE: 0.8471404120791022, TIES: 0
--
movies :: movie.title : movie.title (0.9999999)
Netflix :: company.name = 'Netflix' : keyword.keyword = 'netflix' (1.0)
QUERY > [Ties0: N] [Ties1: N] [Ties1/t: 0.00]
FRAGMENT (Total: 2)> [Ties0: 1] [Ties1: 1] [Ties1/t: 1.00]
== QUERY ID: 117 ==
Pruned candidates for movies: 1
 - movie.title (0.9999999)
Pruned candidates for featuring: 5
 - tv_series (0.6595)
 - directed_by (0.59885)
 - made_by (0.57665)
 - written_by (0.5763)
 - cast (0.57585)
Pruned candidates for Benedict Cumberbatch: 2
 - producer.name = 'Benedict Cumberbatch' (1.0)
 - actor.name = 'Benedict Cumberbatch' (1.0)
Pruned candidates for Keira Knightley: 2
 - producer.name = 'Keira Knightley' (1.0)
 - actor.name = 'Keira Knightley' (1.0)
TOTAL INTERPS COUNT: 20
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain written_by
Returning 0.0 because Steiner tree doesn't contain cast
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain written_by
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain written_by
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain written_by
TOTAL SCORE: 0.7288773074928621, TIES: 0
--
movies :: movie.title : movie.title (0.9999999)
featuring :: actor; cast : tv_series (0.6595)
Benedict Cumberbatch :: actor.name = 'Benedict Cumberbatch' : actor.name = 'Benedict Cumberbatch' (1.0)
Keira Knightley :: actor.name = 'Keira Knightley' : actor.name = 'Keira Knightley' (1.0)
QUERY > [Ties0: N] [Ties1: N] [Ties1/t: 0.00]
FRAGMENT (Total: 4)> [Ties0: 3] [Ties1: 3] [Ties1/t: 3.00]
== QUERY ID: 91 ==
Pruned candidates for movies: 1
 - count(movie.title) (0.9999999)
Pruned candidates for directed by: 1
 - directed_by (1.0)
Pruned candidates for Woody Allen: 4
 - producer.name = 'Woody Allen' (1.0)
 - writer.name = 'Woody Allen' (1.0)
 - director.name = 'Woody Allen' (1.0)
 - actor.name = 'Woody Allen' (1.0)
Pruned candidates for year: 6
 - tv_series.release_year (0.83155)
 - movie.release_year (0.83155)
 - producer.birth_year (0.79285)
 - director.birth_year (0.79285)
 - actor.birth_year (0.79285)
 - writer.birth_year (0.79285)
TOTAL INTERPS COUNT: 24
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain directed_by
TOTAL SCORE: 0.7812050896598975, TIES: 0
--
movies :: count(movie.title) : count(movie.title) (0.9999999)
directed by :: directed_by; director : directed_by (1.0)
Woody Allen :: director.name = 'Woody Allen' : director.name = 'Woody Allen' (1.0)
year :: movie.release_year : tv_series.release_year (0.83155)
QUERY > [Ties0: N] [Ties1: N] [Ties1/t: 0.00]
FRAGMENT (Total: 4)> [Ties0: 3] [Ties1: 3] [Ties1/t: 3.00]
== QUERY ID: 38 ==
Pruned candidates for movies: 1
 - movie.title (0.9999999)
Pruned candidates for featuring: 5
 - tv_series (0.6595)
 - directed_by (0.59885)
 - made_by (0.57665)
 - written_by (0.5763)
 - cast (0.57585)
Pruned candidates for Benedict Cumberbatch: 2
 - producer.name = 'Benedict Cumberbatch' (1.0)
 - actor.name = 'Benedict Cumberbatch' (1.0)
TOTAL INTERPS COUNT: 10
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain written_by
Returning 0.0 because Steiner tree doesn't contain cast
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain written_by
TOTAL SCORE: 0.7538222703410722, TIES: 0
--
movies :: movie.title : movie.title (0.9999999)
featuring :: actor; cast : tv_series (0.6595)
Benedict Cumberbatch :: actor.name = 'Benedict Cumberbatch' : actor.name = 'Benedict Cumberbatch' (1.0)
QUERY > [Ties0: N] [Ties1: N] [Ties1/t: 0.00]
FRAGMENT (Total: 3)> [Ties0: 2] [Ties1: 2] [Ties1/t: 2.00]
== QUERY ID: 81 ==
Pruned candidates for movie: 1
 - movie.title (1.0)
Pruned candidates for Daffy Duck: 1
 - cast.role = 'Daffy Duck' (1.0)
TOTAL INTERPS COUNT: 1
TOTAL SCORE: 0.8412568498503518, TIES: 0
--
movie :: movie.title : movie.title (1.0)
Daffy Duck :: cast.role = 'Daffy Duck' : cast.role = 'Daffy Duck' (1.0)
QUERY > [Ties0: Y] [Ties1: Y] [Ties1/t: 1.00]
FRAGMENT (Total: 2)> [Ties0: 2] [Ties1: 2] [Ties1/t: 2.00]
Saving cache...
Saved cache to <data/imdb/imdb.cands.cache>!
== QUERY ID: 13 ==
Pruned candidates for city born: 8
 - actor.birth_city (0.8615999999999999)
 - producer.birth_city (0.8615999999999999)
 - director.birth_city (0.8615999999999999)
 - writer.birth_city (0.8615999999999999)
 - actor.birth_year (0.7273499999999999)
 - producer.birth_year (0.7273499999999999)
 - director.birth_year (0.7273499999999999)
 - writer.birth_year (0.7273499999999999)
Pruned candidates for Kevin Spacey: 4
 - producer.name = 'Kevin Spacey' (1.0)
 - writer.name = 'Kevin Spacey' (1.0)
 - director.name = 'Kevin Spacey' (1.0)
 - actor.name = 'Kevin Spacey' (1.0)
TOTAL INTERPS COUNT: 32
TOTAL SCORE: 0.7625792886958268, TIES: 3
--
city born :: actor.birth_city; producer.birth_city; director.birth_city; writer.birth_city : producer.birth_city (0.8615999999999999)
Kevin Spacey :: actor.name = 'Kevin Spacey'; producer.name = 'Kevin Spacey'; director.name = 'Kevin Spacey'; writer.name = 'Kevin Spacey' : producer.name = 'Kevin Spacey' (1.0)
--
city born :: actor.birth_city; producer.birth_city; director.birth_city; writer.birth_city : writer.birth_city (0.8615999999999999)
Kevin Spacey :: actor.name = 'Kevin Spacey'; producer.name = 'Kevin Spacey'; director.name = 'Kevin Spacey'; writer.name = 'Kevin Spacey' : writer.name = 'Kevin Spacey' (1.0)
--
city born :: actor.birth_city; producer.birth_city; director.birth_city; writer.birth_city : director.birth_city (0.8615999999999999)
Kevin Spacey :: actor.name = 'Kevin Spacey'; producer.name = 'Kevin Spacey'; director.name = 'Kevin Spacey'; writer.name = 'Kevin Spacey' : director.name = 'Kevin Spacey' (1.0)
--
city born :: actor.birth_city; producer.birth_city; director.birth_city; writer.birth_city : actor.birth_city (0.8615999999999999)
Kevin Spacey :: actor.name = 'Kevin Spacey'; producer.name = 'Kevin Spacey'; director.name = 'Kevin Spacey'; writer.name = 'Kevin Spacey' : actor.name = 'Kevin Spacey' (1.0)
QUERY > [Ties0: Y] [Ties1: Y] [Ties1/t: 1.00]
FRAGMENT (Total: 2)> [Ties0: 2] [Ties1: 2] [Ties1/t: 2.00]
== QUERY ID: 112 ==
Pruned candidates for actors: 1
 - count(actor.name) (0.9999999)
Pruned candidates for China: 10
 - writer.name = 'China' (1.0)
 - producer.nationality = 'China' (1.0)
 - movie.title = 'China' (1.0)
 - director.name = 'China' (1.0)
 - company.name = 'China' (1.0)
 - director.nationality = 'China' (1.0)
 - producer.name = 'China' (1.0)
 - writer.nationality = 'China' (1.0)
 - actor.nationality = 'China' (1.0)
 - actor.name = 'China' (1.0)
Pruned candidates for acted: 5
 - written_by (0.652)
 - directed_by (0.65105)
 - made_by (0.6064)
 - cast (0.5967)
 - actor (0.58095)
Pruned candidates for Rush Hour 3: 3
 - tags.id = 3 (0.7393884804350146)
 - company.id = 3 (0.7393884804350146)
 - genre.gid = 3 (0.7208314886296241)
TOTAL INTERPS COUNT: 150
Returning 0.0 because Steiner tree doesn't contain written_by
Returning 0.0 because Steiner tree doesn't contain written_by
Returning 0.0 because Steiner tree doesn't contain written_by
Returning 0.0 because Steiner tree doesn't contain written_by
Returning 0.0 because Steiner tree doesn't contain written_by
Returning 0.0 because Steiner tree doesn't contain written_by
Returning 0.0 because Steiner tree doesn't contain written_by
Returning 0.0 because Steiner tree doesn't contain written_by
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain made_by
Returning 0.0 because Steiner tree doesn't contain made_by
Returning 0.0 because Steiner tree doesn't contain made_by
Returning 0.0 because Steiner tree doesn't contain made_by
Returning 0.0 because Steiner tree doesn't contain made_by
Returning 0.0 because Steiner tree doesn't contain made_by
Returning 0.0 because Steiner tree doesn't contain made_by
Returning 0.0 because Steiner tree doesn't contain written_by
Returning 0.0 because Steiner tree doesn't contain written_by
Returning 0.0 because Steiner tree doesn't contain written_by
Returning 0.0 because Steiner tree doesn't contain written_by
Returning 0.0 because Steiner tree doesn't contain written_by
Returning 0.0 because Steiner tree doesn't contain written_by
Returning 0.0 because Steiner tree doesn't contain written_by
Returning 0.0 because Steiner tree doesn't contain written_by
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain made_by
Returning 0.0 because Steiner tree doesn't contain made_by
Returning 0.0 because Steiner tree doesn't contain made_by
Returning 0.0 because Steiner tree doesn't contain made_by
Returning 0.0 because Steiner tree doesn't contain made_by
Returning 0.0 because Steiner tree doesn't contain made_by
Returning 0.0 because Steiner tree doesn't contain made_by
Returning 0.0 because Steiner tree doesn't contain made_by
Returning 0.0 because Steiner tree doesn't contain written_by
Returning 0.0 because Steiner tree doesn't contain written_by
Returning 0.0 because Steiner tree doesn't contain written_by
Returning 0.0 because Steiner tree doesn't contain written_by
Returning 0.0 because Steiner tree doesn't contain written_by
Returning 0.0 because Steiner tree doesn't contain written_by
Returning 0.0 because Steiner tree doesn't contain written_by
Returning 0.0 because Steiner tree doesn't contain written_by
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain made_by
Returning 0.0 because Steiner tree doesn't contain made_by
Returning 0.0 because Steiner tree doesn't contain made_by
Returning 0.0 because Steiner tree doesn't contain made_by
Returning 0.0 because Steiner tree doesn't contain made_by
Returning 0.0 because Steiner tree doesn't contain made_by
Returning 0.0 because Steiner tree doesn't contain made_by
TOTAL SCORE: 0.6755996270113939, TIES: 0
--
actors :: count(actor.name) : count(actor.name) (0.9999999)
China :: actor.nationality = 'China' : director.name = 'China' (1.0)
acted :: actor; cast : directed_by (0.65105)
Rush Hour 3 :: movie.title = 'Rush Hour 3' : tags.id = 3 (0.7393884804350146)
QUERY > [Ties0: N] [Ties1: N] [Ties1/t: 0.00]
FRAGMENT (Total: 4)> [Ties0: 1] [Ties1: 1] [Ties1/t: 1.00]
== QUERY ID: 83 ==
Pruned candidates for roles: 1
 - cast.role (0.9999999)
Pruned candidates for movie Daddy Long Legs: 2
 - movie.title = 'Daddy Long Legs' (1.0)
 - movie.title = 'Daddy-Long-Legs' (1.0)
TOTAL INTERPS COUNT: 2
TOTAL SCORE: 0.8199999599999991, TIES: 1
--
roles :: cast.role : cast.role (0.9999999)
movie Daddy Long Legs :: movie.title = 'Daddy Long Legs'; movie.title = 'Daddy-Long-Legs' : movie.title = 'Daddy Long Legs' (1.0)
--
roles :: cast.role : cast.role (0.9999999)
movie Daddy Long Legs :: movie.title = 'Daddy Long Legs'; movie.title = 'Daddy-Long-Legs' : movie.title = 'Daddy-Long-Legs' (1.0)
QUERY > [Ties0: Y] [Ties1: Y] [Ties1/t: 1.00]
FRAGMENT (Total: 2)> [Ties0: 2] [Ties1: 2] [Ties1/t: 2.00]
== QUERY ID: 125 ==
Pruned candidates for name: 5
 - writer.name (1.0)
 - company.name (1.0)
 - director.name (1.0)
 - producer.name (1.0)
 - actor.name (1.0)
Pruned candidates for budget: 2
 - movie.budget (1.0)
 - tv_series.budget (1.0)
Pruned candidates for latest: 5
 - movie.release_year = max(movie.release_year) (0.6627000000000001)
 - tv_series.release_year = max(tv_series.release_year) (0.6627000000000001)
 - movie.mid = max(movie.mid) (0.5938)
 - company.name = max(company.name) (0.5753)
 - company.country_code = max(company.country_code) (0.5602)
Pruned candidates for movie: 1
 - movie (1.0)
Pruned candidates for Quentin Tarantino: 4
 - director.name = 'Quentin Tarantino' (1.0)
 - actor.name = 'Quentin Tarantino' (1.0)
 - producer.name = 'Quentin Tarantino' (1.0)
 - writer.name = 'Quentin Tarantino' (1.0)
TOTAL INTERPS COUNT: 200
Returning 0.0 because Steiner tree doesn't contain movie
Returning 0.0 because Steiner tree doesn't contain movie
Returning 0.0 because Steiner tree doesn't contain movie
Returning 0.0 because Steiner tree doesn't contain movie
Returning 0.0 because Steiner tree doesn't contain movie
Returning 0.0 because Steiner tree doesn't contain movie
Returning 0.0 because Steiner tree doesn't contain movie
Returning 0.0 because Steiner tree doesn't contain movie
Returning 0.0 because Steiner tree doesn't contain movie
Returning 0.0 because Steiner tree doesn't contain movie
Returning 0.0 because Steiner tree doesn't contain movie
Returning 0.0 because Steiner tree doesn't contain movie
Returning 0.0 because Steiner tree doesn't contain movie
Returning 0.0 because Steiner tree doesn't contain movie
Returning 0.0 because Steiner tree doesn't contain movie
Returning 0.0 because Steiner tree doesn't contain movie
Returning 0.0 because Steiner tree doesn't contain movie
Returning 0.0 because Steiner tree doesn't contain movie
TOTAL SCORE: 0.7504548554927302, TIES: 0
--
name :: movie.title : actor.name (1.0)
budget :: movie.budget : tv_series.budget (1.0)
latest :: movie.release_year = max(movie.release_year) : movie.release_year = max(movie.release_year) (0.6627000000000001)
movie :: movie : movie (1.0)
Quentin Tarantino :: director.name = 'Quentin Tarantino' : actor.name = 'Quentin Tarantino' (1.0)
QUERY > [Ties0: N] [Ties1: N] [Ties1/t: 0.00]
FRAGMENT (Total: 5)> [Ties0: 2] [Ties1: 2] [Ties1/t: 2.00]
== QUERY ID: 57 ==
Pruned candidates for director: 1
 - director.name (1.0)
Pruned candidates for series House of Cards: 5
 - tv_series.title = 'House of Cards' (0.940149)
 - tv_series.title = 'House of Card' (0.901049)
 - company.country_code (0.6250495)
 - tv_series.num_of_episodes (0.598149)
 - movie.mid (0.5911495)
Pruned candidates for 2013: 6
 - actor.birth_year = 2013 (0.9999)
 - movie.release_year = 2013 (0.9999)
 - tv_series.release_year = 2013 (0.9999)
 - tags.id = 2013 (0.9999)
 - keyword.id = 2013 (0.9999)
 - company.id = 2013 (0.9999)
TOTAL INTERPS COUNT: 30
TOTAL SCORE: 0.7938992452252287, TIES: 0
--
director :: director.name : director.name (1.0)
series House of Cards :: tv_series.title = 'House of Cards' : tv_series.title = 'House of Cards' (0.940149)
2013 :: tv_series.release_year = 2013 : tv_series.release_year = 2013 (0.9999)
QUERY > [Ties0: Y] [Ties1: Y] [Ties1/t: 1.00]
FRAGMENT (Total: 3)> [Ties0: 3] [Ties1: 3] [Ties1/t: 3.00]
Saving cache...
Saved cache to <data/imdb/imdb.cands.cache>!
== QUERY ID: 8 ==
Pruned candidates for year born: 8
 - director.birth_year (0.84765)
 - writer.birth_year (0.84765)
 - actor.birth_year (0.84765)
 - producer.birth_year (0.84765)
 - writer.birth_city (0.738)
 - actor.birth_city (0.738)
 - director.birth_city (0.738)
 - producer.birth_city (0.738)
Pruned candidates for Benedict Cumberbatch: 2
 - producer.name = 'Benedict Cumberbatch' (1.0)
 - actor.name = 'Benedict Cumberbatch' (1.0)
TOTAL INTERPS COUNT: 16
TOTAL SCORE: 0.790976383146055, TIES: 0
--
year born :: actor.birth_year; producer.birth_year : actor.birth_year (0.84765)
Benedict Cumberbatch :: actor.name = 'Benedict Cumberbatch'; producer.name = 'Benedict Cumberbatch' : actor.name = 'Benedict Cumberbatch' (1.0)
QUERY > [Ties0: Y] [Ties1: Y] [Ties1/t: 1.00]
FRAGMENT (Total: 2)> [Ties0: 2] [Ties1: 2] [Ties1/t: 2.00]
== QUERY ID: 18 ==
Pruned candidates for actors: 1
 - actor.name (0.9999999)
Pruned candidates for Tehran: 7
 - director.birth_city = 'Tehran' (1.0)
 - keyword.keyword = 'tehran' (1.0)
 - producer.birth_city = 'Tehran' (1.0)
 - writer.birth_city = 'Tehran' (1.0)
 - cast.role = 'Tehran' (1.0)
 - actor.birth_city = 'Tehran' (1.0)
 - movie.title = 'Tehran' (1.0)
TOTAL INTERPS COUNT: 7
TOTAL SCORE: 0.9333332933333324, TIES: 0
--
actors :: actor.name : actor.name (0.9999999)
Tehran :: actor.birth_city = 'Tehran' : actor.birth_city = 'Tehran' (1.0)
QUERY > [Ties0: Y] [Ties1: Y] [Ties1/t: 1.00]
FRAGMENT (Total: 2)> [Ties0: 2] [Ties1: 2] [Ties1/t: 2.00]
== QUERY ID: 110 ==
Pruned candidates for actors: 1
 - count(actor.name) (0.9999999)
Pruned candidates for Iran: 6
 - writer.nationality = 'Iran' (1.0)
 - actor.name = 'Iran' (1.0)
 - actor.nationality = 'Iran' (1.0)
 - director.nationality = 'Iran' (1.0)
 - producer.nationality = 'Iran' (1.0)
 - movie.title = 'Iran' (1.0)
Pruned candidates for played: 5
 - cast (0.6295)
 - actor (0.5995)
 - tv_series (0.59235)
 - made_by (0.57695)
 - movie (0.5751)
Pruned candidates for Jim Jarmusch: 4
 - writer.name = 'Jim Jarmusch' (1.0)
 - producer.name = 'Jim Jarmusch' (1.0)
 - actor.name = 'Jim Jarmusch' (1.0)
 - director.name = 'Jim Jarmusch' (1.0)
Pruned candidates for movies: 1
 - movie (0.9999999)
TOTAL INTERPS COUNT: 120
Returning 0.0 because Steiner tree doesn't contain made_by
Returning 0.0 because Steiner tree doesn't contain made_by
Returning 0.0 because Steiner tree doesn't contain made_by
Returning 0.0 because Steiner tree doesn't contain made_by
Returning 0.0 because Steiner tree doesn't contain made_by
Returning 0.0 because Steiner tree doesn't contain movie
Returning 0.0 because Steiner tree doesn't contain movie
Returning 0.0 because Steiner tree doesn't contain movie
Returning 0.0 because Steiner tree doesn't contain cast
Returning 0.0 because Steiner tree doesn't contain cast
Returning 0.0 because Steiner tree doesn't contain movie
Returning 0.0 because Steiner tree doesn't contain movie
Returning 0.0 because Steiner tree doesn't contain tv_series
Returning 0.0 because Steiner tree doesn't contain tv_series
Returning 0.0 because Steiner tree doesn't contain movie
Returning 0.0 because Steiner tree doesn't contain made_by
Returning 0.0 because Steiner tree doesn't contain made_by
Returning 0.0 because Steiner tree doesn't contain made_by
Returning 0.0 because Steiner tree doesn't contain made_by
Returning 0.0 because Steiner tree doesn't contain made_by
Returning 0.0 because Steiner tree doesn't contain movie
Returning 0.0 because Steiner tree doesn't contain movie
Returning 0.0 because Steiner tree doesn't contain made_by
Returning 0.0 because Steiner tree doesn't contain made_by
Returning 0.0 because Steiner tree doesn't contain made_by
Returning 0.0 because Steiner tree doesn't contain made_by
Returning 0.0 because Steiner tree doesn't contain made_by
TOTAL SCORE: 0.7493538526480314, TIES: 0
--
actors :: count(actor.name) : count(actor.name) (0.9999999)
Iran :: actor.nationality = 'Iran' : actor.name = 'Iran' (1.0)
played :: actor; cast : cast (0.6295)
Jim Jarmusch :: director.name = 'Jim Jarmusch'; writer.name = 'Jim Jarmusch'; producer.name = 'Jim Jarmusch' : director.name = 'Jim Jarmusch' (1.0)
movies :: movie : movie (0.9999999)
QUERY > [Ties0: N] [Ties1: N] [Ties1/t: 0.00]
FRAGMENT (Total: 5)> [Ties0: 4] [Ties1: 4] [Ties1/t: 4.00]
== QUERY ID: 41 ==
Pruned candidates for movies: 1
 - movie.title (0.9999999)
Pruned candidates for directed by: 1
 - directed_by (1.0)
Pruned candidates for Woody Allen: 4
 - producer.name = 'Woody Allen' (1.0)
 - writer.name = 'Woody Allen' (1.0)
 - director.name = 'Woody Allen' (1.0)
 - actor.name = 'Woody Allen' (1.0)
Pruned candidates for featuring: 5
 - tv_series (0.6595)
 - directed_by (0.59885)
 - made_by (0.57665)
 - written_by (0.5763)
 - cast (0.57585)
Pruned candidates for Scarlett Johansson: 4
 - writer.name = 'Scarlett Johansson' (1.0)
 - director.name = 'Scarlett Johansson' (1.0)
 - actor.name = 'Scarlett Johansson' (1.0)
 - producer.name = 'Scarlett Johansson' (1.0)
TOTAL INTERPS COUNT: 80
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain tv_series
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain made_by
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain cast
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain tv_series
Returning 0.0 because Steiner tree doesn't contain tv_series
Returning 0.0 because Steiner tree doesn't contain tv_series
Returning 0.0 because Steiner tree doesn't contain made_by
Returning 0.0 because Steiner tree doesn't contain made_by
Returning 0.0 because Steiner tree doesn't contain written_by
Returning 0.0 because Steiner tree doesn't contain written_by
Returning 0.0 because Steiner tree doesn't contain written_by
Returning 0.0 because Steiner tree doesn't contain cast
Returning 0.0 because Steiner tree doesn't contain cast
Returning 0.0 because Steiner tree doesn't contain cast
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain written_by
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain tv_series
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain written_by
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain directed_by
Returning 0.0 because Steiner tree doesn't contain cast
Returning 0.0 because Steiner tree doesn't contain directed_by
TOTAL SCORE: 0.7727130535747815, TIES: 1
--
movies :: movie.title : movie.title (0.9999999)
directed by :: directed_by; director : directed_by (1.0)
Woody Allen :: director.name = 'Woody Allen' : actor.name = 'Woody Allen' (1.0)
featuring :: actor; cast : tv_series (0.6595)
Scarlett Johansson :: actor.name = 'Scarlett Johansson' : director.name = 'Scarlett Johansson' (1.0)
--
movies :: movie.title : movie.title (0.9999999)
directed by :: directed_by; director : directed_by (1.0)
Woody Allen :: director.name = 'Woody Allen' : director.name = 'Woody Allen' (1.0)
featuring :: actor; cast : tv_series (0.6595)
Scarlett Johansson :: actor.name = 'Scarlett Johansson' : actor.name = 'Scarlett Johansson' (1.0)
QUERY > [Ties0: N] [Ties1: N] [Ties1/t: 0.00]
FRAGMENT (Total: 5)> [Ties0: 2] [Ties1: 4] [Ties1/t: 3.00]
== QUERY ID: 30 ==
Pruned candidates for actors: 1
 - actor.name (0.9999999)
Pruned candidates for Los Angeles: 5
 - writer.birth_city = 'Los Angeles' (1.0)
 - movie.title = 'Los Angeles' (1.0)
 - director.birth_city = 'Los Angeles' (1.0)
 - actor.birth_city = 'Los Angeles' (1.0)
 - producer.birth_city = 'Los Angeles' (1.0)
Pruned candidates for after 1980: 6
 - movie.mid > 1980 (0.7953217839340251)
 - director.did > 1980 (0.7732012739254895)
 - actor.birth_year > 1980 (0.7726838227891146)
 - writer.birth_year > 1980 (0.7726838227891146)
 - director.birth_year > 1980 (0.7726838227891146)
 - producer.birth_year > 1980 (0.7726838227891146)
TOTAL INTERPS COUNT: 30
TOTAL SCORE: 0.8661635386308109, TIES: 0
--
actors :: actor.name : actor.name (0.9999999)
Los Angeles :: actor.birth_city = 'Los Angeles' : actor.birth_city = 'Los Angeles' (1.0)
after 1980 :: actor.birth_year > 1980 : actor.birth_year > 1980 (0.7726838227891146)
QUERY > [Ties0: Y] [Ties1: Y] [Ties1/t: 1.00]
FRAGMENT (Total: 3)> [Ties0: 3] [Ties1: 3] [Ties1/t: 3.00]
Saving cache...
Saved cache to <data/imdb/imdb.cands.cache>!
== QUERY ID: 122 ==
Pruned candidates for movie: 1
 - movie.title (1.0)
Pruned candidates for classified: 3
 - classification (0.7148)
 - keyword (0.56395)
 - written_by (0.55745)
Pruned candidates for genres: 1
 - count(genre.genre) = max(count(genre.genre)) (0.9999999)
TOTAL INTERPS COUNT: 3
Returning 0.0 because Steiner tree doesn't contain keyword
Returning 0.0 because Steiner tree doesn't contain written_by
TOTAL SCORE: 0.7248860555848637, TIES: 0
--
movie :: movie.title : movie.title (1.0)
classified :: classification : classification (0.7148)
genres :: count(genre.genre) = max(count(genre.genre)) : count(genre.genre) = max(count(genre.genre)) (0.9999999)
QUERY > [Ties0: Y] [Ties1: Y] [Ties1/t: 1.00]
FRAGMENT (Total: 3)> [Ties0: 3] [Ties1: 3] [Ties1/t: 3.00]
Saving cache...
Saved cache to <data/imdb/imdb.cands.cache>!
==== FOLD RESULTS ====
19,19,19.000,32,76,80,78.000,97
==== FINAL RESULTS ====
21,21,21.000,33,81,83,82.000,96
22,22,22.000,33,77,77,77.000,88
17,17,17.000,32,79,81,80.000,99
19,19,19.000,32,76,80,78.000,97

