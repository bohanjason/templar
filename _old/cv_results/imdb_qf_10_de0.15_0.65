00:00  INFO: ==============================
00:00  INFO: Reading relations info...
00:00  INFO: Read 16 relations/views/functions.
00:00  INFO: ==============================

00:00  INFO: ==============================
00:00  INFO: Reading edges info...
00:00  INFO: Read 21 FK-PK relationships.
00:00  INFO: Read 21 PK-FK relationships.
00:00  INFO: ==============================

00:00  INFO: ==============================
00:00  INFO: Reading relations info...
00:00  INFO: Read 15 relations/views/functions.
00:00  INFO: ==============================

00:00  INFO: ==============================
00:00  INFO: Reading edges info...
00:00  INFO: Read 19 FK-PK relationships.
00:00  INFO: Read 19 PK-FK relationships.
00:00  INFO: ==============================

00:00  INFO: ==============================
00:00  INFO: Reading relations info...
00:00  INFO: Read 7 relations/views/functions.
00:00  INFO: ==============================

00:00  INFO: ==============================
00:00  INFO: Reading edges info...
00:00  INFO: Read 7 FK-PK relationships.
00:00  INFO: Read 7 PK-FK relationships.
00:00  INFO: ==============================

00:00  INFO: ===== Parsing Results =====
00:00  INFO: Total Queries: 196
00:00  INFO: Correctly Parsed: 182/196

00:00  INFO: ===== Parsing Results =====
00:00  INFO: Total Queries: 128
00:00  INFO: Correctly Parsed: 95/128

00:00  INFO: ==============================
00:00  INFO: Generating templates using schema for join level: 6
00:02  INFO: Done generating 4979 templates.
00:02  INFO: ==============================

00:04  INFO: ===== FOLD 0 =====
Loading parser from serialized file edu/stanford/nlp/models/lexparser/englishPCFG.ser.gz ... done [1.2 sec].
00:04  INFO: ===== Parsing Results =====
00:04  INFO: Total Queries: 9
00:04  INFO: Correctly Parsed: 9/9

00:04  INFO: ================
00:04  INFO: QUERY 14: Find all actors from Italy
00:04  INFO: ================
00:07  INFO: ================
00:07  INFO: QUERY 123: which movie has the most number of actors from China?
00:07  INFO: ================
00:10  INFO: ================
00:10  INFO: QUERY 125: Find the name and budget of the latest movie by "Quentin Tarantino"
00:10  INFO: ================
20. ROOT: ROOT; NA; ; (0) 
21. Find: CMT; NA; ; (0) 
22. name: VTTEXT; NA; ; (0) movie.title(0.95):Name; Name; Names; | actor.name(0.95):name; No Name; Famous Names; | actor.name(0.81):| director.name(0.79):| tv_series.title(0.79):Same Name; No Names; Name This; | keyword.keyword(0.79):same-name; name-game; naming-names; | writer.name(0.79):| 
25. budget: NT; NA; ; (0) movie.budget(1.0):| tv_series.budget(1.0):| movie.title(0.95):Budget; Fudget's Budget; No Budget; | tv_series.title(0.95):Budget; Budget TV; No Budget Gourmet; | cast.role(0.95):Budgets; Budgets; Budgets; | keyword.keyword(0.95):budget; in-budget; no-budget; | company.name(0.71):Low Budget; Cero Budget; Budget Movies; | 
26. movie: NT; NA; ; (0) movie.title(1.0):| movie(1.0):| cast.role(0.95):Movie; Movie F; Movie AD; | company.name(0.95):Movie; Movies; Movie Movie; | keyword.keyword(0.83):movie-in-movie; b-movie; z-movie; | actor.name(0.76):| actor(0.76):| 
29. latest: FT; max; ; (0) 
30. Quentin Tarantino: VTTEXT; NA; ; (0) director.name(1.0):Quentin Tarantino; Quentin Tarantino; Quentin Tarrantino; | actor.name(1.0):Quentin Tarantino; Quentin Tarantino; Quentin Tarrantino; | producer.name(1.0):Quentin Tarantino; Quentin Tarantino; Quentin Tarrantino; | writer.name(1.0):Quentin Tarantino; Quentin Tarantino; Quentin Tarrantino; | cast.role(0.85):Quentin Tarrantino '; Quentin Tarrantino '; Quentin Tarrantino '; | movie.title(0.84):21 Years: Quentin Ta; 21 Years: Quentin Ta; Quentin Tarantino's ; | writer.birth_city(0.74):San Quentin; San Quentin; Saint-Quentin; | 
Find, VB
the, DT
name, NN
and, CC
budget, NN
of, IN
the, DT
latest, JJS
movie, NN
by, IN
Quentin Tarantino, NNP
root(ROOT-0, Find-1)
det(name-3, the-2)
dobj(Find-1, name-3)
cc(name-3, and-4)
conj(name-3, budget-5)
case(movie-9, of-6)
det(movie-9, the-7)
amod(movie-9, latest-8)
nmod(name-3, movie-9)
case(Quentin Tarantino-11, by-10)
nmod(Find-1, Quentin Tarantino-11)

PARSE TREE:(20) ROOT ROOT
    (21) Find CMT
        (22) name VTTEXT
            (26) movie NT
        (25) budget NT
        (30) Quentin Tarantino VTTEXT


===========
TRANSLATIONS
===========
TOT: 0.9174505626104981; NL: 0.9174505626104981; NL+AG: 0.9734002230204892; NL+QF: 0.9174505626104981; rels: []; projs: [actor_0.name]; preds: [director_0.name = "Quentin Tarantino"]; havings: []; superlative: [movie_0.title desc limit 1]; blanks: 1
TOT: 0.9174505626104981; NL: 0.9174505626104981; NL+AG: 0.9734002230204892; NL+QF: 0.9174505626104981; rels: []; projs: [actor_0.name]; preds: [actor_0.name = "Quentin Tarantino"]; havings: []; superlative: [movie_0.title desc limit 1]; blanks: 1
TOT: 0.9174505626104981; NL: 0.9174505626104981; NL+AG: 0.9734002230204892; NL+QF: 0.9174505626104981; rels: []; projs: [actor_0.name]; preds: [producer_0.name = "Quentin Tarantino"]; havings: []; superlative: [movie_0.title desc limit 1]; blanks: 1
TOT: 0.9174505626104981; NL: 0.9174505626104981; NL+AG: 0.9734002230204892; NL+QF: 0.9174505626104981; rels: []; projs: [actor_0.name]; preds: [writer_0.name = "Quentin Tarantino"]; havings: []; superlative: [movie_0.title desc limit 1]; blanks: 1
TOT: 0.9047536635140568; NL: 0.8616655341946088; NL+AG: 0.9774825821692584; NL+QF: 0.9047536635140568; rels: []; projs: [actor_0.name]; preds: [cast_0.role = "Budgets",director_0.name = "Quentin Tarantino"]; havings: []; superlative: [movie_0.title desc limit 1]; blanks: 0
TOT: 0.9047536635140568; NL: 0.8616655341946088; NL+AG: 0.9774825821692584; NL+QF: 0.9047536635140568; rels: []; projs: [actor_0.name]; preds: [cast_0.role = "Budgets",actor_0.name = "Quentin Tarantino"]; havings: []; superlative: [movie_0.title desc limit 1]; blanks: 0
TOT: 0.9047536635140568; NL: 0.8616655341946088; NL+AG: 0.9774825821692584; NL+QF: 0.9047536635140568; rels: []; projs: [actor_0.name]; preds: [cast_0.role = "Budgets",producer_0.name = "Quentin Tarantino"]; havings: []; superlative: [movie_0.title desc limit 1]; blanks: 0
TOT: 0.9047536635140568; NL: 0.8616655341946088; NL+AG: 0.9774825821692584; NL+QF: 0.9047536635140568; rels: []; projs: [actor_0.name]; preds: [cast_0.role = "Budgets",writer_0.name = "Quentin Tarantino"]; havings: []; superlative: [movie_0.title desc limit 1]; blanks: 0
TOT: 0.9003793194223386; NL: 0.8323272804353702; NL+AG: 0.9595771016680272; NL+QF: 0.9003793194223386; rels: []; projs: [actor_0.name]; preds: [cast_0.role = "Budgets",movie_0.title = "21 Years: Quentin Tarantino"]; havings: []; superlative: [movie_0.title desc limit 1]; blanks: 0
TOT: 0.8982238085854449; NL: 0.8879579826791157; NL+AG: 0.9557508540140572; NL+QF: 0.8982238085854449; rels: []; projs: [actor_0.name]; preds: [cast_0.role = "Quentin Tarrantino 'esque' Patient"]; havings: []; superlative: [movie_0.title desc limit 1]; blanks: 1
TOT: 0.8917302610657828; NL: 0.8862129230052637; NL+AG: 0.9547774891905295; NL+QF: 0.8917302610657828; rels: []; projs: [actor_0.name]; preds: [movie_0.title = "21 Years: Quentin Tarantino"]; havings: []; superlative: [movie_0.title desc limit 1]; blanks: 1

===========
RESULTS
===========
TOT: 0.8423621368790457; TR: 0.8982238085854449; QF: 0.23376623376623376; select actor_0.name from actor as actor_0, cast as cast_0, movie as movie_0 where cast_0.role = "Quentin Tarrantino 'esque' Patient" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid order by movie_0.title desc limit 1
TOT: 0.8400056337230901; TR: 0.9174505626104981; QF: 0.14012987012987013; select actor_0.name from actor as actor_0, cast as cast_0, directed_by as directed_by_0, director as director_0, movie as movie_0 where director_0.name = "Quentin Tarantino" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid order by movie_0.title desc limit 1
TOT: 0.8384306337230901; TR: 0.9174505626104981; QF: 0.07012987012987013; select actor_0.name from actor as actor_0, cast as cast_0, movie as movie_0, writer as writer_0, written_by as written_by_0 where writer_0.name = "Quentin Tarantino" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and movie_0.mid = written_by_0.msid and writer_0.wid = written_by_0.wid order by movie_0.title desc limit 1
TOT: 0.8384306337230901; TR: 0.9174505626104981; QF: 0.07012987012987013; select actor_0.name from actor as actor_0, cast as cast_0, made_by as made_by_0, movie as movie_0, producer as producer_0 where producer_0.name = "Quentin Tarantino" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid order by movie_0.title desc limit 1
TOT: 0.8384306337230901; TR: 0.9174505626104981; QF: 0.07012987012987013; select actor_0.name from actor as actor_0, actor as actor_1, cast as cast_0, cast as cast_1, movie as movie_0 where actor_1.name = "Quentin Tarantino" and actor_0.aid = cast_0.aid and actor_1.aid = cast_1.aid and cast_0.msid = movie_0.mid and cast_1.msid = movie_0.mid order by movie_0.title desc limit 1
TOT: 0.8293105542789914; TR: 0.9174505626104981; QF: 0.05720470006184292; select actor_0.name from actor as actor_0, cast as cast_0, cast as cast_1, directed_by as directed_by_0, director as director_0, movie as movie_0, tv_series as tv_series_0 where director_0.name = "Quentin Tarantino" and actor_0.aid = cast_0.aid and actor_0.aid = cast_1.aid and cast_0.msid = movie_0.mid and cast_1.msid = tv_series_0.sid and directed_by_0.did = director_0.did and directed_by_0.msid = tv_series_0.sid order by movie_0.title desc limit 1
TOT: 0.8292326322010692; TR: 0.9174505626104981; QF: 0.05374149659863946; select actor_0.name from actor as actor_0, cast as cast_0, directed_by as directed_by_0, directed_by as directed_by_1, director as director_0, movie as movie_0, tv_series as tv_series_0 where director_0.name = "Quentin Tarantino" and actor_0.aid = cast_0.aid and cast_0.msid = tv_series_0.sid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and directed_by_1.did = director_0.did and directed_by_1.msid = tv_series_0.sid order by movie_0.title desc limit 1
TOT: 0.8292132694911151; TR: 0.9047536635140568; QF: 0.14012987012987013; select actor_0.name from actor as actor_0, cast as cast_0, directed_by as directed_by_0, director as director_0, movie as movie_0 where cast_0.role = "Budgets" and director_0.name = "Quentin Tarantino" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid order by movie_0.title desc limit 1
TOT: 0.8287748399932771; TR: 0.9174505626104981; QF: 0.03339517625231911; select actor_0.name from actor as actor_0, actor as actor_1, cast as cast_0, cast as cast_1, cast as cast_2, movie as movie_0, tv_series as tv_series_0 where actor_1.name = "Quentin Tarantino" and actor_0.aid = cast_0.aid and actor_0.aid = cast_1.aid and actor_1.aid = cast_2.aid and cast_0.msid = movie_0.mid and cast_1.msid = tv_series_0.sid and cast_2.msid = tv_series_0.sid order by movie_0.title desc limit 1
TOT: 0.8287748399932771; TR: 0.9174505626104981; QF: 0.03339517625231911; select actor_1.name from actor as actor_0, actor as actor_1, cast as cast_0, cast as cast_1, cast as cast_2, movie as movie_0, tv_series as tv_series_0 where actor_0.name = "Quentin Tarantino" and actor_0.aid = cast_0.aid and actor_0.aid = cast_1.aid and actor_1.aid = cast_2.aid and cast_0.msid = movie_0.mid and cast_1.msid = tv_series_0.sid and cast_2.msid = tv_series_0.sid order by movie_0.title desc limit 1


00:14  INFO: ================
00:14  INFO: QUERY 52: What company produced the series Scandal?
00:14  INFO: ================
00:17  INFO: ================
00:17  INFO: QUERY 93: How many movies did "Ronald Reagan" act in?
00:17  INFO: ================
00:20  INFO: ================
00:20  INFO: QUERY 36: Who are the actors born in "New York City" after 1990?
00:20  INFO: ================
00:25  INFO: ================
00:25  INFO: QUERY 65: Who acts as "Alan Turing" in the movie "The Imitation Game"?
00:25  INFO: ================
00:28  INFO: ================
00:28  INFO: QUERY 70: Give me the name of all the actors from Afghanistan
00:28  INFO: ================
00:29  INFO: ================
00:29  INFO: QUERY 40: Find all movies about Autism
00:29  INFO: ================
00:30  INFO: ================
00:30  INFO: QUERY 87: What is the number of movies in which "Jennifer Aniston" acted after 2010?
00:30  INFO: ================
90. ROOT: ROOT; NA; ; (0) 
91. What: CMT; NA; ; (0) 
93. number of: FT; count; ; (0) 
95. movies: NT; NA; ; (0) movie.title(1.0):| movie(1.0):| cast.role(0.95):Movie; Movie F; Movie AD; | company.name(0.95):Movies; Movie; Movie Movie; | tv_series.title(0.84):Movies, Movies, Movi; Movie Mob; Moon Movies; | keyword.keyword(0.83):movie-in-movie; movies-about-movies; b-movie; | actor.name(0.76):| 
97. acted: NT; NA; ; (0) movie.release_year(0.63):| tv_series.release_year(0.63):| actor.name(0.62):| actor(0.62):| genre.genre(0.62):| genre(0.62):| made_by(0.61):| 
100. Jennifer Aniston: VTTEXT; NA; ; (0) director.name(1.0):Jennifer Aniston; Jennifer Aniston; Jennifer Aniston Pit; | actor.name(1.0):Jennifer Aniston; Jennifer Aniston; Jennifer Aniston Pit; | producer.name(1.0):Jennifer Aniston; Jennifer Aniston; Jennifer Aniston Pit; | cast.role(0.91):Jennifer Faniston; Jennifer Faniston; Jennifer Tangston; | writer.name(0.84):Jennifer An; Jennifer An; Jennifer Piston; | movie.title(0.84):Dating Jennifer Anis; Dating Jennifer Anis; Jennifer; | company.name(0.74):Jennifer Alliston Le; Jennifer Alliston Le; Dear Jennifer; | 
101. 2010: VTNUM; NA; ; (0) movie.release_year(1.0):2012; 2014; 2015; | tv_series.release_year(1.0):2014; 2014; 2013; | actor.birth_year(1.0):2011; 2013; 2013; | 
102. after: OT; >; ; (0) 
What, WP
is, VBZ
the, DT
number, NN
of, IN
movies, NNS
in, IN
which, WDT
Jennifer Aniston, NNP
acted, VBD
after, IN
2010, CD
root(ROOT-0, What-1)
cop(What-1, is-2)
det(number-4, the-3)
nsubj(What-1, number-4)
case(movies-6, of-5)
nmod(number-4, movies-6)
case(which-8, in-7)
nmod(acted-10, which-8)
nsubj(acted-10, Jennifer Aniston-9)
acl:relcl(movies-6, acted-10)
case(2010-12, after-11)
nmod(acted-10, 2010-12)

PARSE TREE:(90) ROOT ROOT
    (91) What CMT
        (93) number of FT
            (95) movies NT
                (97) acted NT
                    (100) Jennifer Aniston VTTEXT
                    (101) 2010 VTNUM
                        (102) after OT


===========
TRANSLATIONS
===========
TOT: 0.8979007600118484; NL: 0.8979007600118484; NL+AG: 0.9685296079391709; NL+QF: 0.8979007600118484; rels: []; projs: [count(distinct(movie_0.title))]; preds: [director_0.name = "Jennifer Aniston",movie_0.release_year > 2010]; havings: []; superlative: []; blanks: 1
TOT: 0.8979007600118484; NL: 0.8979007600118484; NL+AG: 0.9685296079391709; NL+QF: 0.8979007600118484; rels: []; projs: [count(distinct(movie_0.title))]; preds: [director_0.name = "Jennifer Aniston",tv_series_0.release_year > 2010]; havings: []; superlative: []; blanks: 1
TOT: 0.8979007600118484; NL: 0.8979007600118484; NL+AG: 0.9685296079391709; NL+QF: 0.8979007600118484; rels: []; projs: [count(distinct(movie_0.title))]; preds: [director_0.name = "Jennifer Aniston",actor_0.birth_year > 2010]; havings: []; superlative: []; blanks: 1
TOT: 0.8979007600118484; NL: 0.8979007600118484; NL+AG: 0.9685296079391709; NL+QF: 0.8979007600118484; rels: []; projs: [count(distinct(movie_0.title))]; preds: [actor_0.name = "Jennifer Aniston",movie_0.release_year > 2010]; havings: []; superlative: []; blanks: 1
TOT: 0.8979007600118484; NL: 0.8979007600118484; NL+AG: 0.9685296079391709; NL+QF: 0.8979007600118484; rels: []; projs: [count(distinct(movie_0.title))]; preds: [actor_0.name = "Jennifer Aniston",tv_series_0.release_year > 2010]; havings: []; superlative: []; blanks: 1
TOT: 0.8979007600118484; NL: 0.8979007600118484; NL+AG: 0.9685296079391709; NL+QF: 0.8979007600118484; rels: []; projs: [count(distinct(movie_0.title))]; preds: [actor_0.name = "Jennifer Aniston",actor_0.birth_year > 2010]; havings: []; superlative: []; blanks: 1
TOT: 0.8979007600118484; NL: 0.8979007600118484; NL+AG: 0.9685296079391709; NL+QF: 0.8979007600118484; rels: []; projs: [count(distinct(movie_0.title))]; preds: [producer_0.name = "Jennifer Aniston",movie_0.release_year > 2010]; havings: []; superlative: []; blanks: 1
TOT: 0.8979007600118484; NL: 0.8979007600118484; NL+AG: 0.9685296079391709; NL+QF: 0.8979007600118484; rels: []; projs: [count(distinct(movie_0.title))]; preds: [producer_0.name = "Jennifer Aniston",tv_series_0.release_year > 2010]; havings: []; superlative: []; blanks: 1
TOT: 0.8979007600118484; NL: 0.8979007600118484; NL+AG: 0.9685296079391709; NL+QF: 0.8979007600118484; rels: []; projs: [count(distinct(movie_0.title))]; preds: [producer_0.name = "Jennifer Aniston",actor_0.birth_year > 2010]; havings: []; superlative: []; blanks: 1
TOT: 0.8780983407516854; NL: 0.8780983407516854; NL+AG: 0.9579164940772603; NL+QF: 0.8780983407516854; rels: []; projs: [count(distinct(movie_0.title))]; preds: [cast_0.role = "Jennifer Faniston",movie_0.release_year > 2010]; havings: []; superlative: []; blanks: 1
TOT: 0.8780983407516854; NL: 0.8780983407516854; NL+AG: 0.9579164940772603; NL+QF: 0.8780983407516854; rels: []; projs: [count(distinct(movie_0.title))]; preds: [cast_0.role = "Jennifer Faniston",tv_series_0.release_year > 2010]; havings: []; superlative: []; blanks: 1
TOT: 0.8780983407516854; NL: 0.8780983407516854; NL+AG: 0.9579164940772603; NL+QF: 0.8780983407516854; rels: []; projs: [count(distinct(movie_0.title))]; preds: [cast_0.role = "Jennifer Faniston",actor_0.birth_year > 2010]; havings: []; superlative: []; blanks: 1

===========
RESULTS
===========
TOT: 0.842676067876581; TR: 0.8780983407516854; QF: 0.2727272727272727; select count(distinct(movie_0.title)) from cast as cast_0, movie as movie_0 where cast_0.role = "Jennifer Faniston" and movie_0.release_year > 2010 and cast_0.msid = movie_0.mid
TOT: 0.8420875455914886; TR: 0.8979007600118484; QF: 0.23376623376623376; select count(distinct(movie_0.title)) from actor as actor_0, cast as cast_0, movie as movie_0 where actor_0.name = "Jennifer Aniston" and movie_0.release_year > 2010 and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid
TOT: 0.8420875455914886; TR: 0.8979007600118484; QF: 0.23376623376623376; select count(distinct(movie_0.title)) from actor as actor_0, cast as cast_0, movie as movie_0 where actor_0.birth_year > 2010 and actor_0.name = "Jennifer Aniston" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid
TOT: 0.8420778053317484; TR: 0.8979007600118484; QF: 0.2333333333333333; select count(distinct(movie_0.title)) from directed_by as directed_by_0, director as director_0, movie as movie_0 where director_0.name = "Jennifer Aniston" and movie_0.release_year > 2010 and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid
TOT: 0.8368278053317484; TR: 0.8979007600118484; QF: 0.0; select count(distinct(movie_0.title)) from made_by as made_by_0, movie as movie_0, producer as producer_0 where movie_0.release_year > 2010 and producer_0.name = "Jennifer Aniston" and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid
TOT: 0.8252554892203501; TR: 0.8780983407516854; QF: 0.23376623376623376; select count(distinct(movie_0.title)) from actor as actor_0, cast as cast_0, movie as movie_0 where actor_0.birth_year > 2010 and cast_0.role = "Jennifer Faniston" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid
TOT: 0.8233883015142378; TR: 0.8979007600118484; QF: 0.14012987012987013; select count(distinct(movie_0.title)) from actor as actor_0, cast as cast_0, directed_by as directed_by_0, director as director_0, movie as movie_0 where actor_0.birth_year > 2010 and director_0.name = "Jennifer Aniston" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid
TOT: 0.8218133015142378; TR: 0.8979007600118484; QF: 0.07012987012987013; select count(distinct(movie_0.title)) from actor as actor_0, cast as cast_0, cast as cast_1, movie as movie_0, tv_series as tv_series_0 where actor_0.name = "Jennifer Aniston" and tv_series_0.release_year > 2010 and actor_0.aid = cast_0.aid and actor_0.aid = cast_1.aid and cast_0.msid = movie_0.mid and cast_1.msid = tv_series_0.sid
TOT: 0.8218133015142378; TR: 0.8979007600118484; QF: 0.07012987012987013; select count(distinct(movie_0.title)) from actor as actor_0, cast as cast_0, made_by as made_by_0, movie as movie_0, producer as producer_0 where actor_0.birth_year > 2010 and producer_0.name = "Jennifer Aniston" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid
TOT: 0.8218103794363157; TR: 0.8979007600118484; QF: 0.06999999999999999; select count(distinct(movie_0.title)) from directed_by as directed_by_0, directed_by as directed_by_1, director as director_0, movie as movie_0, tv_series as tv_series_0 where director_0.name = "Jennifer Aniston" and tv_series_0.release_year > 2010 and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and directed_by_1.did = director_0.did and directed_by_1.msid = tv_series_0.sid


00:32  INFO: ================
00:32  INFO: QUERY 55: Find all movies featuring "Kevin Spacey"
00:32  INFO: ================
104. ROOT: ROOT; NA; ; (0) 
105. Find: CMT; NA; ; (0) 
106. featuring: NT; NA; ; (0) tv_series.title(0.69):| tv_series(0.69):| movie.release_year(0.64):| tv_series.release_year(0.64):| made_by(0.64):| movie.title_aka(0.62):| tv_series.title_aka(0.62):| 
107. movies: NT; NA; all; (0) movie.title(1.0):| movie(1.0):| cast.role(0.95):Movie; Movie F; Movie AD; | company.name(0.95):Movies; Movie; Movie Movie; | tv_series.title(0.84):Movies, Movies, Movi; Movie Mob; Moon Movies; | keyword.keyword(0.83):movie-in-movie; movies-about-movies; b-movie; | actor.name(0.76):| 
109. Kevin Spacey: VTTEXT; NA; ; (0) director.name(1.0):Kevin Spacey; Kevin Spacey; Kevin Spacey Fowler; | actor.name(1.0):Kevin Spacey; Kevin Spacey Fowler; John Spacey; | producer.name(1.0):Kevin Spacey; Kevin Spacey; Kevin Spacey Fowler; | writer.name(1.0):Kevin Spacey; Kevin Spacey; Kevin Pacey; | cast.role(0.86):Kid Kevin Spacey; Kid Kevin Spacey; Kevin Spatz; | company.name(0.71):Kevin Spacey Foundat; Kevin Spacey Foundat; Kevin Spencer; | tv_series.title(0.7):Kevin Spencer; Kevin Spencer; Kevin Seal, Sporting; | 
Find, VB
all, DT
movies, NNS
featuring, VBG
Kevin Spacey, NNP
root(ROOT-0, Find-1)
det(movies-3, all-2)
nsubj(featuring-4, movies-3)
dep(Find-1, featuring-4)
dobj(featuring-4, Kevin Spacey-5)

PARSE TREE:(104) ROOT ROOT
    (105) Find CMT
        (107) movies NT
            (106) featuring NT
                (109) Kevin Spacey VTTEXT


===========
TRANSLATIONS
===========
TOT: 0.8662391053409028; NL: 0.8662391053409028; NL+AG: 0.9628121638266046; NL+QF: 0.8662391053409028; rels: []; projs: [movie_0.title]; preds: [director_0.name = "Kevin Spacey"]; havings: []; superlative: []; blanks: 1
TOT: 0.8662391053409028; NL: 0.8662391053409028; NL+AG: 0.9628121638266046; NL+QF: 0.8662391053409028; rels: []; projs: [movie_0.title]; preds: [actor_0.name = "Kevin Spacey"]; havings: []; superlative: []; blanks: 1
TOT: 0.8662391053409028; NL: 0.8662391053409028; NL+AG: 0.9628121638266046; NL+QF: 0.8662391053409028; rels: []; projs: [movie_0.title]; preds: [producer_0.name = "Kevin Spacey"]; havings: []; superlative: []; blanks: 1
TOT: 0.8662391053409028; NL: 0.8662391053409028; NL+AG: 0.9628121638266046; NL+QF: 0.8662391053409028; rels: []; projs: [movie_0.title]; preds: [writer_0.name = "Kevin Spacey"]; havings: []; superlative: []; blanks: 1
TOT: 0.8662391053409028; NL: 0.7514276430539074; NL+AG: 0.9224533840747752; NL+QF: 0.8662391053409028; rels: []; projs: [actor_0.name]; preds: [cast_0.role = "Kid Kevin Spacey"]; havings: []; superlative: []; blanks: 1
TOT: 0.8370778102691069; NL: 0.7717313085512446; NL+AG: 0.9391833540180654; NL+QF: 0.8370778102691069; rels: []; projs: [movie_0.title]; preds: [company_0.name = "Kevin Spacey Foundation"]; havings: []; superlative: []; blanks: 1
TOT: 0.8344522897223012; NL: 0.8344522897223012; NL+AG: 0.9889432485322897; NL+QF: 0.8344522897223012; rels: []; projs: [movie_0.title]; preds: [tv_series_0.title = "Kevin Spencer"]; havings: []; superlative: []; blanks: 0
TOT: 0.82915619758885; NL: 0.82915619758885; NL+AG: 0.9889432485322897; NL+QF: 0.82915619758885; rels: []; projs: [tv_series_0.title]; preds: [director_0.name = "Kevin Spacey"]; havings: []; superlative: []; blanks: 0
TOT: 0.82915619758885; NL: 0.82915619758885; NL+AG: 0.9889432485322897; NL+QF: 0.82915619758885; rels: []; projs: [tv_series_0.title]; preds: [actor_0.name = "Kevin Spacey"]; havings: []; superlative: []; blanks: 0
TOT: 0.82915619758885; NL: 0.82915619758885; NL+AG: 0.9889432485322897; NL+QF: 0.82915619758885; rels: []; projs: [tv_series_0.title]; preds: [producer_0.name = "Kevin Spacey"]; havings: []; superlative: []; blanks: 0
TOT: 0.82915619758885; NL: 0.82915619758885; NL+AG: 0.9889432485322897; NL+QF: 0.82915619758885; rels: []; projs: [tv_series_0.title]; preds: [writer_0.name = "Kevin Spacey"]; havings: []; superlative: []; blanks: 0
TOT: 0.82915619758885; NL: 0.82915619758885; NL+AG: 0.9889432485322897; NL+QF: 0.82915619758885; rels: []; projs: [tv_series_0.title]; preds: [director_0.name = "Kevin Spacey"]; havings: []; superlative: []; blanks: 0
TOT: 0.82915619758885; NL: 0.82915619758885; NL+AG: 0.9889432485322897; NL+QF: 0.82915619758885; rels: []; projs: [tv_series_0.title]; preds: [actor_0.name = "Kevin Spacey"]; havings: []; superlative: []; blanks: 0
TOT: 0.82915619758885; NL: 0.82915619758885; NL+AG: 0.9889432485322897; NL+QF: 0.82915619758885; rels: []; projs: [tv_series_0.title]; preds: [producer_0.name = "Kevin Spacey"]; havings: []; superlative: []; blanks: 0
TOT: 0.82915619758885; NL: 0.82915619758885; NL+AG: 0.9889432485322897; NL+QF: 0.82915619758885; rels: []; projs: [tv_series_0.title]; preds: [writer_0.name = "Kevin Spacey"]; havings: []; superlative: []; blanks: 0

===========
RESULTS
===========
TOT: 0.8361022112839093; TR: 0.8662391053409028; QF: 0.42857142857142855; select actor_0.name from actor as actor_0, cast as cast_0 where cast_0.role = "Kid Kevin Spacey" and actor_0.aid = cast_0.aid
TOT: 0.8151751391211848; TR: 0.8662391053409028; QF: 0.23376623376623376; select movie_0.title from actor as actor_0, cast as cast_0, movie as movie_0 where actor_0.name = "Kevin Spacey" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid
TOT: 0.8151653988614446; TR: 0.8662391053409028; QF: 0.2333333333333333; select movie_0.title from directed_by as directed_by_0, director as director_0, movie as movie_0 where director_0.name = "Kevin Spacey" and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid
TOT: 0.8099153988614446; TR: 0.8662391053409028; QF: 0.0; select movie_0.title from movie as movie_0, writer as writer_0, written_by as written_by_0 where writer_0.name = "Kevin Spacey" and movie_0.mid = written_by_0.msid and writer_0.wid = written_by_0.wid
TOT: 0.8099153988614446; TR: 0.8662391053409028; QF: 0.0; select movie_0.title from made_by as made_by_0, movie as movie_0, producer as producer_0 where producer_0.name = "Kevin Spacey" and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid
TOT: 0.7897116313837514; TR: 0.8370778102691069; QF: 0.20370370370370372; select movie_0.title from company as company_0, copyright as copyright_0, movie as movie_0 where company_0.name = "Kevin Spacey Foundation" and company_0.id = copyright_0.cid and copyright_0.msid = movie_0.mid
TOT: 0.7857808155998353; TR: 0.8662391053409028; QF: 0.05720470006184292; select movie_0.title from actor as actor_0, cast as cast_0, cast as cast_1, directed_by as directed_by_0, director as director_0, movie as movie_0, tv_series as tv_series_0 where director_0.name = "Kevin Spacey" and actor_0.aid = cast_0.aid and actor_0.aid = cast_1.aid and cast_0.msid = movie_0.mid and cast_1.msid = tv_series_0.sid and directed_by_0.did = director_0.did and directed_by_0.msid = tv_series_0.sid
TOT: 0.7857028935219131; TR: 0.8662391053409028; QF: 0.05374149659863946; select movie_0.title from actor as actor_0, cast as cast_0, directed_by as directed_by_0, directed_by as directed_by_1, director as director_0, movie as movie_0, tv_series as tv_series_0 where actor_0.name = "Kevin Spacey" and actor_0.aid = cast_0.aid and cast_0.msid = tv_series_0.sid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and directed_by_1.did = director_0.did and directed_by_1.msid = tv_series_0.sid
TOT: 0.78568418603892; TR: 0.8662391053409028; QF: 0.052910052910052914; select movie_0.title from classification as classification_0, classification as classification_1, directed_by as directed_by_0, director as director_0, genre as genre_0, movie as movie_0, tv_series as tv_series_0 where director_0.name = "Kevin Spacey" and classification_0.gid = genre_0.gid and classification_0.msid = movie_0.mid and classification_1.gid = genre_0.gid and classification_1.msid = tv_series_0.sid and directed_by_0.did = director_0.did and directed_by_0.msid = tv_series_0.sid
TOT: 0.78568418603892; TR: 0.8662391053409028; QF: 0.052910052910052914; select movie_0.title from company as company_0, copyright as copyright_0, copyright as copyright_1, directed_by as directed_by_0, director as director_0, movie as movie_0, tv_series as tv_series_0 where director_0.name = "Kevin Spacey" and company_0.id = copyright_0.cid and company_0.id = copyright_1.cid and copyright_0.msid = movie_0.mid and copyright_1.msid = tv_series_0.sid and directed_by_0.did = director_0.did and directed_by_0.msid = tv_series_0.sid


00:35  INFO: ================
00:35  INFO: QUERY 50: Find the producers of all movies in which "Kate Winslet" is an actor
00:35  INFO: ================
00:37  INFO: ================
00:37  INFO: QUERY 100: How many movies did "Matt Damon" direct?
00:37  INFO: ================
00:38  INFO: ================
00:38  INFO: QUERY 121: Who acted in the most number of movies directed by "Jim Jarmusch"
00:38  INFO: ================
133. ROOT: ROOT; NA; ; (0) 
134. acted: NT; NA; ; (0) movie.release_year(0.63):| tv_series.release_year(0.63):| actor.name(0.62):| actor(0.62):| genre.genre(0.62):| genre(0.62):| made_by(0.61):| 
135. Who: CMT; NA; ; (0) director.name(1.0):| actor.name(1.0):| producer.name(1.0):| writer.name(1.0):| 
136. number of: FT; count; ; (0) 
139. most: FT; max; ; (0) 
140. movies: NT; NA; ; (0) movie.title(1.0):| movie(1.0):| cast.role(0.95):Movie; Movie F; Movie AD; | company.name(0.95):Movies; Movie; Movie Movie; | tv_series.title(0.84):Movies, Movies, Movi; Movie Mob; Moon Movies; | keyword.keyword(0.83):movie-in-movie; movies-about-movies; b-movie; | actor.name(0.76):| 
142. directed: NT; NA; ; (0) directed_by(1.0):| director.name(0.72):| director(0.72):| written_by(0.68):| cast.role(0.67):| cast(0.67):| made_by(0.67):| 
143. Jim Jarmusch: VTTEXT; NA; ; (0) director.name(1.0):Jim Jarmusch; Jim Jarmusch; Tom Jarmusch; | actor.name(1.0):Jim Jarmusch; Jim Jarmusch; Tom Jarmusch; | producer.name(1.0):Jim Jarmusch; Jim Jarmusch; Tom Jarmusch; | writer.name(1.0):Jim Jarmusch; Jim Jarmusch; James R. Jarmusch; | movie.title(0.81):Behind Jim Jarmusch; Behind Jim Jarmusch; Focus on Jim Jarmusc; | cast.role(0.72):Jim Jarmusch's broth; Jim Jarmusch's broth; Jim Jamush; | tv_series.title(0.52):Earthworm Jim; Earthworm Jim; Jim Jam & Sunny; | 
Who, WP
acted, VBD
in, IN
the, DT
most, JJS
number, NN
of, IN
movies, NNS
directed, VBN
by, IN
Jim Jarmusch, NNP
nsubj(acted-2, Who-1)
root(ROOT-0, acted-2)
case(number-6, in-3)
det(number-6, the-4)
amod(number-6, most-5)
nmod(acted-2, number-6)
case(movies-8, of-7)
nmod(number-6, movies-8)
acl(movies-8, directed-9)
case(Jim Jarmusch-11, by-10)
nmod(directed-9, Jim Jarmusch-11)

PARSE TREE:(133) ROOT ROOT
    (135) Who CMT
        (134) acted NT
            (140) movies NT
                (142) directed NT
                    (143) Jim Jarmusch VTTEXT


===========
TRANSLATIONS
===========
TOT: 0.9307196706532547; NL: 0.9307196706532547; NL+AG: 0.9780540360102071; NL+QF: 0.9307196706532547; rels: [directed_by]; projs: [director_0.name]; preds: [director_0.name = "Jim Jarmusch"]; havings: []; superlative: [count(distinct(movie_0.title)) desc limit 1]; blanks: 1
TOT: 0.9307196706532547; NL: 0.9307196706532547; NL+AG: 0.9780540360102071; NL+QF: 0.9307196706532547; rels: [directed_by]; projs: [director_0.name]; preds: [actor_0.name = "Jim Jarmusch"]; havings: []; superlative: [count(distinct(movie_0.title)) desc limit 1]; blanks: 1
TOT: 0.9307196706532547; NL: 0.9307196706532547; NL+AG: 0.9780540360102071; NL+QF: 0.9307196706532547; rels: [directed_by]; projs: [director_0.name]; preds: [producer_0.name = "Jim Jarmusch"]; havings: []; superlative: [count(distinct(movie_0.title)) desc limit 1]; blanks: 1
TOT: 0.9307196706532547; NL: 0.9307196706532547; NL+AG: 0.9780540360102071; NL+QF: 0.9307196706532547; rels: [directed_by]; projs: [director_0.name]; preds: [writer_0.name = "Jim Jarmusch"]; havings: []; superlative: [count(distinct(movie_0.title)) desc limit 1]; blanks: 1
TOT: 0.9307196706532547; NL: 0.9307196706532547; NL+AG: 0.9780540360102071; NL+QF: 0.9307196706532547; rels: [directed_by]; projs: [actor_0.name]; preds: [director_0.name = "Jim Jarmusch"]; havings: []; superlative: [count(distinct(movie_0.title)) desc limit 1]; blanks: 1
TOT: 0.9307196706532547; NL: 0.9307196706532547; NL+AG: 0.9780540360102071; NL+QF: 0.9307196706532547; rels: [directed_by]; projs: [actor_0.name]; preds: [actor_0.name = "Jim Jarmusch"]; havings: []; superlative: [count(distinct(movie_0.title)) desc limit 1]; blanks: 1
TOT: 0.9307196706532547; NL: 0.9307196706532547; NL+AG: 0.9780540360102071; NL+QF: 0.9307196706532547; rels: [directed_by]; projs: [actor_0.name]; preds: [producer_0.name = "Jim Jarmusch"]; havings: []; superlative: [count(distinct(movie_0.title)) desc limit 1]; blanks: 1
TOT: 0.9307196706532547; NL: 0.9307196706532547; NL+AG: 0.9780540360102071; NL+QF: 0.9307196706532547; rels: [directed_by]; projs: [actor_0.name]; preds: [writer_0.name = "Jim Jarmusch"]; havings: []; superlative: [count(distinct(movie_0.title)) desc limit 1]; blanks: 1
TOT: 0.9307196706532547; NL: 0.9307196706532547; NL+AG: 0.9780540360102071; NL+QF: 0.9307196706532547; rels: [directed_by]; projs: [producer_0.name]; preds: [director_0.name = "Jim Jarmusch"]; havings: []; superlative: [count(distinct(movie_0.title)) desc limit 1]; blanks: 1
TOT: 0.9307196706532547; NL: 0.9307196706532547; NL+AG: 0.9780540360102071; NL+QF: 0.9307196706532547; rels: [directed_by]; projs: [producer_0.name]; preds: [actor_0.name = "Jim Jarmusch"]; havings: []; superlative: [count(distinct(movie_0.title)) desc limit 1]; blanks: 1
TOT: 0.9307196706532547; NL: 0.9307196706532547; NL+AG: 0.9780540360102071; NL+QF: 0.9307196706532547; rels: [directed_by]; projs: [producer_0.name]; preds: [producer_0.name = "Jim Jarmusch"]; havings: []; superlative: [count(distinct(movie_0.title)) desc limit 1]; blanks: 1
TOT: 0.9307196706532547; NL: 0.9307196706532547; NL+AG: 0.9780540360102071; NL+QF: 0.9307196706532547; rels: [directed_by]; projs: [producer_0.name]; preds: [writer_0.name = "Jim Jarmusch"]; havings: []; superlative: [count(distinct(movie_0.title)) desc limit 1]; blanks: 1
TOT: 0.9307196706532547; NL: 0.9307196706532547; NL+AG: 0.9780540360102071; NL+QF: 0.9307196706532547; rels: [directed_by]; projs: [writer_0.name]; preds: [director_0.name = "Jim Jarmusch"]; havings: []; superlative: [count(distinct(movie_0.title)) desc limit 1]; blanks: 1
TOT: 0.9307196706532547; NL: 0.9307196706532547; NL+AG: 0.9780540360102071; NL+QF: 0.9307196706532547; rels: [directed_by]; projs: [writer_0.name]; preds: [actor_0.name = "Jim Jarmusch"]; havings: []; superlative: [count(distinct(movie_0.title)) desc limit 1]; blanks: 1
TOT: 0.9307196706532547; NL: 0.9307196706532547; NL+AG: 0.9780540360102071; NL+QF: 0.9307196706532547; rels: [directed_by]; projs: [writer_0.name]; preds: [producer_0.name = "Jim Jarmusch"]; havings: []; superlative: [count(distinct(movie_0.title)) desc limit 1]; blanks: 1
TOT: 0.9307196706532547; NL: 0.9307196706532547; NL+AG: 0.9780540360102071; NL+QF: 0.9307196706532547; rels: [directed_by]; projs: [writer_0.name]; preds: [writer_0.name = "Jim Jarmusch"]; havings: []; superlative: [count(distinct(movie_0.title)) desc limit 1]; blanks: 1

===========
RESULTS
===========
TOT: 0.8512843755594331; TR: 0.9307196706532547; QF: 0.14012987012987013; select director_0.name from actor as actor_0, cast as cast_0, directed_by as directed_by_0, director as director_0, movie as movie_0 where actor_0.name = "Jim Jarmusch" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid group by director_0.name order by count(distinct(movie_0.title)) desc limit 1
TOT: 0.8512843755594331; TR: 0.9307196706532547; QF: 0.14012987012987013; select actor_0.name from actor as actor_0, cast as cast_0, directed_by as directed_by_0, director as director_0, movie as movie_0 where director_0.name = "Jim Jarmusch" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid group by actor_0.name order by count(distinct(movie_0.title)) desc limit 1
TOT: 0.8497064534815111; TR: 0.9307196706532547; QF: 0.06999999999999999; select director_0.name from directed_by as directed_by_0, director as director_0, made_by as made_by_0, movie as movie_0, producer as producer_0 where producer_0.name = "Jim Jarmusch" and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid group by director_0.name order by count(distinct(movie_0.title)) desc limit 1
TOT: 0.8497064534815111; TR: 0.9307196706532547; QF: 0.06999999999999999; select producer_0.name from directed_by as directed_by_0, director as director_0, made_by as made_by_0, movie as movie_0, producer as producer_0 where director_0.name = "Jim Jarmusch" and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid group by producer_0.name order by count(distinct(movie_0.title)) desc limit 1
TOT: 0.8497064534815111; TR: 0.9307196706532547; QF: 0.06999999999999999; select director_0.name from directed_by as directed_by_0, directed_by as directed_by_1, director as director_0, director as director_1, movie as movie_0 where director_1.name = "Jim Jarmusch" and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and directed_by_1.did = director_1.did and directed_by_1.msid = movie_0.mid group by director_0.name order by count(distinct(movie_0.title)) desc limit 1
TOT: 0.8497064534815111; TR: 0.9307196706532547; QF: 0.06999999999999999; select director_0.name from directed_by as directed_by_0, director as director_0, movie as movie_0, writer as writer_0, written_by as written_by_0 where writer_0.name = "Jim Jarmusch" and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and movie_0.mid = written_by_0.msid and writer_0.wid = written_by_0.wid group by director_0.name order by count(distinct(movie_0.title)) desc limit 1
TOT: 0.8497064534815111; TR: 0.9307196706532547; QF: 0.06999999999999999; select writer_0.name from directed_by as directed_by_0, director as director_0, movie as movie_0, writer as writer_0, written_by as written_by_0 where director_0.name = "Jim Jarmusch" and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and movie_0.mid = written_by_0.msid and writer_0.wid = written_by_0.wid group by writer_0.name order by count(distinct(movie_0.title)) desc limit 1
TOT: 0.8405892961153344; TR: 0.9307196706532547; QF: 0.05720470006184292; select director_0.name from actor as actor_0, cast as cast_0, cast as cast_1, directed_by as directed_by_0, director as director_0, movie as movie_0, tv_series as tv_series_0 where actor_0.name = "Jim Jarmusch" and actor_0.aid = cast_0.aid and actor_0.aid = cast_1.aid and cast_0.msid = movie_0.mid and cast_1.msid = tv_series_0.sid and directed_by_0.did = director_0.did and directed_by_0.msid = tv_series_0.sid group by director_0.name order by count(distinct(movie_0.title)) desc limit 1
TOT: 0.8405892961153344; TR: 0.9307196706532547; QF: 0.05720470006184292; select actor_0.name from actor as actor_0, cast as cast_0, cast as cast_1, directed_by as directed_by_0, director as director_0, movie as movie_0, tv_series as tv_series_0 where director_0.name = "Jim Jarmusch" and actor_0.aid = cast_0.aid and actor_0.aid = cast_1.aid and cast_0.msid = movie_0.mid and cast_1.msid = tv_series_0.sid and directed_by_0.did = director_0.did and directed_by_0.msid = tv_series_0.sid group by actor_0.name order by count(distinct(movie_0.title)) desc limit 1
TOT: 0.8405113740374123; TR: 0.9307196706532547; QF: 0.05374149659863946; select director_0.name from actor as actor_0, cast as cast_0, directed_by as directed_by_0, directed_by as directed_by_1, director as director_0, movie as movie_0, tv_series as tv_series_0 where actor_0.name = "Jim Jarmusch" and actor_0.aid = cast_0.aid and cast_0.msid = tv_series_0.sid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and directed_by_1.did = director_0.did and directed_by_1.msid = tv_series_0.sid group by director_0.name order by count(distinct(movie_0.title)) desc limit 1


00:41  INFO: ================
00:41  INFO: QUERY 39: Which movies did "Alfred Hitchcock" direct?
00:41  INFO: ================
146. ROOT: ROOT; NA; ; (0) 
147. direct: NT; NA; ; (0) directed_by(1.0):| director.name(0.72):| director(0.72):| written_by(0.68):| cast.role(0.67):| cast(0.67):| made_by(0.67):| 
148. movies: NT; NA; ; (0) movie.title(1.0):| movie(1.0):| cast.role(0.95):Movie; Movie F; Movie AD; | company.name(0.95):Movies; Movie; Movie Movie; | tv_series.title(0.84):Movies, Movies, Movi; Movie Mob; Moon Movies; | keyword.keyword(0.83):movie-in-movie; movies-about-movies; b-movie; | actor.name(0.76):| 
151. Alfred Hitchcock: VTTEXT; NA; ; (0) director.name(1.0):Alfred Hitchcock; Alfred Hitchcock; Sir Alfred Hitchcock; | actor.name(1.0):Alfred Hitchcock; Alfred Hitchcock; Alfred Hitchcock; | producer.name(1.0):Alfred Hitchcock; Alfred Hitchcock; Sir Alfred Hitchcock; | writer.name(1.0):Alfred Hitchcock; Alfred Hitchcock; Sir Alfred Hitchcock; | movie.title(0.85):Alfred Hitchcock's G; Alfred Hitchcock's G; Alfred Hitchcock and; | tv_series.title(0.85):Ciclo Alfred Hitchco; Ciclo Alfred Hitchco; Alfred Hitchcock Pre; | cast.role(0.84):Alfred Hitchcock fig; Alfred Hitchcock fig; Alfred Hitchcock fig; | 
Which, WDT
movies, NN
did, VBD
Alfred Hitchcock, NNP
direct, VB
det(movies-2, Which-1)
dobj(direct-5, movies-2)
aux(direct-5, did-3)
nsubj(direct-5, Alfred Hitchcock-4)
root(ROOT-0, direct-5)

PARSE TREE:(146) ROOT ROOT
    (147) direct NT
        (148) movies NT
        (151) Alfred Hitchcock VTTEXT


===========
TRANSLATIONS
===========
TOT: 0.8662391053409028; NL: 0.5933575991536099; NL+AG: 0.9209086747507467; NL+QF: 0.8662391053409028; rels: []; projs: [actor_0.name]; preds: [cast_0.role = "Alfred Hitchcock figure"]; havings: []; superlative: []; blanks: 1
TOT: 0.8158921564751728; NL: 0.4768984657178191; NL+AG: 0.9209086747507467; NL+QF: 0.8158921564751728; rels: [cast]; projs: [actor_0.name]; preds: [cast_0.role = "Alfred Hitchcock figure"]; havings: []; superlative: []; blanks: 0
TOT: 0.7762145017170856; NL: 0.477252642645127; NL+AG: 0.9211308106114876; NL+QF: 0.7762145017170856; rels: [cast]; projs: [actor_0.name]; preds: [movie_0.title = "Alfred Hitchcock's Gun"]; havings: []; superlative: []; blanks: 0
TOT: 0.7453718899919151; NL: 0.5937982664787745; NL+AG: 0.9211308106114876; NL+QF: 0.7453718899919151; rels: []; projs: [actor_0.name]; preds: [movie_0.title = "Alfred Hitchcock's Gun"]; havings: []; superlative: []; blanks: 1
TOT: 0.7211247851537042; NL: 0.6299605249474366; NL+AG: 0.9394249139348947; NL+QF: 0.7211247851537042; rels: [directed_by]; projs: [movie_0.title]; preds: [director_0.name = "Alfred Hitchcock"]; havings: []; superlative: []; blanks: 0
TOT: 0.6983555382687214; NL: 0.5047810172022357; NL+AG: 0.9394249139348947; NL+QF: 0.6983555382687214; rels: [cast]; projs: [actor_0.name]; preds: [director_0.name = "Alfred Hitchcock"]; havings: []; superlative: []; blanks: 0
TOT: 0.6976622695989517; NL: 0.563731458429221; NL+AG: 0.9394249139348947; NL+QF: 0.6976622695989517; rels: [director]; projs: [movie_0.title]; preds: [director_0.name = "Alfred Hitchcock"]; havings: []; superlative: []; blanks: 0
TOT: 0.6875344335370706; NL: 0.6875344335370706; NL+AG: 0.9394249139348947; NL+QF: 0.6875344335370706; rels: []; projs: [movie_0.title]; preds: [director_0.name = "Alfred Hitchcock"]; havings: []; superlative: []; blanks: 1
TOT: 0.6875344335370706; NL: 0.6875344335370706; NL+AG: 0.9394249139348947; NL+QF: 0.6875344335370706; rels: []; projs: [movie_0.title]; preds: [actor_0.name = "Alfred Hitchcock"]; havings: []; superlative: []; blanks: 1
TOT: 0.6875344335370706; NL: 0.6875344335370706; NL+AG: 0.9394249139348947; NL+QF: 0.6875344335370706; rels: []; projs: [movie_0.title]; preds: [producer_0.name = "Alfred Hitchcock"]; havings: []; superlative: []; blanks: 1
TOT: 0.6875344335370706; NL: 0.6875344335370706; NL+AG: 0.9394249139348947; NL+QF: 0.6875344335370706; rels: []; projs: [movie_0.title]; preds: [writer_0.name = "Alfred Hitchcock"]; havings: []; superlative: []; blanks: 1

===========
RESULTS
===========
TOT: 0.8361022112839093; TR: 0.8662391053409028; QF: 0.42857142857142855; select actor_0.name from actor as actor_0, cast as cast_0 where cast_0.role = "Alfred Hitchcock figure" and actor_0.aid = cast_0.aid
TOT: 0.7386542260409402; TR: 0.7762145017170856; QF: 0.23376623376623376; select actor_0.name from actor as actor_0, cast as cast_0, movie as movie_0 where movie_0.title = "Alfred Hitchcock's Gun" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid
TOT: 0.7091819804416686; TR: 0.7762145017170856; QF: 0.05374149659863946; select actor_0.name from actor as actor_0, cast as cast_0, directed_by as directed_by_0, directed_by as directed_by_1, director as director_0, movie as movie_0, tv_series as tv_series_0 where movie_0.title = "Alfred Hitchcock's Gun" and actor_0.aid = cast_0.aid and cast_0.msid = tv_series_0.sid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and directed_by_1.did = director_0.did and directed_by_1.msid = tv_series_0.sid
TOT: 0.7090867423464304; TR: 0.7762145017170856; QF: 0.04950869236583522; select actor_0.name from actor as actor_0, cast as cast_0, classification as classification_0, classification as classification_1, genre as genre_0, movie as movie_0, tv_series as tv_series_0 where movie_0.title = "Alfred Hitchcock's Gun" and actor_0.aid = cast_0.aid and cast_0.msid = tv_series_0.sid and classification_0.gid = genre_0.gid and classification_0.msid = movie_0.mid and classification_1.gid = genre_0.gid and classification_1.msid = tv_series_0.sid
TOT: 0.7090867423464304; TR: 0.7762145017170856; QF: 0.049508692365835216; select actor_0.name from actor as actor_0, cast as cast_0, company as company_0, copyright as copyright_0, copyright as copyright_1, movie as movie_0, tv_series as tv_series_0 where movie_0.title = "Alfred Hitchcock's Gun" and actor_0.aid = cast_0.aid and cast_0.msid = tv_series_0.sid and company_0.id = copyright_0.cid and company_0.id = copyright_1.cid and copyright_0.msid = movie_0.mid and copyright_1.msid = tv_series_0.sid
TOT: 0.7084319804416686; TR: 0.7762145017170856; QF: 0.02040816326530612; select actor_0.name from actor as actor_0, cast as cast_0, keyword as keyword_0, movie as movie_0, tags as tags_0, tags as tags_1, tv_series as tv_series_0 where movie_0.title = "Alfred Hitchcock's Gun" and actor_0.aid = cast_0.aid and cast_0.msid = tv_series_0.sid and keyword_0.id = tags_0.kid and keyword_0.id = tags_1.kid and movie_0.mid = tags_0.msid and tags_1.msid = tv_series_0.sid
TOT: 0.7084319804416686; TR: 0.7762145017170856; QF: 0.02040816326530612; select actor_0.name from actor as actor_0, cast as cast_0, movie as movie_0, tv_series as tv_series_0, writer as writer_0, written_by as written_by_0, written_by as written_by_1 where movie_0.title = "Alfred Hitchcock's Gun" and actor_0.aid = cast_0.aid and cast_0.msid = tv_series_0.sid and movie_0.mid = written_by_0.msid and tv_series_0.sid = written_by_1.msid and writer_0.wid = written_by_0.wid and writer_0.wid = written_by_1.wid
TOT: 0.7084319804416686; TR: 0.7762145017170856; QF: 0.02040816326530612; select actor_0.name from actor as actor_0, cast as cast_0, made_by as made_by_0, made_by as made_by_1, movie as movie_0, producer as producer_0, tv_series as tv_series_0 where movie_0.title = "Alfred Hitchcock's Gun" and actor_0.aid = cast_0.aid and cast_0.msid = tv_series_0.sid and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid and made_by_1.msid = tv_series_0.sid and made_by_1.pid = producer_0.pid
TOT: 0.6918182267023258; TR: 0.7211247851537042; QF: 0.2333333333333333; select movie_0.title from directed_by as directed_by_0, director as director_0, movie as movie_0 where director_0.name = "Alfred Hitchcock" and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid
TOT: 0.6632761680879274; TR: 0.6875344335370706; QF: 0.23376623376623376; select movie_0.title from actor as actor_0, cast as cast_0, movie as movie_0 where actor_0.name = "Alfred Hitchcock" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid


00:42  INFO: ================
00:42  INFO: QUERY 10: In what year was "Kevin Spacey" born?
00:42  INFO: ================
00:44  INFO: ================
00:44  INFO: QUERY 13: What is the nationality of "Kevin Spacey"?
00:44  INFO: ================
00:45  INFO: ================
00:45  INFO: QUERY 74: Find all actors from Canada who acted in "James Bond" movies
00:45  INFO: ================
00:52  INFO: ================
00:52  INFO: QUERY 83: What are the major roles in the movie "Daddy Long Legs"
00:52  INFO: ================
181. ROOT: ROOT; NA; ; (0) 
182. What: CMT; NA; ; (0) 
184. roles: VTTEXT; NA; ; (0) movie.title(0.95):Roles; Rolê; The Role; | tv_series.title(0.95):Roles; Role Call; Role Play; | cast.role(0.82):| actor.name(0.69):| actor(0.69):| cast(0.64):| director.name(0.64):| 
186. major: VTTEXT; NA; ; (0) movie.title(1.0):Major; Major!; Major Minors; | director.name(1.0):Major; Major; Major; | actor.name(1.0):Major; Major; Major; | producer.name(1.0):Major; Major; BP Major; | company.name(1.0):Major; Major Zeus; Major Networks; | writer.name(1.0):Major; JL Major; BP Major; | cast.role(0.94):Major Major; 'Major'; Maj. Major Major; | 
187. Daddy Long Legs: VTTEXT; NA; ; (0) movie.title(0.95):Daddy Long Legs; Daddy Long Legs; Daddy Long Legs; | director.name(0.95):Daddy Long Legs; Daddy Long Legs; Daddy Long Legs of W; | actor.name(0.95):Daddy Long Legs; Daddy Long Legs; Daddy Longlegs; | cast.role(0.86):Lady Long Legs; Long Leg; Sweet Daddy Longlegs; | producer.name(0.76):Long Legs; Long Legs; Din Long Lee; | writer.name(0.61):Adam Long; Adam Long; Cody Long; | tv_series.title(0.54):A Long Long Crime Ag; A Long Long Crime Ag; The Long Gray Line; | 
190. movie: NT; NA; ; (0) movie.title(1.0):| movie(1.0):| cast.role(0.95):Movie; Movie F; Movie AD; | company.name(0.95):Movie; Movies; Movie Movie; | keyword.keyword(0.83):movie-in-movie; b-movie; z-movie; | actor.name(0.76):| actor(0.76):| 
What, WP
are, VBP
the, DT
major, JJ
roles, NNS
in, IN
the, DT
movie, NN
Daddy Long Legs, NNS
root(ROOT-0, What-1)
cop(What-1, are-2)
det(roles-5, the-3)
amod(roles-5, major-4)
nsubj(What-1, roles-5)
case(Daddy Long Legs-9, in-6)
det(Daddy Long Legs-9, the-7)
compound(Daddy Long Legs-9, movie-8)
nmod(roles-5, Daddy Long Legs-9)

PARSE TREE:(181) ROOT ROOT
    (182) What CMT
        (184) roles VTTEXT
            (186) major VTTEXT
            (187) Daddy Long Legs VTTEXT
                (190) movie NT


===========
TRANSLATIONS
===========
TOT: 0.9685139712880125; NL: 0.8650735916549619; NL+AG: 0.9841314784538805; NL+QF: 0.9685139712880125; rels: []; projs: [actor_0.name]; preds: [cast_0.role = "Major Major",movie_0.title = "Daddy Long Legs"]; havings: []; superlative: []; blanks: 0
TOT: 0.9447821040502364; NL: 0.88222320096765; NL+AG: 0.9901717764731464; NL+QF: 0.9447821040502364; rels: []; projs: [actor_0.name]; preds: [movie_0.title = "Major",movie_0.title = "Daddy Long Legs"]; havings: []; superlative: []; blanks: 0
TOT: 0.9364940320609404; NL: 0.9364940320609404; NL+AG: 0.9912197108066971; NL+QF: 0.9364940320609404; rels: []; projs: [cast_0.role]; preds: [movie_0.title = "Major",movie_0.title = "Daddy Long Legs"]; havings: []; superlative: []; blanks: 0
TOT: 0.9364940320609404; NL: 0.9364940320609404; NL+AG: 0.9912197108066971; NL+QF: 0.9364940320609404; rels: []; projs: [cast_0.role]; preds: [director_0.name = "Major",movie_0.title = "Daddy Long Legs"]; havings: []; superlative: []; blanks: 0
TOT: 0.9364940320609404; NL: 0.9364940320609404; NL+AG: 0.9912197108066971; NL+QF: 0.9364940320609404; rels: []; projs: [cast_0.role]; preds: [actor_0.name = "Major",movie_0.title = "Daddy Long Legs"]; havings: []; superlative: []; blanks: 0
TOT: 0.9364940320609404; NL: 0.9364940320609404; NL+AG: 0.9912197108066971; NL+QF: 0.9364940320609404; rels: []; projs: [cast_0.role]; preds: [producer_0.name = "Major",movie_0.title = "Daddy Long Legs"]; havings: []; superlative: []; blanks: 0
TOT: 0.9364940320609404; NL: 0.9364940320609404; NL+AG: 0.9912197108066971; NL+QF: 0.9364940320609404; rels: []; projs: [cast_0.role]; preds: [company_0.name = "Major",movie_0.title = "Daddy Long Legs"]; havings: []; superlative: []; blanks: 0
TOT: 0.9364940320609404; NL: 0.9364940320609404; NL+AG: 0.9912197108066971; NL+QF: 0.9364940320609404; rels: []; projs: [cast_0.role]; preds: [writer_0.name = "Major",movie_0.title = "Daddy Long Legs"]; havings: []; superlative: []; blanks: 0
TOT: 0.9229081444171687; NL: 0.9182894476021624; NL+AG: 0.9851794127874313; NL+QF: 0.9229081444171687; rels: []; projs: [cast_0.role]; preds: [cast_0.role = "Major Major",movie_0.title = "Daddy Long Legs"]; havings: []; superlative: []; blanks: 0
TOT: 0.9145724459914149; NL: 0.88222320096765; NL+AG: 0.9901717764731464; NL+QF: 0.9145724459914149; rels: []; projs: [actor_0.name]; preds: [director_0.name = "Major",movie_0.title = "Daddy Long Legs"]; havings: []; superlative: []; blanks: 0
TOT: 0.9145724459914149; NL: 0.88222320096765; NL+AG: 0.9901717764731464; NL+QF: 0.9145724459914149; rels: []; projs: [actor_0.name]; preds: [actor_0.name = "Major",movie_0.title = "Daddy Long Legs"]; havings: []; superlative: []; blanks: 0
TOT: 0.9145724459914149; NL: 0.88222320096765; NL+AG: 0.9901717764731464; NL+QF: 0.9145724459914149; rels: []; projs: [actor_0.name]; preds: [producer_0.name = "Major",movie_0.title = "Daddy Long Legs"]; havings: []; superlative: []; blanks: 0
TOT: 0.9145724459914149; NL: 0.88222320096765; NL+AG: 0.9901717764731464; NL+QF: 0.9145724459914149; rels: []; projs: [actor_0.name]; preds: [company_0.name = "Major",movie_0.title = "Daddy Long Legs"]; havings: []; superlative: []; blanks: 0
TOT: 0.9145724459914149; NL: 0.88222320096765; NL+AG: 0.9901717764731464; NL+QF: 0.9145724459914149; rels: []; projs: [actor_0.name]; preds: [writer_0.name = "Major",movie_0.title = "Daddy Long Legs"]; havings: []; superlative: []; blanks: 0

===========
RESULTS
===========
TOT: 0.9021087751762281; TR: 0.9685139712880125; QF: 0.23376623376623376; select actor_0.name from actor as actor_0, cast as cast_0, movie as movie_0 where cast_0.role = "Major Major" and movie_0.title = "Daddy Long Legs" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid
TOT: 0.8748918268332168; TR: 0.9364940320609404; QF: 0.23376623376623376; select cast_0.role from actor as actor_0, cast as cast_0, movie as movie_0 where actor_0.name = "Major" and movie_0.title = "Daddy Long Legs" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid
TOT: 0.8726365295769565; TR: 0.9685139712880125; QF: 0.05374149659863946; select actor_0.name from actor as actor_0, cast as cast_0, directed_by as directed_by_0, directed_by as directed_by_1, director as director_0, movie as movie_0, tv_series as tv_series_0 where cast_0.role = "Major Major" and movie_0.title = "Daddy Long Legs" and actor_0.aid = cast_0.aid and cast_0.msid = tv_series_0.sid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and directed_by_1.did = director_0.did and directed_by_1.msid = tv_series_0.sid
TOT: 0.8725412914817183; TR: 0.9685139712880125; QF: 0.04950869236583522; select actor_0.name from actor as actor_0, cast as cast_0, classification as classification_0, classification as classification_1, genre as genre_0, movie as movie_0, tv_series as tv_series_0 where cast_0.role = "Major Major" and movie_0.title = "Daddy Long Legs" and actor_0.aid = cast_0.aid and cast_0.msid = tv_series_0.sid and classification_0.gid = genre_0.gid and classification_0.msid = movie_0.mid and classification_1.gid = genre_0.gid and classification_1.msid = tv_series_0.sid
TOT: 0.8725412914817183; TR: 0.9685139712880125; QF: 0.049508692365835216; select actor_0.name from actor as actor_0, cast as cast_0, company as company_0, copyright as copyright_0, copyright as copyright_1, movie as movie_0, tv_series as tv_series_0 where cast_0.role = "Major Major" and movie_0.title = "Daddy Long Legs" and actor_0.aid = cast_0.aid and cast_0.msid = tv_series_0.sid and company_0.id = copyright_0.cid and company_0.id = copyright_1.cid and copyright_0.msid = movie_0.mid and copyright_1.msid = tv_series_0.sid
TOT: 0.8718865295769564; TR: 0.9685139712880125; QF: 0.02040816326530612; select actor_0.name from actor as actor_0, cast as cast_0, keyword as keyword_0, movie as movie_0, tags as tags_0, tags as tags_1, tv_series as tv_series_0 where cast_0.role = "Major Major" and movie_0.title = "Daddy Long Legs" and actor_0.aid = cast_0.aid and cast_0.msid = tv_series_0.sid and keyword_0.id = tags_0.kid and keyword_0.id = tags_1.kid and movie_0.mid = tags_0.msid and tags_1.msid = tv_series_0.sid
TOT: 0.8718865295769564; TR: 0.9685139712880125; QF: 0.02040816326530612; select actor_0.name from actor as actor_0, cast as cast_0, movie as movie_0, tv_series as tv_series_0, writer as writer_0, written_by as written_by_0, written_by as written_by_1 where cast_0.role = "Major Major" and movie_0.title = "Daddy Long Legs" and actor_0.aid = cast_0.aid and cast_0.msid = tv_series_0.sid and movie_0.mid = written_by_0.msid and tv_series_0.sid = written_by_1.msid and writer_0.wid = written_by_0.wid and writer_0.wid = written_by_1.wid
TOT: 0.8718865295769564; TR: 0.9685139712880125; QF: 0.02040816326530612; select actor_0.name from actor as actor_0, cast as cast_0, made_by as made_by_0, made_by as made_by_1, movie as movie_0, producer as producer_0, tv_series as tv_series_0 where cast_0.role = "Major Major" and movie_0.title = "Daddy Long Legs" and actor_0.aid = cast_0.aid and cast_0.msid = tv_series_0.sid and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid and made_by_1.msid = tv_series_0.sid and made_by_1.pid = producer_0.pid
TOT: 0.8634176545245266; TR: 0.9364940320609404; QF: 0.1621212121212121; select cast_0.role from cast as cast_0, directed_by as directed_by_0, director as director_0, movie as movie_0 where director_0.name = "Major" and movie_0.title = "Daddy Long Legs" and cast_0.msid = movie_0.mid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid
TOT: 0.8630843211911932; TR: 0.9364940320609404; QF: 0.1473063973063973; select cast_0.role from cast as cast_0, company as company_0, copyright as copyright_0, movie as movie_0 where company_0.name = "Major" and movie_0.title = "Daddy Long Legs" and cast_0.msid = movie_0.mid and company_0.id = copyright_0.cid and copyright_0.msid = movie_0.mid


00:55  INFO: ================
00:55  INFO: QUERY 128: What is the latest movie by "Jim Jarmusch"
00:55  INFO: ================
192. ROOT: ROOT; NA; ; (0) 
193. What: CMT; NA; ; (0) 
195. movie: NT; NA; ; (0) movie.title(1.0):| movie(1.0):| cast.role(0.95):Movie; Movie F; Movie AD; | company.name(0.95):Movie; Movies; Movie Movie; | keyword.keyword(0.83):movie-in-movie; b-movie; z-movie; | actor.name(0.76):| actor(0.76):| 
197. latest: FT; max; ; (0) 
198. Jim Jarmusch: VTTEXT; NA; ; (0) director.name(1.0):Jim Jarmusch; Jim Jarmusch; Tom Jarmusch; | actor.name(1.0):Jim Jarmusch; Jim Jarmusch; Tom Jarmusch; | producer.name(1.0):Jim Jarmusch; Jim Jarmusch; Tom Jarmusch; | writer.name(1.0):Jim Jarmusch; Jim Jarmusch; James R. Jarmusch; | movie.title(0.81):Behind Jim Jarmusch; Behind Jim Jarmusch; Focus on Jim Jarmusc; | cast.role(0.72):Jim Jarmusch's broth; Jim Jarmusch's broth; Jim Jamush; | tv_series.title(0.52):Earthworm Jim; Earthworm Jim; Jim Jam & Sunny; | 
What, WP
is, VBZ
the, DT
latest, JJS
movie, NN
by, IN
Jim Jarmusch, NNP
root(ROOT-0, What-1)
cop(What-1, is-2)
det(movie-5, the-3)
amod(movie-5, latest-4)
nsubj(What-1, movie-5)
case(Jim Jarmusch-7, by-6)
nmod(movie-5, Jim Jarmusch-7)

PARSE TREE:(192) ROOT ROOT
    (193) What CMT
        (195) movie NT
            (198) Jim Jarmusch VTTEXT


===========
TRANSLATIONS
===========

===========
RESULTS
===========


00:56  INFO: ================
00:56  INFO: QUERY 114: Find all movies that star both "Angelina Jolie" and "Brad Pitt"
00:56  INFO: ================
201. ROOT: ROOT; NA; ; (0) 
202. Find: CMT; NA; ; (0) 
203. movies: NT; NA; all; (0) movie.title(1.0):| movie(1.0):| cast.role(0.95):Movie; Movie F; Movie AD; | company.name(0.95):Movies; Movie; Movie Movie; | tv_series.title(0.84):Movies, Movies, Movi; Movie Mob; Moon Movies; | keyword.keyword(0.83):movie-in-movie; movies-about-movies; b-movie; | actor.name(0.76):| 
205. star: NT; NA; ; (0) actor.name(0.73):| actor(0.73):| writer.name(0.69):| writer(0.69):| cast.role(0.66):| cast(0.66):| producer.name(0.65):| 
207. Angelina Jolie: VTTEXT; NA; ; (0) director.name(1.0):Angelina Jolie; Angelina Jolie; Angelina Jolie Pitt; | actor.name(1.0):Angelina Jolie; Angelina Jolie; Angelina Jolie Pitt; | producer.name(1.0):Angelina Jolie; Angelina Jolie; Angelina Jolie Pitt; | writer.name(1.0):Angelina Jolie; Angelina Jolie; Angelina Jolie Pitt; | cast.role(0.82):Angelina Jones; Angelina John; Angelina Jones; | movie.title(0.78):Angelina; Angelina; Angelina; | keyword.keyword(0.62):referece-to-angelina; referece-to-angelina; | 
210. Brad Pitt: VTTEXT; NA; ; (0) actor.name(1.0):Brad Pitt; Brad Pitt; bRad sPitt; | cast.role(1.0):Brad Pitt'; Brad Pitt'; Brad Pitt #1; | producer.name(1.0):Brad Pitt; Brad Pitt; Mad Pitt; | director.name(0.78):Brad Pruitt; Brad Pruitt; Brad Witty; | writer.name(0.78):Brad Pruitt; Brad Pruitt; Brad Witt; | movie.title(0.72):Brad Pitt Video Port; Brad Pitt Video Port; Brad; | actor.birth_city(0.61):Brad; Brad; Pitt Meadows; | 
Find, VB
all, DT
movies, NNS
that, WDT
star, VB
both, CC
Angelina Jolie, NNP
and, CC
Brad Pitt, NNP
root(ROOT-0, Find-1)
det(movies-3, all-2)
dobj(Find-1, movies-3)
nsubj(star-5, that-4)
acl:relcl(movies-3, star-5)
cc:preconj(Angelina Jolie-7, both-6)
dobj(star-5, Angelina Jolie-7)
cc(Angelina Jolie-7, and-8)
conj(Angelina Jolie-7, Brad Pitt-9)

PARSE TREE:(201) ROOT ROOT
    (202) Find CMT
        (203) movies NT
            (205) star NT
                (207) Angelina Jolie VTTEXT
                (210) Brad Pitt VTTEXT


===========
TRANSLATIONS
===========
TOT: 1.0; NL: 1.0; NL+AG: 1.0; NL+QF: 1.0; rels: []; projs: [movie_0.title]; preds: [director_0.name = "Angelina Jolie",actor_0.name = "Brad Pitt"]; havings: []; superlative: []; blanks: 0
TOT: 1.0; NL: 1.0; NL+AG: 1.0; NL+QF: 1.0; rels: []; projs: [movie_0.title]; preds: [actor_0.name = "Angelina Jolie",actor_0.name = "Brad Pitt"]; havings: []; superlative: []; blanks: 0
TOT: 1.0; NL: 1.0; NL+AG: 1.0; NL+QF: 1.0; rels: []; projs: [movie_0.title]; preds: [actor_0.name = "Angelina Jolie",cast_0.role = "Brad Pitt'"]; havings: []; superlative: []; blanks: 0
TOT: 1.0; NL: 1.0; NL+AG: 1.0; NL+QF: 1.0; rels: []; projs: [movie_0.title]; preds: [actor_0.name = "Angelina Jolie",producer_0.name = "Brad Pitt"]; havings: []; superlative: []; blanks: 0
TOT: 1.0; NL: 1.0; NL+AG: 1.0; NL+QF: 1.0; rels: []; projs: [movie_0.title]; preds: [actor_0.name = "Angelina Jolie",actor_0.name = "Brad Pitt"]; havings: []; superlative: []; blanks: 0
TOT: 1.0; NL: 1.0; NL+AG: 1.0; NL+QF: 1.0; rels: []; projs: [movie_0.title]; preds: [producer_0.name = "Angelina Jolie",actor_0.name = "Brad Pitt"]; havings: []; superlative: []; blanks: 0
TOT: 1.0; NL: 1.0; NL+AG: 1.0; NL+QF: 1.0; rels: []; projs: [movie_0.title]; preds: [writer_0.name = "Angelina Jolie",actor_0.name = "Brad Pitt"]; havings: []; superlative: []; blanks: 0
TOT: 1.0; NL: 1.0; NL+AG: 1.0; NL+QF: 1.0; rels: []; projs: [movie_0.title]; preds: [writer_0.name = "Angelina Jolie",actor_0.name = "Brad Pitt"]; havings: []; superlative: []; blanks: 0
TOT: 1.0; NL: 1.0; NL+AG: 1.0; NL+QF: 1.0; rels: []; projs: [movie_0.title]; preds: [writer_0.name = "Angelina Jolie",cast_0.role = "Brad Pitt'"]; havings: []; superlative: []; blanks: 0
TOT: 1.0; NL: 1.0; NL+AG: 1.0; NL+QF: 1.0; rels: []; projs: [movie_0.title]; preds: [writer_0.name = "Angelina Jolie",producer_0.name = "Brad Pitt"]; havings: []; superlative: []; blanks: 0
TOT: 1.0; NL: 1.0; NL+AG: 1.0; NL+QF: 1.0; rels: []; projs: [movie_0.title]; preds: [director_0.name = "Angelina Jolie",cast_0.role = "Brad Pitt'"]; havings: []; superlative: []; blanks: 0
TOT: 1.0; NL: 1.0; NL+AG: 1.0; NL+QF: 1.0; rels: []; projs: [movie_0.title]; preds: [actor_0.name = "Angelina Jolie",cast_0.role = "Brad Pitt'"]; havings: []; superlative: []; blanks: 0
TOT: 1.0; NL: 1.0; NL+AG: 1.0; NL+QF: 1.0; rels: []; projs: [movie_0.title]; preds: [producer_0.name = "Angelina Jolie",cast_0.role = "Brad Pitt'"]; havings: []; superlative: []; blanks: 0
TOT: 1.0; NL: 1.0; NL+AG: 1.0; NL+QF: 1.0; rels: []; projs: [movie_0.title]; preds: [writer_0.name = "Angelina Jolie",cast_0.role = "Brad Pitt'"]; havings: []; superlative: []; blanks: 0
TOT: 1.0; NL: 1.0; NL+AG: 1.0; NL+QF: 1.0; rels: []; projs: [movie_0.title]; preds: [director_0.name = "Angelina Jolie",producer_0.name = "Brad Pitt"]; havings: []; superlative: []; blanks: 0
TOT: 1.0; NL: 1.0; NL+AG: 1.0; NL+QF: 1.0; rels: []; projs: [movie_0.title]; preds: [actor_0.name = "Angelina Jolie",producer_0.name = "Brad Pitt"]; havings: []; superlative: []; blanks: 0
TOT: 1.0; NL: 1.0; NL+AG: 1.0; NL+QF: 1.0; rels: []; projs: [movie_0.title]; preds: [producer_0.name = "Angelina Jolie",actor_0.name = "Brad Pitt"]; havings: []; superlative: []; blanks: 0
TOT: 1.0; NL: 1.0; NL+AG: 1.0; NL+QF: 1.0; rels: []; projs: [movie_0.title]; preds: [producer_0.name = "Angelina Jolie",cast_0.role = "Brad Pitt'"]; havings: []; superlative: []; blanks: 0
TOT: 1.0; NL: 1.0; NL+AG: 1.0; NL+QF: 1.0; rels: []; projs: [movie_0.title]; preds: [producer_0.name = "Angelina Jolie",producer_0.name = "Brad Pitt"]; havings: []; superlative: []; blanks: 0
TOT: 1.0; NL: 1.0; NL+AG: 1.0; NL+QF: 1.0; rels: []; projs: [movie_0.title]; preds: [producer_0.name = "Angelina Jolie",producer_0.name = "Brad Pitt"]; havings: []; superlative: []; blanks: 0
TOT: 1.0; NL: 1.0; NL+AG: 1.0; NL+QF: 1.0; rels: []; projs: [movie_0.title]; preds: [writer_0.name = "Angelina Jolie",producer_0.name = "Brad Pitt"]; havings: []; superlative: []; blanks: 0

===========
RESULTS
===========
TOT: 0.9288718995814175; TR: 1.0; QF: 0.23376623376623376; select movie_0.title from actor as actor_0, cast as cast_0, movie as movie_0 where actor_0.name = "Angelina Jolie" and cast_0.role = "Brad Pitt'" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid
TOT: 0.9173977272727273; TR: 1.0; QF: 0.1621212121212121; select movie_0.title from cast as cast_0, directed_by as directed_by_0, director as director_0, movie as movie_0 where cast_0.role = "Brad Pitt'" and director_0.name = "Angelina Jolie" and cast_0.msid = movie_0.mid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid
TOT: 0.9147727272727273; TR: 1.0; QF: 0.04545454545454545; select movie_0.title from cast as cast_0, made_by as made_by_0, movie as movie_0, producer as producer_0 where cast_0.role = "Brad Pitt'" and producer_0.name = "Angelina Jolie" and cast_0.msid = movie_0.mid and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid
TOT: 0.9147727272727273; TR: 1.0; QF: 0.04545454545454545; select movie_0.title from cast as cast_0, movie as movie_0, writer as writer_0, written_by as written_by_0 where cast_0.role = "Brad Pitt'" and writer_0.name = "Angelina Jolie" and cast_0.msid = movie_0.mid and movie_0.mid = written_by_0.msid and writer_0.wid = written_by_0.wid
TOT: 0.9101726555041667; TR: 1.0; QF: 0.14012987012987013; select movie_0.title from actor as actor_0, cast as cast_0, directed_by as directed_by_0, director as director_0, movie as movie_0 where actor_0.name = "Brad Pitt" and director_0.name = "Angelina Jolie" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid
TOT: 0.9085976555041667; TR: 1.0; QF: 0.07012987012987013; select movie_0.title from actor as actor_0, cast as cast_0, movie as movie_0, writer as writer_0, written_by as written_by_0 where actor_0.name = "Brad Pitt" and writer_0.name = "Angelina Jolie" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and movie_0.mid = written_by_0.msid and writer_0.wid = written_by_0.wid
TOT: 0.9085976555041667; TR: 1.0; QF: 0.07012987012987013; select movie_0.title from actor as actor_0, cast as cast_0, made_by as made_by_0, movie as movie_0, producer as producer_0 where actor_0.name = "Angelina Jolie" and producer_0.name = "Brad Pitt" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid
TOT: 0.9085976555041667; TR: 1.0; QF: 0.07012987012987013; select movie_0.title from actor as actor_0, cast as cast_0, made_by as made_by_0, movie as movie_0, producer as producer_0 where actor_0.name = "Brad Pitt" and producer_0.name = "Angelina Jolie" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid
TOT: 0.9085976555041667; TR: 1.0; QF: 0.07012987012987013; select movie_0.title from actor as actor_0, actor as actor_1, cast as cast_0, cast as cast_1, movie as movie_0 where actor_0.name = "Angelina Jolie" and actor_1.name = "Brad Pitt" and actor_0.aid = cast_0.aid and actor_1.aid = cast_1.aid and cast_0.msid = movie_0.mid and cast_1.msid = movie_0.mid
TOT: 0.9085947334262446; TR: 1.0; QF: 0.06999999999999999; select movie_0.title from directed_by as directed_by_0, director as director_0, made_by as made_by_0, movie as movie_0, producer as producer_0 where director_0.name = "Angelina Jolie" and producer_0.name = "Brad Pitt" and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid


00:59  INFO: ================
00:59  INFO: QUERY 49: Find the directors of all movies featuring "Kate Winslet"
00:59  INFO: ================
01:01  INFO: ================
01:01  INFO: QUERY 28: Find all comedies produced in year 2015
01:01  INFO: ================
01:05  INFO: ================
01:05  INFO: QUERY 15: Find all actors born in Milan
01:05  INFO: ================
01:06  INFO: ================
01:06  INFO: QUERY 115: Find all actors who acted in the same movie as "Tom Hanks"
01:06  INFO: ================
239. ROOT: ROOT; NA; ; (0) 
240. Find: CMT; NA; ; (0) 
241. actors: NT; NA; all; (0) actor.name(1.0):| actor(1.0):| movie.title(0.95):Actors; Actors; Actors; | tv_series.title(0.95):Actors; Actor; The Actor Factor; | cast.role(0.95):Actors; Actors; Actors; | keyword.keyword(0.95):actors; actor-director; no-actors; | company.name(0.79):For Actors by Actors; Actors Loft; Actors Pool; | 
243. acted: NT; NA; ; (0) movie.release_year(0.63):| tv_series.release_year(0.63):| actor.name(0.62):| actor(0.62):| genre.genre(0.62):| genre(0.62):| made_by(0.61):| 
245. movie: NT; NA; ; (0) movie.title(1.0):| movie(1.0):| cast.role(0.95):Movie; Movie F; Movie AD; | company.name(0.95):Movie; Movies; Movie Movie; | keyword.keyword(0.83):movie-in-movie; b-movie; z-movie; | actor.name(0.76):| actor(0.76):| 
249. Tom Hanks: VTTEXT; NA; ; (0) director.name(1.0):Tom Hanks; Tom Hanks; Tom Hankins; | actor.name(1.0):Tom Hanks; Jim Hanks; Tom Banks; | producer.name(1.0):Tom Hanks; Tom Hanks; Tom Hanc; | writer.name(1.0):Tom Hanks; Tom Hanks; Tom Hankins; | cast.role(0.76):Young Tom Hanks; Tom Hanner; Tom H; | movie.title(0.65):Hank; Arly Hanks; Tom Horn; | tv_series.title(0.65):Hank; Hank; Hank; | 
Find, VB
all, DT
actors, NNS
who, WP
acted, VBD
in, IN
the, DT
same, JJ
movie, NN
as, IN
Tom Hanks, NNP
root(ROOT-0, Find-1)
det(actors-3, all-2)
dobj(Find-1, actors-3)
nsubj(acted-5, who-4)
acl:relcl(actors-3, acted-5)
case(movie-9, in-6)
det(movie-9, the-7)
amod(movie-9, same-8)
nmod(acted-5, movie-9)
case(Tom Hanks-11, as-10)
nmod(acted-5, Tom Hanks-11)

PARSE TREE:(239) ROOT ROOT
    (240) Find CMT
        (241) actors NT
            (243) acted NT
                (245) movie NT
                (249) Tom Hanks VTTEXT


===========
TRANSLATIONS
===========
TOT: 0.8979007600118484; NL: 0.8979007600118484; NL+AG: 0.966581842152465; NL+QF: 0.8979007600118484; rels: [movie]; projs: [actor_0.name]; preds: [director_0.name = "Tom Hanks"]; havings: []; superlative: []; blanks: 1
TOT: 0.8979007600118484; NL: 0.8979007600118484; NL+AG: 0.966581842152465; NL+QF: 0.8979007600118484; rels: [movie]; projs: [actor_0.name]; preds: [actor_0.name = "Tom Hanks"]; havings: []; superlative: []; blanks: 1
TOT: 0.8979007600118484; NL: 0.8979007600118484; NL+AG: 0.966581842152465; NL+QF: 0.8979007600118484; rels: [movie]; projs: [actor_0.name]; preds: [producer_0.name = "Tom Hanks"]; havings: []; superlative: []; blanks: 1
TOT: 0.8979007600118484; NL: 0.8979007600118484; NL+AG: 0.966581842152465; NL+QF: 0.8979007600118484; rels: [movie]; projs: [actor_0.name]; preds: [writer_0.name = "Tom Hanks"]; havings: []; superlative: []; blanks: 1
TOT: 0.8757910416688064; NL: 0.8372373281436523; NL+AG: 0.942763618984786; NL+QF: 0.8757910416688064; rels: [movie]; projs: [actor_0.name]; preds: [cast_0.role = "Young Tom Hanks"]; havings: []; superlative: []; blanks: 1
TOT: 0.8640082258078776; NL: 0.8389821044998752; NL+AG: 0.9331636843049301; NL+QF: 0.8640082258078776; rels: [actor]; projs: [actor_0.name]; preds: [actor_0.name = "Tom Hanks"]; havings: []; superlative: []; blanks: 1
TOT: 0.8620046307164875; NL: 0.8389821044998752; NL+AG: 0.9331636843049301; NL+QF: 0.8620046307164875; rels: [actor]; projs: [actor_0.name]; preds: [director_0.name = "Tom Hanks"]; havings: []; superlative: []; blanks: 1
TOT: 0.8583665608997391; NL: 0.8076649586652486; NL+AG: 0.942763618984786; NL+QF: 0.8583665608997391; rels: [movie]; projs: [actor_0.name]; preds: [movie_0.title = "Hank"]; havings: []; superlative: []; blanks: 1
TOT: 0.8517708677660147; NL: 0.8389821044998752; NL+AG: 0.9331636843049301; NL+QF: 0.8517708677660147; rels: [actor]; projs: [actor_0.name]; preds: [producer_0.name = "Tom Hanks"]; havings: []; superlative: []; blanks: 1
TOT: 0.8517708677660147; NL: 0.8389821044998752; NL+AG: 0.9331636843049301; NL+QF: 0.8517708677660147; rels: [actor]; projs: [actor_0.name]; preds: [writer_0.name = "Tom Hanks"]; havings: []; superlative: []; blanks: 1
TOT: 0.8517708677660147; NL: 0.8389821044998752; NL+AG: 0.943035373891219; NL+QF: 0.8517708677660147; rels: [movie]; projs: [movie_0.title]; preds: [director_0.name = "Tom Hanks"]; havings: []; superlative: []; blanks: 1
TOT: 0.8517708677660147; NL: 0.8389821044998752; NL+AG: 0.943035373891219; NL+QF: 0.8517708677660147; rels: [movie]; projs: [movie_0.title]; preds: [actor_0.name = "Tom Hanks"]; havings: []; superlative: []; blanks: 1
TOT: 0.8517708677660147; NL: 0.8389821044998752; NL+AG: 0.943035373891219; NL+QF: 0.8517708677660147; rels: [movie]; projs: [movie_0.title]; preds: [producer_0.name = "Tom Hanks"]; havings: []; superlative: []; blanks: 1
TOT: 0.8517708677660147; NL: 0.8389821044998752; NL+AG: 0.943035373891219; NL+QF: 0.8517708677660147; rels: [movie]; projs: [movie_0.title]; preds: [writer_0.name = "Tom Hanks"]; havings: []; superlative: []; blanks: 1

===========
RESULTS
===========
TOT: 0.8233883015142378; TR: 0.8979007600118484; QF: 0.14012987012987013; select actor_0.name from actor as actor_0, cast as cast_0, directed_by as directed_by_0, director as director_0, movie as movie_0 where director_0.name = "Tom Hanks" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid
TOT: 0.8218133015142378; TR: 0.8979007600118484; QF: 0.07012987012987013; select actor_0.name from actor as actor_0, cast as cast_0, movie as movie_0, writer as writer_0, written_by as written_by_0 where writer_0.name = "Tom Hanks" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and movie_0.mid = written_by_0.msid and writer_0.wid = written_by_0.wid
TOT: 0.8218133015142378; TR: 0.8979007600118484; QF: 0.07012987012987013; select actor_0.name from actor as actor_0, cast as cast_0, made_by as made_by_0, movie as movie_0, producer as producer_0 where producer_0.name = "Tom Hanks" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid
TOT: 0.8218133015142378; TR: 0.8979007600118484; QF: 0.07012987012987013; select actor_0.name from actor as actor_0, actor as actor_1, cast as cast_0, cast as cast_1, movie as movie_0 where actor_1.name = "Tom Hanks" and actor_0.aid = cast_0.aid and actor_1.aid = cast_1.aid and cast_0.msid = movie_0.mid and cast_1.msid = movie_0.mid
TOT: 0.8084834763461957; TR: 0.8583665608997391; QF: 0.23376623376623376; select actor_0.name from actor as actor_0, cast as cast_0, movie as movie_0 where movie_0.title = "Hank" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid
TOT: 0.80287713718253; TR: 0.8517708677660147; QF: 0.23376623376623376; select movie_0.title from actor as actor_0, cast as cast_0, movie as movie_0 where actor_0.name = "Tom Hanks" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid
TOT: 0.8028673969227897; TR: 0.8517708677660147; QF: 0.2333333333333333; select movie_0.title from directed_by as directed_by_0, director as director_0, movie as movie_0 where director_0.name = "Tom Hanks" and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid
TOT: 0.7976173969227898; TR: 0.8517708677660147; QF: 0.0; select movie_0.title from movie as movie_0, writer as writer_0, written_by as written_by_0 where writer_0.name = "Tom Hanks" and movie_0.mid = written_by_0.msid and writer_0.wid = written_by_0.wid
TOT: 0.7976173969227898; TR: 0.8517708677660147; QF: 0.0; select movie_0.title from made_by as made_by_0, movie as movie_0, producer as producer_0 where producer_0.name = "Tom Hanks" and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid
TOT: 0.7923910110772263; TR: 0.8640082258078776; QF: 0.04285714285714286; select actor_0.name from actor as actor_0, actor as actor_1, cast as cast_0, cast as cast_1, tv_series as tv_series_0 where actor_1.name = "Tom Hanks" and actor_0.aid = cast_0.aid and actor_1.aid = cast_1.aid and cast_0.msid = tv_series_0.sid and cast_1.msid = tv_series_0.sid


01:08  INFO: ================
01:08  INFO: QUERY 46: Who is the writer of the movie "Django Unchained"
01:08  INFO: ================
01:10  INFO: ================
01:10  INFO: QUERY 22: Who was the director of the movie Joy from 2015?
01:10  INFO: ================
262. ROOT: ROOT; NA; ; (0) 
263. Joy: NT; NA; ; (0) writer.name(0.61):| writer(0.61):| written_by(0.6):| director.birth_city(0.59):| director.birth_year(0.59):| actor.birth_city(0.59):| actor.birth_year(0.59):| 
264. Who: CMT; NA; ; (0) director.name(1.0):| actor.name(1.0):| producer.name(1.0):| writer.name(1.0):| 
266. director: NT; NA; ; (0) director.name(1.0):| director(1.0):| movie.title(0.95):Director; Director; Director; | producer.name(0.95):Director; Co-Director; Director GT; | company.name(0.95):Director; Directors; Directors; | writer.name(0.95):Director; Director X; Director X.; | tv_series.title(0.86):Directors on Directo; The Directors; The Directors; | 
268. movie: NT; NA; ; (0) movie.title(1.0):| movie(1.0):| cast.role(0.95):Movie; Movie F; Movie AD; | company.name(0.95):Movie; Movies; Movie Movie; | keyword.keyword(0.83):movie-in-movie; b-movie; z-movie; | actor.name(0.76):| actor(0.76):| 
271. 2015: VTNUM; NA; ; (0) movie.release_year(1.0):2015; 2015; 2015; | tv_series.release_year(1.0):2015; 2015; 2015; | 
Who, WP
was, VBD
the, DT
director, NN
of, IN
the, DT
movie, NN
Joy, VBN
from, IN
2015, CD
dobj(Joy-8, Who-1)
auxpass(Joy-8, was-2)
det(director-4, the-3)
nsubjpass(Joy-8, director-4)
case(movie-7, of-5)
det(movie-7, the-6)
nmod(director-4, movie-7)
root(ROOT-0, Joy-8)
case(2015-10, from-9)
nmod(Joy-8, 2015-10)

PARSE TREE:(262) ROOT ROOT
    (264) Who CMT
        (266) director NT
            (268) movie NT
            (263) Joy NT
                (271) 2015 VTNUM


===========
TRANSLATIONS
===========
TOT: 0.9174505626104981; NL: 0.9174505626104981; NL+AG: 0.9702920339048415; NL+QF: 0.9174505626104981; rels: [movie]; projs: [director_0.name]; preds: [movie_0.release_year = 2015]; havings: []; superlative: []; blanks: 2
TOT: 0.9174505626104981; NL: 0.9174505626104981; NL+AG: 0.9702920339048415; NL+QF: 0.9174505626104981; rels: [movie]; projs: [director_0.name]; preds: [tv_series_0.release_year = 2015]; havings: []; superlative: []; blanks: 2
TOT: 0.8689647470148877; NL: 0.8689647470148877; NL+AG: 0.940584067809683; NL+QF: 0.8689647470148877; rels: [actor]; projs: [director_0.name]; preds: [movie_0.release_year = 2015]; havings: []; superlative: []; blanks: 2
TOT: 0.8689647470148877; NL: 0.8689647470148877; NL+AG: 0.940584067809683; NL+QF: 0.8689647470148877; rels: [actor]; projs: [director_0.name]; preds: [tv_series_0.release_year = 2015]; havings: []; superlative: []; blanks: 2
TOT: 0.8610007381153627; NL: 0.7905355291289191; NL+AG: 0.9492807767509834; NL+QF: 0.8610007381153627; rels: [movie]; projs: [actor_0.name]; preds: [movie_0.title = "Director",movie_0.release_year = 2015]; havings: []; superlative: []; blanks: 1
TOT: 0.846655699563006; NL: 0.846655699563006; NL+AG: 0.940584067809683; NL+QF: 0.846655699563006; rels: [movie]; projs: [producer_0.name]; preds: [movie_0.release_year = 2015]; havings: []; superlative: []; blanks: 2
TOT: 0.846655699563006; NL: 0.846655699563006; NL+AG: 0.940584067809683; NL+QF: 0.846655699563006; rels: [movie]; projs: [producer_0.name]; preds: [tv_series_0.release_year = 2015]; havings: []; superlative: []; blanks: 2
TOT: 0.84376566655546; NL: 0.7905355291289191; NL+AG: 0.9492807767509834; NL+QF: 0.84376566655546; rels: [movie]; projs: [actor_0.name]; preds: [movie_0.title = "Director",tv_series_0.release_year = 2015]; havings: []; superlative: []; blanks: 1
TOT: 0.8417155348343195; NL: 0.8417155348343195; NL+AG: 0.940584067809683; NL+QF: 0.8417155348343195; rels: [movie]; projs: [director_0.name]; preds: [movie_0.release_year = 2015]; havings: []; superlative: []; blanks: 2
TOT: 0.8417155348343195; NL: 0.8417155348343195; NL+AG: 0.940584067809683; NL+QF: 0.8417155348343195; rels: [movie]; projs: [director_0.name]; preds: [tv_series_0.release_year = 2015]; havings: []; superlative: []; blanks: 2
TOT: 0.8417155348343195; NL: 0.8417155348343195; NL+AG: 0.940584067809683; NL+QF: 0.8417155348343195; rels: [movie]; projs: [director_0.name]; preds: [movie_0.release_year = 2015]; havings: []; superlative: []; blanks: 2
TOT: 0.8417155348343195; NL: 0.8417155348343195; NL+AG: 0.940584067809683; NL+QF: 0.8417155348343195; rels: [movie]; projs: [director_0.name]; preds: [tv_series_0.release_year = 2015]; havings: []; superlative: []; blanks: 2
TOT: 0.8417155348343195; NL: 0.8417155348343195; NL+AG: 0.940584067809683; NL+QF: 0.8417155348343195; rels: []; projs: [director_0.name]; preds: [movie_0.release_year = 2015]; havings: []; superlative: []; blanks: 3
TOT: 0.8417155348343195; NL: 0.8417155348343195; NL+AG: 0.940584067809683; NL+QF: 0.8417155348343195; rels: []; projs: [director_0.name]; preds: [tv_series_0.release_year = 2015]; havings: []; superlative: []; blanks: 3
TOT: 0.8417155348343195; NL: 0.8417155348343195; NL+AG: 0.9386993405476363; NL+QF: 0.8417155348343195; rels: [movie]; projs: [director_0.name]; preds: []; havings: []; superlative: []; blanks: 3
TOT: 0.8417155348343195; NL: 0.8417155348343195; NL+AG: 0.940584067809683; NL+QF: 0.8417155348343195; rels: [movie]; projs: [actor_0.name]; preds: [movie_0.release_year = 2015]; havings: []; superlative: []; blanks: 2
TOT: 0.8417155348343195; NL: 0.8417155348343195; NL+AG: 0.940584067809683; NL+QF: 0.8417155348343195; rels: [movie]; projs: [actor_0.name]; preds: [tv_series_0.release_year = 2015]; havings: []; superlative: []; blanks: 2
TOT: 0.8417155348343195; NL: 0.8417155348343195; NL+AG: 0.940584067809683; NL+QF: 0.8417155348343195; rels: [movie]; projs: [producer_0.name]; preds: [movie_0.release_year = 2015]; havings: []; superlative: []; blanks: 2
TOT: 0.8417155348343195; NL: 0.8417155348343195; NL+AG: 0.940584067809683; NL+QF: 0.8417155348343195; rels: [movie]; projs: [producer_0.name]; preds: [tv_series_0.release_year = 2015]; havings: []; superlative: []; blanks: 2
TOT: 0.8417155348343195; NL: 0.8417155348343195; NL+AG: 0.940584067809683; NL+QF: 0.8417155348343195; rels: [movie]; projs: [writer_0.name]; preds: [movie_0.release_year = 2015]; havings: []; superlative: []; blanks: 2
TOT: 0.8417155348343195; NL: 0.8417155348343195; NL+AG: 0.940584067809683; NL+QF: 0.8417155348343195; rels: [movie]; projs: [writer_0.name]; preds: [tv_series_0.release_year = 2015]; havings: []; superlative: []; blanks: 2

===========
RESULTS
===========
TOT: 0.8586951375406007; TR: 0.9174505626104981; QF: 0.2333333333333333; select director_0.name from directed_by as directed_by_0, director as director_0, movie as movie_0 where movie_0.release_year = 2015 and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid
TOT: 0.8295248399932771; TR: 0.9174505626104981; QF: 0.06672850958565243; select director_0.name from actor as actor_0, cast as cast_0, cast as cast_1, directed_by as directed_by_0, director as director_0, movie as movie_0, tv_series as tv_series_0 where tv_series_0.release_year = 2015 and actor_0.aid = cast_0.aid and actor_0.aid = cast_1.aid and cast_0.msid = movie_0.mid and cast_1.msid = tv_series_0.sid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid
TOT: 0.8294282104323618; TR: 0.9174505626104981; QF: 0.06243386243386244; select director_0.name from classification as classification_0, classification as classification_1, directed_by as directed_by_0, director as director_0, genre as genre_0, movie as movie_0, tv_series as tv_series_0 where tv_series_0.release_year = 2015 and classification_0.gid = genre_0.gid and classification_0.msid = movie_0.mid and classification_1.gid = genre_0.gid and classification_1.msid = tv_series_0.sid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid
TOT: 0.8294282104323618; TR: 0.9174505626104981; QF: 0.06243386243386244; select director_0.name from company as company_0, copyright as copyright_0, copyright as copyright_1, directed_by as directed_by_0, director as director_0, movie as movie_0, tv_series as tv_series_0 where tv_series_0.release_year = 2015 and company_0.id = copyright_0.cid and company_0.id = copyright_1.cid and copyright_0.msid = movie_0.mid and copyright_1.msid = tv_series_0.sid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid
TOT: 0.8293105542789914; TR: 0.9174505626104981; QF: 0.05720470006184292; select director_0.name from actor as actor_0, cast as cast_0, cast as cast_1, directed_by as directed_by_0, director as director_0, movie as movie_0, tv_series as tv_series_0 where movie_0.release_year = 2015 and actor_0.aid = cast_0.aid and actor_0.aid = cast_1.aid and cast_0.msid = movie_0.mid and cast_1.msid = tv_series_0.sid and directed_by_0.did = director_0.did and directed_by_0.msid = tv_series_0.sid
TOT: 0.8292139247180761; TR: 0.9174505626104981; QF: 0.052910052910052914; select director_0.name from classification as classification_0, classification as classification_1, directed_by as directed_by_0, director as director_0, genre as genre_0, movie as movie_0, tv_series as tv_series_0 where movie_0.release_year = 2015 and classification_0.gid = genre_0.gid and classification_0.msid = movie_0.mid and classification_1.gid = genre_0.gid and classification_1.msid = tv_series_0.sid and directed_by_0.did = director_0.did and directed_by_0.msid = tv_series_0.sid
TOT: 0.8292139247180761; TR: 0.9174505626104981; QF: 0.052910052910052914; select director_0.name from company as company_0, copyright as copyright_0, copyright as copyright_1, directed_by as directed_by_0, director as director_0, movie as movie_0, tv_series as tv_series_0 where movie_0.release_year = 2015 and company_0.id = copyright_0.cid and company_0.id = copyright_1.cid and copyright_0.msid = movie_0.mid and copyright_1.msid = tv_series_0.sid and directed_by_0.did = director_0.did and directed_by_0.msid = tv_series_0.sid
TOT: 0.8287734485275998; TR: 0.9174505626104981; QF: 0.03333333333333333; select director_0.name from directed_by as directed_by_0, director as director_0, keyword as keyword_0, movie as movie_0, tags as tags_0, tags as tags_1, tv_series as tv_series_0 where tv_series_0.release_year = 2015 and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and keyword_0.id = tags_0.kid and keyword_0.id = tags_1.kid and movie_0.mid = tags_0.msid and tags_1.msid = tv_series_0.sid
TOT: 0.8287734485275998; TR: 0.9174505626104981; QF: 0.03333333333333333; select director_0.name from directed_by as directed_by_0, director as director_0, made_by as made_by_0, made_by as made_by_1, movie as movie_0, producer as producer_0, tv_series as tv_series_0 where tv_series_0.release_year = 2015 and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid and made_by_1.msid = tv_series_0.sid and made_by_1.pid = producer_0.pid
TOT: 0.8287734485275998; TR: 0.9174505626104981; QF: 0.03333333333333333; select director_0.name from directed_by as directed_by_0, director as director_0, movie as movie_0, tv_series as tv_series_0, writer as writer_0, written_by as written_by_0, written_by as written_by_1 where tv_series_0.release_year = 2015 and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and movie_0.mid = written_by_0.msid and tv_series_0.sid = written_by_1.msid and writer_0.wid = written_by_0.wid and writer_0.wid = written_by_1.wid


01:12  INFO: ================
01:12  INFO: QUERY 43: Who acts "Olivia Pope" in the series Scandal?
01:12  INFO: ================
01:14  INFO: ================
01:14  INFO: QUERY 26: Find all movies featuring "Kate Winslet"
01:14  INFO: ================
283. ROOT: ROOT; NA; ; (0) 
284. Find: CMT; NA; ; (0) 
285. featuring: NT; NA; ; (0) tv_series.title(0.69):| tv_series(0.69):| movie.release_year(0.64):| tv_series.release_year(0.64):| made_by(0.64):| movie.title_aka(0.62):| tv_series.title_aka(0.62):| 
286. movies: NT; NA; all; (0) movie.title(1.0):| movie(1.0):| cast.role(0.95):Movie; Movie F; Movie AD; | company.name(0.95):Movies; Movie; Movie Movie; | tv_series.title(0.84):Movies, Movies, Movi; Movie Mob; Moon Movies; | keyword.keyword(0.83):movie-in-movie; movies-about-movies; b-movie; | actor.name(0.76):| 
288. Kate Winslet: VTTEXT; NA; ; (0) actor.name(1.0):Kate Winslet; Kate Winslet; Kate Elizabeth Winsl; | cast.role(0.91):Kate Winsled; Kate Winsled; Kate Winslow; | producer.name(0.7):Kate Winters; Kate Winters; Kate Fewins; | writer.name(0.67):Kate Wincup; Kate Wincup; Kate Lewis; | director.name(0.64):Kate Lewis; Kate Lewis; Kate Lewis; | movie.title(0.57):Kate Winslet: What I; Kate Winslet: What I; Kate Wakes; | tv_series.title(0.52):Kate; Kate; Reel Late with Kate; | 
Find, VB
all, DT
movies, NNS
featuring, VBG
Kate Winslet, NNP
root(ROOT-0, Find-1)
det(movies-3, all-2)
nsubj(featuring-4, movies-3)
dep(Find-1, featuring-4)
dobj(featuring-4, Kate Winslet-5)

PARSE TREE:(283) ROOT ROOT
    (284) Find CMT
        (286) movies NT
            (285) featuring NT
                (288) Kate Winslet VTTEXT


===========
TRANSLATIONS
===========
TOT: 0.8662391053409028; NL: 0.8662391053409028; NL+AG: 0.9628121638266046; NL+QF: 0.8662391053409028; rels: []; projs: [movie_0.title]; preds: [actor_0.name = "Kate Winslet"]; havings: []; superlative: []; blanks: 1
TOT: 0.8662391053409028; NL: 0.7665480234959089; NL+AG: 0.9286845458401042; NL+QF: 0.8662391053409028; rels: []; projs: [actor_0.name]; preds: [cast_0.role = "Kate Winsled"]; havings: []; superlative: []; blanks: 1
TOT: 0.839151207478158; NL: 0.839151207478158; NL+AG: 0.952071795731814; NL+QF: 0.839151207478158; rels: []; projs: [movie_0.title]; preds: [cast_0.role = "Kate Winsled"]; havings: []; superlative: []; blanks: 1
TOT: 0.82915619758885; NL: 0.82915619758885; NL+AG: 0.9889432485322897; NL+QF: 0.82915619758885; rels: []; projs: [tv_series_0.title]; preds: [actor_0.name = "Kate Winslet"]; havings: []; superlative: []; blanks: 0
TOT: 0.82915619758885; NL: 0.82915619758885; NL+AG: 0.9889432485322897; NL+QF: 0.82915619758885; rels: []; projs: [tv_series_0.title]; preds: [actor_0.name = "Kate Winslet"]; havings: []; superlative: []; blanks: 0
TOT: 0.7912922821972069; NL: 0.7912922821972069; NL+AG: 0.9394249139348947; NL+QF: 0.7912922821972069; rels: []; projs: [actor_0.name]; preds: [actor_0.name = "Kate Winslet"]; havings: []; superlative: []; blanks: 1
TOT: 0.7905694150420949; NL: 0.7905694150420949; NL+AG: 0.9839174524106031; NL+QF: 0.7905694150420949; rels: []; projs: [tv_series_0.title]; preds: [cast_0.role = "Kate Winsled"]; havings: []; superlative: []; blanks: 0
TOT: 0.7905694150420949; NL: 0.7905694150420949; NL+AG: 0.9839174524106031; NL+QF: 0.7905694150420949; rels: []; projs: [tv_series_0.title]; preds: [cast_0.role = "Kate Winsled"]; havings: []; superlative: []; blanks: 0
TOT: 0.7677835317727486; NL: 0.7677835317727486; NL+AG: 0.9391833540180654; NL+QF: 0.7677835317727486; rels: []; projs: [movie_0.title]; preds: [producer_0.name = "Kate Winters"]; havings: []; superlative: []; blanks: 1
TOT: 0.7645314458836486; NL: 0.7645314458836486; NL+AG: 0.9394249139348947; NL+QF: 0.7645314458836486; rels: []; projs: [tv_series_0.title]; preds: [actor_0.name = "Kate Winslet"]; havings: []; superlative: []; blanks: 1
TOT: 0.7645314458836486; NL: 0.7645314458836486; NL+AG: 0.9394249139348947; NL+QF: 0.7645314458836486; rels: []; projs: [tv_series_0.title]; preds: [actor_0.name = "Kate Winslet"]; havings: []; superlative: []; blanks: 1

===========
RESULTS
===========
TOT: 0.8361022112839093; TR: 0.8662391053409028; QF: 0.42857142857142855; select actor_0.name from actor as actor_0, cast as cast_0 where cast_0.role = "Kate Winsled" and actor_0.aid = cast_0.aid
TOT: 0.8151751391211848; TR: 0.8662391053409028; QF: 0.23376623376623376; select movie_0.title from actor as actor_0, cast as cast_0, movie as movie_0 where actor_0.name = "Kate Winslet" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid
TOT: 0.8095710045940827; TR: 0.839151207478158; QF: 0.2727272727272727; select movie_0.title from cast as cast_0, movie as movie_0 where cast_0.role = "Kate Winsled" and cast_0.msid = movie_0.mid
TOT: 0.7857028935219131; TR: 0.8662391053409028; QF: 0.05374149659863946; select movie_0.title from actor as actor_0, cast as cast_0, directed_by as directed_by_0, directed_by as directed_by_1, director as director_0, movie as movie_0, tv_series as tv_series_0 where actor_0.name = "Kate Winslet" and actor_0.aid = cast_0.aid and cast_0.msid = tv_series_0.sid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and directed_by_1.did = director_0.did and directed_by_1.msid = tv_series_0.sid
TOT: 0.7856076554266751; TR: 0.8662391053409028; QF: 0.04950869236583522; select movie_0.title from actor as actor_0, cast as cast_0, classification as classification_0, classification as classification_1, genre as genre_0, movie as movie_0, tv_series as tv_series_0 where actor_0.name = "Kate Winslet" and actor_0.aid = cast_0.aid and cast_0.msid = tv_series_0.sid and classification_0.gid = genre_0.gid and classification_0.msid = movie_0.mid and classification_1.gid = genre_0.gid and classification_1.msid = tv_series_0.sid
TOT: 0.7856076554266751; TR: 0.8662391053409028; QF: 0.049508692365835216; select movie_0.title from actor as actor_0, cast as cast_0, company as company_0, copyright as copyright_0, copyright as copyright_1, movie as movie_0, tv_series as tv_series_0 where actor_0.name = "Kate Winslet" and actor_0.aid = cast_0.aid and cast_0.msid = tv_series_0.sid and company_0.id = copyright_0.cid and company_0.id = copyright_1.cid and copyright_0.msid = movie_0.mid and copyright_1.msid = tv_series_0.sid
TOT: 0.7849528935219131; TR: 0.8662391053409028; QF: 0.02040816326530612; select movie_0.title from actor as actor_0, cast as cast_0, keyword as keyword_0, movie as movie_0, tags as tags_0, tags as tags_1, tv_series as tv_series_0 where actor_0.name = "Kate Winslet" and actor_0.aid = cast_0.aid and cast_0.msid = tv_series_0.sid and keyword_0.id = tags_0.kid and keyword_0.id = tags_1.kid and movie_0.mid = tags_0.msid and tags_1.msid = tv_series_0.sid
TOT: 0.7849528935219131; TR: 0.8662391053409028; QF: 0.02040816326530612; select movie_0.title from actor as actor_0, cast as cast_0, movie as movie_0, tv_series as tv_series_0, writer as writer_0, written_by as written_by_0, written_by as written_by_1 where actor_0.name = "Kate Winslet" and actor_0.aid = cast_0.aid and cast_0.msid = tv_series_0.sid and movie_0.mid = written_by_0.msid and tv_series_0.sid = written_by_1.msid and writer_0.wid = written_by_0.wid and writer_0.wid = written_by_1.wid
TOT: 0.7849528935219131; TR: 0.8662391053409028; QF: 0.02040816326530612; select movie_0.title from actor as actor_0, cast as cast_0, made_by as made_by_0, made_by as made_by_1, movie as movie_0, producer as producer_0, tv_series as tv_series_0 where actor_0.name = "Kate Winslet" and actor_0.aid = cast_0.aid and cast_0.msid = tv_series_0.sid and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid and made_by_1.msid = tv_series_0.sid and made_by_1.pid = producer_0.pid
TOT: 0.7816092129864854; TR: 0.82915619758885; QF: 0.14285714285714285; select tv_series_0.title from actor as actor_0, cast as cast_0, tv_series as tv_series_0 where actor_0.name = "Kate Winslet" and actor_0.aid = cast_0.aid and cast_0.msid = tv_series_0.sid


01:15  INFO: ================
01:15  INFO: QUERY 113: Find the number of companies which worked with "Gabriele Ferzetti"
01:15  INFO: ================
290. ROOT: ROOT; NA; ; (0) 
291. Find: CMT; NA; ; (0) 
292. number of: FT; count; ; (0) 
294. companies: NT; NA; ; (0) company.name(1.0):| company(1.0):| movie.title(0.95):Company; Company; Company; | cast.role(0.95):Company; Company; Company; | keyword.keyword(0.95):company; company-k; it-company; | tv_series.title(0.82):X Company; Eco Company; Company and Co; | actor.name(0.74):Eva Company; Angel Company; Marc Company; | 
296. worked: NT; NA; ; (0) directed_by(0.71):| made_by(0.64):| written_by(0.63):| director.name(0.62):| director(0.62):| cast.role(0.62):| cast(0.62):| 
298. Gabriele Ferzetti: VTTEXT; NA; ; (0) actor.name(1.0):Gabriele Ferzetti; Gabriele Ferzetti; Gabriel Ferzetti; | director.name(0.73):Gabriele Ferluga; Gabriele Ferluga; Gabriele Mainetti; | writer.name(0.73):Gabriele Ferluga; Gabriele Ferluga; Gabriele Kiefer; | cast.role(0.71):Gabriele Cercetti; Gabriele Cercetti; Gabriele Cercetti; | producer.name(0.69):Gabriele Mainetti; Gabriele Mainetti; Gabriele Gauler; | movie.title(0.53):Gabriele Dambrone; Gabriele Dambrone; For Gabriele; | company.name(0.53):San Gabriele; San Gabriele; Kranzelbinder Gabrie; | 
Find, VB
the, DT
number, NN
of, IN
companies, NNS
which, WDT
worked, VBD
with, IN
Gabriele Ferzetti, NNP
root(ROOT-0, Find-1)
det(number-3, the-2)
dobj(Find-1, number-3)
case(companies-5, of-4)
nmod(number-3, companies-5)
nsubj(worked-7, which-6)
acl:relcl(companies-5, worked-7)
case(Gabriele Ferzetti-9, with-8)
nmod(worked-7, Gabriele Ferzetti-9)

PARSE TREE:(290) ROOT ROOT
    (291) Find CMT
        (292) number of FT
            (294) companies NT
                (296) worked NT
                    (298) Gabriele Ferzetti VTTEXT


===========
TRANSLATIONS
===========
TOT: 0.903323133730481; NL: 0.8011251866475296; NL+AG: 0.9336787348794631; NL+QF: 0.903323133730481; rels: [directed_by]; projs: [count(distinct(company_0.name))]; preds: [director_0.name = "Gabriele Ferluga"]; havings: []; superlative: []; blanks: 0
TOT: 0.8907068407403163; NL: 0.8907068407403163; NL+AG: 0.9623803610291506; NL+QF: 0.8907068407403163; rels: [directed_by]; projs: [count(distinct(company_0.name))]; preds: [actor_0.name = "Gabriele Ferzetti"]; havings: []; superlative: []; blanks: 0
TOT: 0.8662391053409028; NL: 0.8662391053409028; NL+AG: 0.9623803610291506; NL+QF: 0.8662391053409028; rels: []; projs: [count(distinct(company_0.name))]; preds: [actor_0.name = "Gabriele Ferzetti"]; havings: []; superlative: []; blanks: 1
TOT: 0.8011251866475296; NL: 0.8011251866475296; NL+AG: 0.9336787348794631; NL+QF: 0.8011251866475296; rels: [directed_by]; projs: [count(distinct(company_0.name))]; preds: [writer_0.name = "Gabriele Ferluga"]; havings: []; superlative: []; blanks: 0
TOT: 0.7935295826543791; NL: 0.7935295826543791; NL+AG: 0.9336787348794631; NL+QF: 0.7935295826543791; rels: [directed_by]; projs: [count(distinct(company_0.name))]; preds: [cast_0.role = "Gabriele Cercetti"]; havings: []; superlative: []; blanks: 0
TOT: 0.7861263531177781; NL: 0.7861263531177781; NL+AG: 0.9336787348794631; NL+QF: 0.7861263531177781; rels: [directed_by]; projs: [count(distinct(company_0.name))]; preds: [producer_0.name = "Gabriele Mainetti"]; havings: []; superlative: []; blanks: 0
TOT: 0.7791182611450765; NL: 0.7791182611450765; NL+AG: 0.9336787348794631; NL+QF: 0.7791182611450765; rels: []; projs: [count(distinct(company_0.name))]; preds: [director_0.name = "Gabriele Ferluga"]; havings: []; superlative: []; blanks: 1
TOT: 0.7791182611450765; NL: 0.7791182611450765; NL+AG: 0.9336787348794631; NL+QF: 0.7791182611450765; rels: []; projs: [count(distinct(company_0.name))]; preds: [writer_0.name = "Gabriele Ferluga"]; havings: []; superlative: []; blanks: 1
TOT: 0.7717313085512446; NL: 0.7717313085512446; NL+AG: 0.9336787348794631; NL+QF: 0.7717313085512446; rels: []; projs: [count(distinct(company_0.name))]; preds: [cast_0.role = "Gabriele Cercetti"]; havings: []; superlative: []; blanks: 1
TOT: 0.7715650968439136; NL: 0.7715650968439136; NL+AG: 0.9177456737040814; NL+QF: 0.7715650968439136; rels: [directed_by]; projs: [count(distinct(company_0.name))]; preds: []; havings: []; superlative: []; blanks: 1
TOT: 0.7645314458836486; NL: 0.7645314458836486; NL+AG: 0.9336787348794631; NL+QF: 0.7645314458836486; rels: []; projs: [count(distinct(company_0.name))]; preds: [producer_0.name = "Gabriele Mainetti"]; havings: []; superlative: []; blanks: 1

===========
RESULTS
===========
TOT: 0.8277943970971535; TR: 0.903323133730481; QF: 0.13111111111111112; select count(distinct(company_0.name)) from company as company_0, copyright as copyright_0, directed_by as directed_by_0, director as director_0, movie as movie_0 where director_0.name = "Gabriele Ferluga" and company_0.id = copyright_0.cid and copyright_0.msid = movie_0.mid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid
TOT: 0.8270943970971535; TR: 0.903323133730481; QF: 0.1; select count(distinct(company_0.name)) from company as company_0, copyright as copyright_0, directed_by as directed_by_0, director as director_0, tv_series as tv_series_0 where director_0.name = "Gabriele Ferluga" and company_0.id = copyright_0.cid and copyright_0.msid = tv_series_0.sid and directed_by_0.did = director_0.did and directed_by_0.msid = tv_series_0.sid
TOT: 0.796275895043934; TR: 0.8662391053409028; QF: 0.13124098124098124; select count(distinct(company_0.name)) from actor as actor_0, cast as cast_0, company as company_0, copyright as copyright_0, movie as movie_0 where actor_0.name = "Gabriele Ferzetti" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and company_0.id = copyright_0.cid and copyright_0.msid = movie_0.mid
TOT: 0.7954122586802976; TR: 0.8662391053409028; QF: 0.09285714285714286; select count(distinct(company_0.name)) from actor as actor_0, cast as cast_0, company as company_0, copyright as copyright_0, tv_series as tv_series_0 where actor_0.name = "Gabriele Ferzetti" and actor_0.aid = cast_0.aid and cast_0.msid = tv_series_0.sid and company_0.id = copyright_0.cid and copyright_0.msid = tv_series_0.sid
TOT: 0.7230360062079518; TR: 0.7717313085512446; QF: 0.1473063973063973; select count(distinct(company_0.name)) from cast as cast_0, company as company_0, copyright as copyright_0, movie as movie_0 where cast_0.role = "Gabriele Cercetti" and cast_0.msid = movie_0.mid and company_0.id = copyright_0.cid and copyright_0.msid = movie_0.mid
TOT: 0.721596612268558; TR: 0.7717313085512446; QF: 0.08333333333333333; select count(distinct(company_0.name)) from cast as cast_0, company as company_0, copyright as copyright_0, tv_series as tv_series_0 where cast_0.role = "Gabriele Cercetti" and cast_0.msid = tv_series_0.sid and company_0.id = copyright_0.cid and copyright_0.msid = tv_series_0.sid
TOT: 0.7206452553995597; TR: 0.7791182611450765; QF: 0.061111111111111116; select count(distinct(company_0.name)) from company as company_0, copyright as copyright_0, movie as movie_0, writer as writer_0, written_by as written_by_0 where writer_0.name = "Gabriele Ferluga" and company_0.id = copyright_0.cid and copyright_0.msid = movie_0.mid and movie_0.mid = written_by_0.msid and writer_0.wid = written_by_0.wid
TOT: 0.7203952553995596; TR: 0.7791182611450765; QF: 0.05; select count(distinct(company_0.name)) from company as company_0, copyright as copyright_0, tv_series as tv_series_0, writer as writer_0, written_by as written_by_0 where writer_0.name = "Gabriele Ferluga" and company_0.id = copyright_0.cid and copyright_0.msid = tv_series_0.sid and tv_series_0.sid = written_by_0.msid and writer_0.wid = written_by_0.wid
TOT: 0.708246462427346; TR: 0.7645314458836486; QF: 0.061111111111111116; select count(distinct(company_0.name)) from company as company_0, copyright as copyright_0, made_by as made_by_0, movie as movie_0, producer as producer_0 where producer_0.name = "Gabriele Mainetti" and company_0.id = copyright_0.cid and copyright_0.msid = movie_0.mid and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid
TOT: 0.7079964624273459; TR: 0.7645314458836486; QF: 0.05; select count(distinct(company_0.name)) from company as company_0, copyright as copyright_0, made_by as made_by_0, producer as producer_0, tv_series as tv_series_0 where producer_0.name = "Gabriele Mainetti" and company_0.id = copyright_0.cid and copyright_0.msid = tv_series_0.sid and made_by_0.msid = tv_series_0.sid and made_by_0.pid = producer_0.pid


01:16  INFO: ================
01:16  INFO: QUERY 72: List all the Sci-Fi movies which released in 2010
01:16  INFO: ================
301. ROOT: ROOT; NA; ; (0) 
302. List: CMT; NA; ; (0) 
303. movies: NT; NA; all; (0) movie.title(1.0):| movie(1.0):| cast.role(0.95):Movie; Movie F; Movie AD; | company.name(0.95):Movies; Movie; Movie Movie; | tv_series.title(0.84):Movies, Movies, Movi; Movie Mob; Moon Movies; | keyword.keyword(0.83):movie-in-movie; movies-about-movies; b-movie; | actor.name(0.76):| 
306. Sci-Fi: VTTEXT; NA; ; (0) cast.role(1.0):Sci-Fi; Sci-Fi; Sci-fi #1; | genre.genre(1.0):Sci-Fi; Sci-Fi; Film-Noir; | keyword.keyword(0.87):sci-fi-fan; sci-fi-fan; sci-fi-geek; | actor.name(0.75):Mr. Sci-Fi; Mr. Sci-Fi; That Sci-fiGuy; | producer.name(0.75):Mr. Sci-Fi; Mr. Sci-Fi; That Sci-fiGuy; | company.name(0.75):AXN Sci-Fi; AXN Sci-Fi; AXN Sci-Fi; | writer.name(0.75):Mr. Sci-Fi; Mr. Sci-Fi; That Sci-fiGuy; | 
307. released: NT; NA; ; (0) movie.release_year(1.0):| tv_series.release_year(1.0):| movie.title(0.64):| movie(0.64):| movie.title_aka(0.63):| tv_series.title_aka(0.63):| cast.role(0.63):| 
309. 2010: VTNUM; NA; ; (0) movie.release_year(1.0):2010; 2010; 2010; | tv_series.release_year(1.0):2010; 2010; 2010; | actor.birth_year(1.0):2010; 2010; | producer.birth_year(1.0):2010; | 
List, VB
all, PDT
the, DT
Sci-Fi, JJ
movies, NNS
which, WDT
released, VBN
in, IN
2010, CD
root(ROOT-0, List-1)
det:predet(movies-5, all-2)
det(movies-5, the-3)
amod(movies-5, Sci-Fi-4)
dobj(List-1, movies-5)
nsubj(released-7, which-6)
acl:relcl(movies-5, released-7)
case(2010-9, in-8)
nmod(released-7, 2010-9)

PARSE TREE:(301) ROOT ROOT
    (302) List CMT
        (303) movies NT
            (306) Sci-Fi VTTEXT
            (307) released NT
                (309) 2010 VTNUM


===========
TRANSLATIONS
===========
TOT: 1.0; NL: 1.0; NL+AG: 1.0; NL+QF: 1.0; rels: []; projs: [movie_0.title]; preds: [cast_0.role = "Sci-Fi",movie_0.release_year = 2010]; havings: []; superlative: []; blanks: 0
TOT: 1.0; NL: 1.0; NL+AG: 1.0; NL+QF: 1.0; rels: []; projs: [movie_0.title]; preds: [cast_0.role = "Sci-Fi",tv_series_0.release_year = 2010]; havings: []; superlative: []; blanks: 0
TOT: 1.0; NL: 1.0; NL+AG: 1.0; NL+QF: 1.0; rels: []; projs: [movie_0.title]; preds: [genre_0.genre = "Sci-Fi",movie_0.release_year = 2010]; havings: []; superlative: []; blanks: 0
TOT: 1.0; NL: 1.0; NL+AG: 1.0; NL+QF: 1.0; rels: []; projs: [movie_0.title]; preds: [genre_0.genre = "Sci-Fi",tv_series_0.release_year = 2010]; havings: []; superlative: []; blanks: 0
TOT: 0.9586921571660568; NL: 0.9134802127015484; NL+AG: 0.9751546167589099; NL+QF: 0.9586921571660568; rels: []; projs: [actor_0.name]; preds: [cast_0.role = "Sci-Fi",movie_0.release_year = 2010]; havings: []; superlative: []; blanks: 0
TOT: 0.9586921571660568; NL: 0.9134802127015484; NL+AG: 0.9751546167589099; NL+QF: 0.9586921571660568; rels: []; projs: [actor_0.name]; preds: [cast_0.role = "Sci-Fi",tv_series_0.release_year = 2010]; havings: []; superlative: []; blanks: 0
TOT: 0.9539972450774545; NL: 0.9539972450774545; NL+AG: 0.983897512635319; NL+QF: 0.9539972450774545; rels: []; projs: [movie_0.title]; preds: [keyword_0.keyword = "sci-fi-fan",movie_0.release_year = 2010]; havings: []; superlative: []; blanks: 0
TOT: 0.9539972450774545; NL: 0.9539972450774545; NL+AG: 0.983897512635319; NL+QF: 0.9539972450774545; rels: []; projs: [movie_0.title]; preds: [keyword_0.keyword = "sci-fi-fan",tv_series_0.release_year = 2010]; havings: []; superlative: []; blanks: 0
TOT: 0.9398692017845466; NL: 0.9066811409991332; NL+AG: 0.9755572687079536; NL+QF: 0.9398692017845466; rels: []; projs: [movie_0.title]; preds: [company_0.name = "AXN Sci-Fi",movie_0.release_year = 2010]; havings: []; superlative: []; blanks: 0
TOT: 0.9398692017845466; NL: 0.9066811409991332; NL+AG: 0.9755572687079536; NL+QF: 0.9398692017845466; rels: []; projs: [movie_0.title]; preds: [company_0.name = "AXN Sci-Fi",tv_series_0.release_year = 2010]; havings: []; superlative: []; blanks: 0
TOT: 0.9134802127015484; NL: 0.9134802127015484; NL+AG: 0.9751546167589099; NL+QF: 0.9134802127015484; rels: []; projs: [actor_0.name]; preds: [genre_0.genre = "Sci-Fi",movie_0.release_year = 2010]; havings: []; superlative: []; blanks: 0
TOT: 0.9134802127015484; NL: 0.9134802127015484; NL+AG: 0.9751546167589099; NL+QF: 0.9134802127015484; rels: []; projs: [actor_0.name]; preds: [genre_0.genre = "Sci-Fi",tv_series_0.release_year = 2010]; havings: []; superlative: []; blanks: 0

===========
RESULTS
===========
TOT: 0.9462924782376484; TR: 1.0; QF: 0.2727272727272727; select movie_0.title from cast as cast_0, movie as movie_0 where cast_0.role = "Sci-Fi" and movie_0.release_year = 2010 and cast_0.msid = movie_0.mid
TOT: 0.9281954926550106; TR: 1.0; QF: 0.20370370370370372; select movie_0.title from classification as classification_0, genre as genre_0, movie as movie_0 where genre_0.genre = "Sci-Fi" and movie_0.release_year = 2010 and classification_0.gid = genre_0.gid and classification_0.msid = movie_0.mid
TOT: 0.9085976555041667; TR: 1.0; QF: 0.07012987012987013; select movie_0.title from actor as actor_0, cast as cast_0, cast as cast_1, movie as movie_0, tv_series as tv_series_0 where cast_0.role = "Sci-Fi" and tv_series_0.release_year = 2010 and actor_0.aid = cast_0.aid and actor_0.aid = cast_1.aid and cast_0.msid = movie_0.mid and cast_1.msid = tv_series_0.sid
TOT: 0.9083947334262447; TR: 1.0; QF: 0.061111111111111116; select movie_0.title from classification as classification_0, classification as classification_1, genre as genre_0, movie as movie_0, tv_series as tv_series_0 where genre_0.genre = "Sci-Fi" and tv_series_0.release_year = 2010 and classification_0.gid = genre_0.gid and classification_0.msid = movie_0.mid and classification_1.gid = genre_0.gid and classification_1.msid = tv_series_0.sid
TOT: 0.9035107479432334; TR: 1.0; QF: 0.06484848484848484; select movie_0.title from cast as cast_0, directed_by as directed_by_0, directed_by as directed_by_1, director as director_0, movie as movie_0, tv_series as tv_series_0 where cast_0.role = "Sci-Fi" and tv_series_0.release_year = 2010 and cast_0.msid = movie_0.mid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and directed_by_1.did = director_0.did and directed_by_1.msid = tv_series_0.sid
TOT: 0.9033774146099001; TR: 1.0; QF: 0.058922558922558925; select movie_0.title from cast as cast_0, classification as classification_0, classification as classification_1, genre as genre_0, movie as movie_0, tv_series as tv_series_0 where cast_0.role = "Sci-Fi" and tv_series_0.release_year = 2010 and cast_0.msid = movie_0.mid and classification_0.gid = genre_0.gid and classification_0.msid = movie_0.mid and classification_1.gid = genre_0.gid and classification_1.msid = tv_series_0.sid
TOT: 0.9033774146099001; TR: 1.0; QF: 0.058922558922558925; select movie_0.title from cast as cast_0, company as company_0, copyright as copyright_0, copyright as copyright_1, movie as movie_0, tv_series as tv_series_0 where cast_0.role = "Sci-Fi" and tv_series_0.release_year = 2010 and cast_0.msid = movie_0.mid and company_0.id = copyright_0.cid and company_0.id = copyright_1.cid and copyright_0.msid = movie_0.mid and copyright_1.msid = tv_series_0.sid
TOT: 0.9031016570341425; TR: 1.0; QF: 0.04666666666666666; select movie_0.title from cast as cast_0, directed_by as directed_by_0, directed_by as directed_by_1, director as director_0, movie as movie_0, tv_series as tv_series_0 where cast_0.role = "Sci-Fi" and movie_0.release_year = 2010 and cast_0.msid = tv_series_0.sid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and directed_by_1.did = director_0.did and directed_by_1.msid = tv_series_0.sid
TOT: 0.9031016570341425; TR: 1.0; QF: 0.04666666666666666; select movie_0.title from cast as cast_0, directed_by as directed_by_0, directed_by as directed_by_1, director as director_0, movie as movie_0, tv_series as tv_series_0 where cast_0.role = "Sci-Fi" and tv_series_0.release_year = 2010 and cast_0.msid = tv_series_0.sid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and directed_by_1.did = director_0.did and directed_by_1.msid = tv_series_0.sid
TOT: 0.9029683237008092; TR: 1.0; QF: 0.040740740740740744; select movie_0.title from cast as cast_0, company as company_0, copyright as copyright_0, copyright as copyright_1, movie as movie_0, tv_series as tv_series_0 where cast_0.role = "Sci-Fi" and movie_0.release_year = 2010 and cast_0.msid = tv_series_0.sid and company_0.id = copyright_0.cid and company_0.id = copyright_1.cid and copyright_0.msid = movie_0.mid and copyright_1.msid = tv_series_0.sid


01:19  INFO: ================
01:19  INFO: QUERY 29: Who was the actor that played "Vinny Gambini" in the movie "My Cousin Vinny"?
01:19  INFO: ================
01:22  INFO: ================
01:22  INFO: QUERY 17: Which actors were born in Tehran
01:22  INFO: ================
01:23  INFO: ===== FOLD 1 =====
01:23  INFO: ===== Parsing Results =====
01:23  INFO: Total Queries: 9
01:23  INFO: Correctly Parsed: 9/9

01:23  INFO: ================
01:23  INFO: QUERY 35: Find all movies about Persians
01:23  INFO: ================
333. ROOT: ROOT; NA; ; (0) 
334. Find: CMT; NA; ; (0) 
335. movies: NT; NA; all; (0) movie.title(1.0):| movie(1.0):| cast.role(0.95):Movie; Movie F; Movie AD; | company.name(0.95):Movies; Movie; Movie Movie; | tv_series.title(0.84):Movies, Movies, Movi; Movie Mob; Moon Movies; | keyword.keyword(0.83):movie-in-movie; movies-about-movies; b-movie; | actor.name(0.76):| 
337. Persians: VTTEXT; NA; ; (0) cast.role(1.0):Persian; Persian; Persian; | keyword.keyword(1.0):persian; persian-cat; persian-rug; | movie.title(0.82):Persian Version; Persian Eyes; The Persian; | director.name(0.74):Luke Persian; Persian Pink Panther; The Persian Ed Wood; | actor.name(0.74):Persian Lamb; Little Persian; Persian Princess Dia; | producer.name(0.74):Luke Persian; Persian Pink Panther; Persian Maglinte; | writer.name(0.74):Luke Persian; Persian Pink Panther; The Persian Ed Wood; | 
Find, VB
all, DT
movies, NNS
about, IN
Persians, NNP
root(ROOT-0, Find-1)
det(movies-3, all-2)
dobj(Find-1, movies-3)
case(Persians-5, about-4)
nmod(Find-1, Persians-5)

PARSE TREE:(333) ROOT ROOT
    (334) Find CMT
        (335) movies NT
        (337) Persians VTTEXT


===========
TRANSLATIONS
===========
TOT: 1.0; NL: 1.0; NL+AG: 1.0; NL+QF: 1.0; rels: []; projs: [movie_0.title]; preds: [cast_0.role = "Persian"]; havings: []; superlative: []; blanks: 0
TOT: 1.0; NL: 1.0; NL+AG: 1.0; NL+QF: 1.0; rels: []; projs: [movie_0.title]; preds: [keyword_0.keyword = "persian"]; havings: []; superlative: []; blanks: 0
TOT: 0.9323489008616883; NL: 0.8593887047640296; NL+AG: 0.9889432485322897; NL+QF: 0.9323489008616883; rels: []; projs: [movie_0.title]; preds: [actor_0.name = "Persian Lamb"]; havings: []; superlative: []; blanks: 0
TOT: 0.9182207618680803; NL: 0.8593887047640296; NL+AG: 0.9889432485322897; NL+QF: 0.9182207618680803; rels: []; projs: [movie_0.title]; preds: [director_0.name = "Luke Persian"]; havings: []; superlative: []; blanks: 0
TOT: 0.9064126192070304; NL: 0.9064126192070304; NL+AG: 0.990136484098398; NL+QF: 0.9064126192070304; rels: []; projs: [movie_0.title]; preds: [movie_0.title = "Persian Version"]; havings: []; superlative: []; blanks: 0
TOT: 0.8730692985095742; NL: 0.8730692985095742; NL+AG: 0.9889432485322897; NL+QF: 0.8730692985095742; rels: []; projs: [actor_0.name]; preds: [cast_0.role = "Persian"]; havings: []; superlative: []; blanks: 0
TOT: 0.8730692985095742; NL: 0.8730692985095742; NL+AG: 0.9889432485322897; NL+QF: 0.8730692985095742; rels: []; projs: [actor_0.name]; preds: [keyword_0.keyword = "persian"]; havings: []; superlative: []; blanks: 0
TOT: 0.8610508301724105; NL: 0.7913610296113078; NL+AG: 0.9790797326306877; NL+QF: 0.8610508301724105; rels: []; projs: [actor_0.name]; preds: [movie_0.title = "Persian Version"]; havings: []; superlative: []; blanks: 0
TOT: 0.8593887047640296; NL: 0.8593887047640296; NL+AG: 0.9889432485322897; NL+QF: 0.8593887047640296; rels: []; projs: [movie_0.title]; preds: [producer_0.name = "Luke Persian"]; havings: []; superlative: []; blanks: 0
TOT: 0.8593887047640296; NL: 0.8593887047640296; NL+AG: 0.9889432485322897; NL+QF: 0.8593887047640296; rels: []; projs: [movie_0.title]; preds: [writer_0.name = "Luke Persian"]; havings: []; superlative: []; blanks: 0
TOT: 0.8335622104176953; NL: 0.7503058936153829; NL+AG: 0.9778864970645793; NL+QF: 0.8335622104176953; rels: []; projs: [actor_0.name]; preds: [actor_0.name = "Persian Lamb"]; havings: []; superlative: []; blanks: 0

===========
RESULTS
===========
TOT: 0.948337932783103; TR: 1.0; QF: 0.36363636363636365; select movie_0.title from cast as cast_0, movie as movie_0 where cast_0.role = "Persian" and cast_0.msid = movie_0.mid
TOT: 0.9236121593216773; TR: 1.0; QF: 0.0; select movie_0.title from keyword as keyword_0, movie as movie_0, tags as tags_0 where keyword_0.keyword = "persian" and keyword_0.id = tags_0.kid and movie_0.mid = tags_0.msid
TOT: 0.903347111579597; TR: 1.0; QF: 0.05757575757575758; select movie_0.title from cast as cast_0, directed_by as directed_by_0, directed_by as directed_by_1, director as director_0, movie as movie_0, tv_series as tv_series_0 where cast_0.role = "Persian" and cast_0.msid = tv_series_0.sid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and directed_by_1.did = director_0.did and directed_by_1.msid = tv_series_0.sid
TOT: 0.9020516570341425; TR: 1.0; QF: 0.0; select movie_0.title from cast as cast_0, keyword as keyword_0, movie as movie_0, tags as tags_0, tags as tags_1, tv_series as tv_series_0 where cast_0.role = "Persian" and cast_0.msid = tv_series_0.sid and keyword_0.id = tags_0.kid and keyword_0.id = tags_1.kid and movie_0.mid = tags_0.msid and tags_1.msid = tv_series_0.sid
TOT: 0.9020516570341425; TR: 1.0; QF: 0.0; select movie_0.title from cast as cast_0, company as company_0, copyright as copyright_0, copyright as copyright_1, movie as movie_0, tv_series as tv_series_0 where cast_0.role = "Persian" and cast_0.msid = tv_series_0.sid and company_0.id = copyright_0.cid and company_0.id = copyright_1.cid and copyright_0.msid = movie_0.mid and copyright_1.msid = tv_series_0.sid
TOT: 0.9020516570341425; TR: 1.0; QF: 0.0; select movie_0.title from cast as cast_0, made_by as made_by_0, made_by as made_by_1, movie as movie_0, producer as producer_0, tv_series as tv_series_0 where cast_0.role = "Persian" and cast_0.msid = tv_series_0.sid and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid and made_by_1.msid = tv_series_0.sid and made_by_1.pid = producer_0.pid
TOT: 0.9020516570341425; TR: 1.0; QF: 0.0; select movie_0.title from cast as cast_0, movie as movie_0, tv_series as tv_series_0, writer as writer_0, written_by as written_by_0, written_by as written_by_1 where cast_0.role = "Persian" and cast_0.msid = tv_series_0.sid and movie_0.mid = written_by_0.msid and tv_series_0.sid = written_by_1.msid and writer_0.wid = written_by_0.wid and writer_0.wid = written_by_1.wid
TOT: 0.9020516570341425; TR: 1.0; QF: 0.0; select movie_0.title from cast as cast_0, classification as classification_0, classification as classification_1, genre as genre_0, movie as movie_0, tv_series as tv_series_0 where cast_0.role = "Persian" and cast_0.msid = tv_series_0.sid and classification_0.gid = genre_0.gid and classification_0.msid = movie_0.mid and classification_1.gid = genre_0.gid and classification_1.msid = tv_series_0.sid
TOT: 0.8991157949840011; TR: 1.0; QF: 0.04112554112554113; select movie_0.title from directed_by as directed_by_0, directed_by as directed_by_1, director as director_0, keyword as keyword_0, movie as movie_0, tags as tags_0, tv_series as tv_series_0 where keyword_0.keyword = "persian" and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and directed_by_1.did = director_0.did and directed_by_1.msid = tv_series_0.sid and keyword_0.id = tags_0.kid and tags_0.msid = tv_series_0.sid
TOT: 0.8991157949840011; TR: 1.0; QF: 0.04112554112554113; select movie_0.title from actor as actor_0, cast as cast_0, cast as cast_1, keyword as keyword_0, movie as movie_0, tags as tags_0, tv_series as tv_series_0 where keyword_0.keyword = "persian" and actor_0.aid = cast_0.aid and actor_0.aid = cast_1.aid and cast_0.msid = movie_0.mid and cast_1.msid = tv_series_0.sid and keyword_0.id = tags_0.kid and tags_0.msid = tv_series_0.sid


01:24  INFO: ================
01:24  INFO: QUERY 33: Find all movies that were produced by Netflix
01:24  INFO: ================
340. ROOT: ROOT; NA; ; (0) 
341. Find: CMT; NA; ; (0) 
342. movies: NT; NA; all; (0) movie.title(1.0):| movie(1.0):| cast.role(0.95):Movie; Movie F; Movie AD; | company.name(0.95):Movies; Movie; Movie Movie; | tv_series.title(0.84):Movies, Movies, Movi; Movie Mob; Moon Movies; | keyword.keyword(0.83):movie-in-movie; movies-about-movies; b-movie; | actor.name(0.76):| 
344. produced: NT; NA; ; (0) made_by(0.74):| directed_by(0.69):| producer.name(0.68):| producer(0.68):| cast.role(0.63):| cast(0.63):| written_by(0.63):| 
347. Netflix: VTTEXT; NA; ; (0) company.name(1.0):Netflix; Netflix; Netflix; | keyword.keyword(1.0):netflix; netflix-series; netflix-production; | tv_series.title(0.78):| tv_series(0.78):| cast.role(0.77):Netflix guy; | movie.title(0.74):| movie(0.74):| 
Find, VB
all, DT
movies, NNS
that, WDT
were, VBD
produced, VBN
by, IN
Netflix, NNP
root(ROOT-0, Find-1)
det(movies-3, all-2)
dobj(Find-1, movies-3)
nsubjpass(produced-6, that-4)
auxpass(produced-6, were-5)
acl:relcl(movies-3, produced-6)
case(Netflix-8, by-7)
nmod(produced-6, Netflix-8)

PARSE TREE:(340) ROOT ROOT
    (341) Find CMT
        (342) movies NT
            (344) produced NT
                (347) Netflix VTTEXT


===========
TRANSLATIONS
===========
TOT: 0.9139734408696303; NL: 0.8002271178074418; NL+AG: 0.9186092792989894; NL+QF: 0.9139734408696303; rels: [movie,directed_by]; projs: [movie_0.title]; preds: []; havings: []; superlative: []; blanks: 0
TOT: 0.9064353564580043; NL: 0.8852322584043497; NL+AG: 0.9628121638266046; NL+QF: 0.9064353564580043; rels: [directed_by]; projs: [movie_0.title]; preds: [company_0.name = "Netflix"]; havings: []; superlative: []; blanks: 0
TOT: 0.9064353564580043; NL: 0.8852322584043497; NL+AG: 0.9628121638266046; NL+QF: 0.9064353564580043; rels: [directed_by]; projs: [movie_0.title]; preds: [keyword_0.keyword = "netflix"]; havings: []; superlative: []; blanks: 0
TOT: 0.9055419360254962; NL: 0.9055419360254962; NL+AG: 0.9628121638266046; NL+QF: 0.9055419360254962; rels: [made_by]; projs: [movie_0.title]; preds: [company_0.name = "Netflix"]; havings: []; superlative: []; blanks: 0
TOT: 0.9055419360254962; NL: 0.9055419360254962; NL+AG: 0.9628121638266046; NL+QF: 0.9055419360254962; rels: [made_by]; projs: [movie_0.title]; preds: [keyword_0.keyword = "netflix"]; havings: []; superlative: []; blanks: 0
TOT: 0.8783733725393061; NL: 0.8783733725393061; NL+AG: 0.9628121638266046; NL+QF: 0.8783733725393061; rels: [producer]; projs: [movie_0.title]; preds: [company_0.name = "Netflix"]; havings: []; superlative: []; blanks: 0
TOT: 0.8783733725393061; NL: 0.8783733725393061; NL+AG: 0.9628121638266046; NL+QF: 0.8783733725393061; rels: [producer]; projs: [movie_0.title]; preds: [keyword_0.keyword = "netflix"]; havings: []; superlative: []; blanks: 0
TOT: 0.8662391053409028; NL: 0.8662391053409028; NL+AG: 0.9628121638266046; NL+QF: 0.8662391053409028; rels: []; projs: [movie_0.title]; preds: [company_0.name = "Netflix"]; havings: []; superlative: []; blanks: 1
TOT: 0.8662391053409028; NL: 0.8662391053409028; NL+AG: 0.9628121638266046; NL+QF: 0.8662391053409028; rels: []; projs: [movie_0.title]; preds: [keyword_0.keyword = "netflix"]; havings: []; superlative: []; blanks: 1
TOT: 0.8585468728475771; NL: 0.8129848262632889; NL+AG: 0.9391833540180654; NL+QF: 0.8585468728475771; rels: [directed_by]; projs: [movie_0.title]; preds: [cast_0.role = "Netflix guy"]; havings: []; superlative: []; blanks: 0
TOT: 0.8577006532986561; NL: 0.8316369478681359; NL+AG: 0.9391833540180654; NL+QF: 0.8577006532986561; rels: [made_by]; projs: [movie_0.title]; preds: [cast_0.role = "Netflix guy"]; havings: []; superlative: []; blanks: 0

===========
RESULTS
===========
TOT: 0.8195858479733048; TR: 0.9064353564580043; QF: 0.04112554112554113; select movie_0.title from directed_by as directed_by_0, directed_by as directed_by_1, director as director_0, keyword as keyword_0, movie as movie_0, tags as tags_0, tv_series as tv_series_0 where keyword_0.keyword = "netflix" and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and directed_by_1.did = director_0.did and directed_by_1.msid = tv_series_0.sid and keyword_0.id = tags_0.kid and tags_0.msid = tv_series_0.sid
TOT: 0.8191962375836944; TR: 0.9064353564580043; QF: 0.023809523809523808; select movie_0.title from company as company_0, copyright as copyright_0, directed_by as directed_by_0, directed_by as directed_by_1, director as director_0, movie as movie_0, tv_series as tv_series_0 where company_0.name = "Netflix" and company_0.id = copyright_0.cid and copyright_0.msid = tv_series_0.sid and directed_by_0.did = director_0.did and directed_by_0.msid = tv_series_0.sid and directed_by_1.did = director_0.did and directed_by_1.msid = movie_0.mid
TOT: 0.8179011159303482; TR: 0.9055419360254962; QF: 0.0; select movie_0.title from keyword as keyword_0, made_by as made_by_0, made_by as made_by_1, movie as movie_0, producer as producer_0, tags as tags_0, tv_series as tv_series_0 where keyword_0.keyword = "netflix" and keyword_0.id = tags_0.kid and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid and made_by_1.msid = tv_series_0.sid and made_by_1.pid = producer_0.pid and tags_0.msid = tv_series_0.sid
TOT: 0.8179011159303482; TR: 0.9055419360254962; QF: 0.0; select movie_0.title from company as company_0, copyright as copyright_0, made_by as made_by_0, made_by as made_by_1, movie as movie_0, producer as producer_0, tv_series as tv_series_0 where company_0.name = "Netflix" and company_0.id = copyright_0.cid and copyright_0.msid = tv_series_0.sid and made_by_0.msid = tv_series_0.sid and made_by_0.pid = producer_0.pid and made_by_1.msid = movie_0.mid and made_by_1.pid = producer_0.pid
TOT: 0.8099153988614446; TR: 0.8662391053409028; QF: 0.0; select movie_0.title from keyword as keyword_0, movie as movie_0, tags as tags_0 where keyword_0.keyword = "netflix" and keyword_0.id = tags_0.kid and movie_0.mid = tags_0.msid
TOT: 0.8099153988614446; TR: 0.8662391053409028; QF: 0.0; select movie_0.title from company as company_0, copyright as copyright_0, movie as movie_0 where company_0.name = "Netflix" and company_0.id = copyright_0.cid and copyright_0.msid = movie_0.mid
TOT: 0.7854190345237684; TR: 0.8662391053409028; QF: 0.04112554112554113; select movie_0.title from actor as actor_0, cast as cast_0, cast as cast_1, keyword as keyword_0, movie as movie_0, tags as tags_0, tv_series as tv_series_0 where keyword_0.keyword = "netflix" and actor_0.aid = cast_0.aid and actor_0.aid = cast_1.aid and cast_0.msid = movie_0.mid and cast_1.msid = tv_series_0.sid and keyword_0.id = tags_0.kid and tags_0.msid = tv_series_0.sid
TOT: 0.7851633527055866; TR: 0.8662391053409028; QF: 0.029761904761904764; select movie_0.title from actor as actor_0, cast as cast_0, cast as cast_1, company as company_0, copyright as copyright_0, movie as movie_0, tv_series as tv_series_0 where company_0.name = "Netflix" and actor_0.aid = cast_0.aid and actor_0.aid = cast_1.aid and cast_0.msid = tv_series_0.sid and cast_1.msid = movie_0.mid and company_0.id = copyright_0.cid and copyright_0.msid = tv_series_0.sid
TOT: 0.7844937098484438; TR: 0.8662391053409028; QF: 0.0; select movie_0.title from company as company_0, copyright as copyright_0, movie as movie_0, tv_series as tv_series_0, writer as writer_0, written_by as written_by_0, written_by as written_by_1 where company_0.name = "Netflix" and company_0.id = copyright_0.cid and copyright_0.msid = tv_series_0.sid and movie_0.mid = written_by_1.msid and tv_series_0.sid = written_by_0.msid and writer_0.wid = written_by_0.wid and writer_0.wid = written_by_1.wid
TOT: 0.7844937098484438; TR: 0.8662391053409028; QF: 0.0; select movie_0.title from company as company_0, copyright as copyright_0, keyword as keyword_0, movie as movie_0, tags as tags_0, tags as tags_1, tv_series as tv_series_0 where company_0.name = "Netflix" and company_0.id = copyright_0.cid and copyright_0.msid = tv_series_0.sid and keyword_0.id = tags_0.kid and keyword_0.id = tags_1.kid and movie_0.mid = tags_1.msid and tags_0.msid = tv_series_0.sid


01:25  INFO: ================
01:25  INFO: QUERY 45: Who directed the movie "Inglourious Basterds"?
01:25  INFO: ================
01:27  INFO: ================
01:27  INFO: QUERY 98: How many movies about Iraq war were produced in 2015?
01:27  INFO: ================
357. ROOT: ROOT; NA; ; (0) 
358. produced: NT; NA; ; (0) made_by(0.74):| directed_by(0.69):| producer.name(0.68):| producer(0.68):| cast.role(0.63):| cast(0.63):| written_by(0.63):| 
360. How many: CMT; count; ; (0) 
361. movies: NT; NA; ; (0) movie.title(1.0):| movie(1.0):| cast.role(0.95):Movie; Movie F; Movie AD; | company.name(0.95):Movies; Movie; Movie Movie; | tv_series.title(0.84):Movies, Movies, Movi; Movie Mob; Moon Movies; | keyword.keyword(0.83):movie-in-movie; movies-about-movies; b-movie; | actor.name(0.76):| 
362. war: VTTEXT; NA; ; (0) movie.title(0.95):Wars; Wars; Hardware Wars; | tv_series.title(0.95):War; Car Wars; War Walks; | actor.name(0.95):War; War; War; | genre.genre(0.95):War; War; Documentary; | producer.name(0.95):War; Johnny Star Wars; Vivian War; | company.name(0.95):War; War on Want; NWA War Zone; | writer.name(0.95):War; Johnny Star Wars; Men Of War; | 
364. Iraq: VTTEXT; NA; ; (0) movie.title(1.0):Iraq; Iraq; Ski Iraq; | director.nationality(1.0):Iraq; Iraq; Iraq; | actor.nationality(1.0):Iraq; Iraq; Iraq; | producer.nationality(1.0):Iraq; Iraq; Iraq; | writer.nationality(1.0):Iraq; Iraq; Iraq; | cast.role(0.8):Ira - Iraq; Iraq Vet; Iraq Veteran; | keyword.keyword(0.72):iraq-iran-war; basra-iraq; hatra-iraq; | 
366. 2015: VTNUM; NA; ; (0) movie.release_year(1.0):2015; 2015; 2015; | tv_series.release_year(1.0):2015; 2015; 2015; | 
How, WRB
many, JJ
movies, NNS
about, IN
Iraq, NNP
war, NN
were, VBD
produced, VBN
in, IN
2015, CD
advmod(many-2, How-1)
dep(produced-8, many-2)
nsubjpass(produced-8, movies-3)
case(war-6, about-4)
compound(war-6, Iraq-5)
nmod(movies-3, war-6)
auxpass(produced-8, were-7)
root(ROOT-0, produced-8)
case(2015-10, in-9)
nmod(produced-8, 2015-10)

PARSE TREE:(357) ROOT ROOT
    (360) How many CMT
        (361) movies NT
            (362) war VTTEXT
                (364) Iraq VTTEXT
            (358) produced NT
                (366) 2015 VTNUM


===========
TRANSLATIONS
===========
TOT: 0.9080868618771001; NL: 0.9080868618771001; NL+AG: 0.9668624566648176; NL+QF: 0.9080868618771001; rels: []; projs: [count(distinct(movie_0.title))]; preds: [genre_0.genre = "War",movie_0.title = "Iraq",movie_0.release_year = 2015]; havings: []; superlative: []; blanks: 1
TOT: 0.9080868618771001; NL: 0.9080868618771001; NL+AG: 0.9668624566648176; NL+QF: 0.9080868618771001; rels: []; projs: [count(distinct(movie_0.title))]; preds: [genre_0.genre = "War",movie_0.title = "Iraq",tv_series_0.release_year = 2015]; havings: []; superlative: []; blanks: 1
TOT: 0.9080868618771001; NL: 0.9080868618771001; NL+AG: 0.9668624566648176; NL+QF: 0.9080868618771001; rels: []; projs: [count(distinct(movie_0.title))]; preds: [genre_0.genre = "War",director_0.nationality = "Iraq",movie_0.release_year = 2015]; havings: []; superlative: []; blanks: 1
TOT: 0.9080868618771001; NL: 0.9080868618771001; NL+AG: 0.9668624566648176; NL+QF: 0.9080868618771001; rels: []; projs: [count(distinct(movie_0.title))]; preds: [genre_0.genre = "War",director_0.nationality = "Iraq",tv_series_0.release_year = 2015]; havings: []; superlative: []; blanks: 1
TOT: 0.9080868618771001; NL: 0.9080868618771001; NL+AG: 0.9668624566648176; NL+QF: 0.9080868618771001; rels: []; projs: [count(distinct(movie_0.title))]; preds: [genre_0.genre = "War",actor_0.nationality = "Iraq",movie_0.release_year = 2015]; havings: []; superlative: []; blanks: 1
TOT: 0.9080868618771001; NL: 0.9080868618771001; NL+AG: 0.9668624566648176; NL+QF: 0.9080868618771001; rels: []; projs: [count(distinct(movie_0.title))]; preds: [genre_0.genre = "War",actor_0.nationality = "Iraq",tv_series_0.release_year = 2015]; havings: []; superlative: []; blanks: 1
TOT: 0.9080868618771001; NL: 0.9080868618771001; NL+AG: 0.9668624566648176; NL+QF: 0.9080868618771001; rels: []; projs: [count(distinct(movie_0.title))]; preds: [genre_0.genre = "War",producer_0.nationality = "Iraq",movie_0.release_year = 2015]; havings: []; superlative: []; blanks: 1
TOT: 0.9080868618771001; NL: 0.9080868618771001; NL+AG: 0.9668624566648176; NL+QF: 0.9080868618771001; rels: []; projs: [count(distinct(movie_0.title))]; preds: [genre_0.genre = "War",producer_0.nationality = "Iraq",tv_series_0.release_year = 2015]; havings: []; superlative: []; blanks: 1
TOT: 0.9080868618771001; NL: 0.9080868618771001; NL+AG: 0.9668624566648176; NL+QF: 0.9080868618771001; rels: []; projs: [count(distinct(movie_0.title))]; preds: [genre_0.genre = "War",writer_0.nationality = "Iraq",movie_0.release_year = 2015]; havings: []; superlative: []; blanks: 1
TOT: 0.9080868618771001; NL: 0.9080868618771001; NL+AG: 0.9668624566648176; NL+QF: 0.9080868618771001; rels: []; projs: [count(distinct(movie_0.title))]; preds: [genre_0.genre = "War",writer_0.nationality = "Iraq",tv_series_0.release_year = 2015]; havings: []; superlative: []; blanks: 1
TOT: 0.8957571279501789; NL: 0.8957571279501789; NL+AG: 0.9556911764705882; NL+QF: 0.8957571279501789; rels: []; projs: [count(distinct(movie_0.title))]; preds: [genre_0.genre = "War",movie_0.title = "Iraq"]; havings: [count(distinct(producer_0.name)) = 2015]; superlative: []; blanks: 0
TOT: 0.8957571279501789; NL: 0.8957571279501789; NL+AG: 0.9556911764705882; NL+QF: 0.8957571279501789; rels: []; projs: [count(distinct(movie_0.title))]; preds: [genre_0.genre = "War",director_0.nationality = "Iraq"]; havings: [count(distinct(producer_0.name)) = 2015]; superlative: []; blanks: 0
TOT: 0.8957571279501789; NL: 0.8957571279501789; NL+AG: 0.9556911764705882; NL+QF: 0.8957571279501789; rels: []; projs: [count(distinct(movie_0.title))]; preds: [genre_0.genre = "War",actor_0.nationality = "Iraq"]; havings: [count(distinct(producer_0.name)) = 2015]; superlative: []; blanks: 0
TOT: 0.8957571279501789; NL: 0.8957571279501789; NL+AG: 0.9556911764705882; NL+QF: 0.8957571279501789; rels: []; projs: [count(distinct(movie_0.title))]; preds: [genre_0.genre = "War",producer_0.nationality = "Iraq"]; havings: [count(distinct(producer_0.name)) = 2015]; superlative: []; blanks: 0
TOT: 0.8957571279501789; NL: 0.8957571279501789; NL+AG: 0.9556911764705882; NL+QF: 0.8957571279501789; rels: []; projs: [count(distinct(movie_0.title))]; preds: [genre_0.genre = "War",writer_0.nationality = "Iraq"]; havings: [count(distinct(producer_0.name)) = 2015]; superlative: []; blanks: 0

===========
RESULTS
===========
TOT: 0.8308367478399615; TR: 0.9080868618771001; QF: 0.08636363636363636; select count(distinct(movie_0.title)) from classification as classification_0, directed_by as directed_by_0, director as director_0, genre as genre_0, movie as movie_0 where director_0.nationality = "Iraq" and genre_0.genre = "War" and movie_0.release_year = 2015 and classification_0.gid = genre_0.gid and classification_0.msid = movie_0.mid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid
TOT: 0.8304617478399615; TR: 0.9080868618771001; QF: 0.0696969696969697; select count(distinct(movie_0.title)) from actor as actor_0, cast as cast_0, classification as classification_0, genre as genre_0, movie as movie_0 where actor_0.nationality = "Iraq" and genre_0.genre = "War" and movie_0.release_year = 2015 and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and classification_0.gid = genre_0.gid and classification_0.msid = movie_0.mid
TOT: 0.8288935660217798; TR: 0.9080868618771001; QF: 0.0; select count(distinct(movie_0.title)) from classification as classification_0, genre as genre_0, made_by as made_by_0, movie as movie_0, producer as producer_0 where genre_0.genre = "War" and movie_0.release_year = 2015 and producer_0.nationality = "Iraq" and classification_0.gid = genre_0.gid and classification_0.msid = movie_0.mid and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid
TOT: 0.8288935660217798; TR: 0.9080868618771001; QF: 0.0; select count(distinct(movie_0.title)) from classification as classification_0, genre as genre_0, movie as movie_0, writer as writer_0, written_by as written_by_0 where genre_0.genre = "War" and movie_0.release_year = 2015 and writer_0.nationality = "Iraq" and classification_0.gid = genre_0.gid and classification_0.msid = movie_0.mid and movie_0.mid = written_by_0.msid and writer_0.wid = written_by_0.wid
TOT: 0.8288935660217798; TR: 0.9080868618771001; QF: 0.0; select count(distinct(movie_0.title)) from classification as classification_0, classification as classification_1, genre as genre_0, movie as movie_0, movie as movie_1 where genre_0.genre = "War" and movie_0.release_year = 2015 and movie_1.title = "Iraq" and classification_0.gid = genre_0.gid and classification_0.msid = movie_0.mid and classification_1.gid = genre_0.gid and classification_1.msid = movie_1.mid
TOT: 0.8209896275795362; TR: 0.9080868618771001; QF: 0.04112554112554113; select count(distinct(movie_1.title)) from actor as actor_0, cast as cast_0, cast as cast_1, classification as classification_0, genre as genre_0, movie as movie_0, movie as movie_1 where genre_0.genre = "War" and movie_0.release_year = 2015 and movie_0.title = "Iraq" and actor_0.aid = cast_0.aid and actor_0.aid = cast_1.aid and cast_0.msid = movie_0.mid and cast_1.msid = movie_1.mid and classification_0.gid = genre_0.gid and classification_0.msid = movie_0.mid
TOT: 0.8209896275795362; TR: 0.9080868618771001; QF: 0.04112554112554113; select count(distinct(movie_0.title)) from actor as actor_0, cast as cast_0, cast as cast_1, classification as classification_0, genre as genre_0, movie as movie_0, movie as movie_1 where genre_0.genre = "War" and movie_0.release_year = 2015 and movie_1.title = "Iraq" and actor_0.aid = cast_0.aid and actor_0.aid = cast_1.aid and cast_0.msid = movie_0.mid and cast_1.msid = movie_1.mid and classification_0.gid = genre_0.gid and classification_0.msid = movie_0.mid
TOT: 0.8209896275795362; TR: 0.9080868618771001; QF: 0.04112554112554113; select count(distinct(movie_0.title)) from classification as classification_0, directed_by as directed_by_0, directed_by as directed_by_1, director as director_0, genre as genre_0, movie as movie_0, movie as movie_1 where genre_0.genre = "War" and movie_0.release_year = 2015 and movie_1.title = "Iraq" and classification_0.gid = genre_0.gid and classification_0.msid = movie_0.mid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and directed_by_1.did = director_0.did and directed_by_1.msid = movie_1.mid
TOT: 0.8209896275795362; TR: 0.9080868618771001; QF: 0.04112554112554113; select count(distinct(movie_1.title)) from classification as classification_0, directed_by as directed_by_0, directed_by as directed_by_1, director as director_0, genre as genre_0, movie as movie_0, movie as movie_1 where genre_0.genre = "War" and movie_0.release_year = 2015 and movie_0.title = "Iraq" and classification_0.gid = genre_0.gid and classification_0.msid = movie_0.mid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and directed_by_1.did = director_0.did and directed_by_1.msid = movie_1.mid
TOT: 0.8209896275795362; TR: 0.9080868618771001; QF: 0.04112554112554113; select count(distinct(movie_0.title)) from classification as classification_0, classification as classification_1, directed_by as directed_by_0, director as director_0, genre as genre_0, movie as movie_0, tv_series as tv_series_0 where director_0.nationality = "Iraq" and genre_0.genre = "War" and tv_series_0.release_year = 2015 and classification_0.gid = genre_0.gid and classification_0.msid = movie_0.mid and classification_1.gid = genre_0.gid and classification_1.msid = tv_series_0.sid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid


01:33  INFO: ================
01:33  INFO: QUERY 0: What year is the movie "Dead Poets Society" from?
01:33  INFO: ================
369. ROOT: ROOT; NA; ; (0) 
371. year: NT; NA; ; (0) movie.release_year(1.0):| director.birth_year(1.0):| tv_series.release_year(1.0):| actor.birth_year(1.0):| producer.birth_year(1.0):| writer.birth_year(1.0):| movie.title(0.95):Year; Years; Years; | 
373. Dead Poets Society: VTTEXT; NA; ; (0) movie.title(1.0):Dead Poets Society; Dead Poets Society; Dead Worst Poets Soc; | keyword.keyword(0.74):poets-society; poets-society; society; | cast.role(0.73):Dead Poet; Dead Poet; Society; | actor.name(0.67):The Society Pets; Ken Brown's Society ; Jack Pepper and His ; | tv_series.title(0.66):Society; Hi Society; Dead Set; | company.name(0.66):Society; Sonnets of Society; Beta Society; | writer.name(0.5):Apo Hiking Society; The Glue Society; Dead Man; | 
375. movie: NT; NA; ; (0) movie.title(1.0):| movie(1.0):| cast.role(0.95):Movie; Movie F; Movie AD; | company.name(0.95):Movie; Movies; Movie Movie; | keyword.keyword(0.83):movie-in-movie; b-movie; z-movie; | actor.name(0.76):| actor(0.76):| 
What, WDT
year, NN
is, VBZ
the, DT
movie, NN
Dead Poets Society, NNP
from, IN
det(year-2, What-1)
nmod:tmod(is-3, year-2)
root(ROOT-0, is-3)
det(Dead Poets Society-6, the-4)
compound(Dead Poets Society-6, movie-5)
nsubj(is-3, Dead Poets Society-6)
dep(is-3, from-7)

PARSE TREE:(369) ROOT ROOT
    (371) year NT
    (373) Dead Poets Society VTTEXT
        (375) movie NT


===========
TRANSLATIONS
===========
TOT: 0.7899343083654664; NL: 0.6190627778618253; NL+AG: 0.9157961041263554; NL+QF: 0.7899343083654664; rels: []; projs: [movie_0.title]; preds: [cast_0.role = "Dead Poet"]; havings: []; superlative: []; blanks: 1
TOT: 0.7407767310521816; NL: 0.6009261666502496; NL+AG: 0.9157961041263554; NL+QF: 0.7407767310521816; rels: []; projs: [movie_0.title]; preds: [actor_0.name = "The Society Pets"]; havings: []; superlative: []; blanks: 1
TOT: 0.7254706944752412; NL: 0.6280491005870817; NL+AG: 0.9394249139348947; NL+QF: 0.7254706944752412; rels: []; projs: [actor_0.name]; preds: [movie_0.title = "Dead Poets Society"]; havings: []; superlative: []; blanks: 1
TOT: 0.7071067811865476; NL: 0.7071067811865476; NL+AG: 0.9539660056657224; NL+QF: 0.7071067811865476; rels: []; projs: [movie_0.release_year]; preds: [movie_0.title = "Dead Poets Society"]; havings: []; superlative: []; blanks: 0
TOT: 0.7071067811865476; NL: 0.7071067811865476; NL+AG: 0.9539660056657224; NL+QF: 0.7071067811865476; rels: []; projs: [director_0.birth_year]; preds: [movie_0.title = "Dead Poets Society"]; havings: []; superlative: []; blanks: 0
TOT: 0.7071067811865476; NL: 0.7071067811865476; NL+AG: 0.9539660056657224; NL+QF: 0.7071067811865476; rels: []; projs: [tv_series_0.release_year]; preds: [movie_0.title = "Dead Poets Society"]; havings: []; superlative: []; blanks: 0
TOT: 0.7071067811865476; NL: 0.7071067811865476; NL+AG: 0.9539660056657224; NL+QF: 0.7071067811865476; rels: []; projs: [actor_0.birth_year]; preds: [movie_0.title = "Dead Poets Society"]; havings: []; superlative: []; blanks: 0
TOT: 0.7071067811865476; NL: 0.7071067811865476; NL+AG: 0.9539660056657224; NL+QF: 0.7071067811865476; rels: []; projs: [producer_0.birth_year]; preds: [movie_0.title = "Dead Poets Society"]; havings: []; superlative: []; blanks: 0
TOT: 0.7071067811865476; NL: 0.7071067811865476; NL+AG: 0.9539660056657224; NL+QF: 0.7071067811865476; rels: []; projs: [writer_0.birth_year]; preds: [movie_0.title = "Dead Poets Society"]; havings: []; superlative: []; blanks: 0
TOT: 0.691336675864914; NL: 0.5657010901573469; NL+AG: 0.9690485143829223; NL+QF: 0.691336675864914; rels: []; projs: [actor_0.name]; preds: [movie_0.title = "Year",movie_0.title = "Dead Poets Society"]; havings: []; superlative: []; blanks: 0
TOT: 0.6875344335370706; NL: 0.6875344335370706; NL+AG: 0.9394249139348947; NL+QF: 0.6875344335370706; rels: []; projs: [movie_0.title]; preds: [movie_0.title = "Dead Poets Society"]; havings: []; superlative: []; blanks: 1
TOT: 0.6875344335370706; NL: 0.6875344335370706; NL+AG: 0.9274281128144932; NL+QF: 0.6875344335370706; rels: [movie]; projs: [movie_0.release_year]; preds: []; havings: []; superlative: []; blanks: 1
TOT: 0.6875344335370706; NL: 0.6875344335370706; NL+AG: 0.9272593056085746; NL+QF: 0.6875344335370706; rels: []; projs: [movie_0.release_year]; preds: [movie_0.title = "Dead Poets Society"]; havings: []; superlative: []; blanks: 1
TOT: 0.6875344335370706; NL: 0.6875344335370706; NL+AG: 0.9274281128144932; NL+QF: 0.6875344335370706; rels: [movie]; projs: [director_0.birth_year]; preds: []; havings: []; superlative: []; blanks: 1
TOT: 0.6875344335370706; NL: 0.6875344335370706; NL+AG: 0.9272593056085746; NL+QF: 0.6875344335370706; rels: []; projs: [director_0.birth_year]; preds: [movie_0.title = "Dead Poets Society"]; havings: []; superlative: []; blanks: 1
TOT: 0.6875344335370706; NL: 0.6875344335370706; NL+AG: 0.9274281128144932; NL+QF: 0.6875344335370706; rels: [movie]; projs: [tv_series_0.release_year]; preds: []; havings: []; superlative: []; blanks: 1
TOT: 0.6875344335370706; NL: 0.6875344335370706; NL+AG: 0.9272593056085746; NL+QF: 0.6875344335370706; rels: []; projs: [tv_series_0.release_year]; preds: [movie_0.title = "Dead Poets Society"]; havings: []; superlative: []; blanks: 1
TOT: 0.6875344335370706; NL: 0.6875344335370706; NL+AG: 0.9274281128144932; NL+QF: 0.6875344335370706; rels: [movie]; projs: [actor_0.birth_year]; preds: []; havings: []; superlative: []; blanks: 1
TOT: 0.6875344335370706; NL: 0.6875344335370706; NL+AG: 0.9272593056085746; NL+QF: 0.6875344335370706; rels: []; projs: [actor_0.birth_year]; preds: [movie_0.title = "Dead Poets Society"]; havings: []; superlative: []; blanks: 1
TOT: 0.6875344335370706; NL: 0.6875344335370706; NL+AG: 0.9274281128144932; NL+QF: 0.6875344335370706; rels: [movie]; projs: [producer_0.birth_year]; preds: []; havings: []; superlative: []; blanks: 1
TOT: 0.6875344335370706; NL: 0.6875344335370706; NL+AG: 0.9272593056085746; NL+QF: 0.6875344335370706; rels: []; projs: [producer_0.birth_year]; preds: [movie_0.title = "Dead Poets Society"]; havings: []; superlative: []; blanks: 1
TOT: 0.6875344335370706; NL: 0.6875344335370706; NL+AG: 0.9274281128144932; NL+QF: 0.6875344335370706; rels: [movie]; projs: [writer_0.birth_year]; preds: []; havings: []; superlative: []; blanks: 1
TOT: 0.6875344335370706; NL: 0.6875344335370706; NL+AG: 0.9272593056085746; NL+QF: 0.6875344335370706; rels: []; projs: [writer_0.birth_year]; preds: [movie_0.title = "Dead Poets Society"]; havings: []; superlative: []; blanks: 1

===========
RESULTS
===========
TOT: 0.7697820948937494; TR: 0.7899343083654664; QF: 0.36363636363636365; select movie_0.title from cast as cast_0, movie as movie_0 where cast_0.role = "Dead Poet" and cast_0.msid = movie_0.mid
TOT: 0.7510407640085655; TR: 0.7071067811865476; QF: 1.0; select movie_0.release_year from movie as movie_0 where movie_0.title = "Dead Poets Society"
TOT: 0.73440426850651; TR: 0.6875344335370706; QF: 1.0; select movie_0.release_year from movie as movie_0
TOT: 0.7247912736902434; TR: 0.7899343083654664; QF: 0.05757575757575758; select movie_0.title from cast as cast_0, directed_by as directed_by_0, directed_by as directed_by_1, director as director_0, movie as movie_0, tv_series as tv_series_0 where cast_0.role = "Dead Poet" and cast_0.msid = tv_series_0.sid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and directed_by_1.did = director_0.did and directed_by_1.msid = tv_series_0.sid
TOT: 0.7234958191447889; TR: 0.7899343083654664; QF: 0.0; select movie_0.title from cast as cast_0, keyword as keyword_0, movie as movie_0, tags as tags_0, tags as tags_1, tv_series as tv_series_0 where cast_0.role = "Dead Poet" and cast_0.msid = tv_series_0.sid and keyword_0.id = tags_0.kid and keyword_0.id = tags_1.kid and movie_0.mid = tags_0.msid and tags_1.msid = tv_series_0.sid
TOT: 0.7234958191447889; TR: 0.7899343083654664; QF: 0.0; select movie_0.title from cast as cast_0, company as company_0, copyright as copyright_0, copyright as copyright_1, movie as movie_0, tv_series as tv_series_0 where cast_0.role = "Dead Poet" and cast_0.msid = tv_series_0.sid and company_0.id = copyright_0.cid and company_0.id = copyright_1.cid and copyright_0.msid = movie_0.mid and copyright_1.msid = tv_series_0.sid
TOT: 0.7234958191447889; TR: 0.7899343083654664; QF: 0.0; select movie_0.title from cast as cast_0, made_by as made_by_0, made_by as made_by_1, movie as movie_0, producer as producer_0, tv_series as tv_series_0 where cast_0.role = "Dead Poet" and cast_0.msid = tv_series_0.sid and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid and made_by_1.msid = tv_series_0.sid and made_by_1.pid = producer_0.pid
TOT: 0.7234958191447889; TR: 0.7899343083654664; QF: 0.0; select movie_0.title from cast as cast_0, movie as movie_0, tv_series as tv_series_0, writer as writer_0, written_by as written_by_0, written_by as written_by_1 where cast_0.role = "Dead Poet" and cast_0.msid = tv_series_0.sid and movie_0.mid = written_by_0.msid and tv_series_0.sid = written_by_1.msid and writer_0.wid = written_by_0.wid and writer_0.wid = written_by_1.wid
TOT: 0.7234958191447889; TR: 0.7899343083654664; QF: 0.0; select movie_0.title from cast as cast_0, classification as classification_0, classification as classification_1, genre as genre_0, movie as movie_0, tv_series as tv_series_0 where cast_0.role = "Dead Poet" and cast_0.msid = tv_series_0.sid and classification_0.gid = genre_0.gid and classification_0.msid = movie_0.mid and classification_1.gid = genre_0.gid and classification_1.msid = tv_series_0.sid
TOT: 0.7084996534433043; TR: 0.7407767310521816; QF: 0.23232323232323235; select movie_0.title from actor as actor_0, cast as cast_0, movie as movie_0 where actor_0.name = "The Society Pets" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid


01:36  INFO: ================
01:36  INFO: QUERY 24: Find all movies written by "Matt Damon"
01:36  INFO: ================
01:37  INFO: ================
01:37  INFO: QUERY 58: Find all movies in which "Robin Wright" appears
01:37  INFO: ================
386. ROOT: ROOT; NA; ; (0) 
387. Find: CMT; NA; ; (0) 
388. movies: NT; NA; all; (0) movie.title(1.0):| movie(1.0):| cast.role(0.95):Movie; Movie F; Movie AD; | company.name(0.95):Movies; Movie; Movie Movie; | tv_series.title(0.84):Movies, Movies, Movi; Movie Mob; Moon Movies; | keyword.keyword(0.83):movie-in-movie; movies-about-movies; b-movie; | actor.name(0.76):| 
390. appears: NT; NA; ; (0) made_by(0.67):| written_by(0.63):| cast.role(0.63):| cast(0.63):| movie.release_year(0.62):| tv_series.release_year(0.62):| directed_by(0.61):| 
393. Robin Wright: VTTEXT; NA; ; (0) director.name(1.0):Robin Wright; Robin Wright; Robin Wright-Penn; | actor.name(1.0):Robin Wright; Robin Wright; Robin Wright; | producer.name(1.0):Robin Wright; Robin Wright; Robin Wright-Penn; | writer.name(0.8):Rob Wright; Quinn Wright; Kevin Wright; | cast.role(0.76):Tobi Wright; Tobi Wright; Lorin Wright; | movie.title(0.74):'In Wrong' Wright; Mr. Wright in Wrong; Wrong Wrights; | tv_series.title(0.7):Doobie Wright; Wrights Wrongs; Robin; | 
Find, VB
all, DT
movies, NNS
in, IN
which, WDT
Robin Wright, NNP
appears, VBZ
root(ROOT-0, Find-1)
det(movies-3, all-2)
dobj(Find-1, movies-3)
case(which-5, in-4)
nmod(appears-7, which-5)
nsubj(appears-7, Robin Wright-6)
acl:relcl(movies-3, appears-7)

PARSE TREE:(386) ROOT ROOT
    (387) Find CMT
        (388) movies NT
            (390) appears NT
                (393) Robin Wright VTTEXT


===========
TRANSLATIONS
===========
TOT: 0.8767285557917976; NL: 0.8767285557917976; NL+AG: 0.9628121638266046; NL+QF: 0.8767285557917976; rels: [made_by]; projs: [movie_0.title]; preds: [director_0.name = "Robin Wright"]; havings: []; superlative: []; blanks: 0
TOT: 0.8767285557917976; NL: 0.8767285557917976; NL+AG: 0.9628121638266046; NL+QF: 0.8767285557917976; rels: [made_by]; projs: [movie_0.title]; preds: [actor_0.name = "Robin Wright"]; havings: []; superlative: []; blanks: 0
TOT: 0.8767285557917976; NL: 0.8767285557917976; NL+AG: 0.9628121638266046; NL+QF: 0.8767285557917976; rels: [made_by]; projs: [movie_0.title]; preds: [producer_0.name = "Robin Wright"]; havings: []; superlative: []; blanks: 0
TOT: 0.8662391053409028; NL: 0.8662391053409028; NL+AG: 0.9628121638266046; NL+QF: 0.8662391053409028; rels: []; projs: [movie_0.title]; preds: [director_0.name = "Robin Wright"]; havings: []; superlative: []; blanks: 1
TOT: 0.8662391053409028; NL: 0.8662391053409028; NL+AG: 0.9628121638266046; NL+QF: 0.8662391053409028; rels: []; projs: [movie_0.title]; preds: [actor_0.name = "Robin Wright"]; havings: []; superlative: []; blanks: 1
TOT: 0.8662391053409028; NL: 0.8662391053409028; NL+AG: 0.9628121638266046; NL+QF: 0.8662391053409028; rels: []; projs: [movie_0.title]; preds: [producer_0.name = "Robin Wright"]; havings: []; superlative: []; blanks: 1
TOT: 0.8427762367075957; NL: 0.7914722034498609; NL+AG: 0.9391833540180654; NL+QF: 0.8427762367075957; rels: []; projs: [movie_0.title]; preds: [cast_0.role = "Tobi Wright"]; havings: []; superlative: []; blanks: 1
TOT: 0.8278331736714499; NL: 0.8010562875787812; NL+AG: 0.9391833540180654; NL+QF: 0.8278331736714499; rels: [made_by]; projs: [movie_0.title]; preds: [cast_0.role = "Tobi Wright"]; havings: []; superlative: []; blanks: 0
TOT: 0.8178164193292604; NL: 0.7912922821972069; NL+AG: 0.9394249139348947; NL+QF: 0.8178164193292604; rels: []; projs: [actor_0.name]; preds: [actor_0.name = "Robin Wright"]; havings: []; superlative: []; blanks: 1
TOT: 0.8152471364450296; NL: 0.8152471364450296; NL+AG: 0.9396595043325072; NL+QF: 0.8152471364450296; rels: [made_by]; projs: [movie_0.title]; preds: [writer_0.name = "Rob Wright"]; havings: []; superlative: []; blanks: 0
TOT: 0.8145180446811833; NL: 0.8008741876262127; NL+AG: 0.9394249139348947; NL+QF: 0.8145180446811833; rels: [made_by]; projs: [actor_0.name]; preds: [actor_0.name = "Robin Wright"]; havings: []; superlative: []; blanks: 0

===========
RESULTS
===========
TOT: 0.8188314317447053; TR: 0.8767285557917976; QF: 0.0; select movie_0.title from made_by as made_by_0, movie as movie_0, producer as producer_0 where producer_0.name = "Robin Wright" and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid
TOT: 0.8163926715887173; TR: 0.8662391053409028; QF: 0.2878787878787879; select movie_0.title from directed_by as directed_by_0, director as director_0, movie as movie_0 where director_0.name = "Robin Wright" and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid
TOT: 0.8151426715887173; TR: 0.8662391053409028; QF: 0.23232323232323235; select movie_0.title from actor as actor_0, cast as cast_0, movie as movie_0 where actor_0.name = "Robin Wright" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid
TOT: 0.8146977339845594; TR: 0.8427762367075957; QF: 0.36363636363636365; select movie_0.title from cast as cast_0, movie as movie_0 where cast_0.role = "Tobi Wright" and cast_0.msid = movie_0.mid
TOT: 0.7943350674070291; TR: 0.8767285557917976; QF: 0.04112554112554113; select movie_0.title from directed_by as directed_by_0, directed_by as directed_by_1, director as director_0, made_by as made_by_0, movie as movie_0, producer as producer_0, tv_series as tv_series_0 where producer_0.name = "Robin Wright" and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and directed_by_1.did = director_0.did and directed_by_1.msid = tv_series_0.sid and made_by_0.msid = tv_series_0.sid and made_by_0.pid = producer_0.pid
TOT: 0.7943350674070291; TR: 0.8767285557917976; QF: 0.04112554112554113; select movie_0.title from actor as actor_0, cast as cast_0, cast as cast_1, made_by as made_by_0, movie as movie_0, producer as producer_0, tv_series as tv_series_0 where producer_0.name = "Robin Wright" and actor_0.aid = cast_0.aid and actor_0.aid = cast_1.aid and cast_0.msid = movie_0.mid and cast_1.msid = tv_series_0.sid and made_by_0.msid = tv_series_0.sid and made_by_0.pid = producer_0.pid
TOT: 0.7939454570174187; TR: 0.8767285557917976; QF: 0.023809523809523808; select movie_0.title from directed_by as directed_by_0, director as director_0, made_by as made_by_0, made_by as made_by_1, movie as movie_0, producer as producer_0, tv_series as tv_series_0 where director_0.name = "Robin Wright" and directed_by_0.did = director_0.did and directed_by_0.msid = tv_series_0.sid and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid and made_by_1.msid = tv_series_0.sid and made_by_1.pid = producer_0.pid
TOT: 0.7937668855888473; TR: 0.8767285557917976; QF: 0.015873015873015872; select movie_0.title from actor as actor_0, cast as cast_0, made_by as made_by_0, made_by as made_by_1, movie as movie_0, producer as producer_0, tv_series as tv_series_0 where actor_0.name = "Robin Wright" and actor_0.aid = cast_0.aid and cast_0.msid = tv_series_0.sid and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid and made_by_1.msid = tv_series_0.sid and made_by_1.pid = producer_0.pid
TOT: 0.7934097427317045; TR: 0.8767285557917976; QF: 0.0; select movie_0.title from classification as classification_0, classification as classification_1, genre as genre_0, made_by as made_by_0, movie as movie_0, producer as producer_0, tv_series as tv_series_0 where producer_0.name = "Robin Wright" and classification_0.gid = genre_0.gid and classification_0.msid = movie_0.mid and classification_1.gid = genre_0.gid and classification_1.msid = tv_series_0.sid and made_by_0.msid = tv_series_0.sid and made_by_0.pid = producer_0.pid
TOT: 0.7934097427317045; TR: 0.8767285557917976; QF: 0.0; select movie_0.title from keyword as keyword_0, made_by as made_by_0, movie as movie_0, producer as producer_0, tags as tags_0, tags as tags_1, tv_series as tv_series_0 where producer_0.name = "Robin Wright" and keyword_0.id = tags_0.kid and keyword_0.id = tags_1.kid and made_by_0.msid = tv_series_0.sid and made_by_0.pid = producer_0.pid and movie_0.mid = tags_0.msid and tags_1.msid = tv_series_0.sid


01:39  INFO: ================
01:39  INFO: QUERY 95: How many movies did "Humphrey Bogart" act in before 1942?
01:39  INFO: ================
01:40  INFO: ================
01:40  INFO: QUERY 64: Find all the female actors in the movie "Saving Private Ryan"
01:40  INFO: ================
01:50  INFO: ================
01:50  INFO: QUERY 107: How many female actors were born in "New York City" after 1980?
01:50  INFO: ================
02:07  INFO: ================
02:07  INFO: QUERY 53: Find all tv series produced by Netflix
02:07  INFO: ================
429. ROOT: ROOT; NA; ; (0) 
430. Find: CMT; NA; ; (0) 
431. series: NT; NA; all; (0) tv_series.title(1.0):| tv_series(1.0):| keyword.keyword(0.95):series; series; series-in-series; | company.name(0.87):Series+; Series+; T-Series; | movie.title(0.8):Series 4; Series 4; Chinese Series; | actor.name(0.79):Eric Series; Eric Series; series editor; | tv_series.num_of_episodes(0.68):| 
433. tv: NT; NA; ; (0) tv_series.title(1.0):| tv_series(1.0):| actor.name(0.95):TVS; | company.name(0.95):TVS; TVS; TV Studios (TVS); | movie.title(0.69):| movie(0.69):| tv_series.num_of_episodes(0.67):| 
434. produced: NT; NA; ; (0) made_by(0.74):| directed_by(0.69):| producer.name(0.68):| producer(0.68):| cast.role(0.63):| cast(0.63):| written_by(0.63):| 
435. Netflix: VTTEXT; NA; ; (0) company.name(1.0):Netflix; Netflix; Netflix; | keyword.keyword(1.0):netflix; netflix-series; netflix-production; | tv_series.title(0.78):| tv_series(0.78):| cast.role(0.77):Netflix guy; | movie.title(0.74):| movie(0.74):| 
Find, VB
all, DT
tv, NN
series, NN
produced, VBN
by, IN
Netflix, NNP
root(ROOT-0, Find-1)
det(series-4, all-2)
compound(series-4, tv-3)
dobj(Find-1, series-4)
acl(series-4, produced-5)
case(Netflix-7, by-6)
nmod(produced-5, Netflix-7)

PARSE TREE:(429) ROOT ROOT
    (430) Find CMT
        (431) series NT
            (433) tv NT
            (434) produced NT
                (435) Netflix VTTEXT


===========
TRANSLATIONS
===========
TOT: 0.9282851983280498; NL: 0.9282851983280498; NL+AG: 0.966581842152465; NL+QF: 0.9282851983280498; rels: [made_by]; projs: [tv_series_0.title]; preds: [company_0.name = "Netflix"]; havings: []; superlative: []; blanks: 1
TOT: 0.9282851983280498; NL: 0.9282851983280498; NL+AG: 0.966581842152465; NL+QF: 0.9282851983280498; rels: [made_by]; projs: [tv_series_0.title]; preds: [keyword_0.keyword = "netflix"]; havings: []; superlative: []; blanks: 1
TOT: 0.9126261813556491; NL: 0.9126261813556491; NL+AG: 0.966581842152465; NL+QF: 0.9126261813556491; rels: [directed_by]; projs: [tv_series_0.title]; preds: [company_0.name = "Netflix"]; havings: []; superlative: []; blanks: 1
TOT: 0.9126261813556491; NL: 0.9126261813556491; NL+AG: 0.966581842152465; NL+QF: 0.9126261813556491; rels: [directed_by]; projs: [tv_series_0.title]; preds: [keyword_0.keyword = "netflix"]; havings: []; superlative: []; blanks: 1
TOT: 0.9073176753710547; NL: 0.9073176753710547; NL+AG: 0.966581842152465; NL+QF: 0.9073176753710547; rels: [producer]; projs: [tv_series_0.title]; preds: [company_0.name = "Netflix"]; havings: []; superlative: []; blanks: 1
TOT: 0.9073176753710547; NL: 0.9073176753710547; NL+AG: 0.966581842152465; NL+QF: 0.9073176753710547; rels: [producer]; projs: [tv_series_0.title]; preds: [keyword_0.keyword = "netflix"]; havings: []; superlative: []; blanks: 1
TOT: 0.9051380516888361; NL: 0.8460771152438374; NL+AG: 0.9292177196056817; NL+QF: 0.9051380516888361; rels: [movie,directed_by]; projs: [tv_series_0.title]; preds: []; havings: []; superlative: []; blanks: 1
TOT: 0.8979007600118484; NL: 0.8979007600118484; NL+AG: 0.966581842152465; NL+QF: 0.8979007600118484; rels: []; projs: [tv_series_0.title]; preds: [company_0.name = "Netflix"]; havings: []; superlative: []; blanks: 2
TOT: 0.8979007600118484; NL: 0.8979007600118484; NL+AG: 0.966581842152465; NL+QF: 0.8979007600118484; rels: []; projs: [tv_series_0.title]; preds: [keyword_0.keyword = "netflix"]; havings: []; superlative: []; blanks: 2
TOT: 0.8736760294322355; NL: 0.8736760294322355; NL+AG: 0.9292177196056817; NL+QF: 0.8736760294322355; rels: [made_by]; projs: [tv_series_0.title]; preds: []; havings: []; superlative: []; blanks: 2
TOT: 0.8736760294322355; NL: 0.8736760294322355; NL+AG: 0.9292177196056817; NL+QF: 0.8736760294322355; rels: [made_by,tv_series]; projs: [tv_series_0.title]; preds: []; havings: []; superlative: []; blanks: 1

===========
RESULTS
===========
TOT: 0.8372328888875188; TR: 0.9282851983280498; QF: 0.0; select tv_series_0.title from company as company_0, copyright as copyright_0, made_by as made_by_0, made_by as made_by_1, movie as movie_0, producer as producer_0, tv_series as tv_series_0 where company_0.name = "Netflix" and company_0.id = copyright_0.cid and copyright_0.msid = movie_0.mid and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid and made_by_1.msid = tv_series_0.sid and made_by_1.pid = producer_0.pid
TOT: 0.8372328888875188; TR: 0.9282851983280498; QF: 0.0; select tv_series_0.title from keyword as keyword_0, made_by as made_by_0, made_by as made_by_1, movie as movie_0, producer as producer_0, tags as tags_0, tv_series as tv_series_0 where keyword_0.keyword = "netflix" and keyword_0.id = tags_0.kid and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid and made_by_1.msid = tv_series_0.sid and made_by_1.pid = producer_0.pid and movie_0.mid = tags_0.msid
TOT: 0.8368278053317484; TR: 0.8979007600118484; QF: 0.0; select tv_series_0.title from keyword as keyword_0, tags as tags_0, tv_series as tv_series_0 where keyword_0.keyword = "netflix" and keyword_0.id = tags_0.kid and tags_0.msid = tv_series_0.sid
TOT: 0.8368278053317484; TR: 0.8979007600118484; QF: 0.0; select tv_series_0.title from company as company_0, copyright as copyright_0, tv_series as tv_series_0 where company_0.name = "Netflix" and company_0.id = copyright_0.cid and copyright_0.msid = tv_series_0.sid
TOT: 0.8248480491363028; TR: 0.9126261813556491; QF: 0.04112554112554113; select tv_series_0.title from directed_by as directed_by_0, directed_by as directed_by_1, director as director_0, keyword as keyword_0, movie as movie_0, tags as tags_0, tv_series as tv_series_0 where keyword_0.keyword = "netflix" and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and directed_by_1.did = director_0.did and directed_by_1.msid = tv_series_0.sid and keyword_0.id = tags_0.kid and movie_0.mid = tags_0.msid
TOT: 0.8248480491363028; TR: 0.9126261813556491; QF: 0.04112554112554113; select tv_series_0.title from company as company_0, copyright as copyright_0, directed_by as directed_by_0, directed_by as directed_by_1, director as director_0, movie as movie_0, tv_series as tv_series_0 where company_0.name = "Netflix" and company_0.id = copyright_0.cid and copyright_0.msid = movie_0.mid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and directed_by_1.did = director_0.did and directed_by_1.msid = tv_series_0.sid
TOT: 0.8123314409940722; TR: 0.8979007600118484; QF: 0.04112554112554113; select tv_series_0.title from actor as actor_0, cast as cast_0, cast as cast_1, company as company_0, copyright as copyright_0, movie as movie_0, tv_series as tv_series_0 where company_0.name = "Netflix" and actor_0.aid = cast_0.aid and actor_0.aid = cast_1.aid and cast_0.msid = movie_0.mid and cast_1.msid = tv_series_0.sid and company_0.id = copyright_0.cid and copyright_0.msid = movie_0.mid
TOT: 0.8123314409940722; TR: 0.8979007600118484; QF: 0.04112554112554113; select tv_series_0.title from actor as actor_0, cast as cast_0, cast as cast_1, keyword as keyword_0, movie as movie_0, tags as tags_0, tv_series as tv_series_0 where keyword_0.keyword = "netflix" and actor_0.aid = cast_0.aid and actor_0.aid = cast_1.aid and cast_0.msid = movie_0.mid and cast_1.msid = tv_series_0.sid and keyword_0.id = tags_0.kid and movie_0.mid = tags_0.msid
TOT: 0.8114061163187476; TR: 0.8979007600118484; QF: 0.0; select tv_series_0.title from keyword as keyword_0, movie as movie_0, tags as tags_0, tv_series as tv_series_0, writer as writer_0, written_by as written_by_0, written_by as written_by_1 where keyword_0.keyword = "netflix" and keyword_0.id = tags_0.kid and movie_0.mid = tags_0.msid and movie_0.mid = written_by_0.msid and tv_series_0.sid = written_by_1.msid and writer_0.wid = written_by_0.wid and writer_0.wid = written_by_1.wid
TOT: 0.8114061163187476; TR: 0.8979007600118484; QF: 0.0; select tv_series_0.title from classification as classification_0, classification as classification_1, company as company_0, copyright as copyright_0, genre as genre_0, movie as movie_0, tv_series as tv_series_0 where company_0.name = "Netflix" and classification_0.gid = genre_0.gid and classification_0.msid = movie_0.mid and classification_1.gid = genre_0.gid and classification_1.msid = tv_series_0.sid and company_0.id = copyright_0.cid and copyright_0.msid = movie_0.mid


02:08  INFO: ================
02:08  INFO: QUERY 57: Who is the director of the tv series "House of Cards" from 2013?
02:08  INFO: ================
02:13  INFO: ================
02:13  INFO: QUERY 129: Which producer has worked with the most number of directors?
02:13  INFO: ================
02:14  INFO: ================
02:14  INFO: QUERY 16: How much was the budget of "Finding Nemo"
02:14  INFO: ================
02:14  INFO: ================
02:14  INFO: QUERY 9: When was "Kevin Spacey" born?
02:14  INFO: ================
02:15  INFO: ================
02:15  INFO: QUERY 88: What is the number of actors in the movie "Grumpier Old Men"?
02:15  INFO: ================
02:17  INFO: ================
02:17  INFO: QUERY 99: How many movies about Persians were released after 1990?
02:17  INFO: ================
490. ROOT: ROOT; NA; ; (0) 
491. released: NT; NA; ; (0) movie.release_year(1.0):| tv_series.release_year(1.0):| movie.title(0.64):| movie(0.64):| movie.title_aka(0.63):| tv_series.title_aka(0.63):| cast.role(0.63):| 
493. How many: CMT; count; ; (0) 
494. movies: NT; NA; ; (0) movie.title(1.0):| movie(1.0):| cast.role(0.95):Movie; Movie F; Movie AD; | company.name(0.95):Movies; Movie; Movie Movie; | tv_series.title(0.84):Movies, Movies, Movi; Movie Mob; Moon Movies; | keyword.keyword(0.83):movie-in-movie; movies-about-movies; b-movie; | actor.name(0.76):| 
495. Persians: VTTEXT; NA; ; (0) cast.role(1.0):Persian; Persian; Persian; | keyword.keyword(1.0):persian; persian-cat; persian-rug; | movie.title(0.82):Persian Version; Persian Eyes; The Persian; | director.name(0.74):Luke Persian; Persian Pink Panther; The Persian Ed Wood; | actor.name(0.74):Persian Lamb; Little Persian; Persian Princess Dia; | producer.name(0.74):Luke Persian; Persian Pink Panther; Persian Maglinte; | writer.name(0.74):Luke Persian; Persian Pink Panther; The Persian Ed Wood; | 
498. 1990: VTNUM; NA; ; (0) movie.release_year(1.0):2012; 2014; 2015; | director.birth_year(1.0):1993; 1994; 1996; | tv_series.release_year(1.0):2014; 1991; 2014; | actor.birth_year(1.0):1999; 2003; 1993; | producer.birth_year(1.0):1993; 1997; 1995; | writer.birth_year(1.0):1993; 1994; 1998; | 
499. after: OT; >; ; (0) 
How, WRB
many, JJ
movies, NNS
about, IN
Persians, NNP
were, VBD
released, VBN
after, IN
1990, CD
advmod(many-2, How-1)
dep(released-7, many-2)
nsubjpass(released-7, movies-3)
case(Persians-5, about-4)
nmod(movies-3, Persians-5)
auxpass(released-7, were-6)
root(ROOT-0, released-7)
case(1990-9, after-8)
nmod(released-7, 1990-9)

PARSE TREE:(490) ROOT ROOT
    (493) How many CMT
        (494) movies NT
            (495) Persians VTTEXT
            (491) released NT
                (498) 1990 VTNUM
                    (499) after OT


===========
TRANSLATIONS
===========
TOT: 1.0; NL: 1.0; NL+AG: 1.0; NL+QF: 1.0; rels: []; projs: [count(distinct(movie_0.title))]; preds: [cast_0.role = "Persian",movie_0.release_year > 1990]; havings: []; superlative: []; blanks: 0
TOT: 1.0; NL: 1.0; NL+AG: 1.0; NL+QF: 1.0; rels: []; projs: [count(distinct(movie_0.title))]; preds: [keyword_0.keyword = "persian",movie_0.release_year > 1990]; havings: []; superlative: []; blanks: 0
TOT: 1.0; NL: 1.0; NL+AG: 1.0; NL+QF: 1.0; rels: []; projs: [count(distinct(movie_0.title))]; preds: [cast_0.role = "Persian",tv_series_0.release_year > 1990]; havings: []; superlative: []; blanks: 0
TOT: 1.0; NL: 1.0; NL+AG: 1.0; NL+QF: 1.0; rels: []; projs: [count(distinct(movie_0.title))]; preds: [keyword_0.keyword = "persian",tv_series_0.release_year > 1990]; havings: []; superlative: []; blanks: 0
TOT: 0.9685165730344267; NL: 0.9039125735618705; NL+AG: 0.9744973003694231; NL+QF: 0.9685165730344267; rels: []; projs: [count(distinct(movie_0.title))]; preds: [director_0.name = "Luke Persian",movie_0.release_year > 1990]; havings: []; superlative: []; blanks: 0
TOT: 0.9447090423184918; NL: 0.9039125735618705; NL+AG: 0.9744973003694231; NL+QF: 0.9447090423184918; rels: []; projs: [count(distinct(movie_0.title))]; preds: [director_0.name = "Luke Persian",tv_series_0.release_year > 1990]; havings: []; superlative: []; blanks: 0
TOT: 0.936592398786078; NL: 0.936592398786078; NL+AG: 0.9772495308342077; NL+QF: 0.936592398786078; rels: []; projs: [count(distinct(movie_0.title))]; preds: [movie_0.title = "Persian Version",movie_0.release_year > 1990]; havings: []; superlative: []; blanks: 0
TOT: 0.936592398786078; NL: 0.936592398786078; NL+AG: 0.9772495308342077; NL+QF: 0.936592398786078; rels: []; projs: [count(distinct(movie_0.title))]; preds: [movie_0.title = "Persian Version",tv_series_0.release_year > 1990]; havings: []; superlative: []; blanks: 0
TOT: 0.9134802127015484; NL: 0.9134802127015484; NL+AG: 0.9717124183006537; NL+QF: 0.9134802127015484; rels: []; projs: [count(distinct(actor_0.name))]; preds: [cast_0.role = "Persian",movie_0.release_year > 1990]; havings: []; superlative: []; blanks: 0
TOT: 0.9134802127015484; NL: 0.9134802127015484; NL+AG: 0.9717124183006537; NL+QF: 0.9134802127015484; rels: []; projs: [count(distinct(actor_0.name))]; preds: [keyword_0.keyword = "persian",movie_0.release_year > 1990]; havings: []; superlative: []; blanks: 0
TOT: 0.9134802127015484; NL: 0.9134802127015484; NL+AG: 0.9717124183006537; NL+QF: 0.9134802127015484; rels: []; projs: [count(distinct(actor_0.name))]; preds: [cast_0.role = "Persian",tv_series_0.release_year > 1990]; havings: []; superlative: []; blanks: 0
TOT: 0.9134802127015484; NL: 0.9134802127015484; NL+AG: 0.9717124183006537; NL+QF: 0.9134802127015484; rels: []; projs: [count(distinct(actor_0.name))]; preds: [keyword_0.keyword = "persian",tv_series_0.release_year > 1990]; havings: []; superlative: []; blanks: 0

===========
RESULTS
===========
TOT: 0.948337932783103; TR: 1.0; QF: 0.36363636363636365; select count(distinct(movie_0.title)) from cast as cast_0, movie as movie_0 where cast_0.role = "Persian" and movie_0.release_year > 1990 and cast_0.msid = movie_0.mid
TOT: 0.9236121593216773; TR: 1.0; QF: 0.0; select count(distinct(movie_0.title)) from keyword as keyword_0, movie as movie_0, tags as tags_0 where keyword_0.keyword = "persian" and movie_0.release_year > 1990 and keyword_0.id = tags_0.kid and movie_0.mid = tags_0.msid
TOT: 0.9089629152444264; TR: 1.0; QF: 0.08636363636363636; select count(distinct(movie_0.title)) from actor as actor_0, cast as cast_0, cast as cast_1, movie as movie_0, tv_series as tv_series_0 where cast_0.role = "Persian" and tv_series_0.release_year > 1990 and actor_0.aid = cast_0.aid and actor_0.aid = cast_1.aid and cast_0.msid = movie_0.mid and cast_1.msid = tv_series_0.sid
TOT: 0.9070197334262446; TR: 1.0; QF: 0.0; select count(distinct(movie_0.title)) from keyword as keyword_0, movie as movie_0, tags as tags_0, tags as tags_1, tv_series as tv_series_0 where keyword_0.keyword = "persian" and tv_series_0.release_year > 1990 and keyword_0.id = tags_0.kid and keyword_0.id = tags_1.kid and movie_0.mid = tags_0.msid and tags_1.msid = tv_series_0.sid
TOT: 0.9038925661250516; TR: 1.0; QF: 0.08181818181818182; select count(distinct(movie_0.title)) from cast as cast_0, directed_by as directed_by_0, directed_by as directed_by_1, director as director_0, movie as movie_0, tv_series as tv_series_0 where cast_0.role = "Persian" and tv_series_0.release_year > 1990 and cast_0.msid = movie_0.mid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and directed_by_1.did = director_0.did and directed_by_1.msid = tv_series_0.sid
TOT: 0.903347111579597; TR: 1.0; QF: 0.05757575757575758; select count(distinct(movie_0.title)) from cast as cast_0, directed_by as directed_by_0, directed_by as directed_by_1, director as director_0, movie as movie_0, tv_series as tv_series_0 where cast_0.role = "Persian" and movie_0.release_year > 1990 and cast_0.msid = tv_series_0.sid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and directed_by_1.did = director_0.did and directed_by_1.msid = tv_series_0.sid
TOT: 0.903347111579597; TR: 1.0; QF: 0.05757575757575758; select count(distinct(movie_0.title)) from cast as cast_0, directed_by as directed_by_0, directed_by as directed_by_1, director as director_0, movie as movie_0, tv_series as tv_series_0 where cast_0.role = "Persian" and tv_series_0.release_year > 1990 and cast_0.msid = tv_series_0.sid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and directed_by_1.did = director_0.did and directed_by_1.msid = tv_series_0.sid
TOT: 0.9033285191282128; TR: 0.9685165730344267; QF: 0.2878787878787879; select count(distinct(movie_0.title)) from directed_by as directed_by_0, director as director_0, movie as movie_0 where director_0.name = "Luke Persian" and movie_0.release_year > 1990 and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid
TOT: 0.9025971115795971; TR: 1.0; QF: 0.024242424242424242; select count(distinct(movie_0.title)) from cast as cast_0, movie as movie_0, tv_series as tv_series_0, writer as writer_0, written_by as written_by_0, written_by as written_by_1 where cast_0.role = "Persian" and tv_series_0.release_year > 1990 and cast_0.msid = movie_0.mid and movie_0.mid = written_by_0.msid and tv_series_0.sid = written_by_1.msid and writer_0.wid = written_by_0.wid and writer_0.wid = written_by_1.wid
TOT: 0.9025971115795971; TR: 1.0; QF: 0.024242424242424242; select count(distinct(movie_0.title)) from cast as cast_0, made_by as made_by_0, made_by as made_by_1, movie as movie_0, producer as producer_0, tv_series as tv_series_0 where cast_0.role = "Persian" and tv_series_0.release_year > 1990 and cast_0.msid = movie_0.mid and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid and made_by_1.msid = tv_series_0.sid and made_by_1.pid = producer_0.pid


02:18  INFO: ================
02:18  INFO: QUERY 91: What is the number of movies directed by "Woody Allen" per year?
02:18  INFO: ================
02:22  INFO: ================
02:22  INFO: QUERY 130: Find the latest movie which "Gabriele Ferzetti" acted in
02:22  INFO: ================
514. ROOT: ROOT; NA; ; (0) 
515. Find: CMT; NA; ; (0) 
516. movie: NT; NA; ; (0) movie.title(1.0):| movie(1.0):| cast.role(0.95):Movie; Movie F; Movie AD; | company.name(0.95):Movie; Movies; Movie Movie; | keyword.keyword(0.83):movie-in-movie; b-movie; z-movie; | actor.name(0.76):| actor(0.76):| 
518. latest: FT; max; ; (0) 
519. acted: NT; NA; ; (0) movie.release_year(0.63):| tv_series.release_year(0.63):| actor.name(0.62):| actor(0.62):| genre.genre(0.62):| genre(0.62):| made_by(0.61):| 
521. Gabriele Ferzetti: VTTEXT; NA; ; (0) actor.name(1.0):Gabriele Ferzetti; Gabriele Ferzetti; Gabriel Ferzetti; | director.name(0.73):Gabriele Ferluga; Gabriele Ferluga; Gabriele Mainetti; | writer.name(0.73):Gabriele Ferluga; Gabriele Ferluga; Gabriele Kiefer; | cast.role(0.71):Gabriele Cercetti; Gabriele Cercetti; Gabriele Cercetti; | producer.name(0.69):Gabriele Mainetti; Gabriele Mainetti; Gabriele Gauler; | movie.title(0.53):Gabriele Dambrone; Gabriele Dambrone; For Gabriele; | company.name(0.53):San Gabriele; San Gabriele; Kranzelbinder Gabrie; | 
Find, VB
the, DT
latest, JJS
movie, NN
which, WDT
Gabriele Ferzetti, NNP
acted, VBD
in, RP
root(ROOT-0, Find-1)
det(movie-4, the-2)
amod(movie-4, latest-3)
dobj(Find-1, movie-4)
dobj(acted-7, which-5)
nsubj(acted-7, Gabriele Ferzetti-6)
acl:relcl(movie-4, acted-7)
compound:prt(acted-7, in-8)

PARSE TREE:(514) ROOT ROOT
    (515) Find CMT
        (516) movie NT
            (519) acted NT
                (521) Gabriele Ferzetti VTTEXT


===========
TRANSLATIONS
===========

===========
RESULTS
===========


02:22  INFO: ================
02:22  INFO: QUERY 122: Find the movie which is classified in the most number of genres
02:22  INFO: ================
02:23  INFO: ================
02:23  INFO: QUERY 62: Find all actors from Italy born after 1980
02:23  INFO: ================
02:24  INFO: ================
02:24  INFO: QUERY 27: What was the budget of the movie Juno from 2007?
02:24  INFO: ================
02:26  INFO: ================
02:26  INFO: QUERY 20: Find the actor who played "Captain Miller" in the movie "Saving Private Ryan"
02:26  INFO: ================
02:30  INFO: ================
02:30  INFO: QUERY 117: Find all movies featuring "Benedict Cumberbatch" and "Keira Knightley"
02:30  INFO: ================
02:31  INFO: ================
02:31  INFO: QUERY 119: What is the maximum number of movies in which "Brad Pitt" act in a given year?
02:31  INFO: ================
581. ROOT: ROOT; NA; ; (0) 
582. What: CMT; NA; ; (0) 
584. number of: FT; count; ; (0) 
586. maximum: FT; max; ; (0) 
587. movies: NT; NA; ; (0) movie.title(1.0):| movie(1.0):| cast.role(0.95):Movie; Movie F; Movie AD; | company.name(0.95):Movies; Movie; Movie Movie; | tv_series.title(0.84):Movies, Movies, Movi; Movie Mob; Moon Movies; | keyword.keyword(0.83):movie-in-movie; movies-about-movies; b-movie; | actor.name(0.76):| 
589. act: NT; NA; ; (0) movie.release_year(0.63):| tv_series.release_year(0.63):| actor.name(0.62):| actor(0.62):| genre.genre(0.62):| genre(0.62):| made_by(0.61):| 
592. Brad Pitt: VTTEXT; NA; ; (0) actor.name(1.0):Brad Pitt; Brad Pitt; bRad sPitt; | cast.role(1.0):Brad Pitt'; Brad Pitt'; Brad Pitt #1; | producer.name(1.0):Brad Pitt; Brad Pitt; Mad Pitt; | director.name(0.78):Brad Pruitt; Brad Pruitt; Brad Witty; | writer.name(0.78):Brad Pruitt; Brad Pruitt; Brad Witt; | movie.title(0.72):Brad Pitt Video Port; Brad Pitt Video Port; Brad; | actor.birth_city(0.61):Brad; Brad; Pitt Meadows; | 
593. year: NT; NA; ; (0) movie.release_year(1.0):| director.birth_year(1.0):| tv_series.release_year(1.0):| actor.birth_year(1.0):| producer.birth_year(1.0):| writer.birth_year(1.0):| movie.title(0.95):Year; Years; Years; | 
596. given: NT; NA; ; (0) made_by(0.8):| directed_by(0.68):| written_by(0.67):| cast.role(0.66):| cast(0.66):| movie.release_year(0.59):| tv_series.release_year(0.59):| 
What, WP
is, VBZ
the, DT
maximum, JJ
number, NN
of, IN
movies, NNS
in, IN
which, WDT
Brad Pitt, NNP
act, VBP
in, IN
a, DT
given, VBN
year, NN
root(ROOT-0, What-1)
cop(What-1, is-2)
det(number-5, the-3)
amod(number-5, maximum-4)
nsubj(What-1, number-5)
case(movies-7, of-6)
nmod(number-5, movies-7)
case(which-9, in-8)
nmod(act-11, which-9)
nsubj(act-11, Brad Pitt-10)
acl:relcl(movies-7, act-11)
case(year-15, in-12)
det(year-15, a-13)
amod(year-15, given-14)
nmod(act-11, year-15)

PARSE TREE:(581) ROOT ROOT
    (582) What CMT
        (584) number of FT
            (586) maximum FT
            (587) movies NT
                (589) act NT
                    (592) Brad Pitt VTTEXT
                    (593) year NT
                        (596) given NT


===========
TRANSLATIONS
===========
TOT: 0.7717313085512446; NL: 0.7717313085512446; NL+AG: 0.9323354200596522; NL+QF: 0.7717313085512446; rels: []; projs: [movie_0.release_year]; preds: [actor_0.name = "Brad Pitt"]; havings: []; superlative: [count(distinct(movie_0.title)) desc limit 1]; blanks: 2
TOT: 0.7717313085512446; NL: 0.7717313085512446; NL+AG: 0.9323354200596522; NL+QF: 0.7717313085512446; rels: []; projs: [director_0.birth_year]; preds: [actor_0.name = "Brad Pitt"]; havings: []; superlative: [count(distinct(movie_0.title)) desc limit 1]; blanks: 2
TOT: 0.7717313085512446; NL: 0.7717313085512446; NL+AG: 0.9323354200596522; NL+QF: 0.7717313085512446; rels: []; projs: [tv_series_0.release_year]; preds: [actor_0.name = "Brad Pitt"]; havings: []; superlative: [count(distinct(movie_0.title)) desc limit 1]; blanks: 2
TOT: 0.7717313085512446; NL: 0.7717313085512446; NL+AG: 0.9323354200596522; NL+QF: 0.7717313085512446; rels: []; projs: [actor_0.birth_year]; preds: [actor_0.name = "Brad Pitt"]; havings: []; superlative: [count(distinct(movie_0.title)) desc limit 1]; blanks: 2
TOT: 0.7717313085512446; NL: 0.7717313085512446; NL+AG: 0.9323354200596522; NL+QF: 0.7717313085512446; rels: []; projs: [producer_0.birth_year]; preds: [actor_0.name = "Brad Pitt"]; havings: []; superlative: [count(distinct(movie_0.title)) desc limit 1]; blanks: 2
TOT: 0.7717313085512446; NL: 0.7717313085512446; NL+AG: 0.9323354200596522; NL+QF: 0.7717313085512446; rels: []; projs: [writer_0.birth_year]; preds: [actor_0.name = "Brad Pitt"]; havings: []; superlative: [count(distinct(movie_0.title)) desc limit 1]; blanks: 2
TOT: 0.7717313085512446; NL: 0.7717313085512446; NL+AG: 0.9323354200596522; NL+QF: 0.7717313085512446; rels: []; projs: [movie_0.release_year]; preds: [cast_0.role = "Brad Pitt'"]; havings: []; superlative: [count(distinct(movie_0.title)) desc limit 1]; blanks: 2
TOT: 0.7717313085512446; NL: 0.7717313085512446; NL+AG: 0.9323354200596522; NL+QF: 0.7717313085512446; rels: []; projs: [director_0.birth_year]; preds: [cast_0.role = "Brad Pitt'"]; havings: []; superlative: [count(distinct(movie_0.title)) desc limit 1]; blanks: 2
TOT: 0.7717313085512446; NL: 0.7717313085512446; NL+AG: 0.9323354200596522; NL+QF: 0.7717313085512446; rels: []; projs: [tv_series_0.release_year]; preds: [cast_0.role = "Brad Pitt'"]; havings: []; superlative: [count(distinct(movie_0.title)) desc limit 1]; blanks: 2
TOT: 0.7717313085512446; NL: 0.7717313085512446; NL+AG: 0.9323354200596522; NL+QF: 0.7717313085512446; rels: []; projs: [actor_0.birth_year]; preds: [cast_0.role = "Brad Pitt'"]; havings: []; superlative: [count(distinct(movie_0.title)) desc limit 1]; blanks: 2
TOT: 0.7717313085512446; NL: 0.7717313085512446; NL+AG: 0.9323354200596522; NL+QF: 0.7717313085512446; rels: []; projs: [producer_0.birth_year]; preds: [cast_0.role = "Brad Pitt'"]; havings: []; superlative: [count(distinct(movie_0.title)) desc limit 1]; blanks: 2
TOT: 0.7717313085512446; NL: 0.7717313085512446; NL+AG: 0.9323354200596522; NL+QF: 0.7717313085512446; rels: []; projs: [writer_0.birth_year]; preds: [cast_0.role = "Brad Pitt'"]; havings: []; superlative: [count(distinct(movie_0.title)) desc limit 1]; blanks: 2
TOT: 0.7717313085512446; NL: 0.7717313085512446; NL+AG: 0.9323354200596522; NL+QF: 0.7717313085512446; rels: []; projs: [movie_0.release_year]; preds: [producer_0.name = "Brad Pitt"]; havings: []; superlative: [count(distinct(movie_0.title)) desc limit 1]; blanks: 2
TOT: 0.7717313085512446; NL: 0.7717313085512446; NL+AG: 0.9323354200596522; NL+QF: 0.7717313085512446; rels: []; projs: [director_0.birth_year]; preds: [producer_0.name = "Brad Pitt"]; havings: []; superlative: [count(distinct(movie_0.title)) desc limit 1]; blanks: 2
TOT: 0.7717313085512446; NL: 0.7717313085512446; NL+AG: 0.9323354200596522; NL+QF: 0.7717313085512446; rels: []; projs: [tv_series_0.release_year]; preds: [producer_0.name = "Brad Pitt"]; havings: []; superlative: [count(distinct(movie_0.title)) desc limit 1]; blanks: 2
TOT: 0.7717313085512446; NL: 0.7717313085512446; NL+AG: 0.9323354200596522; NL+QF: 0.7717313085512446; rels: []; projs: [actor_0.birth_year]; preds: [producer_0.name = "Brad Pitt"]; havings: []; superlative: [count(distinct(movie_0.title)) desc limit 1]; blanks: 2
TOT: 0.7717313085512446; NL: 0.7717313085512446; NL+AG: 0.9323354200596522; NL+QF: 0.7717313085512446; rels: []; projs: [producer_0.birth_year]; preds: [producer_0.name = "Brad Pitt"]; havings: []; superlative: [count(distinct(movie_0.title)) desc limit 1]; blanks: 2
TOT: 0.7717313085512446; NL: 0.7717313085512446; NL+AG: 0.9323354200596522; NL+QF: 0.7717313085512446; rels: []; projs: [writer_0.birth_year]; preds: [producer_0.name = "Brad Pitt"]; havings: []; superlative: [count(distinct(movie_0.title)) desc limit 1]; blanks: 2

===========
RESULTS
===========
TOT: 0.7543095450516609; TR: 0.7717313085512446; QF: 0.36363636363636365; select movie_0.release_year from cast as cast_0, movie as movie_0 where cast_0.role = "Brad Pitt'" and cast_0.msid = movie_0.mid group by movie_0.release_year order by count(distinct(movie_0.title)) desc limit 1
TOT: 0.734811044317508; TR: 0.7717313085512446; QF: 0.23232323232323235; select movie_0.release_year from actor as actor_0, cast as cast_0, movie as movie_0 where actor_0.name = "Brad Pitt" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid group by movie_0.release_year order by count(distinct(movie_0.title)) desc limit 1
TOT: 0.734811044317508; TR: 0.7717313085512446; QF: 0.23232323232323235; select actor_0.birth_year from actor as actor_0, cast as cast_0, movie as movie_0 where actor_0.name = "Brad Pitt" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid group by actor_0.birth_year order by count(distinct(movie_0.title)) desc limit 1
TOT: 0.734811044317508; TR: 0.7717313085512446; QF: 0.23232323232323235; select actor_0.birth_year from actor as actor_0, cast as cast_0, movie as movie_0 where cast_0.role = "Brad Pitt'" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid group by actor_0.birth_year order by count(distinct(movie_0.title)) desc limit 1
TOT: 0.7295837715902352; TR: 0.7717313085512446; QF: 0.0; select movie_0.release_year from made_by as made_by_0, movie as movie_0, producer as producer_0 where producer_0.name = "Brad Pitt" and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid group by movie_0.release_year order by count(distinct(movie_0.title)) desc limit 1
TOT: 0.7295837715902352; TR: 0.7717313085512446; QF: 0.0; select producer_0.birth_year from made_by as made_by_0, movie as movie_0, producer as producer_0 where producer_0.name = "Brad Pitt" and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid group by producer_0.birth_year order by count(distinct(movie_0.title)) desc limit 1
TOT: 0.7243238849958307; TR: 0.7717313085512446; QF: 0.20454545454545456; select director_0.birth_year from cast as cast_0, directed_by as directed_by_0, director as director_0, movie as movie_0 where cast_0.role = "Brad Pitt'" and cast_0.msid = movie_0.mid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid group by director_0.birth_year order by count(distinct(movie_0.title)) desc limit 1
TOT: 0.7210852486321943; TR: 0.7717313085512446; QF: 0.06060606060606061; select producer_0.birth_year from cast as cast_0, made_by as made_by_0, movie as movie_0, producer as producer_0 where cast_0.role = "Brad Pitt'" and cast_0.msid = movie_0.mid and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid group by producer_0.birth_year order by count(distinct(movie_0.title)) desc limit 1
TOT: 0.7210852486321943; TR: 0.7717313085512446; QF: 0.06060606060606061; select writer_0.birth_year from cast as cast_0, movie as movie_0, writer as writer_0, written_by as written_by_0 where cast_0.role = "Brad Pitt'" and cast_0.msid = movie_0.mid and movie_0.mid = written_by_0.msid and writer_0.wid = written_by_0.wid group by writer_0.birth_year order by count(distinct(movie_0.title)) desc limit 1
TOT: 0.7165027093311662; TR: 0.7717313085512446; QF: 0.15606060606060607; select director_0.birth_year from actor as actor_0, cast as cast_0, directed_by as directed_by_0, director as director_0, movie as movie_0 where actor_0.name = "Brad Pitt" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid group by director_0.birth_year order by count(distinct(movie_0.title)) desc limit 1


02:34  INFO: ================
02:34  INFO: QUERY 116: What movies have the same director as the movie "Revolutionary Road"?
02:34  INFO: ================
02:36  INFO: ================
02:36  INFO: QUERY 47: What are the series featuring "Kerry Washington"?
02:36  INFO: ================
02:37  INFO: ================
02:37  INFO: QUERY 69: Find all the directors who are from Afghanistan
02:37  INFO: ================
02:37  INFO: ================
02:37  INFO: QUERY 127: Who directed the latest movie by "NBCUniversal"
02:37  INFO: ================
628. ROOT: ROOT; NA; ; (0) 
629. directed: NT; NA; ; (0) directed_by(1.0):| director.name(0.72):| director(0.72):| written_by(0.68):| cast.role(0.67):| cast(0.67):| made_by(0.67):| 
630. Who: CMT; NA; ; (0) director.name(1.0):| actor.name(1.0):| producer.name(1.0):| writer.name(1.0):| 
631. movie: NT; NA; ; (0) movie.title(1.0):| movie(1.0):| cast.role(0.95):Movie; Movie F; Movie AD; | company.name(0.95):Movie; Movies; Movie Movie; | keyword.keyword(0.83):movie-in-movie; b-movie; z-movie; | actor.name(0.76):| actor(0.76):| 
633. latest: FT; max; ; (0) 
634. NBCUniversal: VTTEXT; NA; ; (0) company.name(1.0):NBCUniversal; NBCUniversal Media; NBCUniversal Skycast; | genre.genre(0.2):Commercial; Commercial; Experimental; | 
Who, WP
directed, VBD
the, DT
latest, JJS
movie, NN
by, IN
NBCUniversal, NNP
nsubj(directed-2, Who-1)
root(ROOT-0, directed-2)
det(movie-5, the-3)
amod(movie-5, latest-4)
dobj(directed-2, movie-5)
case(NBCUniversal-7, by-6)
nmod(directed-2, NBCUniversal-7)

PARSE TREE:(628) ROOT ROOT
    (630) Who CMT
        (629) directed NT
            (631) movie NT
            (634) NBCUniversal VTTEXT


===========
TRANSLATIONS
===========
TOT: 0.9830475724915585; NL: 0.9830475724915585; NL+AG: 0.9947191844774439; NL+QF: 0.9830475724915585; rels: []; projs: [director_0.name]; preds: [cast_0.role = "Movie",company_0.name = "NBCUniversal"]; havings: []; superlative: []; blanks: 0
TOT: 0.9830475724915585; NL: 0.9830475724915585; NL+AG: 0.9947191844774439; NL+QF: 0.9830475724915585; rels: []; projs: [actor_0.name]; preds: [cast_0.role = "Movie",company_0.name = "NBCUniversal"]; havings: []; superlative: []; blanks: 0
TOT: 0.9830475724915585; NL: 0.9830475724915585; NL+AG: 0.9947191844774439; NL+QF: 0.9830475724915585; rels: []; projs: [producer_0.name]; preds: [cast_0.role = "Movie",company_0.name = "NBCUniversal"]; havings: []; superlative: []; blanks: 0
TOT: 0.9830475724915585; NL: 0.9830475724915585; NL+AG: 0.9947191844774439; NL+QF: 0.9830475724915585; rels: []; projs: [writer_0.name]; preds: [cast_0.role = "Movie",company_0.name = "NBCUniversal"]; havings: []; superlative: []; blanks: 0
TOT: 0.9355249205979076; NL: 0.9355249205979076; NL+AG: 0.9778318463203914; NL+QF: 0.9355249205979076; rels: []; projs: [director_0.name]; preds: [company_0.name = "NBCUniversal"]; havings: []; superlative: [movie_0.title desc limit 1]; blanks: 1
TOT: 0.9174505626104981; NL: 0.9174505626104981; NL+AG: 0.9734002230204892; NL+QF: 0.9174505626104981; rels: []; projs: [director_0.name]; preds: [company_0.name = "NBCUniversal"]; havings: []; superlative: [movie_0.title desc limit 1]; blanks: 1
TOT: 0.9174505626104981; NL: 0.9174505626104981; NL+AG: 0.9734002230204892; NL+QF: 0.9174505626104981; rels: []; projs: [actor_0.name]; preds: [company_0.name = "NBCUniversal"]; havings: []; superlative: [movie_0.title desc limit 1]; blanks: 1
TOT: 0.9174505626104981; NL: 0.9174505626104981; NL+AG: 0.9734002230204892; NL+QF: 0.9174505626104981; rels: []; projs: [producer_0.name]; preds: [company_0.name = "NBCUniversal"]; havings: []; superlative: [movie_0.title desc limit 1]; blanks: 1
TOT: 0.9174505626104981; NL: 0.9174505626104981; NL+AG: 0.9734002230204892; NL+QF: 0.9174505626104981; rels: []; projs: [writer_0.name]; preds: [company_0.name = "NBCUniversal"]; havings: []; superlative: [movie_0.title desc limit 1]; blanks: 1
TOT: 0.8582978647386919; NL: 0.8582978647386919; NL+AG: 0.9512320693408807; NL+QF: 0.8582978647386919; rels: []; projs: [director_0.name]; preds: [company_0.name = "NBCUniversal"]; havings: []; superlative: [movie_0.title desc limit 1]; blanks: 1
TOT: 0.8582978647386919; NL: 0.8582978647386919; NL+AG: 0.945088111145773; NL+QF: 0.8582978647386919; rels: []; projs: [director_0.name]; preds: []; havings: []; superlative: [movie_0.title desc limit 1]; blanks: 2

===========
RESULTS
===========
TOT: 0.8941783518622511; TR: 0.9830475724915585; QF: 0.0696969696969697; select actor_0.name from actor as actor_0, cast as cast_0, company as company_0, copyright as copyright_0, movie as movie_0 where cast_0.role = "Movie" and company_0.name = "NBCUniversal" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and company_0.id = copyright_0.cid and copyright_0.msid = movie_0.mid
TOT: 0.8933601700440693; TR: 0.9830475724915585; QF: 0.03333333333333333; select actor_0.name from actor as actor_0, cast as cast_0, company as company_0, copyright as copyright_0, tv_series as tv_series_0 where cast_0.role = "Movie" and company_0.name = "NBCUniversal" and actor_0.aid = cast_0.aid and cast_0.msid = tv_series_0.sid and company_0.id = copyright_0.cid and copyright_0.msid = tv_series_0.sid
TOT: 0.8894830027428764; TR: 0.9830475724915585; QF: 0.08181818181818182; select director_0.name from cast as cast_0, company as company_0, copyright as copyright_0, directed_by as directed_by_0, director as director_0, movie as movie_0 where cast_0.role = "Movie" and company_0.name = "NBCUniversal" and cast_0.msid = movie_0.mid and company_0.id = copyright_0.cid and copyright_0.msid = movie_0.mid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid
TOT: 0.8883920936519673; TR: 0.9830475724915585; QF: 0.03333333333333333; select director_0.name from cast as cast_0, company as company_0, copyright as copyright_0, directed_by as directed_by_0, director as director_0, tv_series as tv_series_0 where cast_0.role = "Movie" and company_0.name = "NBCUniversal" and cast_0.msid = tv_series_0.sid and company_0.id = copyright_0.cid and copyright_0.msid = tv_series_0.sid and directed_by_0.did = director_0.did and directed_by_0.msid = tv_series_0.sid
TOT: 0.8881875481974219; TR: 0.9830475724915585; QF: 0.024242424242424242; select producer_0.name from cast as cast_0, company as company_0, copyright as copyright_0, made_by as made_by_0, movie as movie_0, producer as producer_0 where cast_0.role = "Movie" and company_0.name = "NBCUniversal" and cast_0.msid = movie_0.mid and company_0.id = copyright_0.cid and copyright_0.msid = movie_0.mid and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid
TOT: 0.8881875481974219; TR: 0.9830475724915585; QF: 0.024242424242424242; select writer_0.name from cast as cast_0, company as company_0, copyright as copyright_0, movie as movie_0, writer as writer_0, written_by as written_by_0 where cast_0.role = "Movie" and company_0.name = "NBCUniversal" and cast_0.msid = movie_0.mid and company_0.id = copyright_0.cid and copyright_0.msid = movie_0.mid and movie_0.mid = written_by_0.msid and writer_0.wid = written_by_0.wid
TOT: 0.8876420936519672; TR: 0.9830475724915585; QF: 0.0; select producer_0.name from cast as cast_0, company as company_0, copyright as copyright_0, made_by as made_by_0, producer as producer_0, tv_series as tv_series_0 where cast_0.role = "Movie" and company_0.name = "NBCUniversal" and cast_0.msid = tv_series_0.sid and company_0.id = copyright_0.cid and copyright_0.msid = tv_series_0.sid and made_by_0.msid = tv_series_0.sid and made_by_0.pid = producer_0.pid
TOT: 0.8876420936519672; TR: 0.9830475724915585; QF: 0.0; select writer_0.name from cast as cast_0, company as company_0, copyright as copyright_0, tv_series as tv_series_0, writer as writer_0, written_by as written_by_0 where cast_0.role = "Movie" and company_0.name = "NBCUniversal" and cast_0.msid = tv_series_0.sid and company_0.id = copyright_0.cid and copyright_0.msid = tv_series_0.sid and tv_series_0.sid = written_by_0.msid and writer_0.wid = written_by_0.wid
TOT: 0.8541590977526479; TR: 0.9355249205979076; QF: 0.08636363636363636; select director_0.name from company as company_0, copyright as copyright_0, directed_by as directed_by_0, director as director_0, movie as movie_0 where company_0.name = "NBCUniversal" and company_0.id = copyright_0.cid and copyright_0.msid = movie_0.mid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid order by movie_0.title desc limit 1
TOT: 0.8439223671026121; TR: 0.9355249205979076; QF: 0.023809523809523808; select director_0.name from company as company_0, copyright as copyright_0, directed_by as directed_by_0, directed_by as directed_by_1, director as director_0, movie as movie_0, tv_series as tv_series_0 where company_0.name = "NBCUniversal" and company_0.id = copyright_0.cid and copyright_0.msid = tv_series_0.sid and directed_by_0.did = director_0.did and directed_by_0.msid = tv_series_0.sid and directed_by_1.did = director_0.did and directed_by_1.msid = movie_0.mid order by movie_0.title desc limit 1


02:38  INFO: ================
02:38  INFO: QUERY 82: which company funded the "Mickey Mouse" series
02:38  INFO: ================
02:41  INFO: ================
02:41  INFO: QUERY 25: Find all movies written and produced by "Woody Allen"
02:41  INFO: ================
645. ROOT: ROOT; NA; ; (0) 
646. Find: CMT; NA; ; (0) 
647. movies: NT; NA; all; (0) movie.title(1.0):| movie(1.0):| cast.role(0.95):Movie; Movie F; Movie AD; | company.name(0.95):Movies; Movie; Movie Movie; | tv_series.title(0.84):Movies, Movies, Movi; Movie Mob; Moon Movies; | keyword.keyword(0.83):movie-in-movie; movies-about-movies; b-movie; | actor.name(0.76):| 
649. written: NT; NA; ; (0) written_by(1.0):| writer.name(0.78):| writer(0.78):| directed_by(0.68):| movie.title_aka(0.66):| tv_series.title_aka(0.66):| made_by(0.65):| 
651. produced: NT; NA; ; (0) made_by(0.74):| directed_by(0.69):| producer.name(0.68):| producer(0.68):| cast.role(0.63):| cast(0.63):| written_by(0.63):| 
652. Woody Allen: VTTEXT; NA; ; (0) director.name(1.0):Woody Allen; Woody Allen; Moody Allen; | actor.name(1.0):Woody Allen; Woody Allen; Jody Allen; | producer.name(1.0):Woody Allen; Woody Allen; Moody Allen; | writer.name(1.0):Woody Allen; Woody Allen; Moody Allen; | cast.role(0.85):Woody Allen Jr.; Woody Allen Jr.; Young Woody Allen; | movie.title(0.82):F.U. Woody Allen; F.U. Woody Allen; Woody Before Allen; | tv_series.title(0.73):The Woody Allen Show; The Woody Allen Show; Dave Allen; | 
Find, VB
all, DT
movies, NNS
written, VBN
and, CC
produced, VBN
by, IN
Woody Allen, NNP
root(ROOT-0, Find-1)
det(movies-3, all-2)
dobj(Find-1, movies-3)
acl(movies-3, written-4)
cc(written-4, and-5)
conj(written-4, produced-6)
case(Woody Allen-8, by-7)
nmod(written-4, Woody Allen-8)

PARSE TREE:(645) ROOT ROOT
    (646) Find CMT
        (647) movies NT
            (649) written NT
                (652) Woody Allen VTTEXT
            (651) produced NT


===========
TRANSLATIONS
===========
TOT: 0.9502161003447264; NL: 0.9126261813556491; NL+AG: 0.966581842152465; NL+QF: 0.9502161003447264; rels: [written_by,directed_by]; projs: [movie_0.title]; preds: [director_0.name = "Woody Allen"]; havings: []; superlative: []; blanks: 0
TOT: 0.9342336181994495; NL: 0.9126261813556491; NL+AG: 0.966581842152465; NL+QF: 0.9342336181994495; rels: [written_by,directed_by]; projs: [movie_0.title]; preds: [actor_0.name = "Woody Allen"]; havings: []; superlative: []; blanks: 0
TOT: 0.9282851983280498; NL: 0.9282851983280498; NL+AG: 0.966581842152465; NL+QF: 0.9282851983280498; rels: [made_by,written_by]; projs: [movie_0.title]; preds: [director_0.name = "Woody Allen"]; havings: []; superlative: []; blanks: 0
TOT: 0.9282851983280498; NL: 0.9282851983280498; NL+AG: 0.966581842152465; NL+QF: 0.9282851983280498; rels: [made_by,written_by]; projs: [movie_0.title]; preds: [actor_0.name = "Woody Allen"]; havings: []; superlative: []; blanks: 0
TOT: 0.9282851983280498; NL: 0.9282851983280498; NL+AG: 0.966581842152465; NL+QF: 0.9282851983280498; rels: [made_by,written_by]; projs: [movie_0.title]; preds: [producer_0.name = "Woody Allen"]; havings: []; superlative: []; blanks: 0
TOT: 0.9282851983280498; NL: 0.9282851983280498; NL+AG: 0.966581842152465; NL+QF: 0.9282851983280498; rels: [made_by,written_by]; projs: [movie_0.title]; preds: [writer_0.name = "Woody Allen"]; havings: []; superlative: []; blanks: 0
TOT: 0.9236194437743857; NL: 0.9126261813556491; NL+AG: 0.966581842152465; NL+QF: 0.9236194437743857; rels: [written_by,directed_by]; projs: [movie_0.title]; preds: [producer_0.name = "Woody Allen"]; havings: []; superlative: []; blanks: 0
TOT: 0.9236194437743857; NL: 0.9126261813556491; NL+AG: 0.966581842152465; NL+QF: 0.9236194437743857; rels: [written_by,directed_by]; projs: [movie_0.title]; preds: [writer_0.name = "Woody Allen"]; havings: []; superlative: []; blanks: 0
TOT: 0.9073176753710547; NL: 0.9073176753710547; NL+AG: 0.966581842152465; NL+QF: 0.9073176753710547; rels: [producer,written_by]; projs: [movie_0.title]; preds: [director_0.name = "Woody Allen"]; havings: []; superlative: []; blanks: 0
TOT: 0.9073176753710547; NL: 0.9073176753710547; NL+AG: 0.966581842152465; NL+QF: 0.9073176753710547; rels: [producer,written_by]; projs: [movie_0.title]; preds: [actor_0.name = "Woody Allen"]; havings: []; superlative: []; blanks: 0
TOT: 0.9073176753710547; NL: 0.9073176753710547; NL+AG: 0.966581842152465; NL+QF: 0.9073176753710547; rels: [producer,written_by]; projs: [movie_0.title]; preds: [producer_0.name = "Woody Allen"]; havings: []; superlative: []; blanks: 0
TOT: 0.9073176753710547; NL: 0.9073176753710547; NL+AG: 0.966581842152465; NL+QF: 0.9073176753710547; rels: [producer,written_by]; projs: [movie_0.title]; preds: [writer_0.name = "Woody Allen"]; havings: []; superlative: []; blanks: 0

===========
RESULTS
===========
TOT: 0.8564098698874081; TR: 0.9502161003447264; QF: 0.023809523809523808; select movie_0.title from directed_by as directed_by_0, director as director_0, movie as movie_0, tv_series as tv_series_0, writer as writer_0, written_by as written_by_0, written_by as written_by_1 where director_0.name = "Woody Allen" and directed_by_0.did = director_0.did and directed_by_0.msid = tv_series_0.sid and movie_0.mid = written_by_0.msid and tv_series_0.sid = written_by_1.msid and writer_0.wid = written_by_0.wid and writer_0.wid = written_by_1.wid
TOT: 0.8372328888875188; TR: 0.9282851983280498; QF: 0.0; select movie_0.title from made_by as made_by_0, movie as movie_0, producer as producer_0, tv_series as tv_series_0, writer as writer_0, written_by as written_by_0, written_by as written_by_1 where producer_0.name = "Woody Allen" and made_by_0.msid = tv_series_0.sid and made_by_0.pid = producer_0.pid and movie_0.mid = written_by_0.msid and tv_series_0.sid = written_by_1.msid and writer_0.wid = written_by_0.wid and writer_0.wid = written_by_1.wid
TOT: 0.8372328888875188; TR: 0.9282851983280498; QF: 0.0; select movie_0.title from made_by as made_by_0, made_by as made_by_1, movie as movie_0, producer as producer_0, tv_series as tv_series_0, writer as writer_0, written_by as written_by_0 where writer_0.name = "Woody Allen" and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid and made_by_1.msid = tv_series_0.sid and made_by_1.pid = producer_0.pid and tv_series_0.sid = written_by_0.msid and writer_0.wid = written_by_0.wid
TOT: 0.8341923221922288; TR: 0.9236194437743857; QF: 0.04112554112554113; select movie_0.title from directed_by as directed_by_0, directed_by as directed_by_1, director as director_0, movie as movie_0, tv_series as tv_series_0, writer as writer_0, written_by as written_by_0 where writer_0.name = "Woody Allen" and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and directed_by_1.did = director_0.did and directed_by_1.msid = tv_series_0.sid and tv_series_0.sid = written_by_0.msid and writer_0.wid = written_by_0.wid


02:42  INFO: ================
02:42  INFO: QUERY 105: How many movies did "Steven Spielberg" direct?
02:42  INFO: ================
02:43  INFO: ================
02:43  INFO: QUERY 23: Who acted "John Nash" in the movie "A Beautiful Mind"?
02:43  INFO: ================
02:47  INFO: ===== FOLD 2 =====
02:47  INFO: ===== Parsing Results =====
02:47  INFO: Total Queries: 9
02:47  INFO: Correctly Parsed: 9/9

02:47  INFO: ================
02:47  INFO: QUERY 120: Find the actor with the most number of films
02:47  INFO: ================
02:48  INFO: ================
02:48  INFO: QUERY 108: How many actors are in the movie "Saving Private Ryan"?
02:48  INFO: ================
02:49  INFO: ================
02:49  INFO: QUERY 34: Find all actors who were born in "New York City" in 1984
02:49  INFO: ================
02:51  INFO: ================
02:51  INFO: QUERY 19: Who is the director of the movie "Catch Me If You Can"?
02:51  INFO: ================
02:53  INFO: ================
02:53  INFO: QUERY 59: Find all the female actors from Austin
02:53  INFO: ================
02:56  INFO: ================
02:56  INFO: QUERY 32: What company produced the movie "Juno"?
02:56  INFO: ================
724. ROOT: ROOT; NA; ; (0) 
725. produced: NT; NA; ; (0) made_by(0.74):| directed_by(0.69):| producer.name(0.68):| producer(0.68):| cast.role(0.63):| cast(0.63):| written_by(0.63):| 
726. company: NT; NA; ; (0) company.name(1.0):| company(1.0):| movie.title(0.95):Company; Company; Company; | cast.role(0.95):Company; Company; Company; | keyword.keyword(0.95):company; company-k; it-company; | tv_series.title(0.82):X Company; Eco Company; Company and Co; | actor.name(0.74):Eva Company; Angel Company; Marc Company; | 
727. What: CMT; NA; ; (0) 
728. Juno: VTTEXT; NA; ; (0) movie.title(1.0):Juno; Juno; Jeni, Juno; | actor.name(1.0):Juno; Juno Leung; Juno Mak; | company.name(1.0):Juno; Juno; Juno Pix; | cast.role(0.83):Juno Luno; Juno Luno; Juno Luno; | director.name(0.65):Juno Mak; Juno Lee; Juno Doran; | producer.name(0.65):Juno Mak; Juno Lee; Juno Leed; | writer.name(0.65):Juno Mak; Juno Jakob; Peter Juno; | 
729. movie: NT; NA; ; (0) movie.title(1.0):| movie(1.0):| cast.role(0.95):Movie; Movie F; Movie AD; | company.name(0.95):Movie; Movies; Movie Movie; | keyword.keyword(0.83):movie-in-movie; b-movie; z-movie; | actor.name(0.76):| actor(0.76):| 
What, WDT
company, NN
produced, VBD
the, DT
movie, NN
Juno, NNP
det(company-2, What-1)
nsubj(produced-3, company-2)
root(ROOT-0, produced-3)
det(movie-5, the-4)
nsubj(Juno-6, movie-5)
xcomp(produced-3, Juno-6)

PARSE TREE:(724) ROOT ROOT
    (727) What CMT
        (726) company NT
            (725) produced NT
                (728) Juno VTTEXT
                    (729) movie NT


===========
TRANSLATIONS
===========
TOT: 0.9342336181994495; NL: 0.9126261813556491; NL+AG: 0.966581842152465; NL+QF: 0.9342336181994495; rels: [movie,directed_by]; projs: [company_0.name]; preds: [movie_0.title = "Juno"]; havings: []; superlative: []; blanks: 0
TOT: 0.9342336181994495; NL: 0.9126261813556491; NL+AG: 0.966581842152465; NL+QF: 0.9342336181994495; rels: [movie,directed_by]; projs: [company_0.name]; preds: [actor_0.name = "Juno"]; havings: []; superlative: []; blanks: 0
TOT: 0.9342336181994495; NL: 0.9126261813556491; NL+AG: 0.966581842152465; NL+QF: 0.9342336181994495; rels: [movie,directed_by]; projs: [company_0.name]; preds: [company_0.name = "Juno"]; havings: []; superlative: []; blanks: 0
TOT: 0.9282851983280498; NL: 0.9282851983280498; NL+AG: 0.966581842152465; NL+QF: 0.9282851983280498; rels: [made_by,movie]; projs: [company_0.name]; preds: [movie_0.title = "Juno"]; havings: []; superlative: []; blanks: 0
TOT: 0.9282851983280498; NL: 0.9282851983280498; NL+AG: 0.966581842152465; NL+QF: 0.9282851983280498; rels: [made_by,movie]; projs: [company_0.name]; preds: [actor_0.name = "Juno"]; havings: []; superlative: []; blanks: 0
TOT: 0.9282851983280498; NL: 0.9282851983280498; NL+AG: 0.966581842152465; NL+QF: 0.9282851983280498; rels: [made_by,movie]; projs: [company_0.name]; preds: [company_0.name = "Juno"]; havings: []; superlative: []; blanks: 0
TOT: 0.9073176753710547; NL: 0.9073176753710547; NL+AG: 0.966581842152465; NL+QF: 0.9073176753710547; rels: [producer,movie]; projs: [company_0.name]; preds: [movie_0.title = "Juno"]; havings: []; superlative: []; blanks: 0
TOT: 0.9073176753710547; NL: 0.9073176753710547; NL+AG: 0.966581842152465; NL+QF: 0.9073176753710547; rels: [producer,movie]; projs: [company_0.name]; preds: [actor_0.name = "Juno"]; havings: []; superlative: []; blanks: 0
TOT: 0.9073176753710547; NL: 0.9073176753710547; NL+AG: 0.966581842152465; NL+QF: 0.9073176753710547; rels: [producer,movie]; projs: [company_0.name]; preds: [company_0.name = "Juno"]; havings: []; superlative: []; blanks: 0
TOT: 0.9018545158225247; NL: 0.8209105280540218; NL+AG: 0.942763618984786; NL+QF: 0.9018545158225247; rels: [movie,directed_by]; projs: [company_0.name]; preds: [director_0.name = "Juno Mak"]; havings: []; superlative: []; blanks: 0
TOT: 0.8979007600118484; NL: 0.8979007600118484; NL+AG: 0.966581842152465; NL+QF: 0.8979007600118484; rels: [movie]; projs: [company_0.name]; preds: [movie_0.title = "Juno"]; havings: []; superlative: []; blanks: 1
TOT: 0.8979007600118484; NL: 0.8979007600118484; NL+AG: 0.966581842152465; NL+QF: 0.8979007600118484; rels: [movie]; projs: [company_0.name]; preds: [actor_0.name = "Juno"]; havings: []; superlative: []; blanks: 1
TOT: 0.8979007600118484; NL: 0.8979007600118484; NL+AG: 0.966581842152465; NL+QF: 0.8979007600118484; rels: [movie]; projs: [company_0.name]; preds: [company_0.name = "Juno"]; havings: []; superlative: []; blanks: 1

===========
RESULTS
===========
TOT: 0.8435390457782086; TR: 0.9342336181994495; QF: 0.055555555555555546; select company_0.name from company as company_0, copyright as copyright_0, directed_by as directed_by_0, directed_by as directed_by_1, director as director_0, movie as movie_0, tv_series as tv_series_0 where movie_0.title = "Juno" and company_0.id = copyright_0.cid and copyright_0.msid = tv_series_0.sid and directed_by_0.did = director_0.did and directed_by_0.msid = tv_series_0.sid and directed_by_1.did = director_0.did and directed_by_1.msid = movie_0.mid
TOT: 0.8418278053317484; TR: 0.8979007600118484; QF: 0.2222222222222222; select company_0.name from company as company_0, copyright as copyright_0, movie as movie_0 where movie_0.title = "Juno" and company_0.id = copyright_0.cid and copyright_0.msid = movie_0.mid
TOT: 0.837768603173233; TR: 0.9282851983280498; QF: 0.023809523809523808; select company_0.name from company as company_0, copyright as copyright_0, made_by as made_by_0, made_by as made_by_1, movie as movie_0, producer as producer_0, tv_series as tv_series_0 where movie_0.title = "Juno" and company_0.id = copyright_0.cid and copyright_0.msid = tv_series_0.sid and made_by_0.msid = tv_series_0.sid and made_by_0.pid = producer_0.pid and made_by_1.msid = movie_0.mid and made_by_1.pid = producer_0.pid
TOT: 0.8269710718753907; TR: 0.9018545158225247; QF: 0.14999999999999997; select company_0.name from company as company_0, copyright as copyright_0, directed_by as directed_by_0, director as director_0, movie as movie_0 where director_0.name = "Juno Mak" and company_0.id = copyright_0.cid and copyright_0.msid = movie_0.mid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid
TOT: 0.8231416294363157; TR: 0.8979007600118484; QF: 0.12916666666666665; select company_0.name from actor as actor_0, cast as cast_0, company as company_0, copyright as copyright_0, movie as movie_0 where actor_0.name = "Juno" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and company_0.id = copyright_0.cid and copyright_0.msid = movie_0.mid
TOT: 0.8217353794363157; TR: 0.8979007600118484; QF: 0.06666666666666667; select company_0.name from company as company_0, company as company_1, copyright as copyright_0, copyright as copyright_1, movie as movie_0 where company_1.name = "Juno" and company_0.id = copyright_0.cid and company_1.id = copyright_1.cid and copyright_0.msid = movie_0.mid and copyright_1.msid = movie_0.mid
TOT: 0.8125579020330332; TR: 0.8979007600118484; QF: 0.05119047619047619; select company_0.name from actor as actor_0, cast as cast_0, cast as cast_1, company as company_0, copyright as copyright_0, movie as movie_0, tv_series as tv_series_0 where movie_0.title = "Juno" and actor_0.aid = cast_0.aid and actor_0.aid = cast_1.aid and cast_0.msid = tv_series_0.sid and cast_1.msid = movie_0.mid and company_0.id = copyright_0.cid and copyright_0.msid = tv_series_0.sid
TOT: 0.8119418306044618; TR: 0.8979007600118484; QF: 0.023809523809523808; select company_0.name from company as company_0, copyright as copyright_0, movie as movie_0, tv_series as tv_series_0, writer as writer_0, written_by as written_by_0, written_by as written_by_1 where movie_0.title = "Juno" and company_0.id = copyright_0.cid and copyright_0.msid = tv_series_0.sid and movie_0.mid = written_by_1.msid and tv_series_0.sid = written_by_0.msid and writer_0.wid = written_by_0.wid and writer_0.wid = written_by_1.wid
TOT: 0.8119418306044618; TR: 0.8979007600118484; QF: 0.023809523809523808; select company_0.name from company as company_0, copyright as copyright_0, keyword as keyword_0, movie as movie_0, tags as tags_0, tags as tags_1, tv_series as tv_series_0 where movie_0.title = "Juno" and company_0.id = copyright_0.cid and copyright_0.msid = tv_series_0.sid and keyword_0.id = tags_0.kid and keyword_0.id = tags_1.kid and movie_0.mid = tags_1.msid and tags_0.msid = tv_series_0.sid
TOT: 0.8119418306044618; TR: 0.8979007600118484; QF: 0.023809523809523808; select company_0.name from classification as classification_0, classification as classification_1, company as company_0, copyright as copyright_0, genre as genre_0, movie as movie_0, tv_series as tv_series_0 where movie_0.title = "Juno" and classification_0.gid = genre_0.gid and classification_0.msid = tv_series_0.sid and classification_1.gid = genre_0.gid and classification_1.msid = movie_0.mid and company_0.id = copyright_0.cid and copyright_0.msid = tv_series_0.sid


02:57  INFO: ================
02:57  INFO: QUERY 7: In what year was "Benedict Cumberbatch" born
02:57  INFO: ================
02:58  INFO: ================
02:58  INFO: QUERY 11: Where is the birthplace of "Kevin Spacey"
02:58  INFO: ================
03:00  INFO: ================
03:00  INFO: QUERY 66: Who is the actor playing "Alan Turing" in "The Imitation Game"?
03:00  INFO: ================
748. ROOT: ROOT; NA; ; (0) 
749. Who: CMT; NA; ; (0) 
751. Alan Turing: VTTEXT; NA; ; (0) cast.role(1.0):Alan Turing; Alan Turing; Alana Turing; | movie.title(0.79):Decoding Alan Turing; Decoding Alan Turing; Dear Alan: A Tribute; | director.name(0.76):Allen Turing; Alan Tang; Alan Tang; | actor.name(0.76):Allen Turing; Alan King; Alan King; | writer.name(0.76):Allen Turing; Alan Tang; Alan Tang; | producer.name(0.7):Alan Tang; Alan Tang; Alan King; | company.name(0.63):Allan Alan Pictures; Allan Alan Pictures; Alan Trading Company; | 
753. actor: NT; NA; ; (0) actor.name(1.0):| actor(1.0):| movie.title(0.95):Actor; Actor; Actor; | tv_series.title(0.95):Actor; Actors; The Actor Factor; | cast.role(0.95):Actors; Actors; Actors; | keyword.keyword(0.95):actors; actor-director; ex-actor; | movie.title(0.76):| 
754. playing: VTTEXT; NA; ; (0) movie.title(0.95):Playing; Playing; Playing 25; | cast.role(0.95):playing; Playing; Playing; | keyword.keyword(0.95):playing; playing-gin; playing-go; | tv_series.title(0.7):Playing Dead; Multi Playing; Playing Hooky; | tv_series.num_of_seasons(0.68):| movie.title_aka(0.66):| tv_series.title_aka(0.66):| 
755. The Imitation Game: VTTEXT; NA; ; (0) movie.title(1.0):The Imitation Game; The Imitation Game; The Imitation Game; | cast.role(0.84):The Imitation Game &; The Imitation Game &; The Imitation Game &; | tv_series.title(0.74):The Temptation Game; The Game; The Game; | keyword.keyword(0.69):imitation; imitation; camel-imitation; | company.name(0.67):Game Station, the; Game Station; Imagination Games; | actor.name(0.64):The Game; The Game; Simon Game; | producer.name(0.64):The Game; The Game; Simon Game; | 
Who, WP
is, VBZ
the, DT
actor, NN
playing, NN
Alan Turing, NN
in, IN
The Imitation Game, NNP
root(ROOT-0, Who-1)
cop(Who-1, is-2)
det(Alan Turing-6, the-3)
compound(Alan Turing-6, actor-4)
compound(Alan Turing-6, playing-5)
nsubj(Who-1, Alan Turing-6)
case(The Imitation Game-8, in-7)
nmod(Alan Turing-6, The Imitation Game-8)

PARSE TREE:(748) ROOT ROOT
    (749) Who CMT
        (751) Alan Turing VTTEXT
            (753) actor NT
            (754) playing VTTEXT
            (755) The Imitation Game VTTEXT


===========
TRANSLATIONS
===========
TOT: 0.839125174031199; NL: 0.839125174031199; NL+AG: 0.9370478431708781; NL+QF: 0.839125174031199; rels: []; projs: [actor_0.aid]; preds: [actor_0.name = "Allen Turing",movie_0.title = "The Imitation Game"]; havings: []; superlative: []; blanks: 1
TOT: 0.83406525103395; NL: 0.7228736276644114; NL+AG: 0.9347270555952513; NL+QF: 0.83406525103395; rels: []; projs: [actor_0.name]; preds: [cast_0.role = "Alan Turing",cast_0.role = "The Imitation Game & Selma"]; havings: []; superlative: []; blanks: 1
TOT: 0.8113449257895087; NL: 0.7550415303475492; NL+AG: 0.9526353085710749; NL+QF: 0.8113449257895087; rels: []; projs: [actor_0.name]; preds: [cast_0.role = "Alan Turing",movie_0.title = "The Imitation Game"]; havings: []; superlative: []; blanks: 1
TOT: 0.8106083969220583; NL: 0.6683553734916184; NL+AG: 0.9539260136854839; NL+QF: 0.8106083969220583; rels: []; projs: [actor_0.name]; preds: [cast_0.role = "Alan Turing",cast_0.role = "playing",cast_0.role = "The Imitation Game & Selma"]; havings: []; superlative: []; blanks: 0
TOT: 0.8085129631249097; NL: 0.6980972118841674; NL+AG: 0.9707079544146425; NL+QF: 0.8085129631249097; rels: []; projs: [actor_0.name]; preds: [cast_0.role = "Alan Turing",cast_0.role = "playing",movie_0.title = "The Imitation Game"]; havings: []; superlative: []; blanks: 0
TOT: 0.803374959172446; NL: 0.803374959172446; NL+AG: 0.912151489047044; NL+QF: 0.803374959172446; rels: []; projs: [actor_0.aid]; preds: [actor_0.name = "Allen Turing",cast_0.role = "The Imitation Game & Selma"]; havings: []; superlative: []; blanks: 1
TOT: 0.798706103448217; NL: 0.798706103448217; NL+AG: 0.9058946798781093; NL+QF: 0.798706103448217; rels: []; projs: [movie_0.mid]; preds: [movie_0.title = "Decoding Alan Turing",movie_0.title = "The Imitation Game"]; havings: []; superlative: []; blanks: 1
TOT: 0.7791075447937607; NL: 0.7791075447937607; NL+AG: 0.9058946798781095; NL+QF: 0.7791075447937607; rels: []; projs: [actor_0.aid]; preds: [actor_0.name = "Allen Turing",tv_series_0.title = "The Temptation Game"]; havings: []; superlative: []; blanks: 1
TOT: 0.7758393689196864; NL: 0.7758393689196864; NL+AG: 0.9357307115480753; NL+QF: 0.7758393689196864; rels: []; projs: [actor_0.aid]; preds: [actor_0.name = "Allen Turing",movie_0.title = "Playing",movie_0.title = "The Imitation Game"]; havings: []; superlative: []; blanks: 0
TOT: 0.7758393689196864; NL: 0.7758393689196864; NL+AG: 0.9357307115480753; NL+QF: 0.7758393689196864; rels: []; projs: [actor_0.aid]; preds: [actor_0.name = "Allen Turing",cast_0.role = "playing",movie_0.title = "The Imitation Game"]; havings: []; superlative: []; blanks: 0
TOT: 0.7758393689196864; NL: 0.7758393689196864; NL+AG: 0.9357307115480753; NL+QF: 0.7758393689196864; rels: []; projs: [actor_0.aid]; preds: [actor_0.name = "Allen Turing",keyword_0.keyword = "playing",movie_0.title = "The Imitation Game"]; havings: []; superlative: []; blanks: 0

===========
RESULTS
===========
TOT: 0.7915560572481964; TR: 0.839125174031199; QF: 0.20833333333333334; select actor_0.aid from actor as actor_0, cast as cast_0, movie as movie_0 where actor_0.name = "Allen Turing" and movie_0.title = "The Imitation Game" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid
TOT: 0.7853801227005348; TR: 0.83406525103395; QF: 0.125; select actor_0.name from actor as actor_0, cast as cast_0, cast as cast_1 where cast_0.role = "Alan Turing" and cast_1.role = "The Imitation Game & Selma" and actor_0.aid = cast_0.aid and actor_0.aid = cast_1.aid
TOT: 0.7814623298978638; TR: 0.803374959172446; QF: 0.375; select actor_0.aid from actor as actor_0, cast as cast_0 where actor_0.name = "Allen Turing" and cast_0.role = "The Imitation Game & Selma" and actor_0.aid = cast_0.aid
TOT: 0.7750492133788575; TR: 0.83406525103395; QF: 0.10416666666666667; select actor_0.name from actor as actor_0, cast as cast_0, cast as cast_1, movie as movie_0 where cast_0.role = "Alan Turing" and cast_1.role = "The Imitation Game & Selma" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and cast_1.msid = movie_0.mid
TOT: 0.7750492133788575; TR: 0.83406525103395; QF: 0.10416666666666667; select actor_0.name from actor as actor_0, cast as cast_0, cast as cast_1, movie as movie_0 where cast_0.role = "The Imitation Game & Selma" and cast_1.role = "Alan Turing" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and cast_1.msid = movie_0.mid
TOT: 0.7748617133788575; TR: 0.83406525103395; QF: 0.09583333333333333; select actor_0.name from actor as actor_0, cast as cast_0, cast as cast_1, tv_series as tv_series_0 where cast_0.role = "The Imitation Game & Selma" and cast_1.role = "Alan Turing" and actor_0.aid = cast_0.aid and cast_0.msid = tv_series_0.sid and cast_1.msid = tv_series_0.sid
TOT: 0.7748617133788575; TR: 0.83406525103395; QF: 0.09583333333333333; select actor_0.name from actor as actor_0, cast as cast_0, cast as cast_1, tv_series as tv_series_0 where cast_0.role = "Alan Turing" and cast_1.role = "The Imitation Game & Selma" and actor_0.aid = cast_0.aid and cast_0.msid = tv_series_0.sid and cast_1.msid = tv_series_0.sid
TOT: 0.7679428462427597; TR: 0.8113449257895087; QF: 0.20833333333333334; select actor_0.name from actor as actor_0, cast as cast_0, movie as movie_0 where cast_0.role = "Alan Turing" and movie_0.title = "The Imitation Game" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid
TOT: 0.7629557968066242; TR: 0.839125174031199; QF: 0.06706349206349206; select actor_0.aid from actor as actor_0, cast as cast_0, directed_by as directed_by_0, directed_by as directed_by_1, director as director_0, movie as movie_0, tv_series as tv_series_0 where actor_0.name = "Allen Turing" and movie_0.title = "The Imitation Game" and actor_0.aid = cast_0.aid and cast_0.msid = tv_series_0.sid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and directed_by_1.did = director_0.did and directed_by_1.msid = tv_series_0.sid
TOT: 0.7627772253780528; TR: 0.839125174031199; QF: 0.05912698412698413; select actor_0.aid from actor as actor_0, cast as cast_0, company as company_0, copyright as copyright_0, copyright as copyright_1, movie as movie_0, tv_series as tv_series_0 where actor_0.name = "Allen Turing" and movie_0.title = "The Imitation Game" and actor_0.aid = cast_0.aid and cast_0.msid = tv_series_0.sid and company_0.id = copyright_0.cid and company_0.id = copyright_1.cid and copyright_0.msid = movie_0.mid and copyright_1.msid = tv_series_0.sid


03:04  INFO: ================
03:04  INFO: QUERY 109: How many movies did "Shahab Hosseini" act in
03:04  INFO: ================
03:04  INFO: ================
03:04  INFO: QUERY 103: How many movies did "Quentin Tarantino" direct before 2002 and after 2010?
03:04  INFO: ================
767. ROOT: ROOT; NA; ; (0) 
768. direct: NT; NA; ; (0) directed_by(1.0):| director.name(0.72):| director(0.72):| written_by(0.68):| cast.role(0.67):| cast(0.67):| made_by(0.67):| 
769. movies: NT; NA; ; (0) movie.title(1.0):| movie(1.0):| cast.role(0.95):Movie; Movie F; Movie AD; | company.name(0.95):Movies; Movie; Movie Movie; | tv_series.title(0.84):Movies, Movies, Movi; Movie Mob; Moon Movies; | keyword.keyword(0.83):movie-in-movie; movies-about-movies; b-movie; | actor.name(0.76):| 
771. How many: CMT; count; ; (0) 
773. Quentin Tarantino: VTTEXT; NA; ; (0) director.name(1.0):Quentin Tarantino; Quentin Tarantino; Quentin Tarrantino; | actor.name(1.0):Quentin Tarantino; Quentin Tarantino; Quentin Tarrantino; | producer.name(1.0):Quentin Tarantino; Quentin Tarantino; Quentin Tarrantino; | writer.name(1.0):Quentin Tarantino; Quentin Tarantino; Quentin Tarrantino; | cast.role(0.85):Quentin Tarrantino '; Quentin Tarrantino '; Quentin Tarrantino '; | movie.title(0.84):21 Years: Quentin Ta; 21 Years: Quentin Ta; Quentin Tarantino's ; | writer.birth_city(0.74):San Quentin; San Quentin; Saint-Quentin; | 
774. 2002: VTNUM; NA; ; (0) movie.release_year(1.0):1963; 1971; 1913; | director.birth_year(1.0):1927; 1958; 1924; | tv_series.release_year(1.0):1987; 1991; 1968; | actor.birth_year(1.0):1935; 1958; 1924; | producer.birth_year(1.0):1926; 1964; 1985; | writer.birth_year(1.0):1955; 1926; 1985; | 
775. before: OT; <; ; (0) 
777. 2010: VTNUM; NA; ; (0) movie.release_year(1.0):2012; 2014; 2015; | tv_series.release_year(1.0):2014; 2014; 2013; | actor.birth_year(1.0):2011; 2013; 2013; | 
778. after: OT; >; ; (0) 
How, WRB
many, JJ
movies, NNS
did, VBD
Quentin Tarantino, NNP
direct, VB
before, IN
2002, CD
and, CC
after, IN
2010, CD
advmod(many-2, How-1)
amod(movies-3, many-2)
dobj(direct-6, movies-3)
aux(direct-6, did-4)
nsubj(direct-6, Quentin Tarantino-5)
root(ROOT-0, direct-6)
case(2002-8, before-7)
nmod(direct-6, 2002-8)
cc(2002-8, and-9)
case(2010-11, after-10)
conj(2002-8, 2010-11)

PARSE TREE:(767) ROOT ROOT
    (771) How many CMT
        (769) movies NT
            (768) direct NT
                (773) Quentin Tarantino VTTEXT
                (774) 2002 VTNUM
                    (775) before OT
                (777) 2010 VTNUM
                    (778) after OT


===========
TRANSLATIONS
===========
TOT: 0.920066463578981; NL: 0.920066463578981; NL+AG: 0.9625; NL+QF: 0.920066463578981; rels: []; projs: [count(distinct(movie_0.title))]; preds: [director_0.name = "Quentin Tarantino",movie_0.release_year > 2010]; havings: [count(distinct(director_0.name)) < 2002]; superlative: []; blanks: 0
TOT: 0.920066463578981; NL: 0.920066463578981; NL+AG: 0.9625; NL+QF: 0.920066463578981; rels: []; projs: [count(distinct(movie_0.title))]; preds: [director_0.name = "Quentin Tarantino",tv_series_0.release_year > 2010]; havings: [count(distinct(director_0.name)) < 2002]; superlative: []; blanks: 0
TOT: 0.920066463578981; NL: 0.920066463578981; NL+AG: 0.9625; NL+QF: 0.920066463578981; rels: []; projs: [count(distinct(movie_0.title))]; preds: [director_0.name = "Quentin Tarantino",actor_0.birth_year > 2010]; havings: [count(distinct(director_0.name)) < 2002]; superlative: []; blanks: 0
TOT: 0.920066463578981; NL: 0.920066463578981; NL+AG: 0.9625; NL+QF: 0.920066463578981; rels: []; projs: [count(distinct(movie_0.title))]; preds: [actor_0.name = "Quentin Tarantino",movie_0.release_year > 2010]; havings: [count(distinct(director_0.name)) < 2002]; superlative: []; blanks: 0
TOT: 0.920066463578981; NL: 0.920066463578981; NL+AG: 0.9625; NL+QF: 0.920066463578981; rels: []; projs: [count(distinct(movie_0.title))]; preds: [actor_0.name = "Quentin Tarantino",tv_series_0.release_year > 2010]; havings: [count(distinct(director_0.name)) < 2002]; superlative: []; blanks: 0
TOT: 0.920066463578981; NL: 0.920066463578981; NL+AG: 0.9625; NL+QF: 0.920066463578981; rels: []; projs: [count(distinct(movie_0.title))]; preds: [actor_0.name = "Quentin Tarantino",actor_0.birth_year > 2010]; havings: [count(distinct(director_0.name)) < 2002]; superlative: []; blanks: 0
TOT: 0.920066463578981; NL: 0.920066463578981; NL+AG: 0.9625; NL+QF: 0.920066463578981; rels: []; projs: [count(distinct(movie_0.title))]; preds: [producer_0.name = "Quentin Tarantino",movie_0.release_year > 2010]; havings: [count(distinct(director_0.name)) < 2002]; superlative: []; blanks: 0
TOT: 0.920066463578981; NL: 0.920066463578981; NL+AG: 0.9625; NL+QF: 0.920066463578981; rels: []; projs: [count(distinct(movie_0.title))]; preds: [producer_0.name = "Quentin Tarantino",tv_series_0.release_year > 2010]; havings: [count(distinct(director_0.name)) < 2002]; superlative: []; blanks: 0
TOT: 0.920066463578981; NL: 0.920066463578981; NL+AG: 0.9625; NL+QF: 0.920066463578981; rels: []; projs: [count(distinct(movie_0.title))]; preds: [producer_0.name = "Quentin Tarantino",actor_0.birth_year > 2010]; havings: [count(distinct(director_0.name)) < 2002]; superlative: []; blanks: 0
TOT: 0.920066463578981; NL: 0.920066463578981; NL+AG: 0.9625; NL+QF: 0.920066463578981; rels: []; projs: [count(distinct(movie_0.title))]; preds: [writer_0.name = "Quentin Tarantino",movie_0.release_year > 2010]; havings: [count(distinct(director_0.name)) < 2002]; superlative: []; blanks: 0
TOT: 0.920066463578981; NL: 0.920066463578981; NL+AG: 0.9625; NL+QF: 0.920066463578981; rels: []; projs: [count(distinct(movie_0.title))]; preds: [writer_0.name = "Quentin Tarantino",tv_series_0.release_year > 2010]; havings: [count(distinct(director_0.name)) < 2002]; superlative: []; blanks: 0
TOT: 0.920066463578981; NL: 0.920066463578981; NL+AG: 0.9625; NL+QF: 0.920066463578981; rels: []; projs: [count(distinct(movie_0.title))]; preds: [writer_0.name = "Quentin Tarantino",actor_0.birth_year > 2010]; havings: [count(distinct(director_0.name)) < 2002]; superlative: []; blanks: 0

===========
RESULTS
===========
TOT: 0.8423574774683785; TR: 0.920066463578981; QF: 0.14583333333333331; select count(*) from (select movie_0.title from actor as actor_0, cast as cast_0, directed_by as directed_by_0, director as director_0, movie as movie_0 where actor_0.name = "Quentin Tarantino" and movie_0.release_year > 2010 and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid group by movie_0.title having count(distinct(director_0.name)) < 2002) as subquery
TOT: 0.8423574774683785; TR: 0.920066463578981; QF: 0.14583333333333331; select count(*) from (select movie_0.title from actor as actor_0, cast as cast_0, directed_by as directed_by_0, director as director_0, movie as movie_0 where actor_0.birth_year > 2010 and actor_0.name = "Quentin Tarantino" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid group by movie_0.title having count(distinct(director_0.name)) < 2002) as subquery
TOT: 0.8409512274683785; TR: 0.920066463578981; QF: 0.08333333333333333; select count(*) from (select movie_0.title from directed_by as directed_by_0, director as director_0, made_by as made_by_0, movie as movie_0, producer as producer_0 where movie_0.release_year > 2010 and producer_0.name = "Quentin Tarantino" and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid group by movie_0.title having count(distinct(director_0.name)) < 2002) as subquery
TOT: 0.8409512274683785; TR: 0.920066463578981; QF: 0.08333333333333333; select count(*) from (select movie_0.title from directed_by as directed_by_0, directed_by as directed_by_1, director as director_0, director as director_1, movie as movie_0 where director_0.name = "Quentin Tarantino" and movie_0.release_year > 2010 and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and directed_by_1.did = director_1.did and directed_by_1.msid = movie_0.mid group by movie_0.title having count(distinct(director_1.name)) < 2002) as subquery
TOT: 0.8409512274683785; TR: 0.920066463578981; QF: 0.08333333333333333; select count(*) from (select movie_0.title from directed_by as directed_by_0, director as director_0, movie as movie_0, writer as writer_0, written_by as written_by_0 where movie_0.release_year > 2010 and writer_0.name = "Quentin Tarantino" and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and movie_0.mid = written_by_0.msid and writer_0.wid = written_by_0.wid group by movie_0.title having count(distinct(director_0.name)) < 2002) as subquery
TOT: 0.8318094643508103; TR: 0.920066463578981; QF: 0.06944444444444445; select count(*) from (select movie_0.title from actor as actor_0, cast as cast_0, directed_by as directed_by_0, directed_by as directed_by_1, director as director_0, movie as movie_0, tv_series as tv_series_0 where actor_0.name = "Quentin Tarantino" and tv_series_0.release_year > 2010 and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and directed_by_1.did = director_0.did and directed_by_1.msid = tv_series_0.sid group by movie_0.title having count(distinct(director_0.name)) < 2002) as subquery
TOT: 0.8318094643508103; TR: 0.920066463578981; QF: 0.06944444444444445; select count(*) from (select movie_0.title from actor as actor_0, cast as cast_0, directed_by as directed_by_0, director as director_0, made_by as made_by_0, movie as movie_0, producer as producer_0 where actor_0.birth_year > 2010 and producer_0.name = "Quentin Tarantino" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid group by movie_0.title having count(distinct(director_0.name)) < 2002) as subquery
TOT: 0.8318094643508103; TR: 0.920066463578981; QF: 0.06944444444444445; select count(*) from (select movie_0.title from actor as actor_0, cast as cast_0, directed_by as directed_by_0, directed_by as directed_by_1, director as director_0, director as director_1, movie as movie_0 where actor_0.birth_year > 2010 and director_0.name = "Quentin Tarantino" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and directed_by_1.did = director_1.did and directed_by_1.msid = movie_0.mid group by movie_0.title having count(distinct(director_1.name)) < 2002) as subquery
TOT: 0.8318094643508103; TR: 0.920066463578981; QF: 0.06944444444444445; select count(*) from (select movie_0.title from actor as actor_0, cast as cast_0, cast as cast_1, directed_by as directed_by_0, director as director_0, movie as movie_0, tv_series as tv_series_0 where actor_0.name = "Quentin Tarantino" and tv_series_0.release_year > 2010 and actor_0.aid = cast_0.aid and actor_0.aid = cast_1.aid and cast_0.msid = movie_0.mid and cast_1.msid = tv_series_0.sid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid group by movie_0.title having count(distinct(director_0.name)) < 2002) as subquery
TOT: 0.8318094643508103; TR: 0.920066463578981; QF: 0.06944444444444445; select count(*) from (select movie_0.title from actor as actor_0, cast as cast_0, directed_by as directed_by_0, director as director_0, movie as movie_0, writer as writer_0, written_by as written_by_0 where actor_0.birth_year > 2010 and writer_0.name = "Quentin Tarantino" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and movie_0.mid = written_by_0.msid and writer_0.wid = written_by_0.wid group by movie_0.title having count(distinct(director_0.name)) < 2002) as subquery


03:07  INFO: ================
03:07  INFO: QUERY 77: List all the movies directed by "Asghar Farhadi" in which "Taraneh Alidoosti" played
03:07  INFO: ================
03:08  INFO: ================
03:08  INFO: QUERY 79: who acted the role of "Mr. Bean"
03:08  INFO: ================
03:09  INFO: ================
03:09  INFO: QUERY 96: What is the number of movies that "Brad Pitt" acts in per year?
03:09  INFO: ================
801. ROOT: ROOT; NA; ; (0) 
802. What: CMT; NA; ; (0) 
804. number of: FT; count; ; (0) 
806. movies: NT; NA; ; (0) movie.title(1.0):| movie(1.0):| cast.role(0.95):Movie; Movie F; Movie AD; | company.name(0.95):Movies; Movie; Movie Movie; | tv_series.title(0.84):Movies, Movies, Movi; Movie Mob; Moon Movies; | keyword.keyword(0.83):movie-in-movie; movies-about-movies; b-movie; | actor.name(0.76):| 
808. acts: NT; NA; ; (0) movie.release_year(0.63):| tv_series.release_year(0.63):| actor.name(0.62):| actor(0.62):| genre.genre(0.62):| genre(0.62):| made_by(0.61):| 
810. Brad Pitt: VTTEXT; NA; ; (0) actor.name(1.0):Brad Pitt; Brad Pitt; bRad sPitt; | cast.role(1.0):Brad Pitt'; Brad Pitt'; Brad Pitt #1; | producer.name(1.0):Brad Pitt; Brad Pitt; Mad Pitt; | director.name(0.78):Brad Pruitt; Brad Pruitt; Brad Witty; | writer.name(0.78):Brad Pruitt; Brad Pruitt; Brad Witt; | movie.title(0.72):Brad Pitt Video Port; Brad Pitt Video Port; Brad; | actor.birth_city(0.61):Brad; Brad; Pitt Meadows; | 
812. year: NT; NA; each; (0) movie.release_year(1.0):| director.birth_year(1.0):| tv_series.release_year(1.0):| actor.birth_year(1.0):| producer.birth_year(1.0):| writer.birth_year(1.0):| movie.title(0.95):Year; Years; Years; | 
What, WP
is, VBZ
the, DT
number, NN
of, IN
movies, NNS
that, IN
Brad Pitt, NNP
acts, VBZ
in, RP
per, IN
year, NN
root(ROOT-0, What-1)
cop(What-1, is-2)
det(number-4, the-3)
nsubj(What-1, number-4)
case(movies-6, of-5)
nmod(number-4, movies-6)
mark(acts-9, that-7)
nsubj(acts-9, Brad Pitt-8)
dep(movies-6, acts-9)
compound:prt(acts-9, in-10)
case(year-12, per-11)
nmod(acts-9, year-12)

PARSE TREE:(801) ROOT ROOT
    (802) What CMT
        (804) number of FT
            (806) movies NT
                (808) acts NT
                    (810) Brad Pitt VTTEXT
                    (812) year NT


===========
TRANSLATIONS
===========
TOT: 0.9174505626104981; NL: 0.9174505626104981; NL+AG: 0.9744248149088094; NL+QF: 0.9174505626104981; rels: []; projs: [movie_0.release_year,count(distinct(movie_0.title))]; preds: [actor_0.name = "Brad Pitt"]; havings: []; superlative: []; blanks: 1
TOT: 0.9174505626104981; NL: 0.9174505626104981; NL+AG: 0.9744248149088094; NL+QF: 0.9174505626104981; rels: []; projs: [director_0.birth_year,count(distinct(movie_0.title))]; preds: [actor_0.name = "Brad Pitt"]; havings: []; superlative: []; blanks: 1
TOT: 0.9174505626104981; NL: 0.9174505626104981; NL+AG: 0.9744248149088094; NL+QF: 0.9174505626104981; rels: []; projs: [tv_series_0.release_year,count(distinct(movie_0.title))]; preds: [actor_0.name = "Brad Pitt"]; havings: []; superlative: []; blanks: 1
TOT: 0.9174505626104981; NL: 0.9174505626104981; NL+AG: 0.9744248149088094; NL+QF: 0.9174505626104981; rels: []; projs: [actor_0.birth_year,count(distinct(movie_0.title))]; preds: [actor_0.name = "Brad Pitt"]; havings: []; superlative: []; blanks: 1
TOT: 0.9174505626104981; NL: 0.9174505626104981; NL+AG: 0.9744248149088094; NL+QF: 0.9174505626104981; rels: []; projs: [producer_0.birth_year,count(distinct(movie_0.title))]; preds: [actor_0.name = "Brad Pitt"]; havings: []; superlative: []; blanks: 1
TOT: 0.9174505626104981; NL: 0.9174505626104981; NL+AG: 0.9744248149088094; NL+QF: 0.9174505626104981; rels: []; projs: [writer_0.birth_year,count(distinct(movie_0.title))]; preds: [actor_0.name = "Brad Pitt"]; havings: []; superlative: []; blanks: 1
TOT: 0.9174505626104981; NL: 0.9174505626104981; NL+AG: 0.9744248149088094; NL+QF: 0.9174505626104981; rels: []; projs: [movie_0.release_year,count(distinct(movie_0.title))]; preds: [cast_0.role = "Brad Pitt'"]; havings: []; superlative: []; blanks: 1
TOT: 0.9174505626104981; NL: 0.9174505626104981; NL+AG: 0.9744248149088094; NL+QF: 0.9174505626104981; rels: []; projs: [director_0.birth_year,count(distinct(movie_0.title))]; preds: [cast_0.role = "Brad Pitt'"]; havings: []; superlative: []; blanks: 1
TOT: 0.9174505626104981; NL: 0.9174505626104981; NL+AG: 0.9744248149088094; NL+QF: 0.9174505626104981; rels: []; projs: [tv_series_0.release_year,count(distinct(movie_0.title))]; preds: [cast_0.role = "Brad Pitt'"]; havings: []; superlative: []; blanks: 1
TOT: 0.9174505626104981; NL: 0.9174505626104981; NL+AG: 0.9744248149088094; NL+QF: 0.9174505626104981; rels: []; projs: [actor_0.birth_year,count(distinct(movie_0.title))]; preds: [cast_0.role = "Brad Pitt'"]; havings: []; superlative: []; blanks: 1
TOT: 0.9174505626104981; NL: 0.9174505626104981; NL+AG: 0.9744248149088094; NL+QF: 0.9174505626104981; rels: []; projs: [producer_0.birth_year,count(distinct(movie_0.title))]; preds: [cast_0.role = "Brad Pitt'"]; havings: []; superlative: []; blanks: 1
TOT: 0.9174505626104981; NL: 0.9174505626104981; NL+AG: 0.9744248149088094; NL+QF: 0.9174505626104981; rels: []; projs: [writer_0.birth_year,count(distinct(movie_0.title))]; preds: [cast_0.role = "Brad Pitt'"]; havings: []; superlative: []; blanks: 1
TOT: 0.9174505626104981; NL: 0.9174505626104981; NL+AG: 0.9744248149088094; NL+QF: 0.9174505626104981; rels: []; projs: [movie_0.release_year,count(distinct(movie_0.title))]; preds: [producer_0.name = "Brad Pitt"]; havings: []; superlative: []; blanks: 1
TOT: 0.9174505626104981; NL: 0.9174505626104981; NL+AG: 0.9744248149088094; NL+QF: 0.9174505626104981; rels: []; projs: [director_0.birth_year,count(distinct(movie_0.title))]; preds: [producer_0.name = "Brad Pitt"]; havings: []; superlative: []; blanks: 1
TOT: 0.9174505626104981; NL: 0.9174505626104981; NL+AG: 0.9744248149088094; NL+QF: 0.9174505626104981; rels: []; projs: [tv_series_0.release_year,count(distinct(movie_0.title))]; preds: [producer_0.name = "Brad Pitt"]; havings: []; superlative: []; blanks: 1
TOT: 0.9174505626104981; NL: 0.9174505626104981; NL+AG: 0.9744248149088094; NL+QF: 0.9174505626104981; rels: []; projs: [actor_0.birth_year,count(distinct(movie_0.title))]; preds: [producer_0.name = "Brad Pitt"]; havings: []; superlative: []; blanks: 1
TOT: 0.9174505626104981; NL: 0.9174505626104981; NL+AG: 0.9744248149088094; NL+QF: 0.9174505626104981; rels: []; projs: [producer_0.birth_year,count(distinct(movie_0.title))]; preds: [producer_0.name = "Brad Pitt"]; havings: []; superlative: []; blanks: 1
TOT: 0.9174505626104981; NL: 0.9174505626104981; NL+AG: 0.9744248149088094; NL+QF: 0.9174505626104981; rels: []; projs: [writer_0.birth_year,count(distinct(movie_0.title))]; preds: [producer_0.name = "Brad Pitt"]; havings: []; superlative: []; blanks: 1

===========
RESULTS
===========
TOT: 0.8756140928202082; TR: 0.9174505626104981; QF: 0.25; select count(distinct(movie_0.title)), movie_0.release_year from cast as cast_0, movie as movie_0 where cast_0.role = "Brad Pitt'" and cast_0.msid = movie_0.mid group by movie_0.release_year
TOT: 0.8581326375406007; TR: 0.9174505626104981; QF: 0.20833333333333334; select movie_0.release_year, count(distinct(movie_0.title)) from actor as actor_0, cast as cast_0, movie as movie_0 where actor_0.name = "Brad Pitt" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid group by movie_0.release_year
TOT: 0.8581326375406007; TR: 0.9174505626104981; QF: 0.20833333333333334; select actor_0.birth_year, count(distinct(movie_0.title)) from actor as actor_0, cast as cast_0, movie as movie_0 where actor_0.name = "Brad Pitt" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid group by actor_0.birth_year
TOT: 0.8581326375406007; TR: 0.9174505626104981; QF: 0.20833333333333334; select actor_0.birth_year, count(distinct(movie_0.title)) from actor as actor_0, cast as cast_0, movie as movie_0 where cast_0.role = "Brad Pitt'" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid group by actor_0.birth_year
TOT: 0.8534451375406007; TR: 0.9174505626104981; QF: 0.0; select movie_0.release_year, count(distinct(movie_0.title)) from made_by as made_by_0, movie as movie_0, producer as producer_0 where producer_0.name = "Brad Pitt" and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid group by movie_0.release_year
TOT: 0.8534451375406007; TR: 0.9174505626104981; QF: 0.0; select producer_0.birth_year, count(distinct(movie_0.title)) from made_by as made_by_0, movie as movie_0, producer as producer_0 where producer_0.name = "Brad Pitt" and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid group by producer_0.birth_year
TOT: 0.8476454782189233; TR: 0.9174505626104981; QF: 0.18055555555555555; select count(distinct(movie_0.title)), director_0.birth_year from cast as cast_0, directed_by as directed_by_0, director as director_0, movie as movie_0 where cast_0.role = "Brad Pitt'" and cast_0.msid = movie_0.mid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid group by director_0.birth_year
TOT: 0.8445204782189234; TR: 0.9174505626104981; QF: 0.041666666666666664; select count(distinct(movie_0.title)), producer_0.birth_year from cast as cast_0, made_by as made_by_0, movie as movie_0, producer as producer_0 where cast_0.role = "Brad Pitt'" and cast_0.msid = movie_0.mid and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid group by producer_0.birth_year
TOT: 0.8445204782189234; TR: 0.9174505626104981; QF: 0.041666666666666664; select count(distinct(movie_0.title)), writer_0.birth_year from cast as cast_0, movie as movie_0, writer as writer_0, written_by as written_by_0 where cast_0.role = "Brad Pitt'" and cast_0.msid = movie_0.mid and movie_0.mid = written_by_0.msid and writer_0.wid = written_by_0.wid group by writer_0.birth_year
TOT: 0.8401339616451681; TR: 0.9174505626104981; QF: 0.14583333333333331; select director_0.birth_year, count(distinct(movie_0.title)) from actor as actor_0, cast as cast_0, directed_by as directed_by_0, director as director_0, movie as movie_0 where actor_0.name = "Brad Pitt" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid group by director_0.birth_year


03:10  INFO: ================
03:10  INFO: QUERY 104: What is the number of movies featuring "Brad Pitt"?
03:10  INFO: ================
815. ROOT: ROOT; NA; ; (0) 
816. What: CMT; NA; ; (0) 
818. number of: FT; count; ; (0) 
820. movies: NT; NA; ; (0) movie.title(1.0):| movie(1.0):| cast.role(0.95):Movie; Movie F; Movie AD; | company.name(0.95):Movies; Movie; Movie Movie; | tv_series.title(0.84):Movies, Movies, Movi; Movie Mob; Moon Movies; | keyword.keyword(0.83):movie-in-movie; movies-about-movies; b-movie; | actor.name(0.76):| 
822. featuring: NT; NA; ; (0) tv_series.title(0.69):| tv_series(0.69):| movie.release_year(0.64):| tv_series.release_year(0.64):| made_by(0.64):| movie.title_aka(0.62):| tv_series.title_aka(0.62):| 
823. Brad Pitt: VTTEXT; NA; ; (0) actor.name(1.0):Brad Pitt; Brad Pitt; bRad sPitt; | cast.role(1.0):Brad Pitt'; Brad Pitt'; Brad Pitt #1; | producer.name(1.0):Brad Pitt; Brad Pitt; Mad Pitt; | director.name(0.78):Brad Pruitt; Brad Pruitt; Brad Witty; | writer.name(0.78):Brad Pruitt; Brad Pruitt; Brad Witt; | movie.title(0.72):Brad Pitt Video Port; Brad Pitt Video Port; Brad; | actor.birth_city(0.61):Brad; Brad; Pitt Meadows; | 
What, WP
is, VBZ
the, DT
number, NN
of, IN
movies, NNS
featuring, VBG
Brad Pitt, NNP
root(ROOT-0, What-1)
cop(What-1, is-2)
det(number-4, the-3)
nsubj(What-1, number-4)
case(movies-6, of-5)
nmod(number-4, movies-6)
acl(movies-6, featuring-7)
dobj(featuring-7, Brad Pitt-8)

PARSE TREE:(815) ROOT ROOT
    (816) What CMT
        (818) number of FT
            (820) movies NT
                (822) featuring NT
                    (823) Brad Pitt VTTEXT


===========
TRANSLATIONS
===========
TOT: 0.8662391053409028; NL: 0.8662391053409028; NL+AG: 0.9623803610291506; NL+QF: 0.8662391053409028; rels: []; projs: [count(distinct(movie_0.title))]; preds: [actor_0.name = "Brad Pitt"]; havings: []; superlative: []; blanks: 1
TOT: 0.8662391053409028; NL: 0.8662391053409028; NL+AG: 0.9623803610291506; NL+QF: 0.8662391053409028; rels: []; projs: [count(distinct(movie_0.title))]; preds: [cast_0.role = "Brad Pitt'"]; havings: []; superlative: []; blanks: 1
TOT: 0.8662391053409028; NL: 0.8662391053409028; NL+AG: 0.9623803610291506; NL+QF: 0.8662391053409028; rels: []; projs: [count(distinct(movie_0.title))]; preds: [producer_0.name = "Brad Pitt"]; havings: []; superlative: []; blanks: 1
TOT: 0.8336447507355893; NL: 0.7982804026719519; NL+AG: 0.9336787348794631; NL+QF: 0.8336447507355893; rels: []; projs: [count(distinct(movie_0.title))]; preds: [director_0.name = "Brad Pruitt"]; havings: []; superlative: []; blanks: 1
TOT: 0.825204520256702; NL: 0.6999319661770427; NL+AG: 0.9623803610291506; NL+QF: 0.825204520256702; rels: [tv_series]; projs: [count(distinct(movie_0.title))]; preds: [cast_0.role = "Brad Pitt'"]; havings: []; superlative: []; blanks: 0
TOT: 0.8158628827622585; NL: 0.7099370268813557; NL+AG: 0.9047868658491508; NL+QF: 0.8158628827622585; rels: []; projs: [count(distinct(actor_0.name))]; preds: [movie_0.title = "Brad Pitt Video Portrait"]; havings: []; superlative: []; blanks: 1
TOT: 0.7982804026719519; NL: 0.7982804026719519; NL+AG: 0.9336787348794631; NL+QF: 0.7982804026719519; rels: []; projs: [count(distinct(movie_0.title))]; preds: [writer_0.name = "Brad Pruitt"]; havings: []; superlative: []; blanks: 1
TOT: 0.7912922821972069; NL: 0.7912922821972069; NL+AG: 0.9334884919988383; NL+QF: 0.7912922821972069; rels: []; projs: [count(distinct(actor_0.name))]; preds: [actor_0.name = "Brad Pitt"]; havings: []; superlative: []; blanks: 1
TOT: 0.7912922821972069; NL: 0.7912922821972069; NL+AG: 0.9334884919988383; NL+QF: 0.7912922821972069; rels: []; projs: [count(distinct(actor_0.name))]; preds: [cast_0.role = "Brad Pitt'"]; havings: []; superlative: []; blanks: 1
TOT: 0.7912922821972069; NL: 0.7912922821972069; NL+AG: 0.9334884919988383; NL+QF: 0.7912922821972069; rels: []; projs: [count(distinct(actor_0.name))]; preds: [producer_0.name = "Brad Pitt"]; havings: []; superlative: []; blanks: 1
TOT: 0.7783173787653892; NL: 0.7783173787653892; NL+AG: 0.9334884919988383; NL+QF: 0.7783173787653892; rels: []; projs: [count(distinct(tv_series_0.title))]; preds: [actor_0.name = "Brad Pitt"]; havings: []; superlative: []; blanks: 1
TOT: 0.7783173787653892; NL: 0.7783173787653892; NL+AG: 0.9334884919988383; NL+QF: 0.7783173787653892; rels: []; projs: [count(distinct(tv_series_0.title))]; preds: [cast_0.role = "Brad Pitt'"]; havings: []; superlative: []; blanks: 1
TOT: 0.7783173787653892; NL: 0.7783173787653892; NL+AG: 0.9334884919988383; NL+QF: 0.7783173787653892; rels: []; projs: [count(distinct(tv_series_0.title))]; preds: [producer_0.name = "Brad Pitt"]; havings: []; superlative: []; blanks: 1
TOT: 0.7783173787653892; NL: 0.7783173787653892; NL+AG: 0.9334884919988383; NL+QF: 0.7783173787653892; rels: []; projs: [count(distinct(tv_series_0.title))]; preds: [actor_0.name = "Brad Pitt"]; havings: []; superlative: []; blanks: 1
TOT: 0.7783173787653892; NL: 0.7783173787653892; NL+AG: 0.9334884919988383; NL+QF: 0.7783173787653892; rels: []; projs: [count(distinct(tv_series_0.title))]; preds: [cast_0.role = "Brad Pitt'"]; havings: []; superlative: []; blanks: 1
TOT: 0.7783173787653892; NL: 0.7783173787653892; NL+AG: 0.9334884919988383; NL+QF: 0.7783173787653892; rels: []; projs: [count(distinct(tv_series_0.title))]; preds: [producer_0.name = "Brad Pitt"]; havings: []; superlative: []; blanks: 1

===========
RESULTS
===========
TOT: 0.8320843541410521; TR: 0.8662391053409028; QF: 0.25; select count(distinct(movie_0.title)) from cast as cast_0, movie as movie_0 where cast_0.role = "Brad Pitt'" and cast_0.msid = movie_0.mid
TOT: 0.8146028988614445; TR: 0.8662391053409028; QF: 0.20833333333333334; select count(distinct(movie_0.title)) from actor as actor_0, cast as cast_0, movie as movie_0 where actor_0.name = "Brad Pitt" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid
TOT: 0.8099153988614446; TR: 0.8662391053409028; QF: 0.0; select count(distinct(movie_0.title)) from made_by as made_by_0, movie as movie_0, producer as producer_0 where producer_0.name = "Brad Pitt" and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid
TOT: 0.7899048965739098; TR: 0.8662391053409028; QF: 0.06888888888888887; select count(distinct(movie_0.title)) from cast as cast_0, directed_by as directed_by_0, directed_by as directed_by_1, director as director_0, movie as movie_0, tv_series as tv_series_0 where cast_0.role = "Brad Pitt'" and cast_0.msid = tv_series_0.sid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and directed_by_1.did = director_0.did and directed_by_1.msid = tv_series_0.sid
TOT: 0.7896548965739099; TR: 0.8662391053409028; QF: 0.05777777777777778; select count(distinct(movie_0.title)) from cast as cast_0, company as company_0, copyright as copyright_0, copyright as copyright_1, movie as movie_0, tv_series as tv_series_0 where cast_0.role = "Brad Pitt'" and cast_0.msid = tv_series_0.sid and company_0.id = copyright_0.cid and company_0.id = copyright_1.cid and copyright_0.msid = movie_0.mid and copyright_1.msid = tv_series_0.sid
TOT: 0.7886548965739099; TR: 0.8662391053409028; QF: 0.013333333333333334; select count(distinct(movie_0.title)) from cast as cast_0, keyword as keyword_0, movie as movie_0, tags as tags_0, tags as tags_1, tv_series as tv_series_0 where cast_0.role = "Brad Pitt'" and cast_0.msid = tv_series_0.sid and keyword_0.id = tags_0.kid and keyword_0.id = tags_1.kid and movie_0.mid = tags_0.msid and tags_1.msid = tv_series_0.sid
TOT: 0.7886548965739099; TR: 0.8662391053409028; QF: 0.013333333333333334; select count(distinct(movie_0.title)) from cast as cast_0, made_by as made_by_0, made_by as made_by_1, movie as movie_0, producer as producer_0, tv_series as tv_series_0 where cast_0.role = "Brad Pitt'" and cast_0.msid = tv_series_0.sid and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid and made_by_1.msid = tv_series_0.sid and made_by_1.pid = producer_0.pid
TOT: 0.7886548965739099; TR: 0.8662391053409028; QF: 0.013333333333333334; select count(distinct(movie_0.title)) from cast as cast_0, movie as movie_0, tv_series as tv_series_0, writer as writer_0, written_by as written_by_0, written_by as written_by_1 where cast_0.role = "Brad Pitt'" and cast_0.msid = tv_series_0.sid and movie_0.mid = written_by_0.msid and tv_series_0.sid = written_by_1.msid and writer_0.wid = written_by_0.wid and writer_0.wid = written_by_1.wid
TOT: 0.7886548965739099; TR: 0.8662391053409028; QF: 0.013333333333333334; select count(distinct(movie_0.title)) from cast as cast_0, classification as classification_0, classification as classification_1, genre as genre_0, movie as movie_0, tv_series as tv_series_0 where cast_0.role = "Brad Pitt'" and cast_0.msid = tv_series_0.sid and classification_0.gid = genre_0.gid and classification_0.msid = movie_0.mid and classification_1.gid = genre_0.gid and classification_1.msid = tv_series_0.sid
TOT: 0.7884601974469282; TR: 0.8336447507355893; QF: 0.27777777777777773; select count(distinct(movie_0.title)) from directed_by as directed_by_0, director as director_0, movie as movie_0 where director_0.name = "Brad Pruitt" and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid


03:12  INFO: ================
03:12  INFO: QUERY 12: In what city was "Kevin Spacey" born?
03:12  INFO: ================
03:13  INFO: ================
03:13  INFO: QUERY 124: Find the actors who played in the latest movie by "Quentin Tarantino"
03:13  INFO: ================
833. ROOT: ROOT; NA; ; (0) 
834. Find: CMT; NA; ; (0) 
835. actors: NT; NA; ; (0) actor.name(1.0):| actor(1.0):| movie.title(0.95):Actors; Actors; Actors; | tv_series.title(0.95):Actors; Actor; The Actor Factor; | cast.role(0.95):Actors; Actors; Actors; | keyword.keyword(0.95):actors; actor-director; no-actors; | company.name(0.79):For Actors by Actors; Actors Loft; Actors Pool; | 
837. played: NT; NA; ; (0) tv_series.num_of_seasons(0.67):| cast.role(0.66):| directed_by(0.64):| actor.name(0.63):| actor(0.63):| cast(0.63):| movie.title_aka(0.63):| 
839. movie: NT; NA; ; (0) movie.title(1.0):| movie(1.0):| cast.role(0.95):Movie; Movie F; Movie AD; | company.name(0.95):Movie; Movies; Movie Movie; | keyword.keyword(0.83):movie-in-movie; b-movie; z-movie; | actor.name(0.76):| actor(0.76):| 
842. latest: FT; max; ; (0) 
843. Quentin Tarantino: VTTEXT; NA; ; (0) director.name(1.0):Quentin Tarantino; Quentin Tarantino; Quentin Tarrantino; | actor.name(1.0):Quentin Tarantino; Quentin Tarantino; Quentin Tarrantino; | producer.name(1.0):Quentin Tarantino; Quentin Tarantino; Quentin Tarrantino; | writer.name(1.0):Quentin Tarantino; Quentin Tarantino; Quentin Tarrantino; | cast.role(0.85):Quentin Tarrantino '; Quentin Tarrantino '; Quentin Tarrantino '; | movie.title(0.84):21 Years: Quentin Ta; 21 Years: Quentin Ta; Quentin Tarantino's ; | writer.birth_city(0.74):San Quentin; San Quentin; Saint-Quentin; | 
Find, VB
the, DT
actors, NNS
who, WP
played, VBD
in, IN
the, DT
latest, JJS
movie, NN
by, IN
Quentin Tarantino, NNP
root(ROOT-0, Find-1)
det(actors-3, the-2)
dobj(Find-1, actors-3)
nsubj(played-5, who-4)
acl:relcl(actors-3, played-5)
case(movie-9, in-6)
det(movie-9, the-7)
amod(movie-9, latest-8)
nmod(played-5, movie-9)
case(Quentin Tarantino-11, by-10)
nmod(played-5, Quentin Tarantino-11)

PARSE TREE:(833) ROOT ROOT
    (834) Find CMT
        (835) actors NT
            (837) played NT
                (839) movie NT
                (843) Quentin Tarantino VTTEXT


===========
TRANSLATIONS
===========
TOT: 0.9174505626104981; NL: 0.9174505626104981; NL+AG: 0.9734002230204892; NL+QF: 0.9174505626104981; rels: []; projs: [actor_0.name]; preds: [director_0.name = "Quentin Tarantino"]; havings: []; superlative: [movie_0.title desc limit 1]; blanks: 1
TOT: 0.9174505626104981; NL: 0.9174505626104981; NL+AG: 0.9734002230204892; NL+QF: 0.9174505626104981; rels: []; projs: [actor_0.name]; preds: [actor_0.name = "Quentin Tarantino"]; havings: []; superlative: [movie_0.title desc limit 1]; blanks: 1
TOT: 0.9174505626104981; NL: 0.9174505626104981; NL+AG: 0.9734002230204892; NL+QF: 0.9174505626104981; rels: []; projs: [actor_0.name]; preds: [producer_0.name = "Quentin Tarantino"]; havings: []; superlative: [movie_0.title desc limit 1]; blanks: 1
TOT: 0.9174505626104981; NL: 0.9174505626104981; NL+AG: 0.9734002230204892; NL+QF: 0.9174505626104981; rels: []; projs: [actor_0.name]; preds: [writer_0.name = "Quentin Tarantino"]; havings: []; superlative: [movie_0.title desc limit 1]; blanks: 1
TOT: 0.8948540068891655; NL: 0.8879579826791157; NL+AG: 0.9557508540140572; NL+QF: 0.8948540068891655; rels: []; projs: [actor_0.name]; preds: [cast_0.role = "Quentin Tarrantino 'esque' Patient"]; havings: []; superlative: [movie_0.title desc limit 1]; blanks: 1
TOT: 0.8862129230052637; NL: 0.8862129230052637; NL+AG: 0.9547774891905295; NL+QF: 0.8862129230052637; rels: []; projs: [actor_0.name]; preds: [movie_0.title = "21 Years: Quentin Tarantino"]; havings: []; superlative: [movie_0.title desc limit 1]; blanks: 1
TOT: 0.8806900179000768; NL: 0.8689647470148877; NL+AG: 0.9512320693408807; NL+QF: 0.8806900179000768; rels: []; projs: [movie_0.title]; preds: [director_0.name = "Quentin Tarantino"]; havings: []; superlative: [movie_0.title desc limit 1]; blanks: 1
TOT: 0.8689647470148877; NL: 0.8689647470148877; NL+AG: 0.9512320693408807; NL+QF: 0.8689647470148877; rels: []; projs: [movie_0.title]; preds: [actor_0.name = "Quentin Tarantino"]; havings: []; superlative: [movie_0.title desc limit 1]; blanks: 1
TOT: 0.8689647470148877; NL: 0.8689647470148877; NL+AG: 0.9512320693408807; NL+QF: 0.8689647470148877; rels: []; projs: [movie_0.title]; preds: [producer_0.name = "Quentin Tarantino"]; havings: []; superlative: [movie_0.title desc limit 1]; blanks: 1
TOT: 0.8689647470148877; NL: 0.8689647470148877; NL+AG: 0.9512320693408807; NL+QF: 0.8689647470148877; rels: []; projs: [movie_0.title]; preds: [writer_0.name = "Quentin Tarantino"]; havings: []; superlative: [movie_0.title desc limit 1]; blanks: 1
TOT: 0.8675415861861546; NL: 0.8675415861861546; NL+AG: 0.9512320693408807; NL+QF: 0.8675415861861546; rels: []; projs: [cast_0.role]; preds: [director_0.name = "Quentin Tarantino"]; havings: []; superlative: [movie_0.title desc limit 1]; blanks: 1
TOT: 0.8675415861861546; NL: 0.8675415861861546; NL+AG: 0.9512320693408807; NL+QF: 0.8675415861861546; rels: []; projs: [cast_0.role]; preds: [actor_0.name = "Quentin Tarantino"]; havings: []; superlative: [movie_0.title desc limit 1]; blanks: 1
TOT: 0.8675415861861546; NL: 0.8675415861861546; NL+AG: 0.9512320693408807; NL+QF: 0.8675415861861546; rels: []; projs: [cast_0.role]; preds: [producer_0.name = "Quentin Tarantino"]; havings: []; superlative: [movie_0.title desc limit 1]; blanks: 1
TOT: 0.8675415861861546; NL: 0.8675415861861546; NL+AG: 0.9512320693408807; NL+QF: 0.8675415861861546; rels: []; projs: [cast_0.role]; preds: [writer_0.name = "Quentin Tarantino"]; havings: []; superlative: [movie_0.title desc limit 1]; blanks: 1
TOT: 0.8675415861861546; NL: 0.8675415861861546; NL+AG: 0.9512320693408807; NL+QF: 0.8675415861861546; rels: []; projs: [cast_0.role]; preds: [director_0.name = "Quentin Tarantino"]; havings: []; superlative: [movie_0.title desc limit 1]; blanks: 1
TOT: 0.8675415861861546; NL: 0.8675415861861546; NL+AG: 0.9512320693408807; NL+QF: 0.8675415861861546; rels: []; projs: [cast_0.role]; preds: [actor_0.name = "Quentin Tarantino"]; havings: []; superlative: [movie_0.title desc limit 1]; blanks: 1
TOT: 0.8675415861861546; NL: 0.8675415861861546; NL+AG: 0.9512320693408807; NL+QF: 0.8675415861861546; rels: []; projs: [cast_0.role]; preds: [producer_0.name = "Quentin Tarantino"]; havings: []; superlative: [movie_0.title desc limit 1]; blanks: 1
TOT: 0.8675415861861546; NL: 0.8675415861861546; NL+AG: 0.9512320693408807; NL+QF: 0.8675415861861546; rels: []; projs: [cast_0.role]; preds: [writer_0.name = "Quentin Tarantino"]; havings: []; superlative: [movie_0.title desc limit 1]; blanks: 1

===========
RESULTS
===========
TOT: 0.8401339616451681; TR: 0.9174505626104981; QF: 0.14583333333333331; select actor_0.name from actor as actor_0, cast as cast_0, directed_by as directed_by_0, director as director_0, movie as movie_0 where director_0.name = "Quentin Tarantino" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid order by movie_0.title desc limit 1
TOT: 0.838925565177468; TR: 0.8948540068891655; QF: 0.20833333333333334; select actor_0.name from actor as actor_0, cast as cast_0, movie as movie_0 where cast_0.role = "Quentin Tarrantino 'esque' Patient" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid order by movie_0.title desc limit 1
TOT: 0.838258961645168; TR: 0.9174505626104981; QF: 0.0625; select actor_0.name from actor as actor_0, cast as cast_0, movie as movie_0, writer as writer_0, written_by as written_by_0 where writer_0.name = "Quentin Tarantino" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and movie_0.mid = written_by_0.msid and writer_0.wid = written_by_0.wid order by movie_0.title desc limit 1
TOT: 0.838258961645168; TR: 0.9174505626104981; QF: 0.0625; select actor_0.name from actor as actor_0, cast as cast_0, made_by as made_by_0, movie as movie_0, producer as producer_0 where producer_0.name = "Quentin Tarantino" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid order by movie_0.title desc limit 1
TOT: 0.838258961645168; TR: 0.9174505626104981; QF: 0.0625; select actor_0.name from actor as actor_0, actor as actor_1, cast as cast_0, cast as cast_1, movie as movie_0 where actor_1.name = "Quentin Tarantino" and actor_0.aid = cast_0.aid and actor_1.aid = cast_1.aid and cast_0.msid = movie_0.mid and cast_1.msid = movie_0.mid order by movie_0.title desc limit 1
TOT: 0.8295323770990284; TR: 0.9174505626104981; QF: 0.06706349206349206; select actor_0.name from actor as actor_0, cast as cast_0, directed_by as directed_by_0, directed_by as directed_by_1, director as director_0, movie as movie_0, tv_series as tv_series_0 where director_0.name = "Quentin Tarantino" and actor_0.aid = cast_0.aid and cast_0.msid = tv_series_0.sid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and directed_by_1.did = director_0.did and directed_by_1.msid = tv_series_0.sid order by movie_0.title desc limit 1
TOT: 0.8294073770990285; TR: 0.9174505626104981; QF: 0.061507936507936505; select actor_0.name from actor as actor_0, cast as cast_0, cast as cast_1, directed_by as directed_by_0, director as director_0, movie as movie_0, tv_series as tv_series_0 where director_0.name = "Quentin Tarantino" and actor_0.aid = cast_0.aid and actor_0.aid = cast_1.aid and cast_0.msid = movie_0.mid and cast_1.msid = tv_series_0.sid and directed_by_0.did = director_0.did and directed_by_0.msid = tv_series_0.sid order by movie_0.title desc limit 1
TOT: 0.8286930913847427; TR: 0.9174505626104981; QF: 0.029761904761904764; select actor_1.name from actor as actor_0, actor as actor_1, cast as cast_0, cast as cast_1, cast as cast_2, movie as movie_0, tv_series as tv_series_0 where actor_0.name = "Quentin Tarantino" and actor_0.aid = cast_0.aid and actor_0.aid = cast_1.aid and actor_1.aid = cast_2.aid and cast_0.msid = movie_0.mid and cast_1.msid = tv_series_0.sid and cast_2.msid = tv_series_0.sid order by movie_0.title desc limit 1
TOT: 0.8286930913847427; TR: 0.9174505626104981; QF: 0.029761904761904764; select actor_0.name from actor as actor_0, actor as actor_1, cast as cast_0, cast as cast_1, cast as cast_2, movie as movie_0, tv_series as tv_series_0 where actor_1.name = "Quentin Tarantino" and actor_0.aid = cast_0.aid and actor_0.aid = cast_1.aid and actor_1.aid = cast_2.aid and cast_0.msid = movie_0.mid and cast_1.msid = tv_series_0.sid and cast_2.msid = tv_series_0.sid order by movie_0.title desc limit 1
TOT: 0.8286930913847427; TR: 0.9174505626104981; QF: 0.029761904761904764; select actor_0.name from actor as actor_0, cast as cast_0, cast as cast_1, made_by as made_by_0, movie as movie_0, producer as producer_0, tv_series as tv_series_0 where producer_0.name = "Quentin Tarantino" and actor_0.aid = cast_0.aid and actor_0.aid = cast_1.aid and cast_0.msid = movie_0.mid and cast_1.msid = tv_series_0.sid and made_by_0.msid = tv_series_0.sid and made_by_0.pid = producer_0.pid order by movie_0.title desc limit 1


03:15  INFO: ================
03:15  INFO: QUERY 2: What is the nationality of the actress "Ellen Page"?
03:15  INFO: ================
03:16  INFO: ================
03:16  INFO: QUERY 68: Find all movies about Iraq war
03:16  INFO: ================
856. ROOT: ROOT; NA; ; (0) 
857. Find: CMT; NA; ; (0) 
858. movies: NT; NA; all; (0) movie.title(1.0):| movie(1.0):| cast.role(0.95):Movie; Movie F; Movie AD; | company.name(0.95):Movies; Movie; Movie Movie; | tv_series.title(0.84):Movies, Movies, Movi; Movie Mob; Moon Movies; | keyword.keyword(0.83):movie-in-movie; movies-about-movies; b-movie; | actor.name(0.76):| 
860. war: VTTEXT; NA; ; (0) movie.title(0.95):Wars; Wars; Hardware Wars; | tv_series.title(0.95):War; Car Wars; War Walks; | actor.name(0.95):War; War; War; | genre.genre(0.95):War; War; Documentary; | producer.name(0.95):War; Johnny Star Wars; Vivian War; | company.name(0.95):War; War on Want; NWA War Zone; | writer.name(0.95):War; Johnny Star Wars; Men Of War; | 
862. Iraq: VTTEXT; NA; ; (0) movie.title(1.0):Iraq; Iraq; Ski Iraq; | director.nationality(1.0):Iraq; Iraq; Iraq; | actor.nationality(1.0):Iraq; Iraq; Iraq; | producer.nationality(1.0):Iraq; Iraq; Iraq; | writer.nationality(1.0):Iraq; Iraq; Iraq; | cast.role(0.8):Ira - Iraq; Iraq Vet; Iraq Veteran; | keyword.keyword(0.72):iraq-iran-war; basra-iraq; hatra-iraq; | 
Find, VB
all, DT
movies, NNS
about, IN
Iraq, NNP
war, NN
root(ROOT-0, Find-1)
det(movies-3, all-2)
dobj(Find-1, movies-3)
case(war-6, about-4)
compound(war-6, Iraq-5)
nmod(Find-1, war-6)

PARSE TREE:(856) ROOT ROOT
    (857) Find CMT
        (858) movies NT
        (860) war VTTEXT
            (862) Iraq VTTEXT


===========
TRANSLATIONS
===========
TOT: 0.9830475724915585; NL: 0.9830475724915585; NL+AG: 0.9947191844774439; NL+QF: 0.9830475724915585; rels: []; projs: [movie_0.title]; preds: [genre_0.genre = "War",movie_0.title = "Iraq"]; havings: []; superlative: []; blanks: 0
TOT: 0.9830475724915585; NL: 0.9830475724915585; NL+AG: 0.9947191844774439; NL+QF: 0.9830475724915585; rels: []; projs: [movie_0.title]; preds: [genre_0.genre = "War",director_0.nationality = "Iraq"]; havings: []; superlative: []; blanks: 0
TOT: 0.9830475724915585; NL: 0.9830475724915585; NL+AG: 0.9947191844774439; NL+QF: 0.9830475724915585; rels: []; projs: [movie_0.title]; preds: [genre_0.genre = "War",actor_0.nationality = "Iraq"]; havings: []; superlative: []; blanks: 0
TOT: 0.9830475724915585; NL: 0.9830475724915585; NL+AG: 0.9947191844774439; NL+QF: 0.9830475724915585; rels: []; projs: [movie_0.title]; preds: [genre_0.genre = "War",producer_0.nationality = "Iraq"]; havings: []; superlative: []; blanks: 0
TOT: 0.9830475724915585; NL: 0.9830475724915585; NL+AG: 0.9947191844774439; NL+QF: 0.9830475724915585; rels: []; projs: [movie_0.title]; preds: [genre_0.genre = "War",writer_0.nationality = "Iraq"]; havings: []; superlative: []; blanks: 0
TOT: 0.9128241092785631; NL: 0.9128241092785631; NL+AG: 0.9736635980475375; NL+QF: 0.9128241092785631; rels: []; projs: [movie_0.title]; preds: [genre_0.genre = "War",cast_0.role = "Ira - Iraq"]; havings: []; superlative: []; blanks: 0
TOT: 0.8979945056153297; NL: 0.8979945056153297; NL+AG: 0.9848909609505903; NL+QF: 0.8979945056153297; rels: []; projs: [actor_0.name]; preds: [genre_0.genre = "War",movie_0.title = "Iraq"]; havings: []; superlative: []; blanks: 0
TOT: 0.8979945056153297; NL: 0.8979945056153297; NL+AG: 0.9848909609505903; NL+QF: 0.8979945056153297; rels: []; projs: [actor_0.name]; preds: [genre_0.genre = "War",director_0.nationality = "Iraq"]; havings: []; superlative: []; blanks: 0
TOT: 0.8979945056153297; NL: 0.8979945056153297; NL+AG: 0.9848909609505903; NL+QF: 0.8979945056153297; rels: []; projs: [actor_0.name]; preds: [genre_0.genre = "War",actor_0.nationality = "Iraq"]; havings: []; superlative: []; blanks: 0
TOT: 0.8979945056153297; NL: 0.8979945056153297; NL+AG: 0.9848909609505903; NL+QF: 0.8979945056153297; rels: []; projs: [actor_0.name]; preds: [genre_0.genre = "War",producer_0.nationality = "Iraq"]; havings: []; superlative: []; blanks: 0
TOT: 0.8979945056153297; NL: 0.8979945056153297; NL+AG: 0.9848909609505903; NL+QF: 0.8979945056153297; rels: []; projs: [actor_0.name]; preds: [genre_0.genre = "War",writer_0.nationality = "Iraq"]; havings: []; superlative: []; blanks: 0

===========
RESULTS
===========
TOT: 0.8944851700440694; TR: 0.9830475724915585; QF: 0.08333333333333333; select movie_0.title from classification as classification_0, directed_by as directed_by_0, director as director_0, genre as genre_0, movie as movie_0 where director_0.nationality = "Iraq" and genre_0.genre = "War" and classification_0.gid = genre_0.gid and classification_0.msid = movie_0.mid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid
TOT: 0.8940164200440693; TR: 0.9830475724915585; QF: 0.0625; select movie_0.title from actor as actor_0, cast as cast_0, classification as classification_0, genre as genre_0, movie as movie_0 where actor_0.nationality = "Iraq" and genre_0.genre = "War" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and classification_0.gid = genre_0.gid and classification_0.msid = movie_0.mid
TOT: 0.8926101700440694; TR: 0.9830475724915585; QF: 0.0; select movie_0.title from classification as classification_0, genre as genre_0, made_by as made_by_0, movie as movie_0, producer as producer_0 where genre_0.genre = "War" and producer_0.nationality = "Iraq" and classification_0.gid = genre_0.gid and classification_0.msid = movie_0.mid and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid
TOT: 0.8926101700440694; TR: 0.9830475724915585; QF: 0.0; select movie_0.title from classification as classification_0, genre as genre_0, movie as movie_0, writer as writer_0, written_by as written_by_0 where genre_0.genre = "War" and writer_0.nationality = "Iraq" and classification_0.gid = genre_0.gid and classification_0.msid = movie_0.mid and movie_0.mid = written_by_0.msid and writer_0.wid = written_by_0.wid
TOT: 0.8926101700440694; TR: 0.9830475724915585; QF: 0.0; select movie_0.title from classification as classification_0, classification as classification_1, genre as genre_0, movie as movie_0, movie as movie_1 where genre_0.genre = "War" and movie_1.title = "Iraq" and classification_0.gid = genre_0.gid and classification_0.msid = movie_0.mid and classification_1.gid = genre_0.gid and classification_1.msid = movie_1.mid
TOT: 0.8846737640693584; TR: 0.9830475724915585; QF: 0.03968253968253967; select movie_0.title from classification as classification_0, directed_by as directed_by_0, directed_by as directed_by_1, director as director_0, genre as genre_0, movie as movie_0, movie as movie_1 where genre_0.genre = "War" and movie_1.title = "Iraq" and classification_0.gid = genre_0.gid and classification_0.msid = movie_0.mid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and directed_by_1.did = director_0.did and directed_by_1.msid = movie_1.mid
TOT: 0.8846737640693584; TR: 0.9830475724915585; QF: 0.03968253968253967; select movie_1.title from classification as classification_0, directed_by as directed_by_0, directed_by as directed_by_1, director as director_0, genre as genre_0, movie as movie_0, movie as movie_1 where genre_0.genre = "War" and movie_0.title = "Iraq" and classification_0.gid = genre_0.gid and classification_0.msid = movie_0.mid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and directed_by_1.did = director_0.did and directed_by_1.msid = movie_1.mid
TOT: 0.8846737640693584; TR: 0.9830475724915585; QF: 0.03968253968253967; select movie_0.title from classification as classification_0, directed_by as directed_by_0, directed_by as directed_by_1, director as director_0, genre as genre_0, movie as movie_0, tv_series as tv_series_0 where director_0.nationality = "Iraq" and genre_0.genre = "War" and classification_0.gid = genre_0.gid and classification_0.msid = tv_series_0.sid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and directed_by_1.did = director_0.did and directed_by_1.msid = tv_series_0.sid
TOT: 0.8844951926407869; TR: 0.9830475724915585; QF: 0.031746031746031744; select movie_0.title from classification as classification_0, company as company_0, copyright as copyright_0, copyright as copyright_1, genre as genre_0, movie as movie_0, movie as movie_1 where genre_0.genre = "War" and movie_1.title = "Iraq" and classification_0.gid = genre_0.gid and classification_0.msid = movie_0.mid and company_0.id = copyright_0.cid and company_0.id = copyright_1.cid and copyright_0.msid = movie_0.mid and copyright_1.msid = movie_1.mid
TOT: 0.8844951926407869; TR: 0.9830475724915585; QF: 0.031746031746031744; select movie_1.title from classification as classification_0, company as company_0, copyright as copyright_0, copyright as copyright_1, genre as genre_0, movie as movie_0, movie as movie_1 where genre_0.genre = "War" and movie_0.title = "Iraq" and classification_0.gid = genre_0.gid and classification_0.msid = movie_0.mid and company_0.id = copyright_0.cid and company_0.id = copyright_1.cid and copyright_0.msid = movie_0.mid and copyright_1.msid = movie_1.mid


03:17  INFO: ================
03:17  INFO: QUERY 21: What is the genre of the movie "Jurassic Park"?
03:17  INFO: ================
03:19  INFO: ================
03:19  INFO: QUERY 75: List "James Bond" directors
03:19  INFO: ================
03:20  INFO: ================
03:20  INFO: QUERY 76: find all films in which "Rowan Atkinson" acted as "Mr. Bean"
03:20  INFO: ================
03:22  INFO: ================
03:22  INFO: QUERY 112: How many actors from China have acted in "Rush Hour 3"
03:22  INFO: ================
890. ROOT: ROOT; NA; ; (0) 
891. acted: NT; NA; ; (0) movie.release_year(0.63):| tv_series.release_year(0.63):| actor.name(0.62):| actor(0.62):| genre.genre(0.62):| genre(0.62):| made_by(0.61):| 
893. How many: CMT; count; ; (0) 
894. actors: NT; NA; ; (0) actor.name(1.0):| actor(1.0):| movie.title(0.95):Actors; Actors; Actors; | tv_series.title(0.95):Actors; Actor; The Actor Factor; | cast.role(0.95):Actors; Actors; Actors; | keyword.keyword(0.95):actors; actor-director; no-actors; | company.name(0.79):For Actors by Actors; Actors Loft; Actors Pool; | 
895. China: VTTEXT; NA; ; (0) movie.title(1.0):China; China; China; | director.nationality(1.0):China; China; China; | director.name(1.0):China; China Chung; China Chung; | actor.nationality(1.0):China; China; China; | actor.name(1.0):China; China; China; | producer.nationality(1.0):China; China; China; | producer.name(1.0):China; Ed China; China Chung; | 
898. Rush Hour 3: VTTEXT; NA; ; (0) movie.title(0.95):Rush Hour 3; Rush Hour 3; Rush Hour 2; | tv_series.title(0.85):Rush Hour; Rush Hour; Rush Hour; | cast.role(0.7):Rush Hour Driver; Rush Hour Driver; Rush Hour Driver; | actor.name(0.64):Rush Holt; Rush Holt; Rush; | keyword.keyword(0.64):rush-hour; rush-hour; hour; | company.name(0.62):Rush Hour Production; Rush Hour Production; Rush HD; | director.name(0.52):Rush; Rush; Rush; | 
How, WRB
many, JJ
actors, NNS
from, IN
China, NNP
have, VBP
acted, VBN
in, IN
Rush Hour 3, NNS
advmod(many-2, How-1)
dep(acted-7, many-2)
nsubj(acted-7, actors-3)
case(China-5, from-4)
nmod(actors-3, China-5)
aux(acted-7, have-6)
root(ROOT-0, acted-7)
case(Rush Hour 3-9, in-8)
nmod(acted-7, Rush Hour 3-9)

PARSE TREE:(890) ROOT ROOT
    (893) How many CMT
        (894) actors NT
            (895) China VTTEXT
            (891) acted NT
                (898) Rush Hour 3 VTTEXT


===========
TRANSLATIONS
===========
TOT: 0.806225774829855; NL: 0.806225774829855; NL+AG: 0.9326779061577943; NL+QF: 0.806225774829855; rels: []; projs: [count(distinct(actor_0.name))]; preds: [movie_0.title = "China"]; havings: []; superlative: []; blanks: 2
TOT: 0.806225774829855; NL: 0.806225774829855; NL+AG: 0.9326779061577943; NL+QF: 0.806225774829855; rels: []; projs: [count(distinct(actor_0.name))]; preds: [director_0.nationality = "China"]; havings: []; superlative: []; blanks: 2
TOT: 0.806225774829855; NL: 0.806225774829855; NL+AG: 0.9326779061577943; NL+QF: 0.806225774829855; rels: []; projs: [count(distinct(actor_0.name))]; preds: [director_0.name = "China"]; havings: []; superlative: []; blanks: 2
TOT: 0.806225774829855; NL: 0.806225774829855; NL+AG: 0.9326779061577943; NL+QF: 0.806225774829855; rels: []; projs: [count(distinct(actor_0.name))]; preds: [actor_0.nationality = "China"]; havings: []; superlative: []; blanks: 2
TOT: 0.806225774829855; NL: 0.806225774829855; NL+AG: 0.9326779061577943; NL+QF: 0.806225774829855; rels: []; projs: [count(distinct(actor_0.name))]; preds: [actor_0.name = "China"]; havings: []; superlative: []; blanks: 2
TOT: 0.806225774829855; NL: 0.806225774829855; NL+AG: 0.9326779061577943; NL+QF: 0.806225774829855; rels: []; projs: [count(distinct(actor_0.name))]; preds: [producer_0.nationality = "China"]; havings: []; superlative: []; blanks: 2
TOT: 0.806225774829855; NL: 0.806225774829855; NL+AG: 0.9326779061577943; NL+QF: 0.806225774829855; rels: []; projs: [count(distinct(actor_0.name))]; preds: [producer_0.name = "China"]; havings: []; superlative: []; blanks: 2
TOT: 0.8062257748298549; NL: 0.7454212025910731; NL+AG: 0.9430496236604987; NL+QF: 0.8062257748298549; rels: []; projs: [count(distinct(actor_0.name))]; preds: [movie_0.title = "China",movie_0.title = "Rush Hour 3"]; havings: []; superlative: []; blanks: 1
TOT: 0.8062257748298549; NL: 0.7454212025910731; NL+AG: 0.9430496236604987; NL+QF: 0.8062257748298549; rels: []; projs: [count(distinct(actor_0.name))]; preds: [director_0.nationality = "China",movie_0.title = "Rush Hour 3"]; havings: []; superlative: []; blanks: 1
TOT: 0.8062257748298549; NL: 0.7454212025910731; NL+AG: 0.9430496236604987; NL+QF: 0.8062257748298549; rels: []; projs: [count(distinct(actor_0.name))]; preds: [director_0.name = "China",movie_0.title = "Rush Hour 3"]; havings: []; superlative: []; blanks: 1
TOT: 0.8062257748298549; NL: 0.7454212025910731; NL+AG: 0.9430496236604987; NL+QF: 0.8062257748298549; rels: []; projs: [count(distinct(actor_0.name))]; preds: [actor_0.nationality = "China",movie_0.title = "Rush Hour 3"]; havings: []; superlative: []; blanks: 1
TOT: 0.8062257748298549; NL: 0.7454212025910731; NL+AG: 0.9430496236604987; NL+QF: 0.8062257748298549; rels: []; projs: [count(distinct(actor_0.name))]; preds: [actor_0.name = "China",movie_0.title = "Rush Hour 3"]; havings: []; superlative: []; blanks: 1
TOT: 0.8062257748298549; NL: 0.7454212025910731; NL+AG: 0.9430496236604987; NL+QF: 0.8062257748298549; rels: []; projs: [count(distinct(actor_0.name))]; preds: [producer_0.nationality = "China",movie_0.title = "Rush Hour 3"]; havings: []; superlative: []; blanks: 1
TOT: 0.8062257748298549; NL: 0.7454212025910731; NL+AG: 0.9430496236604987; NL+QF: 0.8062257748298549; rels: []; projs: [count(distinct(actor_0.name))]; preds: [producer_0.name = "China",movie_0.title = "Rush Hour 3"]; havings: []; superlative: []; blanks: 1

===========
RESULTS
===========
TOT: 0.8352919086053767; TR: 0.806225774829855; QF: 1.0; select count(distinct(actor_0.name)) from actor as actor_0 where actor_0.nationality = "China"
TOT: 0.763591567927054; TR: 0.806225774829855; QF: 0.20833333333333334; select count(distinct(actor_0.name)) from actor as actor_0, cast as cast_0, movie as movie_0 where movie_0.title = "China" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid
TOT: 0.763591567927054; TR: 0.8062257748298549; QF: 0.20833333333333334; select count(distinct(actor_0.name)) from actor as actor_0, cast as cast_0, movie as movie_0 where actor_0.nationality = "China" and movie_0.title = "Rush Hour 3" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid
TOT: 0.7455928920316214; TR: 0.806225774829855; QF: 0.14583333333333331; select count(distinct(actor_0.name)) from actor as actor_0, cast as cast_0, directed_by as directed_by_0, director as director_0, movie as movie_0 where director_0.nationality = "China" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid
TOT: 0.7455928920316214; TR: 0.806225774829855; QF: 0.14583333333333331; select count(distinct(actor_0.name)) from actor as actor_0, cast as cast_0, directed_by as directed_by_0, director as director_0, movie as movie_0 where director_0.name = "China" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid
TOT: 0.7455928920316214; TR: 0.8062257748298549; QF: 0.14583333333333331; select count(distinct(actor_0.name)) from actor as actor_0, cast as cast_0, directed_by as directed_by_0, director as director_0, movie as movie_0 where director_0.nationality = "China" and movie_0.title = "Rush Hour 3" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid
TOT: 0.7455928920316214; TR: 0.8062257748298549; QF: 0.14583333333333331; select count(distinct(actor_0.name)) from actor as actor_0, cast as cast_0, directed_by as directed_by_0, director as director_0, movie as movie_0 where director_0.name = "China" and movie_0.title = "Rush Hour 3" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid
TOT: 0.7451053920316213; TR: 0.806225774829855; QF: 0.12416666666666665; select count(distinct(actor_0.name)) from actor as actor_0, cast as cast_0, directed_by as directed_by_0, director as director_0, tv_series as tv_series_0 where director_0.nationality = "China" and actor_0.aid = cast_0.aid and cast_0.msid = tv_series_0.sid and directed_by_0.did = director_0.did and directed_by_0.msid = tv_series_0.sid
TOT: 0.7451053920316213; TR: 0.806225774829855; QF: 0.12416666666666665; select count(distinct(actor_0.name)) from actor as actor_0, cast as cast_0, directed_by as directed_by_0, director as director_0, tv_series as tv_series_0 where director_0.name = "China" and actor_0.aid = cast_0.aid and cast_0.msid = tv_series_0.sid and directed_by_0.did = director_0.did and directed_by_0.msid = tv_series_0.sid
TOT: 0.7437178920316213; TR: 0.8062257748298549; QF: 0.0625; select count(distinct(actor_0.name)) from actor as actor_0, cast as cast_0, cast as cast_1, movie as movie_0, movie as movie_1 where movie_0.title = "China" and movie_1.title = "Rush Hour 3" and actor_0.aid = cast_0.aid and actor_0.aid = cast_1.aid and cast_0.msid = movie_0.mid and cast_1.msid = movie_1.mid


03:23  INFO: ================
03:23  INFO: QUERY 78: where is the director of "The Past" from
03:23  INFO: ================
901. ROOT: ROOT; NA; ; (0) 
903. where: CMT; NA; ; (0) director.birth_city(1.0):| actor.birth_city(1.0):| producer.birth_city(1.0):| writer.birth_city(1.0):| 
904. director: NT; NA; ; (0) director.name(1.0):| director(1.0):| movie.title(0.95):Director; Director; Director; | producer.name(0.95):Director; Co-Director; Director GT; | company.name(0.95):Director; Directors; Directors; | writer.name(0.95):Director; Director X; Director X.; | tv_series.title(0.86):Directors on Directo; The Directors; The Directors; | 
906. The Past: VTTEXT; NA; ; (0) movie.title(1.0):The Past; The Past; Fix the Past; | cast.role(1.0):The Past; The Past; The Past; | keyword.keyword(0.71):the-past; past; stuck-in-the-past; | tv_series.title(0.71):Ancyal/The Past; Out of the Past; Out of the Past; | company.name(0.62):Shadows of the Past; Future Past Films; Past Due Pictures; | director.name(0.62):The Nostalgia Plotho; | actor.name(0.62):The Nostalgia Plotho; Melodie Past; Pavel Past; | 
where, WRB
is, VBZ
the, DT
director, NN
of, IN
The Past, NNP
from, IN
advmod(is-2, where-1)
root(ROOT-0, is-2)
det(director-4, the-3)
nsubj(is-2, director-4)
case(The Past-6, of-5)
nmod(director-4, The Past-6)
dep(is-2, from-7)

PARSE TREE:(901) ROOT ROOT
    (903) where CMT
        (904) director NT
            (906) The Past VTTEXT


===========
TRANSLATIONS
===========
TOT: 0.8662391053409028; NL: 0.8662391053409028; NL+AG: 0.9628121638266046; NL+QF: 0.8662391053409028; rels: []; projs: [director_0.name]; preds: [movie_0.title = "The Past"]; havings: []; superlative: []; blanks: 1
TOT: 0.8662391053409028; NL: 0.8662391053409028; NL+AG: 0.9628121638266046; NL+QF: 0.8662391053409028; rels: []; projs: [director_0.name]; preds: [cast_0.role = "The Past"]; havings: []; superlative: []; blanks: 1
TOT: 0.8662391053409028; NL: 0.8662391053409028; NL+AG: 0.9628121638266046; NL+QF: 0.8662391053409028; rels: []; projs: [director_0.birth_city]; preds: [movie_0.title = "The Past"]; havings: []; superlative: []; blanks: 1
TOT: 0.8662391053409028; NL: 0.8662391053409028; NL+AG: 0.9628121638266046; NL+QF: 0.8662391053409028; rels: []; projs: [director_0.birth_city]; preds: [cast_0.role = "The Past"]; havings: []; superlative: []; blanks: 1
TOT: 0.8662391053409028; NL: 0.8662391053409028; NL+AG: 0.9628121638266046; NL+QF: 0.8662391053409028; rels: []; projs: [actor_0.birth_city]; preds: [movie_0.title = "The Past"]; havings: []; superlative: []; blanks: 1
TOT: 0.8662391053409028; NL: 0.8662391053409028; NL+AG: 0.9628121638266046; NL+QF: 0.8662391053409028; rels: []; projs: [actor_0.birth_city]; preds: [cast_0.role = "The Past"]; havings: []; superlative: []; blanks: 1
TOT: 0.8662391053409028; NL: 0.8662391053409028; NL+AG: 0.9628121638266046; NL+QF: 0.8662391053409028; rels: []; projs: [producer_0.birth_city]; preds: [movie_0.title = "The Past"]; havings: []; superlative: []; blanks: 1
TOT: 0.8662391053409028; NL: 0.8662391053409028; NL+AG: 0.9628121638266046; NL+QF: 0.8662391053409028; rels: []; projs: [producer_0.birth_city]; preds: [cast_0.role = "The Past"]; havings: []; superlative: []; blanks: 1
TOT: 0.8662391053409028; NL: 0.8662391053409028; NL+AG: 0.9628121638266046; NL+QF: 0.8662391053409028; rels: []; projs: [writer_0.birth_city]; preds: [movie_0.title = "The Past"]; havings: []; superlative: []; blanks: 1
TOT: 0.8662391053409028; NL: 0.8662391053409028; NL+AG: 0.9628121638266046; NL+QF: 0.8662391053409028; rels: []; projs: [writer_0.birth_city]; preds: [cast_0.role = "The Past"]; havings: []; superlative: []; blanks: 1
TOT: 0.7802453753539424; NL: 0.7802453753539424; NL+AG: 0.9788767379097759; NL+QF: 0.7802453753539424; rels: []; projs: [director_0.birth_city]; preds: [movie_0.title = "Director",movie_0.title = "The Past"]; havings: []; superlative: []; blanks: 0
TOT: 0.7802453753539424; NL: 0.7802453753539424; NL+AG: 0.9788767379097759; NL+QF: 0.7802453753539424; rels: []; projs: [director_0.birth_city]; preds: [movie_0.title = "Director",cast_0.role = "The Past"]; havings: []; superlative: []; blanks: 0
TOT: 0.7802453753539424; NL: 0.7802453753539424; NL+AG: 0.9788767379097759; NL+QF: 0.7802453753539424; rels: []; projs: [director_0.birth_city]; preds: [producer_0.name = "Director",movie_0.title = "The Past"]; havings: []; superlative: []; blanks: 0
TOT: 0.7802453753539424; NL: 0.7802453753539424; NL+AG: 0.9788767379097759; NL+QF: 0.7802453753539424; rels: []; projs: [director_0.birth_city]; preds: [producer_0.name = "Director",cast_0.role = "The Past"]; havings: []; superlative: []; blanks: 0
TOT: 0.7802453753539424; NL: 0.7802453753539424; NL+AG: 0.9788767379097759; NL+QF: 0.7802453753539424; rels: []; projs: [director_0.birth_city]; preds: [company_0.name = "Director",movie_0.title = "The Past"]; havings: []; superlative: []; blanks: 0
TOT: 0.7802453753539424; NL: 0.7802453753539424; NL+AG: 0.9788767379097759; NL+QF: 0.7802453753539424; rels: []; projs: [director_0.birth_city]; preds: [company_0.name = "Director",cast_0.role = "The Past"]; havings: []; superlative: []; blanks: 0
TOT: 0.7802453753539424; NL: 0.7802453753539424; NL+AG: 0.9788767379097759; NL+QF: 0.7802453753539424; rels: []; projs: [director_0.birth_city]; preds: [writer_0.name = "Director",movie_0.title = "The Past"]; havings: []; superlative: []; blanks: 0
TOT: 0.7802453753539424; NL: 0.7802453753539424; NL+AG: 0.9788767379097759; NL+QF: 0.7802453753539424; rels: []; projs: [director_0.birth_city]; preds: [writer_0.name = "Director",cast_0.role = "The Past"]; havings: []; superlative: []; blanks: 0
TOT: 0.7802453753539424; NL: 0.7802453753539424; NL+AG: 0.9788767379097759; NL+QF: 0.7802453753539424; rels: []; projs: [actor_0.birth_city]; preds: [movie_0.title = "Director",movie_0.title = "The Past"]; havings: []; superlative: []; blanks: 0
TOT: 0.7802453753539424; NL: 0.7802453753539424; NL+AG: 0.9788767379097759; NL+QF: 0.7802453753539424; rels: []; projs: [actor_0.birth_city]; preds: [movie_0.title = "Director",cast_0.role = "The Past"]; havings: []; superlative: []; blanks: 0
TOT: 0.7802453753539424; NL: 0.7802453753539424; NL+AG: 0.9788767379097759; NL+QF: 0.7802453753539424; rels: []; projs: [actor_0.birth_city]; preds: [producer_0.name = "Director",movie_0.title = "The Past"]; havings: []; superlative: []; blanks: 0
TOT: 0.7802453753539424; NL: 0.7802453753539424; NL+AG: 0.9788767379097759; NL+QF: 0.7802453753539424; rels: []; projs: [actor_0.birth_city]; preds: [producer_0.name = "Director",cast_0.role = "The Past"]; havings: []; superlative: []; blanks: 0
TOT: 0.7802453753539424; NL: 0.7802453753539424; NL+AG: 0.9788767379097759; NL+QF: 0.7802453753539424; rels: []; projs: [actor_0.birth_city]; preds: [company_0.name = "Director",movie_0.title = "The Past"]; havings: []; superlative: []; blanks: 0
TOT: 0.7802453753539424; NL: 0.7802453753539424; NL+AG: 0.9788767379097759; NL+QF: 0.7802453753539424; rels: []; projs: [actor_0.birth_city]; preds: [company_0.name = "Director",cast_0.role = "The Past"]; havings: []; superlative: []; blanks: 0
TOT: 0.7802453753539424; NL: 0.7802453753539424; NL+AG: 0.9788767379097759; NL+QF: 0.7802453753539424; rels: []; projs: [actor_0.birth_city]; preds: [writer_0.name = "Director",movie_0.title = "The Past"]; havings: []; superlative: []; blanks: 0
TOT: 0.7802453753539424; NL: 0.7802453753539424; NL+AG: 0.9788767379097759; NL+QF: 0.7802453753539424; rels: []; projs: [actor_0.birth_city]; preds: [writer_0.name = "Director",cast_0.role = "The Past"]; havings: []; superlative: []; blanks: 0
TOT: 0.7802453753539424; NL: 0.7802453753539424; NL+AG: 0.9788767379097759; NL+QF: 0.7802453753539424; rels: []; projs: [producer_0.birth_city]; preds: [movie_0.title = "Director",movie_0.title = "The Past"]; havings: []; superlative: []; blanks: 0
TOT: 0.7802453753539424; NL: 0.7802453753539424; NL+AG: 0.9788767379097759; NL+QF: 0.7802453753539424; rels: []; projs: [producer_0.birth_city]; preds: [movie_0.title = "Director",cast_0.role = "The Past"]; havings: []; superlative: []; blanks: 0
TOT: 0.7802453753539424; NL: 0.7802453753539424; NL+AG: 0.9788767379097759; NL+QF: 0.7802453753539424; rels: []; projs: [producer_0.birth_city]; preds: [producer_0.name = "Director",movie_0.title = "The Past"]; havings: []; superlative: []; blanks: 0
TOT: 0.7802453753539424; NL: 0.7802453753539424; NL+AG: 0.9788767379097759; NL+QF: 0.7802453753539424; rels: []; projs: [producer_0.birth_city]; preds: [producer_0.name = "Director",cast_0.role = "The Past"]; havings: []; superlative: []; blanks: 0
TOT: 0.7802453753539424; NL: 0.7802453753539424; NL+AG: 0.9788767379097759; NL+QF: 0.7802453753539424; rels: []; projs: [producer_0.birth_city]; preds: [company_0.name = "Director",movie_0.title = "The Past"]; havings: []; superlative: []; blanks: 0
TOT: 0.7802453753539424; NL: 0.7802453753539424; NL+AG: 0.9788767379097759; NL+QF: 0.7802453753539424; rels: []; projs: [producer_0.birth_city]; preds: [company_0.name = "Director",cast_0.role = "The Past"]; havings: []; superlative: []; blanks: 0
TOT: 0.7802453753539424; NL: 0.7802453753539424; NL+AG: 0.9788767379097759; NL+QF: 0.7802453753539424; rels: []; projs: [producer_0.birth_city]; preds: [writer_0.name = "Director",movie_0.title = "The Past"]; havings: []; superlative: []; blanks: 0
TOT: 0.7802453753539424; NL: 0.7802453753539424; NL+AG: 0.9788767379097759; NL+QF: 0.7802453753539424; rels: []; projs: [producer_0.birth_city]; preds: [writer_0.name = "Director",cast_0.role = "The Past"]; havings: []; superlative: []; blanks: 0
TOT: 0.7802453753539424; NL: 0.7802453753539424; NL+AG: 0.9788767379097759; NL+QF: 0.7802453753539424; rels: []; projs: [writer_0.birth_city]; preds: [movie_0.title = "Director",movie_0.title = "The Past"]; havings: []; superlative: []; blanks: 0
TOT: 0.7802453753539424; NL: 0.7802453753539424; NL+AG: 0.9788767379097759; NL+QF: 0.7802453753539424; rels: []; projs: [writer_0.birth_city]; preds: [movie_0.title = "Director",cast_0.role = "The Past"]; havings: []; superlative: []; blanks: 0
TOT: 0.7802453753539424; NL: 0.7802453753539424; NL+AG: 0.9788767379097759; NL+QF: 0.7802453753539424; rels: []; projs: [writer_0.birth_city]; preds: [producer_0.name = "Director",movie_0.title = "The Past"]; havings: []; superlative: []; blanks: 0
TOT: 0.7802453753539424; NL: 0.7802453753539424; NL+AG: 0.9788767379097759; NL+QF: 0.7802453753539424; rels: []; projs: [writer_0.birth_city]; preds: [producer_0.name = "Director",cast_0.role = "The Past"]; havings: []; superlative: []; blanks: 0
TOT: 0.7802453753539424; NL: 0.7802453753539424; NL+AG: 0.9788767379097759; NL+QF: 0.7802453753539424; rels: []; projs: [writer_0.birth_city]; preds: [company_0.name = "Director",movie_0.title = "The Past"]; havings: []; superlative: []; blanks: 0
TOT: 0.7802453753539424; NL: 0.7802453753539424; NL+AG: 0.9788767379097759; NL+QF: 0.7802453753539424; rels: []; projs: [writer_0.birth_city]; preds: [company_0.name = "Director",cast_0.role = "The Past"]; havings: []; superlative: []; blanks: 0
TOT: 0.7802453753539424; NL: 0.7802453753539424; NL+AG: 0.9788767379097759; NL+QF: 0.7802453753539424; rels: []; projs: [writer_0.birth_city]; preds: [writer_0.name = "Director",movie_0.title = "The Past"]; havings: []; superlative: []; blanks: 0
TOT: 0.7802453753539424; NL: 0.7802453753539424; NL+AG: 0.9788767379097759; NL+QF: 0.7802453753539424; rels: []; projs: [writer_0.birth_city]; preds: [writer_0.name = "Director",cast_0.role = "The Past"]; havings: []; superlative: []; blanks: 0

===========
RESULTS
===========
TOT: 0.8348968541410521; TR: 0.8662391053409028; QF: 0.375; select actor_0.birth_city from actor as actor_0, cast as cast_0 where cast_0.role = "The Past" and actor_0.aid = cast_0.aid
TOT: 0.8161653988614446; TR: 0.8662391053409028; QF: 0.27777777777777773; select director_0.name from directed_by as directed_by_0, director as director_0, movie as movie_0 where movie_0.title = "The Past" and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid
TOT: 0.8161653988614446; TR: 0.8662391053409028; QF: 0.27777777777777773; select director_0.birth_city from directed_by as directed_by_0, director as director_0, movie as movie_0 where movie_0.title = "The Past" and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid
TOT: 0.8146028988614445; TR: 0.8662391053409028; QF: 0.20833333333333334; select actor_0.birth_city from actor as actor_0, cast as cast_0, movie as movie_0 where movie_0.title = "The Past" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid
TOT: 0.8099153988614446; TR: 0.8662391053409028; QF: 0.0; select writer_0.birth_city from movie as movie_0, writer as writer_0, written_by as written_by_0 where movie_0.title = "The Past" and movie_0.mid = written_by_0.msid and writer_0.wid = written_by_0.wid
TOT: 0.8099153988614446; TR: 0.8662391053409028; QF: 0.0; select producer_0.birth_city from made_by as made_by_0, movie as movie_0, producer as producer_0 where movie_0.title = "The Past" and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid
TOT: 0.8041157395397673; TR: 0.8662391053409028; QF: 0.18055555555555555; select director_0.name from cast as cast_0, directed_by as directed_by_0, director as director_0, movie as movie_0 where cast_0.role = "The Past" and cast_0.msid = movie_0.mid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid
TOT: 0.8041157395397673; TR: 0.8662391053409028; QF: 0.18055555555555555; select director_0.birth_city from cast as cast_0, directed_by as directed_by_0, director as director_0, movie as movie_0 where cast_0.role = "The Past" and cast_0.msid = movie_0.mid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid
TOT: 0.8033032395397672; TR: 0.8662391053409028; QF: 0.14444444444444446; select director_0.name from cast as cast_0, directed_by as directed_by_0, director as director_0, tv_series as tv_series_0 where cast_0.role = "The Past" and cast_0.msid = tv_series_0.sid and directed_by_0.did = director_0.did and directed_by_0.msid = tv_series_0.sid
TOT: 0.8033032395397672; TR: 0.8662391053409028; QF: 0.14444444444444446; select director_0.birth_city from cast as cast_0, directed_by as directed_by_0, director as director_0, tv_series as tv_series_0 where cast_0.role = "The Past" and cast_0.msid = tv_series_0.sid and directed_by_0.did = director_0.did and directed_by_0.msid = tv_series_0.sid


03:26  INFO: ================
03:26  INFO: QUERY 4: Find all actors born in "Los Angeles"
03:26  INFO: ================
03:27  INFO: ================
03:27  INFO: QUERY 42: What are all the tv series created by "Shonda Rhimes"?
03:27  INFO: ================
918. ROOT: ROOT; NA; ; (0) 
919. What: CMT; NA; ; (0) 
921. series: NT; NA; all; (0) tv_series.title(1.0):| tv_series(1.0):| keyword.keyword(0.95):series; series; series-in-series; | company.name(0.87):Series+; Series+; T-Series; | movie.title(0.8):Series 4; Series 4; Chinese Series; | actor.name(0.79):Eric Series; Eric Series; series editor; | tv_series.num_of_episodes(0.68):| 
924. tv: NT; NA; ; (0) tv_series.title(1.0):| tv_series(1.0):| actor.name(0.95):TVS; | company.name(0.95):TVS; TVS; TV Studios (TVS); | movie.title(0.69):| movie(0.69):| tv_series.num_of_episodes(0.67):| 
925. created: NT; NA; ; (0) made_by(0.79):| directed_by(0.71):| cast.role(0.69):| cast(0.69):| written_by(0.62):| movie.release_year(0.6):| tv_series.release_year(0.6):| 
926. Shonda Rhimes: VTTEXT; NA; ; (0) director.name(1.0):Shonda Rhimes; Shonda Rhimes; Shonda Harris; | actor.name(1.0):Shonda Rhimes; Shonda Rhimes; Shonda Tamez; | producer.name(1.0):Shonda Rhimes; Shonda Rhimes; Brandon Rhimes; | writer.name(1.0):Shonda Rhimes; Shonda Rhimes; Shonda Harris; | cast.role(0.58):Shonda Wessun; Shonda Wessun; Shonda Nichols; | movie.title(0.58):Rhimes and Reason; The Marriage of Maid; The Marriage of Maid; | genre.genre(0.32):Game-Show; Game-Show; Short; | 
What, WP
are, VBP
all, PDT
the, DT
tv, NN
series, NN
created, VBN
by, IN
Shonda Rhimes, NNP
root(ROOT-0, What-1)
cop(What-1, are-2)
det:predet(series-6, all-3)
det(series-6, the-4)
compound(series-6, tv-5)
nsubj(What-1, series-6)
acl(series-6, created-7)
case(Shonda Rhimes-9, by-8)
nmod(created-7, Shonda Rhimes-9)

PARSE TREE:(918) ROOT ROOT
    (919) What CMT
        (921) series NT
            (924) tv NT
            (925) created NT
                (926) Shonda Rhimes VTTEXT


===========
TRANSLATIONS
===========
TOT: 0.948429433146309; NL: 0.9191341960887558; NL+AG: 0.966581842152465; NL+QF: 0.948429433146309; rels: [directed_by]; projs: [tv_series_0.title]; preds: [director_0.name = "Shonda Rhimes"]; havings: []; superlative: []; blanks: 1
TOT: 0.943115121294336; NL: 0.943115121294336; NL+AG: 0.966581842152465; NL+QF: 0.943115121294336; rels: [made_by]; projs: [tv_series_0.title]; preds: [director_0.name = "Shonda Rhimes"]; havings: []; superlative: []; blanks: 1
TOT: 0.943115121294336; NL: 0.943115121294336; NL+AG: 0.966581842152465; NL+QF: 0.943115121294336; rels: [made_by]; projs: [tv_series_0.title]; preds: [actor_0.name = "Shonda Rhimes"]; havings: []; superlative: []; blanks: 1
TOT: 0.943115121294336; NL: 0.943115121294336; NL+AG: 0.966581842152465; NL+QF: 0.943115121294336; rels: [made_by]; projs: [tv_series_0.title]; preds: [producer_0.name = "Shonda Rhimes"]; havings: []; superlative: []; blanks: 1
TOT: 0.943115121294336; NL: 0.943115121294336; NL+AG: 0.966581842152465; NL+QF: 0.943115121294336; rels: [made_by]; projs: [tv_series_0.title]; preds: [writer_0.name = "Shonda Rhimes"]; havings: []; superlative: []; blanks: 1
TOT: 0.9191341960887558; NL: 0.9191341960887558; NL+AG: 0.966581842152465; NL+QF: 0.9191341960887558; rels: [directed_by]; projs: [tv_series_0.title]; preds: [actor_0.name = "Shonda Rhimes"]; havings: []; superlative: []; blanks: 1
TOT: 0.9191341960887558; NL: 0.9191341960887558; NL+AG: 0.966581842152465; NL+QF: 0.9191341960887558; rels: [directed_by]; projs: [tv_series_0.title]; preds: [producer_0.name = "Shonda Rhimes"]; havings: []; superlative: []; blanks: 1
TOT: 0.9191341960887558; NL: 0.9191341960887558; NL+AG: 0.966581842152465; NL+QF: 0.9191341960887558; rels: [directed_by]; projs: [tv_series_0.title]; preds: [writer_0.name = "Shonda Rhimes"]; havings: []; superlative: []; blanks: 1
TOT: 0.910944157140815; NL: 0.910944157140815; NL+AG: 0.966581842152465; NL+QF: 0.910944157140815; rels: [cast]; projs: [tv_series_0.title]; preds: [director_0.name = "Shonda Rhimes"]; havings: []; superlative: []; blanks: 1
TOT: 0.910944157140815; NL: 0.910944157140815; NL+AG: 0.966581842152465; NL+QF: 0.910944157140815; rels: [cast]; projs: [tv_series_0.title]; preds: [actor_0.name = "Shonda Rhimes"]; havings: []; superlative: []; blanks: 1
TOT: 0.910944157140815; NL: 0.910944157140815; NL+AG: 0.966581842152465; NL+QF: 0.910944157140815; rels: [cast]; projs: [tv_series_0.title]; preds: [producer_0.name = "Shonda Rhimes"]; havings: []; superlative: []; blanks: 1
TOT: 0.910944157140815; NL: 0.910944157140815; NL+AG: 0.966581842152465; NL+QF: 0.910944157140815; rels: [cast]; projs: [tv_series_0.title]; preds: [writer_0.name = "Shonda Rhimes"]; havings: []; superlative: []; blanks: 1

===========
RESULTS
===========
TOT: 0.8847771774960399; TR: 0.948429433146309; QF: 0.2222222222222222; select tv_series_0.title from directed_by as directed_by_0, director as director_0, tv_series as tv_series_0 where director_0.name = "Shonda Rhimes" and directed_by_0.did = director_0.did and directed_by_0.msid = tv_series_0.sid
TOT: 0.8752600124218628; TR: 0.943115121294336; QF: 0.0; select tv_series_0.title from made_by as made_by_0, producer as producer_0, tv_series as tv_series_0 where producer_0.name = "Shonda Rhimes" and made_by_0.msid = tv_series_0.sid and made_by_0.pid = producer_0.pid
TOT: 0.8559626313401819; TR: 0.948429433146309; QF: 0.07142857142857142; select tv_series_0.title from company as company_0, copyright as copyright_0, copyright as copyright_1, directed_by as directed_by_0, director as director_0, movie as movie_0, tv_series as tv_series_0 where director_0.name = "Shonda Rhimes" and company_0.id = copyright_0.cid and company_0.id = copyright_1.cid and copyright_0.msid = movie_0.mid and copyright_1.msid = tv_series_0.sid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid
TOT: 0.855917988483039; TR: 0.948429433146309; QF: 0.06944444444444445; select tv_series_0.title from actor as actor_0, cast as cast_0, cast as cast_1, directed_by as directed_by_0, director as director_0, movie as movie_0, tv_series as tv_series_0 where director_0.name = "Shonda Rhimes" and actor_0.aid = cast_0.aid and actor_0.aid = cast_1.aid and cast_0.msid = movie_0.mid and cast_1.msid = tv_series_0.sid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid
TOT: 0.8552483456258962; TR: 0.948429433146309; QF: 0.03968253968253967; select tv_series_0.title from directed_by as directed_by_0, director as director_0, keyword as keyword_0, movie as movie_0, tags as tags_0, tags as tags_1, tv_series as tv_series_0 where director_0.name = "Shonda Rhimes" and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and keyword_0.id = tags_0.kid and keyword_0.id = tags_1.kid and movie_0.mid = tags_0.msid and tags_1.msid = tv_series_0.sid
TOT: 0.8552483456258962; TR: 0.948429433146309; QF: 0.03968253968253967; select tv_series_0.title from classification as classification_0, classification as classification_1, directed_by as directed_by_0, director as director_0, genre as genre_0, movie as movie_0, tv_series as tv_series_0 where director_0.name = "Shonda Rhimes" and classification_0.gid = genre_0.gid and classification_0.msid = movie_0.mid and classification_1.gid = genre_0.gid and classification_1.msid = tv_series_0.sid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid
TOT: 0.8552483456258962; TR: 0.948429433146309; QF: 0.03968253968253967; select tv_series_0.title from directed_by as directed_by_0, director as director_0, made_by as made_by_0, made_by as made_by_1, movie as movie_0, producer as producer_0, tv_series as tv_series_0 where director_0.name = "Shonda Rhimes" and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid and made_by_1.msid = tv_series_0.sid and made_by_1.pid = producer_0.pid
TOT: 0.8552483456258962; TR: 0.948429433146309; QF: 0.03968253968253967; select tv_series_0.title from directed_by as directed_by_0, director as director_0, movie as movie_0, tv_series as tv_series_0, writer as writer_0, written_by as written_by_0, written_by as written_by_1 where director_0.name = "Shonda Rhimes" and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and movie_0.mid = written_by_0.msid and tv_series_0.sid = written_by_1.msid and writer_0.wid = written_by_0.wid and writer_0.wid = written_by_1.wid
TOT: 0.85222719289137; TR: 0.910944157140815; QF: 0.19166666666666665; select tv_series_0.title from actor as actor_0, cast as cast_0, tv_series as tv_series_0 where actor_0.name = "Shonda Rhimes" and actor_0.aid = cast_0.aid and cast_0.msid = tv_series_0.sid
TOT: 0.8507311805517191; TR: 0.943115121294336; QF: 0.03968253968253967; select tv_series_0.title from directed_by as directed_by_0, directed_by as directed_by_1, director as director_0, made_by as made_by_0, movie as movie_0, producer as producer_0, tv_series as tv_series_0 where producer_0.name = "Shonda Rhimes" and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and directed_by_1.did = director_0.did and directed_by_1.msid = tv_series_0.sid and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid


03:28  INFO: ================
03:28  INFO: QUERY 92: What is the number of movies produced in 2013?
03:28  INFO: ================
03:29  INFO: ================
03:29  INFO: QUERY 101: How many movies did "Quentin Tarantino" direct after 2010?
03:29  INFO: ================
03:30  INFO: ================
03:30  INFO: QUERY 80: what are the genres of movies directed by "Asghar Farhadi"
03:30  INFO: ================
03:31  INFO: ================
03:31  INFO: QUERY 86: List all the directors of movies about nuclear weapons
03:31  INFO: ================
961. ROOT: ROOT; NA; ; (0) 
962. List: CMT; NA; ; (0) 
963. directors: NT; NA; all; (0) director.name(1.0):| director(1.0):| movie.title(0.95):Director; Director; Director; | producer.name(0.95):Director; Co-Director; Director GT; | company.name(0.95):Directors; Directors; Director; | writer.name(0.95):Director; Director X; Director X.; | tv_series.title(0.88):Directors on Directo; The Directors; The Directors; | 
966. movies: NT; NA; ; (0) movie.title(1.0):| movie(1.0):| cast.role(0.95):Movie; Movie F; Movie AD; | company.name(0.95):Movies; Movie; Movie Movie; | tv_series.title(0.84):Movies, Movies, Movi; Movie Mob; Moon Movies; | keyword.keyword(0.83):movie-in-movie; movies-about-movies; b-movie; | actor.name(0.76):| 
968. weapons: VTTEXT; NA; ; (0) movie.title(0.95):Weapons; Weapons; Weapons; | cast.role(0.95):Weapons; Weapons; Weapons; | keyword.keyword(0.95):weapon; weapon-x; power-weapon; | actor.name(0.74):The Weapons; Leatha Weapons; Letha Weapons; | tv_series.title(0.71):Weapons of Power; Weapon Wars; Weapons at War; | company.name(0.67):Weapon Films; Weapons Productions; No Weapon Production; | director.nationality(0.59):| 
970. nuclear: VTTEXT; NA; ; (0) movie.title(1.0):Nuclear; Nuclear Leak; Nuclear Day; | company.name(1.0):Nuclear; Nuclear; Nuclear Cat; | keyword.keyword(1.0):nuclear; nuclear-leak; nuclear-arms; | cast.role(0.79):Nuclear dealer; Nuclear Man; Nuclear Man; | tv_series.title(0.77):Nuclear Ned; Nuclear Coleslaw; Nuclear Family; | actor.name(0.68):Nuclear Family; Nuclear Wintour; El Físico Nuclear; | company.country_code(0.62):| 
List, VB
all, PDT
the, DT
directors, NNS
of, IN
movies, NNS
about, IN
nuclear, JJ
weapons, NNS
root(ROOT-0, List-1)
det:predet(directors-4, all-2)
det(directors-4, the-3)
dobj(List-1, directors-4)
case(movies-6, of-5)
nmod(directors-4, movies-6)
case(weapons-9, about-7)
amod(weapons-9, nuclear-8)
nmod(movies-6, weapons-9)

PARSE TREE:(961) ROOT ROOT
    (962) List CMT
        (963) directors NT
            (966) movies NT
                (968) weapons VTTEXT
                    (970) nuclear VTTEXT


===========
TRANSLATIONS
===========
TOT: 0.8979007600118484; NL: 0.8979007600118484; NL+AG: 0.966581842152465; NL+QF: 0.8979007600118484; rels: [movie]; projs: [director_0.name]; preds: [movie_0.title = "Nuclear"]; havings: []; superlative: []; blanks: 1
TOT: 0.8979007600118484; NL: 0.8979007600118484; NL+AG: 0.966581842152465; NL+QF: 0.8979007600118484; rels: [movie]; projs: [director_0.name]; preds: [company_0.name = "Nuclear"]; havings: []; superlative: []; blanks: 1
TOT: 0.8979007600118484; NL: 0.8979007600118484; NL+AG: 0.966581842152465; NL+QF: 0.8979007600118484; rels: [movie]; projs: [director_0.name]; preds: [keyword_0.keyword = "nuclear"]; havings: []; superlative: []; blanks: 1
TOT: 0.8545740127924681; NL: 0.8301821713362141; NL+AG: 0.9775911474238732; NL+QF: 0.8545740127924681; rels: [movie]; projs: [director_0.name]; preds: [movie_0.title = "Weapons",movie_0.title = "Nuclear"]; havings: []; superlative: []; blanks: 0
TOT: 0.8545740127924681; NL: 0.8301821713362141; NL+AG: 0.9775911474238732; NL+QF: 0.8545740127924681; rels: [movie]; projs: [director_0.name]; preds: [movie_0.title = "Weapons",company_0.name = "Nuclear"]; havings: []; superlative: []; blanks: 0
TOT: 0.8545740127924681; NL: 0.8301821713362141; NL+AG: 0.9775911474238732; NL+QF: 0.8545740127924681; rels: [movie]; projs: [director_0.name]; preds: [movie_0.title = "Weapons",keyword_0.keyword = "nuclear"]; havings: []; superlative: []; blanks: 0
TOT: 0.8470827043267568; NL: 0.8470827043267568; NL+AG: 0.942763618984786; NL+QF: 0.8470827043267568; rels: [movie]; projs: [director_0.name]; preds: [cast_0.role = "Nuclear dealer"]; havings: []; superlative: []; blanks: 1
TOT: 0.8469620065594706; NL: 0.8176106028275605; NL+AG: 0.9331636843049301; NL+QF: 0.8469620065594706; rels: [tv_series]; projs: [director_0.name]; preds: [movie_0.title = "Nuclear"]; havings: []; superlative: []; blanks: 1
TOT: 0.8469620065594706; NL: 0.8176106028275605; NL+AG: 0.9331636843049301; NL+QF: 0.8469620065594706; rels: [tv_series]; projs: [director_0.name]; preds: [company_0.name = "Nuclear"]; havings: []; superlative: []; blanks: 1
TOT: 0.8469620065594706; NL: 0.8176106028275605; NL+AG: 0.9331636843049301; NL+QF: 0.8469620065594706; rels: [tv_series]; projs: [director_0.name]; preds: [keyword_0.keyword = "nuclear"]; havings: []; superlative: []; blanks: 1
TOT: 0.8423590487037597; NL: 0.8423590487037597; NL+AG: 0.942763618984786; NL+QF: 0.8423590487037597; rels: [movie]; projs: [director_0.name]; preds: [tv_series_0.title = "Nuclear Ned"]; havings: []; superlative: []; blanks: 1

===========
RESULTS
===========
TOT: 0.8430778053317484; TR: 0.8979007600118484; QF: 0.27777777777777773; select director_0.name from directed_by as directed_by_0, director as director_0, movie as movie_0 where movie_0.title = "Nuclear" and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid
TOT: 0.8236103794363158; TR: 0.8979007600118484; QF: 0.14999999999999997; select director_0.name from company as company_0, copyright as copyright_0, directed_by as directed_by_0, director as director_0, movie as movie_0 where company_0.name = "Nuclear" and company_0.id = copyright_0.cid and copyright_0.msid = movie_0.mid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid
TOT: 0.8221103794363157; TR: 0.8979007600118484; QF: 0.08333333333333333; select director_0.name from directed_by as directed_by_0, director as director_0, keyword as keyword_0, movie as movie_0, tags as tags_0 where keyword_0.keyword = "nuclear" and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and keyword_0.id = tags_0.kid and movie_0.mid = tags_0.msid
TOT: 0.8128346877473189; TR: 0.8979007600118484; QF: 0.06349206349206349; select director_0.name from company as company_0, copyright as copyright_0, copyright as copyright_1, directed_by as directed_by_0, director as director_0, movie as movie_0, tv_series as tv_series_0 where movie_0.title = "Nuclear" and company_0.id = copyright_0.cid and company_0.id = copyright_1.cid and copyright_0.msid = movie_0.mid and copyright_1.msid = tv_series_0.sid and directed_by_0.did = director_0.did and directed_by_0.msid = tv_series_0.sid
TOT: 0.8127900448901761; TR: 0.8979007600118484; QF: 0.061507936507936505; select director_0.name from actor as actor_0, cast as cast_0, cast as cast_1, directed_by as directed_by_0, director as director_0, movie as movie_0, tv_series as tv_series_0 where movie_0.title = "Nuclear" and actor_0.aid = cast_0.aid and actor_0.aid = cast_1.aid and cast_0.msid = movie_0.mid and cast_1.msid = tv_series_0.sid and directed_by_0.did = director_0.did and directed_by_0.msid = tv_series_0.sid
TOT: 0.8121204020330333; TR: 0.8979007600118484; QF: 0.031746031746031744; select director_0.name from directed_by as directed_by_0, director as director_0, keyword as keyword_0, movie as movie_0, tags as tags_0, tags as tags_1, tv_series as tv_series_0 where movie_0.title = "Nuclear" and directed_by_0.did = director_0.did and directed_by_0.msid = tv_series_0.sid and keyword_0.id = tags_0.kid and keyword_0.id = tags_1.kid and movie_0.mid = tags_0.msid and tags_1.msid = tv_series_0.sid
TOT: 0.8121204020330333; TR: 0.8979007600118484; QF: 0.031746031746031744; select director_0.name from directed_by as directed_by_0, director as director_0, movie as movie_0, tv_series as tv_series_0, writer as writer_0, written_by as written_by_0, written_by as written_by_1 where movie_0.title = "Nuclear" and directed_by_0.did = director_0.did and directed_by_0.msid = tv_series_0.sid and movie_0.mid = written_by_0.msid and tv_series_0.sid = written_by_1.msid and writer_0.wid = written_by_0.wid and writer_0.wid = written_by_1.wid
TOT: 0.8121204020330333; TR: 0.8979007600118484; QF: 0.031746031746031744; select director_0.name from directed_by as directed_by_0, director as director_0, made_by as made_by_0, made_by as made_by_1, movie as movie_0, producer as producer_0, tv_series as tv_series_0 where movie_0.title = "Nuclear" and directed_by_0.did = director_0.did and directed_by_0.msid = tv_series_0.sid and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid and made_by_1.msid = tv_series_0.sid and made_by_1.pid = producer_0.pid
TOT: 0.8121204020330333; TR: 0.8979007600118484; QF: 0.031746031746031744; select director_0.name from classification as classification_0, classification as classification_1, directed_by as directed_by_0, director as director_0, genre as genre_0, movie as movie_0, tv_series as tv_series_0 where movie_0.title = "Nuclear" and classification_0.gid = genre_0.gid and classification_0.msid = movie_0.mid and classification_1.gid = genre_0.gid and classification_1.msid = tv_series_0.sid and directed_by_0.did = director_0.did and directed_by_0.msid = tv_series_0.sid
TOT: 0.7878327986777434; TR: 0.8470827043267568; QF: 0.18055555555555555; select director_0.name from cast as cast_0, directed_by as directed_by_0, director as director_0, movie as movie_0 where cast_0.role = "Nuclear dealer" and cast_0.msid = movie_0.mid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid


03:33  INFO: ================
03:33  INFO: QUERY 102: How many movies did "Quentin Tarantino" direct before 2010?
03:33  INFO: ================
03:35  INFO: ================
03:35  INFO: QUERY 111: How many companies participated in producing "Camp X-Ray"
03:35  INFO: ================
03:36  INFO: ================
03:36  INFO: QUERY 84: List all male directors who worked with the "NBCUniversal" company
03:36  INFO: ================
991. ROOT: ROOT; NA; ; (0) 
992. List: CMT; NA; ; (0) 
993. directors: NT; NA; all; (0) director.name(1.0):| director(1.0):| movie.title(0.95):Director; Director; Director; | producer.name(0.95):Director; Co-Director; Director GT; | company.name(0.95):Directors; Directors; Director; | writer.name(0.95):Director; Director X; Director X.; | tv_series.title(0.88):Directors on Directo; The Directors; The Directors; | 
995. male: VTTEXT; NA; ; (0) movie.title(1.0):Male; Female/Male; Pale Male; | director.birth_city(1.0):Male; Wilkucice Male; | director.gender(1.0):male; male; male; | actor.gender(1.0):male; male; male; | actor.name(1.0):Male; Male; Coleman Male; | cast.role(1.0):Males; Males; Males; | producer.birth_city(1.0):Male; | 
996. worked: NT; NA; ; (0) directed_by(0.71):| made_by(0.64):| written_by(0.63):| director.name(0.62):| director(0.62):| cast.role(0.62):| cast(0.62):| 
998. company: NT; NA; ; (0) company.name(1.0):| company(1.0):| movie.title(0.95):Company; Company; Company; | cast.role(0.95):Company; Company; Company; | keyword.keyword(0.95):company; company-k; it-company; | tv_series.title(0.82):X Company; Eco Company; Company and Co; | actor.name(0.74):Eva Company; Angel Company; Marc Company; | 
1001. NBCUniversal: VTTEXT; NA; ; (0) company.name(1.0):NBCUniversal; NBCUniversal Media; NBCUniversal Skycast; | genre.genre(0.2):Commercial; Commercial; Experimental; | 
List, VB
all, DT
male, JJ
directors, NNS
who, WP
worked, VBD
with, IN
the, DT
NBCUniversal, NNP
company, NN
root(ROOT-0, List-1)
det(directors-4, all-2)
amod(directors-4, male-3)
dobj(List-1, directors-4)
nsubj(worked-6, who-5)
acl:relcl(directors-4, worked-6)
case(company-10, with-7)
det(company-10, the-8)
compound(company-10, NBCUniversal-9)
nmod(worked-6, company-10)

PARSE TREE:(991) ROOT ROOT
    (992) List CMT
        (993) directors NT
            (995) male VTTEXT
            (996) worked NT
                (998) company NT
                    (1001) NBCUniversal VTTEXT


===========
TRANSLATIONS
===========
TOT: 0.9292878450726728; NL: 0.9168559143387582; NL+AG: 0.9685548245020893; NL+QF: 0.9292878450726728; rels: [directed_by]; projs: [director_0.name]; preds: [movie_0.title = "Male",company_0.name = "NBCUniversal"]; havings: []; superlative: []; blanks: 0
TOT: 0.9292878450726728; NL: 0.9168559143387582; NL+AG: 0.9685548245020893; NL+QF: 0.9292878450726728; rels: [directed_by]; projs: [director_0.name]; preds: [director_0.birth_city = "Male",company_0.name = "NBCUniversal"]; havings: []; superlative: []; blanks: 0
TOT: 0.9292878450726728; NL: 0.9168559143387582; NL+AG: 0.9685548245020893; NL+QF: 0.9292878450726728; rels: [directed_by]; projs: [director_0.name]; preds: [director_0.gender = "male",company_0.name = "NBCUniversal"]; havings: []; superlative: []; blanks: 0
TOT: 0.9292878450726728; NL: 0.9168559143387582; NL+AG: 0.9685548245020893; NL+QF: 0.9292878450726728; rels: [directed_by]; projs: [director_0.name]; preds: [actor_0.gender = "male",company_0.name = "NBCUniversal"]; havings: []; superlative: []; blanks: 0
TOT: 0.9292878450726728; NL: 0.9168559143387582; NL+AG: 0.9685548245020893; NL+QF: 0.9292878450726728; rels: [directed_by]; projs: [director_0.name]; preds: [actor_0.name = "Male",company_0.name = "NBCUniversal"]; havings: []; superlative: []; blanks: 0
TOT: 0.9292878450726728; NL: 0.9168559143387582; NL+AG: 0.9685548245020893; NL+QF: 0.9292878450726728; rels: [directed_by]; projs: [director_0.name]; preds: [cast_0.role = "Males",company_0.name = "NBCUniversal"]; havings: []; superlative: []; blanks: 0
TOT: 0.9292878450726728; NL: 0.9168559143387582; NL+AG: 0.9685548245020893; NL+QF: 0.9292878450726728; rels: [directed_by]; projs: [director_0.name]; preds: [producer_0.birth_city = "Male",company_0.name = "NBCUniversal"]; havings: []; superlative: []; blanks: 0
TOT: 0.8979007600118484; NL: 0.8979007600118484; NL+AG: 0.9685548245020893; NL+QF: 0.8979007600118484; rels: []; projs: [director_0.name]; preds: [movie_0.title = "Male",company_0.name = "NBCUniversal"]; havings: []; superlative: []; blanks: 1
TOT: 0.8979007600118484; NL: 0.8979007600118484; NL+AG: 0.9685548245020893; NL+QF: 0.8979007600118484; rels: []; projs: [director_0.name]; preds: [director_0.birth_city = "Male",company_0.name = "NBCUniversal"]; havings: []; superlative: []; blanks: 1
TOT: 0.8979007600118484; NL: 0.8979007600118484; NL+AG: 0.9685548245020893; NL+QF: 0.8979007600118484; rels: []; projs: [director_0.name]; preds: [director_0.gender = "male",company_0.name = "NBCUniversal"]; havings: []; superlative: []; blanks: 1
TOT: 0.8979007600118484; NL: 0.8979007600118484; NL+AG: 0.9685548245020893; NL+QF: 0.8979007600118484; rels: []; projs: [director_0.name]; preds: [actor_0.gender = "male",company_0.name = "NBCUniversal"]; havings: []; superlative: []; blanks: 1
TOT: 0.8979007600118484; NL: 0.8979007600118484; NL+AG: 0.9685548245020893; NL+QF: 0.8979007600118484; rels: []; projs: [director_0.name]; preds: [actor_0.name = "Male",company_0.name = "NBCUniversal"]; havings: []; superlative: []; blanks: 1
TOT: 0.8979007600118484; NL: 0.8979007600118484; NL+AG: 0.9685548245020893; NL+QF: 0.8979007600118484; rels: []; projs: [director_0.name]; preds: [cast_0.role = "Males",company_0.name = "NBCUniversal"]; havings: []; superlative: []; blanks: 1
TOT: 0.8979007600118484; NL: 0.8979007600118484; NL+AG: 0.9685548245020893; NL+QF: 0.8979007600118484; rels: []; projs: [director_0.name]; preds: [producer_0.birth_city = "Male",company_0.name = "NBCUniversal"]; havings: []; superlative: []; blanks: 1

===========
RESULTS
===========
TOT: 0.8502894017380166; TR: 0.9292878450726728; QF: 0.14999999999999997; select director_0.name from company as company_0, copyright as copyright_0, directed_by as directed_by_0, director as director_0, movie as movie_0 where company_0.name = "NBCUniversal" and movie_0.title = "Male" and company_0.id = copyright_0.cid and copyright_0.msid = movie_0.mid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid
TOT: 0.8502894017380166; TR: 0.9292878450726728; QF: 0.14999999999999997; select director_0.name from company as company_0, copyright as copyright_0, directed_by as directed_by_0, director as director_0, movie as movie_0 where company_0.name = "NBCUniversal" and director_0.birth_city = "Male" and company_0.id = copyright_0.cid and copyright_0.msid = movie_0.mid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid
TOT: 0.8502894017380166; TR: 0.9292878450726728; QF: 0.14999999999999997; select director_0.name from company as company_0, copyright as copyright_0, directed_by as directed_by_0, director as director_0, movie as movie_0 where company_0.name = "NBCUniversal" and director_0.gender = "male" and company_0.id = copyright_0.cid and copyright_0.msid = movie_0.mid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid
TOT: 0.8495394017380166; TR: 0.9292878450726728; QF: 0.11666666666666665; select director_0.name from company as company_0, copyright as copyright_0, directed_by as directed_by_0, director as director_0, tv_series as tv_series_0 where company_0.name = "NBCUniversal" and director_0.birth_city = "Male" and company_0.id = copyright_0.cid and copyright_0.msid = tv_series_0.sid and directed_by_0.did = director_0.did and directed_by_0.msid = tv_series_0.sid
TOT: 0.8495394017380166; TR: 0.9292878450726728; QF: 0.11666666666666665; select director_0.name from company as company_0, copyright as copyright_0, directed_by as directed_by_0, director as director_0, tv_series as tv_series_0 where company_0.name = "NBCUniversal" and director_0.gender = "male" and company_0.id = copyright_0.cid and copyright_0.msid = tv_series_0.sid and directed_by_0.did = director_0.did and directed_by_0.msid = tv_series_0.sid
TOT: 0.8445713253459144; TR: 0.9292878450726728; QF: 0.11666666666666665; select director_0.name from cast as cast_0, company as company_0, copyright as copyright_0, directed_by as directed_by_0, director as director_0, movie as movie_0 where cast_0.role = "Males" and company_0.name = "NBCUniversal" and cast_0.msid = movie_0.mid and company_0.id = copyright_0.cid and copyright_0.msid = movie_0.mid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid
TOT: 0.8439963253459144; TR: 0.9292878450726728; QF: 0.0911111111111111; select director_0.name from cast as cast_0, company as company_0, copyright as copyright_0, directed_by as directed_by_0, director as director_0, tv_series as tv_series_0 where cast_0.role = "Males" and company_0.name = "NBCUniversal" and cast_0.msid = tv_series_0.sid and company_0.id = copyright_0.cid and copyright_0.msid = tv_series_0.sid and directed_by_0.did = director_0.did and directed_by_0.msid = tv_series_0.sid
TOT: 0.8403619243347341; TR: 0.9292878450726728; QF: 0.10119047619047619; select director_0.name from actor as actor_0, cast as cast_0, company as company_0, copyright as copyright_0, directed_by as directed_by_0, director as director_0, movie as movie_0 where actor_0.gender = "male" and company_0.name = "NBCUniversal" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and company_0.id = copyright_0.cid and copyright_0.msid = movie_0.mid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid
TOT: 0.8403619243347341; TR: 0.9292878450726728; QF: 0.10119047619047619; select director_0.name from actor as actor_0, cast as cast_0, company as company_0, copyright as copyright_0, directed_by as directed_by_0, director as director_0, movie as movie_0 where actor_0.name = "Male" and company_0.name = "NBCUniversal" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and company_0.id = copyright_0.cid and copyright_0.msid = movie_0.mid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid
TOT: 0.8399512100490198; TR: 0.9292878450726728; QF: 0.08293650793650793; select director_0.name from actor as actor_0, cast as cast_0, company as company_0, copyright as copyright_0, directed_by as directed_by_0, director as director_0, tv_series as tv_series_0 where actor_0.gender = "male" and company_0.name = "NBCUniversal" and actor_0.aid = cast_0.aid and cast_0.msid = tv_series_0.sid and company_0.id = copyright_0.cid and copyright_0.msid = tv_series_0.sid and directed_by_0.did = director_0.did and directed_by_0.msid = tv_series_0.sid


03:54  INFO: ===== FOLD 3 =====
03:54  INFO: ===== Parsing Results =====
03:54  INFO: Total Queries: 9
03:54  INFO: Correctly Parsed: 9/9

03:54  INFO: ================
03:54  INFO: QUERY 85: What are the movies related to nuclear weapons
03:54  INFO: ================
1003. ROOT: ROOT; NA; ; (0) 
1004. related: NT; NA; ; (0) made_by(0.69):| written_by(0.66):| directed_by(0.66):| cast.role(0.61):| cast(0.6):| company.name(0.59):| company(0.59):| 
1005. What: CMT; NA; ; (0) 
1007. movies: NT; NA; ; (0) movie.title(1.0):| movie(1.0):| cast.role(0.95):Movie; Movie F; Movie AD; | company.name(0.95):Movies; Movie; Movie Movie; | tv_series.title(0.84):Movies, Movies, Movi; Movie Mob; Moon Movies; | keyword.keyword(0.83):movie-in-movie; movies-about-movies; b-movie; | actor.name(0.76):| 
1009. weapons: VTTEXT; NA; ; (0) movie.title(0.95):Weapons; Weapons; Weapons; | cast.role(0.95):Weapons; Weapons; Weapons; | keyword.keyword(0.95):weapon; weapon-x; power-weapon; | actor.name(0.74):The Weapons; Leatha Weapons; Letha Weapons; | tv_series.title(0.71):Weapons of Power; Weapon Wars; Weapons at War; | company.name(0.67):Weapon Films; Weapons Productions; No Weapon Production; | director.nationality(0.59):| 
1011. nuclear: VTTEXT; NA; ; (0) movie.title(1.0):Nuclear; Nuclear Leak; Nuclear Day; | company.name(1.0):Nuclear; Nuclear; Nuclear Cat; | keyword.keyword(1.0):nuclear; nuclear-leak; nuclear-arms; | cast.role(0.79):Nuclear dealer; Nuclear Man; Nuclear Man; | tv_series.title(0.77):Nuclear Ned; Nuclear Coleslaw; Nuclear Family; | actor.name(0.68):Nuclear Family; Nuclear Wintour; El Físico Nuclear; | company.country_code(0.62):| 
What, WP
are, VBP
the, DT
movies, NNS
related, VBN
to, TO
nuclear, JJ
weapons, NNS
dobj(related-5, What-1)
auxpass(related-5, are-2)
det(movies-4, the-3)
nsubjpass(related-5, movies-4)
root(ROOT-0, related-5)
case(weapons-8, to-6)
amod(weapons-8, nuclear-7)
nmod(related-5, weapons-8)

PARSE TREE:(1003) ROOT ROOT
    (1005) What CMT
        (1007) movies NT
            (1004) related NT
                (1009) weapons VTTEXT
                    (1011) nuclear VTTEXT


===========
TRANSLATIONS
===========
TOT: 0.8252214211716994; NL: 0.8081260796742606; NL+AG: 0.9331636843049301; NL+QF: 0.8252214211716994; rels: [directed_by]; projs: [movie_0.title]; preds: [movie_0.title = "Nuclear"]; havings: []; superlative: []; blanks: 1
TOT: 0.8193886719056226; NL: 0.8193886719056226; NL+AG: 0.9331636843049301; NL+QF: 0.8193886719056226; rels: [made_by]; projs: [movie_0.title]; preds: [movie_0.title = "Nuclear"]; havings: []; superlative: []; blanks: 1
TOT: 0.8193886719056226; NL: 0.8193886719056226; NL+AG: 0.9331636843049301; NL+QF: 0.8193886719056226; rels: [made_by]; projs: [movie_0.title]; preds: [company_0.name = "Nuclear"]; havings: []; superlative: []; blanks: 1
TOT: 0.8193886719056226; NL: 0.8193886719056226; NL+AG: 0.9331636843049301; NL+QF: 0.8193886719056226; rels: [made_by]; projs: [movie_0.title]; preds: [keyword_0.keyword = "nuclear"]; havings: []; superlative: []; blanks: 1
TOT: 0.8104255302688795; NL: 0.8104255302688795; NL+AG: 0.9331636843049301; NL+QF: 0.8104255302688795; rels: [written_by]; projs: [movie_0.title]; preds: [movie_0.title = "Nuclear"]; havings: []; superlative: []; blanks: 1
TOT: 0.8104255302688795; NL: 0.8104255302688795; NL+AG: 0.9331636843049301; NL+QF: 0.8104255302688795; rels: [written_by]; projs: [movie_0.title]; preds: [company_0.name = "Nuclear"]; havings: []; superlative: []; blanks: 1
TOT: 0.8104255302688795; NL: 0.8104255302688795; NL+AG: 0.9331636843049301; NL+QF: 0.8104255302688795; rels: [written_by]; projs: [movie_0.title]; preds: [keyword_0.keyword = "nuclear"]; havings: []; superlative: []; blanks: 1
TOT: 0.8081260796742606; NL: 0.8081260796742606; NL+AG: 0.9331636843049301; NL+QF: 0.8081260796742606; rels: [directed_by]; projs: [movie_0.title]; preds: [company_0.name = "Nuclear"]; havings: []; superlative: []; blanks: 1
TOT: 0.8081260796742606; NL: 0.8081260796742606; NL+AG: 0.9331636843049301; NL+QF: 0.8081260796742606; rels: [directed_by]; projs: [movie_0.title]; preds: [keyword_0.keyword = "nuclear"]; havings: []; superlative: []; blanks: 1
TOT: 0.806225774829855; NL: 0.806225774829855; NL+AG: 0.9331636843049301; NL+QF: 0.806225774829855; rels: []; projs: [movie_0.title]; preds: [movie_0.title = "Nuclear"]; havings: []; superlative: []; blanks: 2
TOT: 0.806225774829855; NL: 0.806225774829855; NL+AG: 0.9331636843049301; NL+QF: 0.806225774829855; rels: []; projs: [movie_0.title]; preds: [company_0.name = "Nuclear"]; havings: []; superlative: []; blanks: 2
TOT: 0.806225774829855; NL: 0.806225774829855; NL+AG: 0.9331636843049301; NL+QF: 0.806225774829855; rels: []; projs: [movie_0.title]; preds: [keyword_0.keyword = "nuclear"]; havings: []; superlative: []; blanks: 2

===========
RESULTS
===========
TOT: 0.7637254964984825; TR: 0.806225774829855; QF: 0.21428571428571427; select movie_0.title from company as company_0, copyright as copyright_0, movie as movie_0 where company_0.name = "Nuclear" and company_0.id = copyright_0.cid and copyright_0.msid = movie_0.mid
TOT: 0.7603329414221891; TR: 0.8252214211716994; QF: 0.08333333333333333; select movie_0.title from directed_by as directed_by_0, directed_by as directed_by_1, director as director_0, movie as movie_0, movie as movie_1 where movie_1.title = "Nuclear" and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and directed_by_1.did = director_0.did and directed_by_1.msid = movie_1.mid
TOT: 0.758904067927054; TR: 0.806225774829855; QF: 0.0; select movie_0.title from keyword as keyword_0, movie as movie_0, tags as tags_0 where keyword_0.keyword = "nuclear" and keyword_0.id = tags_0.kid and movie_0.mid = tags_0.msid
TOT: 0.7535001045460239; TR: 0.8193886719056226; QF: 0.0; select movie_0.title from made_by as made_by_0, made_by as made_by_1, movie as movie_0, movie as movie_1, producer as producer_0 where movie_1.title = "Nuclear" and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid and made_by_1.msid = movie_1.mid and made_by_1.pid = producer_0.pid
TOT: 0.7458814341547922; TR: 0.8104255302688795; QF: 0.0; select movie_0.title from movie as movie_0, movie as movie_1, writer as writer_0, written_by as written_by_0, written_by as written_by_1 where movie_1.title = "Nuclear" and movie_0.mid = written_by_0.msid and movie_1.mid = written_by_1.msid and writer_0.wid = written_by_0.wid and writer_0.wid = written_by_1.wid
TOT: 0.7452065557141699; TR: 0.8193886719056226; QF: 0.023809523809523808; select movie_0.title from company as company_0, copyright as copyright_0, made_by as made_by_0, made_by as made_by_1, movie as movie_0, producer as producer_0, tv_series as tv_series_0 where company_0.name = "Nuclear" and company_0.id = copyright_0.cid and copyright_0.msid = tv_series_0.sid and made_by_0.msid = tv_series_0.sid and made_by_0.pid = producer_0.pid and made_by_1.msid = movie_0.mid and made_by_1.pid = producer_0.pid
TOT: 0.7446708414284557; TR: 0.8193886719056226; QF: 0.0; select movie_0.title from keyword as keyword_0, made_by as made_by_0, made_by as made_by_1, movie as movie_0, producer as producer_0, tags as tags_0, tv_series as tv_series_0 where keyword_0.keyword = "nuclear" and keyword_0.id = tags_0.kid and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid and made_by_1.msid = tv_series_0.sid and made_by_1.pid = producer_0.pid and tags_0.msid = tv_series_0.sid
TOT: 0.7437580706030499; TR: 0.806225774829855; QF: 0.06428571428571428; select movie_0.title from classification as classification_0, classification as classification_1, genre as genre_0, movie as movie_0, movie as movie_1 where movie_1.title = "Nuclear" and classification_0.gid = genre_0.gid and classification_0.msid = movie_0.mid and classification_1.gid = genre_0.gid and classification_1.msid = movie_1.mid
TOT: 0.7437580706030499; TR: 0.806225774829855; QF: 0.06428571428571428; select movie_0.title from company as company_0, copyright as copyright_0, copyright as copyright_1, movie as movie_0, movie as movie_1 where movie_1.title = "Nuclear" and company_0.id = copyright_0.cid and company_0.id = copyright_1.cid and copyright_0.msid = movie_0.mid and copyright_1.msid = movie_1.mid
TOT: 0.7436553920316213; TR: 0.806225774829855; QF: 0.05972222222222222; select movie_0.title from actor as actor_0, cast as cast_0, cast as cast_1, movie as movie_0, movie as movie_1 where movie_1.title = "Nuclear" and actor_0.aid = cast_0.aid and actor_0.aid = cast_1.aid and cast_0.msid = movie_0.mid and cast_1.msid = movie_1.mid


03:55  INFO: ================
03:55  INFO: QUERY 3: Find all movies produced in 2015
03:55  INFO: ================
03:56  INFO: ================
03:56  INFO: QUERY 61: How many movies are there that are directed by "Steven Spielberg" and featuring "Matt Damon"?
03:56  INFO: ================
1021. ROOT: ROOT; NA; ; (0) 
1023. movies: NT; NA; ; (0) movie.title(1.0):| movie(1.0):| cast.role(0.95):Movie; Movie F; Movie AD; | company.name(0.95):Movies; Movie; Movie Movie; | tv_series.title(0.84):Movies, Movies, Movi; Movie Mob; Moon Movies; | keyword.keyword(0.83):movie-in-movie; movies-about-movies; b-movie; | actor.name(0.76):| 
1025. How many: CMT; count; ; (0) 
1027. directed: NT; NA; ; (0) directed_by(1.0):| director.name(0.72):| director(0.72):| written_by(0.68):| cast.role(0.67):| cast(0.67):| made_by(0.67):| 
1033. featuring: NT; NA; ; (0) tv_series.title(0.69):| tv_series(0.69):| movie.release_year(0.64):| tv_series.release_year(0.64):| made_by(0.64):| movie.title_aka(0.62):| tv_series.title_aka(0.62):| 
1034. Matt Damon: VTTEXT; NA; ; (0) director.name(1.0):Matt Damon; Matt Diamond; Matt Diamond; | actor.name(1.0):Matt Damon; Matt Damon; Matt Diamond; | producer.name(1.0):Matt Damon; Matt Damon; Matt Diamond; | writer.name(1.0):Matt Damon; Matt Damon; Matt Diamond; | movie.title(0.76):I'm Not Matt Damon; I'm Not Matt Damon; Meeting Matt Damon; | cast.role(0.74):Matt Stamon; Matt Damien; Matt Demond; | tv_series.title(0.67):Damon; The Damon Elliott Sh; Matt Houston; | 
How, WRB
many, JJ
movies, NNS
are, VBP
there, EX
that, WDT
are, VBP
directed, VBN
by, IN
Steven Spielberg, VBG
and, CC
featuring, VBG
Matt Damon, NNP
advmod(many-2, How-1)
amod(movies-3, many-2)
nsubj(are-4, movies-3)
root(ROOT-0, are-4)
expl(are-4, there-5)
nsubjpass(directed-8, that-6)
auxpass(directed-8, are-7)
dep(are-4, directed-8)
mark(Steven Spielberg-10, by-9)
advcl(directed-8, Steven Spielberg-10)
cc(Steven Spielberg-10, and-11)
conj(Steven Spielberg-10, featuring-12)
dobj(Steven Spielberg-10, Matt Damon-13)

PARSE TREE:(1021) ROOT ROOT
    (1025) How many CMT
        (1023) movies NT
            (1027) directed NT
                (1034) Matt Damon VTTEXT
                (1033) featuring NT


===========
TRANSLATIONS
===========
TOT: 0.9269122194297552; NL: 0.9100167166104893; NL+AG: 0.9663389530788972; NL+QF: 0.9269122194297552; rels: [tv_series,directed_by]; projs: [count(distinct(movie_0.title))]; preds: [actor_0.name = "Matt Damon"]; havings: []; superlative: []; blanks: 0
TOT: 0.9134845832402853; NL: 0.8248353601890005; NL+AG: 0.9326779061577943; NL+QF: 0.9134845832402853; rels: [cast,tv_series]; projs: [count(distinct(movie_0.title))]; preds: [actor_0.name = "Matt Damon"]; havings: []; superlative: []; blanks: 0
TOT: 0.9100167166104893; NL: 0.9100167166104893; NL+AG: 0.9663389530788972; NL+QF: 0.9100167166104893; rels: [tv_series,directed_by]; projs: [count(distinct(movie_0.title))]; preds: [director_0.name = "Matt Damon"]; havings: []; superlative: []; blanks: 0
TOT: 0.9100167166104893; NL: 0.9100167166104893; NL+AG: 0.9663389530788972; NL+QF: 0.9100167166104893; rels: [tv_series,directed_by]; projs: [count(distinct(movie_0.title))]; preds: [producer_0.name = "Matt Damon"]; havings: []; superlative: []; blanks: 0
TOT: 0.9100167166104893; NL: 0.9100167166104893; NL+AG: 0.9663389530788972; NL+QF: 0.9100167166104893; rels: [tv_series,directed_by]; projs: [count(distinct(movie_0.title))]; preds: [writer_0.name = "Matt Damon"]; havings: []; superlative: []; blanks: 0
TOT: 0.8979007600118484; NL: 0.8979007600118484; NL+AG: 0.9663389530788972; NL+QF: 0.8979007600118484; rels: [directed_by]; projs: [count(distinct(movie_0.title))]; preds: [director_0.name = "Matt Damon"]; havings: []; superlative: []; blanks: 1
TOT: 0.8979007600118484; NL: 0.8979007600118484; NL+AG: 0.9663389530788972; NL+QF: 0.8979007600118484; rels: [directed_by]; projs: [count(distinct(movie_0.title))]; preds: [actor_0.name = "Matt Damon"]; havings: []; superlative: []; blanks: 1
TOT: 0.8979007600118484; NL: 0.8979007600118484; NL+AG: 0.9663389530788972; NL+QF: 0.8979007600118484; rels: [directed_by]; projs: [count(distinct(movie_0.title))]; preds: [producer_0.name = "Matt Damon"]; havings: []; superlative: []; blanks: 1
TOT: 0.8979007600118484; NL: 0.8979007600118484; NL+AG: 0.9663389530788972; NL+QF: 0.8979007600118484; rels: [directed_by]; projs: [count(distinct(movie_0.title))]; preds: [writer_0.name = "Matt Damon"]; havings: []; superlative: []; blanks: 1
TOT: 0.8751617685443002; NL: 0.8138535076112837; NL+AG: 0.9326779061577943; NL+QF: 0.8751617685443002; rels: [cast]; projs: [count(distinct(movie_0.title))]; preds: [actor_0.name = "Matt Damon"]; havings: []; superlative: []; blanks: 1
TOT: 0.8727242678578871; NL: 0.8372758622495686; NL+AG: 0.9326779061577943; NL+QF: 0.8727242678578871; rels: [tv_series,director]; projs: [count(distinct(movie_0.title))]; preds: [actor_0.name = "Matt Damon"]; havings: []; superlative: []; blanks: 0

===========
RESULTS
===========
TOT: 0.8430778053317484; TR: 0.8979007600118484; QF: 0.27777777777777773; select count(distinct(movie_0.title)) from directed_by as directed_by_0, director as director_0, movie as movie_0 where director_0.name = "Matt Damon" and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid
TOT: 0.8376283568239683; TR: 0.9269122194297552; QF: 0.06944444444444445; select count(distinct(movie_0.title)) from actor as actor_0, cast as cast_0, directed_by as directed_by_0, directed_by as directed_by_1, director as director_0, movie as movie_0, tv_series as tv_series_0 where actor_0.name = "Matt Damon" and actor_0.aid = cast_0.aid and cast_0.msid = tv_series_0.sid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and directed_by_1.did = director_0.did and directed_by_1.msid = tv_series_0.sid
TOT: 0.8260107844302658; TR: 0.9134845832402853; QF: 0.06037414965986394; select count(distinct(movie_0.title)) from actor as actor_0, cast as cast_0, classification as classification_0, classification as classification_1, genre as genre_0, movie as movie_0, tv_series as tv_series_0 where actor_0.name = "Matt Damon" and actor_0.aid = cast_0.aid and cast_0.msid = tv_series_0.sid and classification_0.gid = genre_0.gid and classification_0.msid = movie_0.mid and classification_1.gid = genre_0.gid and classification_1.msid = tv_series_0.sid
TOT: 0.8260107844302658; TR: 0.9134845832402853; QF: 0.06037414965986394; select count(distinct(movie_0.title)) from actor as actor_0, cast as cast_0, company as company_0, copyright as copyright_0, copyright as copyright_1, movie as movie_0, tv_series as tv_series_0 where actor_0.name = "Matt Damon" and actor_0.aid = cast_0.aid and cast_0.msid = tv_series_0.sid and company_0.id = copyright_0.cid and company_0.id = copyright_1.cid and copyright_0.msid = movie_0.mid and copyright_1.msid = tv_series_0.sid
TOT: 0.8253220089200617; TR: 0.9134845832402853; QF: 0.029761904761904764; select count(distinct(movie_0.title)) from actor as actor_0, cast as cast_0, keyword as keyword_0, movie as movie_0, tags as tags_0, tags as tags_1, tv_series as tv_series_0 where actor_0.name = "Matt Damon" and actor_0.aid = cast_0.aid and cast_0.msid = tv_series_0.sid and keyword_0.id = tags_0.kid and keyword_0.id = tags_1.kid and movie_0.mid = tags_0.msid and tags_1.msid = tv_series_0.sid
TOT: 0.8253220089200617; TR: 0.9134845832402853; QF: 0.029761904761904764; select count(distinct(movie_0.title)) from actor as actor_0, cast as cast_0, movie as movie_0, tv_series as tv_series_0, writer as writer_0, written_by as written_by_0, written_by as written_by_1 where actor_0.name = "Matt Damon" and actor_0.aid = cast_0.aid and cast_0.msid = tv_series_0.sid and movie_0.mid = written_by_0.msid and tv_series_0.sid = written_by_1.msid and writer_0.wid = written_by_0.wid and writer_0.wid = written_by_1.wid
TOT: 0.8253220089200617; TR: 0.9134845832402853; QF: 0.029761904761904764; select count(distinct(movie_0.title)) from actor as actor_0, cast as cast_0, made_by as made_by_0, made_by as made_by_1, movie as movie_0, producer as producer_0, tv_series as tv_series_0 where actor_0.name = "Matt Damon" and actor_0.aid = cast_0.aid and cast_0.msid = tv_series_0.sid and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid and made_by_1.msid = tv_series_0.sid and made_by_1.pid = producer_0.pid
TOT: 0.8229291692235107; TR: 0.9100167166104893; QF: 0.05442176870748299; select count(distinct(movie_0.title)) from classification as classification_0, classification as classification_1, directed_by as directed_by_0, director as director_0, genre as genre_0, movie as movie_0, tv_series as tv_series_0 where director_0.name = "Matt Damon" and classification_0.gid = genre_0.gid and classification_0.msid = movie_0.mid and classification_1.gid = genre_0.gid and classification_1.msid = tv_series_0.sid and directed_by_0.did = director_0.did and directed_by_0.msid = tv_series_0.sid
TOT: 0.8229291692235107; TR: 0.9100167166104893; QF: 0.05442176870748299; select count(distinct(movie_0.title)) from company as company_0, copyright as copyright_0, copyright as copyright_1, directed_by as directed_by_0, director as director_0, movie as movie_0, tv_series as tv_series_0 where director_0.name = "Matt Damon" and company_0.id = copyright_0.cid and company_0.id = copyright_1.cid and copyright_0.msid = movie_0.mid and copyright_1.msid = tv_series_0.sid and directed_by_0.did = director_0.did and directed_by_0.msid = tv_series_0.sid
TOT: 0.8228802746656876; TR: 0.9100167166104893; QF: 0.05224867724867725; select count(distinct(movie_0.title)) from actor as actor_0, cast as cast_0, cast as cast_1, directed_by as directed_by_0, director as director_0, movie as movie_0, tv_series as tv_series_0 where director_0.name = "Matt Damon" and actor_0.aid = cast_0.aid and actor_0.aid = cast_1.aid and cast_0.msid = movie_0.mid and cast_1.msid = tv_series_0.sid and directed_by_0.did = director_0.did and directed_by_0.msid = tv_series_0.sid


03:57  INFO: ================
03:57  INFO: QUERY 51: What are the series in which "Scott Foley" is an actor?
03:57  INFO: ================
03:58  INFO: ================
03:58  INFO: QUERY 110: find the number of actors from Iran who played in "Jim Jarmusch" movies
03:58  INFO: ================
1048. ROOT: ROOT; NA; ; (0) 
1049. find: CMT; NA; ; (0) 
1050. number of: FT; count; ; (0) 
1052. actors: NT; NA; ; (0) actor.name(1.0):| actor(1.0):| movie.title(0.95):Actors; Actors; Actors; | tv_series.title(0.95):Actors; Actor; The Actor Factor; | cast.role(0.95):Actors; Actors; Actors; | keyword.keyword(0.95):actors; actor-director; no-actors; | company.name(0.79):For Actors by Actors; Actors Loft; Actors Pool; | 
1054. Iran: VTTEXT; NA; ; (0) movie.title(1.0):Iran; Iran!; Ei Iran; | director.nationality(1.0):Iran; Iran; Iran; | actor.nationality(1.0):Iran; Iran; Iran; | actor.name(1.0):Iran; Iran Torabi; Iran Daniel; | producer.nationality(1.0):Iran; Iran; Iran; | writer.nationality(1.0):Iran; Iran; Iran; | keyword.keyword(0.77):tehran-iran; shiraz-iran; iraq-iran-war; | 
1056. played: NT; NA; ; (0) tv_series.num_of_seasons(0.67):| cast.role(0.66):| directed_by(0.64):| actor.name(0.63):| actor(0.63):| cast(0.63):| movie.title_aka(0.63):| 
1058. movies: NT; NA; ; (0) movie.title(1.0):| movie(1.0):| cast.role(0.95):Movie; Movie F; Movie AD; | company.name(0.95):Movies; Movie; Movie Movie; | tv_series.title(0.84):Movies, Movies, Movi; Movie Mob; Moon Movies; | keyword.keyword(0.83):movie-in-movie; movies-about-movies; b-movie; | actor.name(0.76):| 
1060. Jim Jarmusch: VTTEXT; NA; ; (0) director.name(1.0):Jim Jarmusch; Jim Jarmusch; Tom Jarmusch; | actor.name(1.0):Jim Jarmusch; Jim Jarmusch; Tom Jarmusch; | producer.name(1.0):Jim Jarmusch; Jim Jarmusch; Tom Jarmusch; | writer.name(1.0):Jim Jarmusch; Jim Jarmusch; James R. Jarmusch; | movie.title(0.81):Behind Jim Jarmusch; Behind Jim Jarmusch; Focus on Jim Jarmusc; | cast.role(0.72):Jim Jarmusch's broth; Jim Jarmusch's broth; Jim Jamush; | tv_series.title(0.52):Earthworm Jim; Earthworm Jim; Jim Jam & Sunny; | 
find, VB
the, DT
number, NN
of, IN
actors, NNS
from, IN
Iran, NNP
who, WP
played, VBN
in, IN
Jim Jarmusch, NNP
movies, NNS
root(ROOT-0, find-1)
det(number-3, the-2)
dobj(find-1, number-3)
case(actors-5, of-4)
nmod(number-3, actors-5)
case(Iran-7, from-6)
nmod(actors-5, Iran-7)
nsubj(played-9, who-8)
acl:relcl(number-3, played-9)
case(movies-12, in-10)
compound(movies-12, Jim Jarmusch-11)
nmod(played-9, movies-12)

PARSE TREE:(1048) ROOT ROOT
    (1049) find CMT
        (1050) number of FT
            (1052) actors NT
                (1054) Iran VTTEXT
            (1056) played NT
                (1058) movies NT
                    (1060) Jim Jarmusch VTTEXT


===========
TRANSLATIONS
===========
TOT: 0.8979007600118484; NL: 0.8979007600118484; NL+AG: 0.9683119354285215; NL+QF: 0.8979007600118484; rels: []; projs: [count(distinct(actor_0.name))]; preds: [movie_0.title = "Iran",movie_0.title = "Behind Jim Jarmusch"]; havings: []; superlative: []; blanks: 1
TOT: 0.8979007600118484; NL: 0.8979007600118484; NL+AG: 0.9683119354285215; NL+QF: 0.8979007600118484; rels: []; projs: [count(distinct(actor_0.name))]; preds: [director_0.nationality = "Iran",movie_0.title = "Behind Jim Jarmusch"]; havings: []; superlative: []; blanks: 1
TOT: 0.8979007600118484; NL: 0.8979007600118484; NL+AG: 0.9683119354285215; NL+QF: 0.8979007600118484; rels: []; projs: [count(distinct(actor_0.name))]; preds: [actor_0.nationality = "Iran",movie_0.title = "Behind Jim Jarmusch"]; havings: []; superlative: []; blanks: 1
TOT: 0.8979007600118484; NL: 0.8979007600118484; NL+AG: 0.9683119354285215; NL+QF: 0.8979007600118484; rels: []; projs: [count(distinct(actor_0.name))]; preds: [actor_0.name = "Iran",movie_0.title = "Behind Jim Jarmusch"]; havings: []; superlative: []; blanks: 1
TOT: 0.8979007600118484; NL: 0.8979007600118484; NL+AG: 0.9683119354285215; NL+QF: 0.8979007600118484; rels: []; projs: [count(distinct(actor_0.name))]; preds: [producer_0.nationality = "Iran",movie_0.title = "Behind Jim Jarmusch"]; havings: []; superlative: []; blanks: 1
TOT: 0.8979007600118484; NL: 0.8979007600118484; NL+AG: 0.9683119354285215; NL+QF: 0.8979007600118484; rels: []; projs: [count(distinct(actor_0.name))]; preds: [writer_0.nationality = "Iran",movie_0.title = "Behind Jim Jarmusch"]; havings: []; superlative: []; blanks: 1
TOT: 0.8961235869684291; NL: 0.8689647470148877; NL+AG: 0.950917492972429; NL+QF: 0.8961235869684291; rels: []; projs: [count(distinct(movie_0.title))]; preds: [actor_0.name = "Iran",director_0.name = "Jim Jarmusch"]; havings: []; superlative: []; blanks: 2
TOT: 0.8896400006920934; NL: 0.8689647470148877; NL+AG: 0.950917492972429; NL+QF: 0.8896400006920934; rels: []; projs: [count(distinct(movie_0.title))]; preds: [actor_0.name = "Iran",actor_0.name = "Jim Jarmusch"]; havings: []; superlative: []; blanks: 2
TOT: 0.8863260123552488; NL: 0.8689647470148877; NL+AG: 0.950917492972429; NL+QF: 0.8863260123552488; rels: []; projs: [count(distinct(movie_0.title))]; preds: [movie_0.title = "Iran",director_0.name = "Jim Jarmusch"]; havings: []; superlative: []; blanks: 2
TOT: 0.8863260123552488; NL: 0.8689647470148877; NL+AG: 0.950917492972429; NL+QF: 0.8863260123552488; rels: []; projs: [count(distinct(movie_0.title))]; preds: [director_0.nationality = "Iran",director_0.name = "Jim Jarmusch"]; havings: []; superlative: []; blanks: 2
TOT: 0.8863260123552488; NL: 0.8689647470148877; NL+AG: 0.950917492972429; NL+QF: 0.8863260123552488; rels: []; projs: [count(distinct(movie_0.title))]; preds: [actor_0.nationality = "Iran",director_0.name = "Jim Jarmusch"]; havings: []; superlative: []; blanks: 2
TOT: 0.8863260123552488; NL: 0.8689647470148877; NL+AG: 0.950917492972429; NL+QF: 0.8863260123552488; rels: []; projs: [count(distinct(movie_0.title))]; preds: [producer_0.nationality = "Iran",director_0.name = "Jim Jarmusch"]; havings: []; superlative: []; blanks: 2
TOT: 0.8863260123552488; NL: 0.8689647470148877; NL+AG: 0.950917492972429; NL+QF: 0.8863260123552488; rels: []; projs: [count(distinct(movie_0.title))]; preds: [writer_0.nationality = "Iran",director_0.name = "Jim Jarmusch"]; havings: []; superlative: []; blanks: 2

===========
RESULTS
===========
TOT: 0.841306971998415; TR: 0.8979007600118484; QF: 0.19907407407407407; select count(distinct(actor_0.name)) from actor as actor_0, cast as cast_0, movie as movie_0 where actor_0.nationality = "Iran" and movie_0.title = "Behind Jim Jarmusch" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid
TOT: 0.8332392698236387; TR: 0.8863260123552488; QF: 0.27777777777777773; select count(distinct(movie_0.title)) from directed_by as directed_by_0, director as director_0, movie as movie_0 where director_0.name = "Jim Jarmusch" and director_0.nationality = "Iran" and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid
TOT: 0.8234541294363157; TR: 0.8979007600118484; QF: 0.14305555555555555; select count(distinct(actor_0.name)) from actor as actor_0, cast as cast_0, directed_by as directed_by_0, director as director_0, movie as movie_0 where director_0.nationality = "Iran" and movie_0.title = "Behind Jim Jarmusch" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid
TOT: 0.8219435323494093; TR: 0.8961235869684291; QF: 0.14305555555555555; select count(distinct(movie_0.title)) from actor as actor_0, cast as cast_0, directed_by as directed_by_0, director as director_0, movie as movie_0 where actor_0.name = "Iran" and director_0.name = "Jim Jarmusch" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid
TOT: 0.8215791294363157; TR: 0.8979007600118484; QF: 0.05972222222222222; select count(distinct(actor_0.name)) from actor as actor_0, cast as cast_0, movie as movie_0, writer as writer_0, written_by as written_by_0 where movie_0.title = "Behind Jim Jarmusch" and writer_0.nationality = "Iran" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and movie_0.mid = written_by_0.msid and writer_0.wid = written_by_0.wid
TOT: 0.8215791294363157; TR: 0.8979007600118484; QF: 0.05972222222222222; select count(distinct(actor_0.name)) from actor as actor_0, cast as cast_0, cast as cast_1, movie as movie_0, movie as movie_1 where movie_0.title = "Iran" and movie_1.title = "Behind Jim Jarmusch" and actor_0.aid = cast_0.aid and actor_0.aid = cast_1.aid and cast_0.msid = movie_0.mid and cast_1.msid = movie_1.mid
TOT: 0.8215791294363157; TR: 0.8979007600118484; QF: 0.05972222222222222; select count(distinct(actor_0.name)) from actor as actor_0, cast as cast_0, made_by as made_by_0, movie as movie_0, producer as producer_0 where movie_0.title = "Behind Jim Jarmusch" and producer_0.nationality = "Iran" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid
TOT: 0.8215791294363157; TR: 0.8979007600118484; QF: 0.05972222222222222; select count(distinct(actor_0.name)) from actor as actor_0, actor as actor_1, cast as cast_0, cast as cast_1, movie as movie_0 where actor_1.name = "Iran" and movie_0.title = "Behind Jim Jarmusch" and actor_0.aid = cast_0.aid and actor_1.aid = cast_1.aid and cast_0.msid = movie_0.mid and cast_1.msid = movie_0.mid
TOT: 0.814557484014524; TR: 0.8896400006920934; QF: 0.05972222222222222; select count(distinct(movie_0.title)) from actor as actor_0, actor as actor_1, cast as cast_0, cast as cast_1, movie as movie_0 where actor_0.name = "Iran" and actor_1.name = "Jim Jarmusch" and actor_0.aid = cast_0.aid and actor_1.aid = cast_1.aid and cast_0.msid = movie_0.mid and cast_1.msid = movie_0.mid
TOT: 0.813615593928206; TR: 0.8863260123552488; QF: 0.14305555555555555; select count(distinct(movie_0.title)) from actor as actor_0, cast as cast_0, directed_by as directed_by_0, director as director_0, movie as movie_0 where actor_0.nationality = "Iran" and director_0.name = "Jim Jarmusch" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid


04:01  INFO: ================
04:01  INFO: QUERY 37: Find all movies produced by "Walt Disney" after 2010
04:01  INFO: ================
1062. ROOT: ROOT; NA; ; (0) 
1063. Find: CMT; NA; ; (0) 
1064. movies: NT; NA; all; (0) movie.title(1.0):| movie(1.0):| cast.role(0.95):Movie; Movie F; Movie AD; | company.name(0.95):Movies; Movie; Movie Movie; | tv_series.title(0.84):Movies, Movies, Movi; Movie Mob; Moon Movies; | keyword.keyword(0.83):movie-in-movie; movies-about-movies; b-movie; | actor.name(0.76):| 
1066. produced: NT; NA; ; (0) made_by(0.74):| directed_by(0.69):| producer.name(0.68):| producer(0.68):| cast.role(0.63):| cast(0.63):| written_by(0.63):| 
1067. Walt Disney: VTTEXT; NA; ; (0) director.name(1.0):Walt Disney; Walt Disney; Walter Elias Disney; | actor.name(1.0):Walt Disney; Walt Disney; Walter Disney; | producer.name(1.0):Walt Disney; Walt Disney; Walter Disney; | company.name(1.0):Walt Disney; Walt Disney; Walt Disney; | writer.name(1.0):Walt Disney; Walt Disney; The Dutch Walt Disne; | cast.role(0.85):Adult Walt Disney; Adult Walt Disney; Adult Walt Disney; | movie.title(0.81):Walt Disney Is Dead; Walt Disney Is Dead; Praça Walt Disney; | 
1069. 2010: VTNUM; NA; ; (0) movie.release_year(1.0):2012; 2014; 2015; | tv_series.release_year(1.0):2014; 2014; 2013; | actor.birth_year(1.0):2011; 2013; 2013; | 
1070. after: OT; >; ; (0) 
Find, VB
all, DT
movies, NNS
produced, VBN
by, IN
Walt Disney, NNP
after, IN
2010, CD
root(ROOT-0, Find-1)
det(movies-3, all-2)
dobj(Find-1, movies-3)
acl(movies-3, produced-4)
case(Walt Disney-6, by-5)
nmod(produced-4, Walt Disney-6)
case(2010-8, after-7)
nmod(produced-4, 2010-8)

PARSE TREE:(1062) ROOT ROOT
    (1063) Find CMT
        (1064) movies NT
            (1066) produced NT
                (1067) Walt Disney VTTEXT
                (1069) 2010 VTNUM
                    (1070) after OT


===========
TRANSLATIONS
===========
TOT: 0.8979007600118484; NL: 0.8979007600118484; NL+AG: 0.9687724970127387; NL+QF: 0.8979007600118484; rels: []; projs: [movie_0.title]; preds: [director_0.name = "Walt Disney",movie_0.release_year > 2010]; havings: []; superlative: []; blanks: 1
TOT: 0.8979007600118484; NL: 0.8979007600118484; NL+AG: 0.9687724970127387; NL+QF: 0.8979007600118484; rels: []; projs: [movie_0.title]; preds: [director_0.name = "Walt Disney",tv_series_0.release_year > 2010]; havings: []; superlative: []; blanks: 1
TOT: 0.8979007600118484; NL: 0.8979007600118484; NL+AG: 0.9687724970127387; NL+QF: 0.8979007600118484; rels: []; projs: [movie_0.title]; preds: [director_0.name = "Walt Disney",actor_0.birth_year > 2010]; havings: []; superlative: []; blanks: 1
TOT: 0.8979007600118484; NL: 0.8979007600118484; NL+AG: 0.9687724970127387; NL+QF: 0.8979007600118484; rels: []; projs: [movie_0.title]; preds: [actor_0.name = "Walt Disney",movie_0.release_year > 2010]; havings: []; superlative: []; blanks: 1
TOT: 0.8979007600118484; NL: 0.8979007600118484; NL+AG: 0.9687724970127387; NL+QF: 0.8979007600118484; rels: []; projs: [movie_0.title]; preds: [actor_0.name = "Walt Disney",tv_series_0.release_year > 2010]; havings: []; superlative: []; blanks: 1
TOT: 0.8979007600118484; NL: 0.8979007600118484; NL+AG: 0.9687724970127387; NL+QF: 0.8979007600118484; rels: []; projs: [movie_0.title]; preds: [actor_0.name = "Walt Disney",actor_0.birth_year > 2010]; havings: []; superlative: []; blanks: 1
TOT: 0.8979007600118484; NL: 0.8979007600118484; NL+AG: 0.9687724970127387; NL+QF: 0.8979007600118484; rels: []; projs: [movie_0.title]; preds: [producer_0.name = "Walt Disney",movie_0.release_year > 2010]; havings: []; superlative: []; blanks: 1
TOT: 0.8979007600118484; NL: 0.8979007600118484; NL+AG: 0.9687724970127387; NL+QF: 0.8979007600118484; rels: []; projs: [movie_0.title]; preds: [producer_0.name = "Walt Disney",tv_series_0.release_year > 2010]; havings: []; superlative: []; blanks: 1
TOT: 0.8979007600118484; NL: 0.8979007600118484; NL+AG: 0.9687724970127387; NL+QF: 0.8979007600118484; rels: []; projs: [movie_0.title]; preds: [producer_0.name = "Walt Disney",actor_0.birth_year > 2010]; havings: []; superlative: []; blanks: 1
TOT: 0.8979007600118484; NL: 0.8979007600118484; NL+AG: 0.9687724970127387; NL+QF: 0.8979007600118484; rels: []; projs: [movie_0.title]; preds: [company_0.name = "Walt Disney",movie_0.release_year > 2010]; havings: []; superlative: []; blanks: 1
TOT: 0.8979007600118484; NL: 0.8979007600118484; NL+AG: 0.9687724970127387; NL+QF: 0.8979007600118484; rels: []; projs: [movie_0.title]; preds: [company_0.name = "Walt Disney",tv_series_0.release_year > 2010]; havings: []; superlative: []; blanks: 1
TOT: 0.8979007600118484; NL: 0.8979007600118484; NL+AG: 0.9687724970127387; NL+QF: 0.8979007600118484; rels: []; projs: [movie_0.title]; preds: [company_0.name = "Walt Disney",actor_0.birth_year > 2010]; havings: []; superlative: []; blanks: 1
TOT: 0.8979007600118484; NL: 0.8979007600118484; NL+AG: 0.9687724970127387; NL+QF: 0.8979007600118484; rels: []; projs: [movie_0.title]; preds: [writer_0.name = "Walt Disney",movie_0.release_year > 2010]; havings: []; superlative: []; blanks: 1
TOT: 0.8979007600118484; NL: 0.8979007600118484; NL+AG: 0.9687724970127387; NL+QF: 0.8979007600118484; rels: []; projs: [movie_0.title]; preds: [writer_0.name = "Walt Disney",tv_series_0.release_year > 2010]; havings: []; superlative: []; blanks: 1
TOT: 0.8979007600118484; NL: 0.8979007600118484; NL+AG: 0.9687724970127387; NL+QF: 0.8979007600118484; rels: []; projs: [movie_0.title]; preds: [writer_0.name = "Walt Disney",actor_0.birth_year > 2010]; havings: []; superlative: []; blanks: 1

===========
RESULTS
===========
TOT: 0.8430778053317484; TR: 0.8979007600118484; QF: 0.27777777777777773; select movie_0.title from directed_by as directed_by_0, director as director_0, movie as movie_0 where director_0.name = "Walt Disney" and movie_0.release_year > 2010 and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid
TOT: 0.8416492339031769; TR: 0.8979007600118484; QF: 0.21428571428571427; select movie_0.title from company as company_0, copyright as copyright_0, movie as movie_0 where company_0.name = "Walt Disney" and movie_0.release_year > 2010 and company_0.id = copyright_0.cid and copyright_0.msid = movie_0.mid
TOT: 0.841306971998415; TR: 0.8979007600118484; QF: 0.19907407407407407; select movie_0.title from actor as actor_0, cast as cast_0, movie as movie_0 where actor_0.name = "Walt Disney" and movie_0.release_year > 2010 and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid
TOT: 0.841306971998415; TR: 0.8979007600118484; QF: 0.19907407407407407; select movie_0.title from actor as actor_0, cast as cast_0, movie as movie_0 where actor_0.birth_year > 2010 and actor_0.name = "Walt Disney" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid
TOT: 0.8368278053317484; TR: 0.8979007600118484; QF: 0.0; select movie_0.title from movie as movie_0, writer as writer_0, written_by as written_by_0 where movie_0.release_year > 2010 and writer_0.name = "Walt Disney" and movie_0.mid = written_by_0.msid and writer_0.wid = written_by_0.wid
TOT: 0.8368278053317484; TR: 0.8979007600118484; QF: 0.0; select movie_0.title from made_by as made_by_0, movie as movie_0, producer as producer_0 where movie_0.release_year > 2010 and producer_0.name = "Walt Disney" and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid
TOT: 0.8234541294363157; TR: 0.8979007600118484; QF: 0.14305555555555555; select movie_0.title from actor as actor_0, cast as cast_0, directed_by as directed_by_0, director as director_0, movie as movie_0 where actor_0.birth_year > 2010 and director_0.name = "Walt Disney" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid
TOT: 0.8230255580077442; TR: 0.8979007600118484; QF: 0.12400793650793651; select movie_0.title from actor as actor_0, cast as cast_0, company as company_0, copyright as copyright_0, movie as movie_0 where actor_0.birth_year > 2010 and company_0.name = "Walt Disney" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and company_0.id = copyright_0.cid and copyright_0.msid = movie_0.mid
TOT: 0.8221103794363157; TR: 0.8979007600118484; QF: 0.08333333333333333; select movie_0.title from directed_by as directed_by_0, directed_by as directed_by_1, director as director_0, movie as movie_0, tv_series as tv_series_0 where director_0.name = "Walt Disney" and tv_series_0.release_year > 2010 and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and directed_by_1.did = director_0.did and directed_by_1.msid = tv_series_0.sid
TOT: 0.8216818080077443; TR: 0.8979007600118484; QF: 0.06428571428571428; select movie_0.title from company as company_0, copyright as copyright_0, copyright as copyright_1, movie as movie_0, tv_series as tv_series_0 where company_0.name = "Walt Disney" and tv_series_0.release_year > 2010 and company_0.id = copyright_0.cid and company_0.id = copyright_1.cid and copyright_0.msid = movie_0.mid and copyright_1.msid = tv_series_0.sid


04:02  INFO: ================
04:02  INFO: QUERY 81: Which movie had the character "Daffy Duck"
04:02  INFO: ================
1072. ROOT: ROOT; NA; ; (0) 
1074. movie: NT; NA; ; (0) movie.title(1.0):| movie(1.0):| cast.role(0.95):Movie; Movie F; Movie AD; | company.name(0.95):Movie; Movies; Movie Movie; | keyword.keyword(0.83):movie-in-movie; b-movie; z-movie; | actor.name(0.76):| actor(0.76):| 
1075. Which: CMT; NA; ; (0) 
1076. Daffy Duck: VTTEXT; NA; ; (0) cast.role(1.0):Daffy Duck; Daffy Duck; Daffy Duck; | movie.title(0.8):Daffy Duck Hunt; Daffy Duck Hunt; The Daffy Duckaroo; | director.name(0.78):Deafy Duck; Duck; Tim Duck; | producer.name(0.78):Deafy Duck; Duck; Duck; | writer.name(0.78):Deafy Duck; Duck; Tuck the Duck; | tv_series.title(0.75):The Daffy Duck Show; The Daffy Duck Show; Mighty Ducks; | actor.name(0.59):Joey Duck; Baby Duck; Daffy O'Brick; | 
1078. character: VTTEXT; NA; ; (0) movie.title(0.95):Character; Character; Character; | tv_series.title(0.95):Character; Character; The Characters; | cast.role(0.95):Character; Character; Character; | company.name(0.85):Character 7; Character Matters; Character Tank; | keyword.keyword(0.81):character-arc; literary-character; character-actor; | actor.name(0.78):| actor(0.78):| 
Which, WDT
movie, NN
had, VBD
the, DT
character, NN
Daffy Duck, NN
det(movie-2, Which-1)
nsubj(had-3, movie-2)
root(ROOT-0, had-3)
det(Daffy Duck-6, the-4)
compound(Daffy Duck-6, character-5)
dobj(had-3, Daffy Duck-6)

PARSE TREE:(1072) ROOT ROOT
    (1075) Which CMT
        (1074) movie NT
            (1076) Daffy Duck VTTEXT
                (1078) character VTTEXT


===========
TRANSLATIONS
===========
TOT: 0.8662391053409028; NL: 0.8662391053409028; NL+AG: 0.9628121638266046; NL+QF: 0.8662391053409028; rels: []; projs: [movie_0.title]; preds: [cast_0.role = "Daffy Duck"]; havings: []; superlative: []; blanks: 1
TOT: 0.84126862115985; NL: 0.84126862115985; NL+AG: 0.9394249139348947; NL+QF: 0.84126862115985; rels: []; projs: [actor_0.name]; preds: [cast_0.role = "Daffy Duck"]; havings: []; superlative: []; blanks: 1
TOT: 0.8087598309767562; NL: 0.7287397777448834; NL+AG: 0.8816630030424233; NL+QF: 0.8087598309767562; rels: [actor]; projs: [actor_0.name]; preds: []; havings: []; superlative: []; blanks: 1
TOT: 0.8047423640793911; NL: 0.8047423640793911; NL+AG: 0.9393940905990484; NL+QF: 0.8047423640793911; rels: []; projs: [movie_0.title]; preds: [movie_0.title = "Daffy Duck Hunt"]; havings: []; superlative: []; blanks: 1
TOT: 0.7977619740549068; NL: 0.7977619740549068; NL+AG: 0.9186092792989894; NL+QF: 0.7977619740549068; rels: [actor]; projs: [movie_0.title]; preds: []; havings: []; superlative: []; blanks: 1
TOT: 0.7966293367505897; NL: 0.7966293367505897; NL+AG: 0.9391833540180654; NL+QF: 0.7966293367505897; rels: []; projs: [movie_0.title]; preds: [director_0.name = "Deafy Duck"]; havings: []; superlative: []; blanks: 1
TOT: 0.7966293367505897; NL: 0.7966293367505897; NL+AG: 0.9391833540180654; NL+QF: 0.7966293367505897; rels: []; projs: [movie_0.title]; preds: [producer_0.name = "Deafy Duck"]; havings: []; superlative: []; blanks: 1
TOT: 0.7966293367505897; NL: 0.7966293367505897; NL+AG: 0.9391833540180654; NL+QF: 0.7966293367505897; rels: []; projs: [movie_0.title]; preds: [writer_0.name = "Deafy Duck"]; havings: []; superlative: []; blanks: 1
TOT: 0.7912922821972069; NL: 0.7912922821972069; NL+AG: 0.9394249139348947; NL+QF: 0.7912922821972069; rels: []; projs: [actor_0.name]; preds: [cast_0.role = "Daffy Duck"]; havings: []; superlative: []; blanks: 1
TOT: 0.7906352971285433; NL: 0.6573229797118848; NL+AG: 0.9393940905990484; NL+QF: 0.7906352971285433; rels: [movie]; projs: [movie_0.title]; preds: [movie_0.title = "Daffy Duck Hunt"]; havings: []; superlative: []; blanks: 0
TOT: 0.7854026604085581; NL: 0.7854026604085581; NL+AG: 0.9391833540180654; NL+QF: 0.7854026604085581; rels: []; projs: [movie_0.title]; preds: [tv_series_0.title = "The Daffy Duck Show"]; havings: []; superlative: []; blanks: 1

===========
RESULTS
===========
TOT: 0.8374458563302427; TR: 0.8087598309767562; QF: 1.0; select actor_0.name from actor as actor_0
TOT: 0.8314593541410521; TR: 0.8662391053409028; QF: 0.2222222222222222; select movie_0.title from cast as cast_0, movie as movie_0 where cast_0.role = "Daffy Duck" and cast_0.msid = movie_0.mid
TOT: 0.8136719425871572; TR: 0.84126862115985; QF: 0.375; select actor_0.name from actor as actor_0, cast as cast_0 where cast_0.role = "Daffy Duck" and actor_0.aid = cast_0.aid
TOT: 0.7899798965739098; TR: 0.8662391053409028; QF: 0.07222222222222222; select movie_0.title from cast as cast_0, directed_by as directed_by_0, directed_by as directed_by_1, director as director_0, movie as movie_0, tv_series as tv_series_0 where cast_0.role = "Daffy Duck" and cast_0.msid = tv_series_0.sid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and directed_by_1.did = director_0.did and directed_by_1.msid = tv_series_0.sid
TOT: 0.7896941822881955; TR: 0.8662391053409028; QF: 0.059523809523809514; select movie_0.title from cast as cast_0, company as company_0, copyright as copyright_0, copyright as copyright_1, movie as movie_0, tv_series as tv_series_0 where cast_0.role = "Daffy Duck" and cast_0.msid = tv_series_0.sid and company_0.id = copyright_0.cid and company_0.id = copyright_1.cid and copyright_0.msid = movie_0.mid and copyright_1.msid = tv_series_0.sid
TOT: 0.7896941822881955; TR: 0.8662391053409028; QF: 0.059523809523809514; select movie_0.title from cast as cast_0, classification as classification_0, classification as classification_1, genre as genre_0, movie as movie_0, tv_series as tv_series_0 where cast_0.role = "Daffy Duck" and cast_0.msid = tv_series_0.sid and classification_0.gid = genre_0.gid and classification_0.msid = movie_0.mid and classification_1.gid = genre_0.gid and classification_1.msid = tv_series_0.sid
TOT: 0.7887298965739098; TR: 0.8662391053409028; QF: 0.016666666666666666; select movie_0.title from cast as cast_0, keyword as keyword_0, movie as movie_0, tags as tags_0, tags as tags_1, tv_series as tv_series_0 where cast_0.role = "Daffy Duck" and cast_0.msid = tv_series_0.sid and keyword_0.id = tags_0.kid and keyword_0.id = tags_1.kid and movie_0.mid = tags_0.msid and tags_1.msid = tv_series_0.sid
TOT: 0.7887298965739098; TR: 0.8662391053409028; QF: 0.016666666666666666; select movie_0.title from cast as cast_0, made_by as made_by_0, made_by as made_by_1, movie as movie_0, producer as producer_0, tv_series as tv_series_0 where cast_0.role = "Daffy Duck" and cast_0.msid = tv_series_0.sid and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid and made_by_1.msid = tv_series_0.sid and made_by_1.pid = producer_0.pid
TOT: 0.7887298965739098; TR: 0.8662391053409028; QF: 0.016666666666666666; select movie_0.title from cast as cast_0, movie as movie_0, tv_series as tv_series_0, writer as writer_0, written_by as written_by_0, written_by as written_by_1 where cast_0.role = "Daffy Duck" and cast_0.msid = tv_series_0.sid and movie_0.mid = written_by_0.msid and tv_series_0.sid = written_by_1.msid and writer_0.wid = written_by_0.wid and writer_0.wid = written_by_1.wid
TOT: 0.7569970955596785; TR: 0.7966293367505897; QF: 0.27777777777777773; select movie_0.title from directed_by as directed_by_0, director as director_0, movie as movie_0 where director_0.name = "Deafy Duck" and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid


04:04  INFO: ================
04:04  INFO: QUERY 118: Find all movies featuring both "Matt Damon" and "Ben Affleck"
04:04  INFO: ================
1080. ROOT: ROOT; NA; ; (0) 
1081. Find: CMT; NA; ; (0) 
1082. featuring: NT; NA; ; (0) tv_series.title(0.69):| tv_series(0.69):| movie.release_year(0.64):| tv_series.release_year(0.64):| made_by(0.64):| movie.title_aka(0.62):| tv_series.title_aka(0.62):| 
1083. movies: NT; NA; all; (0) movie.title(1.0):| movie(1.0):| cast.role(0.95):Movie; Movie F; Movie AD; | company.name(0.95):Movies; Movie; Movie Movie; | tv_series.title(0.84):Movies, Movies, Movi; Movie Mob; Moon Movies; | keyword.keyword(0.83):movie-in-movie; movies-about-movies; b-movie; | actor.name(0.76):| 
1085. Matt Damon: VTTEXT; NA; ; (0) director.name(1.0):Matt Damon; Matt Diamond; Matt Diamond; | actor.name(1.0):Matt Damon; Matt Damon; Matt Diamond; | producer.name(1.0):Matt Damon; Matt Damon; Matt Diamond; | writer.name(1.0):Matt Damon; Matt Damon; Matt Diamond; | movie.title(0.76):I'm Not Matt Damon; I'm Not Matt Damon; Meeting Matt Damon; | cast.role(0.74):Matt Stamon; Matt Damien; Matt Demond; | tv_series.title(0.67):Damon; The Damon Elliott Sh; Matt Houston; | 
1088. Ben Affleck: VTTEXT; NA; ; (0) director.name(1.0):Ben Affleck; Ben Affleck; Affleck; | actor.name(1.0):Ben Affleck; Ben Affleck; Affleck; | producer.name(1.0):Ben Affleck; Ben Affleck; Affleck; | writer.name(1.0):Ben Affleck; Ben Affleck; Affleck; | cast.role(0.9):Ben Afflect; Ben Afflect; Ben Affleck Fan; | movie.title(0.59):Untitled Ben Affleck; Untitled Ben Affleck; Argo: Ben Affleck's ; | company.name(0.56):The Affleck/Middleto; Ben Fechler; Ben Fechler; | 
Find, VB
all, DT
movies, NNS
featuring, VBG
both, CC
Matt Damon, NNP
and, CC
Ben Affleck, NNP
root(ROOT-0, Find-1)
det(movies-3, all-2)
nsubj(featuring-4, movies-3)
dep(Find-1, featuring-4)
cc:preconj(Matt Damon-6, both-5)
dobj(featuring-4, Matt Damon-6)
cc(Matt Damon-6, and-7)
conj(Matt Damon-6, Ben Affleck-8)

PARSE TREE:(1080) ROOT ROOT
    (1081) Find CMT
        (1083) movies NT
            (1082) featuring NT
                (1085) Matt Damon VTTEXT
                (1088) Ben Affleck VTTEXT


===========
TRANSLATIONS
===========
TOT: 0.8979007600118484; NL: 0.8979007600118484; NL+AG: 0.9685548245020893; NL+QF: 0.8979007600118484; rels: []; projs: [movie_0.title]; preds: [director_0.name = "Matt Damon",director_0.name = "Ben Affleck"]; havings: []; superlative: []; blanks: 1
TOT: 0.8979007600118484; NL: 0.8979007600118484; NL+AG: 0.9685548245020893; NL+QF: 0.8979007600118484; rels: []; projs: [movie_0.title]; preds: [director_0.name = "Matt Damon",actor_0.name = "Ben Affleck"]; havings: []; superlative: []; blanks: 1
TOT: 0.8979007600118484; NL: 0.8979007600118484; NL+AG: 0.9685548245020893; NL+QF: 0.8979007600118484; rels: []; projs: [movie_0.title]; preds: [director_0.name = "Matt Damon",producer_0.name = "Ben Affleck"]; havings: []; superlative: []; blanks: 1
TOT: 0.8979007600118484; NL: 0.8979007600118484; NL+AG: 0.9685548245020893; NL+QF: 0.8979007600118484; rels: []; projs: [movie_0.title]; preds: [director_0.name = "Matt Damon",writer_0.name = "Ben Affleck"]; havings: []; superlative: []; blanks: 1
TOT: 0.8979007600118484; NL: 0.8979007600118484; NL+AG: 0.9685548245020893; NL+QF: 0.8979007600118484; rels: []; projs: [movie_0.title]; preds: [actor_0.name = "Matt Damon",director_0.name = "Ben Affleck"]; havings: []; superlative: []; blanks: 1
TOT: 0.8979007600118484; NL: 0.8979007600118484; NL+AG: 0.9685548245020893; NL+QF: 0.8979007600118484; rels: []; projs: [movie_0.title]; preds: [actor_0.name = "Matt Damon",actor_0.name = "Ben Affleck"]; havings: []; superlative: []; blanks: 1
TOT: 0.8979007600118484; NL: 0.8979007600118484; NL+AG: 0.9685548245020893; NL+QF: 0.8979007600118484; rels: []; projs: [movie_0.title]; preds: [actor_0.name = "Matt Damon",producer_0.name = "Ben Affleck"]; havings: []; superlative: []; blanks: 1
TOT: 0.8979007600118484; NL: 0.8979007600118484; NL+AG: 0.9685548245020893; NL+QF: 0.8979007600118484; rels: []; projs: [movie_0.title]; preds: [actor_0.name = "Matt Damon",writer_0.name = "Ben Affleck"]; havings: []; superlative: []; blanks: 1
TOT: 0.8979007600118484; NL: 0.8979007600118484; NL+AG: 0.9685548245020893; NL+QF: 0.8979007600118484; rels: []; projs: [movie_0.title]; preds: [producer_0.name = "Matt Damon",director_0.name = "Ben Affleck"]; havings: []; superlative: []; blanks: 1
TOT: 0.8979007600118484; NL: 0.8979007600118484; NL+AG: 0.9685548245020893; NL+QF: 0.8979007600118484; rels: []; projs: [movie_0.title]; preds: [producer_0.name = "Matt Damon",actor_0.name = "Ben Affleck"]; havings: []; superlative: []; blanks: 1
TOT: 0.8979007600118484; NL: 0.8979007600118484; NL+AG: 0.9685548245020893; NL+QF: 0.8979007600118484; rels: []; projs: [movie_0.title]; preds: [producer_0.name = "Matt Damon",producer_0.name = "Ben Affleck"]; havings: []; superlative: []; blanks: 1
TOT: 0.8979007600118484; NL: 0.8979007600118484; NL+AG: 0.9685548245020893; NL+QF: 0.8979007600118484; rels: []; projs: [movie_0.title]; preds: [producer_0.name = "Matt Damon",writer_0.name = "Ben Affleck"]; havings: []; superlative: []; blanks: 1
TOT: 0.8979007600118484; NL: 0.8979007600118484; NL+AG: 0.9685548245020893; NL+QF: 0.8979007600118484; rels: []; projs: [movie_0.title]; preds: [writer_0.name = "Matt Damon",director_0.name = "Ben Affleck"]; havings: []; superlative: []; blanks: 1
TOT: 0.8979007600118484; NL: 0.8979007600118484; NL+AG: 0.9685548245020893; NL+QF: 0.8979007600118484; rels: []; projs: [movie_0.title]; preds: [writer_0.name = "Matt Damon",actor_0.name = "Ben Affleck"]; havings: []; superlative: []; blanks: 1
TOT: 0.8979007600118484; NL: 0.8979007600118484; NL+AG: 0.9685548245020893; NL+QF: 0.8979007600118484; rels: []; projs: [movie_0.title]; preds: [writer_0.name = "Matt Damon",producer_0.name = "Ben Affleck"]; havings: []; superlative: []; blanks: 1
TOT: 0.8979007600118484; NL: 0.8979007600118484; NL+AG: 0.9685548245020893; NL+QF: 0.8979007600118484; rels: []; projs: [movie_0.title]; preds: [writer_0.name = "Matt Damon",writer_0.name = "Ben Affleck"]; havings: []; superlative: []; blanks: 1

===========
RESULTS
===========
TOT: 0.8234541294363157; TR: 0.8979007600118484; QF: 0.14305555555555555; select movie_0.title from actor as actor_0, cast as cast_0, directed_by as directed_by_0, director as director_0, movie as movie_0 where actor_0.name = "Ben Affleck" and director_0.name = "Matt Damon" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid
TOT: 0.8234541294363157; TR: 0.8979007600118484; QF: 0.14305555555555555; select movie_0.title from actor as actor_0, cast as cast_0, directed_by as directed_by_0, director as director_0, movie as movie_0 where actor_0.name = "Matt Damon" and director_0.name = "Ben Affleck" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid
TOT: 0.8221103794363157; TR: 0.8979007600118484; QF: 0.08333333333333333; select movie_0.title from directed_by as directed_by_0, director as director_0, made_by as made_by_0, movie as movie_0, producer as producer_0 where director_0.name = "Matt Damon" and producer_0.name = "Ben Affleck" and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid
TOT: 0.8221103794363157; TR: 0.8979007600118484; QF: 0.08333333333333333; select movie_0.title from directed_by as directed_by_0, director as director_0, made_by as made_by_0, movie as movie_0, producer as producer_0 where director_0.name = "Ben Affleck" and producer_0.name = "Matt Damon" and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid
TOT: 0.8221103794363157; TR: 0.8979007600118484; QF: 0.08333333333333333; select movie_0.title from directed_by as directed_by_0, directed_by as directed_by_1, director as director_0, director as director_1, movie as movie_0 where director_0.name = "Matt Damon" and director_1.name = "Ben Affleck" and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and directed_by_1.did = director_1.did and directed_by_1.msid = movie_0.mid
TOT: 0.8221103794363157; TR: 0.8979007600118484; QF: 0.08333333333333333; select movie_0.title from directed_by as directed_by_0, director as director_0, movie as movie_0, writer as writer_0, written_by as written_by_0 where director_0.name = "Matt Damon" and writer_0.name = "Ben Affleck" and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and movie_0.mid = written_by_0.msid and writer_0.wid = written_by_0.wid
TOT: 0.8221103794363157; TR: 0.8979007600118484; QF: 0.08333333333333333; select movie_0.title from directed_by as directed_by_0, director as director_0, movie as movie_0, writer as writer_0, written_by as written_by_0 where director_0.name = "Ben Affleck" and writer_0.name = "Matt Damon" and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and movie_0.mid = written_by_0.msid and writer_0.wid = written_by_0.wid
TOT: 0.8215791294363157; TR: 0.8979007600118484; QF: 0.05972222222222222; select movie_0.title from actor as actor_0, cast as cast_0, movie as movie_0, writer as writer_0, written_by as written_by_0 where actor_0.name = "Matt Damon" and writer_0.name = "Ben Affleck" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and movie_0.mid = written_by_0.msid and writer_0.wid = written_by_0.wid
TOT: 0.8215791294363157; TR: 0.8979007600118484; QF: 0.05972222222222222; select movie_0.title from actor as actor_0, cast as cast_0, movie as movie_0, writer as writer_0, written_by as written_by_0 where actor_0.name = "Ben Affleck" and writer_0.name = "Matt Damon" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and movie_0.mid = written_by_0.msid and writer_0.wid = written_by_0.wid
TOT: 0.8215791294363157; TR: 0.8979007600118484; QF: 0.05972222222222222; select movie_0.title from actor as actor_0, cast as cast_0, made_by as made_by_0, movie as movie_0, producer as producer_0 where actor_0.name = "Matt Damon" and producer_0.name = "Ben Affleck" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid


04:06  INFO: ================
04:06  INFO: QUERY 73: Find the actors who played in the movie "Camp X-Ray"
04:06  INFO: ================
04:07  INFO: ================
04:07  INFO: QUERY 54: Find all movies produced by Netflix
04:07  INFO: ================
1101. ROOT: ROOT; NA; ; (0) 
1102. Find: CMT; NA; ; (0) 
1103. movies: NT; NA; all; (0) movie.title(1.0):| movie(1.0):| cast.role(0.95):Movie; Movie F; Movie AD; | company.name(0.95):Movies; Movie; Movie Movie; | tv_series.title(0.84):Movies, Movies, Movi; Movie Mob; Moon Movies; | keyword.keyword(0.83):movie-in-movie; movies-about-movies; b-movie; | actor.name(0.76):| 
1105. produced: NT; NA; ; (0) made_by(0.74):| directed_by(0.69):| producer.name(0.68):| producer(0.68):| cast.role(0.63):| cast(0.63):| written_by(0.63):| 
1106. Netflix: VTTEXT; NA; ; (0) company.name(1.0):Netflix; Netflix; Netflix; | keyword.keyword(1.0):netflix; netflix-series; netflix-production; | tv_series.title(0.78):| tv_series(0.78):| cast.role(0.77):Netflix guy; | movie.title(0.74):| movie(0.74):| 
Find, VB
all, DT
movies, NNS
produced, VBN
by, IN
Netflix, NNP
root(ROOT-0, Find-1)
det(movies-3, all-2)
dobj(Find-1, movies-3)
acl(movies-3, produced-4)
case(Netflix-6, by-5)
nmod(produced-4, Netflix-6)

PARSE TREE:(1101) ROOT ROOT
    (1102) Find CMT
        (1103) movies NT
            (1105) produced NT
                (1106) Netflix VTTEXT


===========
TRANSLATIONS
===========
TOT: 0.9055419360254962; NL: 0.9055419360254962; NL+AG: 0.9628121638266046; NL+QF: 0.9055419360254962; rels: [made_by]; projs: [movie_0.title]; preds: [company_0.name = "Netflix"]; havings: []; superlative: []; blanks: 0
TOT: 0.9055419360254962; NL: 0.9055419360254962; NL+AG: 0.9628121638266046; NL+QF: 0.9055419360254962; rels: [made_by]; projs: [movie_0.title]; preds: [keyword_0.keyword = "netflix"]; havings: []; superlative: []; blanks: 0
TOT: 0.8852322584043497; NL: 0.8852322584043497; NL+AG: 0.9628121638266046; NL+QF: 0.8852322584043497; rels: [directed_by]; projs: [movie_0.title]; preds: [company_0.name = "Netflix"]; havings: []; superlative: []; blanks: 0
TOT: 0.8852322584043497; NL: 0.8852322584043497; NL+AG: 0.9628121638266046; NL+QF: 0.8852322584043497; rels: [directed_by]; projs: [movie_0.title]; preds: [keyword_0.keyword = "netflix"]; havings: []; superlative: []; blanks: 0
TOT: 0.8783733725393061; NL: 0.8783733725393061; NL+AG: 0.9628121638266046; NL+QF: 0.8783733725393061; rels: [producer]; projs: [movie_0.title]; preds: [company_0.name = "Netflix"]; havings: []; superlative: []; blanks: 0
TOT: 0.8783733725393061; NL: 0.8783733725393061; NL+AG: 0.9628121638266046; NL+QF: 0.8783733725393061; rels: [producer]; projs: [movie_0.title]; preds: [keyword_0.keyword = "netflix"]; havings: []; superlative: []; blanks: 0
TOT: 0.869413283015753; NL: 0.8002271178074418; NL+AG: 0.9186092792989894; NL+QF: 0.869413283015753; rels: [movie,directed_by]; projs: [movie_0.title]; preds: []; havings: []; superlative: []; blanks: 0
TOT: 0.8662391053409028; NL: 0.8662391053409028; NL+AG: 0.9628121638266046; NL+QF: 0.8662391053409028; rels: []; projs: [movie_0.title]; preds: [company_0.name = "Netflix"]; havings: []; superlative: []; blanks: 1
TOT: 0.8662391053409028; NL: 0.8662391053409028; NL+AG: 0.9628121638266046; NL+QF: 0.8662391053409028; rels: []; projs: [movie_0.title]; preds: [keyword_0.keyword = "netflix"]; havings: []; superlative: []; blanks: 1
TOT: 0.8352193753498772; NL: 0.8352193753498772; NL+AG: 0.9186092792989894; NL+QF: 0.8352193753498772; rels: [made_by,tv_series]; projs: [movie_0.title]; preds: []; havings: []; superlative: []; blanks: 0
TOT: 0.8316369478681359; NL: 0.8316369478681359; NL+AG: 0.9391833540180654; NL+QF: 0.8316369478681359; rels: [made_by]; projs: [movie_0.title]; preds: [cast_0.role = "Netflix guy"]; havings: []; superlative: []; blanks: 0

===========
RESULTS
===========
TOT: 0.8184368302160624; TR: 0.9055419360254962; QF: 0.023809523809523808; select movie_0.title from company as company_0, copyright as copyright_0, made_by as made_by_0, made_by as made_by_1, movie as movie_0, producer as producer_0, tv_series as tv_series_0 where company_0.name = "Netflix" and company_0.id = copyright_0.cid and copyright_0.msid = tv_series_0.sid and made_by_0.msid = tv_series_0.sid and made_by_0.pid = producer_0.pid and made_by_1.msid = movie_0.mid and made_by_1.pid = producer_0.pid
TOT: 0.8179011159303482; TR: 0.9055419360254962; QF: 0.0; select movie_0.title from keyword as keyword_0, made_by as made_by_0, made_by as made_by_1, movie as movie_0, producer as producer_0, tags as tags_0, tv_series as tv_series_0 where keyword_0.keyword = "netflix" and keyword_0.id = tags_0.kid and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid and made_by_1.msid = tv_series_0.sid and made_by_1.pid = producer_0.pid and tags_0.msid = tv_series_0.sid
TOT: 0.8147368274328731; TR: 0.8662391053409028; QF: 0.21428571428571427; select movie_0.title from company as company_0, copyright as copyright_0, movie as movie_0 where company_0.name = "Netflix" and company_0.id = copyright_0.cid and copyright_0.msid = movie_0.mid
TOT: 0.8099153988614446; TR: 0.8662391053409028; QF: 0.0; select movie_0.title from keyword as keyword_0, movie as movie_0, tags as tags_0 where keyword_0.keyword = "netflix" and keyword_0.id = tags_0.kid and movie_0.mid = tags_0.msid
TOT: 0.8017093185238022; TR: 0.8852322584043497; QF: 0.047619047619047616; select movie_0.title from company as company_0, copyright as copyright_0, directed_by as directed_by_0, directed_by as directed_by_1, director as director_0, movie as movie_0, tv_series as tv_series_0 where company_0.name = "Netflix" and company_0.id = copyright_0.cid and copyright_0.msid = tv_series_0.sid and directed_by_0.did = director_0.did and directed_by_0.msid = tv_series_0.sid and directed_by_1.did = director_0.did and directed_by_1.msid = movie_0.mid
TOT: 0.8015307470952309; TR: 0.8852322584043497; QF: 0.03968253968253967; select movie_0.title from directed_by as directed_by_0, directed_by as directed_by_1, director as director_0, keyword as keyword_0, movie as movie_0, tags as tags_0, tv_series as tv_series_0 where keyword_0.keyword = "netflix" and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and directed_by_1.did = director_0.did and directed_by_1.msid = tv_series_0.sid and keyword_0.id = tags_0.kid and tags_0.msid = tv_series_0.sid
TOT: 0.7856990669913009; TR: 0.8662391053409028; QF: 0.05357142857142857; select movie_0.title from actor as actor_0, cast as cast_0, cast as cast_1, company as company_0, copyright as copyright_0, movie as movie_0, tv_series as tv_series_0 where company_0.name = "Netflix" and actor_0.aid = cast_0.aid and actor_0.aid = cast_1.aid and cast_0.msid = tv_series_0.sid and cast_1.msid = movie_0.mid and company_0.id = copyright_0.cid and copyright_0.msid = tv_series_0.sid
TOT: 0.7855651384198723; TR: 0.8662391053409028; QF: 0.047619047619047616; select movie_0.title from classification as classification_0, classification as classification_1, company as company_0, copyright as copyright_0, genre as genre_0, movie as movie_0, tv_series as tv_series_0 where company_0.name = "Netflix" and classification_0.gid = genre_0.gid and classification_0.msid = tv_series_0.sid and classification_1.gid = genre_0.gid and classification_1.msid = movie_0.mid and company_0.id = copyright_0.cid and copyright_0.msid = tv_series_0.sid
TOT: 0.7851824853586479; TR: 0.8662391053409028; QF: 0.030612244897959183; select movie_0.title from classification as classification_0, classification as classification_1, genre as genre_0, keyword as keyword_0, movie as movie_0, tags as tags_0, tv_series as tv_series_0 where keyword_0.keyword = "netflix" and classification_0.gid = genre_0.gid and classification_0.msid = movie_0.mid and classification_1.gid = genre_0.gid and classification_1.msid = tv_series_0.sid and keyword_0.id = tags_0.kid and tags_0.msid = tv_series_0.sid
TOT: 0.7851824853586479; TR: 0.8662391053409028; QF: 0.030612244897959183; select movie_0.title from company as company_0, copyright as copyright_0, copyright as copyright_1, keyword as keyword_0, movie as movie_0, tags as tags_0, tv_series as tv_series_0 where keyword_0.keyword = "netflix" and company_0.id = copyright_0.cid and company_0.id = copyright_1.cid and copyright_0.msid = movie_0.mid and copyright_1.msid = tv_series_0.sid and keyword_0.id = tags_0.kid and tags_0.msid = tv_series_0.sid


04:08  INFO: ================
04:08  INFO: QUERY 60: Find all actors from Austin born after 1980
04:08  INFO: ================
04:10  INFO: ================
04:10  INFO: QUERY 71: Who is the writer of "The Truman Show"
04:10  INFO: ================
04:11  INFO: ================
04:11  INFO: QUERY 56: Who is the director of the series "House of Cards" produced by Netflix?
04:11  INFO: ================
04:20  INFO: ================
04:20  INFO: QUERY 41: Find all movies directed by "Woody Allen" and featuring "Scarlett Johansson"
04:20  INFO: ================
04:22  INFO: ================
04:22  INFO: QUERY 18: Find all movies directed by "Steven Spielberg" after 2006
04:22  INFO: ================
04:24  INFO: ================
04:24  INFO: QUERY 5: Find all actors who are from Canada
04:24  INFO: ================
04:25  INFO: ================
04:25  INFO: QUERY 67: What year was the movie "The Imitation Game" produced
04:25  INFO: ================
1170. ROOT: ROOT; NA; ; (0) 
1171. produced: NT; NA; ; (0) made_by(0.74):| directed_by(0.69):| producer.name(0.68):| producer(0.68):| cast.role(0.63):| cast(0.63):| written_by(0.63):| 
1172. year: NT; NA; ; (0) movie.release_year(1.0):| director.birth_year(1.0):| tv_series.release_year(1.0):| actor.birth_year(1.0):| producer.birth_year(1.0):| writer.birth_year(1.0):| movie.title(0.95):Year; Years; Years; | 
1175. The Imitation Game: VTTEXT; NA; ; (0) movie.title(1.0):The Imitation Game; The Imitation Game; The Imitation Game; | cast.role(0.84):The Imitation Game &; The Imitation Game &; The Imitation Game &; | tv_series.title(0.74):The Temptation Game; The Game; The Game; | keyword.keyword(0.69):imitation; imitation; camel-imitation; | company.name(0.67):Game Station, the; Game Station; Imagination Games; | actor.name(0.64):The Game; The Game; Simon Game; | producer.name(0.64):The Game; The Game; Simon Game; | 
1177. movie: NT; NA; ; (0) movie.title(1.0):| movie(1.0):| cast.role(0.95):Movie; Movie F; Movie AD; | company.name(0.95):Movie; Movies; Movie Movie; | keyword.keyword(0.83):movie-in-movie; b-movie; z-movie; | actor.name(0.76):| actor(0.76):| 
What, WDT
year, NN
was, VBD
the, DT
movie, NN
The Imitation Game, NNP
produced, VBN
det(year-2, What-1)
nmod:tmod(produced-7, year-2)
auxpass(produced-7, was-3)
det(The Imitation Game-6, the-4)
compound(The Imitation Game-6, movie-5)
nsubjpass(produced-7, The Imitation Game-6)
root(ROOT-0, produced-7)

PARSE TREE:(1170) ROOT ROOT
    (1171) produced NT
        (1172) year NT
        (1175) The Imitation Game VTTEXT
            (1177) movie NT


===========
TRANSLATIONS
===========
TOT: 0.8008497901947529; NL: 0.6453241615249634; NL+AG: 0.9046752173932157; NL+QF: 0.8008497901947529; rels: [movie,directed_by]; projs: [movie_0.release_year]; preds: [movie_0.title = "The Imitation Game"]; havings: []; superlative: []; blanks: 0
TOT: 0.8006911345152419; NL: 0.7026093091136248; NL+AG: 0.9272593056085746; NL+QF: 0.8006911345152419; rels: [directed_by]; projs: [movie_0.release_year]; preds: [movie_0.title = "The Imitation Game"]; havings: []; superlative: []; blanks: 0
TOT: 0.7927263367482242; NL: 0.6890706686060093; NL+AG: 0.9027971890969206; NL+QF: 0.7927263367482242; rels: [movie,directed_by]; projs: [movie_0.release_year]; preds: []; havings: []; superlative: []; blanks: 1
TOT: 0.7600236455479921; NL: 0.6890706686060093; NL+AG: 0.9046752173932157; NL+QF: 0.7600236455479921; rels: [directed_by]; projs: [movie_0.release_year]; preds: [movie_0.title = "The Imitation Game"]; havings: []; superlative: []; blanks: 1
TOT: 0.7321687634034981; NL: 0.6453241615249634; NL+AG: 0.9046752173932157; NL+QF: 0.7321687634034981; rels: [movie,directed_by]; projs: [director_0.birth_year]; preds: [movie_0.title = "The Imitation Game"]; havings: []; superlative: []; blanks: 0
TOT: 0.7321687634034981; NL: 0.6453241615249634; NL+AG: 0.9046752173932157; NL+QF: 0.7321687634034981; rels: [movie,directed_by]; projs: [tv_series_0.release_year]; preds: [movie_0.title = "The Imitation Game"]; havings: []; superlative: []; blanks: 0
TOT: 0.7321687634034981; NL: 0.6453241615249634; NL+AG: 0.9046752173932157; NL+QF: 0.7321687634034981; rels: [movie,directed_by]; projs: [actor_0.birth_year]; preds: [movie_0.title = "The Imitation Game"]; havings: []; superlative: []; blanks: 0
TOT: 0.7321687634034981; NL: 0.6453241615249634; NL+AG: 0.9046752173932157; NL+QF: 0.7321687634034981; rels: [movie,directed_by]; projs: [producer_0.birth_year]; preds: [movie_0.title = "The Imitation Game"]; havings: []; superlative: []; blanks: 0
TOT: 0.7321687634034981; NL: 0.6453241615249634; NL+AG: 0.9046752173932157; NL+QF: 0.7321687634034981; rels: [movie,directed_by]; projs: [writer_0.birth_year]; preds: [movie_0.title = "The Imitation Game"]; havings: []; superlative: []; blanks: 0
TOT: 0.7299039658127958; NL: 0.6178306740906271; NL+AG: 0.8786525510227167; NL+QF: 0.7299039658127958; rels: [movie,directed_by]; projs: [movie_0.release_year]; preds: [cast_0.role = "The Imitation Game & Selma"]; havings: []; superlative: []; blanks: 0
TOT: 0.724686636099837; NL: 0.7008938767445889; NL+AG: 0.9027971890969206; NL+QF: 0.724686636099837; rels: [made_by,movie]; projs: [movie_0.release_year]; preds: []; havings: []; superlative: []; blanks: 1

===========
RESULTS
===========
TOT: 0.7022056082146507; TR: 0.7321687634034981; QF: 0.27777777777777773; select director_0.birth_year from directed_by as directed_by_0, director as director_0, movie as movie_0 where movie_0.title = "The Imitation Game" and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid
TOT: 0.6812381823192181; TR: 0.7321687634034981; QF: 0.08333333333333333; select tv_series_0.release_year from directed_by as directed_by_0, directed_by as directed_by_1, director as director_0, movie as movie_0, tv_series as tv_series_0 where movie_0.title = "The Imitation Game" and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and directed_by_1.did = director_0.did and directed_by_1.msid = tv_series_0.sid
TOT: 0.674095027975019; TR: 0.7299039658127958; QF: 0.07222222222222222; select movie_0.release_year from cast as cast_0, directed_by as directed_by_0, directed_by as directed_by_1, director as director_0, movie as movie_0, tv_series as tv_series_0 where cast_0.role = "The Imitation Game & Selma" and cast_0.msid = tv_series_0.sid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and directed_by_1.did = director_0.did and directed_by_1.msid = tv_series_0.sid
TOT: 0.6720964192016499; TR: 0.7321687634034981; QF: 0.06944444444444445; select actor_0.birth_year from actor as actor_0, cast as cast_0, directed_by as directed_by_0, directed_by as directed_by_1, director as director_0, movie as movie_0, tv_series as tv_series_0 where movie_0.title = "The Imitation Game" and actor_0.aid = cast_0.aid and cast_0.msid = tv_series_0.sid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and directed_by_1.did = director_0.did and directed_by_1.msid = tv_series_0.sid
TOT: 0.6717584089975682; TR: 0.7321687634034981; QF: 0.05442176870748299; select director_0.birth_year from classification as classification_0, classification as classification_1, directed_by as directed_by_0, director as director_0, genre as genre_0, movie as movie_0, tv_series as tv_series_0 where movie_0.title = "The Imitation Game" and classification_0.gid = genre_0.gid and classification_0.msid = movie_0.mid and classification_1.gid = genre_0.gid and classification_1.msid = tv_series_0.sid and directed_by_0.did = director_0.did and directed_by_0.msid = tv_series_0.sid
TOT: 0.6717584089975682; TR: 0.7321687634034981; QF: 0.05442176870748299; select director_0.birth_year from company as company_0, copyright as copyright_0, copyright as copyright_1, directed_by as directed_by_0, director as director_0, movie as movie_0, tv_series as tv_series_0 where movie_0.title = "The Imitation Game" and company_0.id = copyright_0.cid and company_0.id = copyright_1.cid and copyright_0.msid = movie_0.mid and copyright_1.msid = tv_series_0.sid and directed_by_0.did = director_0.did and directed_by_0.msid = tv_series_0.sid
TOT: 0.6717095144397451; TR: 0.7321687634034981; QF: 0.05224867724867725; select director_0.birth_year from actor as actor_0, cast as cast_0, cast as cast_1, directed_by as directed_by_0, director as director_0, movie as movie_0, tv_series as tv_series_0 where movie_0.title = "The Imitation Game" and actor_0.aid = cast_0.aid and actor_0.aid = cast_1.aid and cast_0.msid = movie_0.mid and cast_1.msid = tv_series_0.sid and directed_by_0.did = director_0.did and directed_by_0.msid = tv_series_0.sid
TOT: 0.6714267763445071; TR: 0.7321687634034981; QF: 0.03968253968253967; select producer_0.birth_year from directed_by as directed_by_0, directed_by as directed_by_1, director as director_0, made_by as made_by_0, movie as movie_0, producer as producer_0, tv_series as tv_series_0 where movie_0.title = "The Imitation Game" and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and directed_by_1.did = director_0.did and directed_by_1.msid = tv_series_0.sid and made_by_0.msid = tv_series_0.sid and made_by_0.pid = producer_0.pid
TOT: 0.6714267763445071; TR: 0.7321687634034981; QF: 0.03968253968253967; select writer_0.birth_year from directed_by as directed_by_0, directed_by as directed_by_1, director as director_0, movie as movie_0, tv_series as tv_series_0, writer as writer_0, written_by as written_by_0 where movie_0.title = "The Imitation Game" and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and directed_by_1.did = director_0.did and directed_by_1.msid = tv_series_0.sid and tv_series_0.sid = written_by_0.msid and writer_0.wid = written_by_0.wid
TOT: 0.6710696334873641; TR: 0.7321687634034981; QF: 0.023809523809523808; select director_0.birth_year from directed_by as directed_by_0, director as director_0, keyword as keyword_0, movie as movie_0, tags as tags_0, tags as tags_1, tv_series as tv_series_0 where movie_0.title = "The Imitation Game" and directed_by_0.did = director_0.did and directed_by_0.msid = tv_series_0.sid and keyword_0.id = tags_0.kid and keyword_0.id = tags_1.kid and movie_0.mid = tags_0.msid and tags_1.msid = tv_series_0.sid


04:27  INFO: ================
04:27  INFO: QUERY 106: How many movies did Netflix produce?
04:27  INFO: ================
1179. ROOT: ROOT; NA; ; (0) 
1180. produce: NT; NA; ; (0) made_by(0.74):| directed_by(0.69):| producer.name(0.68):| producer(0.68):| cast.role(0.63):| cast(0.63):| written_by(0.63):| 
1181. movies: NT; NA; ; (0) movie.title(1.0):| movie(1.0):| cast.role(0.95):Movie; Movie F; Movie AD; | company.name(0.95):Movies; Movie; Movie Movie; | tv_series.title(0.84):Movies, Movies, Movi; Movie Mob; Moon Movies; | keyword.keyword(0.83):movie-in-movie; movies-about-movies; b-movie; | actor.name(0.76):| 
1183. How many: CMT; count; ; (0) 
1185. Netflix: VTTEXT; NA; ; (0) company.name(1.0):Netflix; Netflix; Netflix; | keyword.keyword(1.0):netflix; netflix-series; netflix-production; | tv_series.title(0.78):| tv_series(0.78):| cast.role(0.77):Netflix guy; | movie.title(0.74):| movie(0.74):| 
How, WRB
many, JJ
movies, NNS
did, VBD
Netflix, NNP
produce, VB
advmod(many-2, How-1)
amod(movies-3, many-2)
dobj(produce-6, movies-3)
aux(produce-6, did-4)
nsubj(produce-6, Netflix-5)
root(ROOT-0, produce-6)

PARSE TREE:(1179) ROOT ROOT
    (1183) How many CMT
        (1181) movies NT
            (1180) produce NT
                (1185) Netflix VTTEXT


===========
TRANSLATIONS
===========
TOT: 0.9140780595038096; NL: 0.8002271178074418; NL+AG: 0.9177456737040814; NL+QF: 0.9140780595038096; rels: [movie,directed_by]; projs: [count(distinct(movie_0.title))]; preds: []; havings: []; superlative: []; blanks: 0
TOT: 0.910558768047424; NL: 0.8852322584043497; NL+AG: 0.9623803610291506; NL+QF: 0.910558768047424; rels: [directed_by]; projs: [count(distinct(movie_0.title))]; preds: [company_0.name = "Netflix"]; havings: []; superlative: []; blanks: 0
TOT: 0.910558768047424; NL: 0.8852322584043497; NL+AG: 0.9623803610291506; NL+QF: 0.910558768047424; rels: [directed_by]; projs: [count(distinct(movie_0.title))]; preds: [keyword_0.keyword = "netflix"]; havings: []; superlative: []; blanks: 0
TOT: 0.9055419360254962; NL: 0.9055419360254962; NL+AG: 0.9623803610291506; NL+QF: 0.9055419360254962; rels: [made_by]; projs: [count(distinct(movie_0.title))]; preds: [company_0.name = "Netflix"]; havings: []; superlative: []; blanks: 0
TOT: 0.9055419360254962; NL: 0.9055419360254962; NL+AG: 0.9623803610291506; NL+QF: 0.9055419360254962; rels: [made_by]; projs: [count(distinct(movie_0.title))]; preds: [keyword_0.keyword = "netflix"]; havings: []; superlative: []; blanks: 0
TOT: 0.8783733725393061; NL: 0.8783733725393061; NL+AG: 0.9623803610291506; NL+QF: 0.8783733725393061; rels: [producer]; projs: [count(distinct(movie_0.title))]; preds: [company_0.name = "Netflix"]; havings: []; superlative: []; blanks: 0
TOT: 0.8783733725393061; NL: 0.8783733725393061; NL+AG: 0.9623803610291506; NL+QF: 0.8783733725393061; rels: [producer]; projs: [count(distinct(movie_0.title))]; preds: [keyword_0.keyword = "netflix"]; havings: []; superlative: []; blanks: 0
TOT: 0.8662391053409028; NL: 0.8662391053409028; NL+AG: 0.9623803610291506; NL+QF: 0.8662391053409028; rels: []; projs: [count(distinct(movie_0.title))]; preds: [company_0.name = "Netflix"]; havings: []; superlative: []; blanks: 1
TOT: 0.8662391053409028; NL: 0.8662391053409028; NL+AG: 0.9623803610291506; NL+QF: 0.8662391053409028; rels: []; projs: [count(distinct(movie_0.title))]; preds: [keyword_0.keyword = "netflix"]; havings: []; superlative: []; blanks: 1
TOT: 0.8448088285244566; NL: 0.8002271178074418; NL+AG: 0.9177456737040814; NL+QF: 0.8448088285244566; rels: [directed_by]; projs: [count(distinct(movie_0.title))]; preds: []; havings: []; superlative: []; blanks: 1
TOT: 0.8420381176288142; NL: 0.8185865422772004; NL+AG: 0.9177456737040814; NL+QF: 0.8420381176288142; rels: [made_by,movie]; projs: [count(distinct(movie_0.title))]; preds: []; havings: []; superlative: []; blanks: 0

===========
RESULTS
===========
TOT: 0.8232368517204154; TR: 0.910558768047424; QF: 0.047619047619047616; select count(distinct(movie_0.title)) from company as company_0, copyright as copyright_0, directed_by as directed_by_0, directed_by as directed_by_1, director as director_0, movie as movie_0, tv_series as tv_series_0 where company_0.name = "Netflix" and company_0.id = copyright_0.cid and copyright_0.msid = tv_series_0.sid and directed_by_0.did = director_0.did and directed_by_0.msid = tv_series_0.sid and directed_by_1.did = director_0.did and directed_by_1.msid = movie_0.mid
TOT: 0.823058280291844; TR: 0.910558768047424; QF: 0.03968253968253967; select count(distinct(movie_0.title)) from directed_by as directed_by_0, directed_by as directed_by_1, director as director_0, keyword as keyword_0, movie as movie_0, tags as tags_0, tv_series as tv_series_0 where keyword_0.keyword = "netflix" and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and directed_by_1.did = director_0.did and directed_by_1.msid = tv_series_0.sid and keyword_0.id = tags_0.kid and tags_0.msid = tv_series_0.sid
TOT: 0.8184368302160624; TR: 0.9055419360254962; QF: 0.023809523809523808; select count(distinct(movie_0.title)) from company as company_0, copyright as copyright_0, made_by as made_by_0, made_by as made_by_1, movie as movie_0, producer as producer_0, tv_series as tv_series_0 where company_0.name = "Netflix" and company_0.id = copyright_0.cid and copyright_0.msid = tv_series_0.sid and made_by_0.msid = tv_series_0.sid and made_by_0.pid = producer_0.pid and made_by_1.msid = movie_0.mid and made_by_1.pid = producer_0.pid
TOT: 0.8179011159303482; TR: 0.9055419360254962; QF: 0.0; select count(distinct(movie_0.title)) from keyword as keyword_0, made_by as made_by_0, made_by as made_by_1, movie as movie_0, producer as producer_0, tags as tags_0, tv_series as tv_series_0 where keyword_0.keyword = "netflix" and keyword_0.id = tags_0.kid and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid and made_by_1.msid = tv_series_0.sid and made_by_1.pid = producer_0.pid and tags_0.msid = tv_series_0.sid
TOT: 0.8147368274328731; TR: 0.8662391053409028; QF: 0.21428571428571427; select count(distinct(movie_0.title)) from company as company_0, copyright as copyright_0, movie as movie_0 where company_0.name = "Netflix" and company_0.id = copyright_0.cid and copyright_0.msid = movie_0.mid
TOT: 0.8099153988614446; TR: 0.8662391053409028; QF: 0.0; select count(distinct(movie_0.title)) from keyword as keyword_0, movie as movie_0, tags as tags_0 where keyword_0.keyword = "netflix" and keyword_0.id = tags_0.kid and movie_0.mid = tags_0.msid
TOT: 0.7856990669913009; TR: 0.8662391053409028; QF: 0.05357142857142857; select count(distinct(movie_0.title)) from actor as actor_0, cast as cast_0, cast as cast_1, company as company_0, copyright as copyright_0, movie as movie_0, tv_series as tv_series_0 where company_0.name = "Netflix" and actor_0.aid = cast_0.aid and actor_0.aid = cast_1.aid and cast_0.msid = tv_series_0.sid and cast_1.msid = movie_0.mid and company_0.id = copyright_0.cid and copyright_0.msid = tv_series_0.sid
TOT: 0.7855651384198723; TR: 0.8662391053409028; QF: 0.047619047619047616; select count(distinct(movie_0.title)) from classification as classification_0, classification as classification_1, company as company_0, copyright as copyright_0, genre as genre_0, movie as movie_0, tv_series as tv_series_0 where company_0.name = "Netflix" and classification_0.gid = genre_0.gid and classification_0.msid = tv_series_0.sid and classification_1.gid = genre_0.gid and classification_1.msid = movie_0.mid and company_0.id = copyright_0.cid and copyright_0.msid = tv_series_0.sid
TOT: 0.7851824853586479; TR: 0.8662391053409028; QF: 0.030612244897959183; select count(distinct(movie_0.title)) from classification as classification_0, classification as classification_1, genre as genre_0, keyword as keyword_0, movie as movie_0, tags as tags_0, tv_series as tv_series_0 where keyword_0.keyword = "netflix" and classification_0.gid = genre_0.gid and classification_0.msid = movie_0.mid and classification_1.gid = genre_0.gid and classification_1.msid = tv_series_0.sid and keyword_0.id = tags_0.kid and tags_0.msid = tv_series_0.sid
TOT: 0.7851824853586479; TR: 0.8662391053409028; QF: 0.030612244897959183; select count(distinct(movie_0.title)) from company as company_0, copyright as copyright_0, copyright as copyright_1, keyword as keyword_0, movie as movie_0, tags as tags_0, tv_series as tv_series_0 where keyword_0.keyword = "netflix" and company_0.id = copyright_0.cid and company_0.id = copyright_1.cid and copyright_0.msid = movie_0.mid and copyright_1.msid = tv_series_0.sid and keyword_0.id = tags_0.kid and tags_0.msid = tv_series_0.sid


04:27  INFO: ================
04:27  INFO: QUERY 97: What is the number of movies in which "Tom Cruise" acted?
04:27  INFO: ================
1187. ROOT: ROOT; NA; ; (0) 
1188. What: CMT; NA; ; (0) 
1190. number of: FT; count; ; (0) 
1192. movies: NT; NA; ; (0) movie.title(1.0):| movie(1.0):| cast.role(0.95):Movie; Movie F; Movie AD; | company.name(0.95):Movies; Movie; Movie Movie; | tv_series.title(0.84):Movies, Movies, Movi; Movie Mob; Moon Movies; | keyword.keyword(0.83):movie-in-movie; movies-about-movies; b-movie; | actor.name(0.76):| 
1194. acted: NT; NA; ; (0) movie.release_year(0.63):| tv_series.release_year(0.63):| actor.name(0.62):| actor(0.62):| genre.genre(0.62):| genre(0.62):| made_by(0.61):| 
1197. Tom Cruise: VTTEXT; NA; ; (0) director.name(1.0):Tom Cruise; Tom Cruise; Cruise; | actor.name(1.0):Tom Cruise; Tom Cruise; Tom Cruiso; | producer.name(1.0):Tom Cruise; Tom Cruise; Cruise; | writer.name(1.0):Tom Cruise; Tom Cruise; Cruise; | cast.role(0.95):'Tom Cruise'; 'Tom Cruise'; 'Tom Cruise'; | movie.title(0.88):Tom Cruise On: Tom C; Tom Cruise On: Tom C; Cruise; | tv_series.title(0.75):Cruise; The Cruise; Inside Cruise; | 
What, WP
is, VBZ
the, DT
number, NN
of, IN
movies, NNS
in, IN
which, WDT
Tom Cruise, NNP
acted, VBD
root(ROOT-0, What-1)
cop(What-1, is-2)
det(number-4, the-3)
nsubj(What-1, number-4)
case(movies-6, of-5)
nmod(number-4, movies-6)
case(which-8, in-7)
nmod(acted-10, which-8)
nsubj(acted-10, Tom Cruise-9)
acl:relcl(movies-6, acted-10)

PARSE TREE:(1187) ROOT ROOT
    (1188) What CMT
        (1190) number of FT
            (1192) movies NT
                (1194) acted NT
                    (1197) Tom Cruise VTTEXT


===========
TRANSLATIONS
===========
TOT: 0.8662391053409028; NL: 0.8662391053409028; NL+AG: 0.9623803610291506; NL+QF: 0.8662391053409028; rels: []; projs: [count(distinct(movie_0.title))]; preds: [director_0.name = "Tom Cruise"]; havings: []; superlative: []; blanks: 1
TOT: 0.8662391053409028; NL: 0.8662391053409028; NL+AG: 0.9623803610291506; NL+QF: 0.8662391053409028; rels: []; projs: [count(distinct(movie_0.title))]; preds: [actor_0.name = "Tom Cruise"]; havings: []; superlative: []; blanks: 1
TOT: 0.8662391053409028; NL: 0.8662391053409028; NL+AG: 0.9623803610291506; NL+QF: 0.8662391053409028; rels: []; projs: [count(distinct(movie_0.title))]; preds: [producer_0.name = "Tom Cruise"]; havings: []; superlative: []; blanks: 1
TOT: 0.8662391053409028; NL: 0.8662391053409028; NL+AG: 0.9623803610291506; NL+QF: 0.8662391053409028; rels: []; projs: [count(distinct(movie_0.title))]; preds: [writer_0.name = "Tom Cruise"]; havings: []; superlative: []; blanks: 1
TOT: 0.8511606491570143; NL: 0.8511606491570143; NL+AG: 0.9550159970562051; NL+QF: 0.8511606491570143; rels: []; projs: [count(distinct(movie_0.title))]; preds: [cast_0.role = "'Tom Cruise'"]; havings: []; superlative: []; blanks: 1
TOT: 0.828587847371172; NL: 0.828587847371172; NL+AG: 0.9444691039097105; NL+QF: 0.828587847371172; rels: []; projs: [count(distinct(movie_0.title))]; preds: [movie_0.title = "Tom Cruise On: Tom Cruise, Jew"]; havings: []; superlative: []; blanks: 1
TOT: 0.7912922821972069; NL: 0.7912922821972069; NL+AG: 0.9334884919988383; NL+QF: 0.7912922821972069; rels: []; projs: [count(distinct(actor_0.name))]; preds: [director_0.name = "Tom Cruise"]; havings: []; superlative: []; blanks: 1
TOT: 0.7912922821972069; NL: 0.7912922821972069; NL+AG: 0.9334884919988383; NL+QF: 0.7912922821972069; rels: []; projs: [count(distinct(actor_0.name))]; preds: [actor_0.name = "Tom Cruise"]; havings: []; superlative: []; blanks: 1
TOT: 0.7912922821972069; NL: 0.7912922821972069; NL+AG: 0.9334884919988383; NL+QF: 0.7912922821972069; rels: []; projs: [count(distinct(actor_0.name))]; preds: [producer_0.name = "Tom Cruise"]; havings: []; superlative: []; blanks: 1
TOT: 0.7912922821972069; NL: 0.7912922821972069; NL+AG: 0.9334884919988383; NL+QF: 0.7912922821972069; rels: []; projs: [count(distinct(actor_0.name))]; preds: [writer_0.name = "Tom Cruise"]; havings: []; superlative: []; blanks: 1
TOT: 0.7854026604085581; NL: 0.7854026604085581; NL+AG: 0.9336787348794631; NL+QF: 0.7854026604085581; rels: []; projs: [count(distinct(movie_0.title))]; preds: [tv_series_0.title = "Cruise"]; havings: []; superlative: []; blanks: 1

===========
RESULTS
===========
TOT: 0.8186426663847469; TR: 0.8511606491570143; QF: 0.2222222222222222; select count(distinct(movie_0.title)) from cast as cast_0, movie as movie_0 where cast_0.role = "'Tom Cruise'" and cast_0.msid = movie_0.mid
TOT: 0.8161653988614446; TR: 0.8662391053409028; QF: 0.27777777777777773; select count(distinct(movie_0.title)) from directed_by as directed_by_0, director as director_0, movie as movie_0 where director_0.name = "Tom Cruise" and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid
TOT: 0.8143945655281112; TR: 0.8662391053409028; QF: 0.19907407407407407; select count(distinct(movie_0.title)) from actor as actor_0, cast as cast_0, movie as movie_0 where actor_0.name = "Tom Cruise" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid
TOT: 0.8099153988614446; TR: 0.8662391053409028; QF: 0.0; select count(distinct(movie_0.title)) from movie as movie_0, writer as writer_0, written_by as written_by_0 where writer_0.name = "Tom Cruise" and movie_0.mid = written_by_0.msid and writer_0.wid = written_by_0.wid
TOT: 0.8099153988614446; TR: 0.8662391053409028; QF: 0.0; select count(distinct(movie_0.title)) from made_by as made_by_0, movie as movie_0, producer as producer_0 where producer_0.name = "Tom Cruise" and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid
TOT: 0.7860562098484437; TR: 0.8662391053409028; QF: 0.06944444444444445; select count(distinct(movie_0.title)) from actor as actor_0, cast as cast_0, directed_by as directed_by_0, directed_by as directed_by_1, director as director_0, movie as movie_0, tv_series as tv_series_0 where actor_0.name = "Tom Cruise" and actor_0.aid = cast_0.aid and cast_0.msid = tv_series_0.sid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and directed_by_1.did = director_0.did and directed_by_1.msid = tv_series_0.sid
TOT: 0.7858521282157906; TR: 0.8662391053409028; QF: 0.06037414965986394; select count(distinct(movie_0.title)) from actor as actor_0, cast as cast_0, classification as classification_0, classification as classification_1, genre as genre_0, movie as movie_0, tv_series as tv_series_0 where actor_0.name = "Tom Cruise" and actor_0.aid = cast_0.aid and cast_0.msid = tv_series_0.sid and classification_0.gid = genre_0.gid and classification_0.msid = movie_0.mid and classification_1.gid = genre_0.gid and classification_1.msid = tv_series_0.sid
TOT: 0.7858521282157906; TR: 0.8662391053409028; QF: 0.06037414965986394; select count(distinct(movie_0.title)) from actor as actor_0, cast as cast_0, company as company_0, copyright as copyright_0, copyright as copyright_1, movie as movie_0, tv_series as tv_series_0 where actor_0.name = "Tom Cruise" and actor_0.aid = cast_0.aid and cast_0.msid = tv_series_0.sid and company_0.id = copyright_0.cid and company_0.id = copyright_1.cid and copyright_0.msid = movie_0.mid and copyright_1.msid = tv_series_0.sid
TOT: 0.7857181996443621; TR: 0.8662391053409028; QF: 0.05442176870748299; select count(distinct(movie_0.title)) from classification as classification_0, classification as classification_1, directed_by as directed_by_0, director as director_0, genre as genre_0, movie as movie_0, tv_series as tv_series_0 where director_0.name = "Tom Cruise" and classification_0.gid = genre_0.gid and classification_0.msid = movie_0.mid and classification_1.gid = genre_0.gid and classification_1.msid = tv_series_0.sid and directed_by_0.did = director_0.did and directed_by_0.msid = tv_series_0.sid
TOT: 0.7857181996443621; TR: 0.8662391053409028; QF: 0.05442176870748299; select count(distinct(movie_0.title)) from company as company_0, copyright as copyright_0, copyright as copyright_1, directed_by as directed_by_0, director as director_0, movie as movie_0, tv_series as tv_series_0 where director_0.name = "Tom Cruise" and company_0.id = copyright_0.cid and company_0.id = copyright_1.cid and copyright_0.msid = movie_0.mid and copyright_1.msid = tv_series_0.sid and directed_by_0.did = director_0.did and directed_by_0.msid = tv_series_0.sid


04:28  INFO: ================
04:28  INFO: QUERY 89: How many movies did "Alfred Hitchcock" direct?
04:28  INFO: ================
04:29  INFO: ================
04:29  INFO: QUERY 6: Find all actors who were born in 1984
04:29  INFO: ================
04:30  INFO: ================
04:30  INFO: QUERY 31: Find all movies by directors born in "Los Angeles"
04:30  INFO: ================
04:30  INFO: ================
04:30  INFO: QUERY 126: Find all movies featuring "Jason Robards" and "Woody Strode"
04:30  INFO: ================
04:33  INFO: ================
04:33  INFO: QUERY 94: How many actors were born in "Los Angeles" after 2000?
04:33  INFO: ================
04:35  INFO: ================
04:35  INFO: QUERY 44: What are all the movies directed by "Quentin Tarantino" featuring "Christoph Waltz"?
04:35  INFO: ================
1247. ROOT: ROOT; NA; ; (0) 
1248. What: CMT; NA; ; (0) 
1250. movies: NT; NA; all; (0) movie.title(1.0):| movie(1.0):| cast.role(0.95):Movie; Movie F; Movie AD; | company.name(0.95):Movies; Movie; Movie Movie; | tv_series.title(0.84):Movies, Movies, Movi; Movie Mob; Moon Movies; | keyword.keyword(0.83):movie-in-movie; movies-about-movies; b-movie; | actor.name(0.76):| 
1253. directed: NT; NA; ; (0) directed_by(1.0):| director.name(0.72):| director(0.72):| written_by(0.68):| cast.role(0.67):| cast(0.67):| made_by(0.67):| 
1254. Christoph Waltz: VTTEXT; NA; ; (0) director.name(1.0):Christoph Waltz; Christoph Waltz; Christoph Walther; | actor.name(1.0):Christoph Waltz; Christoph Waltz; Christoph Walz; | producer.name(1.0):Christoph Waltz; Christoph Waltz; Christopher Waltz; | writer.name(1.0):Christoph Waltz; Christoph Waltz; Christoph Walz; | cast.role(0.76):Christoph Balthus; Christoph Balthus; Christoph Wenk; | movie.title(0.76):Christoph; Christoph; Christoph Columbus; | company.name(0.63):Christoph Schinko; Christoph Schinko; Christoph Kohler; | 
1256. Quentin Tarantino: VTTEXT; NA; ; (0) director.name(1.0):Quentin Tarantino; Quentin Tarantino; Quentin Tarrantino; | actor.name(1.0):Quentin Tarantino; Quentin Tarantino; Quentin Tarrantino; | producer.name(1.0):Quentin Tarantino; Quentin Tarantino; Quentin Tarrantino; | writer.name(1.0):Quentin Tarantino; Quentin Tarantino; Quentin Tarrantino; | cast.role(0.85):Quentin Tarrantino '; Quentin Tarrantino '; Quentin Tarrantino '; | movie.title(0.84):21 Years: Quentin Ta; 21 Years: Quentin Ta; Quentin Tarantino's ; | writer.birth_city(0.74):San Quentin; San Quentin; Saint-Quentin; | 
1257. featuring: VTTEXT; NA; ; (0) cast.role(1.0):Featuring; Featuring; Featuring; | tv_series.title(0.66):| tv_series(0.66):| movie.title_aka(0.64):| tv_series.title_aka(0.64):| actor.name(0.63):Coolio featuring L.V; San Jose featuring R; San Jose featuring R; | writer.name(0.63):Coolio featuring L.V; Gangstagrass featuri; San Jose featuring R; | 
What, WP
are, VBP
all, PDT
the, DT
movies, NNS
directed, VBN
by, IN
Quentin Tarantino, NNP
featuring, NNP
Christoph Waltz, NNP
root(ROOT-0, What-1)
cop(What-1, are-2)
det:predet(movies-5, all-3)
det(movies-5, the-4)
nsubj(What-1, movies-5)
acl(movies-5, directed-6)
case(Christoph Waltz-10, by-7)
compound(Christoph Waltz-10, Quentin Tarantino-8)
compound(Christoph Waltz-10, featuring-9)
nmod(directed-6, Christoph Waltz-10)

PARSE TREE:(1247) ROOT ROOT
    (1248) What CMT
        (1250) movies NT
            (1253) directed NT
                (1254) Christoph Waltz VTTEXT
                    (1256) Quentin Tarantino VTTEXT
                    (1257) featuring VTTEXT


===========
TRANSLATIONS
===========
TOT: 1.0; NL: 1.0; NL+AG: 1.0; NL+QF: 1.0; rels: [directed_by]; projs: [movie_0.title]; preds: [director_0.name = "Christoph Waltz",director_0.name = "Quentin Tarantino",cast_0.role = "Featuring"]; havings: []; superlative: []; blanks: 0
TOT: 1.0; NL: 1.0; NL+AG: 1.0; NL+QF: 1.0; rels: [directed_by]; projs: [movie_0.title]; preds: [director_0.name = "Christoph Waltz",actor_0.name = "Quentin Tarantino",cast_0.role = "Featuring"]; havings: []; superlative: []; blanks: 0
TOT: 1.0; NL: 1.0; NL+AG: 1.0; NL+QF: 1.0; rels: [directed_by]; projs: [movie_0.title]; preds: [director_0.name = "Christoph Waltz",producer_0.name = "Quentin Tarantino",cast_0.role = "Featuring"]; havings: []; superlative: []; blanks: 0
TOT: 1.0; NL: 1.0; NL+AG: 1.0; NL+QF: 1.0; rels: [directed_by]; projs: [movie_0.title]; preds: [director_0.name = "Christoph Waltz",writer_0.name = "Quentin Tarantino",cast_0.role = "Featuring"]; havings: []; superlative: []; blanks: 0
TOT: 1.0; NL: 1.0; NL+AG: 1.0; NL+QF: 1.0; rels: [directed_by]; projs: [movie_0.title]; preds: [actor_0.name = "Christoph Waltz",director_0.name = "Quentin Tarantino",cast_0.role = "Featuring"]; havings: []; superlative: []; blanks: 0
TOT: 1.0; NL: 1.0; NL+AG: 1.0; NL+QF: 1.0; rels: [directed_by]; projs: [movie_0.title]; preds: [actor_0.name = "Christoph Waltz",actor_0.name = "Quentin Tarantino",cast_0.role = "Featuring"]; havings: []; superlative: []; blanks: 0
TOT: 1.0; NL: 1.0; NL+AG: 1.0; NL+QF: 1.0; rels: [directed_by]; projs: [movie_0.title]; preds: [actor_0.name = "Christoph Waltz",producer_0.name = "Quentin Tarantino",cast_0.role = "Featuring"]; havings: []; superlative: []; blanks: 0
TOT: 1.0; NL: 1.0; NL+AG: 1.0; NL+QF: 1.0; rels: [directed_by]; projs: [movie_0.title]; preds: [actor_0.name = "Christoph Waltz",writer_0.name = "Quentin Tarantino",cast_0.role = "Featuring"]; havings: []; superlative: []; blanks: 0
TOT: 1.0; NL: 1.0; NL+AG: 1.0; NL+QF: 1.0; rels: [directed_by]; projs: [movie_0.title]; preds: [producer_0.name = "Christoph Waltz",director_0.name = "Quentin Tarantino",cast_0.role = "Featuring"]; havings: []; superlative: []; blanks: 0
TOT: 1.0; NL: 1.0; NL+AG: 1.0; NL+QF: 1.0; rels: [directed_by]; projs: [movie_0.title]; preds: [producer_0.name = "Christoph Waltz",actor_0.name = "Quentin Tarantino",cast_0.role = "Featuring"]; havings: []; superlative: []; blanks: 0
TOT: 1.0; NL: 1.0; NL+AG: 1.0; NL+QF: 1.0; rels: [directed_by]; projs: [movie_0.title]; preds: [producer_0.name = "Christoph Waltz",producer_0.name = "Quentin Tarantino",cast_0.role = "Featuring"]; havings: []; superlative: []; blanks: 0
TOT: 1.0; NL: 1.0; NL+AG: 1.0; NL+QF: 1.0; rels: [directed_by]; projs: [movie_0.title]; preds: [producer_0.name = "Christoph Waltz",writer_0.name = "Quentin Tarantino",cast_0.role = "Featuring"]; havings: []; superlative: []; blanks: 0
TOT: 1.0; NL: 1.0; NL+AG: 1.0; NL+QF: 1.0; rels: [directed_by]; projs: [movie_0.title]; preds: [writer_0.name = "Christoph Waltz",director_0.name = "Quentin Tarantino",cast_0.role = "Featuring"]; havings: []; superlative: []; blanks: 0
TOT: 1.0; NL: 1.0; NL+AG: 1.0; NL+QF: 1.0; rels: [directed_by]; projs: [movie_0.title]; preds: [writer_0.name = "Christoph Waltz",actor_0.name = "Quentin Tarantino",cast_0.role = "Featuring"]; havings: []; superlative: []; blanks: 0
TOT: 1.0; NL: 1.0; NL+AG: 1.0; NL+QF: 1.0; rels: [directed_by]; projs: [movie_0.title]; preds: [writer_0.name = "Christoph Waltz",producer_0.name = "Quentin Tarantino",cast_0.role = "Featuring"]; havings: []; superlative: []; blanks: 0
TOT: 1.0; NL: 1.0; NL+AG: 1.0; NL+QF: 1.0; rels: [directed_by]; projs: [movie_0.title]; preds: [writer_0.name = "Christoph Waltz",writer_0.name = "Quentin Tarantino",cast_0.role = "Featuring"]; havings: []; superlative: []; blanks: 0

===========
RESULTS
===========
TOT: 0.9102384834262446; TR: 1.0; QF: 0.14305555555555555; select movie_0.title from actor as actor_0, cast as cast_0, directed_by as directed_by_0, director as director_0, movie as movie_0 where actor_0.name = "Quentin Tarantino" and cast_0.role = "Featuring" and director_0.name = "Christoph Waltz" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid
TOT: 0.9102384834262446; TR: 1.0; QF: 0.14305555555555555; select movie_0.title from actor as actor_0, cast as cast_0, directed_by as directed_by_0, director as director_0, movie as movie_0 where actor_0.name = "Christoph Waltz" and cast_0.role = "Featuring" and director_0.name = "Quentin Tarantino" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid
TOT: 0.9036349903674759; TR: 1.0; QF: 0.07037037037037037; select movie_0.title from cast as cast_0, directed_by as directed_by_0, director as director_0, movie as movie_0, writer as writer_0, written_by as written_by_0 where cast_0.role = "Featuring" and director_0.name = "Christoph Waltz" and writer_0.name = "Quentin Tarantino" and cast_0.msid = movie_0.mid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and movie_0.mid = written_by_0.msid and writer_0.wid = written_by_0.wid
TOT: 0.9036349903674759; TR: 1.0; QF: 0.07037037037037037; select movie_0.title from cast as cast_0, directed_by as directed_by_0, director as director_0, movie as movie_0, writer as writer_0, written_by as written_by_0 where cast_0.role = "Featuring" and director_0.name = "Quentin Tarantino" and writer_0.name = "Christoph Waltz" and cast_0.msid = movie_0.mid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and movie_0.mid = written_by_0.msid and writer_0.wid = written_by_0.wid
TOT: 0.9036349903674759; TR: 1.0; QF: 0.07037037037037037; select movie_0.title from cast as cast_0, directed_by as directed_by_0, director as director_0, made_by as made_by_0, movie as movie_0, producer as producer_0 where cast_0.role = "Featuring" and director_0.name = "Christoph Waltz" and producer_0.name = "Quentin Tarantino" and cast_0.msid = movie_0.mid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid
TOT: 0.9036349903674759; TR: 1.0; QF: 0.07037037037037037; select movie_0.title from cast as cast_0, directed_by as directed_by_0, director as director_0, made_by as made_by_0, movie as movie_0, producer as producer_0 where cast_0.role = "Featuring" and director_0.name = "Quentin Tarantino" and producer_0.name = "Christoph Waltz" and cast_0.msid = movie_0.mid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid
TOT: 0.9036349903674759; TR: 1.0; QF: 0.07037037037037037; select movie_0.title from cast as cast_0, directed_by as directed_by_0, directed_by as directed_by_1, director as director_0, director as director_1, movie as movie_0 where cast_0.role = "Featuring" and director_0.name = "Christoph Waltz" and director_1.name = "Quentin Tarantino" and cast_0.msid = movie_0.mid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and directed_by_1.did = director_1.did and directed_by_1.msid = movie_0.mid
TOT: 0.8997529703086764; TR: 1.0; QF: 0.06944444444444445; select movie_0.title from actor as actor_0, cast as cast_0, directed_by as directed_by_0, directed_by as directed_by_1, director as director_0, movie as movie_0, tv_series as tv_series_0 where actor_0.name = "Quentin Tarantino" and cast_0.role = "Featuring" and director_0.name = "Christoph Waltz" and actor_0.aid = cast_0.aid and cast_0.msid = tv_series_0.sid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and directed_by_1.did = director_0.did and directed_by_1.msid = tv_series_0.sid
TOT: 0.8997529703086764; TR: 1.0; QF: 0.06944444444444445; select movie_0.title from actor as actor_0, cast as cast_0, directed_by as directed_by_0, directed_by as directed_by_1, director as director_0, movie as movie_0, tv_series as tv_series_0 where actor_0.name = "Christoph Waltz" and cast_0.role = "Featuring" and director_0.name = "Quentin Tarantino" and actor_0.aid = cast_0.aid and cast_0.msid = tv_series_0.sid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and directed_by_1.did = director_0.did and directed_by_1.msid = tv_series_0.sid
TOT: 0.8993660655467717; TR: 1.0; QF: 0.05224867724867725; select movie_0.title from actor as actor_0, cast as cast_0, cast as cast_1, directed_by as directed_by_0, director as director_0, movie as movie_0, tv_series as tv_series_0 where actor_0.name = "Quentin Tarantino" and cast_0.role = "Featuring" and director_0.name = "Christoph Waltz" and actor_0.aid = cast_0.aid and actor_0.aid = cast_1.aid and cast_0.msid = movie_0.mid and cast_1.msid = tv_series_0.sid and directed_by_0.did = director_0.did and directed_by_0.msid = tv_series_0.sid


04:38  INFO: ================
04:38  INFO: QUERY 8: What is the nationality of the actor "Christoph Waltz"?
04:38  INFO: ================
04:39  INFO: ================
04:39  INFO: QUERY 90: How many movies were produced in the year 2012?
04:39  INFO: ================
04:41  INFO: ================
04:41  INFO: QUERY 63: Find all the female actors born in "New York City" after 1980
04:41  INFO: ================
04:57  INFO: ================
04:57  INFO: QUERY 48: What are all the movies featuring "Kerry Washington"?
04:57  INFO: ================
04:58  INFO: ================
04:58  INFO: QUERY 38: Find all movies featuring "Benedict Cumberbatch"
04:58  INFO: ================
04:59  INFO: ================
04:59  INFO: QUERY 1: What year was "Ellen Page" born?
04:59  INFO: ================
1308. ROOT: ROOT; NA; ; (0) 
1309. born: NT; NA; ; (0) tags(0.6):| director.gender(0.59):| actor.gender(0.59):| producer.gender(0.59):| writer.gender(0.59):| made_by(0.58):| cast.role(0.58):| 
1310. year: NT; NA; ; (0) movie.release_year(1.0):| director.birth_year(1.0):| tv_series.release_year(1.0):| actor.birth_year(1.0):| producer.birth_year(1.0):| writer.birth_year(1.0):| movie.title(0.95):Year; Years; Years; | 
1313. Ellen Page: VTTEXT; NA; ; (0) actor.name(1.0):Ellen Page; Ellen Page; Allen Page; | producer.name(1.0):Ellen Page; Ellen Page; Helen Page; | director.name(0.89):Helen Page; Ben Page; Ken Page; | cast.role(0.82):En page; Ellen Paul; Ellen Paul; | writer.name(0.76):Jen Page; Jen Page; Ken Page; | movie.title(0.71):Hell Page; Le page; Ellen; | tv_series.title(0.67):Ellen; Ellen; Urcellen Ellen; | 
What, WDT
year, NN
was, VBD
Ellen Page, NNP
born, VBN
det(year-2, What-1)
nmod:tmod(born-5, year-2)
auxpass(born-5, was-3)
nsubjpass(born-5, Ellen Page-4)
root(ROOT-0, born-5)

PARSE TREE:(1308) ROOT ROOT
    (1309) born NT
        (1310) year NT
        (1313) Ellen Page VTTEXT


===========
TRANSLATIONS
===========
TOT: 0.8662391053409028; NL: 0.6610641608935915; NL+AG: 0.9054958327849251; NL+QF: 0.8662391053409028; rels: []; projs: [movie_0.release_year]; preds: [director_0.name = "Helen Page"]; havings: []; superlative: []; blanks: 1
TOT: 0.6875344335370706; NL: 0.6875344335370706; NL+AG: 0.9272593056085746; NL+QF: 0.6875344335370706; rels: []; projs: [movie_0.release_year]; preds: [actor_0.name = "Ellen Page"]; havings: []; superlative: []; blanks: 1
TOT: 0.6875344335370706; NL: 0.6875344335370706; NL+AG: 0.9272593056085746; NL+QF: 0.6875344335370706; rels: []; projs: [movie_0.release_year]; preds: [producer_0.name = "Ellen Page"]; havings: []; superlative: []; blanks: 1
TOT: 0.6875344335370706; NL: 0.6875344335370706; NL+AG: 0.9272593056085746; NL+QF: 0.6875344335370706; rels: []; projs: [director_0.birth_year]; preds: [actor_0.name = "Ellen Page"]; havings: []; superlative: []; blanks: 1
TOT: 0.6875344335370706; NL: 0.6875344335370706; NL+AG: 0.9272593056085746; NL+QF: 0.6875344335370706; rels: []; projs: [director_0.birth_year]; preds: [producer_0.name = "Ellen Page"]; havings: []; superlative: []; blanks: 1
TOT: 0.6875344335370706; NL: 0.6875344335370706; NL+AG: 0.9272593056085746; NL+QF: 0.6875344335370706; rels: []; projs: [tv_series_0.release_year]; preds: [actor_0.name = "Ellen Page"]; havings: []; superlative: []; blanks: 1
TOT: 0.6875344335370706; NL: 0.6875344335370706; NL+AG: 0.9272593056085746; NL+QF: 0.6875344335370706; rels: []; projs: [tv_series_0.release_year]; preds: [producer_0.name = "Ellen Page"]; havings: []; superlative: []; blanks: 1
TOT: 0.6875344335370706; NL: 0.6875344335370706; NL+AG: 0.9272593056085746; NL+QF: 0.6875344335370706; rels: []; projs: [actor_0.birth_year]; preds: [actor_0.name = "Ellen Page"]; havings: []; superlative: []; blanks: 1
TOT: 0.6875344335370706; NL: 0.6875344335370706; NL+AG: 0.9272593056085746; NL+QF: 0.6875344335370706; rels: []; projs: [actor_0.birth_year]; preds: [producer_0.name = "Ellen Page"]; havings: []; superlative: []; blanks: 1
TOT: 0.6875344335370706; NL: 0.6875344335370706; NL+AG: 0.9272593056085746; NL+QF: 0.6875344335370706; rels: []; projs: [producer_0.birth_year]; preds: [actor_0.name = "Ellen Page"]; havings: []; superlative: []; blanks: 1
TOT: 0.6875344335370706; NL: 0.6875344335370706; NL+AG: 0.9272593056085746; NL+QF: 0.6875344335370706; rels: []; projs: [producer_0.birth_year]; preds: [producer_0.name = "Ellen Page"]; havings: []; superlative: []; blanks: 1
TOT: 0.6875344335370706; NL: 0.6875344335370706; NL+AG: 0.9272593056085746; NL+QF: 0.6875344335370706; rels: []; projs: [writer_0.birth_year]; preds: [actor_0.name = "Ellen Page"]; havings: []; superlative: []; blanks: 1
TOT: 0.6875344335370706; NL: 0.6875344335370706; NL+AG: 0.9272593056085746; NL+QF: 0.6875344335370706; rels: []; projs: [writer_0.birth_year]; preds: [producer_0.name = "Ellen Page"]; havings: []; superlative: []; blanks: 1

===========
RESULTS
===========
TOT: 0.8161653988614446; TR: 0.8662391053409028; QF: 0.27777777777777773; select movie_0.release_year from directed_by as directed_by_0, director as director_0, movie as movie_0 where director_0.name = "Helen Page" and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid
TOT: 0.7857181996443621; TR: 0.8662391053409028; QF: 0.05442176870748299; select movie_0.release_year from classification as classification_0, classification as classification_1, directed_by as directed_by_0, director as director_0, genre as genre_0, movie as movie_0, tv_series as tv_series_0 where director_0.name = "Helen Page" and classification_0.gid = genre_0.gid and classification_0.msid = movie_0.mid and classification_1.gid = genre_0.gid and classification_1.msid = tv_series_0.sid and directed_by_0.did = director_0.did and directed_by_0.msid = tv_series_0.sid
TOT: 0.7857181996443621; TR: 0.8662391053409028; QF: 0.05442176870748299; select movie_0.release_year from company as company_0, copyright as copyright_0, copyright as copyright_1, directed_by as directed_by_0, director as director_0, movie as movie_0, tv_series as tv_series_0 where director_0.name = "Helen Page" and company_0.id = copyright_0.cid and company_0.id = copyright_1.cid and copyright_0.msid = movie_0.mid and copyright_1.msid = tv_series_0.sid and directed_by_0.did = director_0.did and directed_by_0.msid = tv_series_0.sid
TOT: 0.785669305086539; TR: 0.8662391053409028; QF: 0.05224867724867725; select movie_0.release_year from actor as actor_0, cast as cast_0, cast as cast_1, directed_by as directed_by_0, director as director_0, movie as movie_0, tv_series as tv_series_0 where director_0.name = "Helen Page" and actor_0.aid = cast_0.aid and actor_0.aid = cast_1.aid and cast_0.msid = movie_0.mid and cast_1.msid = tv_series_0.sid and directed_by_0.did = director_0.did and directed_by_0.msid = tv_series_0.sid
TOT: 0.785029424134158; TR: 0.8662391053409028; QF: 0.023809523809523808; select movie_0.release_year from directed_by as directed_by_0, director as director_0, keyword as keyword_0, movie as movie_0, tags as tags_0, tags as tags_1, tv_series as tv_series_0 where director_0.name = "Helen Page" and directed_by_0.did = director_0.did and directed_by_0.msid = tv_series_0.sid and keyword_0.id = tags_0.kid and keyword_0.id = tags_1.kid and movie_0.mid = tags_0.msid and tags_1.msid = tv_series_0.sid
TOT: 0.785029424134158; TR: 0.8662391053409028; QF: 0.023809523809523808; select movie_0.release_year from directed_by as directed_by_0, director as director_0, movie as movie_0, tv_series as tv_series_0, writer as writer_0, written_by as written_by_0, written_by as written_by_1 where director_0.name = "Helen Page" and directed_by_0.did = director_0.did and directed_by_0.msid = tv_series_0.sid and movie_0.mid = written_by_0.msid and tv_series_0.sid = written_by_1.msid and writer_0.wid = written_by_0.wid and writer_0.wid = written_by_1.wid
TOT: 0.785029424134158; TR: 0.8662391053409028; QF: 0.023809523809523808; select movie_0.release_year from directed_by as directed_by_0, director as director_0, made_by as made_by_0, made_by as made_by_1, movie as movie_0, producer as producer_0, tv_series as tv_series_0 where director_0.name = "Helen Page" and directed_by_0.did = director_0.did and directed_by_0.msid = tv_series_0.sid and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid and made_by_1.msid = tv_series_0.sid and made_by_1.pid = producer_0.pid
TOT: 0.73440426850651; TR: 0.6875344335370706; QF: 1.0; select actor_0.birth_year from actor as actor_0 where actor_0.name = "Ellen Page"
TOT: 0.73440426850651; TR: 0.6875344335370706; QF: 1.0; select producer_0.birth_year from producer as producer_0 where producer_0.name = "Ellen Page"
TOT: 0.6627039278281872; TR: 0.6875344335370706; QF: 0.20833333333333334; select tv_series_0.release_year from actor as actor_0, cast as cast_0, tv_series as tv_series_0 where actor_0.name = "Ellen Page" and actor_0.aid = cast_0.aid and cast_0.msid = tv_series_0.sid


05:00  INFO: ================
05:00  INFO: QUERY 30: Find all actors born in "Los Angeles" after 1980
05:00  INFO: ================
05:01  INFO: ====== RANKS ======
05:01  INFO: QUERY 0: 2
05:01  INFO: QUERY 1: 8
05:01  INFO: QUERY 2: 1
05:01  INFO: QUERY 3: 1
05:01  INFO: QUERY 4: 1
05:01  INFO: QUERY 5: 1
05:01  INFO: QUERY 6: 1
05:01  INFO: QUERY 7: 1
05:01  INFO: QUERY 8: 1
05:01  INFO: QUERY 9: 1
05:01  INFO: QUERY 10: 1
05:01  INFO: QUERY 11: 1
05:01  INFO: QUERY 12: 1
05:01  INFO: QUERY 13: 1
05:01  INFO: QUERY 14: 1
05:01  INFO: QUERY 15: 1
05:01  INFO: QUERY 16: 1
05:01  INFO: QUERY 17: 1
05:01  INFO: QUERY 18: 1
05:01  INFO: QUERY 19: 1
05:01  INFO: QUERY 20: 1
05:01  INFO: QUERY 21: 1
05:01  INFO: QUERY 22: -1
05:01  INFO: QUERY 23: 1
05:01  INFO: QUERY 24: 1
05:01  INFO: QUERY 25: -1
05:01  INFO: QUERY 26: 2
05:01  INFO: QUERY 27: 1
05:01  INFO: QUERY 28: 1
05:01  INFO: QUERY 29: 1
05:01  INFO: QUERY 30: 1
05:01  INFO: QUERY 31: 1
05:01  INFO: QUERY 32: 2
05:01  INFO: QUERY 33: 6
05:01  INFO: QUERY 34: 1
05:01  INFO: QUERY 35: 2
05:01  INFO: QUERY 36: 1
05:01  INFO: QUERY 37: 2
05:01  INFO: QUERY 38: 1
05:01  INFO: QUERY 39: 9
05:01  INFO: QUERY 40: 1
05:01  INFO: QUERY 41: 1
05:01  INFO: QUERY 42: 2
05:01  INFO: QUERY 43: 1
05:01  INFO: QUERY 44: -1
05:01  INFO: QUERY 45: 1
05:01  INFO: QUERY 46: 1
05:01  INFO: QUERY 47: 1
05:01  INFO: QUERY 48: 1
05:01  INFO: QUERY 49: 1
05:01  INFO: QUERY 50: 1
05:01  INFO: QUERY 51: 1
05:01  INFO: QUERY 52: 1
05:01  INFO: QUERY 53: 4
05:01  INFO: QUERY 54: 3
05:01  INFO: QUERY 55: 2
05:01  INFO: QUERY 56: 1
05:01  INFO: QUERY 57: 1
05:01  INFO: QUERY 58: 3
05:01  INFO: QUERY 59: 1
05:01  INFO: QUERY 60: 1
05:01  INFO: QUERY 61: -1
05:01  INFO: QUERY 62: 1
05:01  INFO: QUERY 63: 1
05:01  INFO: QUERY 64: 1
05:01  INFO: QUERY 65: 1
05:01  INFO: QUERY 66: 8
05:01  INFO: QUERY 67: -1
05:01  INFO: QUERY 68: -1
05:01  INFO: QUERY 69: 1
05:01  INFO: QUERY 70: 1
05:01  INFO: QUERY 71: 1
05:01  INFO: QUERY 72: 2
05:01  INFO: QUERY 73: 1
05:01  INFO: QUERY 74: 1
05:01  INFO: QUERY 75: 1
05:01  INFO: QUERY 76: 1
05:01  INFO: QUERY 77: 1
05:01  INFO: QUERY 78: 3
05:01  INFO: QUERY 79: 1
05:01  INFO: QUERY 80: 1
05:01  INFO: QUERY 81: 2
05:01  INFO: QUERY 82: 1
05:01  INFO: QUERY 83: -1
05:01  INFO: QUERY 84: 3
05:01  INFO: QUERY 85: -1
05:01  INFO: QUERY 86: -1
05:01  INFO: QUERY 87: 2
05:01  INFO: QUERY 88: 1
05:01  INFO: QUERY 89: 1
05:01  INFO: QUERY 90: 1
05:01  INFO: QUERY 91: 1
05:01  INFO: QUERY 92: 1
05:01  INFO: QUERY 93: 1
05:01  INFO: QUERY 94: 1
05:01  INFO: QUERY 95: 1
05:01  INFO: QUERY 96: 2
05:01  INFO: QUERY 97: 3
05:01  INFO: QUERY 98: -1
05:01  INFO: QUERY 99: 2
05:01  INFO: QUERY 100: 1
05:01  INFO: QUERY 101: 1
05:01  INFO: QUERY 102: 1
05:01  INFO: QUERY 103: -1
05:01  INFO: QUERY 104: 2
05:01  INFO: QUERY 105: 1
05:01  INFO: QUERY 106: 5
05:01  INFO: QUERY 107: 1
05:01  INFO: QUERY 108: 1
05:01  INFO: QUERY 109: 1
05:01  INFO: QUERY 110: -1
05:01  INFO: QUERY 111: 1
05:01  INFO: QUERY 112: 3
05:01  INFO: QUERY 113: 3
05:01  INFO: QUERY 114: 9
05:01  INFO: QUERY 115: 4
05:01  INFO: QUERY 116: 1
05:01  INFO: QUERY 117: 1
05:01  INFO: QUERY 118: -1
05:01  INFO: QUERY 119: -1
05:01  INFO: QUERY 120: 1
05:01  INFO: QUERY 121: -1
05:01  INFO: QUERY 122: 1
05:01  INFO: QUERY 123: 1
05:01  INFO: QUERY 124: -1
05:01  INFO: QUERY 125: -1
05:01  INFO: QUERY 126: 1
05:01  INFO: QUERY 127: -1
05:01  INFO: QUERY 128: -1
05:01  INFO: QUERY 129: 1
05:01  INFO: QUERY 130: -1
05:01  INFO: ==============
05:01  INFO: SUMMARY
05:01  INFO: ==============
05:01  INFO: Total queries: 131
05:01  INFO: Top 1: 83
05:01  INFO: Top 3: 103
05:01  INFO: Top 5: 106
