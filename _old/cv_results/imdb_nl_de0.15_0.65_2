00:00  INFO: ==============================
00:00  INFO: Reading relations info...
00:00  INFO: Read 16 relations/views/functions.
00:00  INFO: ==============================

00:00  INFO: ==============================
00:00  INFO: Reading edges info...
00:00  INFO: Read 21 FK-PK relationships.
00:00  INFO: Read 21 PK-FK relationships.
00:00  INFO: ==============================

00:00  INFO: ==============================
00:00  INFO: Reading relations info...
00:00  INFO: Read 7 relations/views/functions.
00:00  INFO: ==============================

00:00  INFO: ==============================
00:00  INFO: Reading edges info...
00:00  INFO: Read 7 FK-PK relationships.
00:00  INFO: Read 7 PK-FK relationships.
00:00  INFO: ==============================

00:00  INFO: ==============================
00:00  INFO: Reading relations info...
00:00  INFO: Read 15 relations/views/functions.
00:00  INFO: ==============================

00:00  INFO: ==============================
00:00  INFO: Reading edges info...
00:00  INFO: Read 19 FK-PK relationships.
00:00  INFO: Read 19 PK-FK relationships.
00:00  INFO: ==============================

00:00  INFO: ===== Parsing Results =====
00:00  INFO: Total Queries: 128
00:00  INFO: Correctly Parsed: 95/128

00:00  INFO: ===== Parsing Results =====
00:00  INFO: Total Queries: 196
00:00  INFO: Correctly Parsed: 182/196

00:00  INFO: ==============================
00:00  INFO: Generating templates using schema for join level: 6
00:02  INFO: Done generating 4979 templates.
00:02  INFO: ==============================

00:03  INFO: ===== FOLD 0 =====
00:03  INFO: ===== Parsing Results =====
00:03  INFO: Total Queries: 0
00:03  INFO: Correctly Parsed: 0/0

Loading parser from serialized file edu/stanford/nlp/models/lexparser/englishPCFG.ser.gz ... done [0.6 sec].
00:03  INFO: ================
00:03  INFO: QUERY 70: Give me the name of all the actors from Afghanistan
00:03  INFO: ================
00:06  INFO: ================
00:06  INFO: QUERY 100: How many movies did "Matt Damon" direct?
00:06  INFO: ================
00:10  INFO: ================
00:10  INFO: QUERY 62: Find all actors from Italy born after 1980
00:10  INFO: ================
00:12  INFO: ================
00:12  INFO: QUERY 23: Who acted "John Nash" in the movie "A Beautiful Mind"?
00:12  INFO: ================
00:18  INFO: ================
00:18  INFO: QUERY 13: What is the nationality of "Kevin Spacey"?
00:18  INFO: ================
00:20  INFO: ================
00:20  INFO: QUERY 109: How many movies did "Shahab Hosseini" act in
00:20  INFO: ================
48. ROOT: ROOT; NA; ; (0) 
49. act: NT; NA; ; (0) movie.release_year(0.63):| tv_series.release_year(0.63):| actor.name(0.62):| actor(0.62):| genre.genre(0.62):| genre(0.62):| made_by(0.61):| 
50. movies: NT; NA; ; (0) movie.title(1.0):| movie(1.0):| cast.role(0.95):Movie; Movie F; Movie AD; | company.name(0.95):Movies; Movie; Movie Movie; | tv_series.title(0.84):Movies, Movies, Movi; Movie Mob; Moon Movies; | keyword.keyword(0.83):movie-in-movie; movies-about-movies; b-movie; | actor.name(0.76):| 
52. How many: CMT; count; ; (0) 
54. Shahab Hosseini: VTTEXT; NA; ; (0) actor.name(1.0):Shahab Hosseini; Shahab Hosseini; Khaled Hosseini; | writer.name(1.0):Shahab Hosseini; Shahab Hosseini; Saham Hosseini; | director.name(0.78):Shahram Shah Hossein; Saham Hosseini; Shaun Hosseini; | producer.name(0.76):Shaun Hosseini; Saham Hosseini; Shahrokh Hosseini; | cast.role(0.61):Zolfaghar Hosseini; Zolfaghar Hosseini; Zolfaghar Hosseini; | company.name(0.49):Zack Hosseini Films; Hosseini Pictures; | keyword.keyword(0.39):reference-to-ali-hos; | 
How, WRB
many, JJ
movies, NNS
did, VBD
Shahab Hosseini, NNP
act, VB
in, RP
advmod(many-2, How-1)
amod(movies-3, many-2)
dobj(act-6, movies-3)
aux(act-6, did-4)
nsubj(act-6, Shahab Hosseini-5)
root(ROOT-0, act-6)
compound:prt(act-6, in-7)

PARSE TREE:(48) ROOT ROOT
    (52) How many CMT
        (50) movies NT
            (49) act NT
                (54) Shahab Hosseini VTTEXT


===========
TRANSLATIONS
===========
TOT: 0.8662391053409028; NL: 0.8662391053409028; NL+AG: 0.9623803610291506; NL+QF: 0.8662391053409028; rels: []; projs: [count(distinct(movie_0.title))]; preds: [actor_0.name = "Shahab Hosseini"]; havings: []; superlative: []; blanks: 1
TOT: 0.8662391053409028; NL: 0.8662391053409028; NL+AG: 0.9623803610291506; NL+QF: 0.8662391053409028; rels: []; projs: [count(distinct(movie_0.title))]; preds: [writer_0.name = "Shahab Hosseini"]; havings: []; superlative: []; blanks: 1
TOT: 0.7989057703421542; NL: 0.7989057703421542; NL+AG: 0.9336787348794631; NL+QF: 0.7989057703421542; rels: []; projs: [count(distinct(movie_0.title))]; preds: [director_0.name = "Shahram Shah Hosseini"]; havings: []; superlative: []; blanks: 1
TOT: 0.791452383694395; NL: 0.791452383694395; NL+AG: 0.9336787348794631; NL+QF: 0.791452383694395; rels: []; projs: [count(distinct(movie_0.title))]; preds: [producer_0.name = "Shaun Hosseini"]; havings: []; superlative: []; blanks: 1
TOT: 0.7912922821972069; NL: 0.7912922821972069; NL+AG: 0.9334884919988383; NL+QF: 0.7912922821972069; rels: []; projs: [count(distinct(actor_0.name))]; preds: [actor_0.name = "Shahab Hosseini"]; havings: []; superlative: []; blanks: 1
TOT: 0.7912922821972069; NL: 0.7912922821972069; NL+AG: 0.9334884919988383; NL+QF: 0.7912922821972069; rels: []; projs: [count(distinct(actor_0.name))]; preds: [writer_0.name = "Shahab Hosseini"]; havings: []; superlative: []; blanks: 1
TOT: 0.7645314458836486; NL: 0.7645314458836486; NL+AG: 0.9334884919988383; NL+QF: 0.7645314458836486; rels: []; projs: [count(distinct(tv_series_0.title))]; preds: [actor_0.name = "Shahab Hosseini"]; havings: []; superlative: []; blanks: 1
TOT: 0.7645314458836486; NL: 0.7645314458836486; NL+AG: 0.9334884919988383; NL+QF: 0.7645314458836486; rels: []; projs: [count(distinct(tv_series_0.title))]; preds: [writer_0.name = "Shahab Hosseini"]; havings: []; superlative: []; blanks: 1
TOT: 0.7645314458836486; NL: 0.7645314458836486; NL+AG: 0.9334884919988383; NL+QF: 0.7645314458836486; rels: []; projs: [count(distinct(tv_series_0.title))]; preds: [actor_0.name = "Shahab Hosseini"]; havings: []; superlative: []; blanks: 1
TOT: 0.7645314458836486; NL: 0.7645314458836486; NL+AG: 0.9334884919988383; NL+QF: 0.7645314458836486; rels: []; projs: [count(distinct(tv_series_0.title))]; preds: [writer_0.name = "Shahab Hosseini"]; havings: []; superlative: []; blanks: 1
TOT: 0.7503701876218076; NL: 0.7503701876218076; NL+AG: 0.9177456737040814; NL+QF: 0.7503701876218076; rels: []; projs: [count(distinct(movie_0.title))]; preds: []; havings: []; superlative: []; blanks: 2

===========
RESULTS
===========
TOT: 0.8099153988614446; TR: 0.8662391053409028; QF: 0.0; select count(distinct(movie_0.title)) from movie as movie_0, writer as writer_0, written_by as written_by_0 where writer_0.name = "Shahab Hosseini" and movie_0.mid = written_by_0.msid and writer_0.wid = written_by_0.wid
TOT: 0.8099153988614446; TR: 0.8662391053409028; QF: 0.0; select count(distinct(movie_0.title)) from actor as actor_0, cast as cast_0, movie as movie_0 where actor_0.name = "Shahab Hosseini" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid
TOT: 0.7878146594785365; TR: 0.7503701876218076; QF: 1.0; select count(distinct(movie_0.title)) from movie as movie_0
TOT: 0.7844937098484438; TR: 0.8662391053409028; QF: 0.0; select count(distinct(movie_0.title)) from actor as actor_0, cast as cast_0, classification as classification_0, classification as classification_1, genre as genre_0, movie as movie_0, tv_series as tv_series_0 where actor_0.name = "Shahab Hosseini" and actor_0.aid = cast_0.aid and cast_0.msid = tv_series_0.sid and classification_0.gid = genre_0.gid and classification_0.msid = movie_0.mid and classification_1.gid = genre_0.gid and classification_1.msid = tv_series_0.sid
TOT: 0.7844937098484438; TR: 0.8662391053409028; QF: 0.0; select count(distinct(movie_0.title)) from company as company_0, copyright as copyright_0, copyright as copyright_1, movie as movie_0, tv_series as tv_series_0, writer as writer_0, written_by as written_by_0 where writer_0.name = "Shahab Hosseini" and company_0.id = copyright_0.cid and company_0.id = copyright_1.cid and copyright_0.msid = movie_0.mid and copyright_1.msid = tv_series_0.sid and tv_series_0.sid = written_by_0.msid and writer_0.wid = written_by_0.wid
TOT: 0.7844937098484438; TR: 0.8662391053409028; QF: 0.0; select count(distinct(movie_0.title)) from classification as classification_0, classification as classification_1, genre as genre_0, movie as movie_0, tv_series as tv_series_0, writer as writer_0, written_by as written_by_0 where writer_0.name = "Shahab Hosseini" and classification_0.gid = genre_0.gid and classification_0.msid = movie_0.mid and classification_1.gid = genre_0.gid and classification_1.msid = tv_series_0.sid and tv_series_0.sid = written_by_0.msid and writer_0.wid = written_by_0.wid
TOT: 0.7844937098484438; TR: 0.8662391053409028; QF: 0.0; select count(distinct(movie_0.title)) from keyword as keyword_0, movie as movie_0, tags as tags_0, tags as tags_1, tv_series as tv_series_0, writer as writer_0, written_by as written_by_0 where writer_0.name = "Shahab Hosseini" and keyword_0.id = tags_0.kid and keyword_0.id = tags_1.kid and movie_0.mid = tags_0.msid and tags_1.msid = tv_series_0.sid and tv_series_0.sid = written_by_0.msid and writer_0.wid = written_by_0.wid
TOT: 0.7844937098484438; TR: 0.8662391053409028; QF: 0.0; select count(distinct(movie_0.title)) from directed_by as directed_by_0, directed_by as directed_by_1, director as director_0, movie as movie_0, tv_series as tv_series_0, writer as writer_0, written_by as written_by_0 where writer_0.name = "Shahab Hosseini" and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and directed_by_1.did = director_0.did and directed_by_1.msid = tv_series_0.sid and tv_series_0.sid = written_by_0.msid and writer_0.wid = written_by_0.wid
TOT: 0.7844937098484438; TR: 0.8662391053409028; QF: 0.0; select count(distinct(movie_0.title)) from actor as actor_0, cast as cast_0, company as company_0, copyright as copyright_0, copyright as copyright_1, movie as movie_0, tv_series as tv_series_0 where actor_0.name = "Shahab Hosseini" and actor_0.aid = cast_0.aid and cast_0.msid = tv_series_0.sid and company_0.id = copyright_0.cid and company_0.id = copyright_1.cid and copyright_0.msid = movie_0.mid and copyright_1.msid = tv_series_0.sid
TOT: 0.7844937098484438; TR: 0.8662391053409028; QF: 0.0; select count(distinct(movie_0.title)) from actor as actor_0, cast as cast_0, keyword as keyword_0, movie as movie_0, tags as tags_0, tags as tags_1, tv_series as tv_series_0 where actor_0.name = "Shahab Hosseini" and actor_0.aid = cast_0.aid and cast_0.msid = tv_series_0.sid and keyword_0.id = tags_0.kid and keyword_0.id = tags_1.kid and movie_0.mid = tags_0.msid and tags_1.msid = tv_series_0.sid


00:20  INFO: ================
00:20  INFO: QUERY 38: Find all movies featuring "Benedict Cumberbatch"
00:20  INFO: ================
57. ROOT: ROOT; NA; ; (0) 
58. Find: CMT; NA; ; (0) 
59. featuring: NT; NA; ; (0) tv_series.title(0.69):| tv_series(0.69):| movie.release_year(0.64):| tv_series.release_year(0.64):| made_by(0.64):| movie.title_aka(0.62):| tv_series.title_aka(0.62):| 
60. movies: NT; NA; all; (0) movie.title(1.0):| movie(1.0):| cast.role(0.95):Movie; Movie F; Movie AD; | company.name(0.95):Movies; Movie; Movie Movie; | tv_series.title(0.84):Movies, Movies, Movi; Movie Mob; Moon Movies; | keyword.keyword(0.83):movie-in-movie; movies-about-movies; b-movie; | actor.name(0.76):| 
62. Benedict Cumberbatch: VTTEXT; NA; ; (0) actor.name(1.0):Benedict Cumberbatch; Benedict Cumberbatch; Benedict Timothy Car; | producer.name(1.0):Benedict Cumberbatch; Benedict Cumberbatch; Benedict Timothy Car; | cast.role(0.7):Tom Cumberbatch; Bert Benedict; Bert Benedict; | director.name(0.68):Jill Cumberbatch; Benedict Coen; Benedict Coen; | writer.name(0.67):Benedict Berenberg; Benedict Berenberg; Carol Cumberbatch; | movie.title(0.66):Benedict; Benedict; My Tribute, Eddie Cu; | company.name(0.59):St. Benedict Center; St. Benedict Center; Yerden-Cumberbatch M; | 
Find, VB
all, DT
movies, NNS
featuring, VBG
Benedict Cumberbatch, NNP
root(ROOT-0, Find-1)
det(movies-3, all-2)
nsubj(featuring-4, movies-3)
dep(Find-1, featuring-4)
dobj(featuring-4, Benedict Cumberbatch-5)

PARSE TREE:(57) ROOT ROOT
    (58) Find CMT
        (60) movies NT
            (59) featuring NT
                (62) Benedict Cumberbatch VTTEXT


===========
TRANSLATIONS
===========
TOT: 0.8662391053409028; NL: 0.8662391053409028; NL+AG: 0.9628121638266046; NL+QF: 0.8662391053409028; rels: []; projs: [movie_0.title]; preds: [actor_0.name = "Benedict Cumberbatch"]; havings: []; superlative: []; blanks: 1
TOT: 0.8662391053409028; NL: 0.8662391053409028; NL+AG: 0.9628121638266046; NL+QF: 0.8662391053409028; rels: []; projs: [movie_0.title]; preds: [producer_0.name = "Benedict Cumberbatch"]; havings: []; superlative: []; blanks: 1
TOT: 0.82915619758885; NL: 0.82915619758885; NL+AG: 0.9889432485322897; NL+QF: 0.82915619758885; rels: []; projs: [tv_series_0.title]; preds: [actor_0.name = "Benedict Cumberbatch"]; havings: []; superlative: []; blanks: 0
TOT: 0.82915619758885; NL: 0.82915619758885; NL+AG: 0.9889432485322897; NL+QF: 0.82915619758885; rels: []; projs: [tv_series_0.title]; preds: [producer_0.name = "Benedict Cumberbatch"]; havings: []; superlative: []; blanks: 0
TOT: 0.82915619758885; NL: 0.82915619758885; NL+AG: 0.9889432485322897; NL+QF: 0.82915619758885; rels: []; projs: [tv_series_0.title]; preds: [actor_0.name = "Benedict Cumberbatch"]; havings: []; superlative: []; blanks: 0
TOT: 0.82915619758885; NL: 0.82915619758885; NL+AG: 0.9889432485322897; NL+QF: 0.82915619758885; rels: []; projs: [tv_series_0.title]; preds: [producer_0.name = "Benedict Cumberbatch"]; havings: []; superlative: []; blanks: 0
TOT: 0.7912922821972069; NL: 0.7912922821972069; NL+AG: 0.9394249139348947; NL+QF: 0.7912922821972069; rels: []; projs: [actor_0.name]; preds: [actor_0.name = "Benedict Cumberbatch"]; havings: []; superlative: []; blanks: 1
TOT: 0.7912922821972069; NL: 0.7912922821972069; NL+AG: 0.9394249139348947; NL+QF: 0.7912922821972069; rels: []; projs: [actor_0.name]; preds: [producer_0.name = "Benedict Cumberbatch"]; havings: []; superlative: []; blanks: 1
TOT: 0.7690837687730294; NL: 0.7690837687730294; NL+AG: 0.9391833540180654; NL+QF: 0.7690837687730294; rels: []; projs: [movie_0.title]; preds: [cast_0.role = "Tom Cumberbatch"]; havings: []; superlative: []; blanks: 1
TOT: 0.7645314458836486; NL: 0.7645314458836486; NL+AG: 0.9394249139348947; NL+QF: 0.7645314458836486; rels: []; projs: [tv_series_0.title]; preds: [actor_0.name = "Benedict Cumberbatch"]; havings: []; superlative: []; blanks: 1
TOT: 0.7645314458836486; NL: 0.7645314458836486; NL+AG: 0.9394249139348947; NL+QF: 0.7645314458836486; rels: []; projs: [tv_series_0.title]; preds: [producer_0.name = "Benedict Cumberbatch"]; havings: []; superlative: []; blanks: 1
TOT: 0.7645314458836486; NL: 0.7645314458836486; NL+AG: 0.9394249139348947; NL+QF: 0.7645314458836486; rels: []; projs: [tv_series_0.title]; preds: [actor_0.name = "Benedict Cumberbatch"]; havings: []; superlative: []; blanks: 1
TOT: 0.7645314458836486; NL: 0.7645314458836486; NL+AG: 0.9394249139348947; NL+QF: 0.7645314458836486; rels: []; projs: [tv_series_0.title]; preds: [producer_0.name = "Benedict Cumberbatch"]; havings: []; superlative: []; blanks: 1

===========
RESULTS
===========
TOT: 0.8099153988614446; TR: 0.8662391053409028; QF: 0.0; select movie_0.title from made_by as made_by_0, movie as movie_0, producer as producer_0 where producer_0.name = "Benedict Cumberbatch" and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid
TOT: 0.8099153988614446; TR: 0.8662391053409028; QF: 0.0; select movie_0.title from actor as actor_0, cast as cast_0, movie as movie_0 where actor_0.name = "Benedict Cumberbatch" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid
TOT: 0.7844937098484438; TR: 0.8662391053409028; QF: 0.0; select movie_0.title from classification as classification_0, classification as classification_1, genre as genre_0, made_by as made_by_0, movie as movie_0, producer as producer_0, tv_series as tv_series_0 where producer_0.name = "Benedict Cumberbatch" and classification_0.gid = genre_0.gid and classification_0.msid = movie_0.mid and classification_1.gid = genre_0.gid and classification_1.msid = tv_series_0.sid and made_by_0.msid = tv_series_0.sid and made_by_0.pid = producer_0.pid
TOT: 0.7844937098484438; TR: 0.8662391053409028; QF: 0.0; select movie_0.title from actor as actor_0, cast as cast_0, classification as classification_0, classification as classification_1, genre as genre_0, movie as movie_0, tv_series as tv_series_0 where actor_0.name = "Benedict Cumberbatch" and actor_0.aid = cast_0.aid and cast_0.msid = tv_series_0.sid and classification_0.gid = genre_0.gid and classification_0.msid = movie_0.mid and classification_1.gid = genre_0.gid and classification_1.msid = tv_series_0.sid
TOT: 0.7844937098484438; TR: 0.8662391053409028; QF: 0.0; select movie_0.title from keyword as keyword_0, made_by as made_by_0, movie as movie_0, producer as producer_0, tags as tags_0, tags as tags_1, tv_series as tv_series_0 where producer_0.name = "Benedict Cumberbatch" and keyword_0.id = tags_0.kid and keyword_0.id = tags_1.kid and made_by_0.msid = tv_series_0.sid and made_by_0.pid = producer_0.pid and movie_0.mid = tags_0.msid and tags_1.msid = tv_series_0.sid
TOT: 0.7844937098484438; TR: 0.8662391053409028; QF: 0.0; select movie_0.title from made_by as made_by_0, movie as movie_0, producer as producer_0, tv_series as tv_series_0, writer as writer_0, written_by as written_by_0, written_by as written_by_1 where producer_0.name = "Benedict Cumberbatch" and made_by_0.msid = tv_series_0.sid and made_by_0.pid = producer_0.pid and movie_0.mid = written_by_0.msid and tv_series_0.sid = written_by_1.msid and writer_0.wid = written_by_0.wid and writer_0.wid = written_by_1.wid
TOT: 0.7844937098484438; TR: 0.8662391053409028; QF: 0.0; select movie_0.title from directed_by as directed_by_0, directed_by as directed_by_1, director as director_0, made_by as made_by_0, movie as movie_0, producer as producer_0, tv_series as tv_series_0 where producer_0.name = "Benedict Cumberbatch" and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and directed_by_1.did = director_0.did and directed_by_1.msid = tv_series_0.sid and made_by_0.msid = tv_series_0.sid and made_by_0.pid = producer_0.pid
TOT: 0.7844937098484438; TR: 0.8662391053409028; QF: 0.0; select movie_0.title from actor as actor_0, cast as cast_0, company as company_0, copyright as copyright_0, copyright as copyright_1, movie as movie_0, tv_series as tv_series_0 where actor_0.name = "Benedict Cumberbatch" and actor_0.aid = cast_0.aid and cast_0.msid = tv_series_0.sid and company_0.id = copyright_0.cid and company_0.id = copyright_1.cid and copyright_0.msid = movie_0.mid and copyright_1.msid = tv_series_0.sid
TOT: 0.7844937098484438; TR: 0.8662391053409028; QF: 0.0; select movie_0.title from actor as actor_0, cast as cast_0, keyword as keyword_0, movie as movie_0, tags as tags_0, tags as tags_1, tv_series as tv_series_0 where actor_0.name = "Benedict Cumberbatch" and actor_0.aid = cast_0.aid and cast_0.msid = tv_series_0.sid and keyword_0.id = tags_0.kid and keyword_0.id = tags_1.kid and movie_0.mid = tags_0.msid and tags_1.msid = tv_series_0.sid
TOT: 0.7844937098484438; TR: 0.8662391053409028; QF: 0.0; select movie_0.title from actor as actor_0, cast as cast_0, directed_by as directed_by_0, directed_by as directed_by_1, director as director_0, movie as movie_0, tv_series as tv_series_0 where actor_0.name = "Benedict Cumberbatch" and actor_0.aid = cast_0.aid and cast_0.msid = tv_series_0.sid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and directed_by_1.did = director_0.did and directed_by_1.msid = tv_series_0.sid


00:21  INFO: ================
00:21  INFO: QUERY 68: Find all movies about Iraq war
00:21  INFO: ================
64. ROOT: ROOT; NA; ; (0) 
65. Find: CMT; NA; ; (0) 
66. movies: NT; NA; all; (0) movie.title(1.0):| movie(1.0):| cast.role(0.95):Movie; Movie F; Movie AD; | company.name(0.95):Movies; Movie; Movie Movie; | tv_series.title(0.84):Movies, Movies, Movi; Movie Mob; Moon Movies; | keyword.keyword(0.83):movie-in-movie; movies-about-movies; b-movie; | actor.name(0.76):| 
68. war: VTTEXT; NA; ; (0) movie.title(0.95):Wars; Wars; Hardware Wars; | tv_series.title(0.95):War; Car Wars; War Walks; | actor.name(0.95):War; War; War; | genre.genre(0.95):War; War; Documentary; | producer.name(0.95):War; Johnny Star Wars; Vivian War; | company.name(0.95):War; War on Want; NWA War Zone; | writer.name(0.95):War; Johnny Star Wars; Men Of War; | 
70. Iraq: VTTEXT; NA; ; (0) movie.title(1.0):Iraq; Iraq; Ski Iraq; | director.nationality(1.0):Iraq; Iraq; Iraq; | actor.nationality(1.0):Iraq; Iraq; Iraq; | producer.nationality(1.0):Iraq; Iraq; Iraq; | writer.nationality(1.0):Iraq; Iraq; Iraq; | cast.role(0.8):Ira - Iraq; Iraq Vet; Iraq Veteran; | keyword.keyword(0.72):iraq-iran-war; basra-iraq; hatra-iraq; | 
Find, VB
all, DT
movies, NNS
about, IN
Iraq, NNP
war, NN
root(ROOT-0, Find-1)
det(movies-3, all-2)
dobj(Find-1, movies-3)
case(war-6, about-4)
compound(war-6, Iraq-5)
nmod(Find-1, war-6)

PARSE TREE:(64) ROOT ROOT
    (65) Find CMT
        (66) movies NT
        (68) war VTTEXT
            (70) Iraq VTTEXT


===========
TRANSLATIONS
===========
TOT: 0.9830475724915585; NL: 0.9830475724915585; NL+AG: 0.9947191844774439; NL+QF: 0.9830475724915585; rels: []; projs: [movie_0.title]; preds: [genre_0.genre = "War",movie_0.title = "Iraq"]; havings: []; superlative: []; blanks: 0
TOT: 0.9830475724915585; NL: 0.9830475724915585; NL+AG: 0.9947191844774439; NL+QF: 0.9830475724915585; rels: []; projs: [movie_0.title]; preds: [genre_0.genre = "War",director_0.nationality = "Iraq"]; havings: []; superlative: []; blanks: 0
TOT: 0.9830475724915585; NL: 0.9830475724915585; NL+AG: 0.9947191844774439; NL+QF: 0.9830475724915585; rels: []; projs: [movie_0.title]; preds: [genre_0.genre = "War",actor_0.nationality = "Iraq"]; havings: []; superlative: []; blanks: 0
TOT: 0.9830475724915585; NL: 0.9830475724915585; NL+AG: 0.9947191844774439; NL+QF: 0.9830475724915585; rels: []; projs: [movie_0.title]; preds: [genre_0.genre = "War",producer_0.nationality = "Iraq"]; havings: []; superlative: []; blanks: 0
TOT: 0.9830475724915585; NL: 0.9830475724915585; NL+AG: 0.9947191844774439; NL+QF: 0.9830475724915585; rels: []; projs: [movie_0.title]; preds: [genre_0.genre = "War",writer_0.nationality = "Iraq"]; havings: []; superlative: []; blanks: 0
TOT: 0.9128241092785631; NL: 0.9128241092785631; NL+AG: 0.9736635980475375; NL+QF: 0.9128241092785631; rels: []; projs: [movie_0.title]; preds: [genre_0.genre = "War",cast_0.role = "Ira - Iraq"]; havings: []; superlative: []; blanks: 0
TOT: 0.8979945056153297; NL: 0.8979945056153297; NL+AG: 0.9848909609505903; NL+QF: 0.8979945056153297; rels: []; projs: [actor_0.name]; preds: [genre_0.genre = "War",movie_0.title = "Iraq"]; havings: []; superlative: []; blanks: 0
TOT: 0.8979945056153297; NL: 0.8979945056153297; NL+AG: 0.9848909609505903; NL+QF: 0.8979945056153297; rels: []; projs: [actor_0.name]; preds: [genre_0.genre = "War",director_0.nationality = "Iraq"]; havings: []; superlative: []; blanks: 0
TOT: 0.8979945056153297; NL: 0.8979945056153297; NL+AG: 0.9848909609505903; NL+QF: 0.8979945056153297; rels: []; projs: [actor_0.name]; preds: [genre_0.genre = "War",actor_0.nationality = "Iraq"]; havings: []; superlative: []; blanks: 0
TOT: 0.8979945056153297; NL: 0.8979945056153297; NL+AG: 0.9848909609505903; NL+QF: 0.8979945056153297; rels: []; projs: [actor_0.name]; preds: [genre_0.genre = "War",producer_0.nationality = "Iraq"]; havings: []; superlative: []; blanks: 0
TOT: 0.8979945056153297; NL: 0.8979945056153297; NL+AG: 0.9848909609505903; NL+QF: 0.8979945056153297; rels: []; projs: [actor_0.name]; preds: [genre_0.genre = "War",writer_0.nationality = "Iraq"]; havings: []; superlative: []; blanks: 0

===========
RESULTS
===========
TOT: 0.8926101700440694; TR: 0.9830475724915585; QF: 0.0; select movie_0.title from classification as classification_0, directed_by as directed_by_0, director as director_0, genre as genre_0, movie as movie_0 where director_0.nationality = "Iraq" and genre_0.genre = "War" and classification_0.gid = genre_0.gid and classification_0.msid = movie_0.mid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid
TOT: 0.8926101700440694; TR: 0.9830475724915585; QF: 0.0; select movie_0.title from classification as classification_0, genre as genre_0, made_by as made_by_0, movie as movie_0, producer as producer_0 where genre_0.genre = "War" and producer_0.nationality = "Iraq" and classification_0.gid = genre_0.gid and classification_0.msid = movie_0.mid and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid
TOT: 0.8926101700440694; TR: 0.9830475724915585; QF: 0.0; select movie_0.title from classification as classification_0, genre as genre_0, movie as movie_0, writer as writer_0, written_by as written_by_0 where genre_0.genre = "War" and writer_0.nationality = "Iraq" and classification_0.gid = genre_0.gid and classification_0.msid = movie_0.mid and movie_0.mid = written_by_0.msid and writer_0.wid = written_by_0.wid
TOT: 0.8926101700440694; TR: 0.9830475724915585; QF: 0.0; select movie_0.title from classification as classification_0, classification as classification_1, genre as genre_0, movie as movie_0, movie as movie_1 where genre_0.genre = "War" and movie_1.title = "Iraq" and classification_0.gid = genre_0.gid and classification_0.msid = movie_0.mid and classification_1.gid = genre_0.gid and classification_1.msid = movie_1.mid
TOT: 0.8926101700440694; TR: 0.9830475724915585; QF: 0.0; select movie_0.title from actor as actor_0, cast as cast_0, classification as classification_0, genre as genre_0, movie as movie_0 where actor_0.nationality = "Iraq" and genre_0.genre = "War" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and classification_0.gid = genre_0.gid and classification_0.msid = movie_0.mid
TOT: 0.8837809069265012; TR: 0.9830475724915585; QF: 0.0; select movie_0.title from classification as classification_0, classification as classification_1, genre as genre_0, made_by as made_by_0, movie as movie_0, producer as producer_0, tv_series as tv_series_0 where genre_0.genre = "War" and producer_0.nationality = "Iraq" and classification_0.gid = genre_0.gid and classification_0.msid = movie_0.mid and classification_1.gid = genre_0.gid and classification_1.msid = tv_series_0.sid and made_by_0.msid = tv_series_0.sid and made_by_0.pid = producer_0.pid
TOT: 0.8837809069265012; TR: 0.9830475724915585; QF: 0.0; select movie_0.title from actor as actor_0, cast as cast_0, cast as cast_1, classification as classification_0, genre as genre_0, movie as movie_0, movie as movie_1 where genre_0.genre = "War" and movie_1.title = "Iraq" and actor_0.aid = cast_0.aid and actor_0.aid = cast_1.aid and cast_0.msid = movie_0.mid and cast_1.msid = movie_1.mid and classification_0.gid = genre_0.gid and classification_0.msid = movie_0.mid
TOT: 0.8837809069265012; TR: 0.9830475724915585; QF: 0.0; select movie_1.title from actor as actor_0, cast as cast_0, cast as cast_1, classification as classification_0, genre as genre_0, movie as movie_0, movie as movie_1 where genre_0.genre = "War" and movie_0.title = "Iraq" and actor_0.aid = cast_0.aid and actor_0.aid = cast_1.aid and cast_0.msid = movie_0.mid and cast_1.msid = movie_1.mid and classification_0.gid = genre_0.gid and classification_0.msid = movie_0.mid
TOT: 0.8837809069265012; TR: 0.9830475724915585; QF: 0.0; select movie_0.title from classification as classification_0, directed_by as directed_by_0, directed_by as directed_by_1, director as director_0, genre as genre_0, movie as movie_0, movie as movie_1 where genre_0.genre = "War" and movie_1.title = "Iraq" and classification_0.gid = genre_0.gid and classification_0.msid = movie_0.mid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and directed_by_1.did = director_0.did and directed_by_1.msid = movie_1.mid
TOT: 0.8837809069265012; TR: 0.9830475724915585; QF: 0.0; select movie_1.title from classification as classification_0, directed_by as directed_by_0, directed_by as directed_by_1, director as director_0, genre as genre_0, movie as movie_0, movie as movie_1 where genre_0.genre = "War" and movie_0.title = "Iraq" and classification_0.gid = genre_0.gid and classification_0.msid = movie_0.mid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and directed_by_1.did = director_0.did and directed_by_1.msid = movie_1.mid


00:23  INFO: ================
00:23  INFO: QUERY 76: find all films in which "Rowan Atkinson" acted as "Mr. Bean"
00:23  INFO: ================
00:25  INFO: ================
00:25  INFO: QUERY 69: Find all the directors who are from Afghanistan
00:25  INFO: ================
00:26  INFO: ================
00:26  INFO: QUERY 25: Find all movies written and produced by "Woody Allen"
00:26  INFO: ================
93. ROOT: ROOT; NA; ; (0) 
94. Find: CMT; NA; ; (0) 
95. movies: NT; NA; all; (0) movie.title(1.0):| movie(1.0):| cast.role(0.95):Movie; Movie F; Movie AD; | company.name(0.95):Movies; Movie; Movie Movie; | tv_series.title(0.84):Movies, Movies, Movi; Movie Mob; Moon Movies; | keyword.keyword(0.83):movie-in-movie; movies-about-movies; b-movie; | actor.name(0.76):| 
97. written: NT; NA; ; (0) written_by(1.0):| writer.name(0.78):| writer(0.78):| directed_by(0.68):| movie.title_aka(0.66):| tv_series.title_aka(0.66):| made_by(0.65):| 
99. produced: NT; NA; ; (0) made_by(0.74):| directed_by(0.69):| producer.name(0.68):| producer(0.68):| cast.role(0.63):| cast(0.63):| written_by(0.63):| 
100. Woody Allen: VTTEXT; NA; ; (0) director.name(1.0):Woody Allen; Woody Allen; Moody Allen; | actor.name(1.0):Woody Allen; Woody Allen; Jody Allen; | producer.name(1.0):Woody Allen; Woody Allen; Moody Allen; | writer.name(1.0):Woody Allen; Woody Allen; Moody Allen; | cast.role(0.85):Woody Allen Jr.; Woody Allen Jr.; Young Woody Allen; | movie.title(0.82):F.U. Woody Allen; F.U. Woody Allen; Woody Before Allen; | tv_series.title(0.73):The Woody Allen Show; The Woody Allen Show; Dave Allen; | 
Find, VB
all, DT
movies, NNS
written, VBN
and, CC
produced, VBN
by, IN
Woody Allen, NNP
root(ROOT-0, Find-1)
det(movies-3, all-2)
dobj(Find-1, movies-3)
acl(movies-3, written-4)
cc(written-4, and-5)
conj(written-4, produced-6)
case(Woody Allen-8, by-7)
nmod(written-4, Woody Allen-8)

PARSE TREE:(93) ROOT ROOT
    (94) Find CMT
        (95) movies NT
            (97) written NT
                (100) Woody Allen VTTEXT
            (99) produced NT


===========
TRANSLATIONS
===========
TOT: 0.9282851983280498; NL: 0.9282851983280498; NL+AG: 0.966581842152465; NL+QF: 0.9282851983280498; rels: [made_by,written_by]; projs: [movie_0.title]; preds: [director_0.name = "Woody Allen"]; havings: []; superlative: []; blanks: 0
TOT: 0.9282851983280498; NL: 0.9282851983280498; NL+AG: 0.966581842152465; NL+QF: 0.9282851983280498; rels: [made_by,written_by]; projs: [movie_0.title]; preds: [actor_0.name = "Woody Allen"]; havings: []; superlative: []; blanks: 0
TOT: 0.9282851983280498; NL: 0.9282851983280498; NL+AG: 0.966581842152465; NL+QF: 0.9282851983280498; rels: [made_by,written_by]; projs: [movie_0.title]; preds: [producer_0.name = "Woody Allen"]; havings: []; superlative: []; blanks: 0
TOT: 0.9282851983280498; NL: 0.9282851983280498; NL+AG: 0.966581842152465; NL+QF: 0.9282851983280498; rels: [made_by,written_by]; projs: [movie_0.title]; preds: [writer_0.name = "Woody Allen"]; havings: []; superlative: []; blanks: 0
TOT: 0.9126261813556491; NL: 0.9126261813556491; NL+AG: 0.966581842152465; NL+QF: 0.9126261813556491; rels: [written_by,directed_by]; projs: [movie_0.title]; preds: [director_0.name = "Woody Allen"]; havings: []; superlative: []; blanks: 0
TOT: 0.9126261813556491; NL: 0.9126261813556491; NL+AG: 0.966581842152465; NL+QF: 0.9126261813556491; rels: [written_by,directed_by]; projs: [movie_0.title]; preds: [actor_0.name = "Woody Allen"]; havings: []; superlative: []; blanks: 0
TOT: 0.9126261813556491; NL: 0.9126261813556491; NL+AG: 0.966581842152465; NL+QF: 0.9126261813556491; rels: [written_by,directed_by]; projs: [movie_0.title]; preds: [producer_0.name = "Woody Allen"]; havings: []; superlative: []; blanks: 0
TOT: 0.9126261813556491; NL: 0.9126261813556491; NL+AG: 0.966581842152465; NL+QF: 0.9126261813556491; rels: [written_by,directed_by]; projs: [movie_0.title]; preds: [writer_0.name = "Woody Allen"]; havings: []; superlative: []; blanks: 0
TOT: 0.9073176753710547; NL: 0.9073176753710547; NL+AG: 0.966581842152465; NL+QF: 0.9073176753710547; rels: [producer,written_by]; projs: [movie_0.title]; preds: [director_0.name = "Woody Allen"]; havings: []; superlative: []; blanks: 0
TOT: 0.9073176753710547; NL: 0.9073176753710547; NL+AG: 0.966581842152465; NL+QF: 0.9073176753710547; rels: [producer,written_by]; projs: [movie_0.title]; preds: [actor_0.name = "Woody Allen"]; havings: []; superlative: []; blanks: 0
TOT: 0.9073176753710547; NL: 0.9073176753710547; NL+AG: 0.966581842152465; NL+QF: 0.9073176753710547; rels: [producer,written_by]; projs: [movie_0.title]; preds: [producer_0.name = "Woody Allen"]; havings: []; superlative: []; blanks: 0
TOT: 0.9073176753710547; NL: 0.9073176753710547; NL+AG: 0.966581842152465; NL+QF: 0.9073176753710547; rels: [producer,written_by]; projs: [movie_0.title]; preds: [writer_0.name = "Woody Allen"]; havings: []; superlative: []; blanks: 0

===========
RESULTS
===========
TOT: 0.8372328888875188; TR: 0.9282851983280498; QF: 0.0; select movie_0.title from made_by as made_by_0, movie as movie_0, producer as producer_0, tv_series as tv_series_0, writer as writer_0, written_by as written_by_0, written_by as written_by_1 where producer_0.name = "Woody Allen" and made_by_0.msid = tv_series_0.sid and made_by_0.pid = producer_0.pid and movie_0.mid = written_by_0.msid and tv_series_0.sid = written_by_1.msid and writer_0.wid = written_by_0.wid and writer_0.wid = written_by_1.wid
TOT: 0.8372328888875188; TR: 0.9282851983280498; QF: 0.0; select movie_0.title from made_by as made_by_0, made_by as made_by_1, movie as movie_0, producer as producer_0, tv_series as tv_series_0, writer as writer_0, written_by as written_by_0 where writer_0.name = "Woody Allen" and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid and made_by_1.msid = tv_series_0.sid and made_by_1.pid = producer_0.pid and tv_series_0.sid = written_by_0.msid and writer_0.wid = written_by_0.wid
TOT: 0.8239227244609783; TR: 0.9126261813556491; QF: 0.0; select movie_0.title from directed_by as directed_by_0, director as director_0, movie as movie_0, tv_series as tv_series_0, writer as writer_0, written_by as written_by_0, written_by as written_by_1 where director_0.name = "Woody Allen" and directed_by_0.did = director_0.did and directed_by_0.msid = tv_series_0.sid and movie_0.mid = written_by_0.msid and tv_series_0.sid = written_by_1.msid and writer_0.wid = written_by_0.wid and writer_0.wid = written_by_1.wid
TOT: 0.8239227244609783; TR: 0.9126261813556491; QF: 0.0; select movie_0.title from directed_by as directed_by_0, directed_by as directed_by_1, director as director_0, movie as movie_0, tv_series as tv_series_0, writer as writer_0, written_by as written_by_0 where writer_0.name = "Woody Allen" and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and directed_by_1.did = director_0.did and directed_by_1.msid = tv_series_0.sid and tv_series_0.sid = written_by_0.msid and writer_0.wid = written_by_0.wid


00:28  INFO: ================
00:28  INFO: QUERY 32: What company produced the movie "Juno"?
00:28  INFO: ================
103. ROOT: ROOT; NA; ; (0) 
104. produced: NT; NA; ; (0) made_by(0.74):| directed_by(0.69):| producer.name(0.68):| producer(0.68):| cast.role(0.63):| cast(0.63):| written_by(0.63):| 
105. company: NT; NA; ; (0) company.name(1.0):| company(1.0):| movie.title(0.95):Company; Company; Company; | cast.role(0.95):Company; Company; Company; | keyword.keyword(0.95):company; company-k; it-company; | tv_series.title(0.82):X Company; Eco Company; Company and Co; | actor.name(0.74):Eva Company; Angel Company; Marc Company; | 
106. What: CMT; NA; ; (0) 
107. Juno: VTTEXT; NA; ; (0) movie.title(1.0):Juno; Juno; Jeni, Juno; | actor.name(1.0):Juno; Juno Leung; Juno Mak; | company.name(1.0):Juno; Juno; Juno Pix; | cast.role(0.83):Juno Luno; Juno Luno; Juno Luno; | director.name(0.65):Juno Mak; Juno Lee; Juno Doran; | producer.name(0.65):Juno Mak; Juno Lee; Juno Leed; | writer.name(0.65):Juno Mak; Juno Jakob; Peter Juno; | 
108. movie: NT; NA; ; (0) movie.title(1.0):| movie(1.0):| cast.role(0.95):Movie; Movie F; Movie AD; | company.name(0.95):Movie; Movies; Movie Movie; | keyword.keyword(0.83):movie-in-movie; b-movie; z-movie; | actor.name(0.76):| actor(0.76):| 
What, WDT
company, NN
produced, VBD
the, DT
movie, NN
Juno, NNP
det(company-2, What-1)
nsubj(produced-3, company-2)
root(ROOT-0, produced-3)
det(movie-5, the-4)
nsubj(Juno-6, movie-5)
xcomp(produced-3, Juno-6)

PARSE TREE:(103) ROOT ROOT
    (106) What CMT
        (105) company NT
            (104) produced NT
                (107) Juno VTTEXT
                    (108) movie NT


===========
TRANSLATIONS
===========
TOT: 0.9282851983280498; NL: 0.9282851983280498; NL+AG: 0.966581842152465; NL+QF: 0.9282851983280498; rels: [made_by,movie]; projs: [company_0.name]; preds: [movie_0.title = "Juno"]; havings: []; superlative: []; blanks: 0
TOT: 0.9282851983280498; NL: 0.9282851983280498; NL+AG: 0.966581842152465; NL+QF: 0.9282851983280498; rels: [made_by,movie]; projs: [company_0.name]; preds: [actor_0.name = "Juno"]; havings: []; superlative: []; blanks: 0
TOT: 0.9282851983280498; NL: 0.9282851983280498; NL+AG: 0.966581842152465; NL+QF: 0.9282851983280498; rels: [made_by,movie]; projs: [company_0.name]; preds: [company_0.name = "Juno"]; havings: []; superlative: []; blanks: 0
TOT: 0.9126261813556491; NL: 0.9126261813556491; NL+AG: 0.966581842152465; NL+QF: 0.9126261813556491; rels: [movie,directed_by]; projs: [company_0.name]; preds: [movie_0.title = "Juno"]; havings: []; superlative: []; blanks: 0
TOT: 0.9126261813556491; NL: 0.9126261813556491; NL+AG: 0.966581842152465; NL+QF: 0.9126261813556491; rels: [movie,directed_by]; projs: [company_0.name]; preds: [actor_0.name = "Juno"]; havings: []; superlative: []; blanks: 0
TOT: 0.9126261813556491; NL: 0.9126261813556491; NL+AG: 0.966581842152465; NL+QF: 0.9126261813556491; rels: [movie,directed_by]; projs: [company_0.name]; preds: [company_0.name = "Juno"]; havings: []; superlative: []; blanks: 0
TOT: 0.9073176753710547; NL: 0.9073176753710547; NL+AG: 0.966581842152465; NL+QF: 0.9073176753710547; rels: [producer,movie]; projs: [company_0.name]; preds: [movie_0.title = "Juno"]; havings: []; superlative: []; blanks: 0
TOT: 0.9073176753710547; NL: 0.9073176753710547; NL+AG: 0.966581842152465; NL+QF: 0.9073176753710547; rels: [producer,movie]; projs: [company_0.name]; preds: [actor_0.name = "Juno"]; havings: []; superlative: []; blanks: 0
TOT: 0.9073176753710547; NL: 0.9073176753710547; NL+AG: 0.966581842152465; NL+QF: 0.9073176753710547; rels: [producer,movie]; projs: [company_0.name]; preds: [company_0.name = "Juno"]; havings: []; superlative: []; blanks: 0
TOT: 0.8979007600118484; NL: 0.8979007600118484; NL+AG: 0.966581842152465; NL+QF: 0.8979007600118484; rels: [movie]; projs: [company_0.name]; preds: [movie_0.title = "Juno"]; havings: []; superlative: []; blanks: 1
TOT: 0.8979007600118484; NL: 0.8979007600118484; NL+AG: 0.966581842152465; NL+QF: 0.8979007600118484; rels: [movie]; projs: [company_0.name]; preds: [actor_0.name = "Juno"]; havings: []; superlative: []; blanks: 1
TOT: 0.8979007600118484; NL: 0.8979007600118484; NL+AG: 0.966581842152465; NL+QF: 0.8979007600118484; rels: [movie]; projs: [company_0.name]; preds: [company_0.name = "Juno"]; havings: []; superlative: []; blanks: 1

===========
RESULTS
===========
TOT: 0.8372328888875188; TR: 0.9282851983280498; QF: 0.0; select company_0.name from company as company_0, copyright as copyright_0, made_by as made_by_0, made_by as made_by_1, movie as movie_0, producer as producer_0, tv_series as tv_series_0 where movie_0.title = "Juno" and company_0.id = copyright_0.cid and copyright_0.msid = tv_series_0.sid and made_by_0.msid = tv_series_0.sid and made_by_0.pid = producer_0.pid and made_by_1.msid = movie_0.mid and made_by_1.pid = producer_0.pid
TOT: 0.8368278053317484; TR: 0.8979007600118484; QF: 0.0; select company_0.name from company as company_0, copyright as copyright_0, movie as movie_0 where movie_0.title = "Juno" and company_0.id = copyright_0.cid and copyright_0.msid = movie_0.mid
TOT: 0.8239227244609783; TR: 0.9126261813556491; QF: 0.0; select company_0.name from company as company_0, copyright as copyright_0, directed_by as directed_by_0, directed_by as directed_by_1, director as director_0, movie as movie_0, tv_series as tv_series_0 where movie_0.title = "Juno" and company_0.id = copyright_0.cid and copyright_0.msid = tv_series_0.sid and directed_by_0.did = director_0.did and directed_by_0.msid = tv_series_0.sid and directed_by_1.did = director_0.did and directed_by_1.msid = movie_0.mid
TOT: 0.8202353794363157; TR: 0.8979007600118484; QF: 0.0; select company_0.name from actor as actor_0, cast as cast_0, company as company_0, copyright as copyright_0, movie as movie_0 where actor_0.name = "Juno" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and company_0.id = copyright_0.cid and copyright_0.msid = movie_0.mid
TOT: 0.8202353794363157; TR: 0.8979007600118484; QF: 0.0; select company_0.name from company as company_0, company as company_1, copyright as copyright_0, copyright as copyright_1, movie as movie_0 where company_1.name = "Juno" and company_0.id = copyright_0.cid and company_1.id = copyright_1.cid and copyright_0.msid = movie_0.mid and copyright_1.msid = movie_0.mid
TOT: 0.8114061163187476; TR: 0.8979007600118484; QF: 0.0; select company_0.name from actor as actor_0, cast as cast_0, cast as cast_1, company as company_0, copyright as copyright_0, movie as movie_0, tv_series as tv_series_0 where movie_0.title = "Juno" and actor_0.aid = cast_0.aid and actor_0.aid = cast_1.aid and cast_0.msid = tv_series_0.sid and cast_1.msid = movie_0.mid and company_0.id = copyright_0.cid and copyright_0.msid = tv_series_0.sid
TOT: 0.8114061163187476; TR: 0.8979007600118484; QF: 0.0; select company_0.name from company as company_0, copyright as copyright_0, movie as movie_0, tv_series as tv_series_0, writer as writer_0, written_by as written_by_0, written_by as written_by_1 where movie_0.title = "Juno" and company_0.id = copyright_0.cid and copyright_0.msid = tv_series_0.sid and movie_0.mid = written_by_1.msid and tv_series_0.sid = written_by_0.msid and writer_0.wid = written_by_0.wid and writer_0.wid = written_by_1.wid
TOT: 0.8114061163187476; TR: 0.8979007600118484; QF: 0.0; select company_0.name from company as company_0, copyright as copyright_0, keyword as keyword_0, movie as movie_0, tags as tags_0, tags as tags_1, tv_series as tv_series_0 where movie_0.title = "Juno" and company_0.id = copyright_0.cid and copyright_0.msid = tv_series_0.sid and keyword_0.id = tags_0.kid and keyword_0.id = tags_1.kid and movie_0.mid = tags_1.msid and tags_0.msid = tv_series_0.sid
TOT: 0.8114061163187476; TR: 0.8979007600118484; QF: 0.0; select company_0.name from classification as classification_0, classification as classification_1, company as company_0, copyright as copyright_0, genre as genre_0, movie as movie_0, tv_series as tv_series_0 where movie_0.title = "Juno" and classification_0.gid = genre_0.gid and classification_0.msid = tv_series_0.sid and classification_1.gid = genre_0.gid and classification_1.msid = movie_0.mid and company_0.id = copyright_0.cid and copyright_0.msid = tv_series_0.sid


00:30  INFO: ================
00:30  INFO: QUERY 46: Who is the writer of the movie "Django Unchained"
00:30  INFO: ================
00:31  INFO: ================
00:31  INFO: QUERY 53: Find all tv series produced by Netflix
00:31  INFO: ================
121. ROOT: ROOT; NA; ; (0) 
122. Find: CMT; NA; ; (0) 
123. series: NT; NA; all; (0) tv_series.title(1.0):| tv_series(1.0):| keyword.keyword(0.95):series; series; series-in-series; | company.name(0.87):Series+; Series+; T-Series; | movie.title(0.8):Series 4; Series 4; Chinese Series; | actor.name(0.79):Eric Series; Eric Series; series editor; | tv_series.num_of_episodes(0.68):| 
125. tv: NT; NA; ; (0) tv_series.title(1.0):| tv_series(1.0):| actor.name(0.95):TVS; | company.name(0.95):TVS; TVS; TV Studios (TVS); | movie.title(0.69):| movie(0.69):| tv_series.num_of_episodes(0.67):| 
126. produced: NT; NA; ; (0) made_by(0.74):| directed_by(0.69):| producer.name(0.68):| producer(0.68):| cast.role(0.63):| cast(0.63):| written_by(0.63):| 
127. Netflix: VTTEXT; NA; ; (0) company.name(1.0):Netflix; Netflix; Netflix; | keyword.keyword(1.0):netflix; netflix-series; netflix-production; | tv_series.title(0.78):| tv_series(0.78):| cast.role(0.77):Netflix guy; | movie.title(0.74):| movie(0.74):| 
Find, VB
all, DT
tv, NN
series, NN
produced, VBN
by, IN
Netflix, NNP
root(ROOT-0, Find-1)
det(series-4, all-2)
compound(series-4, tv-3)
dobj(Find-1, series-4)
acl(series-4, produced-5)
case(Netflix-7, by-6)
nmod(produced-5, Netflix-7)

PARSE TREE:(121) ROOT ROOT
    (122) Find CMT
        (123) series NT
            (125) tv NT
            (126) produced NT
                (127) Netflix VTTEXT


===========
TRANSLATIONS
===========
TOT: 0.9282851983280498; NL: 0.9282851983280498; NL+AG: 0.966581842152465; NL+QF: 0.9282851983280498; rels: [made_by]; projs: [tv_series_0.title]; preds: [company_0.name = "Netflix"]; havings: []; superlative: []; blanks: 1
TOT: 0.9282851983280498; NL: 0.9282851983280498; NL+AG: 0.966581842152465; NL+QF: 0.9282851983280498; rels: [made_by]; projs: [tv_series_0.title]; preds: [keyword_0.keyword = "netflix"]; havings: []; superlative: []; blanks: 1
TOT: 0.9126261813556491; NL: 0.9126261813556491; NL+AG: 0.966581842152465; NL+QF: 0.9126261813556491; rels: [directed_by]; projs: [tv_series_0.title]; preds: [company_0.name = "Netflix"]; havings: []; superlative: []; blanks: 1
TOT: 0.9126261813556491; NL: 0.9126261813556491; NL+AG: 0.966581842152465; NL+QF: 0.9126261813556491; rels: [directed_by]; projs: [tv_series_0.title]; preds: [keyword_0.keyword = "netflix"]; havings: []; superlative: []; blanks: 1
TOT: 0.9073176753710547; NL: 0.9073176753710547; NL+AG: 0.966581842152465; NL+QF: 0.9073176753710547; rels: [producer]; projs: [tv_series_0.title]; preds: [company_0.name = "Netflix"]; havings: []; superlative: []; blanks: 1
TOT: 0.9073176753710547; NL: 0.9073176753710547; NL+AG: 0.966581842152465; NL+QF: 0.9073176753710547; rels: [producer]; projs: [tv_series_0.title]; preds: [keyword_0.keyword = "netflix"]; havings: []; superlative: []; blanks: 1
TOT: 0.8979007600118484; NL: 0.8979007600118484; NL+AG: 0.966581842152465; NL+QF: 0.8979007600118484; rels: []; projs: [tv_series_0.title]; preds: [company_0.name = "Netflix"]; havings: []; superlative: []; blanks: 2
TOT: 0.8979007600118484; NL: 0.8979007600118484; NL+AG: 0.966581842152465; NL+QF: 0.8979007600118484; rels: []; projs: [tv_series_0.title]; preds: [keyword_0.keyword = "netflix"]; havings: []; superlative: []; blanks: 2
TOT: 0.8736760294322355; NL: 0.8736760294322355; NL+AG: 0.9292177196056817; NL+QF: 0.8736760294322355; rels: [made_by]; projs: [tv_series_0.title]; preds: []; havings: []; superlative: []; blanks: 2
TOT: 0.8736760294322355; NL: 0.8736760294322355; NL+AG: 0.9292177196056817; NL+QF: 0.8736760294322355; rels: [made_by,tv_series]; projs: [tv_series_0.title]; preds: []; havings: []; superlative: []; blanks: 1
TOT: 0.8708639878855639; NL: 0.8708639878855639; NL+AG: 0.942763618984786; NL+QF: 0.8708639878855639; rels: [made_by]; projs: [tv_series_0.title]; preds: [cast_0.role = "Netflix guy"]; havings: []; superlative: []; blanks: 1

===========
RESULTS
===========
TOT: 0.8372328888875188; TR: 0.9282851983280498; QF: 0.0; select tv_series_0.title from company as company_0, copyright as copyright_0, made_by as made_by_0, made_by as made_by_1, movie as movie_0, producer as producer_0, tv_series as tv_series_0 where company_0.name = "Netflix" and company_0.id = copyright_0.cid and copyright_0.msid = movie_0.mid and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid and made_by_1.msid = tv_series_0.sid and made_by_1.pid = producer_0.pid
TOT: 0.8372328888875188; TR: 0.9282851983280498; QF: 0.0; select tv_series_0.title from keyword as keyword_0, made_by as made_by_0, made_by as made_by_1, movie as movie_0, producer as producer_0, tags as tags_0, tv_series as tv_series_0 where keyword_0.keyword = "netflix" and keyword_0.id = tags_0.kid and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid and made_by_1.msid = tv_series_0.sid and made_by_1.pid = producer_0.pid and movie_0.mid = tags_0.msid
TOT: 0.8368278053317484; TR: 0.8979007600118484; QF: 0.0; select tv_series_0.title from keyword as keyword_0, tags as tags_0, tv_series as tv_series_0 where keyword_0.keyword = "netflix" and keyword_0.id = tags_0.kid and tags_0.msid = tv_series_0.sid
TOT: 0.8368278053317484; TR: 0.8979007600118484; QF: 0.0; select tv_series_0.title from company as company_0, copyright as copyright_0, tv_series as tv_series_0 where company_0.name = "Netflix" and company_0.id = copyright_0.cid and copyright_0.msid = tv_series_0.sid
TOT: 0.8239227244609783; TR: 0.9126261813556491; QF: 0.0; select tv_series_0.title from directed_by as directed_by_0, directed_by as directed_by_1, director as director_0, keyword as keyword_0, movie as movie_0, tags as tags_0, tv_series as tv_series_0 where keyword_0.keyword = "netflix" and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and directed_by_1.did = director_0.did and directed_by_1.msid = tv_series_0.sid and keyword_0.id = tags_0.kid and movie_0.mid = tags_0.msid
TOT: 0.8239227244609783; TR: 0.9126261813556491; QF: 0.0; select tv_series_0.title from company as company_0, copyright as copyright_0, directed_by as directed_by_0, directed_by as directed_by_1, director as director_0, movie as movie_0, tv_series as tv_series_0 where company_0.name = "Netflix" and company_0.id = copyright_0.cid and copyright_0.msid = movie_0.mid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and directed_by_1.did = director_0.did and directed_by_1.msid = tv_series_0.sid
TOT: 0.8114061163187476; TR: 0.8979007600118484; QF: 0.0; select tv_series_0.title from keyword as keyword_0, movie as movie_0, tags as tags_0, tv_series as tv_series_0, writer as writer_0, written_by as written_by_0, written_by as written_by_1 where keyword_0.keyword = "netflix" and keyword_0.id = tags_0.kid and movie_0.mid = tags_0.msid and movie_0.mid = written_by_0.msid and tv_series_0.sid = written_by_1.msid and writer_0.wid = written_by_0.wid and writer_0.wid = written_by_1.wid
TOT: 0.8114061163187476; TR: 0.8979007600118484; QF: 0.0; select tv_series_0.title from actor as actor_0, cast as cast_0, cast as cast_1, company as company_0, copyright as copyright_0, movie as movie_0, tv_series as tv_series_0 where company_0.name = "Netflix" and actor_0.aid = cast_0.aid and actor_0.aid = cast_1.aid and cast_0.msid = movie_0.mid and cast_1.msid = tv_series_0.sid and company_0.id = copyright_0.cid and copyright_0.msid = movie_0.mid
TOT: 0.8114061163187476; TR: 0.8979007600118484; QF: 0.0; select tv_series_0.title from classification as classification_0, classification as classification_1, company as company_0, copyright as copyright_0, genre as genre_0, movie as movie_0, tv_series as tv_series_0 where company_0.name = "Netflix" and classification_0.gid = genre_0.gid and classification_0.msid = movie_0.mid and classification_1.gid = genre_0.gid and classification_1.msid = tv_series_0.sid and company_0.id = copyright_0.cid and copyright_0.msid = movie_0.mid
TOT: 0.8114061163187476; TR: 0.8979007600118484; QF: 0.0; select tv_series_0.title from company as company_0, copyright as copyright_0, copyright as copyright_1, keyword as keyword_0, movie as movie_0, tags as tags_0, tv_series as tv_series_0 where keyword_0.keyword = "netflix" and company_0.id = copyright_0.cid and company_0.id = copyright_1.cid and copyright_0.msid = movie_0.mid and copyright_1.msid = tv_series_0.sid and keyword_0.id = tags_0.kid and movie_0.mid = tags_0.msid


00:33  INFO: ================
00:33  INFO: QUERY 86: List all the directors of movies about nuclear weapons
00:33  INFO: ================
130. ROOT: ROOT; NA; ; (0) 
131. List: CMT; NA; ; (0) 
132. directors: NT; NA; all; (0) director.name(1.0):| director(1.0):| movie.title(0.95):Director; Director; Director; | producer.name(0.95):Director; Co-Director; Director GT; | company.name(0.95):Directors; Directors; Director; | writer.name(0.95):Director; Director X; Director X.; | tv_series.title(0.88):Directors on Directo; The Directors; The Directors; | 
135. movies: NT; NA; ; (0) movie.title(1.0):| movie(1.0):| cast.role(0.95):Movie; Movie F; Movie AD; | company.name(0.95):Movies; Movie; Movie Movie; | tv_series.title(0.84):Movies, Movies, Movi; Movie Mob; Moon Movies; | keyword.keyword(0.83):movie-in-movie; movies-about-movies; b-movie; | actor.name(0.76):| 
137. weapons: VTTEXT; NA; ; (0) movie.title(0.95):Weapons; Weapons; Weapons; | cast.role(0.95):Weapons; Weapons; Weapons; | keyword.keyword(0.95):weapon; weapon-x; power-weapon; | actor.name(0.74):The Weapons; Leatha Weapons; Letha Weapons; | tv_series.title(0.71):Weapons of Power; Weapon Wars; Weapons at War; | company.name(0.67):Weapon Films; Weapons Productions; No Weapon Production; | director.nationality(0.59):| 
139. nuclear: VTTEXT; NA; ; (0) movie.title(1.0):Nuclear; Nuclear Leak; Nuclear Day; | company.name(1.0):Nuclear; Nuclear; Nuclear Cat; | keyword.keyword(1.0):nuclear; nuclear-leak; nuclear-arms; | cast.role(0.79):Nuclear dealer; Nuclear Man; Nuclear Man; | tv_series.title(0.77):Nuclear Ned; Nuclear Coleslaw; Nuclear Family; | actor.name(0.68):Nuclear Family; Nuclear Wintour; El Físico Nuclear; | company.country_code(0.62):| 
List, VB
all, PDT
the, DT
directors, NNS
of, IN
movies, NNS
about, IN
nuclear, JJ
weapons, NNS
root(ROOT-0, List-1)
det:predet(directors-4, all-2)
det(directors-4, the-3)
dobj(List-1, directors-4)
case(movies-6, of-5)
nmod(directors-4, movies-6)
case(weapons-9, about-7)
amod(weapons-9, nuclear-8)
nmod(movies-6, weapons-9)

PARSE TREE:(130) ROOT ROOT
    (131) List CMT
        (132) directors NT
            (135) movies NT
                (137) weapons VTTEXT
                    (139) nuclear VTTEXT


===========
TRANSLATIONS
===========
TOT: 0.8979007600118484; NL: 0.8979007600118484; NL+AG: 0.966581842152465; NL+QF: 0.8979007600118484; rels: [movie]; projs: [director_0.name]; preds: [movie_0.title = "Nuclear"]; havings: []; superlative: []; blanks: 1
TOT: 0.8979007600118484; NL: 0.8979007600118484; NL+AG: 0.966581842152465; NL+QF: 0.8979007600118484; rels: [movie]; projs: [director_0.name]; preds: [company_0.name = "Nuclear"]; havings: []; superlative: []; blanks: 1
TOT: 0.8979007600118484; NL: 0.8979007600118484; NL+AG: 0.966581842152465; NL+QF: 0.8979007600118484; rels: [movie]; projs: [director_0.name]; preds: [keyword_0.keyword = "nuclear"]; havings: []; superlative: []; blanks: 1
TOT: 0.8470827043267568; NL: 0.8470827043267568; NL+AG: 0.942763618984786; NL+QF: 0.8470827043267568; rels: [movie]; projs: [director_0.name]; preds: [cast_0.role = "Nuclear dealer"]; havings: []; superlative: []; blanks: 1
TOT: 0.8423590487037597; NL: 0.8423590487037597; NL+AG: 0.942763618984786; NL+QF: 0.8423590487037597; rels: [movie]; projs: [director_0.name]; preds: [tv_series_0.title = "Nuclear Ned"]; havings: []; superlative: []; blanks: 1
TOT: 0.8301821713362141; NL: 0.8301821713362141; NL+AG: 0.9775911474238732; NL+QF: 0.8301821713362141; rels: [movie]; projs: [director_0.name]; preds: [movie_0.title = "Weapons",movie_0.title = "Nuclear"]; havings: []; superlative: []; blanks: 0
TOT: 0.8301821713362141; NL: 0.8301821713362141; NL+AG: 0.9775911474238732; NL+QF: 0.8301821713362141; rels: [movie]; projs: [director_0.name]; preds: [movie_0.title = "Weapons",company_0.name = "Nuclear"]; havings: []; superlative: []; blanks: 0
TOT: 0.8301821713362141; NL: 0.8301821713362141; NL+AG: 0.9775911474238732; NL+QF: 0.8301821713362141; rels: [movie]; projs: [director_0.name]; preds: [movie_0.title = "Weapons",keyword_0.keyword = "nuclear"]; havings: []; superlative: []; blanks: 0
TOT: 0.8301821713362141; NL: 0.8301821713362141; NL+AG: 0.9775911474238732; NL+QF: 0.8301821713362141; rels: [movie]; projs: [director_0.name]; preds: [cast_0.role = "Weapons",movie_0.title = "Nuclear"]; havings: []; superlative: []; blanks: 0
TOT: 0.8301821713362141; NL: 0.8301821713362141; NL+AG: 0.9775911474238732; NL+QF: 0.8301821713362141; rels: [movie]; projs: [director_0.name]; preds: [cast_0.role = "Weapons",company_0.name = "Nuclear"]; havings: []; superlative: []; blanks: 0
TOT: 0.8301821713362141; NL: 0.8301821713362141; NL+AG: 0.9775911474238732; NL+QF: 0.8301821713362141; rels: [movie]; projs: [director_0.name]; preds: [cast_0.role = "Weapons",keyword_0.keyword = "nuclear"]; havings: []; superlative: []; blanks: 0
TOT: 0.8301821713362141; NL: 0.8301821713362141; NL+AG: 0.9775911474238732; NL+QF: 0.8301821713362141; rels: [movie]; projs: [director_0.name]; preds: [keyword_0.keyword = "weapon",movie_0.title = "Nuclear"]; havings: []; superlative: []; blanks: 0
TOT: 0.8301821713362141; NL: 0.8301821713362141; NL+AG: 0.9775911474238732; NL+QF: 0.8301821713362141; rels: [movie]; projs: [director_0.name]; preds: [keyword_0.keyword = "weapon",company_0.name = "Nuclear"]; havings: []; superlative: []; blanks: 0
TOT: 0.8301821713362141; NL: 0.8301821713362141; NL+AG: 0.9775911474238732; NL+QF: 0.8301821713362141; rels: [movie]; projs: [director_0.name]; preds: [keyword_0.keyword = "weapon",keyword_0.keyword = "nuclear"]; havings: []; superlative: []; blanks: 0

===========
RESULTS
===========
TOT: 0.8368278053317484; TR: 0.8979007600118484; QF: 0.0; select director_0.name from directed_by as directed_by_0, director as director_0, movie as movie_0 where movie_0.title = "Nuclear" and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid
TOT: 0.8202353794363157; TR: 0.8979007600118484; QF: 0.0; select director_0.name from company as company_0, copyright as copyright_0, directed_by as directed_by_0, director as director_0, movie as movie_0 where company_0.name = "Nuclear" and company_0.id = copyright_0.cid and copyright_0.msid = movie_0.mid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid
TOT: 0.8202353794363157; TR: 0.8979007600118484; QF: 0.0; select director_0.name from directed_by as directed_by_0, director as director_0, keyword as keyword_0, movie as movie_0, tags as tags_0 where keyword_0.keyword = "nuclear" and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and keyword_0.id = tags_0.kid and movie_0.mid = tags_0.msid
TOT: 0.8114061163187476; TR: 0.8979007600118484; QF: 0.0; select director_0.name from directed_by as directed_by_0, director as director_0, keyword as keyword_0, movie as movie_0, tags as tags_0, tags as tags_1, tv_series as tv_series_0 where movie_0.title = "Nuclear" and directed_by_0.did = director_0.did and directed_by_0.msid = tv_series_0.sid and keyword_0.id = tags_0.kid and keyword_0.id = tags_1.kid and movie_0.mid = tags_0.msid and tags_1.msid = tv_series_0.sid
TOT: 0.8114061163187476; TR: 0.8979007600118484; QF: 0.0; select director_0.name from actor as actor_0, cast as cast_0, cast as cast_1, directed_by as directed_by_0, director as director_0, movie as movie_0, tv_series as tv_series_0 where movie_0.title = "Nuclear" and actor_0.aid = cast_0.aid and actor_0.aid = cast_1.aid and cast_0.msid = movie_0.mid and cast_1.msid = tv_series_0.sid and directed_by_0.did = director_0.did and directed_by_0.msid = tv_series_0.sid
TOT: 0.8114061163187476; TR: 0.8979007600118484; QF: 0.0; select director_0.name from directed_by as directed_by_0, director as director_0, movie as movie_0, tv_series as tv_series_0, writer as writer_0, written_by as written_by_0, written_by as written_by_1 where movie_0.title = "Nuclear" and directed_by_0.did = director_0.did and directed_by_0.msid = tv_series_0.sid and movie_0.mid = written_by_0.msid and tv_series_0.sid = written_by_1.msid and writer_0.wid = written_by_0.wid and writer_0.wid = written_by_1.wid
TOT: 0.8114061163187476; TR: 0.8979007600118484; QF: 0.0; select director_0.name from directed_by as directed_by_0, director as director_0, made_by as made_by_0, made_by as made_by_1, movie as movie_0, producer as producer_0, tv_series as tv_series_0 where movie_0.title = "Nuclear" and directed_by_0.did = director_0.did and directed_by_0.msid = tv_series_0.sid and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid and made_by_1.msid = tv_series_0.sid and made_by_1.pid = producer_0.pid
TOT: 0.8114061163187476; TR: 0.8979007600118484; QF: 0.0; select director_0.name from classification as classification_0, classification as classification_1, directed_by as directed_by_0, director as director_0, genre as genre_0, movie as movie_0, tv_series as tv_series_0 where movie_0.title = "Nuclear" and classification_0.gid = genre_0.gid and classification_0.msid = movie_0.mid and classification_1.gid = genre_0.gid and classification_1.msid = tv_series_0.sid and directed_by_0.did = director_0.did and directed_by_0.msid = tv_series_0.sid
TOT: 0.8114061163187476; TR: 0.8979007600118484; QF: 0.0; select director_0.name from company as company_0, copyright as copyright_0, copyright as copyright_1, directed_by as directed_by_0, director as director_0, movie as movie_0, tv_series as tv_series_0 where movie_0.title = "Nuclear" and company_0.id = copyright_0.cid and company_0.id = copyright_1.cid and copyright_0.msid = movie_0.mid and copyright_1.msid = tv_series_0.sid and directed_by_0.did = director_0.did and directed_by_0.msid = tv_series_0.sid
TOT: 0.7837702986777433; TR: 0.8470827043267568; QF: 0.0; select director_0.name from cast as cast_0, directed_by as directed_by_0, director as director_0, movie as movie_0 where cast_0.role = "Nuclear dealer" and cast_0.msid = movie_0.mid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid


00:35  INFO: ================
00:35  INFO: QUERY 50: Find the producers of all movies in which "Kate Winslet" is an actor
00:35  INFO: ================
00:36  INFO: ================
00:36  INFO: QUERY 7: In what year was "Benedict Cumberbatch" born
00:36  INFO: ================
00:37  INFO: ================
00:37  INFO: QUERY 16: How much was the budget of "Finding Nemo"
00:37  INFO: ================
00:38  INFO: ================
00:38  INFO: QUERY 1: What year was "Ellen Page" born?
00:38  INFO: ================
00:39  INFO: ================
00:39  INFO: QUERY 12: In what city was "Kevin Spacey" born?
00:39  INFO: ================
00:40  INFO: ================
00:40  INFO: QUERY 33: Find all movies that were produced by Netflix
00:40  INFO: ================
187. ROOT: ROOT; NA; ; (0) 
188. Find: CMT; NA; ; (0) 
189. movies: NT; NA; all; (0) movie.title(1.0):| movie(1.0):| cast.role(0.95):Movie; Movie F; Movie AD; | company.name(0.95):Movies; Movie; Movie Movie; | tv_series.title(0.84):Movies, Movies, Movi; Movie Mob; Moon Movies; | keyword.keyword(0.83):movie-in-movie; movies-about-movies; b-movie; | actor.name(0.76):| 
191. produced: NT; NA; ; (0) made_by(0.74):| directed_by(0.69):| producer.name(0.68):| producer(0.68):| cast.role(0.63):| cast(0.63):| written_by(0.63):| 
194. Netflix: VTTEXT; NA; ; (0) company.name(1.0):Netflix; Netflix; Netflix; | keyword.keyword(1.0):netflix; netflix-series; netflix-production; | tv_series.title(0.78):| tv_series(0.78):| cast.role(0.77):Netflix guy; | movie.title(0.74):| movie(0.74):| 
Find, VB
all, DT
movies, NNS
that, WDT
were, VBD
produced, VBN
by, IN
Netflix, NNP
root(ROOT-0, Find-1)
det(movies-3, all-2)
dobj(Find-1, movies-3)
nsubjpass(produced-6, that-4)
auxpass(produced-6, were-5)
acl:relcl(movies-3, produced-6)
case(Netflix-8, by-7)
nmod(produced-6, Netflix-8)

PARSE TREE:(187) ROOT ROOT
    (188) Find CMT
        (189) movies NT
            (191) produced NT
                (194) Netflix VTTEXT


===========
TRANSLATIONS
===========
TOT: 0.9055419360254962; NL: 0.9055419360254962; NL+AG: 0.9628121638266046; NL+QF: 0.9055419360254962; rels: [made_by]; projs: [movie_0.title]; preds: [company_0.name = "Netflix"]; havings: []; superlative: []; blanks: 0
TOT: 0.9055419360254962; NL: 0.9055419360254962; NL+AG: 0.9628121638266046; NL+QF: 0.9055419360254962; rels: [made_by]; projs: [movie_0.title]; preds: [keyword_0.keyword = "netflix"]; havings: []; superlative: []; blanks: 0
TOT: 0.8852322584043497; NL: 0.8852322584043497; NL+AG: 0.9628121638266046; NL+QF: 0.8852322584043497; rels: [directed_by]; projs: [movie_0.title]; preds: [company_0.name = "Netflix"]; havings: []; superlative: []; blanks: 0
TOT: 0.8852322584043497; NL: 0.8852322584043497; NL+AG: 0.9628121638266046; NL+QF: 0.8852322584043497; rels: [directed_by]; projs: [movie_0.title]; preds: [keyword_0.keyword = "netflix"]; havings: []; superlative: []; blanks: 0
TOT: 0.8783733725393061; NL: 0.8783733725393061; NL+AG: 0.9628121638266046; NL+QF: 0.8783733725393061; rels: [producer]; projs: [movie_0.title]; preds: [company_0.name = "Netflix"]; havings: []; superlative: []; blanks: 0
TOT: 0.8783733725393061; NL: 0.8783733725393061; NL+AG: 0.9628121638266046; NL+QF: 0.8783733725393061; rels: [producer]; projs: [movie_0.title]; preds: [keyword_0.keyword = "netflix"]; havings: []; superlative: []; blanks: 0
TOT: 0.8662391053409028; NL: 0.8662391053409028; NL+AG: 0.9628121638266046; NL+QF: 0.8662391053409028; rels: []; projs: [movie_0.title]; preds: [company_0.name = "Netflix"]; havings: []; superlative: []; blanks: 1
TOT: 0.8662391053409028; NL: 0.8662391053409028; NL+AG: 0.9628121638266046; NL+QF: 0.8662391053409028; rels: []; projs: [movie_0.title]; preds: [keyword_0.keyword = "netflix"]; havings: []; superlative: []; blanks: 1
TOT: 0.8352193753498772; NL: 0.8352193753498772; NL+AG: 0.9186092792989894; NL+QF: 0.8352193753498772; rels: [made_by,tv_series]; projs: [movie_0.title]; preds: []; havings: []; superlative: []; blanks: 0
TOT: 0.8316369478681359; NL: 0.8316369478681359; NL+AG: 0.9391833540180654; NL+QF: 0.8316369478681359; rels: [made_by]; projs: [movie_0.title]; preds: [cast_0.role = "Netflix guy"]; havings: []; superlative: []; blanks: 0
TOT: 0.8271946403307422; NL: 0.8271946403307422; NL+AG: 0.9394249139348947; NL+QF: 0.8271946403307422; rels: [made_by]; projs: [actor_0.name]; preds: [company_0.name = "Netflix"]; havings: []; superlative: []; blanks: 0
TOT: 0.8271946403307422; NL: 0.8271946403307422; NL+AG: 0.9394249139348947; NL+QF: 0.8271946403307422; rels: [made_by]; projs: [actor_0.name]; preds: [keyword_0.keyword = "netflix"]; havings: []; superlative: []; blanks: 0

===========
RESULTS
===========
TOT: 0.8179011159303482; TR: 0.9055419360254962; QF: 0.0; select movie_0.title from keyword as keyword_0, made_by as made_by_0, made_by as made_by_1, movie as movie_0, producer as producer_0, tags as tags_0, tv_series as tv_series_0 where keyword_0.keyword = "netflix" and keyword_0.id = tags_0.kid and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid and made_by_1.msid = tv_series_0.sid and made_by_1.pid = producer_0.pid and tags_0.msid = tv_series_0.sid
TOT: 0.8179011159303482; TR: 0.9055419360254962; QF: 0.0; select movie_0.title from company as company_0, copyright as copyright_0, made_by as made_by_0, made_by as made_by_1, movie as movie_0, producer as producer_0, tv_series as tv_series_0 where company_0.name = "Netflix" and company_0.id = copyright_0.cid and copyright_0.msid = tv_series_0.sid and made_by_0.msid = tv_series_0.sid and made_by_0.pid = producer_0.pid and made_by_1.msid = movie_0.mid and made_by_1.pid = producer_0.pid
TOT: 0.8099153988614446; TR: 0.8662391053409028; QF: 0.0; select movie_0.title from keyword as keyword_0, movie as movie_0, tags as tags_0 where keyword_0.keyword = "netflix" and keyword_0.id = tags_0.kid and movie_0.mid = tags_0.msid
TOT: 0.8099153988614446; TR: 0.8662391053409028; QF: 0.0; select movie_0.title from company as company_0, copyright as copyright_0, movie as movie_0 where company_0.name = "Netflix" and company_0.id = copyright_0.cid and copyright_0.msid = movie_0.mid
TOT: 0.8006378899523737; TR: 0.8852322584043497; QF: 0.0; select movie_0.title from company as company_0, copyright as copyright_0, directed_by as directed_by_0, directed_by as directed_by_1, director as director_0, movie as movie_0, tv_series as tv_series_0 where company_0.name = "Netflix" and company_0.id = copyright_0.cid and copyright_0.msid = tv_series_0.sid and directed_by_0.did = director_0.did and directed_by_0.msid = tv_series_0.sid and directed_by_1.did = director_0.did and directed_by_1.msid = movie_0.mid
TOT: 0.8006378899523737; TR: 0.8852322584043497; QF: 0.0; select movie_0.title from directed_by as directed_by_0, directed_by as directed_by_1, director as director_0, keyword as keyword_0, movie as movie_0, tags as tags_0, tv_series as tv_series_0 where keyword_0.keyword = "netflix" and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and directed_by_1.did = director_0.did and directed_by_1.msid = tv_series_0.sid and keyword_0.id = tags_0.kid and tags_0.msid = tv_series_0.sid
TOT: 0.7844937098484438; TR: 0.8662391053409028; QF: 0.0; select movie_0.title from actor as actor_0, cast as cast_0, cast as cast_1, company as company_0, copyright as copyright_0, movie as movie_0, tv_series as tv_series_0 where company_0.name = "Netflix" and actor_0.aid = cast_0.aid and actor_0.aid = cast_1.aid and cast_0.msid = tv_series_0.sid and cast_1.msid = movie_0.mid and company_0.id = copyright_0.cid and copyright_0.msid = tv_series_0.sid
TOT: 0.7844937098484438; TR: 0.8662391053409028; QF: 0.0; select movie_0.title from company as company_0, copyright as copyright_0, movie as movie_0, tv_series as tv_series_0, writer as writer_0, written_by as written_by_0, written_by as written_by_1 where company_0.name = "Netflix" and company_0.id = copyright_0.cid and copyright_0.msid = tv_series_0.sid and movie_0.mid = written_by_1.msid and tv_series_0.sid = written_by_0.msid and writer_0.wid = written_by_0.wid and writer_0.wid = written_by_1.wid
TOT: 0.7844937098484438; TR: 0.8662391053409028; QF: 0.0; select movie_0.title from company as company_0, copyright as copyright_0, keyword as keyword_0, movie as movie_0, tags as tags_0, tags as tags_1, tv_series as tv_series_0 where company_0.name = "Netflix" and company_0.id = copyright_0.cid and copyright_0.msid = tv_series_0.sid and keyword_0.id = tags_0.kid and keyword_0.id = tags_1.kid and movie_0.mid = tags_1.msid and tags_0.msid = tv_series_0.sid
TOT: 0.7844937098484438; TR: 0.8662391053409028; QF: 0.0; select movie_0.title from classification as classification_0, classification as classification_1, genre as genre_0, keyword as keyword_0, movie as movie_0, tags as tags_0, tv_series as tv_series_0 where keyword_0.keyword = "netflix" and classification_0.gid = genre_0.gid and classification_0.msid = movie_0.mid and classification_1.gid = genre_0.gid and classification_1.msid = tv_series_0.sid and keyword_0.id = tags_0.kid and tags_0.msid = tv_series_0.sid


00:41  INFO: ================
00:41  INFO: QUERY 41: Find all movies directed by "Woody Allen" and featuring "Scarlett Johansson"
00:41  INFO: ================
197. ROOT: ROOT; NA; ; (0) 
198. Find: CMT; NA; ; (0) 
199. directed: NT; NA; ; (0) directed_by(1.0):| director.name(0.72):| director(0.72):| written_by(0.68):| cast.role(0.67):| cast(0.67):| made_by(0.67):| 
200. movies: NT; NA; all; (0) movie.title(1.0):| movie(1.0):| cast.role(0.95):Movie; Movie F; Movie AD; | company.name(0.95):Movies; Movie; Movie Movie; | tv_series.title(0.84):Movies, Movies, Movi; Movie Mob; Moon Movies; | keyword.keyword(0.83):movie-in-movie; movies-about-movies; b-movie; | actor.name(0.76):| 
202. Woody Allen: VTTEXT; NA; ; (0) director.name(1.0):Woody Allen; Woody Allen; Moody Allen; | actor.name(1.0):Woody Allen; Woody Allen; Jody Allen; | producer.name(1.0):Woody Allen; Woody Allen; Moody Allen; | writer.name(1.0):Woody Allen; Woody Allen; Moody Allen; | cast.role(0.85):Woody Allen Jr.; Woody Allen Jr.; Young Woody Allen; | movie.title(0.82):F.U. Woody Allen; F.U. Woody Allen; Woody Before Allen; | tv_series.title(0.73):The Woody Allen Show; The Woody Allen Show; Dave Allen; | 
205. featuring: NT; NA; ; (0) tv_series.title(0.69):| tv_series(0.69):| movie.release_year(0.64):| tv_series.release_year(0.64):| made_by(0.64):| movie.title_aka(0.62):| tv_series.title_aka(0.62):| 
206. Scarlett Johansson: VTTEXT; NA; ; (0) director.name(1.0):Scarlett Johansson; Scarlett Johansson; Scarlett Johanssen; | actor.name(1.0):Scarlett Johansson; Scarlett Johansson; Scarlett Johanssen; | producer.name(1.0):Scarlett Johansson; Scarlett Johansson; Scarlett Johanssen; | writer.name(1.0):Scarlett Johansson; Scarlett Johansson; Scarlett Johanssen; | cast.role(0.89):Scarlett Johansonist; Scarlett Johansonist; Scarlett Johansen; | movie.title(0.69):Scarlett Ohara; Scarlett Ohara; Scarlett; | tv_series.title(0.64):Scarlett; Scarlett; Scarlett; | 
Find, VB
all, DT
movies, NNS
directed, VBN
by, IN
Woody Allen, NNP
and, CC
featuring, VBG
Scarlett Johansson, NNP
root(ROOT-0, Find-1)
det(movies-3, all-2)
nsubj(directed-4, movies-3)
ccomp(Find-1, directed-4)
case(Woody Allen-6, by-5)
nmod(directed-4, Woody Allen-6)
cc(directed-4, and-7)
conj(directed-4, featuring-8)
dobj(featuring-8, Scarlett Johansson-9)

PARSE TREE:(197) ROOT ROOT
    (198) Find CMT
        (200) movies NT
            (199) directed NT
                (202) Woody Allen VTTEXT
        (205) featuring NT
            (206) Scarlett Johansson VTTEXT


===========
TRANSLATIONS
===========
TOT: 0.9174505626104981; NL: 0.9174505626104981; NL+AG: 0.9718750876813372; NL+QF: 0.9174505626104981; rels: [directed_by]; projs: [movie_0.title]; preds: [director_0.name = "Woody Allen",director_0.name = "Scarlett Johansson"]; havings: []; superlative: []; blanks: 1
TOT: 0.9174505626104981; NL: 0.9174505626104981; NL+AG: 0.9718750876813372; NL+QF: 0.9174505626104981; rels: [directed_by]; projs: [movie_0.title]; preds: [director_0.name = "Woody Allen",actor_0.name = "Scarlett Johansson"]; havings: []; superlative: []; blanks: 1
TOT: 0.9174505626104981; NL: 0.9174505626104981; NL+AG: 0.9718750876813372; NL+QF: 0.9174505626104981; rels: [directed_by]; projs: [movie_0.title]; preds: [director_0.name = "Woody Allen",producer_0.name = "Scarlett Johansson"]; havings: []; superlative: []; blanks: 1
TOT: 0.9174505626104981; NL: 0.9174505626104981; NL+AG: 0.9718750876813372; NL+QF: 0.9174505626104981; rels: [directed_by]; projs: [movie_0.title]; preds: [director_0.name = "Woody Allen",writer_0.name = "Scarlett Johansson"]; havings: []; superlative: []; blanks: 1
TOT: 0.9174505626104981; NL: 0.9174505626104981; NL+AG: 0.9718750876813372; NL+QF: 0.9174505626104981; rels: [directed_by]; projs: [movie_0.title]; preds: [actor_0.name = "Woody Allen",director_0.name = "Scarlett Johansson"]; havings: []; superlative: []; blanks: 1
TOT: 0.9174505626104981; NL: 0.9174505626104981; NL+AG: 0.9718750876813372; NL+QF: 0.9174505626104981; rels: [directed_by]; projs: [movie_0.title]; preds: [actor_0.name = "Woody Allen",actor_0.name = "Scarlett Johansson"]; havings: []; superlative: []; blanks: 1
TOT: 0.9174505626104981; NL: 0.9174505626104981; NL+AG: 0.9718750876813372; NL+QF: 0.9174505626104981; rels: [directed_by]; projs: [movie_0.title]; preds: [actor_0.name = "Woody Allen",producer_0.name = "Scarlett Johansson"]; havings: []; superlative: []; blanks: 1
TOT: 0.9174505626104981; NL: 0.9174505626104981; NL+AG: 0.9718750876813372; NL+QF: 0.9174505626104981; rels: [directed_by]; projs: [movie_0.title]; preds: [actor_0.name = "Woody Allen",writer_0.name = "Scarlett Johansson"]; havings: []; superlative: []; blanks: 1
TOT: 0.9174505626104981; NL: 0.9174505626104981; NL+AG: 0.9718750876813372; NL+QF: 0.9174505626104981; rels: [directed_by]; projs: [movie_0.title]; preds: [producer_0.name = "Woody Allen",director_0.name = "Scarlett Johansson"]; havings: []; superlative: []; blanks: 1
TOT: 0.9174505626104981; NL: 0.9174505626104981; NL+AG: 0.9718750876813372; NL+QF: 0.9174505626104981; rels: [directed_by]; projs: [movie_0.title]; preds: [producer_0.name = "Woody Allen",actor_0.name = "Scarlett Johansson"]; havings: []; superlative: []; blanks: 1
TOT: 0.9174505626104981; NL: 0.9174505626104981; NL+AG: 0.9718750876813372; NL+QF: 0.9174505626104981; rels: [directed_by]; projs: [movie_0.title]; preds: [producer_0.name = "Woody Allen",producer_0.name = "Scarlett Johansson"]; havings: []; superlative: []; blanks: 1
TOT: 0.9174505626104981; NL: 0.9174505626104981; NL+AG: 0.9718750876813372; NL+QF: 0.9174505626104981; rels: [directed_by]; projs: [movie_0.title]; preds: [producer_0.name = "Woody Allen",writer_0.name = "Scarlett Johansson"]; havings: []; superlative: []; blanks: 1
TOT: 0.9174505626104981; NL: 0.9174505626104981; NL+AG: 0.9718750876813372; NL+QF: 0.9174505626104981; rels: [directed_by]; projs: [movie_0.title]; preds: [writer_0.name = "Woody Allen",director_0.name = "Scarlett Johansson"]; havings: []; superlative: []; blanks: 1
TOT: 0.9174505626104981; NL: 0.9174505626104981; NL+AG: 0.9718750876813372; NL+QF: 0.9174505626104981; rels: [directed_by]; projs: [movie_0.title]; preds: [writer_0.name = "Woody Allen",actor_0.name = "Scarlett Johansson"]; havings: []; superlative: []; blanks: 1
TOT: 0.9174505626104981; NL: 0.9174505626104981; NL+AG: 0.9718750876813372; NL+QF: 0.9174505626104981; rels: [directed_by]; projs: [movie_0.title]; preds: [writer_0.name = "Woody Allen",producer_0.name = "Scarlett Johansson"]; havings: []; superlative: []; blanks: 1
TOT: 0.9174505626104981; NL: 0.9174505626104981; NL+AG: 0.9718750876813372; NL+QF: 0.9174505626104981; rels: [directed_by]; projs: [movie_0.title]; preds: [writer_0.name = "Woody Allen",writer_0.name = "Scarlett Johansson"]; havings: []; superlative: []; blanks: 1

===========
RESULTS
===========
TOT: 0.8368527116451681; TR: 0.9174505626104981; QF: 0.0; select movie_0.title from directed_by as directed_by_0, director as director_0, made_by as made_by_0, movie as movie_0, producer as producer_0 where director_0.name = "Woody Allen" and producer_0.name = "Scarlett Johansson" and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid
TOT: 0.8368527116451681; TR: 0.9174505626104981; QF: 0.0; select movie_0.title from directed_by as directed_by_0, director as director_0, made_by as made_by_0, movie as movie_0, producer as producer_0 where director_0.name = "Scarlett Johansson" and producer_0.name = "Woody Allen" and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid
TOT: 0.8368527116451681; TR: 0.9174505626104981; QF: 0.0; select movie_0.title from actor as actor_0, cast as cast_0, directed_by as directed_by_0, director as director_0, movie as movie_0 where actor_0.name = "Scarlett Johansson" and director_0.name = "Woody Allen" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid
TOT: 0.8368527116451681; TR: 0.9174505626104981; QF: 0.0; select movie_0.title from actor as actor_0, cast as cast_0, directed_by as directed_by_0, director as director_0, movie as movie_0 where actor_0.name = "Woody Allen" and director_0.name = "Scarlett Johansson" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid
TOT: 0.8368527116451681; TR: 0.9174505626104981; QF: 0.0; select movie_0.title from directed_by as directed_by_0, directed_by as directed_by_1, director as director_0, director as director_1, movie as movie_0 where director_0.name = "Woody Allen" and director_1.name = "Scarlett Johansson" and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and directed_by_1.did = director_1.did and directed_by_1.msid = movie_0.mid
TOT: 0.8368527116451681; TR: 0.9174505626104981; QF: 0.0; select movie_0.title from directed_by as directed_by_0, director as director_0, movie as movie_0, writer as writer_0, written_by as written_by_0 where director_0.name = "Woody Allen" and writer_0.name = "Scarlett Johansson" and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and movie_0.mid = written_by_0.msid and writer_0.wid = written_by_0.wid
TOT: 0.8368527116451681; TR: 0.9174505626104981; QF: 0.0; select movie_0.title from directed_by as directed_by_0, director as director_0, movie as movie_0, writer as writer_0, written_by as written_by_0 where director_0.name = "Scarlett Johansson" and writer_0.name = "Woody Allen" and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and movie_0.mid = written_by_0.msid and writer_0.wid = written_by_0.wid
TOT: 0.8280234485275999; TR: 0.9174505626104981; QF: 0.0; select movie_0.title from actor as actor_0, cast as cast_0, cast as cast_1, directed_by as directed_by_0, director as director_0, movie as movie_0, tv_series as tv_series_0 where actor_0.name = "Scarlett Johansson" and director_0.name = "Woody Allen" and actor_0.aid = cast_0.aid and actor_0.aid = cast_1.aid and cast_0.msid = movie_0.mid and cast_1.msid = tv_series_0.sid and directed_by_0.did = director_0.did and directed_by_0.msid = tv_series_0.sid
TOT: 0.8280234485275999; TR: 0.9174505626104981; QF: 0.0; select movie_0.title from actor as actor_0, cast as cast_0, cast as cast_1, directed_by as directed_by_0, director as director_0, movie as movie_0, tv_series as tv_series_0 where actor_0.name = "Woody Allen" and director_0.name = "Scarlett Johansson" and actor_0.aid = cast_0.aid and actor_0.aid = cast_1.aid and cast_0.msid = movie_0.mid and cast_1.msid = tv_series_0.sid and directed_by_0.did = director_0.did and directed_by_0.msid = tv_series_0.sid
TOT: 0.8280234485275999; TR: 0.9174505626104981; QF: 0.0; select movie_0.title from directed_by as directed_by_0, director as director_0, movie as movie_0, tv_series as tv_series_0, writer as writer_0, written_by as written_by_0, written_by as written_by_1 where director_0.name = "Woody Allen" and writer_0.name = "Scarlett Johansson" and directed_by_0.did = director_0.did and directed_by_0.msid = tv_series_0.sid and movie_0.mid = written_by_0.msid and tv_series_0.sid = written_by_1.msid and writer_0.wid = written_by_0.wid and writer_0.wid = written_by_1.wid


00:43  INFO: ================
00:43  INFO: QUERY 55: Find all movies featuring "Kevin Spacey"
00:43  INFO: ================
208. ROOT: ROOT; NA; ; (0) 
209. Find: CMT; NA; ; (0) 
210. featuring: NT; NA; ; (0) tv_series.title(0.69):| tv_series(0.69):| movie.release_year(0.64):| tv_series.release_year(0.64):| made_by(0.64):| movie.title_aka(0.62):| tv_series.title_aka(0.62):| 
211. movies: NT; NA; all; (0) movie.title(1.0):| movie(1.0):| cast.role(0.95):Movie; Movie F; Movie AD; | company.name(0.95):Movies; Movie; Movie Movie; | tv_series.title(0.84):Movies, Movies, Movi; Movie Mob; Moon Movies; | keyword.keyword(0.83):movie-in-movie; movies-about-movies; b-movie; | actor.name(0.76):| 
213. Kevin Spacey: VTTEXT; NA; ; (0) director.name(1.0):Kevin Spacey; Kevin Spacey; Kevin Spacey Fowler; | actor.name(1.0):Kevin Spacey; Kevin Spacey Fowler; John Spacey; | producer.name(1.0):Kevin Spacey; Kevin Spacey; Kevin Spacey Fowler; | writer.name(1.0):Kevin Spacey; Kevin Spacey; Kevin Pacey; | cast.role(0.86):Kid Kevin Spacey; Kid Kevin Spacey; Kevin Spatz; | company.name(0.71):Kevin Spacey Foundat; Kevin Spacey Foundat; Kevin Spencer; | tv_series.title(0.7):Kevin Spencer; Kevin Spencer; Kevin Seal, Sporting; | 
Find, VB
all, DT
movies, NNS
featuring, VBG
Kevin Spacey, NNP
root(ROOT-0, Find-1)
det(movies-3, all-2)
nsubj(featuring-4, movies-3)
dep(Find-1, featuring-4)
dobj(featuring-4, Kevin Spacey-5)

PARSE TREE:(208) ROOT ROOT
    (209) Find CMT
        (211) movies NT
            (210) featuring NT
                (213) Kevin Spacey VTTEXT


===========
TRANSLATIONS
===========
TOT: 0.8662391053409028; NL: 0.8662391053409028; NL+AG: 0.9628121638266046; NL+QF: 0.8662391053409028; rels: []; projs: [movie_0.title]; preds: [director_0.name = "Kevin Spacey"]; havings: []; superlative: []; blanks: 1
TOT: 0.8662391053409028; NL: 0.8662391053409028; NL+AG: 0.9628121638266046; NL+QF: 0.8662391053409028; rels: []; projs: [movie_0.title]; preds: [actor_0.name = "Kevin Spacey"]; havings: []; superlative: []; blanks: 1
TOT: 0.8662391053409028; NL: 0.8662391053409028; NL+AG: 0.9628121638266046; NL+QF: 0.8662391053409028; rels: []; projs: [movie_0.title]; preds: [producer_0.name = "Kevin Spacey"]; havings: []; superlative: []; blanks: 1
TOT: 0.8662391053409028; NL: 0.8662391053409028; NL+AG: 0.9628121638266046; NL+QF: 0.8662391053409028; rels: []; projs: [movie_0.title]; preds: [writer_0.name = "Kevin Spacey"]; havings: []; superlative: []; blanks: 1
TOT: 0.8344522897223012; NL: 0.8344522897223012; NL+AG: 0.9889432485322897; NL+QF: 0.8344522897223012; rels: []; projs: [movie_0.title]; preds: [tv_series_0.title = "Kevin Spencer"]; havings: []; superlative: []; blanks: 0
TOT: 0.82915619758885; NL: 0.82915619758885; NL+AG: 0.9889432485322897; NL+QF: 0.82915619758885; rels: []; projs: [tv_series_0.title]; preds: [director_0.name = "Kevin Spacey"]; havings: []; superlative: []; blanks: 0
TOT: 0.82915619758885; NL: 0.82915619758885; NL+AG: 0.9889432485322897; NL+QF: 0.82915619758885; rels: []; projs: [tv_series_0.title]; preds: [actor_0.name = "Kevin Spacey"]; havings: []; superlative: []; blanks: 0
TOT: 0.82915619758885; NL: 0.82915619758885; NL+AG: 0.9889432485322897; NL+QF: 0.82915619758885; rels: []; projs: [tv_series_0.title]; preds: [producer_0.name = "Kevin Spacey"]; havings: []; superlative: []; blanks: 0
TOT: 0.82915619758885; NL: 0.82915619758885; NL+AG: 0.9889432485322897; NL+QF: 0.82915619758885; rels: []; projs: [tv_series_0.title]; preds: [writer_0.name = "Kevin Spacey"]; havings: []; superlative: []; blanks: 0
TOT: 0.82915619758885; NL: 0.82915619758885; NL+AG: 0.9889432485322897; NL+QF: 0.82915619758885; rels: []; projs: [tv_series_0.title]; preds: [director_0.name = "Kevin Spacey"]; havings: []; superlative: []; blanks: 0
TOT: 0.82915619758885; NL: 0.82915619758885; NL+AG: 0.9889432485322897; NL+QF: 0.82915619758885; rels: []; projs: [tv_series_0.title]; preds: [actor_0.name = "Kevin Spacey"]; havings: []; superlative: []; blanks: 0
TOT: 0.82915619758885; NL: 0.82915619758885; NL+AG: 0.9889432485322897; NL+QF: 0.82915619758885; rels: []; projs: [tv_series_0.title]; preds: [producer_0.name = "Kevin Spacey"]; havings: []; superlative: []; blanks: 0
TOT: 0.82915619758885; NL: 0.82915619758885; NL+AG: 0.9889432485322897; NL+QF: 0.82915619758885; rels: []; projs: [tv_series_0.title]; preds: [writer_0.name = "Kevin Spacey"]; havings: []; superlative: []; blanks: 0

===========
RESULTS
===========
TOT: 0.8099153988614446; TR: 0.8662391053409028; QF: 0.0; select movie_0.title from movie as movie_0, writer as writer_0, written_by as written_by_0 where writer_0.name = "Kevin Spacey" and movie_0.mid = written_by_0.msid and writer_0.wid = written_by_0.wid
TOT: 0.8099153988614446; TR: 0.8662391053409028; QF: 0.0; select movie_0.title from made_by as made_by_0, movie as movie_0, producer as producer_0 where producer_0.name = "Kevin Spacey" and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid
TOT: 0.8099153988614446; TR: 0.8662391053409028; QF: 0.0; select movie_0.title from actor as actor_0, cast as cast_0, movie as movie_0 where actor_0.name = "Kevin Spacey" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid
TOT: 0.8099153988614446; TR: 0.8662391053409028; QF: 0.0; select movie_0.title from directed_by as directed_by_0, director as director_0, movie as movie_0 where director_0.name = "Kevin Spacey" and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid
TOT: 0.7844937098484438; TR: 0.8662391053409028; QF: 0.0; select movie_0.title from classification as classification_0, classification as classification_1, genre as genre_0, made_by as made_by_0, movie as movie_0, producer as producer_0, tv_series as tv_series_0 where producer_0.name = "Kevin Spacey" and classification_0.gid = genre_0.gid and classification_0.msid = movie_0.mid and classification_1.gid = genre_0.gid and classification_1.msid = tv_series_0.sid and made_by_0.msid = tv_series_0.sid and made_by_0.pid = producer_0.pid
TOT: 0.7844937098484438; TR: 0.8662391053409028; QF: 0.0; select movie_0.title from actor as actor_0, cast as cast_0, classification as classification_0, classification as classification_1, genre as genre_0, movie as movie_0, tv_series as tv_series_0 where actor_0.name = "Kevin Spacey" and actor_0.aid = cast_0.aid and cast_0.msid = tv_series_0.sid and classification_0.gid = genre_0.gid and classification_0.msid = movie_0.mid and classification_1.gid = genre_0.gid and classification_1.msid = tv_series_0.sid
TOT: 0.7844937098484438; TR: 0.8662391053409028; QF: 0.0; select movie_0.title from directed_by as directed_by_0, director as director_0, keyword as keyword_0, movie as movie_0, tags as tags_0, tags as tags_1, tv_series as tv_series_0 where director_0.name = "Kevin Spacey" and directed_by_0.did = director_0.did and directed_by_0.msid = tv_series_0.sid and keyword_0.id = tags_0.kid and keyword_0.id = tags_1.kid and movie_0.mid = tags_0.msid and tags_1.msid = tv_series_0.sid
TOT: 0.7844937098484438; TR: 0.8662391053409028; QF: 0.0; select movie_0.title from company as company_0, copyright as copyright_0, copyright as copyright_1, movie as movie_0, tv_series as tv_series_0, writer as writer_0, written_by as written_by_0 where writer_0.name = "Kevin Spacey" and company_0.id = copyright_0.cid and company_0.id = copyright_1.cid and copyright_0.msid = movie_0.mid and copyright_1.msid = tv_series_0.sid and tv_series_0.sid = written_by_0.msid and writer_0.wid = written_by_0.wid
TOT: 0.7844937098484438; TR: 0.8662391053409028; QF: 0.0; select movie_0.title from classification as classification_0, classification as classification_1, genre as genre_0, movie as movie_0, tv_series as tv_series_0, writer as writer_0, written_by as written_by_0 where writer_0.name = "Kevin Spacey" and classification_0.gid = genre_0.gid and classification_0.msid = movie_0.mid and classification_1.gid = genre_0.gid and classification_1.msid = tv_series_0.sid and tv_series_0.sid = written_by_0.msid and writer_0.wid = written_by_0.wid
TOT: 0.7844937098484438; TR: 0.8662391053409028; QF: 0.0; select movie_0.title from keyword as keyword_0, made_by as made_by_0, movie as movie_0, producer as producer_0, tags as tags_0, tags as tags_1, tv_series as tv_series_0 where producer_0.name = "Kevin Spacey" and keyword_0.id = tags_0.kid and keyword_0.id = tags_1.kid and made_by_0.msid = tv_series_0.sid and made_by_0.pid = producer_0.pid and movie_0.mid = tags_0.msid and tags_1.msid = tv_series_0.sid


00:44  INFO: ================
00:44  INFO: QUERY 49: Find the directors of all movies featuring "Kate Winslet"
00:44  INFO: ================
00:46  INFO: ================
00:46  INFO: QUERY 104: What is the number of movies featuring "Brad Pitt"?
00:46  INFO: ================
225. ROOT: ROOT; NA; ; (0) 
226. What: CMT; NA; ; (0) 
228. number of: FT; count; ; (0) 
230. movies: NT; NA; ; (0) movie.title(1.0):| movie(1.0):| cast.role(0.95):Movie; Movie F; Movie AD; | company.name(0.95):Movies; Movie; Movie Movie; | tv_series.title(0.84):Movies, Movies, Movi; Movie Mob; Moon Movies; | keyword.keyword(0.83):movie-in-movie; movies-about-movies; b-movie; | actor.name(0.76):| 
232. featuring: NT; NA; ; (0) tv_series.title(0.69):| tv_series(0.69):| movie.release_year(0.64):| tv_series.release_year(0.64):| made_by(0.64):| movie.title_aka(0.62):| tv_series.title_aka(0.62):| 
233. Brad Pitt: VTTEXT; NA; ; (0) actor.name(1.0):Brad Pitt; Brad Pitt; bRad sPitt; | cast.role(1.0):Brad Pitt'; Brad Pitt'; Brad Pitt #1; | producer.name(1.0):Brad Pitt; Brad Pitt; Mad Pitt; | director.name(0.78):Brad Pruitt; Brad Pruitt; Brad Witty; | writer.name(0.78):Brad Pruitt; Brad Pruitt; Brad Witt; | movie.title(0.72):Brad Pitt Video Port; Brad Pitt Video Port; Brad; | actor.birth_city(0.61):Brad; Brad; Pitt Meadows; | 
What, WP
is, VBZ
the, DT
number, NN
of, IN
movies, NNS
featuring, VBG
Brad Pitt, NNP
root(ROOT-0, What-1)
cop(What-1, is-2)
det(number-4, the-3)
nsubj(What-1, number-4)
case(movies-6, of-5)
nmod(number-4, movies-6)
acl(movies-6, featuring-7)
dobj(featuring-7, Brad Pitt-8)

PARSE TREE:(225) ROOT ROOT
    (226) What CMT
        (228) number of FT
            (230) movies NT
                (232) featuring NT
                    (233) Brad Pitt VTTEXT


===========
TRANSLATIONS
===========
TOT: 0.8662391053409028; NL: 0.8662391053409028; NL+AG: 0.9623803610291506; NL+QF: 0.8662391053409028; rels: []; projs: [count(distinct(movie_0.title))]; preds: [actor_0.name = "Brad Pitt"]; havings: []; superlative: []; blanks: 1
TOT: 0.8662391053409028; NL: 0.8662391053409028; NL+AG: 0.9623803610291506; NL+QF: 0.8662391053409028; rels: []; projs: [count(distinct(movie_0.title))]; preds: [cast_0.role = "Brad Pitt'"]; havings: []; superlative: []; blanks: 1
TOT: 0.8662391053409028; NL: 0.8662391053409028; NL+AG: 0.9623803610291506; NL+QF: 0.8662391053409028; rels: []; projs: [count(distinct(movie_0.title))]; preds: [producer_0.name = "Brad Pitt"]; havings: []; superlative: []; blanks: 1
TOT: 0.7982804026719519; NL: 0.7982804026719519; NL+AG: 0.9336787348794631; NL+QF: 0.7982804026719519; rels: []; projs: [count(distinct(movie_0.title))]; preds: [director_0.name = "Brad Pruitt"]; havings: []; superlative: []; blanks: 1
TOT: 0.7982804026719519; NL: 0.7982804026719519; NL+AG: 0.9336787348794631; NL+QF: 0.7982804026719519; rels: []; projs: [count(distinct(movie_0.title))]; preds: [writer_0.name = "Brad Pruitt"]; havings: []; superlative: []; blanks: 1
TOT: 0.7912922821972069; NL: 0.7912922821972069; NL+AG: 0.9334884919988383; NL+QF: 0.7912922821972069; rels: []; projs: [count(distinct(actor_0.name))]; preds: [actor_0.name = "Brad Pitt"]; havings: []; superlative: []; blanks: 1
TOT: 0.7912922821972069; NL: 0.7912922821972069; NL+AG: 0.9334884919988383; NL+QF: 0.7912922821972069; rels: []; projs: [count(distinct(actor_0.name))]; preds: [cast_0.role = "Brad Pitt'"]; havings: []; superlative: []; blanks: 1
TOT: 0.7912922821972069; NL: 0.7912922821972069; NL+AG: 0.9334884919988383; NL+QF: 0.7912922821972069; rels: []; projs: [count(distinct(actor_0.name))]; preds: [producer_0.name = "Brad Pitt"]; havings: []; superlative: []; blanks: 1
TOT: 0.7783173787653892; NL: 0.7783173787653892; NL+AG: 0.9334884919988383; NL+QF: 0.7783173787653892; rels: []; projs: [count(distinct(tv_series_0.title))]; preds: [actor_0.name = "Brad Pitt"]; havings: []; superlative: []; blanks: 1
TOT: 0.7783173787653892; NL: 0.7783173787653892; NL+AG: 0.9334884919988383; NL+QF: 0.7783173787653892; rels: []; projs: [count(distinct(tv_series_0.title))]; preds: [cast_0.role = "Brad Pitt'"]; havings: []; superlative: []; blanks: 1
TOT: 0.7783173787653892; NL: 0.7783173787653892; NL+AG: 0.9334884919988383; NL+QF: 0.7783173787653892; rels: []; projs: [count(distinct(tv_series_0.title))]; preds: [producer_0.name = "Brad Pitt"]; havings: []; superlative: []; blanks: 1
TOT: 0.7783173787653892; NL: 0.7783173787653892; NL+AG: 0.9334884919988383; NL+QF: 0.7783173787653892; rels: []; projs: [count(distinct(tv_series_0.title))]; preds: [actor_0.name = "Brad Pitt"]; havings: []; superlative: []; blanks: 1
TOT: 0.7783173787653892; NL: 0.7783173787653892; NL+AG: 0.9334884919988383; NL+QF: 0.7783173787653892; rels: []; projs: [count(distinct(tv_series_0.title))]; preds: [cast_0.role = "Brad Pitt'"]; havings: []; superlative: []; blanks: 1
TOT: 0.7783173787653892; NL: 0.7783173787653892; NL+AG: 0.9334884919988383; NL+QF: 0.7783173787653892; rels: []; projs: [count(distinct(tv_series_0.title))]; preds: [producer_0.name = "Brad Pitt"]; havings: []; superlative: []; blanks: 1

===========
RESULTS
===========
TOT: 0.8264593541410521; TR: 0.8662391053409028; QF: 0.0; select count(distinct(movie_0.title)) from cast as cast_0, movie as movie_0 where cast_0.role = "Brad Pitt'" and cast_0.msid = movie_0.mid
TOT: 0.8099153988614446; TR: 0.8662391053409028; QF: 0.0; select count(distinct(movie_0.title)) from made_by as made_by_0, movie as movie_0, producer as producer_0 where producer_0.name = "Brad Pitt" and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid
TOT: 0.8099153988614446; TR: 0.8662391053409028; QF: 0.0; select count(distinct(movie_0.title)) from actor as actor_0, cast as cast_0, movie as movie_0 where actor_0.name = "Brad Pitt" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid
TOT: 0.7883548965739098; TR: 0.8662391053409028; QF: 0.0; select count(distinct(movie_0.title)) from cast as cast_0, keyword as keyword_0, movie as movie_0, tags as tags_0, tags as tags_1, tv_series as tv_series_0 where cast_0.role = "Brad Pitt'" and cast_0.msid = tv_series_0.sid and keyword_0.id = tags_0.kid and keyword_0.id = tags_1.kid and movie_0.mid = tags_0.msid and tags_1.msid = tv_series_0.sid
TOT: 0.7883548965739098; TR: 0.8662391053409028; QF: 0.0; select count(distinct(movie_0.title)) from cast as cast_0, company as company_0, copyright as copyright_0, copyright as copyright_1, movie as movie_0, tv_series as tv_series_0 where cast_0.role = "Brad Pitt'" and cast_0.msid = tv_series_0.sid and company_0.id = copyright_0.cid and company_0.id = copyright_1.cid and copyright_0.msid = movie_0.mid and copyright_1.msid = tv_series_0.sid
TOT: 0.7883548965739098; TR: 0.8662391053409028; QF: 0.0; select count(distinct(movie_0.title)) from cast as cast_0, directed_by as directed_by_0, directed_by as directed_by_1, director as director_0, movie as movie_0, tv_series as tv_series_0 where cast_0.role = "Brad Pitt'" and cast_0.msid = tv_series_0.sid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and directed_by_1.did = director_0.did and directed_by_1.msid = tv_series_0.sid
TOT: 0.7883548965739098; TR: 0.8662391053409028; QF: 0.0; select count(distinct(movie_0.title)) from cast as cast_0, made_by as made_by_0, made_by as made_by_1, movie as movie_0, producer as producer_0, tv_series as tv_series_0 where cast_0.role = "Brad Pitt'" and cast_0.msid = tv_series_0.sid and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid and made_by_1.msid = tv_series_0.sid and made_by_1.pid = producer_0.pid
TOT: 0.7883548965739098; TR: 0.8662391053409028; QF: 0.0; select count(distinct(movie_0.title)) from cast as cast_0, movie as movie_0, tv_series as tv_series_0, writer as writer_0, written_by as written_by_0, written_by as written_by_1 where cast_0.role = "Brad Pitt'" and cast_0.msid = tv_series_0.sid and movie_0.mid = written_by_0.msid and tv_series_0.sid = written_by_1.msid and writer_0.wid = written_by_0.wid and writer_0.wid = written_by_1.wid
TOT: 0.7883548965739098; TR: 0.8662391053409028; QF: 0.0; select count(distinct(movie_0.title)) from cast as cast_0, classification as classification_0, classification as classification_1, genre as genre_0, movie as movie_0, tv_series as tv_series_0 where cast_0.role = "Brad Pitt'" and cast_0.msid = tv_series_0.sid and classification_0.gid = genre_0.gid and classification_0.msid = movie_0.mid and classification_1.gid = genre_0.gid and classification_1.msid = tv_series_0.sid
TOT: 0.7844937098484438; TR: 0.8662391053409028; QF: 0.0; select count(distinct(movie_0.title)) from classification as classification_0, classification as classification_1, genre as genre_0, made_by as made_by_0, movie as movie_0, producer as producer_0, tv_series as tv_series_0 where producer_0.name = "Brad Pitt" and classification_0.gid = genre_0.gid and classification_0.msid = movie_0.mid and classification_1.gid = genre_0.gid and classification_1.msid = tv_series_0.sid and made_by_0.msid = tv_series_0.sid and made_by_0.pid = producer_0.pid


00:47  INFO: ================
00:47  INFO: QUERY 42: What are all the tv series created by "Shonda Rhimes"?
00:47  INFO: ================
00:48  INFO: ================
00:48  INFO: QUERY 113: Find the number of companies which worked with "Gabriele Ferzetti"
00:48  INFO: ================
00:49  INFO: ================
00:49  INFO: QUERY 28: Find all comedies produced in year 2015
00:49  INFO: ================
00:52  INFO: ================
00:52  INFO: QUERY 94: How many actors were born in "Los Angeles" after 2000?
00:52  INFO: ================
00:54  INFO: ================
00:54  INFO: QUERY 118: Find all movies featuring both "Matt Damon" and "Ben Affleck"
00:54  INFO: ================
277. ROOT: ROOT; NA; ; (0) 
278. Find: CMT; NA; ; (0) 
279. featuring: NT; NA; ; (0) tv_series.title(0.69):| tv_series(0.69):| movie.release_year(0.64):| tv_series.release_year(0.64):| made_by(0.64):| movie.title_aka(0.62):| tv_series.title_aka(0.62):| 
280. movies: NT; NA; all; (0) movie.title(1.0):| movie(1.0):| cast.role(0.95):Movie; Movie F; Movie AD; | company.name(0.95):Movies; Movie; Movie Movie; | tv_series.title(0.84):Movies, Movies, Movi; Movie Mob; Moon Movies; | keyword.keyword(0.83):movie-in-movie; movies-about-movies; b-movie; | actor.name(0.76):| 
282. Matt Damon: VTTEXT; NA; ; (0) director.name(1.0):Matt Damon; Matt Diamond; Matt Diamond; | actor.name(1.0):Matt Damon; Matt Damon; Matt Diamond; | producer.name(1.0):Matt Damon; Matt Damon; Matt Diamond; | writer.name(1.0):Matt Damon; Matt Damon; Matt Diamond; | movie.title(0.76):I'm Not Matt Damon; I'm Not Matt Damon; Meeting Matt Damon; | cast.role(0.74):Matt Stamon; Matt Damien; Matt Demond; | tv_series.title(0.67):Damon; The Damon Elliott Sh; Matt Houston; | 
285. Ben Affleck: VTTEXT; NA; ; (0) director.name(1.0):Ben Affleck; Ben Affleck; Affleck; | actor.name(1.0):Ben Affleck; Ben Affleck; Affleck; | producer.name(1.0):Ben Affleck; Ben Affleck; Affleck; | writer.name(1.0):Ben Affleck; Ben Affleck; Affleck; | cast.role(0.9):Ben Afflect; Ben Afflect; Ben Affleck Fan; | movie.title(0.59):Untitled Ben Affleck; Untitled Ben Affleck; Argo: Ben Affleck's ; | company.name(0.56):The Affleck/Middleto; Ben Fechler; Ben Fechler; | 
Find, VB
all, DT
movies, NNS
featuring, VBG
both, CC
Matt Damon, NNP
and, CC
Ben Affleck, NNP
root(ROOT-0, Find-1)
det(movies-3, all-2)
nsubj(featuring-4, movies-3)
dep(Find-1, featuring-4)
cc:preconj(Matt Damon-6, both-5)
dobj(featuring-4, Matt Damon-6)
cc(Matt Damon-6, and-7)
conj(Matt Damon-6, Ben Affleck-8)

PARSE TREE:(277) ROOT ROOT
    (278) Find CMT
        (280) movies NT
            (279) featuring NT
                (282) Matt Damon VTTEXT
                (285) Ben Affleck VTTEXT


===========
TRANSLATIONS
===========
TOT: 0.8979007600118484; NL: 0.8979007600118484; NL+AG: 0.9685548245020893; NL+QF: 0.8979007600118484; rels: []; projs: [movie_0.title]; preds: [director_0.name = "Matt Damon",director_0.name = "Ben Affleck"]; havings: []; superlative: []; blanks: 1
TOT: 0.8979007600118484; NL: 0.8979007600118484; NL+AG: 0.9685548245020893; NL+QF: 0.8979007600118484; rels: []; projs: [movie_0.title]; preds: [director_0.name = "Matt Damon",actor_0.name = "Ben Affleck"]; havings: []; superlative: []; blanks: 1
TOT: 0.8979007600118484; NL: 0.8979007600118484; NL+AG: 0.9685548245020893; NL+QF: 0.8979007600118484; rels: []; projs: [movie_0.title]; preds: [director_0.name = "Matt Damon",producer_0.name = "Ben Affleck"]; havings: []; superlative: []; blanks: 1
TOT: 0.8979007600118484; NL: 0.8979007600118484; NL+AG: 0.9685548245020893; NL+QF: 0.8979007600118484; rels: []; projs: [movie_0.title]; preds: [director_0.name = "Matt Damon",writer_0.name = "Ben Affleck"]; havings: []; superlative: []; blanks: 1
TOT: 0.8979007600118484; NL: 0.8979007600118484; NL+AG: 0.9685548245020893; NL+QF: 0.8979007600118484; rels: []; projs: [movie_0.title]; preds: [actor_0.name = "Matt Damon",director_0.name = "Ben Affleck"]; havings: []; superlative: []; blanks: 1
TOT: 0.8979007600118484; NL: 0.8979007600118484; NL+AG: 0.9685548245020893; NL+QF: 0.8979007600118484; rels: []; projs: [movie_0.title]; preds: [actor_0.name = "Matt Damon",actor_0.name = "Ben Affleck"]; havings: []; superlative: []; blanks: 1
TOT: 0.8979007600118484; NL: 0.8979007600118484; NL+AG: 0.9685548245020893; NL+QF: 0.8979007600118484; rels: []; projs: [movie_0.title]; preds: [actor_0.name = "Matt Damon",producer_0.name = "Ben Affleck"]; havings: []; superlative: []; blanks: 1
TOT: 0.8979007600118484; NL: 0.8979007600118484; NL+AG: 0.9685548245020893; NL+QF: 0.8979007600118484; rels: []; projs: [movie_0.title]; preds: [actor_0.name = "Matt Damon",writer_0.name = "Ben Affleck"]; havings: []; superlative: []; blanks: 1
TOT: 0.8979007600118484; NL: 0.8979007600118484; NL+AG: 0.9685548245020893; NL+QF: 0.8979007600118484; rels: []; projs: [movie_0.title]; preds: [producer_0.name = "Matt Damon",director_0.name = "Ben Affleck"]; havings: []; superlative: []; blanks: 1
TOT: 0.8979007600118484; NL: 0.8979007600118484; NL+AG: 0.9685548245020893; NL+QF: 0.8979007600118484; rels: []; projs: [movie_0.title]; preds: [producer_0.name = "Matt Damon",actor_0.name = "Ben Affleck"]; havings: []; superlative: []; blanks: 1
TOT: 0.8979007600118484; NL: 0.8979007600118484; NL+AG: 0.9685548245020893; NL+QF: 0.8979007600118484; rels: []; projs: [movie_0.title]; preds: [producer_0.name = "Matt Damon",producer_0.name = "Ben Affleck"]; havings: []; superlative: []; blanks: 1
TOT: 0.8979007600118484; NL: 0.8979007600118484; NL+AG: 0.9685548245020893; NL+QF: 0.8979007600118484; rels: []; projs: [movie_0.title]; preds: [producer_0.name = "Matt Damon",writer_0.name = "Ben Affleck"]; havings: []; superlative: []; blanks: 1
TOT: 0.8979007600118484; NL: 0.8979007600118484; NL+AG: 0.9685548245020893; NL+QF: 0.8979007600118484; rels: []; projs: [movie_0.title]; preds: [writer_0.name = "Matt Damon",director_0.name = "Ben Affleck"]; havings: []; superlative: []; blanks: 1
TOT: 0.8979007600118484; NL: 0.8979007600118484; NL+AG: 0.9685548245020893; NL+QF: 0.8979007600118484; rels: []; projs: [movie_0.title]; preds: [writer_0.name = "Matt Damon",actor_0.name = "Ben Affleck"]; havings: []; superlative: []; blanks: 1
TOT: 0.8979007600118484; NL: 0.8979007600118484; NL+AG: 0.9685548245020893; NL+QF: 0.8979007600118484; rels: []; projs: [movie_0.title]; preds: [writer_0.name = "Matt Damon",producer_0.name = "Ben Affleck"]; havings: []; superlative: []; blanks: 1
TOT: 0.8979007600118484; NL: 0.8979007600118484; NL+AG: 0.9685548245020893; NL+QF: 0.8979007600118484; rels: []; projs: [movie_0.title]; preds: [writer_0.name = "Matt Damon",writer_0.name = "Ben Affleck"]; havings: []; superlative: []; blanks: 1

===========
RESULTS
===========
TOT: 0.8202353794363157; TR: 0.8979007600118484; QF: 0.0; select movie_0.title from actor as actor_0, cast as cast_0, movie as movie_0, writer as writer_0, written_by as written_by_0 where actor_0.name = "Matt Damon" and writer_0.name = "Ben Affleck" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and movie_0.mid = written_by_0.msid and writer_0.wid = written_by_0.wid
TOT: 0.8202353794363157; TR: 0.8979007600118484; QF: 0.0; select movie_0.title from actor as actor_0, cast as cast_0, movie as movie_0, writer as writer_0, written_by as written_by_0 where actor_0.name = "Ben Affleck" and writer_0.name = "Matt Damon" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and movie_0.mid = written_by_0.msid and writer_0.wid = written_by_0.wid
TOT: 0.8202353794363157; TR: 0.8979007600118484; QF: 0.0; select movie_0.title from directed_by as directed_by_0, director as director_0, made_by as made_by_0, movie as movie_0, producer as producer_0 where director_0.name = "Matt Damon" and producer_0.name = "Ben Affleck" and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid
TOT: 0.8202353794363157; TR: 0.8979007600118484; QF: 0.0; select movie_0.title from directed_by as directed_by_0, director as director_0, made_by as made_by_0, movie as movie_0, producer as producer_0 where director_0.name = "Ben Affleck" and producer_0.name = "Matt Damon" and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid
TOT: 0.8202353794363157; TR: 0.8979007600118484; QF: 0.0; select movie_0.title from actor as actor_0, cast as cast_0, directed_by as directed_by_0, director as director_0, movie as movie_0 where actor_0.name = "Ben Affleck" and director_0.name = "Matt Damon" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid
TOT: 0.8202353794363157; TR: 0.8979007600118484; QF: 0.0; select movie_0.title from actor as actor_0, cast as cast_0, directed_by as directed_by_0, director as director_0, movie as movie_0 where actor_0.name = "Matt Damon" and director_0.name = "Ben Affleck" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid
TOT: 0.8202353794363157; TR: 0.8979007600118484; QF: 0.0; select movie_0.title from directed_by as directed_by_0, directed_by as directed_by_1, director as director_0, director as director_1, movie as movie_0 where director_0.name = "Matt Damon" and director_1.name = "Ben Affleck" and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and directed_by_1.did = director_1.did and directed_by_1.msid = movie_0.mid
TOT: 0.8202353794363157; TR: 0.8979007600118484; QF: 0.0; select movie_0.title from movie as movie_0, writer as writer_0, writer as writer_1, written_by as written_by_0, written_by as written_by_1 where writer_0.name = "Matt Damon" and writer_1.name = "Ben Affleck" and movie_0.mid = written_by_0.msid and movie_0.mid = written_by_1.msid and writer_0.wid = written_by_0.wid and writer_1.wid = written_by_1.wid
TOT: 0.8202353794363157; TR: 0.8979007600118484; QF: 0.0; select movie_0.title from made_by as made_by_0, movie as movie_0, producer as producer_0, writer as writer_0, written_by as written_by_0 where producer_0.name = "Matt Damon" and writer_0.name = "Ben Affleck" and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid and movie_0.mid = written_by_0.msid and writer_0.wid = written_by_0.wid
TOT: 0.8202353794363157; TR: 0.8979007600118484; QF: 0.0; select movie_0.title from made_by as made_by_0, movie as movie_0, producer as producer_0, writer as writer_0, written_by as written_by_0 where producer_0.name = "Ben Affleck" and writer_0.name = "Matt Damon" and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid and movie_0.mid = written_by_0.msid and writer_0.wid = written_by_0.wid


00:56  INFO: ================
00:56  INFO: QUERY 39: Which movies did "Alfred Hitchcock" direct?
00:56  INFO: ================
287. ROOT: ROOT; NA; ; (0) 
288. direct: NT; NA; ; (0) directed_by(1.0):| director.name(0.72):| director(0.72):| written_by(0.68):| cast.role(0.67):| cast(0.67):| made_by(0.67):| 
289. movies: NT; NA; ; (0) movie.title(1.0):| movie(1.0):| cast.role(0.95):Movie; Movie F; Movie AD; | company.name(0.95):Movies; Movie; Movie Movie; | tv_series.title(0.84):Movies, Movies, Movi; Movie Mob; Moon Movies; | keyword.keyword(0.83):movie-in-movie; movies-about-movies; b-movie; | actor.name(0.76):| 
292. Alfred Hitchcock: VTTEXT; NA; ; (0) director.name(1.0):Alfred Hitchcock; Alfred Hitchcock; Sir Alfred Hitchcock; | actor.name(1.0):Alfred Hitchcock; Alfred Hitchcock; Alfred Hitchcock; | producer.name(1.0):Alfred Hitchcock; Alfred Hitchcock; Sir Alfred Hitchcock; | writer.name(1.0):Alfred Hitchcock; Alfred Hitchcock; Sir Alfred Hitchcock; | movie.title(0.85):Alfred Hitchcock's G; Alfred Hitchcock's G; Alfred Hitchcock and; | tv_series.title(0.85):Ciclo Alfred Hitchco; Ciclo Alfred Hitchco; Alfred Hitchcock Pre; | cast.role(0.84):Alfred Hitchcock fig; Alfred Hitchcock fig; Alfred Hitchcock fig; | 
Which, WDT
movies, NN
did, VBD
Alfred Hitchcock, NNP
direct, VB
det(movies-2, Which-1)
dobj(direct-5, movies-2)
aux(direct-5, did-3)
nsubj(direct-5, Alfred Hitchcock-4)
root(ROOT-0, direct-5)

PARSE TREE:(287) ROOT ROOT
    (288) direct NT
        (289) movies NT
        (292) Alfred Hitchcock VTTEXT


===========
TRANSLATIONS
===========
TOT: 0.6875344335370706; NL: 0.6875344335370706; NL+AG: 0.9394249139348947; NL+QF: 0.6875344335370706; rels: []; projs: [movie_0.title]; preds: [director_0.name = "Alfred Hitchcock"]; havings: []; superlative: []; blanks: 1
TOT: 0.6875344335370706; NL: 0.6875344335370706; NL+AG: 0.9394249139348947; NL+QF: 0.6875344335370706; rels: []; projs: [movie_0.title]; preds: [actor_0.name = "Alfred Hitchcock"]; havings: []; superlative: []; blanks: 1
TOT: 0.6875344335370706; NL: 0.6875344335370706; NL+AG: 0.9394249139348947; NL+QF: 0.6875344335370706; rels: []; projs: [movie_0.title]; preds: [producer_0.name = "Alfred Hitchcock"]; havings: []; superlative: []; blanks: 1
TOT: 0.6875344335370706; NL: 0.6875344335370706; NL+AG: 0.9394249139348947; NL+QF: 0.6875344335370706; rels: []; projs: [movie_0.title]; preds: [writer_0.name = "Alfred Hitchcock"]; havings: []; superlative: []; blanks: 1
TOT: 0.6500395500879665; NL: 0.6500395500879665; NL+AG: 0.9211308106114876; NL+QF: 0.6500395500879665; rels: []; projs: [movie_0.title]; preds: [movie_0.title = "Alfred Hitchcock's Gun"]; havings: []; superlative: []; blanks: 1
TOT: 0.6500395500879665; NL: 0.6500395500879665; NL+AG: 0.9211308106114876; NL+QF: 0.6500395500879665; rels: []; projs: [movie_0.title]; preds: [tv_series_0.title = "Ciclo Alfred Hitchcock"]; havings: []; superlative: []; blanks: 1
TOT: 0.6495571451939826; NL: 0.6495571451939826; NL+AG: 0.9209086747507467; NL+QF: 0.6495571451939826; rels: []; projs: [movie_0.title]; preds: [cast_0.role = "Alfred Hitchcock figure"]; havings: []; superlative: []; blanks: 1
TOT: 0.6299605249474366; NL: 0.6299605249474366; NL+AG: 0.9394249139348947; NL+QF: 0.6299605249474366; rels: [directed_by]; projs: [movie_0.title]; preds: [director_0.name = "Alfred Hitchcock"]; havings: []; superlative: []; blanks: 0
TOT: 0.6299605249474366; NL: 0.6299605249474366; NL+AG: 0.9394249139348947; NL+QF: 0.6299605249474366; rels: [directed_by]; projs: [movie_0.title]; preds: [actor_0.name = "Alfred Hitchcock"]; havings: []; superlative: []; blanks: 0
TOT: 0.6299605249474366; NL: 0.6299605249474366; NL+AG: 0.9394249139348947; NL+QF: 0.6299605249474366; rels: [directed_by]; projs: [movie_0.title]; preds: [producer_0.name = "Alfred Hitchcock"]; havings: []; superlative: []; blanks: 0
TOT: 0.6299605249474366; NL: 0.6299605249474366; NL+AG: 0.9394249139348947; NL+QF: 0.6299605249474366; rels: [directed_by]; projs: [movie_0.title]; preds: [writer_0.name = "Alfred Hitchcock"]; havings: []; superlative: []; blanks: 0

===========
RESULTS
===========
TOT: 0.6580164278281873; TR: 0.6875344335370706; QF: 0.0; select movie_0.title from movie as movie_0, writer as writer_0, written_by as written_by_0 where writer_0.name = "Alfred Hitchcock" and movie_0.mid = written_by_0.msid and writer_0.wid = written_by_0.wid
TOT: 0.6580164278281873; TR: 0.6875344335370706; QF: 0.0; select movie_0.title from made_by as made_by_0, movie as movie_0, producer as producer_0 where producer_0.name = "Alfred Hitchcock" and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid
TOT: 0.6580164278281873; TR: 0.6875344335370706; QF: 0.0; select movie_0.title from actor as actor_0, cast as cast_0, movie as movie_0 where actor_0.name = "Alfred Hitchcock" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid
TOT: 0.6580164278281873; TR: 0.6875344335370706; QF: 0.0; select movie_0.title from directed_by as directed_by_0, director as director_0, movie as movie_0 where director_0.name = "Alfred Hitchcock" and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid
TOT: 0.64227968801617; TR: 0.6495571451939826; QF: 0.0; select movie_0.title from cast as cast_0, movie as movie_0 where cast_0.role = "Alfred Hitchcock figure" and cast_0.msid = movie_0.mid
TOT: 0.6325947388151865; TR: 0.6875344335370706; QF: 0.0; select movie_0.title from classification as classification_0, classification as classification_1, genre as genre_0, made_by as made_by_0, movie as movie_0, producer as producer_0, tv_series as tv_series_0 where producer_0.name = "Alfred Hitchcock" and classification_0.gid = genre_0.gid and classification_0.msid = movie_0.mid and classification_1.gid = genre_0.gid and classification_1.msid = tv_series_0.sid and made_by_0.msid = tv_series_0.sid and made_by_0.pid = producer_0.pid
TOT: 0.6325947388151865; TR: 0.6875344335370706; QF: 0.0; select movie_0.title from actor as actor_0, cast as cast_0, classification as classification_0, classification as classification_1, genre as genre_0, movie as movie_0, tv_series as tv_series_0 where actor_0.name = "Alfred Hitchcock" and actor_0.aid = cast_0.aid and cast_0.msid = tv_series_0.sid and classification_0.gid = genre_0.gid and classification_0.msid = movie_0.mid and classification_1.gid = genre_0.gid and classification_1.msid = tv_series_0.sid
TOT: 0.6325947388151865; TR: 0.6875344335370706; QF: 0.0; select movie_0.title from directed_by as directed_by_0, director as director_0, keyword as keyword_0, movie as movie_0, tags as tags_0, tags as tags_1, tv_series as tv_series_0 where director_0.name = "Alfred Hitchcock" and directed_by_0.did = director_0.did and directed_by_0.msid = tv_series_0.sid and keyword_0.id = tags_0.kid and keyword_0.id = tags_1.kid and movie_0.mid = tags_0.msid and tags_1.msid = tv_series_0.sid
TOT: 0.6325947388151865; TR: 0.6875344335370706; QF: 0.0; select movie_0.title from company as company_0, copyright as copyright_0, copyright as copyright_1, movie as movie_0, tv_series as tv_series_0, writer as writer_0, written_by as written_by_0 where writer_0.name = "Alfred Hitchcock" and company_0.id = copyright_0.cid and company_0.id = copyright_1.cid and copyright_0.msid = movie_0.mid and copyright_1.msid = tv_series_0.sid and tv_series_0.sid = written_by_0.msid and writer_0.wid = written_by_0.wid
TOT: 0.6325947388151865; TR: 0.6875344335370706; QF: 0.0; select movie_0.title from classification as classification_0, classification as classification_1, genre as genre_0, movie as movie_0, tv_series as tv_series_0, writer as writer_0, written_by as written_by_0 where writer_0.name = "Alfred Hitchcock" and classification_0.gid = genre_0.gid and classification_0.msid = movie_0.mid and classification_1.gid = genre_0.gid and classification_1.msid = tv_series_0.sid and tv_series_0.sid = written_by_0.msid and writer_0.wid = written_by_0.wid


00:57  INFO: ================
00:57  INFO: QUERY 79: who acted the role of "Mr. Bean"
00:57  INFO: ================
00:58  INFO: ================
00:58  INFO: QUERY 0: What year is the movie "Dead Poets Society" from?
00:58  INFO: ================
01:00  INFO: ===== FOLD 1 =====
01:00  INFO: ===== Parsing Results =====
01:00  INFO: Total Queries: 0
01:00  INFO: Correctly Parsed: 0/0

01:00  INFO: ================
01:00  INFO: QUERY 24: Find all movies written by "Matt Damon"
01:00  INFO: ================
01:01  INFO: ================
01:01  INFO: QUERY 65: Who acts as "Alan Turing" in the movie "The Imitation Game"?
01:01  INFO: ================
01:04  INFO: ================
01:04  INFO: QUERY 6: Find all actors who were born in 1984
01:04  INFO: ================
01:05  INFO: ================
01:05  INFO: QUERY 54: Find all movies produced by Netflix
01:05  INFO: ================
339. ROOT: ROOT; NA; ; (0) 
340. Find: CMT; NA; ; (0) 
341. movies: NT; NA; all; (0) movie.title(1.0):| movie(1.0):| cast.role(0.95):Movie; Movie F; Movie AD; | company.name(0.95):Movies; Movie; Movie Movie; | tv_series.title(0.84):Movies, Movies, Movi; Movie Mob; Moon Movies; | keyword.keyword(0.83):movie-in-movie; movies-about-movies; b-movie; | actor.name(0.76):| 
343. produced: NT; NA; ; (0) made_by(0.74):| directed_by(0.69):| producer.name(0.68):| producer(0.68):| cast.role(0.63):| cast(0.63):| written_by(0.63):| 
344. Netflix: VTTEXT; NA; ; (0) company.name(1.0):Netflix; Netflix; Netflix; | keyword.keyword(1.0):netflix; netflix-series; netflix-production; | tv_series.title(0.78):| tv_series(0.78):| cast.role(0.77):Netflix guy; | movie.title(0.74):| movie(0.74):| 
Find, VB
all, DT
movies, NNS
produced, VBN
by, IN
Netflix, NNP
root(ROOT-0, Find-1)
det(movies-3, all-2)
dobj(Find-1, movies-3)
acl(movies-3, produced-4)
case(Netflix-6, by-5)
nmod(produced-4, Netflix-6)

PARSE TREE:(339) ROOT ROOT
    (340) Find CMT
        (341) movies NT
            (343) produced NT
                (344) Netflix VTTEXT


===========
TRANSLATIONS
===========
TOT: 0.9055419360254962; NL: 0.9055419360254962; NL+AG: 0.9628121638266046; NL+QF: 0.9055419360254962; rels: [made_by]; projs: [movie_0.title]; preds: [company_0.name = "Netflix"]; havings: []; superlative: []; blanks: 0
TOT: 0.9055419360254962; NL: 0.9055419360254962; NL+AG: 0.9628121638266046; NL+QF: 0.9055419360254962; rels: [made_by]; projs: [movie_0.title]; preds: [keyword_0.keyword = "netflix"]; havings: []; superlative: []; blanks: 0
TOT: 0.8852322584043497; NL: 0.8852322584043497; NL+AG: 0.9628121638266046; NL+QF: 0.8852322584043497; rels: [directed_by]; projs: [movie_0.title]; preds: [company_0.name = "Netflix"]; havings: []; superlative: []; blanks: 0
TOT: 0.8852322584043497; NL: 0.8852322584043497; NL+AG: 0.9628121638266046; NL+QF: 0.8852322584043497; rels: [directed_by]; projs: [movie_0.title]; preds: [keyword_0.keyword = "netflix"]; havings: []; superlative: []; blanks: 0
TOT: 0.8783733725393061; NL: 0.8783733725393061; NL+AG: 0.9628121638266046; NL+QF: 0.8783733725393061; rels: [producer]; projs: [movie_0.title]; preds: [company_0.name = "Netflix"]; havings: []; superlative: []; blanks: 0
TOT: 0.8783733725393061; NL: 0.8783733725393061; NL+AG: 0.9628121638266046; NL+QF: 0.8783733725393061; rels: [producer]; projs: [movie_0.title]; preds: [keyword_0.keyword = "netflix"]; havings: []; superlative: []; blanks: 0
TOT: 0.8662391053409028; NL: 0.8662391053409028; NL+AG: 0.9628121638266046; NL+QF: 0.8662391053409028; rels: []; projs: [movie_0.title]; preds: [company_0.name = "Netflix"]; havings: []; superlative: []; blanks: 1
TOT: 0.8662391053409028; NL: 0.8662391053409028; NL+AG: 0.9628121638266046; NL+QF: 0.8662391053409028; rels: []; projs: [movie_0.title]; preds: [keyword_0.keyword = "netflix"]; havings: []; superlative: []; blanks: 1
TOT: 0.8352193753498772; NL: 0.8352193753498772; NL+AG: 0.9186092792989894; NL+QF: 0.8352193753498772; rels: [made_by,tv_series]; projs: [movie_0.title]; preds: []; havings: []; superlative: []; blanks: 0
TOT: 0.8316369478681359; NL: 0.8316369478681359; NL+AG: 0.9391833540180654; NL+QF: 0.8316369478681359; rels: [made_by]; projs: [movie_0.title]; preds: [cast_0.role = "Netflix guy"]; havings: []; superlative: []; blanks: 0
TOT: 0.8271946403307422; NL: 0.8271946403307422; NL+AG: 0.9394249139348947; NL+QF: 0.8271946403307422; rels: [made_by]; projs: [actor_0.name]; preds: [company_0.name = "Netflix"]; havings: []; superlative: []; blanks: 0
TOT: 0.8271946403307422; NL: 0.8271946403307422; NL+AG: 0.9394249139348947; NL+QF: 0.8271946403307422; rels: [made_by]; projs: [actor_0.name]; preds: [keyword_0.keyword = "netflix"]; havings: []; superlative: []; blanks: 0

===========
RESULTS
===========
TOT: 0.8179011159303482; TR: 0.9055419360254962; QF: 0.0; select movie_0.title from keyword as keyword_0, made_by as made_by_0, made_by as made_by_1, movie as movie_0, producer as producer_0, tags as tags_0, tv_series as tv_series_0 where keyword_0.keyword = "netflix" and keyword_0.id = tags_0.kid and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid and made_by_1.msid = tv_series_0.sid and made_by_1.pid = producer_0.pid and tags_0.msid = tv_series_0.sid
TOT: 0.8179011159303482; TR: 0.9055419360254962; QF: 0.0; select movie_0.title from company as company_0, copyright as copyright_0, made_by as made_by_0, made_by as made_by_1, movie as movie_0, producer as producer_0, tv_series as tv_series_0 where company_0.name = "Netflix" and company_0.id = copyright_0.cid and copyright_0.msid = tv_series_0.sid and made_by_0.msid = tv_series_0.sid and made_by_0.pid = producer_0.pid and made_by_1.msid = movie_0.mid and made_by_1.pid = producer_0.pid
TOT: 0.8099153988614446; TR: 0.8662391053409028; QF: 0.0; select movie_0.title from keyword as keyword_0, movie as movie_0, tags as tags_0 where keyword_0.keyword = "netflix" and keyword_0.id = tags_0.kid and movie_0.mid = tags_0.msid
TOT: 0.8099153988614446; TR: 0.8662391053409028; QF: 0.0; select movie_0.title from company as company_0, copyright as copyright_0, movie as movie_0 where company_0.name = "Netflix" and company_0.id = copyright_0.cid and copyright_0.msid = movie_0.mid
TOT: 0.8006378899523737; TR: 0.8852322584043497; QF: 0.0; select movie_0.title from company as company_0, copyright as copyright_0, directed_by as directed_by_0, directed_by as directed_by_1, director as director_0, movie as movie_0, tv_series as tv_series_0 where company_0.name = "Netflix" and company_0.id = copyright_0.cid and copyright_0.msid = tv_series_0.sid and directed_by_0.did = director_0.did and directed_by_0.msid = tv_series_0.sid and directed_by_1.did = director_0.did and directed_by_1.msid = movie_0.mid
TOT: 0.8006378899523737; TR: 0.8852322584043497; QF: 0.0; select movie_0.title from directed_by as directed_by_0, directed_by as directed_by_1, director as director_0, keyword as keyword_0, movie as movie_0, tags as tags_0, tv_series as tv_series_0 where keyword_0.keyword = "netflix" and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and directed_by_1.did = director_0.did and directed_by_1.msid = tv_series_0.sid and keyword_0.id = tags_0.kid and tags_0.msid = tv_series_0.sid
TOT: 0.7844937098484438; TR: 0.8662391053409028; QF: 0.0; select movie_0.title from actor as actor_0, cast as cast_0, cast as cast_1, company as company_0, copyright as copyright_0, movie as movie_0, tv_series as tv_series_0 where company_0.name = "Netflix" and actor_0.aid = cast_0.aid and actor_0.aid = cast_1.aid and cast_0.msid = tv_series_0.sid and cast_1.msid = movie_0.mid and company_0.id = copyright_0.cid and copyright_0.msid = tv_series_0.sid
TOT: 0.7844937098484438; TR: 0.8662391053409028; QF: 0.0; select movie_0.title from company as company_0, copyright as copyright_0, movie as movie_0, tv_series as tv_series_0, writer as writer_0, written_by as written_by_0, written_by as written_by_1 where company_0.name = "Netflix" and company_0.id = copyright_0.cid and copyright_0.msid = tv_series_0.sid and movie_0.mid = written_by_1.msid and tv_series_0.sid = written_by_0.msid and writer_0.wid = written_by_0.wid and writer_0.wid = written_by_1.wid
TOT: 0.7844937098484438; TR: 0.8662391053409028; QF: 0.0; select movie_0.title from company as company_0, copyright as copyright_0, keyword as keyword_0, movie as movie_0, tags as tags_0, tags as tags_1, tv_series as tv_series_0 where company_0.name = "Netflix" and company_0.id = copyright_0.cid and copyright_0.msid = tv_series_0.sid and keyword_0.id = tags_0.kid and keyword_0.id = tags_1.kid and movie_0.mid = tags_1.msid and tags_0.msid = tv_series_0.sid
TOT: 0.7844937098484438; TR: 0.8662391053409028; QF: 0.0; select movie_0.title from classification as classification_0, classification as classification_1, genre as genre_0, keyword as keyword_0, movie as movie_0, tags as tags_0, tv_series as tv_series_0 where keyword_0.keyword = "netflix" and classification_0.gid = genre_0.gid and classification_0.msid = movie_0.mid and classification_1.gid = genre_0.gid and classification_1.msid = tv_series_0.sid and keyword_0.id = tags_0.kid and tags_0.msid = tv_series_0.sid


01:05  INFO: ================
01:05  INFO: QUERY 27: What was the budget of the movie Juno from 2007?
01:05  INFO: ================
01:07  INFO: ================
01:07  INFO: QUERY 127: Who directed the latest movie by "NBCUniversal"
01:07  INFO: ================
359. ROOT: ROOT; NA; ; (0) 
360. directed: NT; NA; ; (0) directed_by(1.0):| director.name(0.72):| director(0.72):| written_by(0.68):| cast.role(0.67):| cast(0.67):| made_by(0.67):| 
361. Who: CMT; NA; ; (0) director.name(1.0):| actor.name(1.0):| producer.name(1.0):| writer.name(1.0):| 
362. movie: NT; NA; ; (0) movie.title(1.0):| movie(1.0):| cast.role(0.95):Movie; Movie F; Movie AD; | company.name(0.95):Movie; Movies; Movie Movie; | keyword.keyword(0.83):movie-in-movie; b-movie; z-movie; | actor.name(0.76):| actor(0.76):| 
364. latest: FT; max; ; (0) 
365. NBCUniversal: VTTEXT; NA; ; (0) company.name(1.0):NBCUniversal; NBCUniversal Media; NBCUniversal Skycast; | genre.genre(0.2):Commercial; Commercial; Experimental; | 
Who, WP
directed, VBD
the, DT
latest, JJS
movie, NN
by, IN
NBCUniversal, NNP
nsubj(directed-2, Who-1)
root(ROOT-0, directed-2)
det(movie-5, the-3)
amod(movie-5, latest-4)
dobj(directed-2, movie-5)
case(NBCUniversal-7, by-6)
nmod(directed-2, NBCUniversal-7)

PARSE TREE:(359) ROOT ROOT
    (361) Who CMT
        (360) directed NT
            (362) movie NT
            (365) NBCUniversal VTTEXT


===========
TRANSLATIONS
===========
TOT: 0.9830475724915585; NL: 0.9830475724915585; NL+AG: 0.9947191844774439; NL+QF: 0.9830475724915585; rels: []; projs: [director_0.name]; preds: [cast_0.role = "Movie",company_0.name = "NBCUniversal"]; havings: []; superlative: []; blanks: 0
TOT: 0.9830475724915585; NL: 0.9830475724915585; NL+AG: 0.9947191844774439; NL+QF: 0.9830475724915585; rels: []; projs: [actor_0.name]; preds: [cast_0.role = "Movie",company_0.name = "NBCUniversal"]; havings: []; superlative: []; blanks: 0
TOT: 0.9830475724915585; NL: 0.9830475724915585; NL+AG: 0.9947191844774439; NL+QF: 0.9830475724915585; rels: []; projs: [producer_0.name]; preds: [cast_0.role = "Movie",company_0.name = "NBCUniversal"]; havings: []; superlative: []; blanks: 0
TOT: 0.9830475724915585; NL: 0.9830475724915585; NL+AG: 0.9947191844774439; NL+QF: 0.9830475724915585; rels: []; projs: [writer_0.name]; preds: [cast_0.role = "Movie",company_0.name = "NBCUniversal"]; havings: []; superlative: []; blanks: 0
TOT: 0.9355249205979076; NL: 0.9355249205979076; NL+AG: 0.9778318463203914; NL+QF: 0.9355249205979076; rels: []; projs: [director_0.name]; preds: [company_0.name = "NBCUniversal"]; havings: []; superlative: [movie_0.title desc limit 1]; blanks: 1
TOT: 0.9174505626104981; NL: 0.9174505626104981; NL+AG: 0.9734002230204892; NL+QF: 0.9174505626104981; rels: []; projs: [director_0.name]; preds: [company_0.name = "NBCUniversal"]; havings: []; superlative: [movie_0.title desc limit 1]; blanks: 1
TOT: 0.9174505626104981; NL: 0.9174505626104981; NL+AG: 0.9734002230204892; NL+QF: 0.9174505626104981; rels: []; projs: [actor_0.name]; preds: [company_0.name = "NBCUniversal"]; havings: []; superlative: [movie_0.title desc limit 1]; blanks: 1
TOT: 0.9174505626104981; NL: 0.9174505626104981; NL+AG: 0.9734002230204892; NL+QF: 0.9174505626104981; rels: []; projs: [producer_0.name]; preds: [company_0.name = "NBCUniversal"]; havings: []; superlative: [movie_0.title desc limit 1]; blanks: 1
TOT: 0.9174505626104981; NL: 0.9174505626104981; NL+AG: 0.9734002230204892; NL+QF: 0.9174505626104981; rels: []; projs: [writer_0.name]; preds: [company_0.name = "NBCUniversal"]; havings: []; superlative: [movie_0.title desc limit 1]; blanks: 1
TOT: 0.8582978647386919; NL: 0.8582978647386919; NL+AG: 0.9512320693408807; NL+QF: 0.8582978647386919; rels: []; projs: [director_0.name]; preds: [company_0.name = "NBCUniversal"]; havings: []; superlative: [movie_0.title desc limit 1]; blanks: 1
TOT: 0.8582978647386919; NL: 0.8582978647386919; NL+AG: 0.945088111145773; NL+QF: 0.8582978647386919; rels: []; projs: [director_0.name]; preds: []; havings: []; superlative: [movie_0.title desc limit 1]; blanks: 2

===========
RESULTS
===========
TOT: 0.8926101700440694; TR: 0.9830475724915585; QF: 0.0; select actor_0.name from actor as actor_0, cast as cast_0, company as company_0, copyright as copyright_0, movie as movie_0 where cast_0.role = "Movie" and company_0.name = "NBCUniversal" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and company_0.id = copyright_0.cid and copyright_0.msid = movie_0.mid
TOT: 0.8926101700440694; TR: 0.9830475724915585; QF: 0.0; select actor_0.name from actor as actor_0, cast as cast_0, company as company_0, copyright as copyright_0, tv_series as tv_series_0 where cast_0.role = "Movie" and company_0.name = "NBCUniversal" and actor_0.aid = cast_0.aid and cast_0.msid = tv_series_0.sid and company_0.id = copyright_0.cid and copyright_0.msid = tv_series_0.sid
TOT: 0.8876420936519672; TR: 0.9830475724915585; QF: 0.0; select producer_0.name from cast as cast_0, company as company_0, copyright as copyright_0, made_by as made_by_0, producer as producer_0, tv_series as tv_series_0 where cast_0.role = "Movie" and company_0.name = "NBCUniversal" and cast_0.msid = tv_series_0.sid and company_0.id = copyright_0.cid and copyright_0.msid = tv_series_0.sid and made_by_0.msid = tv_series_0.sid and made_by_0.pid = producer_0.pid
TOT: 0.8876420936519672; TR: 0.9830475724915585; QF: 0.0; select director_0.name from cast as cast_0, company as company_0, copyright as copyright_0, directed_by as directed_by_0, director as director_0, tv_series as tv_series_0 where cast_0.role = "Movie" and company_0.name = "NBCUniversal" and cast_0.msid = tv_series_0.sid and company_0.id = copyright_0.cid and copyright_0.msid = tv_series_0.sid and directed_by_0.did = director_0.did and directed_by_0.msid = tv_series_0.sid
TOT: 0.8876420936519672; TR: 0.9830475724915585; QF: 0.0; select writer_0.name from cast as cast_0, company as company_0, copyright as copyright_0, tv_series as tv_series_0, writer as writer_0, written_by as written_by_0 where cast_0.role = "Movie" and company_0.name = "NBCUniversal" and cast_0.msid = tv_series_0.sid and company_0.id = copyright_0.cid and copyright_0.msid = tv_series_0.sid and tv_series_0.sid = written_by_0.msid and writer_0.wid = written_by_0.wid
TOT: 0.8876420936519672; TR: 0.9830475724915585; QF: 0.0; select producer_0.name from cast as cast_0, company as company_0, copyright as copyright_0, made_by as made_by_0, movie as movie_0, producer as producer_0 where cast_0.role = "Movie" and company_0.name = "NBCUniversal" and cast_0.msid = movie_0.mid and company_0.id = copyright_0.cid and copyright_0.msid = movie_0.mid and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid
TOT: 0.8876420936519672; TR: 0.9830475724915585; QF: 0.0; select director_0.name from cast as cast_0, company as company_0, copyright as copyright_0, directed_by as directed_by_0, director as director_0, movie as movie_0 where cast_0.role = "Movie" and company_0.name = "NBCUniversal" and cast_0.msid = movie_0.mid and company_0.id = copyright_0.cid and copyright_0.msid = movie_0.mid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid
TOT: 0.8876420936519672; TR: 0.9830475724915585; QF: 0.0; select writer_0.name from cast as cast_0, company as company_0, copyright as copyright_0, movie as movie_0, writer as writer_0, written_by as written_by_0 where cast_0.role = "Movie" and company_0.name = "NBCUniversal" and cast_0.msid = movie_0.mid and company_0.id = copyright_0.cid and copyright_0.msid = movie_0.mid and movie_0.mid = written_by_0.msid and writer_0.wid = written_by_0.wid
TOT: 0.8522159159344661; TR: 0.9355249205979076; QF: 0.0; select director_0.name from company as company_0, copyright as copyright_0, directed_by as directed_by_0, director as director_0, movie as movie_0 where company_0.name = "NBCUniversal" and company_0.id = copyright_0.cid and copyright_0.msid = movie_0.mid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid order by movie_0.title desc limit 1
TOT: 0.843386652816898; TR: 0.9355249205979076; QF: 0.0; select director_0.name from company as company_0, copyright as copyright_0, directed_by as directed_by_0, directed_by as directed_by_1, director as director_0, movie as movie_0, tv_series as tv_series_0 where company_0.name = "NBCUniversal" and company_0.id = copyright_0.cid and copyright_0.msid = tv_series_0.sid and directed_by_0.did = director_0.did and directed_by_0.msid = tv_series_0.sid and directed_by_1.did = director_0.did and directed_by_1.msid = movie_0.mid order by movie_0.title desc limit 1


01:09  INFO: ================
01:09  INFO: QUERY 84: List all male directors who worked with the "NBCUniversal" company
01:09  INFO: ================
368. ROOT: ROOT; NA; ; (0) 
369. List: CMT; NA; ; (0) 
370. directors: NT; NA; all; (0) director.name(1.0):| director(1.0):| movie.title(0.95):Director; Director; Director; | producer.name(0.95):Director; Co-Director; Director GT; | company.name(0.95):Directors; Directors; Director; | writer.name(0.95):Director; Director X; Director X.; | tv_series.title(0.88):Directors on Directo; The Directors; The Directors; | 
372. male: VTTEXT; NA; ; (0) movie.title(1.0):Male; Female/Male; Pale Male; | director.birth_city(1.0):Male; Wilkucice Male; | director.gender(1.0):male; male; male; | actor.gender(1.0):male; male; male; | actor.name(1.0):Male; Male; Coleman Male; | cast.role(1.0):Males; Males; Males; | producer.birth_city(1.0):Male; | 
373. worked: NT; NA; ; (0) directed_by(0.71):| made_by(0.64):| written_by(0.63):| director.name(0.62):| director(0.62):| cast.role(0.62):| cast(0.62):| 
375. company: NT; NA; ; (0) company.name(1.0):| company(1.0):| movie.title(0.95):Company; Company; Company; | cast.role(0.95):Company; Company; Company; | keyword.keyword(0.95):company; company-k; it-company; | tv_series.title(0.82):X Company; Eco Company; Company and Co; | actor.name(0.74):Eva Company; Angel Company; Marc Company; | 
378. NBCUniversal: VTTEXT; NA; ; (0) company.name(1.0):NBCUniversal; NBCUniversal Media; NBCUniversal Skycast; | genre.genre(0.2):Commercial; Commercial; Experimental; | 
List, VB
all, DT
male, JJ
directors, NNS
who, WP
worked, VBD
with, IN
the, DT
NBCUniversal, NNP
company, NN
root(ROOT-0, List-1)
det(directors-4, all-2)
amod(directors-4, male-3)
dobj(List-1, directors-4)
nsubj(worked-6, who-5)
acl:relcl(directors-4, worked-6)
case(company-10, with-7)
det(company-10, the-8)
compound(company-10, NBCUniversal-9)
nmod(worked-6, company-10)

PARSE TREE:(368) ROOT ROOT
    (369) List CMT
        (370) directors NT
            (372) male VTTEXT
            (373) worked NT
                (375) company NT
                    (378) NBCUniversal VTTEXT


===========
TRANSLATIONS
===========
TOT: 0.9168559143387582; NL: 0.9168559143387582; NL+AG: 0.9685548245020893; NL+QF: 0.9168559143387582; rels: [directed_by]; projs: [director_0.name]; preds: [movie_0.title = "Male",company_0.name = "NBCUniversal"]; havings: []; superlative: []; blanks: 0
TOT: 0.9168559143387582; NL: 0.9168559143387582; NL+AG: 0.9685548245020893; NL+QF: 0.9168559143387582; rels: [directed_by]; projs: [director_0.name]; preds: [director_0.birth_city = "Male",company_0.name = "NBCUniversal"]; havings: []; superlative: []; blanks: 0
TOT: 0.9168559143387582; NL: 0.9168559143387582; NL+AG: 0.9685548245020893; NL+QF: 0.9168559143387582; rels: [directed_by]; projs: [director_0.name]; preds: [director_0.gender = "male",company_0.name = "NBCUniversal"]; havings: []; superlative: []; blanks: 0
TOT: 0.9168559143387582; NL: 0.9168559143387582; NL+AG: 0.9685548245020893; NL+QF: 0.9168559143387582; rels: [directed_by]; projs: [director_0.name]; preds: [actor_0.gender = "male",company_0.name = "NBCUniversal"]; havings: []; superlative: []; blanks: 0
TOT: 0.9168559143387582; NL: 0.9168559143387582; NL+AG: 0.9685548245020893; NL+QF: 0.9168559143387582; rels: [directed_by]; projs: [director_0.name]; preds: [actor_0.name = "Male",company_0.name = "NBCUniversal"]; havings: []; superlative: []; blanks: 0
TOT: 0.9168559143387582; NL: 0.9168559143387582; NL+AG: 0.9685548245020893; NL+QF: 0.9168559143387582; rels: [directed_by]; projs: [director_0.name]; preds: [cast_0.role = "Males",company_0.name = "NBCUniversal"]; havings: []; superlative: []; blanks: 0
TOT: 0.9168559143387582; NL: 0.9168559143387582; NL+AG: 0.9685548245020893; NL+QF: 0.9168559143387582; rels: [directed_by]; projs: [director_0.name]; preds: [producer_0.birth_city = "Male",company_0.name = "NBCUniversal"]; havings: []; superlative: []; blanks: 0
TOT: 0.8979007600118484; NL: 0.8979007600118484; NL+AG: 0.9685548245020893; NL+QF: 0.8979007600118484; rels: []; projs: [director_0.name]; preds: [movie_0.title = "Male",company_0.name = "NBCUniversal"]; havings: []; superlative: []; blanks: 1
TOT: 0.8979007600118484; NL: 0.8979007600118484; NL+AG: 0.9685548245020893; NL+QF: 0.8979007600118484; rels: []; projs: [director_0.name]; preds: [director_0.birth_city = "Male",company_0.name = "NBCUniversal"]; havings: []; superlative: []; blanks: 1
TOT: 0.8979007600118484; NL: 0.8979007600118484; NL+AG: 0.9685548245020893; NL+QF: 0.8979007600118484; rels: []; projs: [director_0.name]; preds: [director_0.gender = "male",company_0.name = "NBCUniversal"]; havings: []; superlative: []; blanks: 1
TOT: 0.8979007600118484; NL: 0.8979007600118484; NL+AG: 0.9685548245020893; NL+QF: 0.8979007600118484; rels: []; projs: [director_0.name]; preds: [actor_0.gender = "male",company_0.name = "NBCUniversal"]; havings: []; superlative: []; blanks: 1
TOT: 0.8979007600118484; NL: 0.8979007600118484; NL+AG: 0.9685548245020893; NL+QF: 0.8979007600118484; rels: []; projs: [director_0.name]; preds: [actor_0.name = "Male",company_0.name = "NBCUniversal"]; havings: []; superlative: []; blanks: 1
TOT: 0.8979007600118484; NL: 0.8979007600118484; NL+AG: 0.9685548245020893; NL+QF: 0.8979007600118484; rels: []; projs: [director_0.name]; preds: [cast_0.role = "Males",company_0.name = "NBCUniversal"]; havings: []; superlative: []; blanks: 1
TOT: 0.8979007600118484; NL: 0.8979007600118484; NL+AG: 0.9685548245020893; NL+QF: 0.8979007600118484; rels: []; projs: [director_0.name]; preds: [producer_0.birth_city = "Male",company_0.name = "NBCUniversal"]; havings: []; superlative: []; blanks: 1

===========
RESULTS
===========
TOT: 0.8363472606141892; TR: 0.9168559143387582; QF: 0.0; select director_0.name from company as company_0, copyright as copyright_0, directed_by as directed_by_0, director as director_0, movie as movie_0 where company_0.name = "NBCUniversal" and movie_0.title = "Male" and company_0.id = copyright_0.cid and copyright_0.msid = movie_0.mid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid
TOT: 0.8363472606141892; TR: 0.9168559143387582; QF: 0.0; select director_0.name from company as company_0, copyright as copyright_0, directed_by as directed_by_0, director as director_0, movie as movie_0 where company_0.name = "NBCUniversal" and director_0.birth_city = "Male" and company_0.id = copyright_0.cid and copyright_0.msid = movie_0.mid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid
TOT: 0.8363472606141892; TR: 0.9168559143387582; QF: 0.0; select director_0.name from company as company_0, copyright as copyright_0, directed_by as directed_by_0, director as director_0, movie as movie_0 where company_0.name = "NBCUniversal" and director_0.gender = "male" and company_0.id = copyright_0.cid and copyright_0.msid = movie_0.mid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid
TOT: 0.8363472606141892; TR: 0.9168559143387582; QF: 0.0; select director_0.name from company as company_0, copyright as copyright_0, directed_by as directed_by_0, director as director_0, tv_series as tv_series_0 where company_0.name = "NBCUniversal" and director_0.birth_city = "Male" and company_0.id = copyright_0.cid and copyright_0.msid = tv_series_0.sid and directed_by_0.did = director_0.did and directed_by_0.msid = tv_series_0.sid
TOT: 0.8363472606141892; TR: 0.9168559143387582; QF: 0.0; select director_0.name from company as company_0, copyright as copyright_0, directed_by as directed_by_0, director as director_0, tv_series as tv_series_0 where company_0.name = "NBCUniversal" and director_0.gender = "male" and company_0.id = copyright_0.cid and copyright_0.msid = tv_series_0.sid and directed_by_0.did = director_0.did and directed_by_0.msid = tv_series_0.sid
TOT: 0.831379184222087; TR: 0.9168559143387582; QF: 0.0; select director_0.name from cast as cast_0, company as company_0, copyright as copyright_0, directed_by as directed_by_0, director as director_0, tv_series as tv_series_0 where cast_0.role = "Males" and company_0.name = "NBCUniversal" and cast_0.msid = tv_series_0.sid and company_0.id = copyright_0.cid and copyright_0.msid = tv_series_0.sid and directed_by_0.did = director_0.did and directed_by_0.msid = tv_series_0.sid
TOT: 0.831379184222087; TR: 0.9168559143387582; QF: 0.0; select director_0.name from cast as cast_0, company as company_0, copyright as copyright_0, directed_by as directed_by_0, director as director_0, movie as movie_0 where cast_0.role = "Males" and company_0.name = "NBCUniversal" and cast_0.msid = movie_0.mid and company_0.id = copyright_0.cid and copyright_0.msid = movie_0.mid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid
TOT: 0.827517997496621; TR: 0.9168559143387582; QF: 0.0; select director_0.name from company as company_0, copyright as copyright_0, directed_by as directed_by_0, director as director_0, made_by as made_by_0, producer as producer_0, tv_series as tv_series_0 where company_0.name = "NBCUniversal" and producer_0.birth_city = "Male" and company_0.id = copyright_0.cid and copyright_0.msid = tv_series_0.sid and directed_by_0.did = director_0.did and directed_by_0.msid = tv_series_0.sid and made_by_0.msid = tv_series_0.sid and made_by_0.pid = producer_0.pid
TOT: 0.827517997496621; TR: 0.9168559143387582; QF: 0.0; select director_0.name from actor as actor_0, cast as cast_0, company as company_0, copyright as copyright_0, directed_by as directed_by_0, director as director_0, movie as movie_0 where actor_0.gender = "male" and company_0.name = "NBCUniversal" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and company_0.id = copyright_0.cid and copyright_0.msid = movie_0.mid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid
TOT: 0.827517997496621; TR: 0.9168559143387582; QF: 0.0; select director_0.name from actor as actor_0, cast as cast_0, company as company_0, copyright as copyright_0, directed_by as directed_by_0, director as director_0, movie as movie_0 where actor_0.name = "Male" and company_0.name = "NBCUniversal" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and company_0.id = copyright_0.cid and copyright_0.msid = movie_0.mid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid


01:26  INFO: ================
01:26  INFO: QUERY 26: Find all movies featuring "Kate Winslet"
01:26  INFO: ================
01:27  INFO: ================
01:27  INFO: QUERY 10: In what year was "Kevin Spacey" born?
01:27  INFO: ================
01:28  INFO: ================
01:28  INFO: QUERY 74: Find all actors from Canada who acted in "James Bond" movies
01:28  INFO: ================
01:33  INFO: ================
01:33  INFO: QUERY 77: List all the movies directed by "Asghar Farhadi" in which "Taraneh Alidoosti" played
01:33  INFO: ================
01:35  INFO: ================
01:35  INFO: QUERY 19: Who is the director of the movie "Catch Me If You Can"?
01:35  INFO: ================
01:36  INFO: ================
01:36  INFO: QUERY 72: List all the Sci-Fi movies which released in 2010
01:36  INFO: ================
430. ROOT: ROOT; NA; ; (0) 
431. List: CMT; NA; ; (0) 
432. movies: NT; NA; all; (0) movie.title(1.0):| movie(1.0):| cast.role(0.95):Movie; Movie F; Movie AD; | company.name(0.95):Movies; Movie; Movie Movie; | tv_series.title(0.84):Movies, Movies, Movi; Movie Mob; Moon Movies; | keyword.keyword(0.83):movie-in-movie; movies-about-movies; b-movie; | actor.name(0.76):| 
435. Sci-Fi: VTTEXT; NA; ; (0) cast.role(1.0):Sci-Fi; Sci-Fi; Sci-fi #1; | genre.genre(1.0):Sci-Fi; Sci-Fi; Film-Noir; | keyword.keyword(0.87):sci-fi-fan; sci-fi-fan; sci-fi-geek; | actor.name(0.75):Mr. Sci-Fi; Mr. Sci-Fi; That Sci-fiGuy; | producer.name(0.75):Mr. Sci-Fi; Mr. Sci-Fi; That Sci-fiGuy; | company.name(0.75):AXN Sci-Fi; AXN Sci-Fi; AXN Sci-Fi; | writer.name(0.75):Mr. Sci-Fi; Mr. Sci-Fi; That Sci-fiGuy; | 
436. released: NT; NA; ; (0) movie.release_year(1.0):| tv_series.release_year(1.0):| movie.title(0.64):| movie(0.64):| movie.title_aka(0.63):| tv_series.title_aka(0.63):| cast.role(0.63):| 
438. 2010: VTNUM; NA; ; (0) movie.release_year(1.0):2010; 2010; 2010; | tv_series.release_year(1.0):2010; 2010; 2010; | actor.birth_year(1.0):2010; 2010; | producer.birth_year(1.0):2010; | 
List, VB
all, PDT
the, DT
Sci-Fi, JJ
movies, NNS
which, WDT
released, VBN
in, IN
2010, CD
root(ROOT-0, List-1)
det:predet(movies-5, all-2)
det(movies-5, the-3)
amod(movies-5, Sci-Fi-4)
dobj(List-1, movies-5)
nsubj(released-7, which-6)
acl:relcl(movies-5, released-7)
case(2010-9, in-8)
nmod(released-7, 2010-9)

PARSE TREE:(430) ROOT ROOT
    (431) List CMT
        (432) movies NT
            (435) Sci-Fi VTTEXT
            (436) released NT
                (438) 2010 VTNUM


===========
TRANSLATIONS
===========
TOT: 1.0; NL: 1.0; NL+AG: 1.0; NL+QF: 1.0; rels: []; projs: [movie_0.title]; preds: [cast_0.role = "Sci-Fi",movie_0.release_year = 2010]; havings: []; superlative: []; blanks: 0
TOT: 1.0; NL: 1.0; NL+AG: 1.0; NL+QF: 1.0; rels: []; projs: [movie_0.title]; preds: [cast_0.role = "Sci-Fi",tv_series_0.release_year = 2010]; havings: []; superlative: []; blanks: 0
TOT: 1.0; NL: 1.0; NL+AG: 1.0; NL+QF: 1.0; rels: []; projs: [movie_0.title]; preds: [genre_0.genre = "Sci-Fi",movie_0.release_year = 2010]; havings: []; superlative: []; blanks: 0
TOT: 1.0; NL: 1.0; NL+AG: 1.0; NL+QF: 1.0; rels: []; projs: [movie_0.title]; preds: [genre_0.genre = "Sci-Fi",tv_series_0.release_year = 2010]; havings: []; superlative: []; blanks: 0
TOT: 0.9539972450774545; NL: 0.9539972450774545; NL+AG: 0.983897512635319; NL+QF: 0.9539972450774545; rels: []; projs: [movie_0.title]; preds: [keyword_0.keyword = "sci-fi-fan",movie_0.release_year = 2010]; havings: []; superlative: []; blanks: 0
TOT: 0.9539972450774545; NL: 0.9539972450774545; NL+AG: 0.983897512635319; NL+QF: 0.9539972450774545; rels: []; projs: [movie_0.title]; preds: [keyword_0.keyword = "sci-fi-fan",tv_series_0.release_year = 2010]; havings: []; superlative: []; blanks: 0
TOT: 0.9134802127015484; NL: 0.9134802127015484; NL+AG: 0.9751546167589099; NL+QF: 0.9134802127015484; rels: []; projs: [actor_0.name]; preds: [cast_0.role = "Sci-Fi",movie_0.release_year = 2010]; havings: []; superlative: []; blanks: 0
TOT: 0.9134802127015484; NL: 0.9134802127015484; NL+AG: 0.9751546167589099; NL+QF: 0.9134802127015484; rels: []; projs: [actor_0.name]; preds: [cast_0.role = "Sci-Fi",tv_series_0.release_year = 2010]; havings: []; superlative: []; blanks: 0
TOT: 0.9134802127015484; NL: 0.9134802127015484; NL+AG: 0.9751546167589099; NL+QF: 0.9134802127015484; rels: []; projs: [actor_0.name]; preds: [genre_0.genre = "Sci-Fi",movie_0.release_year = 2010]; havings: []; superlative: []; blanks: 0
TOT: 0.9134802127015484; NL: 0.9134802127015484; NL+AG: 0.9751546167589099; NL+QF: 0.9134802127015484; rels: []; projs: [actor_0.name]; preds: [genre_0.genre = "Sci-Fi",tv_series_0.release_year = 2010]; havings: []; superlative: []; blanks: 0
TOT: 0.9066811409991332; NL: 0.9066811409991332; NL+AG: 0.9755572687079536; NL+QF: 0.9066811409991332; rels: []; projs: [movie_0.title]; preds: [actor_0.name = "Mr. Sci-Fi",movie_0.release_year = 2010]; havings: []; superlative: []; blanks: 0
TOT: 0.9066811409991332; NL: 0.9066811409991332; NL+AG: 0.9755572687079536; NL+QF: 0.9066811409991332; rels: []; projs: [movie_0.title]; preds: [actor_0.name = "Mr. Sci-Fi",tv_series_0.release_year = 2010]; havings: []; superlative: []; blanks: 0
TOT: 0.9066811409991332; NL: 0.9066811409991332; NL+AG: 0.9755572687079536; NL+QF: 0.9066811409991332; rels: []; projs: [movie_0.title]; preds: [producer_0.name = "Mr. Sci-Fi",movie_0.release_year = 2010]; havings: []; superlative: []; blanks: 0
TOT: 0.9066811409991332; NL: 0.9066811409991332; NL+AG: 0.9755572687079536; NL+QF: 0.9066811409991332; rels: []; projs: [movie_0.title]; preds: [producer_0.name = "Mr. Sci-Fi",tv_series_0.release_year = 2010]; havings: []; superlative: []; blanks: 0
TOT: 0.9066811409991332; NL: 0.9066811409991332; NL+AG: 0.9755572687079536; NL+QF: 0.9066811409991332; rels: []; projs: [movie_0.title]; preds: [company_0.name = "AXN Sci-Fi",movie_0.release_year = 2010]; havings: []; superlative: []; blanks: 0
TOT: 0.9066811409991332; NL: 0.9066811409991332; NL+AG: 0.9755572687079536; NL+QF: 0.9066811409991332; rels: []; projs: [movie_0.title]; preds: [company_0.name = "AXN Sci-Fi",tv_series_0.release_year = 2010]; havings: []; superlative: []; blanks: 0
TOT: 0.9066811409991332; NL: 0.9066811409991332; NL+AG: 0.9755572687079536; NL+QF: 0.9066811409991332; rels: []; projs: [movie_0.title]; preds: [writer_0.name = "Mr. Sci-Fi",movie_0.release_year = 2010]; havings: []; superlative: []; blanks: 0
TOT: 0.9066811409991332; NL: 0.9066811409991332; NL+AG: 0.9755572687079536; NL+QF: 0.9066811409991332; rels: []; projs: [movie_0.title]; preds: [writer_0.name = "Mr. Sci-Fi",tv_series_0.release_year = 2010]; havings: []; superlative: []; blanks: 0

===========
RESULTS
===========
TOT: 0.9401561146012848; TR: 1.0; QF: 0.0; select movie_0.title from cast as cast_0, movie as movie_0 where cast_0.role = "Sci-Fi" and movie_0.release_year = 2010 and cast_0.msid = movie_0.mid
TOT: 0.9236121593216773; TR: 1.0; QF: 0.0; select movie_0.title from classification as classification_0, genre as genre_0, movie as movie_0 where genre_0.genre = "Sci-Fi" and movie_0.release_year = 2010 and classification_0.gid = genre_0.gid and classification_0.msid = movie_0.mid
TOT: 0.9070197334262446; TR: 1.0; QF: 0.0; select movie_0.title from actor as actor_0, cast as cast_0, cast as cast_1, movie as movie_0, tv_series as tv_series_0 where cast_0.role = "Sci-Fi" and tv_series_0.release_year = 2010 and actor_0.aid = cast_0.aid and actor_0.aid = cast_1.aid and cast_0.msid = movie_0.mid and cast_1.msid = tv_series_0.sid
TOT: 0.9070197334262446; TR: 1.0; QF: 0.0; select movie_0.title from classification as classification_0, classification as classification_1, genre as genre_0, movie as movie_0, tv_series as tv_series_0 where genre_0.genre = "Sci-Fi" and tv_series_0.release_year = 2010 and classification_0.gid = genre_0.gid and classification_0.msid = movie_0.mid and classification_1.gid = genre_0.gid and classification_1.msid = tv_series_0.sid
TOT: 0.9020516570341425; TR: 1.0; QF: 0.0; select movie_0.title from cast as cast_0, keyword as keyword_0, movie as movie_0, tags as tags_0, tags as tags_1, tv_series as tv_series_0 where cast_0.role = "Sci-Fi" and movie_0.release_year = 2010 and cast_0.msid = tv_series_0.sid and keyword_0.id = tags_0.kid and keyword_0.id = tags_1.kid and movie_0.mid = tags_0.msid and tags_1.msid = tv_series_0.sid
TOT: 0.9020516570341425; TR: 1.0; QF: 0.0; select movie_0.title from cast as cast_0, keyword as keyword_0, movie as movie_0, tags as tags_0, tags as tags_1, tv_series as tv_series_0 where cast_0.role = "Sci-Fi" and tv_series_0.release_year = 2010 and cast_0.msid = tv_series_0.sid and keyword_0.id = tags_0.kid and keyword_0.id = tags_1.kid and movie_0.mid = tags_0.msid and tags_1.msid = tv_series_0.sid
TOT: 0.9020516570341425; TR: 1.0; QF: 0.0; select movie_0.title from cast as cast_0, company as company_0, copyright as copyright_0, copyright as copyright_1, movie as movie_0, tv_series as tv_series_0 where cast_0.role = "Sci-Fi" and movie_0.release_year = 2010 and cast_0.msid = tv_series_0.sid and company_0.id = copyright_0.cid and company_0.id = copyright_1.cid and copyright_0.msid = movie_0.mid and copyright_1.msid = tv_series_0.sid
TOT: 0.9020516570341425; TR: 1.0; QF: 0.0; select movie_0.title from cast as cast_0, company as company_0, copyright as copyright_0, copyright as copyright_1, movie as movie_0, tv_series as tv_series_0 where cast_0.role = "Sci-Fi" and tv_series_0.release_year = 2010 and cast_0.msid = tv_series_0.sid and company_0.id = copyright_0.cid and company_0.id = copyright_1.cid and copyright_0.msid = movie_0.mid and copyright_1.msid = tv_series_0.sid
TOT: 0.9020516570341425; TR: 1.0; QF: 0.0; select movie_0.title from cast as cast_0, directed_by as directed_by_0, directed_by as directed_by_1, director as director_0, movie as movie_0, tv_series as tv_series_0 where cast_0.role = "Sci-Fi" and movie_0.release_year = 2010 and cast_0.msid = tv_series_0.sid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and directed_by_1.did = director_0.did and directed_by_1.msid = tv_series_0.sid
TOT: 0.9020516570341425; TR: 1.0; QF: 0.0; select movie_0.title from cast as cast_0, directed_by as directed_by_0, directed_by as directed_by_1, director as director_0, movie as movie_0, tv_series as tv_series_0 where cast_0.role = "Sci-Fi" and tv_series_0.release_year = 2010 and cast_0.msid = tv_series_0.sid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and directed_by_1.did = director_0.did and directed_by_1.msid = tv_series_0.sid


01:39  INFO: ================
01:39  INFO: QUERY 123: which movie has the most number of actors from China?
01:39  INFO: ================
01:41  INFO: ================
01:41  INFO: QUERY 128: What is the latest movie by "Jim Jarmusch"
01:41  INFO: ================
453. ROOT: ROOT; NA; ; (0) 
454. What: CMT; NA; ; (0) 
456. movie: NT; NA; ; (0) movie.title(1.0):| movie(1.0):| cast.role(0.95):Movie; Movie F; Movie AD; | company.name(0.95):Movie; Movies; Movie Movie; | keyword.keyword(0.83):movie-in-movie; b-movie; z-movie; | actor.name(0.76):| actor(0.76):| 
458. latest: FT; max; ; (0) 
459. Jim Jarmusch: VTTEXT; NA; ; (0) director.name(1.0):Jim Jarmusch; Jim Jarmusch; Tom Jarmusch; | actor.name(1.0):Jim Jarmusch; Jim Jarmusch; Tom Jarmusch; | producer.name(1.0):Jim Jarmusch; Jim Jarmusch; Tom Jarmusch; | writer.name(1.0):Jim Jarmusch; Jim Jarmusch; James R. Jarmusch; | movie.title(0.81):Behind Jim Jarmusch; Behind Jim Jarmusch; Focus on Jim Jarmusc; | cast.role(0.72):Jim Jarmusch's broth; Jim Jarmusch's broth; Jim Jamush; | tv_series.title(0.52):Earthworm Jim; Earthworm Jim; Jim Jam & Sunny; | 
What, WP
is, VBZ
the, DT
latest, JJS
movie, NN
by, IN
Jim Jarmusch, NNP
root(ROOT-0, What-1)
cop(What-1, is-2)
det(movie-5, the-3)
amod(movie-5, latest-4)
nsubj(What-1, movie-5)
case(Jim Jarmusch-7, by-6)
nmod(movie-5, Jim Jarmusch-7)

PARSE TREE:(453) ROOT ROOT
    (454) What CMT
        (456) movie NT
            (459) Jim Jarmusch VTTEXT


===========
TRANSLATIONS
===========

===========
RESULTS
===========


01:42  INFO: ================
01:42  INFO: QUERY 92: What is the number of movies produced in 2013?
01:42  INFO: ================
01:44  INFO: ================
01:44  INFO: QUERY 11: Where is the birthplace of "Kevin Spacey"
01:44  INFO: ================
01:45  INFO: ================
01:45  INFO: QUERY 63: Find all the female actors born in "New York City" after 1980
01:45  INFO: ================
02:11  INFO: ================
02:11  INFO: QUERY 89: How many movies did "Alfred Hitchcock" direct?
02:11  INFO: ================
02:12  INFO: ================
02:12  INFO: QUERY 3: Find all movies produced in 2015
02:12  INFO: ================
02:13  INFO: ================
02:13  INFO: QUERY 60: Find all actors from Austin born after 1980
02:13  INFO: ================
02:15  INFO: ================
02:15  INFO: QUERY 2: What is the nationality of the actress "Ellen Page"?
02:15  INFO: ================
02:17  INFO: ================
02:17  INFO: QUERY 110: find the number of actors from Iran who played in "Jim Jarmusch" movies
02:17  INFO: ================
529. ROOT: ROOT; NA; ; (0) 
530. find: CMT; NA; ; (0) 
531. number of: FT; count; ; (0) 
533. actors: NT; NA; ; (0) actor.name(1.0):| actor(1.0):| movie.title(0.95):Actors; Actors; Actors; | tv_series.title(0.95):Actors; Actor; The Actor Factor; | cast.role(0.95):Actors; Actors; Actors; | keyword.keyword(0.95):actors; actor-director; no-actors; | company.name(0.79):For Actors by Actors; Actors Loft; Actors Pool; | 
535. Iran: VTTEXT; NA; ; (0) movie.title(1.0):Iran; Iran!; Ei Iran; | director.nationality(1.0):Iran; Iran; Iran; | actor.nationality(1.0):Iran; Iran; Iran; | actor.name(1.0):Iran; Iran Torabi; Iran Daniel; | producer.nationality(1.0):Iran; Iran; Iran; | writer.nationality(1.0):Iran; Iran; Iran; | keyword.keyword(0.77):tehran-iran; shiraz-iran; iraq-iran-war; | 
537. played: NT; NA; ; (0) tv_series.num_of_seasons(0.67):| cast.role(0.66):| directed_by(0.64):| actor.name(0.63):| actor(0.63):| cast(0.63):| movie.title_aka(0.63):| 
539. movies: NT; NA; ; (0) movie.title(1.0):| movie(1.0):| cast.role(0.95):Movie; Movie F; Movie AD; | company.name(0.95):Movies; Movie; Movie Movie; | tv_series.title(0.84):Movies, Movies, Movi; Movie Mob; Moon Movies; | keyword.keyword(0.83):movie-in-movie; movies-about-movies; b-movie; | actor.name(0.76):| 
541. Jim Jarmusch: VTTEXT; NA; ; (0) director.name(1.0):Jim Jarmusch; Jim Jarmusch; Tom Jarmusch; | actor.name(1.0):Jim Jarmusch; Jim Jarmusch; Tom Jarmusch; | producer.name(1.0):Jim Jarmusch; Jim Jarmusch; Tom Jarmusch; | writer.name(1.0):Jim Jarmusch; Jim Jarmusch; James R. Jarmusch; | movie.title(0.81):Behind Jim Jarmusch; Behind Jim Jarmusch; Focus on Jim Jarmusc; | cast.role(0.72):Jim Jarmusch's broth; Jim Jarmusch's broth; Jim Jamush; | tv_series.title(0.52):Earthworm Jim; Earthworm Jim; Jim Jam & Sunny; | 
find, VB
the, DT
number, NN
of, IN
actors, NNS
from, IN
Iran, NNP
who, WP
played, VBN
in, IN
Jim Jarmusch, NNP
movies, NNS
root(ROOT-0, find-1)
det(number-3, the-2)
dobj(find-1, number-3)
case(actors-5, of-4)
nmod(number-3, actors-5)
case(Iran-7, from-6)
nmod(actors-5, Iran-7)
nsubj(played-9, who-8)
acl:relcl(number-3, played-9)
case(movies-12, in-10)
compound(movies-12, Jim Jarmusch-11)
nmod(played-9, movies-12)

PARSE TREE:(529) ROOT ROOT
    (530) find CMT
        (531) number of FT
            (533) actors NT
                (535) Iran VTTEXT
            (537) played NT
                (539) movies NT
                    (541) Jim Jarmusch VTTEXT


===========
TRANSLATIONS
===========
TOT: 0.8979007600118484; NL: 0.8979007600118484; NL+AG: 0.9683119354285215; NL+QF: 0.8979007600118484; rels: []; projs: [count(distinct(actor_0.name))]; preds: [movie_0.title = "Iran",movie_0.title = "Behind Jim Jarmusch"]; havings: []; superlative: []; blanks: 1
TOT: 0.8979007600118484; NL: 0.8979007600118484; NL+AG: 0.9683119354285215; NL+QF: 0.8979007600118484; rels: []; projs: [count(distinct(actor_0.name))]; preds: [director_0.nationality = "Iran",movie_0.title = "Behind Jim Jarmusch"]; havings: []; superlative: []; blanks: 1
TOT: 0.8979007600118484; NL: 0.8979007600118484; NL+AG: 0.9683119354285215; NL+QF: 0.8979007600118484; rels: []; projs: [count(distinct(actor_0.name))]; preds: [actor_0.nationality = "Iran",movie_0.title = "Behind Jim Jarmusch"]; havings: []; superlative: []; blanks: 1
TOT: 0.8979007600118484; NL: 0.8979007600118484; NL+AG: 0.9683119354285215; NL+QF: 0.8979007600118484; rels: []; projs: [count(distinct(actor_0.name))]; preds: [actor_0.name = "Iran",movie_0.title = "Behind Jim Jarmusch"]; havings: []; superlative: []; blanks: 1
TOT: 0.8979007600118484; NL: 0.8979007600118484; NL+AG: 0.9683119354285215; NL+QF: 0.8979007600118484; rels: []; projs: [count(distinct(actor_0.name))]; preds: [producer_0.nationality = "Iran",movie_0.title = "Behind Jim Jarmusch"]; havings: []; superlative: []; blanks: 1
TOT: 0.8979007600118484; NL: 0.8979007600118484; NL+AG: 0.9683119354285215; NL+QF: 0.8979007600118484; rels: []; projs: [count(distinct(actor_0.name))]; preds: [writer_0.nationality = "Iran",movie_0.title = "Behind Jim Jarmusch"]; havings: []; superlative: []; blanks: 1
TOT: 0.8689647470148877; NL: 0.8689647470148877; NL+AG: 0.9434392773485076; NL+QF: 0.8689647470148877; rels: []; projs: [count(distinct(actor_0.name))]; preds: [movie_0.title = "Iran",director_0.name = "Jim Jarmusch"]; havings: []; superlative: []; blanks: 2
TOT: 0.8689647470148877; NL: 0.8689647470148877; NL+AG: 0.9434392773485076; NL+QF: 0.8689647470148877; rels: []; projs: [count(distinct(actor_0.name))]; preds: [movie_0.title = "Iran",actor_0.name = "Jim Jarmusch"]; havings: []; superlative: []; blanks: 2
TOT: 0.8689647470148877; NL: 0.8689647470148877; NL+AG: 0.9434392773485076; NL+QF: 0.8689647470148877; rels: []; projs: [count(distinct(actor_0.name))]; preds: [movie_0.title = "Iran",producer_0.name = "Jim Jarmusch"]; havings: []; superlative: []; blanks: 2
TOT: 0.8689647470148877; NL: 0.8689647470148877; NL+AG: 0.9434392773485076; NL+QF: 0.8689647470148877; rels: []; projs: [count(distinct(actor_0.name))]; preds: [movie_0.title = "Iran",writer_0.name = "Jim Jarmusch"]; havings: []; superlative: []; blanks: 2
TOT: 0.8689647470148877; NL: 0.8689647470148877; NL+AG: 0.9434392773485076; NL+QF: 0.8689647470148877; rels: []; projs: [count(distinct(actor_0.name))]; preds: [director_0.nationality = "Iran",director_0.name = "Jim Jarmusch"]; havings: []; superlative: []; blanks: 2
TOT: 0.8689647470148877; NL: 0.8689647470148877; NL+AG: 0.9434392773485076; NL+QF: 0.8689647470148877; rels: []; projs: [count(distinct(actor_0.name))]; preds: [director_0.nationality = "Iran",actor_0.name = "Jim Jarmusch"]; havings: []; superlative: []; blanks: 2
TOT: 0.8689647470148877; NL: 0.8689647470148877; NL+AG: 0.9434392773485076; NL+QF: 0.8689647470148877; rels: []; projs: [count(distinct(actor_0.name))]; preds: [director_0.nationality = "Iran",producer_0.name = "Jim Jarmusch"]; havings: []; superlative: []; blanks: 2
TOT: 0.8689647470148877; NL: 0.8689647470148877; NL+AG: 0.9434392773485076; NL+QF: 0.8689647470148877; rels: []; projs: [count(distinct(actor_0.name))]; preds: [director_0.nationality = "Iran",writer_0.name = "Jim Jarmusch"]; havings: []; superlative: []; blanks: 2
TOT: 0.8689647470148877; NL: 0.8689647470148877; NL+AG: 0.9434392773485076; NL+QF: 0.8689647470148877; rels: []; projs: [count(distinct(actor_0.name))]; preds: [actor_0.nationality = "Iran",director_0.name = "Jim Jarmusch"]; havings: []; superlative: []; blanks: 2
TOT: 0.8689647470148877; NL: 0.8689647470148877; NL+AG: 0.9434392773485076; NL+QF: 0.8689647470148877; rels: []; projs: [count(distinct(actor_0.name))]; preds: [actor_0.nationality = "Iran",actor_0.name = "Jim Jarmusch"]; havings: []; superlative: []; blanks: 2
TOT: 0.8689647470148877; NL: 0.8689647470148877; NL+AG: 0.9434392773485076; NL+QF: 0.8689647470148877; rels: []; projs: [count(distinct(actor_0.name))]; preds: [actor_0.nationality = "Iran",producer_0.name = "Jim Jarmusch"]; havings: []; superlative: []; blanks: 2
TOT: 0.8689647470148877; NL: 0.8689647470148877; NL+AG: 0.9434392773485076; NL+QF: 0.8689647470148877; rels: []; projs: [count(distinct(actor_0.name))]; preds: [actor_0.nationality = "Iran",writer_0.name = "Jim Jarmusch"]; havings: []; superlative: []; blanks: 2
TOT: 0.8689647470148877; NL: 0.8689647470148877; NL+AG: 0.9434392773485076; NL+QF: 0.8689647470148877; rels: []; projs: [count(distinct(actor_0.name))]; preds: [actor_0.name = "Iran",director_0.name = "Jim Jarmusch"]; havings: []; superlative: []; blanks: 2
TOT: 0.8689647470148877; NL: 0.8689647470148877; NL+AG: 0.9434392773485076; NL+QF: 0.8689647470148877; rels: []; projs: [count(distinct(actor_0.name))]; preds: [actor_0.name = "Iran",actor_0.name = "Jim Jarmusch"]; havings: []; superlative: []; blanks: 2
TOT: 0.8689647470148877; NL: 0.8689647470148877; NL+AG: 0.9434392773485076; NL+QF: 0.8689647470148877; rels: []; projs: [count(distinct(actor_0.name))]; preds: [actor_0.name = "Iran",producer_0.name = "Jim Jarmusch"]; havings: []; superlative: []; blanks: 2
TOT: 0.8689647470148877; NL: 0.8689647470148877; NL+AG: 0.9434392773485076; NL+QF: 0.8689647470148877; rels: []; projs: [count(distinct(actor_0.name))]; preds: [actor_0.name = "Iran",writer_0.name = "Jim Jarmusch"]; havings: []; superlative: []; blanks: 2
TOT: 0.8689647470148877; NL: 0.8689647470148877; NL+AG: 0.9434392773485076; NL+QF: 0.8689647470148877; rels: []; projs: [count(distinct(actor_0.name))]; preds: [producer_0.nationality = "Iran",director_0.name = "Jim Jarmusch"]; havings: []; superlative: []; blanks: 2
TOT: 0.8689647470148877; NL: 0.8689647470148877; NL+AG: 0.9434392773485076; NL+QF: 0.8689647470148877; rels: []; projs: [count(distinct(actor_0.name))]; preds: [producer_0.nationality = "Iran",actor_0.name = "Jim Jarmusch"]; havings: []; superlative: []; blanks: 2
TOT: 0.8689647470148877; NL: 0.8689647470148877; NL+AG: 0.9434392773485076; NL+QF: 0.8689647470148877; rels: []; projs: [count(distinct(actor_0.name))]; preds: [producer_0.nationality = "Iran",producer_0.name = "Jim Jarmusch"]; havings: []; superlative: []; blanks: 2
TOT: 0.8689647470148877; NL: 0.8689647470148877; NL+AG: 0.9434392773485076; NL+QF: 0.8689647470148877; rels: []; projs: [count(distinct(actor_0.name))]; preds: [producer_0.nationality = "Iran",writer_0.name = "Jim Jarmusch"]; havings: []; superlative: []; blanks: 2
TOT: 0.8689647470148877; NL: 0.8689647470148877; NL+AG: 0.9434392773485076; NL+QF: 0.8689647470148877; rels: []; projs: [count(distinct(actor_0.name))]; preds: [writer_0.nationality = "Iran",director_0.name = "Jim Jarmusch"]; havings: []; superlative: []; blanks: 2
TOT: 0.8689647470148877; NL: 0.8689647470148877; NL+AG: 0.9434392773485076; NL+QF: 0.8689647470148877; rels: []; projs: [count(distinct(actor_0.name))]; preds: [writer_0.nationality = "Iran",actor_0.name = "Jim Jarmusch"]; havings: []; superlative: []; blanks: 2
TOT: 0.8689647470148877; NL: 0.8689647470148877; NL+AG: 0.9434392773485076; NL+QF: 0.8689647470148877; rels: []; projs: [count(distinct(actor_0.name))]; preds: [writer_0.nationality = "Iran",producer_0.name = "Jim Jarmusch"]; havings: []; superlative: []; blanks: 2
TOT: 0.8689647470148877; NL: 0.8689647470148877; NL+AG: 0.9434392773485076; NL+QF: 0.8689647470148877; rels: []; projs: [count(distinct(actor_0.name))]; preds: [writer_0.nationality = "Iran",writer_0.name = "Jim Jarmusch"]; havings: []; superlative: []; blanks: 2
TOT: 0.8689647470148877; NL: 0.8689647470148877; NL+AG: 0.950917492972429; NL+QF: 0.8689647470148877; rels: []; projs: [count(distinct(movie_0.title))]; preds: [movie_0.title = "Iran",director_0.name = "Jim Jarmusch"]; havings: []; superlative: []; blanks: 2
TOT: 0.8689647470148877; NL: 0.8689647470148877; NL+AG: 0.950917492972429; NL+QF: 0.8689647470148877; rels: []; projs: [count(distinct(movie_0.title))]; preds: [movie_0.title = "Iran",actor_0.name = "Jim Jarmusch"]; havings: []; superlative: []; blanks: 2
TOT: 0.8689647470148877; NL: 0.8689647470148877; NL+AG: 0.950917492972429; NL+QF: 0.8689647470148877; rels: []; projs: [count(distinct(movie_0.title))]; preds: [movie_0.title = "Iran",producer_0.name = "Jim Jarmusch"]; havings: []; superlative: []; blanks: 2
TOT: 0.8689647470148877; NL: 0.8689647470148877; NL+AG: 0.950917492972429; NL+QF: 0.8689647470148877; rels: []; projs: [count(distinct(movie_0.title))]; preds: [movie_0.title = "Iran",writer_0.name = "Jim Jarmusch"]; havings: []; superlative: []; blanks: 2
TOT: 0.8689647470148877; NL: 0.8689647470148877; NL+AG: 0.950917492972429; NL+QF: 0.8689647470148877; rels: []; projs: [count(distinct(movie_0.title))]; preds: [director_0.nationality = "Iran",director_0.name = "Jim Jarmusch"]; havings: []; superlative: []; blanks: 2
TOT: 0.8689647470148877; NL: 0.8689647470148877; NL+AG: 0.950917492972429; NL+QF: 0.8689647470148877; rels: []; projs: [count(distinct(movie_0.title))]; preds: [director_0.nationality = "Iran",actor_0.name = "Jim Jarmusch"]; havings: []; superlative: []; blanks: 2
TOT: 0.8689647470148877; NL: 0.8689647470148877; NL+AG: 0.950917492972429; NL+QF: 0.8689647470148877; rels: []; projs: [count(distinct(movie_0.title))]; preds: [director_0.nationality = "Iran",producer_0.name = "Jim Jarmusch"]; havings: []; superlative: []; blanks: 2
TOT: 0.8689647470148877; NL: 0.8689647470148877; NL+AG: 0.950917492972429; NL+QF: 0.8689647470148877; rels: []; projs: [count(distinct(movie_0.title))]; preds: [director_0.nationality = "Iran",writer_0.name = "Jim Jarmusch"]; havings: []; superlative: []; blanks: 2
TOT: 0.8689647470148877; NL: 0.8689647470148877; NL+AG: 0.950917492972429; NL+QF: 0.8689647470148877; rels: []; projs: [count(distinct(movie_0.title))]; preds: [actor_0.nationality = "Iran",director_0.name = "Jim Jarmusch"]; havings: []; superlative: []; blanks: 2
TOT: 0.8689647470148877; NL: 0.8689647470148877; NL+AG: 0.950917492972429; NL+QF: 0.8689647470148877; rels: []; projs: [count(distinct(movie_0.title))]; preds: [actor_0.nationality = "Iran",actor_0.name = "Jim Jarmusch"]; havings: []; superlative: []; blanks: 2
TOT: 0.8689647470148877; NL: 0.8689647470148877; NL+AG: 0.950917492972429; NL+QF: 0.8689647470148877; rels: []; projs: [count(distinct(movie_0.title))]; preds: [actor_0.nationality = "Iran",producer_0.name = "Jim Jarmusch"]; havings: []; superlative: []; blanks: 2
TOT: 0.8689647470148877; NL: 0.8689647470148877; NL+AG: 0.950917492972429; NL+QF: 0.8689647470148877; rels: []; projs: [count(distinct(movie_0.title))]; preds: [actor_0.nationality = "Iran",writer_0.name = "Jim Jarmusch"]; havings: []; superlative: []; blanks: 2
TOT: 0.8689647470148877; NL: 0.8689647470148877; NL+AG: 0.950917492972429; NL+QF: 0.8689647470148877; rels: []; projs: [count(distinct(movie_0.title))]; preds: [actor_0.name = "Iran",director_0.name = "Jim Jarmusch"]; havings: []; superlative: []; blanks: 2
TOT: 0.8689647470148877; NL: 0.8689647470148877; NL+AG: 0.950917492972429; NL+QF: 0.8689647470148877; rels: []; projs: [count(distinct(movie_0.title))]; preds: [actor_0.name = "Iran",actor_0.name = "Jim Jarmusch"]; havings: []; superlative: []; blanks: 2
TOT: 0.8689647470148877; NL: 0.8689647470148877; NL+AG: 0.950917492972429; NL+QF: 0.8689647470148877; rels: []; projs: [count(distinct(movie_0.title))]; preds: [actor_0.name = "Iran",producer_0.name = "Jim Jarmusch"]; havings: []; superlative: []; blanks: 2
TOT: 0.8689647470148877; NL: 0.8689647470148877; NL+AG: 0.950917492972429; NL+QF: 0.8689647470148877; rels: []; projs: [count(distinct(movie_0.title))]; preds: [actor_0.name = "Iran",writer_0.name = "Jim Jarmusch"]; havings: []; superlative: []; blanks: 2
TOT: 0.8689647470148877; NL: 0.8689647470148877; NL+AG: 0.950917492972429; NL+QF: 0.8689647470148877; rels: []; projs: [count(distinct(movie_0.title))]; preds: [producer_0.nationality = "Iran",director_0.name = "Jim Jarmusch"]; havings: []; superlative: []; blanks: 2
TOT: 0.8689647470148877; NL: 0.8689647470148877; NL+AG: 0.950917492972429; NL+QF: 0.8689647470148877; rels: []; projs: [count(distinct(movie_0.title))]; preds: [producer_0.nationality = "Iran",actor_0.name = "Jim Jarmusch"]; havings: []; superlative: []; blanks: 2
TOT: 0.8689647470148877; NL: 0.8689647470148877; NL+AG: 0.950917492972429; NL+QF: 0.8689647470148877; rels: []; projs: [count(distinct(movie_0.title))]; preds: [producer_0.nationality = "Iran",producer_0.name = "Jim Jarmusch"]; havings: []; superlative: []; blanks: 2
TOT: 0.8689647470148877; NL: 0.8689647470148877; NL+AG: 0.950917492972429; NL+QF: 0.8689647470148877; rels: []; projs: [count(distinct(movie_0.title))]; preds: [producer_0.nationality = "Iran",writer_0.name = "Jim Jarmusch"]; havings: []; superlative: []; blanks: 2
TOT: 0.8689647470148877; NL: 0.8689647470148877; NL+AG: 0.950917492972429; NL+QF: 0.8689647470148877; rels: []; projs: [count(distinct(movie_0.title))]; preds: [writer_0.nationality = "Iran",director_0.name = "Jim Jarmusch"]; havings: []; superlative: []; blanks: 2
TOT: 0.8689647470148877; NL: 0.8689647470148877; NL+AG: 0.950917492972429; NL+QF: 0.8689647470148877; rels: []; projs: [count(distinct(movie_0.title))]; preds: [writer_0.nationality = "Iran",actor_0.name = "Jim Jarmusch"]; havings: []; superlative: []; blanks: 2
TOT: 0.8689647470148877; NL: 0.8689647470148877; NL+AG: 0.950917492972429; NL+QF: 0.8689647470148877; rels: []; projs: [count(distinct(movie_0.title))]; preds: [writer_0.nationality = "Iran",producer_0.name = "Jim Jarmusch"]; havings: []; superlative: []; blanks: 2
TOT: 0.8689647470148877; NL: 0.8689647470148877; NL+AG: 0.950917492972429; NL+QF: 0.8689647470148877; rels: []; projs: [count(distinct(movie_0.title))]; preds: [writer_0.nationality = "Iran",writer_0.name = "Jim Jarmusch"]; havings: []; superlative: []; blanks: 2

===========
RESULTS
===========
TOT: 0.8368278053317484; TR: 0.8979007600118484; QF: 0.0; select count(distinct(actor_0.name)) from actor as actor_0, cast as cast_0, movie as movie_0 where actor_0.nationality = "Iran" and movie_0.title = "Behind Jim Jarmusch" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid
TOT: 0.8202353794363157; TR: 0.8979007600118484; QF: 0.0; select count(distinct(actor_0.name)) from actor as actor_0, cast as cast_0, movie as movie_0, writer as writer_0, written_by as written_by_0 where movie_0.title = "Behind Jim Jarmusch" and writer_0.nationality = "Iran" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and movie_0.mid = written_by_0.msid and writer_0.wid = written_by_0.wid
TOT: 0.8202353794363157; TR: 0.8979007600118484; QF: 0.0; select count(distinct(actor_0.name)) from actor as actor_0, cast as cast_0, directed_by as directed_by_0, director as director_0, movie as movie_0 where director_0.nationality = "Iran" and movie_0.title = "Behind Jim Jarmusch" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid
TOT: 0.8202353794363157; TR: 0.8979007600118484; QF: 0.0; select count(distinct(actor_0.name)) from actor as actor_0, cast as cast_0, cast as cast_1, movie as movie_0, movie as movie_1 where movie_0.title = "Iran" and movie_1.title = "Behind Jim Jarmusch" and actor_0.aid = cast_0.aid and actor_0.aid = cast_1.aid and cast_0.msid = movie_0.mid and cast_1.msid = movie_1.mid
TOT: 0.8202353794363157; TR: 0.8979007600118484; QF: 0.0; select count(distinct(actor_0.name)) from actor as actor_0, cast as cast_0, made_by as made_by_0, movie as movie_0, producer as producer_0 where movie_0.title = "Behind Jim Jarmusch" and producer_0.nationality = "Iran" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid
TOT: 0.8202353794363157; TR: 0.8979007600118484; QF: 0.0; select count(distinct(actor_0.name)) from actor as actor_0, actor as actor_1, cast as cast_0, cast as cast_1, movie as movie_0 where actor_1.name = "Iran" and movie_0.title = "Behind Jim Jarmusch" and actor_0.aid = cast_0.aid and actor_1.aid = cast_1.aid and cast_0.msid = movie_0.mid and cast_1.msid = movie_0.mid
TOT: 0.8122321942843318; TR: 0.8689647470148877; QF: 0.0; select count(distinct(movie_0.title)) from movie as movie_0, writer as writer_0, written_by as written_by_0 where writer_0.name = "Jim Jarmusch" and writer_0.nationality = "Iran" and movie_0.mid = written_by_0.msid and writer_0.wid = written_by_0.wid
TOT: 0.8122321942843318; TR: 0.8689647470148877; QF: 0.0; select count(distinct(movie_0.title)) from made_by as made_by_0, movie as movie_0, producer as producer_0 where producer_0.name = "Jim Jarmusch" and producer_0.nationality = "Iran" and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid
TOT: 0.8122321942843318; TR: 0.8689647470148877; QF: 0.0; select count(distinct(movie_0.title)) from actor as actor_0, cast as cast_0, movie as movie_0 where actor_0.name = "Jim Jarmusch" and actor_0.nationality = "Iran" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid
TOT: 0.8122321942843318; TR: 0.8689647470148877; QF: 0.0; select count(distinct(movie_0.title)) from directed_by as directed_by_0, director as director_0, movie as movie_0 where director_0.name = "Jim Jarmusch" and director_0.nationality = "Iran" and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid


02:22  INFO: ================
02:22  INFO: QUERY 31: Find all movies by directors born in "Los Angeles"
02:22  INFO: ================
02:23  INFO: ================
02:23  INFO: QUERY 106: How many movies did Netflix produce?
02:23  INFO: ================
553. ROOT: ROOT; NA; ; (0) 
554. produce: NT; NA; ; (0) made_by(0.74):| directed_by(0.69):| producer.name(0.68):| producer(0.68):| cast.role(0.63):| cast(0.63):| written_by(0.63):| 
555. movies: NT; NA; ; (0) movie.title(1.0):| movie(1.0):| cast.role(0.95):Movie; Movie F; Movie AD; | company.name(0.95):Movies; Movie; Movie Movie; | tv_series.title(0.84):Movies, Movies, Movi; Movie Mob; Moon Movies; | keyword.keyword(0.83):movie-in-movie; movies-about-movies; b-movie; | actor.name(0.76):| 
557. How many: CMT; count; ; (0) 
559. Netflix: VTTEXT; NA; ; (0) company.name(1.0):Netflix; Netflix; Netflix; | keyword.keyword(1.0):netflix; netflix-series; netflix-production; | tv_series.title(0.78):| tv_series(0.78):| cast.role(0.77):Netflix guy; | movie.title(0.74):| movie(0.74):| 
How, WRB
many, JJ
movies, NNS
did, VBD
Netflix, NNP
produce, VB
advmod(many-2, How-1)
amod(movies-3, many-2)
dobj(produce-6, movies-3)
aux(produce-6, did-4)
nsubj(produce-6, Netflix-5)
root(ROOT-0, produce-6)

PARSE TREE:(553) ROOT ROOT
    (557) How many CMT
        (555) movies NT
            (554) produce NT
                (559) Netflix VTTEXT


===========
TRANSLATIONS
===========
TOT: 0.9055419360254962; NL: 0.9055419360254962; NL+AG: 0.9623803610291506; NL+QF: 0.9055419360254962; rels: [made_by]; projs: [count(distinct(movie_0.title))]; preds: [company_0.name = "Netflix"]; havings: []; superlative: []; blanks: 0
TOT: 0.9055419360254962; NL: 0.9055419360254962; NL+AG: 0.9623803610291506; NL+QF: 0.9055419360254962; rels: [made_by]; projs: [count(distinct(movie_0.title))]; preds: [keyword_0.keyword = "netflix"]; havings: []; superlative: []; blanks: 0
TOT: 0.8852322584043497; NL: 0.8852322584043497; NL+AG: 0.9623803610291506; NL+QF: 0.8852322584043497; rels: [directed_by]; projs: [count(distinct(movie_0.title))]; preds: [company_0.name = "Netflix"]; havings: []; superlative: []; blanks: 0
TOT: 0.8852322584043497; NL: 0.8852322584043497; NL+AG: 0.9623803610291506; NL+QF: 0.8852322584043497; rels: [directed_by]; projs: [count(distinct(movie_0.title))]; preds: [keyword_0.keyword = "netflix"]; havings: []; superlative: []; blanks: 0
TOT: 0.8783733725393061; NL: 0.8783733725393061; NL+AG: 0.9623803610291506; NL+QF: 0.8783733725393061; rels: [producer]; projs: [count(distinct(movie_0.title))]; preds: [company_0.name = "Netflix"]; havings: []; superlative: []; blanks: 0
TOT: 0.8783733725393061; NL: 0.8783733725393061; NL+AG: 0.9623803610291506; NL+QF: 0.8783733725393061; rels: [producer]; projs: [count(distinct(movie_0.title))]; preds: [keyword_0.keyword = "netflix"]; havings: []; superlative: []; blanks: 0
TOT: 0.8662391053409028; NL: 0.8662391053409028; NL+AG: 0.9623803610291506; NL+QF: 0.8662391053409028; rels: []; projs: [count(distinct(movie_0.title))]; preds: [company_0.name = "Netflix"]; havings: []; superlative: []; blanks: 1
TOT: 0.8662391053409028; NL: 0.8662391053409028; NL+AG: 0.9623803610291506; NL+QF: 0.8662391053409028; rels: []; projs: [count(distinct(movie_0.title))]; preds: [keyword_0.keyword = "netflix"]; havings: []; superlative: []; blanks: 1
TOT: 0.8352193753498772; NL: 0.8352193753498772; NL+AG: 0.9177456737040814; NL+QF: 0.8352193753498772; rels: [made_by,tv_series]; projs: [count(distinct(movie_0.title))]; preds: []; havings: []; superlative: []; blanks: 0
TOT: 0.8316369478681359; NL: 0.8316369478681359; NL+AG: 0.9336787348794631; NL+QF: 0.8316369478681359; rels: [made_by]; projs: [count(distinct(movie_0.title))]; preds: [cast_0.role = "Netflix guy"]; havings: []; superlative: []; blanks: 0
TOT: 0.8271946403307422; NL: 0.8271946403307422; NL+AG: 0.9334884919988383; NL+QF: 0.8271946403307422; rels: [made_by]; projs: [count(distinct(actor_0.name))]; preds: [company_0.name = "Netflix"]; havings: []; superlative: []; blanks: 0
TOT: 0.8271946403307422; NL: 0.8271946403307422; NL+AG: 0.9334884919988383; NL+QF: 0.8271946403307422; rels: [made_by]; projs: [count(distinct(actor_0.name))]; preds: [keyword_0.keyword = "netflix"]; havings: []; superlative: []; blanks: 0

===========
RESULTS
===========
TOT: 0.8179011159303482; TR: 0.9055419360254962; QF: 0.0; select count(distinct(movie_0.title)) from keyword as keyword_0, made_by as made_by_0, made_by as made_by_1, movie as movie_0, producer as producer_0, tags as tags_0, tv_series as tv_series_0 where keyword_0.keyword = "netflix" and keyword_0.id = tags_0.kid and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid and made_by_1.msid = tv_series_0.sid and made_by_1.pid = producer_0.pid and tags_0.msid = tv_series_0.sid
TOT: 0.8179011159303482; TR: 0.9055419360254962; QF: 0.0; select count(distinct(movie_0.title)) from company as company_0, copyright as copyright_0, made_by as made_by_0, made_by as made_by_1, movie as movie_0, producer as producer_0, tv_series as tv_series_0 where company_0.name = "Netflix" and company_0.id = copyright_0.cid and copyright_0.msid = tv_series_0.sid and made_by_0.msid = tv_series_0.sid and made_by_0.pid = producer_0.pid and made_by_1.msid = movie_0.mid and made_by_1.pid = producer_0.pid
TOT: 0.8099153988614446; TR: 0.8662391053409028; QF: 0.0; select count(distinct(movie_0.title)) from keyword as keyword_0, movie as movie_0, tags as tags_0 where keyword_0.keyword = "netflix" and keyword_0.id = tags_0.kid and movie_0.mid = tags_0.msid
TOT: 0.8099153988614446; TR: 0.8662391053409028; QF: 0.0; select count(distinct(movie_0.title)) from company as company_0, copyright as copyright_0, movie as movie_0 where company_0.name = "Netflix" and company_0.id = copyright_0.cid and copyright_0.msid = movie_0.mid
TOT: 0.8006378899523737; TR: 0.8852322584043497; QF: 0.0; select count(distinct(movie_0.title)) from company as company_0, copyright as copyright_0, directed_by as directed_by_0, directed_by as directed_by_1, director as director_0, movie as movie_0, tv_series as tv_series_0 where company_0.name = "Netflix" and company_0.id = copyright_0.cid and copyright_0.msid = tv_series_0.sid and directed_by_0.did = director_0.did and directed_by_0.msid = tv_series_0.sid and directed_by_1.did = director_0.did and directed_by_1.msid = movie_0.mid
TOT: 0.8006378899523737; TR: 0.8852322584043497; QF: 0.0; select count(distinct(movie_0.title)) from directed_by as directed_by_0, directed_by as directed_by_1, director as director_0, keyword as keyword_0, movie as movie_0, tags as tags_0, tv_series as tv_series_0 where keyword_0.keyword = "netflix" and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and directed_by_1.did = director_0.did and directed_by_1.msid = tv_series_0.sid and keyword_0.id = tags_0.kid and tags_0.msid = tv_series_0.sid
TOT: 0.7844937098484438; TR: 0.8662391053409028; QF: 0.0; select count(distinct(movie_0.title)) from actor as actor_0, cast as cast_0, cast as cast_1, company as company_0, copyright as copyright_0, movie as movie_0, tv_series as tv_series_0 where company_0.name = "Netflix" and actor_0.aid = cast_0.aid and actor_0.aid = cast_1.aid and cast_0.msid = tv_series_0.sid and cast_1.msid = movie_0.mid and company_0.id = copyright_0.cid and copyright_0.msid = tv_series_0.sid
TOT: 0.7844937098484438; TR: 0.8662391053409028; QF: 0.0; select count(distinct(movie_0.title)) from company as company_0, copyright as copyright_0, movie as movie_0, tv_series as tv_series_0, writer as writer_0, written_by as written_by_0, written_by as written_by_1 where company_0.name = "Netflix" and company_0.id = copyright_0.cid and copyright_0.msid = tv_series_0.sid and movie_0.mid = written_by_1.msid and tv_series_0.sid = written_by_0.msid and writer_0.wid = written_by_0.wid and writer_0.wid = written_by_1.wid
TOT: 0.7844937098484438; TR: 0.8662391053409028; QF: 0.0; select count(distinct(movie_0.title)) from company as company_0, copyright as copyright_0, keyword as keyword_0, movie as movie_0, tags as tags_0, tags as tags_1, tv_series as tv_series_0 where company_0.name = "Netflix" and company_0.id = copyright_0.cid and copyright_0.msid = tv_series_0.sid and keyword_0.id = tags_0.kid and keyword_0.id = tags_1.kid and movie_0.mid = tags_1.msid and tags_0.msid = tv_series_0.sid
TOT: 0.7844937098484438; TR: 0.8662391053409028; QF: 0.0; select count(distinct(movie_0.title)) from classification as classification_0, classification as classification_1, genre as genre_0, keyword as keyword_0, movie as movie_0, tags as tags_0, tv_series as tv_series_0 where keyword_0.keyword = "netflix" and classification_0.gid = genre_0.gid and classification_0.msid = movie_0.mid and classification_1.gid = genre_0.gid and classification_1.msid = tv_series_0.sid and keyword_0.id = tags_0.kid and tags_0.msid = tv_series_0.sid


02:23  INFO: ================
02:23  INFO: QUERY 29: Who was the actor that played "Vinny Gambini" in the movie "My Cousin Vinny"?
02:23  INFO: ================
02:26  INFO: ================
02:26  INFO: QUERY 52: What company produced the series Scandal?
02:26  INFO: ================
02:27  INFO: ================
02:27  INFO: QUERY 87: What is the number of movies in which "Jennifer Aniston" acted after 2010?
02:27  INFO: ================
582. ROOT: ROOT; NA; ; (0) 
583. What: CMT; NA; ; (0) 
585. number of: FT; count; ; (0) 
587. movies: NT; NA; ; (0) movie.title(1.0):| movie(1.0):| cast.role(0.95):Movie; Movie F; Movie AD; | company.name(0.95):Movies; Movie; Movie Movie; | tv_series.title(0.84):Movies, Movies, Movi; Movie Mob; Moon Movies; | keyword.keyword(0.83):movie-in-movie; movies-about-movies; b-movie; | actor.name(0.76):| 
589. acted: NT; NA; ; (0) movie.release_year(0.63):| tv_series.release_year(0.63):| actor.name(0.62):| actor(0.62):| genre.genre(0.62):| genre(0.62):| made_by(0.61):| 
592. Jennifer Aniston: VTTEXT; NA; ; (0) director.name(1.0):Jennifer Aniston; Jennifer Aniston; Jennifer Aniston Pit; | actor.name(1.0):Jennifer Aniston; Jennifer Aniston; Jennifer Aniston Pit; | producer.name(1.0):Jennifer Aniston; Jennifer Aniston; Jennifer Aniston Pit; | cast.role(0.91):Jennifer Faniston; Jennifer Faniston; Jennifer Tangston; | writer.name(0.84):Jennifer An; Jennifer An; Jennifer Piston; | movie.title(0.84):Dating Jennifer Anis; Dating Jennifer Anis; Jennifer; | company.name(0.74):Jennifer Alliston Le; Jennifer Alliston Le; Dear Jennifer; | 
593. 2010: VTNUM; NA; ; (0) movie.release_year(1.0):2012; 2014; 2015; | tv_series.release_year(1.0):2014; 2014; 2013; | actor.birth_year(1.0):2011; 2013; 2013; | 
594. after: OT; >; ; (0) 
What, WP
is, VBZ
the, DT
number, NN
of, IN
movies, NNS
in, IN
which, WDT
Jennifer Aniston, NNP
acted, VBD
after, IN
2010, CD
root(ROOT-0, What-1)
cop(What-1, is-2)
det(number-4, the-3)
nsubj(What-1, number-4)
case(movies-6, of-5)
nmod(number-4, movies-6)
case(which-8, in-7)
nmod(acted-10, which-8)
nsubj(acted-10, Jennifer Aniston-9)
acl:relcl(movies-6, acted-10)
case(2010-12, after-11)
nmod(acted-10, 2010-12)

PARSE TREE:(582) ROOT ROOT
    (583) What CMT
        (585) number of FT
            (587) movies NT
                (589) acted NT
                    (592) Jennifer Aniston VTTEXT
                    (593) 2010 VTNUM
                        (594) after OT


===========
TRANSLATIONS
===========
TOT: 0.8979007600118484; NL: 0.8979007600118484; NL+AG: 0.9685296079391709; NL+QF: 0.8979007600118484; rels: []; projs: [count(distinct(movie_0.title))]; preds: [director_0.name = "Jennifer Aniston",movie_0.release_year > 2010]; havings: []; superlative: []; blanks: 1
TOT: 0.8979007600118484; NL: 0.8979007600118484; NL+AG: 0.9685296079391709; NL+QF: 0.8979007600118484; rels: []; projs: [count(distinct(movie_0.title))]; preds: [director_0.name = "Jennifer Aniston",tv_series_0.release_year > 2010]; havings: []; superlative: []; blanks: 1
TOT: 0.8979007600118484; NL: 0.8979007600118484; NL+AG: 0.9685296079391709; NL+QF: 0.8979007600118484; rels: []; projs: [count(distinct(movie_0.title))]; preds: [director_0.name = "Jennifer Aniston",actor_0.birth_year > 2010]; havings: []; superlative: []; blanks: 1
TOT: 0.8979007600118484; NL: 0.8979007600118484; NL+AG: 0.9685296079391709; NL+QF: 0.8979007600118484; rels: []; projs: [count(distinct(movie_0.title))]; preds: [actor_0.name = "Jennifer Aniston",movie_0.release_year > 2010]; havings: []; superlative: []; blanks: 1
TOT: 0.8979007600118484; NL: 0.8979007600118484; NL+AG: 0.9685296079391709; NL+QF: 0.8979007600118484; rels: []; projs: [count(distinct(movie_0.title))]; preds: [actor_0.name = "Jennifer Aniston",tv_series_0.release_year > 2010]; havings: []; superlative: []; blanks: 1
TOT: 0.8979007600118484; NL: 0.8979007600118484; NL+AG: 0.9685296079391709; NL+QF: 0.8979007600118484; rels: []; projs: [count(distinct(movie_0.title))]; preds: [actor_0.name = "Jennifer Aniston",actor_0.birth_year > 2010]; havings: []; superlative: []; blanks: 1
TOT: 0.8979007600118484; NL: 0.8979007600118484; NL+AG: 0.9685296079391709; NL+QF: 0.8979007600118484; rels: []; projs: [count(distinct(movie_0.title))]; preds: [producer_0.name = "Jennifer Aniston",movie_0.release_year > 2010]; havings: []; superlative: []; blanks: 1
TOT: 0.8979007600118484; NL: 0.8979007600118484; NL+AG: 0.9685296079391709; NL+QF: 0.8979007600118484; rels: []; projs: [count(distinct(movie_0.title))]; preds: [producer_0.name = "Jennifer Aniston",tv_series_0.release_year > 2010]; havings: []; superlative: []; blanks: 1
TOT: 0.8979007600118484; NL: 0.8979007600118484; NL+AG: 0.9685296079391709; NL+QF: 0.8979007600118484; rels: []; projs: [count(distinct(movie_0.title))]; preds: [producer_0.name = "Jennifer Aniston",actor_0.birth_year > 2010]; havings: []; superlative: []; blanks: 1
TOT: 0.8780983407516854; NL: 0.8780983407516854; NL+AG: 0.9579164940772603; NL+QF: 0.8780983407516854; rels: []; projs: [count(distinct(movie_0.title))]; preds: [cast_0.role = "Jennifer Faniston",movie_0.release_year > 2010]; havings: []; superlative: []; blanks: 1
TOT: 0.8780983407516854; NL: 0.8780983407516854; NL+AG: 0.9579164940772603; NL+QF: 0.8780983407516854; rels: []; projs: [count(distinct(movie_0.title))]; preds: [cast_0.role = "Jennifer Faniston",tv_series_0.release_year > 2010]; havings: []; superlative: []; blanks: 1
TOT: 0.8780983407516854; NL: 0.8780983407516854; NL+AG: 0.9579164940772603; NL+QF: 0.8780983407516854; rels: []; projs: [count(distinct(movie_0.title))]; preds: [cast_0.role = "Jennifer Faniston",actor_0.birth_year > 2010]; havings: []; superlative: []; blanks: 1

===========
RESULTS
===========
TOT: 0.8368278053317484; TR: 0.8979007600118484; QF: 0.0; select count(distinct(movie_0.title)) from made_by as made_by_0, movie as movie_0, producer as producer_0 where movie_0.release_year > 2010 and producer_0.name = "Jennifer Aniston" and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid
TOT: 0.8368278053317484; TR: 0.8979007600118484; QF: 0.0; select count(distinct(movie_0.title)) from actor as actor_0, cast as cast_0, movie as movie_0 where actor_0.name = "Jennifer Aniston" and movie_0.release_year > 2010 and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid
TOT: 0.8368278053317484; TR: 0.8979007600118484; QF: 0.0; select count(distinct(movie_0.title)) from actor as actor_0, cast as cast_0, movie as movie_0 where actor_0.birth_year > 2010 and actor_0.name = "Jennifer Aniston" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid
TOT: 0.8368278053317484; TR: 0.8979007600118484; QF: 0.0; select count(distinct(movie_0.title)) from directed_by as directed_by_0, director as director_0, movie as movie_0 where director_0.name = "Jennifer Aniston" and movie_0.release_year > 2010 and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid
TOT: 0.8365397042402174; TR: 0.8780983407516854; QF: 0.0; select count(distinct(movie_0.title)) from cast as cast_0, movie as movie_0 where cast_0.role = "Jennifer Faniston" and movie_0.release_year > 2010 and cast_0.msid = movie_0.mid
TOT: 0.8202353794363157; TR: 0.8979007600118484; QF: 0.0; select count(distinct(movie_0.title)) from made_by as made_by_0, made_by as made_by_1, movie as movie_0, producer as producer_0, tv_series as tv_series_0 where producer_0.name = "Jennifer Aniston" and tv_series_0.release_year > 2010 and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid and made_by_1.msid = tv_series_0.sid and made_by_1.pid = producer_0.pid
TOT: 0.8202353794363157; TR: 0.8979007600118484; QF: 0.0; select count(distinct(movie_0.title)) from directed_by as directed_by_0, directed_by as directed_by_1, director as director_0, movie as movie_0, tv_series as tv_series_0 where director_0.name = "Jennifer Aniston" and tv_series_0.release_year > 2010 and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and directed_by_1.did = director_0.did and directed_by_1.msid = tv_series_0.sid
TOT: 0.8202353794363157; TR: 0.8979007600118484; QF: 0.0; select count(distinct(movie_0.title)) from actor as actor_0, cast as cast_0, directed_by as directed_by_0, director as director_0, movie as movie_0 where actor_0.birth_year > 2010 and director_0.name = "Jennifer Aniston" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid
TOT: 0.8202353794363157; TR: 0.8979007600118484; QF: 0.0; select count(distinct(movie_0.title)) from actor as actor_0, cast as cast_0, cast as cast_1, movie as movie_0, tv_series as tv_series_0 where actor_0.name = "Jennifer Aniston" and tv_series_0.release_year > 2010 and actor_0.aid = cast_0.aid and actor_0.aid = cast_1.aid and cast_0.msid = movie_0.mid and cast_1.msid = tv_series_0.sid
TOT: 0.8202353794363157; TR: 0.8979007600118484; QF: 0.0; select count(distinct(movie_0.title)) from actor as actor_0, cast as cast_0, made_by as made_by_0, movie as movie_0, producer as producer_0 where actor_0.birth_year > 2010 and producer_0.name = "Jennifer Aniston" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid


02:29  INFO: ================
02:29  INFO: QUERY 66: Who is the actor playing "Alan Turing" in "The Imitation Game"?
02:29  INFO: ================
596. ROOT: ROOT; NA; ; (0) 
597. Who: CMT; NA; ; (0) 
599. Alan Turing: VTTEXT; NA; ; (0) cast.role(1.0):Alan Turing; Alan Turing; Alana Turing; | movie.title(0.79):Decoding Alan Turing; Decoding Alan Turing; Dear Alan: A Tribute; | director.name(0.76):Allen Turing; Alan Tang; Alan Tang; | actor.name(0.76):Allen Turing; Alan King; Alan King; | writer.name(0.76):Allen Turing; Alan Tang; Alan Tang; | producer.name(0.7):Alan Tang; Alan Tang; Alan King; | company.name(0.63):Allan Alan Pictures; Allan Alan Pictures; Alan Trading Company; | 
601. actor: NT; NA; ; (0) actor.name(1.0):| actor(1.0):| movie.title(0.95):Actor; Actor; Actor; | tv_series.title(0.95):Actor; Actors; The Actor Factor; | cast.role(0.95):Actors; Actors; Actors; | keyword.keyword(0.95):actors; actor-director; ex-actor; | movie.title(0.76):| 
602. playing: VTTEXT; NA; ; (0) movie.title(0.95):Playing; Playing; Playing 25; | cast.role(0.95):playing; Playing; Playing; | keyword.keyword(0.95):playing; playing-gin; playing-go; | tv_series.title(0.7):Playing Dead; Multi Playing; Playing Hooky; | tv_series.num_of_seasons(0.68):| movie.title_aka(0.66):| tv_series.title_aka(0.66):| 
603. The Imitation Game: VTTEXT; NA; ; (0) movie.title(1.0):The Imitation Game; The Imitation Game; The Imitation Game; | cast.role(0.84):The Imitation Game &; The Imitation Game &; The Imitation Game &; | tv_series.title(0.74):The Temptation Game; The Game; The Game; | keyword.keyword(0.69):imitation; imitation; camel-imitation; | company.name(0.67):Game Station, the; Game Station; Imagination Games; | actor.name(0.64):The Game; The Game; Simon Game; | producer.name(0.64):The Game; The Game; Simon Game; | 
Who, WP
is, VBZ
the, DT
actor, NN
playing, NN
Alan Turing, NN
in, IN
The Imitation Game, NNP
root(ROOT-0, Who-1)
cop(Who-1, is-2)
det(Alan Turing-6, the-3)
compound(Alan Turing-6, actor-4)
compound(Alan Turing-6, playing-5)
nsubj(Who-1, Alan Turing-6)
case(The Imitation Game-8, in-7)
nmod(Alan Turing-6, The Imitation Game-8)

PARSE TREE:(596) ROOT ROOT
    (597) Who CMT
        (599) Alan Turing VTTEXT
            (601) actor NT
            (602) playing VTTEXT
            (603) The Imitation Game VTTEXT


===========
TRANSLATIONS
===========
TOT: 0.839125174031199; NL: 0.839125174031199; NL+AG: 0.9370478431708781; NL+QF: 0.839125174031199; rels: []; projs: [actor_0.aid]; preds: [actor_0.name = "Allen Turing",movie_0.title = "The Imitation Game"]; havings: []; superlative: []; blanks: 1
TOT: 0.803374959172446; NL: 0.803374959172446; NL+AG: 0.912151489047044; NL+QF: 0.803374959172446; rels: []; projs: [actor_0.aid]; preds: [actor_0.name = "Allen Turing",cast_0.role = "The Imitation Game & Selma"]; havings: []; superlative: []; blanks: 1
TOT: 0.798706103448217; NL: 0.798706103448217; NL+AG: 0.9058946798781093; NL+QF: 0.798706103448217; rels: []; projs: [movie_0.mid]; preds: [movie_0.title = "Decoding Alan Turing",movie_0.title = "The Imitation Game"]; havings: []; superlative: []; blanks: 1
TOT: 0.7791075447937607; NL: 0.7791075447937607; NL+AG: 0.9058946798781095; NL+QF: 0.7791075447937607; rels: []; projs: [actor_0.aid]; preds: [actor_0.name = "Allen Turing",tv_series_0.title = "The Temptation Game"]; havings: []; superlative: []; blanks: 1
TOT: 0.7758393689196864; NL: 0.7758393689196864; NL+AG: 0.9357307115480753; NL+QF: 0.7758393689196864; rels: []; projs: [actor_0.aid]; preds: [actor_0.name = "Allen Turing",movie_0.title = "Playing",movie_0.title = "The Imitation Game"]; havings: []; superlative: []; blanks: 0
TOT: 0.7758393689196864; NL: 0.7758393689196864; NL+AG: 0.9357307115480753; NL+QF: 0.7758393689196864; rels: []; projs: [actor_0.aid]; preds: [actor_0.name = "Allen Turing",cast_0.role = "playing",movie_0.title = "The Imitation Game"]; havings: []; superlative: []; blanks: 0
TOT: 0.7758393689196864; NL: 0.7758393689196864; NL+AG: 0.9357307115480753; NL+QF: 0.7758393689196864; rels: []; projs: [actor_0.aid]; preds: [actor_0.name = "Allen Turing",keyword_0.keyword = "playing",movie_0.title = "The Imitation Game"]; havings: []; superlative: []; blanks: 0
TOT: 0.7664649045803634; NL: 0.7664649045803634; NL+AG: 0.8914768016420804; NL+QF: 0.7664649045803634; rels: []; projs: [movie_0.mid]; preds: [movie_0.title = "Decoding Alan Turing",movie_0.title = "The Imitation Game"]; havings: []; superlative: []; blanks: 2
TOT: 0.764677908739081; NL: 0.764677908739081; NL+AG: 0.8809983257542753; NL+QF: 0.764677908739081; rels: []; projs: [movie_0.mid]; preds: [movie_0.title = "Decoding Alan Turing",cast_0.role = "The Imitation Game & Selma"]; havings: []; superlative: []; blanks: 1
TOT: 0.7636720280626836; NL: 0.7636720280626836; NL+AG: 0.9058946798781095; NL+QF: 0.7636720280626836; rels: []; projs: [actor_0.aid]; preds: [actor_0.name = "Allen Turing",keyword_0.keyword = "imitation"]; havings: []; superlative: []; blanks: 1
TOT: 0.7583222669424385; NL: 0.7583222669424385; NL+AG: 0.9058946798781095; NL+QF: 0.7583222669424385; rels: []; projs: [actor_0.aid]; preds: [actor_0.name = "Allen Turing",company_0.name = "Game Station, the"]; havings: []; superlative: []; blanks: 1

===========
RESULTS
===========
TOT: 0.7868685572481965; TR: 0.839125174031199; QF: 0.0; select actor_0.aid from actor as actor_0, cast as cast_0, movie as movie_0 where actor_0.name = "Allen Turing" and movie_0.title = "The Imitation Game" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid
TOT: 0.7730248298978638; TR: 0.803374959172446; QF: 0.0; select actor_0.aid from actor as actor_0, cast as cast_0 where actor_0.name = "Allen Turing" and cast_0.role = "The Imitation Game & Selma" and actor_0.aid = cast_0.aid
TOT: 0.7614468682351957; TR: 0.839125174031199; QF: 0.0; select actor_0.aid from actor as actor_0, cast as cast_0, classification as classification_0, classification as classification_1, genre as genre_0, movie as movie_0, tv_series as tv_series_0 where actor_0.name = "Allen Turing" and movie_0.title = "The Imitation Game" and actor_0.aid = cast_0.aid and cast_0.msid = tv_series_0.sid and classification_0.gid = genre_0.gid and classification_0.msid = movie_0.mid and classification_1.gid = genre_0.gid and classification_1.msid = tv_series_0.sid
TOT: 0.7614468682351957; TR: 0.839125174031199; QF: 0.0; select actor_0.aid from actor as actor_0, cast as cast_0, company as company_0, copyright as copyright_0, copyright as copyright_1, movie as movie_0, tv_series as tv_series_0 where actor_0.name = "Allen Turing" and movie_0.title = "The Imitation Game" and actor_0.aid = cast_0.aid and cast_0.msid = tv_series_0.sid and company_0.id = copyright_0.cid and company_0.id = copyright_1.cid and copyright_0.msid = movie_0.mid and copyright_1.msid = tv_series_0.sid
TOT: 0.7614468682351957; TR: 0.839125174031199; QF: 0.0; select actor_0.aid from actor as actor_0, cast as cast_0, keyword as keyword_0, movie as movie_0, tags as tags_0, tags as tags_1, tv_series as tv_series_0 where actor_0.name = "Allen Turing" and movie_0.title = "The Imitation Game" and actor_0.aid = cast_0.aid and cast_0.msid = tv_series_0.sid and keyword_0.id = tags_0.kid and keyword_0.id = tags_1.kid and movie_0.mid = tags_0.msid and tags_1.msid = tv_series_0.sid
TOT: 0.7614468682351957; TR: 0.839125174031199; QF: 0.0; select actor_0.aid from actor as actor_0, cast as cast_0, directed_by as directed_by_0, directed_by as directed_by_1, director as director_0, movie as movie_0, tv_series as tv_series_0 where actor_0.name = "Allen Turing" and movie_0.title = "The Imitation Game" and actor_0.aid = cast_0.aid and cast_0.msid = tv_series_0.sid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and directed_by_1.did = director_0.did and directed_by_1.msid = tv_series_0.sid
TOT: 0.7614468682351957; TR: 0.839125174031199; QF: 0.0; select actor_0.aid from actor as actor_0, cast as cast_0, movie as movie_0, tv_series as tv_series_0, writer as writer_0, written_by as written_by_0, written_by as written_by_1 where actor_0.name = "Allen Turing" and movie_0.title = "The Imitation Game" and actor_0.aid = cast_0.aid and cast_0.msid = tv_series_0.sid and movie_0.mid = written_by_0.msid and tv_series_0.sid = written_by_1.msid and writer_0.wid = written_by_0.wid and writer_0.wid = written_by_1.wid
TOT: 0.7614468682351957; TR: 0.839125174031199; QF: 0.0; select actor_0.aid from actor as actor_0, cast as cast_0, made_by as made_by_0, made_by as made_by_1, movie as movie_0, producer as producer_0, tv_series as tv_series_0 where actor_0.name = "Allen Turing" and movie_0.title = "The Imitation Game" and actor_0.aid = cast_0.aid and cast_0.msid = tv_series_0.sid and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid and made_by_1.msid = tv_series_0.sid and made_by_1.pid = producer_0.pid
TOT: 0.7401323370295037; TR: 0.764677908739081; QF: 0.0; select movie_0.mid from cast as cast_0, movie as movie_0 where cast_0.role = "The Imitation Game & Selma" and movie_0.title = "Decoding Alan Turing" and cast_0.msid = movie_0.mid
TOT: 0.7359199213572292; TR: 0.798706103448217; QF: 0.0; select movie_0.mid from keyword as keyword_0, movie as movie_0, movie as movie_1, tags as tags_0, tags as tags_1 where movie_0.title = "Decoding Alan Turing" and movie_1.title = "The Imitation Game" and keyword_0.id = tags_0.kid and keyword_0.id = tags_1.kid and movie_0.mid = tags_0.msid and movie_1.mid = tags_1.msid


02:32  INFO: ================
02:32  INFO: QUERY 73: Find the actors who played in the movie "Camp X-Ray"
02:32  INFO: ================
02:33  INFO: ================
02:33  INFO: QUERY 120: Find the actor with the most number of films
02:33  INFO: ================
02:34  INFO: ================
02:34  INFO: QUERY 116: What movies have the same director as the movie "Revolutionary Road"?
02:34  INFO: ================
02:36  INFO: ================
02:36  INFO: QUERY 91: What is the number of movies directed by "Woody Allen" per year?
02:36  INFO: ================
02:39  INFO: ===== FOLD 2 =====
02:39  INFO: ===== Parsing Results =====
02:39  INFO: Total Queries: 0
02:39  INFO: Correctly Parsed: 0/0

02:39  INFO: ================
02:39  INFO: QUERY 93: How many movies did "Ronald Reagan" act in?
02:39  INFO: ================
653. ROOT: ROOT; NA; ; (0) 
654. act: NT; NA; ; (0) movie.release_year(0.63):| tv_series.release_year(0.63):| actor.name(0.62):| actor(0.62):| genre.genre(0.62):| genre(0.62):| made_by(0.61):| 
655. movies: NT; NA; ; (0) movie.title(1.0):| movie(1.0):| cast.role(0.95):Movie; Movie F; Movie AD; | company.name(0.95):Movies; Movie; Movie Movie; | tv_series.title(0.84):Movies, Movies, Movi; Movie Mob; Moon Movies; | keyword.keyword(0.83):movie-in-movie; movies-about-movies; b-movie; | actor.name(0.76):| 
657. How many: CMT; count; ; (0) 
659. Ronald Reagan: VTTEXT; NA; ; (0) actor.name(1.0):Ronald Reagan; Ronald Reagan; Lt. Ronald Reagan; | producer.name(1.0):Ronald Reagan; Ronald Reagan; Lt. Ronald Reagan; | cast.role(0.92):Donald Reagan; Ronald Regan; Ronald Regan; | movie.title(0.82):Saving Ronald Reagan; Saving Ronald Reagan; Altered Statesmen: R; | director.name(0.73):Ronald Remy; Ronald Remy; Ronald Ross; | writer.name(0.73):Ronald Remy; Ronald Reng; Ronald Jeans; | keyword.keyword(0.7):ronald-reagan-mask; ronald-reagan-mask; ronald-reagan-quotat; | 
How, WRB
many, JJ
movies, NNS
did, VBD
Ronald Reagan, NNP
act, VB
in, RP
advmod(many-2, How-1)
amod(movies-3, many-2)
dobj(act-6, movies-3)
aux(act-6, did-4)
nsubj(act-6, Ronald Reagan-5)
root(ROOT-0, act-6)
compound:prt(act-6, in-7)

PARSE TREE:(653) ROOT ROOT
    (657) How many CMT
        (655) movies NT
            (654) act NT
                (659) Ronald Reagan VTTEXT


===========
TRANSLATIONS
===========
TOT: 0.8662391053409028; NL: 0.8662391053409028; NL+AG: 0.9623803610291506; NL+QF: 0.8662391053409028; rels: []; projs: [count(distinct(movie_0.title))]; preds: [actor_0.name = "Ronald Reagan"]; havings: []; superlative: []; blanks: 1
TOT: 0.8662391053409028; NL: 0.8662391053409028; NL+AG: 0.9623803610291506; NL+QF: 0.8662391053409028; rels: []; projs: [count(distinct(movie_0.title))]; preds: [producer_0.name = "Ronald Reagan"]; havings: []; superlative: []; blanks: 1
TOT: 0.8414757379333423; NL: 0.8414757379333423; NL+AG: 0.9504213501334474; NL+QF: 0.8414757379333423; rels: []; projs: [count(distinct(movie_0.title))]; preds: [cast_0.role = "Donald Reagan"]; havings: []; superlative: []; blanks: 1
TOT: 0.8104361651112509; NL: 0.8104361651112509; NL+AG: 0.9363943428042699; NL+QF: 0.8104361651112509; rels: []; projs: [count(distinct(movie_0.title))]; preds: [movie_0.title = "Saving Ronald Reagan"]; havings: []; superlative: []; blanks: 1
TOT: 0.7912922821972069; NL: 0.7912922821972069; NL+AG: 0.9334884919988383; NL+QF: 0.7912922821972069; rels: []; projs: [count(distinct(actor_0.name))]; preds: [actor_0.name = "Ronald Reagan"]; havings: []; superlative: []; blanks: 1
TOT: 0.7912922821972069; NL: 0.7912922821972069; NL+AG: 0.9334884919988383; NL+QF: 0.7912922821972069; rels: []; projs: [count(distinct(actor_0.name))]; preds: [producer_0.name = "Ronald Reagan"]; havings: []; superlative: []; blanks: 1
TOT: 0.7800771801620782; NL: 0.7800771801620782; NL+AG: 0.9336787348794631; NL+QF: 0.7800771801620782; rels: []; projs: [count(distinct(movie_0.title))]; preds: [director_0.name = "Ronald Remy"]; havings: []; superlative: []; blanks: 1
TOT: 0.7800771801620782; NL: 0.7800771801620782; NL+AG: 0.9336787348794631; NL+QF: 0.7800771801620782; rels: []; projs: [count(distinct(movie_0.title))]; preds: [writer_0.name = "Ronald Remy"]; havings: []; superlative: []; blanks: 1
TOT: 0.7691884558771378; NL: 0.7691884558771378; NL+AG: 0.9336787348794631; NL+QF: 0.7691884558771378; rels: []; projs: [count(distinct(movie_0.title))]; preds: [keyword_0.keyword = "ronald-reagan-mask"]; havings: []; superlative: []; blanks: 1
TOT: 0.768671436070542; NL: 0.768671436070542; NL+AG: 0.9215294811031353; NL+QF: 0.768671436070542; rels: []; projs: [count(distinct(actor_0.name))]; preds: [cast_0.role = "Donald Reagan"]; havings: []; superlative: []; blanks: 1
TOT: 0.7645314458836486; NL: 0.7645314458836486; NL+AG: 0.9334884919988383; NL+QF: 0.7645314458836486; rels: []; projs: [count(distinct(tv_series_0.title))]; preds: [actor_0.name = "Ronald Reagan"]; havings: []; superlative: []; blanks: 1
TOT: 0.7645314458836486; NL: 0.7645314458836486; NL+AG: 0.9334884919988383; NL+QF: 0.7645314458836486; rels: []; projs: [count(distinct(tv_series_0.title))]; preds: [producer_0.name = "Ronald Reagan"]; havings: []; superlative: []; blanks: 1
TOT: 0.7645314458836486; NL: 0.7645314458836486; NL+AG: 0.9334884919988383; NL+QF: 0.7645314458836486; rels: []; projs: [count(distinct(tv_series_0.title))]; preds: [actor_0.name = "Ronald Reagan"]; havings: []; superlative: []; blanks: 1
TOT: 0.7645314458836486; NL: 0.7645314458836486; NL+AG: 0.9334884919988383; NL+QF: 0.7645314458836486; rels: []; projs: [count(distinct(tv_series_0.title))]; preds: [producer_0.name = "Ronald Reagan"]; havings: []; superlative: []; blanks: 1

===========
RESULTS
===========
TOT: 0.8099153988614446; TR: 0.8662391053409028; QF: 0.0; select count(distinct(movie_0.title)) from made_by as made_by_0, movie as movie_0, producer as producer_0 where producer_0.name = "Ronald Reagan" and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid
TOT: 0.8099153988614446; TR: 0.8662391053409028; QF: 0.0; select count(distinct(movie_0.title)) from actor as actor_0, cast as cast_0, movie as movie_0 where actor_0.name = "Ronald Reagan" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid
TOT: 0.8054104918446258; TR: 0.8414757379333423; QF: 0.0; select count(distinct(movie_0.title)) from cast as cast_0, movie as movie_0 where cast_0.role = "Donald Reagan" and cast_0.msid = movie_0.mid
TOT: 0.7844937098484438; TR: 0.8662391053409028; QF: 0.0; select count(distinct(movie_0.title)) from classification as classification_0, classification as classification_1, genre as genre_0, made_by as made_by_0, movie as movie_0, producer as producer_0, tv_series as tv_series_0 where producer_0.name = "Ronald Reagan" and classification_0.gid = genre_0.gid and classification_0.msid = movie_0.mid and classification_1.gid = genre_0.gid and classification_1.msid = tv_series_0.sid and made_by_0.msid = tv_series_0.sid and made_by_0.pid = producer_0.pid
TOT: 0.7844937098484438; TR: 0.8662391053409028; QF: 0.0; select count(distinct(movie_0.title)) from actor as actor_0, cast as cast_0, classification as classification_0, classification as classification_1, genre as genre_0, movie as movie_0, tv_series as tv_series_0 where actor_0.name = "Ronald Reagan" and actor_0.aid = cast_0.aid and cast_0.msid = tv_series_0.sid and classification_0.gid = genre_0.gid and classification_0.msid = movie_0.mid and classification_1.gid = genre_0.gid and classification_1.msid = tv_series_0.sid
TOT: 0.7844937098484438; TR: 0.8662391053409028; QF: 0.0; select count(distinct(movie_0.title)) from keyword as keyword_0, made_by as made_by_0, movie as movie_0, producer as producer_0, tags as tags_0, tags as tags_1, tv_series as tv_series_0 where producer_0.name = "Ronald Reagan" and keyword_0.id = tags_0.kid and keyword_0.id = tags_1.kid and made_by_0.msid = tv_series_0.sid and made_by_0.pid = producer_0.pid and movie_0.mid = tags_0.msid and tags_1.msid = tv_series_0.sid
TOT: 0.7844937098484438; TR: 0.8662391053409028; QF: 0.0; select count(distinct(movie_0.title)) from made_by as made_by_0, movie as movie_0, producer as producer_0, tv_series as tv_series_0, writer as writer_0, written_by as written_by_0, written_by as written_by_1 where producer_0.name = "Ronald Reagan" and made_by_0.msid = tv_series_0.sid and made_by_0.pid = producer_0.pid and movie_0.mid = written_by_0.msid and tv_series_0.sid = written_by_1.msid and writer_0.wid = written_by_0.wid and writer_0.wid = written_by_1.wid
TOT: 0.7844937098484438; TR: 0.8662391053409028; QF: 0.0; select count(distinct(movie_0.title)) from directed_by as directed_by_0, directed_by as directed_by_1, director as director_0, made_by as made_by_0, movie as movie_0, producer as producer_0, tv_series as tv_series_0 where producer_0.name = "Ronald Reagan" and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and directed_by_1.did = director_0.did and directed_by_1.msid = tv_series_0.sid and made_by_0.msid = tv_series_0.sid and made_by_0.pid = producer_0.pid
TOT: 0.7844937098484438; TR: 0.8662391053409028; QF: 0.0; select count(distinct(movie_0.title)) from actor as actor_0, cast as cast_0, company as company_0, copyright as copyright_0, copyright as copyright_1, movie as movie_0, tv_series as tv_series_0 where actor_0.name = "Ronald Reagan" and actor_0.aid = cast_0.aid and cast_0.msid = tv_series_0.sid and company_0.id = copyright_0.cid and company_0.id = copyright_1.cid and copyright_0.msid = movie_0.mid and copyright_1.msid = tv_series_0.sid
TOT: 0.7844937098484438; TR: 0.8662391053409028; QF: 0.0; select count(distinct(movie_0.title)) from actor as actor_0, cast as cast_0, keyword as keyword_0, movie as movie_0, tags as tags_0, tags as tags_1, tv_series as tv_series_0 where actor_0.name = "Ronald Reagan" and actor_0.aid = cast_0.aid and cast_0.msid = tv_series_0.sid and keyword_0.id = tags_0.kid and keyword_0.id = tags_1.kid and movie_0.mid = tags_0.msid and tags_1.msid = tv_series_0.sid


02:40  INFO: ================
02:40  INFO: QUERY 122: Find the movie which is classified in the most number of genres
02:40  INFO: ================
02:41  INFO: ================
02:41  INFO: QUERY 51: What are the series in which "Scott Foley" is an actor?
02:41  INFO: ================
02:43  INFO: ================
02:43  INFO: QUERY 82: which company funded the "Mickey Mouse" series
02:43  INFO: ================
02:44  INFO: ================
02:44  INFO: QUERY 58: Find all movies in which "Robin Wright" appears
02:44  INFO: ================
696. ROOT: ROOT; NA; ; (0) 
697. Find: CMT; NA; ; (0) 
698. movies: NT; NA; all; (0) movie.title(1.0):| movie(1.0):| cast.role(0.95):Movie; Movie F; Movie AD; | company.name(0.95):Movies; Movie; Movie Movie; | tv_series.title(0.84):Movies, Movies, Movi; Movie Mob; Moon Movies; | keyword.keyword(0.83):movie-in-movie; movies-about-movies; b-movie; | actor.name(0.76):| 
700. appears: NT; NA; ; (0) made_by(0.67):| written_by(0.63):| cast.role(0.63):| cast(0.63):| movie.release_year(0.62):| tv_series.release_year(0.62):| directed_by(0.61):| 
703. Robin Wright: VTTEXT; NA; ; (0) director.name(1.0):Robin Wright; Robin Wright; Robin Wright-Penn; | actor.name(1.0):Robin Wright; Robin Wright; Robin Wright; | producer.name(1.0):Robin Wright; Robin Wright; Robin Wright-Penn; | writer.name(0.8):Rob Wright; Quinn Wright; Kevin Wright; | cast.role(0.76):Tobi Wright; Tobi Wright; Lorin Wright; | movie.title(0.74):'In Wrong' Wright; Mr. Wright in Wrong; Wrong Wrights; | tv_series.title(0.7):Doobie Wright; Wrights Wrongs; Robin; | 
Find, VB
all, DT
movies, NNS
in, IN
which, WDT
Robin Wright, NNP
appears, VBZ
root(ROOT-0, Find-1)
det(movies-3, all-2)
dobj(Find-1, movies-3)
case(which-5, in-4)
nmod(appears-7, which-5)
nsubj(appears-7, Robin Wright-6)
acl:relcl(movies-3, appears-7)

PARSE TREE:(696) ROOT ROOT
    (697) Find CMT
        (698) movies NT
            (700) appears NT
                (703) Robin Wright VTTEXT


===========
TRANSLATIONS
===========
TOT: 0.8767285557917976; NL: 0.8767285557917976; NL+AG: 0.9628121638266046; NL+QF: 0.8767285557917976; rels: [made_by]; projs: [movie_0.title]; preds: [director_0.name = "Robin Wright"]; havings: []; superlative: []; blanks: 0
TOT: 0.8767285557917976; NL: 0.8767285557917976; NL+AG: 0.9628121638266046; NL+QF: 0.8767285557917976; rels: [made_by]; projs: [movie_0.title]; preds: [actor_0.name = "Robin Wright"]; havings: []; superlative: []; blanks: 0
TOT: 0.8767285557917976; NL: 0.8767285557917976; NL+AG: 0.9628121638266046; NL+QF: 0.8767285557917976; rels: [made_by]; projs: [movie_0.title]; preds: [producer_0.name = "Robin Wright"]; havings: []; superlative: []; blanks: 0
TOT: 0.8662391053409028; NL: 0.8662391053409028; NL+AG: 0.9628121638266046; NL+QF: 0.8662391053409028; rels: []; projs: [movie_0.title]; preds: [director_0.name = "Robin Wright"]; havings: []; superlative: []; blanks: 1
TOT: 0.8662391053409028; NL: 0.8662391053409028; NL+AG: 0.9628121638266046; NL+QF: 0.8662391053409028; rels: []; projs: [movie_0.title]; preds: [actor_0.name = "Robin Wright"]; havings: []; superlative: []; blanks: 1
TOT: 0.8662391053409028; NL: 0.8662391053409028; NL+AG: 0.9628121638266046; NL+QF: 0.8662391053409028; rels: []; projs: [movie_0.title]; preds: [producer_0.name = "Robin Wright"]; havings: []; superlative: []; blanks: 1
TOT: 0.8152471364450296; NL: 0.8152471364450296; NL+AG: 0.9396595043325072; NL+QF: 0.8152471364450296; rels: [made_by]; projs: [movie_0.title]; preds: [writer_0.name = "Rob Wright"]; havings: []; superlative: []; blanks: 0
TOT: 0.8054932686298641; NL: 0.8054932686298641; NL+AG: 0.9396595043325072; NL+QF: 0.8054932686298641; rels: []; projs: [movie_0.title]; preds: [writer_0.name = "Rob Wright"]; havings: []; superlative: []; blanks: 1
TOT: 0.8010562875787812; NL: 0.8010562875787812; NL+AG: 0.9391833540180654; NL+QF: 0.8010562875787812; rels: [made_by]; projs: [movie_0.title]; preds: [cast_0.role = "Tobi Wright"]; havings: []; superlative: []; blanks: 0
TOT: 0.8008741876262127; NL: 0.8008741876262127; NL+AG: 0.9394249139348947; NL+QF: 0.8008741876262127; rels: [made_by]; projs: [actor_0.name]; preds: [director_0.name = "Robin Wright"]; havings: []; superlative: []; blanks: 0
TOT: 0.8008741876262127; NL: 0.8008741876262127; NL+AG: 0.9394249139348947; NL+QF: 0.8008741876262127; rels: [made_by]; projs: [actor_0.name]; preds: [actor_0.name = "Robin Wright"]; havings: []; superlative: []; blanks: 0
TOT: 0.8008741876262127; NL: 0.8008741876262127; NL+AG: 0.9394249139348947; NL+QF: 0.8008741876262127; rels: [made_by]; projs: [actor_0.name]; preds: [producer_0.name = "Robin Wright"]; havings: []; superlative: []; blanks: 0

===========
RESULTS
===========
TOT: 0.8188314317447053; TR: 0.8767285557917976; QF: 0.0; select movie_0.title from made_by as made_by_0, movie as movie_0, producer as producer_0 where producer_0.name = "Robin Wright" and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid
TOT: 0.8099153988614446; TR: 0.8662391053409028; QF: 0.0; select movie_0.title from actor as actor_0, cast as cast_0, movie as movie_0 where actor_0.name = "Robin Wright" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid
TOT: 0.8099153988614446; TR: 0.8662391053409028; QF: 0.0; select movie_0.title from directed_by as directed_by_0, director as director_0, movie as movie_0 where director_0.name = "Robin Wright" and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid
TOT: 0.7934097427317045; TR: 0.8767285557917976; QF: 0.0; select movie_0.title from classification as classification_0, classification as classification_1, genre as genre_0, made_by as made_by_0, movie as movie_0, producer as producer_0, tv_series as tv_series_0 where producer_0.name = "Robin Wright" and classification_0.gid = genre_0.gid and classification_0.msid = movie_0.mid and classification_1.gid = genre_0.gid and classification_1.msid = tv_series_0.sid and made_by_0.msid = tv_series_0.sid and made_by_0.pid = producer_0.pid
TOT: 0.7934097427317045; TR: 0.8767285557917976; QF: 0.0; select movie_0.title from keyword as keyword_0, made_by as made_by_0, movie as movie_0, producer as producer_0, tags as tags_0, tags as tags_1, tv_series as tv_series_0 where producer_0.name = "Robin Wright" and keyword_0.id = tags_0.kid and keyword_0.id = tags_1.kid and made_by_0.msid = tv_series_0.sid and made_by_0.pid = producer_0.pid and movie_0.mid = tags_0.msid and tags_1.msid = tv_series_0.sid
TOT: 0.7934097427317045; TR: 0.8767285557917976; QF: 0.0; select movie_0.title from made_by as made_by_0, movie as movie_0, producer as producer_0, tv_series as tv_series_0, writer as writer_0, written_by as written_by_0, written_by as written_by_1 where producer_0.name = "Robin Wright" and made_by_0.msid = tv_series_0.sid and made_by_0.pid = producer_0.pid and movie_0.mid = written_by_0.msid and tv_series_0.sid = written_by_1.msid and writer_0.wid = written_by_0.wid and writer_0.wid = written_by_1.wid
TOT: 0.7934097427317045; TR: 0.8767285557917976; QF: 0.0; select movie_0.title from directed_by as directed_by_0, directed_by as directed_by_1, director as director_0, made_by as made_by_0, movie as movie_0, producer as producer_0, tv_series as tv_series_0 where producer_0.name = "Robin Wright" and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and directed_by_1.did = director_0.did and directed_by_1.msid = tv_series_0.sid and made_by_0.msid = tv_series_0.sid and made_by_0.pid = producer_0.pid
TOT: 0.7934097427317045; TR: 0.8767285557917976; QF: 0.0; select movie_0.title from directed_by as directed_by_0, director as director_0, made_by as made_by_0, made_by as made_by_1, movie as movie_0, producer as producer_0, tv_series as tv_series_0 where director_0.name = "Robin Wright" and directed_by_0.did = director_0.did and directed_by_0.msid = tv_series_0.sid and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid and made_by_1.msid = tv_series_0.sid and made_by_1.pid = producer_0.pid
TOT: 0.7934097427317045; TR: 0.8767285557917976; QF: 0.0; select movie_0.title from company as company_0, copyright as copyright_0, copyright as copyright_1, made_by as made_by_0, movie as movie_0, producer as producer_0, tv_series as tv_series_0 where producer_0.name = "Robin Wright" and company_0.id = copyright_0.cid and company_0.id = copyright_1.cid and copyright_0.msid = movie_0.mid and copyright_1.msid = tv_series_0.sid and made_by_0.msid = tv_series_0.sid and made_by_0.pid = producer_0.pid
TOT: 0.7934097427317045; TR: 0.8767285557917976; QF: 0.0; select movie_0.title from actor as actor_0, cast as cast_0, cast as cast_1, made_by as made_by_0, movie as movie_0, producer as producer_0, tv_series as tv_series_0 where producer_0.name = "Robin Wright" and actor_0.aid = cast_0.aid and actor_0.aid = cast_1.aid and cast_0.msid = movie_0.mid and cast_1.msid = tv_series_0.sid and made_by_0.msid = tv_series_0.sid and made_by_0.pid = producer_0.pid


02:46  INFO: ================
02:46  INFO: QUERY 78: where is the director of "The Past" from
02:46  INFO: ================
705. ROOT: ROOT; NA; ; (0) 
707. where: CMT; NA; ; (0) director.birth_city(1.0):| actor.birth_city(1.0):| producer.birth_city(1.0):| writer.birth_city(1.0):| 
708. director: NT; NA; ; (0) director.name(1.0):| director(1.0):| movie.title(0.95):Director; Director; Director; | producer.name(0.95):Director; Co-Director; Director GT; | company.name(0.95):Director; Directors; Directors; | writer.name(0.95):Director; Director X; Director X.; | tv_series.title(0.86):Directors on Directo; The Directors; The Directors; | 
710. The Past: VTTEXT; NA; ; (0) movie.title(1.0):The Past; The Past; Fix the Past; | cast.role(1.0):The Past; The Past; The Past; | keyword.keyword(0.71):the-past; past; stuck-in-the-past; | tv_series.title(0.71):Ancyal/The Past; Out of the Past; Out of the Past; | company.name(0.62):Shadows of the Past; Future Past Films; Past Due Pictures; | director.name(0.62):The Nostalgia Plotho; | actor.name(0.62):The Nostalgia Plotho; Melodie Past; Pavel Past; | 
where, WRB
is, VBZ
the, DT
director, NN
of, IN
The Past, NNP
from, IN
advmod(is-2, where-1)
root(ROOT-0, is-2)
det(director-4, the-3)
nsubj(is-2, director-4)
case(The Past-6, of-5)
nmod(director-4, The Past-6)
dep(is-2, from-7)

PARSE TREE:(705) ROOT ROOT
    (707) where CMT
        (708) director NT
            (710) The Past VTTEXT


===========
TRANSLATIONS
===========
TOT: 0.8662391053409028; NL: 0.8662391053409028; NL+AG: 0.9628121638266046; NL+QF: 0.8662391053409028; rels: []; projs: [director_0.name]; preds: [movie_0.title = "The Past"]; havings: []; superlative: []; blanks: 1
TOT: 0.8662391053409028; NL: 0.8662391053409028; NL+AG: 0.9628121638266046; NL+QF: 0.8662391053409028; rels: []; projs: [director_0.name]; preds: [cast_0.role = "The Past"]; havings: []; superlative: []; blanks: 1
TOT: 0.8662391053409028; NL: 0.8662391053409028; NL+AG: 0.9628121638266046; NL+QF: 0.8662391053409028; rels: []; projs: [director_0.birth_city]; preds: [movie_0.title = "The Past"]; havings: []; superlative: []; blanks: 1
TOT: 0.8662391053409028; NL: 0.8662391053409028; NL+AG: 0.9628121638266046; NL+QF: 0.8662391053409028; rels: []; projs: [director_0.birth_city]; preds: [cast_0.role = "The Past"]; havings: []; superlative: []; blanks: 1
TOT: 0.8662391053409028; NL: 0.8662391053409028; NL+AG: 0.9628121638266046; NL+QF: 0.8662391053409028; rels: []; projs: [actor_0.birth_city]; preds: [movie_0.title = "The Past"]; havings: []; superlative: []; blanks: 1
TOT: 0.8662391053409028; NL: 0.8662391053409028; NL+AG: 0.9628121638266046; NL+QF: 0.8662391053409028; rels: []; projs: [actor_0.birth_city]; preds: [cast_0.role = "The Past"]; havings: []; superlative: []; blanks: 1
TOT: 0.8662391053409028; NL: 0.8662391053409028; NL+AG: 0.9628121638266046; NL+QF: 0.8662391053409028; rels: []; projs: [producer_0.birth_city]; preds: [movie_0.title = "The Past"]; havings: []; superlative: []; blanks: 1
TOT: 0.8662391053409028; NL: 0.8662391053409028; NL+AG: 0.9628121638266046; NL+QF: 0.8662391053409028; rels: []; projs: [producer_0.birth_city]; preds: [cast_0.role = "The Past"]; havings: []; superlative: []; blanks: 1
TOT: 0.8662391053409028; NL: 0.8662391053409028; NL+AG: 0.9628121638266046; NL+QF: 0.8662391053409028; rels: []; projs: [writer_0.birth_city]; preds: [movie_0.title = "The Past"]; havings: []; superlative: []; blanks: 1
TOT: 0.8662391053409028; NL: 0.8662391053409028; NL+AG: 0.9628121638266046; NL+QF: 0.8662391053409028; rels: []; projs: [writer_0.birth_city]; preds: [cast_0.role = "The Past"]; havings: []; superlative: []; blanks: 1
TOT: 0.7802453753539424; NL: 0.7802453753539424; NL+AG: 0.9788767379097759; NL+QF: 0.7802453753539424; rels: []; projs: [director_0.birth_city]; preds: [movie_0.title = "Director",movie_0.title = "The Past"]; havings: []; superlative: []; blanks: 0
TOT: 0.7802453753539424; NL: 0.7802453753539424; NL+AG: 0.9788767379097759; NL+QF: 0.7802453753539424; rels: []; projs: [director_0.birth_city]; preds: [movie_0.title = "Director",cast_0.role = "The Past"]; havings: []; superlative: []; blanks: 0
TOT: 0.7802453753539424; NL: 0.7802453753539424; NL+AG: 0.9788767379097759; NL+QF: 0.7802453753539424; rels: []; projs: [director_0.birth_city]; preds: [producer_0.name = "Director",movie_0.title = "The Past"]; havings: []; superlative: []; blanks: 0
TOT: 0.7802453753539424; NL: 0.7802453753539424; NL+AG: 0.9788767379097759; NL+QF: 0.7802453753539424; rels: []; projs: [director_0.birth_city]; preds: [producer_0.name = "Director",cast_0.role = "The Past"]; havings: []; superlative: []; blanks: 0
TOT: 0.7802453753539424; NL: 0.7802453753539424; NL+AG: 0.9788767379097759; NL+QF: 0.7802453753539424; rels: []; projs: [director_0.birth_city]; preds: [company_0.name = "Director",movie_0.title = "The Past"]; havings: []; superlative: []; blanks: 0
TOT: 0.7802453753539424; NL: 0.7802453753539424; NL+AG: 0.9788767379097759; NL+QF: 0.7802453753539424; rels: []; projs: [director_0.birth_city]; preds: [company_0.name = "Director",cast_0.role = "The Past"]; havings: []; superlative: []; blanks: 0
TOT: 0.7802453753539424; NL: 0.7802453753539424; NL+AG: 0.9788767379097759; NL+QF: 0.7802453753539424; rels: []; projs: [director_0.birth_city]; preds: [writer_0.name = "Director",movie_0.title = "The Past"]; havings: []; superlative: []; blanks: 0
TOT: 0.7802453753539424; NL: 0.7802453753539424; NL+AG: 0.9788767379097759; NL+QF: 0.7802453753539424; rels: []; projs: [director_0.birth_city]; preds: [writer_0.name = "Director",cast_0.role = "The Past"]; havings: []; superlative: []; blanks: 0
TOT: 0.7802453753539424; NL: 0.7802453753539424; NL+AG: 0.9788767379097759; NL+QF: 0.7802453753539424; rels: []; projs: [actor_0.birth_city]; preds: [movie_0.title = "Director",movie_0.title = "The Past"]; havings: []; superlative: []; blanks: 0
TOT: 0.7802453753539424; NL: 0.7802453753539424; NL+AG: 0.9788767379097759; NL+QF: 0.7802453753539424; rels: []; projs: [actor_0.birth_city]; preds: [movie_0.title = "Director",cast_0.role = "The Past"]; havings: []; superlative: []; blanks: 0
TOT: 0.7802453753539424; NL: 0.7802453753539424; NL+AG: 0.9788767379097759; NL+QF: 0.7802453753539424; rels: []; projs: [actor_0.birth_city]; preds: [producer_0.name = "Director",movie_0.title = "The Past"]; havings: []; superlative: []; blanks: 0
TOT: 0.7802453753539424; NL: 0.7802453753539424; NL+AG: 0.9788767379097759; NL+QF: 0.7802453753539424; rels: []; projs: [actor_0.birth_city]; preds: [producer_0.name = "Director",cast_0.role = "The Past"]; havings: []; superlative: []; blanks: 0
TOT: 0.7802453753539424; NL: 0.7802453753539424; NL+AG: 0.9788767379097759; NL+QF: 0.7802453753539424; rels: []; projs: [actor_0.birth_city]; preds: [company_0.name = "Director",movie_0.title = "The Past"]; havings: []; superlative: []; blanks: 0
TOT: 0.7802453753539424; NL: 0.7802453753539424; NL+AG: 0.9788767379097759; NL+QF: 0.7802453753539424; rels: []; projs: [actor_0.birth_city]; preds: [company_0.name = "Director",cast_0.role = "The Past"]; havings: []; superlative: []; blanks: 0
TOT: 0.7802453753539424; NL: 0.7802453753539424; NL+AG: 0.9788767379097759; NL+QF: 0.7802453753539424; rels: []; projs: [actor_0.birth_city]; preds: [writer_0.name = "Director",movie_0.title = "The Past"]; havings: []; superlative: []; blanks: 0
TOT: 0.7802453753539424; NL: 0.7802453753539424; NL+AG: 0.9788767379097759; NL+QF: 0.7802453753539424; rels: []; projs: [actor_0.birth_city]; preds: [writer_0.name = "Director",cast_0.role = "The Past"]; havings: []; superlative: []; blanks: 0
TOT: 0.7802453753539424; NL: 0.7802453753539424; NL+AG: 0.9788767379097759; NL+QF: 0.7802453753539424; rels: []; projs: [producer_0.birth_city]; preds: [movie_0.title = "Director",movie_0.title = "The Past"]; havings: []; superlative: []; blanks: 0
TOT: 0.7802453753539424; NL: 0.7802453753539424; NL+AG: 0.9788767379097759; NL+QF: 0.7802453753539424; rels: []; projs: [producer_0.birth_city]; preds: [movie_0.title = "Director",cast_0.role = "The Past"]; havings: []; superlative: []; blanks: 0
TOT: 0.7802453753539424; NL: 0.7802453753539424; NL+AG: 0.9788767379097759; NL+QF: 0.7802453753539424; rels: []; projs: [producer_0.birth_city]; preds: [producer_0.name = "Director",movie_0.title = "The Past"]; havings: []; superlative: []; blanks: 0
TOT: 0.7802453753539424; NL: 0.7802453753539424; NL+AG: 0.9788767379097759; NL+QF: 0.7802453753539424; rels: []; projs: [producer_0.birth_city]; preds: [producer_0.name = "Director",cast_0.role = "The Past"]; havings: []; superlative: []; blanks: 0
TOT: 0.7802453753539424; NL: 0.7802453753539424; NL+AG: 0.9788767379097759; NL+QF: 0.7802453753539424; rels: []; projs: [producer_0.birth_city]; preds: [company_0.name = "Director",movie_0.title = "The Past"]; havings: []; superlative: []; blanks: 0
TOT: 0.7802453753539424; NL: 0.7802453753539424; NL+AG: 0.9788767379097759; NL+QF: 0.7802453753539424; rels: []; projs: [producer_0.birth_city]; preds: [company_0.name = "Director",cast_0.role = "The Past"]; havings: []; superlative: []; blanks: 0
TOT: 0.7802453753539424; NL: 0.7802453753539424; NL+AG: 0.9788767379097759; NL+QF: 0.7802453753539424; rels: []; projs: [producer_0.birth_city]; preds: [writer_0.name = "Director",movie_0.title = "The Past"]; havings: []; superlative: []; blanks: 0
TOT: 0.7802453753539424; NL: 0.7802453753539424; NL+AG: 0.9788767379097759; NL+QF: 0.7802453753539424; rels: []; projs: [producer_0.birth_city]; preds: [writer_0.name = "Director",cast_0.role = "The Past"]; havings: []; superlative: []; blanks: 0
TOT: 0.7802453753539424; NL: 0.7802453753539424; NL+AG: 0.9788767379097759; NL+QF: 0.7802453753539424; rels: []; projs: [writer_0.birth_city]; preds: [movie_0.title = "Director",movie_0.title = "The Past"]; havings: []; superlative: []; blanks: 0
TOT: 0.7802453753539424; NL: 0.7802453753539424; NL+AG: 0.9788767379097759; NL+QF: 0.7802453753539424; rels: []; projs: [writer_0.birth_city]; preds: [movie_0.title = "Director",cast_0.role = "The Past"]; havings: []; superlative: []; blanks: 0
TOT: 0.7802453753539424; NL: 0.7802453753539424; NL+AG: 0.9788767379097759; NL+QF: 0.7802453753539424; rels: []; projs: [writer_0.birth_city]; preds: [producer_0.name = "Director",movie_0.title = "The Past"]; havings: []; superlative: []; blanks: 0
TOT: 0.7802453753539424; NL: 0.7802453753539424; NL+AG: 0.9788767379097759; NL+QF: 0.7802453753539424; rels: []; projs: [writer_0.birth_city]; preds: [producer_0.name = "Director",cast_0.role = "The Past"]; havings: []; superlative: []; blanks: 0
TOT: 0.7802453753539424; NL: 0.7802453753539424; NL+AG: 0.9788767379097759; NL+QF: 0.7802453753539424; rels: []; projs: [writer_0.birth_city]; preds: [company_0.name = "Director",movie_0.title = "The Past"]; havings: []; superlative: []; blanks: 0
TOT: 0.7802453753539424; NL: 0.7802453753539424; NL+AG: 0.9788767379097759; NL+QF: 0.7802453753539424; rels: []; projs: [writer_0.birth_city]; preds: [company_0.name = "Director",cast_0.role = "The Past"]; havings: []; superlative: []; blanks: 0
TOT: 0.7802453753539424; NL: 0.7802453753539424; NL+AG: 0.9788767379097759; NL+QF: 0.7802453753539424; rels: []; projs: [writer_0.birth_city]; preds: [writer_0.name = "Director",movie_0.title = "The Past"]; havings: []; superlative: []; blanks: 0
TOT: 0.7802453753539424; NL: 0.7802453753539424; NL+AG: 0.9788767379097759; NL+QF: 0.7802453753539424; rels: []; projs: [writer_0.birth_city]; preds: [writer_0.name = "Director",cast_0.role = "The Past"]; havings: []; superlative: []; blanks: 0

===========
RESULTS
===========
TOT: 0.8264593541410521; TR: 0.8662391053409028; QF: 0.0; select actor_0.birth_city from actor as actor_0, cast as cast_0 where cast_0.role = "The Past" and actor_0.aid = cast_0.aid
TOT: 0.8099153988614446; TR: 0.8662391053409028; QF: 0.0; select writer_0.birth_city from movie as movie_0, writer as writer_0, written_by as written_by_0 where movie_0.title = "The Past" and movie_0.mid = written_by_0.msid and writer_0.wid = written_by_0.wid
TOT: 0.8099153988614446; TR: 0.8662391053409028; QF: 0.0; select producer_0.birth_city from made_by as made_by_0, movie as movie_0, producer as producer_0 where movie_0.title = "The Past" and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid
TOT: 0.8099153988614446; TR: 0.8662391053409028; QF: 0.0; select actor_0.birth_city from actor as actor_0, cast as cast_0, movie as movie_0 where movie_0.title = "The Past" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid
TOT: 0.8099153988614446; TR: 0.8662391053409028; QF: 0.0; select director_0.name from directed_by as directed_by_0, director as director_0, movie as movie_0 where movie_0.title = "The Past" and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid
TOT: 0.8099153988614446; TR: 0.8662391053409028; QF: 0.0; select director_0.birth_city from directed_by as directed_by_0, director as director_0, movie as movie_0 where movie_0.title = "The Past" and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid
TOT: 0.8000532395397673; TR: 0.8662391053409028; QF: 0.0; select producer_0.birth_city from cast as cast_0, made_by as made_by_0, movie as movie_0, producer as producer_0 where cast_0.role = "The Past" and cast_0.msid = movie_0.mid and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid
TOT: 0.8000532395397673; TR: 0.8662391053409028; QF: 0.0; select director_0.name from cast as cast_0, directed_by as directed_by_0, director as director_0, movie as movie_0 where cast_0.role = "The Past" and cast_0.msid = movie_0.mid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid
TOT: 0.8000532395397673; TR: 0.8662391053409028; QF: 0.0; select director_0.birth_city from cast as cast_0, directed_by as directed_by_0, director as director_0, movie as movie_0 where cast_0.role = "The Past" and cast_0.msid = movie_0.mid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid
TOT: 0.8000532395397673; TR: 0.8662391053409028; QF: 0.0; select writer_0.birth_city from cast as cast_0, movie as movie_0, writer as writer_0, written_by as written_by_0 where cast_0.role = "The Past" and cast_0.msid = movie_0.mid and movie_0.mid = written_by_0.msid and writer_0.wid = written_by_0.wid


02:48  INFO: ================
02:48  INFO: QUERY 4: Find all actors born in "Los Angeles"
02:48  INFO: ================
02:49  INFO: ================
02:49  INFO: QUERY 130: Find the latest movie which "Gabriele Ferzetti" acted in
02:49  INFO: ================
722. ROOT: ROOT; NA; ; (0) 
723. Find: CMT; NA; ; (0) 
724. movie: NT; NA; ; (0) movie.title(1.0):| movie(1.0):| cast.role(0.95):Movie; Movie F; Movie AD; | company.name(0.95):Movie; Movies; Movie Movie; | keyword.keyword(0.83):movie-in-movie; b-movie; z-movie; | actor.name(0.76):| actor(0.76):| 
726. latest: FT; max; ; (0) 
727. acted: NT; NA; ; (0) movie.release_year(0.63):| tv_series.release_year(0.63):| actor.name(0.62):| actor(0.62):| genre.genre(0.62):| genre(0.62):| made_by(0.61):| 
729. Gabriele Ferzetti: VTTEXT; NA; ; (0) actor.name(1.0):Gabriele Ferzetti; Gabriele Ferzetti; Gabriel Ferzetti; | director.name(0.73):Gabriele Ferluga; Gabriele Ferluga; Gabriele Mainetti; | writer.name(0.73):Gabriele Ferluga; Gabriele Ferluga; Gabriele Kiefer; | cast.role(0.71):Gabriele Cercetti; Gabriele Cercetti; Gabriele Cercetti; | producer.name(0.69):Gabriele Mainetti; Gabriele Mainetti; Gabriele Gauler; | movie.title(0.53):Gabriele Dambrone; Gabriele Dambrone; For Gabriele; | company.name(0.53):San Gabriele; San Gabriele; Kranzelbinder Gabrie; | 
Find, VB
the, DT
latest, JJS
movie, NN
which, WDT
Gabriele Ferzetti, NNP
acted, VBD
in, RP
root(ROOT-0, Find-1)
det(movie-4, the-2)
amod(movie-4, latest-3)
dobj(Find-1, movie-4)
dobj(acted-7, which-5)
nsubj(acted-7, Gabriele Ferzetti-6)
acl:relcl(movie-4, acted-7)
compound:prt(acted-7, in-8)

PARSE TREE:(722) ROOT ROOT
    (723) Find CMT
        (724) movie NT
            (727) acted NT
                (729) Gabriele Ferzetti VTTEXT


===========
TRANSLATIONS
===========

===========
RESULTS
===========


02:49  INFO: ================
02:49  INFO: QUERY 115: Find all actors who acted in the same movie as "Tom Hanks"
02:49  INFO: ================
732. ROOT: ROOT; NA; ; (0) 
733. Find: CMT; NA; ; (0) 
734. actors: NT; NA; all; (0) actor.name(1.0):| actor(1.0):| movie.title(0.95):Actors; Actors; Actors; | tv_series.title(0.95):Actors; Actor; The Actor Factor; | cast.role(0.95):Actors; Actors; Actors; | keyword.keyword(0.95):actors; actor-director; no-actors; | company.name(0.79):For Actors by Actors; Actors Loft; Actors Pool; | 
736. acted: NT; NA; ; (0) movie.release_year(0.63):| tv_series.release_year(0.63):| actor.name(0.62):| actor(0.62):| genre.genre(0.62):| genre(0.62):| made_by(0.61):| 
738. movie: NT; NA; ; (0) movie.title(1.0):| movie(1.0):| cast.role(0.95):Movie; Movie F; Movie AD; | company.name(0.95):Movie; Movies; Movie Movie; | keyword.keyword(0.83):movie-in-movie; b-movie; z-movie; | actor.name(0.76):| actor(0.76):| 
742. Tom Hanks: VTTEXT; NA; ; (0) director.name(1.0):Tom Hanks; Tom Hanks; Tom Hankins; | actor.name(1.0):Tom Hanks; Jim Hanks; Tom Banks; | producer.name(1.0):Tom Hanks; Tom Hanks; Tom Hanc; | writer.name(1.0):Tom Hanks; Tom Hanks; Tom Hankins; | cast.role(0.76):Young Tom Hanks; Tom Hanner; Tom H; | movie.title(0.65):Hank; Arly Hanks; Tom Horn; | tv_series.title(0.65):Hank; Hank; Hank; | 
Find, VB
all, DT
actors, NNS
who, WP
acted, VBD
in, IN
the, DT
same, JJ
movie, NN
as, IN
Tom Hanks, NNP
root(ROOT-0, Find-1)
det(actors-3, all-2)
dobj(Find-1, actors-3)
nsubj(acted-5, who-4)
acl:relcl(actors-3, acted-5)
case(movie-9, in-6)
det(movie-9, the-7)
amod(movie-9, same-8)
nmod(acted-5, movie-9)
case(Tom Hanks-11, as-10)
nmod(acted-5, Tom Hanks-11)

PARSE TREE:(732) ROOT ROOT
    (733) Find CMT
        (734) actors NT
            (736) acted NT
                (738) movie NT
                (742) Tom Hanks VTTEXT


===========
TRANSLATIONS
===========
TOT: 0.8979007600118484; NL: 0.8979007600118484; NL+AG: 0.966581842152465; NL+QF: 0.8979007600118484; rels: [movie]; projs: [actor_0.name]; preds: [director_0.name = "Tom Hanks"]; havings: []; superlative: []; blanks: 1
TOT: 0.8979007600118484; NL: 0.8979007600118484; NL+AG: 0.966581842152465; NL+QF: 0.8979007600118484; rels: [movie]; projs: [actor_0.name]; preds: [actor_0.name = "Tom Hanks"]; havings: []; superlative: []; blanks: 1
TOT: 0.8979007600118484; NL: 0.8979007600118484; NL+AG: 0.966581842152465; NL+QF: 0.8979007600118484; rels: [movie]; projs: [actor_0.name]; preds: [producer_0.name = "Tom Hanks"]; havings: []; superlative: []; blanks: 1
TOT: 0.8979007600118484; NL: 0.8979007600118484; NL+AG: 0.966581842152465; NL+QF: 0.8979007600118484; rels: [movie]; projs: [actor_0.name]; preds: [writer_0.name = "Tom Hanks"]; havings: []; superlative: []; blanks: 1
TOT: 0.8389821044998752; NL: 0.8389821044998752; NL+AG: 0.9331636843049301; NL+QF: 0.8389821044998752; rels: []; projs: [actor_0.name]; preds: [director_0.name = "Tom Hanks"]; havings: []; superlative: []; blanks: 2
TOT: 0.8389821044998752; NL: 0.8389821044998752; NL+AG: 0.9331636843049301; NL+QF: 0.8389821044998752; rels: []; projs: [actor_0.name]; preds: [actor_0.name = "Tom Hanks"]; havings: []; superlative: []; blanks: 2
TOT: 0.8389821044998752; NL: 0.8389821044998752; NL+AG: 0.9331636843049301; NL+QF: 0.8389821044998752; rels: []; projs: [actor_0.name]; preds: [producer_0.name = "Tom Hanks"]; havings: []; superlative: []; blanks: 2
TOT: 0.8389821044998752; NL: 0.8389821044998752; NL+AG: 0.9331636843049301; NL+QF: 0.8389821044998752; rels: []; projs: [actor_0.name]; preds: [writer_0.name = "Tom Hanks"]; havings: []; superlative: []; blanks: 2
TOT: 0.8389821044998752; NL: 0.8389821044998752; NL+AG: 0.9331636843049301; NL+QF: 0.8389821044998752; rels: [actor]; projs: [actor_0.name]; preds: [director_0.name = "Tom Hanks"]; havings: []; superlative: []; blanks: 1
TOT: 0.8389821044998752; NL: 0.8389821044998752; NL+AG: 0.9331636843049301; NL+QF: 0.8389821044998752; rels: [actor]; projs: [actor_0.name]; preds: [actor_0.name = "Tom Hanks"]; havings: []; superlative: []; blanks: 1
TOT: 0.8389821044998752; NL: 0.8389821044998752; NL+AG: 0.9331636843049301; NL+QF: 0.8389821044998752; rels: [actor]; projs: [actor_0.name]; preds: [producer_0.name = "Tom Hanks"]; havings: []; superlative: []; blanks: 1
TOT: 0.8389821044998752; NL: 0.8389821044998752; NL+AG: 0.9331636843049301; NL+QF: 0.8389821044998752; rels: [actor]; projs: [actor_0.name]; preds: [writer_0.name = "Tom Hanks"]; havings: []; superlative: []; blanks: 1
TOT: 0.8389821044998752; NL: 0.8389821044998752; NL+AG: 0.943035373891219; NL+QF: 0.8389821044998752; rels: []; projs: [movie_0.title]; preds: [director_0.name = "Tom Hanks"]; havings: []; superlative: []; blanks: 2
TOT: 0.8389821044998752; NL: 0.8389821044998752; NL+AG: 0.943035373891219; NL+QF: 0.8389821044998752; rels: []; projs: [movie_0.title]; preds: [actor_0.name = "Tom Hanks"]; havings: []; superlative: []; blanks: 2
TOT: 0.8389821044998752; NL: 0.8389821044998752; NL+AG: 0.943035373891219; NL+QF: 0.8389821044998752; rels: []; projs: [movie_0.title]; preds: [producer_0.name = "Tom Hanks"]; havings: []; superlative: []; blanks: 2
TOT: 0.8389821044998752; NL: 0.8389821044998752; NL+AG: 0.943035373891219; NL+QF: 0.8389821044998752; rels: []; projs: [movie_0.title]; preds: [writer_0.name = "Tom Hanks"]; havings: []; superlative: []; blanks: 2
TOT: 0.8389821044998752; NL: 0.8389821044998752; NL+AG: 0.943035373891219; NL+QF: 0.8389821044998752; rels: [movie]; projs: [movie_0.title]; preds: [director_0.name = "Tom Hanks"]; havings: []; superlative: []; blanks: 1
TOT: 0.8389821044998752; NL: 0.8389821044998752; NL+AG: 0.943035373891219; NL+QF: 0.8389821044998752; rels: [movie]; projs: [movie_0.title]; preds: [actor_0.name = "Tom Hanks"]; havings: []; superlative: []; blanks: 1
TOT: 0.8389821044998752; NL: 0.8389821044998752; NL+AG: 0.943035373891219; NL+QF: 0.8389821044998752; rels: [movie]; projs: [movie_0.title]; preds: [producer_0.name = "Tom Hanks"]; havings: []; superlative: []; blanks: 1
TOT: 0.8389821044998752; NL: 0.8389821044998752; NL+AG: 0.943035373891219; NL+QF: 0.8389821044998752; rels: [movie]; projs: [movie_0.title]; preds: [writer_0.name = "Tom Hanks"]; havings: []; superlative: []; blanks: 1

===========
RESULTS
===========
TOT: 0.8202353794363157; TR: 0.8979007600118484; QF: 0.0; select actor_0.name from actor as actor_0, cast as cast_0, movie as movie_0, writer as writer_0, written_by as written_by_0 where writer_0.name = "Tom Hanks" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and movie_0.mid = written_by_0.msid and writer_0.wid = written_by_0.wid
TOT: 0.8202353794363157; TR: 0.8979007600118484; QF: 0.0; select actor_0.name from actor as actor_0, cast as cast_0, directed_by as directed_by_0, director as director_0, movie as movie_0 where director_0.name = "Tom Hanks" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid
TOT: 0.8202353794363157; TR: 0.8979007600118484; QF: 0.0; select actor_0.name from actor as actor_0, cast as cast_0, made_by as made_by_0, movie as movie_0, producer as producer_0 where producer_0.name = "Tom Hanks" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid
TOT: 0.8202353794363157; TR: 0.8979007600118484; QF: 0.0; select actor_0.name from actor as actor_0, actor as actor_1, cast as cast_0, cast as cast_1, movie as movie_0 where actor_1.name = "Tom Hanks" and actor_0.aid = cast_0.aid and actor_1.aid = cast_1.aid and cast_0.msid = movie_0.mid and cast_1.msid = movie_0.mid
TOT: 0.7867469481465712; TR: 0.8389821044998752; QF: 0.0; select movie_0.title from movie as movie_0, writer as writer_0, written_by as written_by_0 where writer_0.name = "Tom Hanks" and movie_0.mid = written_by_0.msid and writer_0.wid = written_by_0.wid
TOT: 0.7867469481465712; TR: 0.8389821044998752; QF: 0.0; select movie_0.title from made_by as made_by_0, movie as movie_0, producer as producer_0 where producer_0.name = "Tom Hanks" and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid
TOT: 0.7867469481465712; TR: 0.8389821044998752; QF: 0.0; select movie_0.title from actor as actor_0, cast as cast_0, movie as movie_0 where actor_0.name = "Tom Hanks" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid
TOT: 0.7867469481465712; TR: 0.8389821044998752; QF: 0.0; select movie_0.title from directed_by as directed_by_0, director as director_0, movie as movie_0 where director_0.name = "Tom Hanks" and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid
TOT: 0.7701545222511386; TR: 0.8389821044998752; QF: 0.0; select actor_0.name from actor as actor_0, cast as cast_0, tv_series as tv_series_0, writer as writer_0, written_by as written_by_0 where writer_0.name = "Tom Hanks" and actor_0.aid = cast_0.aid and cast_0.msid = tv_series_0.sid and tv_series_0.sid = written_by_0.msid and writer_0.wid = written_by_0.wid
TOT: 0.7701545222511386; TR: 0.8389821044998752; QF: 0.0; select actor_0.name from actor as actor_0, cast as cast_0, directed_by as directed_by_0, director as director_0, tv_series as tv_series_0 where director_0.name = "Tom Hanks" and actor_0.aid = cast_0.aid and cast_0.msid = tv_series_0.sid and directed_by_0.did = director_0.did and directed_by_0.msid = tv_series_0.sid


02:51  INFO: ================
02:51  INFO: QUERY 95: How many movies did "Humphrey Bogart" act in before 1942?
02:51  INFO: ================
745. ROOT: ROOT; NA; ; (0) 
746. act: NT; NA; ; (0) movie.release_year(0.63):| tv_series.release_year(0.63):| actor.name(0.62):| actor(0.62):| genre.genre(0.62):| genre(0.62):| made_by(0.61):| 
747. movies: NT; NA; ; (0) movie.title(1.0):| movie(1.0):| cast.role(0.95):Movie; Movie F; Movie AD; | company.name(0.95):Movies; Movie; Movie Movie; | tv_series.title(0.84):Movies, Movies, Movi; Movie Mob; Moon Movies; | keyword.keyword(0.83):movie-in-movie; movies-about-movies; b-movie; | actor.name(0.76):| 
749. How many: CMT; count; ; (0) 
751. Humphrey Bogart: VTTEXT; NA; ; (0) actor.name(1.0):Humphrey Bogart; Humphrey Bogart; Stephen Humphrey Bog; | producer.name(1.0):Humphrey Bogart; Humphrey Bogart; Stephen Humphrey Bog; | cast.role(0.84):Humphrey 'Bogie' Bog; Humphrey 'Bogie' Bog; Humphrey 'Bogie' Bog; | tv_series.title(0.84):Being Humphrey Bogar; Being Humphrey Bogar; Bogart; | movie.title(0.8):Humphrey Bogart on F; Humphrey Bogart on F; Humphrey Bogart and ; | director.name(0.74):Humphrey Logan; Humphrey Logan; Art Humphrey; | writer.name(0.74):Humphrey Logan; Humphrey Logan; Humphrey Humbert; | 
753. 1942: VTNUM; NA; ; (0) movie.release_year(1.0):1913; 1915; 1923; | director.birth_year(1.0):1927; 1924; 1883; | tv_series.release_year(1.0):1931; 1938; 1937; | actor.birth_year(1.0):1935; 1924; 1926; | producer.birth_year(1.0):1926; 1887; 1922; | writer.birth_year(1.0):1926; 1938; 1927; | 
754. before: OT; <; ; (0) 
How, WRB
many, JJ
movies, NNS
did, VBD
Humphrey Bogart, NNP
act, VB
in, RP
before, IN
1942, CD
advmod(many-2, How-1)
amod(movies-3, many-2)
dobj(act-6, movies-3)
aux(act-6, did-4)
nsubj(act-6, Humphrey Bogart-5)
root(ROOT-0, act-6)
compound:prt(act-6, in-7)
case(1942-9, before-8)
nmod(act-6, 1942-9)

PARSE TREE:(745) ROOT ROOT
    (749) How many CMT
        (747) movies NT
            (746) act NT
                (751) Humphrey Bogart VTTEXT
                (753) 1942 VTNUM
                    (754) before OT


===========
TRANSLATIONS
===========
TOT: 0.8979007600118484; NL: 0.8979007600118484; NL+AG: 0.9673199040648885; NL+QF: 0.8979007600118484; rels: []; projs: [count(distinct(movie_0.title))]; preds: [actor_0.name = "Humphrey Bogart",movie_0.release_year < 1942]; havings: []; superlative: []; blanks: 1
TOT: 0.8979007600118484; NL: 0.8979007600118484; NL+AG: 0.9673199040648885; NL+QF: 0.8979007600118484; rels: []; projs: [count(distinct(movie_0.title))]; preds: [actor_0.name = "Humphrey Bogart",director_0.birth_year < 1942]; havings: []; superlative: []; blanks: 1
TOT: 0.8979007600118484; NL: 0.8979007600118484; NL+AG: 0.9673199040648885; NL+QF: 0.8979007600118484; rels: []; projs: [count(distinct(movie_0.title))]; preds: [actor_0.name = "Humphrey Bogart",tv_series_0.release_year < 1942]; havings: []; superlative: []; blanks: 1
TOT: 0.8979007600118484; NL: 0.8979007600118484; NL+AG: 0.9673199040648885; NL+QF: 0.8979007600118484; rels: []; projs: [count(distinct(movie_0.title))]; preds: [actor_0.name = "Humphrey Bogart",actor_0.birth_year < 1942]; havings: []; superlative: []; blanks: 1
TOT: 0.8979007600118484; NL: 0.8979007600118484; NL+AG: 0.9673199040648885; NL+QF: 0.8979007600118484; rels: []; projs: [count(distinct(movie_0.title))]; preds: [actor_0.name = "Humphrey Bogart",producer_0.birth_year < 1942]; havings: []; superlative: []; blanks: 1
TOT: 0.8979007600118484; NL: 0.8979007600118484; NL+AG: 0.9673199040648885; NL+QF: 0.8979007600118484; rels: []; projs: [count(distinct(movie_0.title))]; preds: [actor_0.name = "Humphrey Bogart",writer_0.birth_year < 1942]; havings: []; superlative: []; blanks: 1
TOT: 0.8979007600118484; NL: 0.8979007600118484; NL+AG: 0.9673199040648885; NL+QF: 0.8979007600118484; rels: []; projs: [count(distinct(movie_0.title))]; preds: [producer_0.name = "Humphrey Bogart",movie_0.release_year < 1942]; havings: []; superlative: []; blanks: 1
TOT: 0.8979007600118484; NL: 0.8979007600118484; NL+AG: 0.9673199040648885; NL+QF: 0.8979007600118484; rels: []; projs: [count(distinct(movie_0.title))]; preds: [producer_0.name = "Humphrey Bogart",director_0.birth_year < 1942]; havings: []; superlative: []; blanks: 1
TOT: 0.8979007600118484; NL: 0.8979007600118484; NL+AG: 0.9673199040648885; NL+QF: 0.8979007600118484; rels: []; projs: [count(distinct(movie_0.title))]; preds: [producer_0.name = "Humphrey Bogart",tv_series_0.release_year < 1942]; havings: []; superlative: []; blanks: 1
TOT: 0.8979007600118484; NL: 0.8979007600118484; NL+AG: 0.9673199040648885; NL+QF: 0.8979007600118484; rels: []; projs: [count(distinct(movie_0.title))]; preds: [producer_0.name = "Humphrey Bogart",actor_0.birth_year < 1942]; havings: []; superlative: []; blanks: 1
TOT: 0.8979007600118484; NL: 0.8979007600118484; NL+AG: 0.9673199040648885; NL+QF: 0.8979007600118484; rels: []; projs: [count(distinct(movie_0.title))]; preds: [producer_0.name = "Humphrey Bogart",producer_0.birth_year < 1942]; havings: []; superlative: []; blanks: 1
TOT: 0.8979007600118484; NL: 0.8979007600118484; NL+AG: 0.9673199040648885; NL+QF: 0.8979007600118484; rels: []; projs: [count(distinct(movie_0.title))]; preds: [producer_0.name = "Humphrey Bogart",writer_0.birth_year < 1942]; havings: []; superlative: []; blanks: 1

===========
RESULTS
===========
TOT: 0.8368278053317484; TR: 0.8979007600118484; QF: 0.0; select count(distinct(movie_0.title)) from made_by as made_by_0, movie as movie_0, producer as producer_0 where movie_0.release_year < 1942 and producer_0.name = "Humphrey Bogart" and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid
TOT: 0.8368278053317484; TR: 0.8979007600118484; QF: 0.0; select count(distinct(movie_0.title)) from made_by as made_by_0, movie as movie_0, producer as producer_0 where producer_0.birth_year < 1942 and producer_0.name = "Humphrey Bogart" and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid
TOT: 0.8368278053317484; TR: 0.8979007600118484; QF: 0.0; select count(distinct(movie_0.title)) from actor as actor_0, cast as cast_0, movie as movie_0 where actor_0.name = "Humphrey Bogart" and movie_0.release_year < 1942 and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid
TOT: 0.8368278053317484; TR: 0.8979007600118484; QF: 0.0; select count(distinct(movie_0.title)) from actor as actor_0, cast as cast_0, movie as movie_0 where actor_0.birth_year < 1942 and actor_0.name = "Humphrey Bogart" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid
TOT: 0.8202353794363157; TR: 0.8979007600118484; QF: 0.0; select count(distinct(movie_0.title)) from actor as actor_0, cast as cast_0, movie as movie_0, writer as writer_0, written_by as written_by_0 where actor_0.name = "Humphrey Bogart" and writer_0.birth_year < 1942 and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and movie_0.mid = written_by_0.msid and writer_0.wid = written_by_0.wid
TOT: 0.8202353794363157; TR: 0.8979007600118484; QF: 0.0; select count(distinct(movie_0.title)) from made_by as made_by_0, made_by as made_by_1, movie as movie_0, producer as producer_0, tv_series as tv_series_0 where producer_0.name = "Humphrey Bogart" and tv_series_0.release_year < 1942 and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid and made_by_1.msid = tv_series_0.sid and made_by_1.pid = producer_0.pid
TOT: 0.8202353794363157; TR: 0.8979007600118484; QF: 0.0; select count(distinct(movie_0.title)) from directed_by as directed_by_0, director as director_0, made_by as made_by_0, movie as movie_0, producer as producer_0 where director_0.birth_year < 1942 and producer_0.name = "Humphrey Bogart" and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid
TOT: 0.8202353794363157; TR: 0.8979007600118484; QF: 0.0; select count(distinct(movie_0.title)) from actor as actor_0, cast as cast_0, directed_by as directed_by_0, director as director_0, movie as movie_0 where actor_0.name = "Humphrey Bogart" and director_0.birth_year < 1942 and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid
TOT: 0.8202353794363157; TR: 0.8979007600118484; QF: 0.0; select count(distinct(movie_0.title)) from actor as actor_0, cast as cast_0, cast as cast_1, movie as movie_0, tv_series as tv_series_0 where actor_0.name = "Humphrey Bogart" and tv_series_0.release_year < 1942 and actor_0.aid = cast_0.aid and actor_0.aid = cast_1.aid and cast_0.msid = movie_0.mid and cast_1.msid = tv_series_0.sid
TOT: 0.8202353794363157; TR: 0.8979007600118484; QF: 0.0; select count(distinct(movie_0.title)) from made_by as made_by_0, movie as movie_0, producer as producer_0, writer as writer_0, written_by as written_by_0 where producer_0.name = "Humphrey Bogart" and writer_0.birth_year < 1942 and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid and movie_0.mid = written_by_0.msid and writer_0.wid = written_by_0.wid


02:52  INFO: ================
02:52  INFO: QUERY 111: How many companies participated in producing "Camp X-Ray"
02:52  INFO: ================
756. ROOT: ROOT; NA; ; (0) 
757. participated: NT; NA; ; (0) directed_by(0.72):| written_by(0.63):| made_by(0.63):| director.name(0.6):| director(0.6):| cast.role(0.6):| cast(0.59):| 
759. How many: CMT; count; ; (0) 
760. companies: NT; NA; ; (0) company.name(1.0):| company(1.0):| movie.title(0.95):Company; Company; Company; | cast.role(0.95):Company; Company; Company; | keyword.keyword(0.95):company; company-k; it-company; | tv_series.title(0.82):X Company; Eco Company; Company and Co; | actor.name(0.74):Eva Company; Angel Company; Marc Company; | 
761. producing: NT; NA; ; (0) made_by(0.74):| directed_by(0.69):| producer.name(0.68):| producer(0.68):| cast.role(0.63):| cast(0.63):| written_by(0.63):| 
763. Camp X-Ray: VTTEXT; NA; ; (0) movie.title(1.0):Camp X-Ray; Camp X-Ray; Camp X; | keyword.keyword(0.78):camp-x-ray; camp-x-ray; x-ray; | cast.role(0.71):Camp X-Ray Guard #1; Camp X-Ray Guard #1; X-Rays; | tv_series.title(0.67):X-Ray; Camp Camp; Camp Camp; | company.name(0.67):X-Ray; Camp B; Camp B; | actor.name(0.63):Ray Camp; Ray Camp; Camp; | producer.name(0.56):Ray Ocampo; Camp Casey; Camp Casey; | 
How, WRB
many, JJ
companies, NNS
participated, VBD
in, IN
producing, VBG
Camp X-Ray, NNP
advmod(many-2, How-1)
dep(participated-4, many-2)
nsubj(participated-4, companies-3)
root(ROOT-0, participated-4)
mark(producing-6, in-5)
advcl(participated-4, producing-6)
dobj(producing-6, Camp X-Ray-7)

PARSE TREE:(756) ROOT ROOT
    (759) How many CMT
        (760) companies NT
            (757) participated NT
                (761) producing NT
                    (763) Camp X-Ray VTTEXT


===========
TRANSLATIONS
===========
TOT: 0.8396474479422154; NL: 0.8396474479422154; NL+AG: 0.9326779061577943; NL+QF: 0.8396474479422154; rels: [directed_by]; projs: [count(distinct(company_0.name))]; preds: [movie_0.title = "Camp X-Ray"]; havings: []; superlative: []; blanks: 0
TOT: 0.8260995542878498; NL: 0.8260995542878498; NL+AG: 0.9326779061577943; NL+QF: 0.8260995542878498; rels: [directed_by]; projs: [count(distinct(company_0.name))]; preds: [movie_0.title = "Camp X-Ray"]; havings: []; superlative: []; blanks: 1
TOT: 0.806225774829855; NL: 0.806225774829855; NL+AG: 0.9326779061577943; NL+QF: 0.806225774829855; rels: []; projs: [count(distinct(company_0.name))]; preds: [movie_0.title = "Camp X-Ray"]; havings: []; superlative: []; blanks: 2
TOT: 0.7885166260389035; NL: 0.7885166260389035; NL+AG: 0.9060062237982194; NL+QF: 0.7885166260389035; rels: [directed_by]; projs: [count(distinct(company_0.name))]; preds: [keyword_0.keyword = "camp-x-ray"]; havings: []; superlative: []; blanks: 0
TOT: 0.7757937392839265; NL: 0.7757937392839265; NL+AG: 0.9060062237982194; NL+QF: 0.7757937392839265; rels: [directed_by]; projs: [count(distinct(company_0.name))]; preds: [keyword_0.keyword = "camp-x-ray"]; havings: []; superlative: []; blanks: 1
TOT: 0.7699601046294952; NL: 0.7699601046294952; NL+AG: 0.9060062237982194; NL+QF: 0.7699601046294952; rels: [directed_by]; projs: [count(distinct(company_0.name))]; preds: [cast_0.role = "Camp X-Ray Guard #1"]; havings: []; superlative: []; blanks: 0
TOT: 0.7587071162864787; NL: 0.7587071162864787; NL+AG: 0.9060062237982194; NL+QF: 0.7587071162864787; rels: [directed_by]; projs: [count(distinct(company_0.name))]; preds: [tv_series_0.title = "X-Ray"]; havings: []; superlative: []; blanks: 0
TOT: 0.7587071162864787; NL: 0.7587071162864787; NL+AG: 0.9060062237982194; NL+QF: 0.7587071162864787; rels: [directed_by]; projs: [count(distinct(company_0.name))]; preds: [company_0.name = "X-Ray"]; havings: []; superlative: []; blanks: 0
TOT: 0.757536631371535; NL: 0.757536631371535; NL+AG: 0.9060062237982194; NL+QF: 0.757536631371535; rels: [directed_by]; projs: [count(distinct(company_0.name))]; preds: [cast_0.role = "Camp X-Ray Guard #1"]; havings: []; superlative: []; blanks: 1
TOT: 0.7571301852372074; NL: 0.7571301852372074; NL+AG: 0.9060062237982194; NL+QF: 0.7571301852372074; rels: []; projs: [count(distinct(company_0.name))]; preds: [keyword_0.keyword = "camp-x-ray"]; havings: []; superlative: []; blanks: 2
TOT: 0.7539200816493241; NL: 0.7539200816493241; NL+AG: 0.8930979121878186; NL+QF: 0.7539200816493241; rels: [directed_by]; projs: [count(distinct(company_0.name))]; preds: []; havings: []; superlative: []; blanks: 1

===========
RESULTS
===========
TOT: 0.7618908010595595; TR: 0.8396474479422154; QF: 0.0; select count(distinct(company_0.name)) from company as company_0, copyright as copyright_0, directed_by as directed_by_0, directed_by as directed_by_1, director as director_0, movie as movie_0, tv_series as tv_series_0 where movie_0.title = "Camp X-Ray" and company_0.id = copyright_0.cid and copyright_0.msid = tv_series_0.sid and directed_by_0.did = director_0.did and directed_by_0.msid = tv_series_0.sid and directed_by_1.did = director_0.did and directed_by_1.msid = movie_0.mid
TOT: 0.758904067927054; TR: 0.806225774829855; QF: 0.0; select count(distinct(company_0.name)) from company as company_0, copyright as copyright_0, movie as movie_0 where movie_0.title = "Camp X-Ray" and company_0.id = copyright_0.cid and copyright_0.msid = movie_0.mid
TOT: 0.7334823789140532; TR: 0.806225774829855; QF: 0.0; select count(distinct(company_0.name)) from actor as actor_0, cast as cast_0, cast as cast_1, company as company_0, copyright as copyright_0, movie as movie_0, tv_series as tv_series_0 where movie_0.title = "Camp X-Ray" and actor_0.aid = cast_0.aid and actor_0.aid = cast_1.aid and cast_0.msid = tv_series_0.sid and cast_1.msid = movie_0.mid and company_0.id = copyright_0.cid and copyright_0.msid = tv_series_0.sid
TOT: 0.7334823789140532; TR: 0.806225774829855; QF: 0.0; select count(distinct(company_0.name)) from company as company_0, copyright as copyright_0, movie as movie_0, tv_series as tv_series_0, writer as writer_0, written_by as written_by_0, written_by as written_by_1 where movie_0.title = "Camp X-Ray" and company_0.id = copyright_0.cid and copyright_0.msid = tv_series_0.sid and movie_0.mid = written_by_1.msid and tv_series_0.sid = written_by_0.msid and writer_0.wid = written_by_0.wid and writer_0.wid = written_by_1.wid
TOT: 0.7334823789140532; TR: 0.806225774829855; QF: 0.0; select count(distinct(company_0.name)) from company as company_0, copyright as copyright_0, keyword as keyword_0, movie as movie_0, tags as tags_0, tags as tags_1, tv_series as tv_series_0 where movie_0.title = "Camp X-Ray" and company_0.id = copyright_0.cid and copyright_0.msid = tv_series_0.sid and keyword_0.id = tags_0.kid and keyword_0.id = tags_1.kid and movie_0.mid = tags_1.msid and tags_0.msid = tv_series_0.sid
TOT: 0.7334823789140532; TR: 0.806225774829855; QF: 0.0; select count(distinct(company_0.name)) from classification as classification_0, classification as classification_1, company as company_0, copyright as copyright_0, genre as genre_0, movie as movie_0, tv_series as tv_series_0 where movie_0.title = "Camp X-Ray" and classification_0.gid = genre_0.gid and classification_0.msid = tv_series_0.sid and classification_1.gid = genre_0.gid and classification_1.msid = movie_0.mid and company_0.id = copyright_0.cid and copyright_0.msid = tv_series_0.sid
TOT: 0.7334823789140532; TR: 0.806225774829855; QF: 0.0; select count(distinct(company_0.name)) from company as company_0, copyright as copyright_0, made_by as made_by_0, made_by as made_by_1, movie as movie_0, producer as producer_0, tv_series as tv_series_0 where movie_0.title = "Camp X-Ray" and company_0.id = copyright_0.cid and copyright_0.msid = tv_series_0.sid and made_by_0.msid = tv_series_0.sid and made_by_0.pid = producer_0.pid and made_by_1.msid = movie_0.mid and made_by_1.pid = producer_0.pid
TOT: 0.7005803908778709; TR: 0.7571301852372074; QF: 0.0; select count(distinct(company_0.name)) from company as company_0, copyright as copyright_0, keyword as keyword_0, movie as movie_0, tags as tags_0 where keyword_0.keyword = "camp-x-ray" and company_0.id = copyright_0.cid and copyright_0.msid = movie_0.mid and keyword_0.id = tags_0.kid and movie_0.mid = tags_0.msid
TOT: 0.7005803908778709; TR: 0.7571301852372074; QF: 0.0; select count(distinct(company_0.name)) from company as company_0, copyright as copyright_0, keyword as keyword_0, tags as tags_0, tv_series as tv_series_0 where keyword_0.keyword = "camp-x-ray" and company_0.id = copyright_0.cid and copyright_0.msid = tv_series_0.sid and keyword_0.id = tags_0.kid and tags_0.msid = tv_series_0.sid
TOT: 0.6930915191521834; TR: 0.7587071162864787; QF: 0.0; select count(distinct(company_0.name)) from company as company_0, copyright as copyright_0, directed_by as directed_by_0, directed_by as directed_by_1, director as director_0, movie as movie_0, tv_series as tv_series_0 where tv_series_0.title = "X-Ray" and company_0.id = copyright_0.cid and copyright_0.msid = movie_0.mid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and directed_by_1.did = director_0.did and directed_by_1.msid = tv_series_0.sid


02:53  INFO: ================
02:53  INFO: QUERY 108: How many actors are in the movie "Saving Private Ryan"?
02:53  INFO: ================
02:55  INFO: ================
02:55  INFO: QUERY 105: How many movies did "Steven Spielberg" direct?
02:55  INFO: ================
02:56  INFO: ================
02:56  INFO: QUERY 64: Find all the female actors in the movie "Saving Private Ryan"
02:56  INFO: ================
02:59  INFO: ================
02:59  INFO: QUERY 103: How many movies did "Quentin Tarantino" direct before 2002 and after 2010?
02:59  INFO: ================
794. ROOT: ROOT; NA; ; (0) 
795. direct: NT; NA; ; (0) directed_by(1.0):| director.name(0.72):| director(0.72):| written_by(0.68):| cast.role(0.67):| cast(0.67):| made_by(0.67):| 
796. movies: NT; NA; ; (0) movie.title(1.0):| movie(1.0):| cast.role(0.95):Movie; Movie F; Movie AD; | company.name(0.95):Movies; Movie; Movie Movie; | tv_series.title(0.84):Movies, Movies, Movi; Movie Mob; Moon Movies; | keyword.keyword(0.83):movie-in-movie; movies-about-movies; b-movie; | actor.name(0.76):| 
798. How many: CMT; count; ; (0) 
800. Quentin Tarantino: VTTEXT; NA; ; (0) director.name(1.0):Quentin Tarantino; Quentin Tarantino; Quentin Tarrantino; | actor.name(1.0):Quentin Tarantino; Quentin Tarantino; Quentin Tarrantino; | producer.name(1.0):Quentin Tarantino; Quentin Tarantino; Quentin Tarrantino; | writer.name(1.0):Quentin Tarantino; Quentin Tarantino; Quentin Tarrantino; | cast.role(0.85):Quentin Tarrantino '; Quentin Tarrantino '; Quentin Tarrantino '; | movie.title(0.84):21 Years: Quentin Ta; 21 Years: Quentin Ta; Quentin Tarantino's ; | writer.birth_city(0.74):San Quentin; San Quentin; Saint-Quentin; | 
801. 2002: VTNUM; NA; ; (0) movie.release_year(1.0):1963; 1971; 1913; | director.birth_year(1.0):1927; 1958; 1924; | tv_series.release_year(1.0):1987; 1991; 1968; | actor.birth_year(1.0):1935; 1958; 1924; | producer.birth_year(1.0):1926; 1964; 1985; | writer.birth_year(1.0):1955; 1926; 1985; | 
802. before: OT; <; ; (0) 
804. 2010: VTNUM; NA; ; (0) movie.release_year(1.0):2012; 2014; 2015; | tv_series.release_year(1.0):2014; 2014; 2013; | actor.birth_year(1.0):2011; 2013; 2013; | 
805. after: OT; >; ; (0) 
How, WRB
many, JJ
movies, NNS
did, VBD
Quentin Tarantino, NNP
direct, VB
before, IN
2002, CD
and, CC
after, IN
2010, CD
advmod(many-2, How-1)
amod(movies-3, many-2)
dobj(direct-6, movies-3)
aux(direct-6, did-4)
nsubj(direct-6, Quentin Tarantino-5)
root(ROOT-0, direct-6)
case(2002-8, before-7)
nmod(direct-6, 2002-8)
cc(2002-8, and-9)
case(2010-11, after-10)
conj(2002-8, 2010-11)

PARSE TREE:(794) ROOT ROOT
    (798) How many CMT
        (796) movies NT
            (795) direct NT
                (800) Quentin Tarantino VTTEXT
                (801) 2002 VTNUM
                    (802) before OT
                (804) 2010 VTNUM
                    (805) after OT


===========
TRANSLATIONS
===========
TOT: 0.920066463578981; NL: 0.920066463578981; NL+AG: 0.9625; NL+QF: 0.920066463578981; rels: []; projs: [count(distinct(movie_0.title))]; preds: [director_0.name = "Quentin Tarantino",movie_0.release_year > 2010]; havings: [count(distinct(director_0.name)) < 2002]; superlative: []; blanks: 0
TOT: 0.920066463578981; NL: 0.920066463578981; NL+AG: 0.9625; NL+QF: 0.920066463578981; rels: []; projs: [count(distinct(movie_0.title))]; preds: [director_0.name = "Quentin Tarantino",tv_series_0.release_year > 2010]; havings: [count(distinct(director_0.name)) < 2002]; superlative: []; blanks: 0
TOT: 0.920066463578981; NL: 0.920066463578981; NL+AG: 0.9625; NL+QF: 0.920066463578981; rels: []; projs: [count(distinct(movie_0.title))]; preds: [director_0.name = "Quentin Tarantino",actor_0.birth_year > 2010]; havings: [count(distinct(director_0.name)) < 2002]; superlative: []; blanks: 0
TOT: 0.920066463578981; NL: 0.920066463578981; NL+AG: 0.9625; NL+QF: 0.920066463578981; rels: []; projs: [count(distinct(movie_0.title))]; preds: [actor_0.name = "Quentin Tarantino",movie_0.release_year > 2010]; havings: [count(distinct(director_0.name)) < 2002]; superlative: []; blanks: 0
TOT: 0.920066463578981; NL: 0.920066463578981; NL+AG: 0.9625; NL+QF: 0.920066463578981; rels: []; projs: [count(distinct(movie_0.title))]; preds: [actor_0.name = "Quentin Tarantino",tv_series_0.release_year > 2010]; havings: [count(distinct(director_0.name)) < 2002]; superlative: []; blanks: 0
TOT: 0.920066463578981; NL: 0.920066463578981; NL+AG: 0.9625; NL+QF: 0.920066463578981; rels: []; projs: [count(distinct(movie_0.title))]; preds: [actor_0.name = "Quentin Tarantino",actor_0.birth_year > 2010]; havings: [count(distinct(director_0.name)) < 2002]; superlative: []; blanks: 0
TOT: 0.920066463578981; NL: 0.920066463578981; NL+AG: 0.9625; NL+QF: 0.920066463578981; rels: []; projs: [count(distinct(movie_0.title))]; preds: [producer_0.name = "Quentin Tarantino",movie_0.release_year > 2010]; havings: [count(distinct(director_0.name)) < 2002]; superlative: []; blanks: 0
TOT: 0.920066463578981; NL: 0.920066463578981; NL+AG: 0.9625; NL+QF: 0.920066463578981; rels: []; projs: [count(distinct(movie_0.title))]; preds: [producer_0.name = "Quentin Tarantino",tv_series_0.release_year > 2010]; havings: [count(distinct(director_0.name)) < 2002]; superlative: []; blanks: 0
TOT: 0.920066463578981; NL: 0.920066463578981; NL+AG: 0.9625; NL+QF: 0.920066463578981; rels: []; projs: [count(distinct(movie_0.title))]; preds: [producer_0.name = "Quentin Tarantino",actor_0.birth_year > 2010]; havings: [count(distinct(director_0.name)) < 2002]; superlative: []; blanks: 0
TOT: 0.920066463578981; NL: 0.920066463578981; NL+AG: 0.9625; NL+QF: 0.920066463578981; rels: []; projs: [count(distinct(movie_0.title))]; preds: [writer_0.name = "Quentin Tarantino",movie_0.release_year > 2010]; havings: [count(distinct(director_0.name)) < 2002]; superlative: []; blanks: 0
TOT: 0.920066463578981; NL: 0.920066463578981; NL+AG: 0.9625; NL+QF: 0.920066463578981; rels: []; projs: [count(distinct(movie_0.title))]; preds: [writer_0.name = "Quentin Tarantino",tv_series_0.release_year > 2010]; havings: [count(distinct(director_0.name)) < 2002]; superlative: []; blanks: 0
TOT: 0.920066463578981; NL: 0.920066463578981; NL+AG: 0.9625; NL+QF: 0.920066463578981; rels: []; projs: [count(distinct(movie_0.title))]; preds: [writer_0.name = "Quentin Tarantino",actor_0.birth_year > 2010]; havings: [count(distinct(director_0.name)) < 2002]; superlative: []; blanks: 0

===========
RESULTS
===========
TOT: 0.8390762274683785; TR: 0.920066463578981; QF: 0.0; select count(*) from (select movie_0.title from directed_by as directed_by_0, director as director_0, made_by as made_by_0, movie as movie_0, producer as producer_0 where movie_0.release_year > 2010 and producer_0.name = "Quentin Tarantino" and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid group by movie_0.title having count(distinct(director_0.name)) < 2002) as subquery
TOT: 0.8390762274683785; TR: 0.920066463578981; QF: 0.0; select count(*) from (select movie_0.title from actor as actor_0, cast as cast_0, directed_by as directed_by_0, director as director_0, movie as movie_0 where actor_0.name = "Quentin Tarantino" and movie_0.release_year > 2010 and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid group by movie_0.title having count(distinct(director_0.name)) < 2002) as subquery
TOT: 0.8390762274683785; TR: 0.920066463578981; QF: 0.0; select count(*) from (select movie_0.title from actor as actor_0, cast as cast_0, directed_by as directed_by_0, director as director_0, movie as movie_0 where actor_0.birth_year > 2010 and actor_0.name = "Quentin Tarantino" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid group by movie_0.title having count(distinct(director_0.name)) < 2002) as subquery
TOT: 0.8390762274683785; TR: 0.920066463578981; QF: 0.0; select count(*) from (select movie_0.title from directed_by as directed_by_0, directed_by as directed_by_1, director as director_0, director as director_1, movie as movie_0 where director_0.name = "Quentin Tarantino" and movie_0.release_year > 2010 and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and directed_by_1.did = director_1.did and directed_by_1.msid = movie_0.mid group by movie_0.title having count(distinct(director_1.name)) < 2002) as subquery
TOT: 0.8390762274683785; TR: 0.920066463578981; QF: 0.0; select count(*) from (select movie_0.title from directed_by as directed_by_0, director as director_0, movie as movie_0, writer as writer_0, written_by as written_by_0 where movie_0.release_year > 2010 and writer_0.name = "Quentin Tarantino" and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and movie_0.mid = written_by_0.msid and writer_0.wid = written_by_0.wid group by movie_0.title having count(distinct(director_0.name)) < 2002) as subquery
TOT: 0.8302469643508104; TR: 0.920066463578981; QF: 0.0; select count(*) from (select movie_0.title from actor as actor_0, cast as cast_0, directed_by as directed_by_0, directed_by as directed_by_1, director as director_0, movie as movie_0, tv_series as tv_series_0 where actor_0.name = "Quentin Tarantino" and tv_series_0.release_year > 2010 and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and directed_by_1.did = director_0.did and directed_by_1.msid = tv_series_0.sid group by movie_0.title having count(distinct(director_0.name)) < 2002) as subquery
TOT: 0.8302469643508104; TR: 0.920066463578981; QF: 0.0; select count(*) from (select movie_0.title from actor as actor_0, cast as cast_0, directed_by as directed_by_0, director as director_0, made_by as made_by_0, movie as movie_0, producer as producer_0 where actor_0.birth_year > 2010 and producer_0.name = "Quentin Tarantino" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid group by movie_0.title having count(distinct(director_0.name)) < 2002) as subquery
TOT: 0.8302469643508104; TR: 0.920066463578981; QF: 0.0; select count(*) from (select movie_0.title from actor as actor_0, cast as cast_0, cast as cast_1, directed_by as directed_by_0, director as director_0, movie as movie_0, tv_series as tv_series_0 where actor_0.name = "Quentin Tarantino" and movie_0.release_year > 2010 and actor_0.aid = cast_0.aid and actor_0.aid = cast_1.aid and cast_0.msid = movie_0.mid and cast_1.msid = tv_series_0.sid and directed_by_0.did = director_0.did and directed_by_0.msid = tv_series_0.sid group by movie_0.title having count(distinct(director_0.name)) < 2002) as subquery
TOT: 0.8302469643508104; TR: 0.920066463578981; QF: 0.0; select count(*) from (select movie_0.title from actor as actor_0, cast as cast_0, cast as cast_1, directed_by as directed_by_0, director as director_0, movie as movie_0, tv_series as tv_series_0 where actor_0.name = "Quentin Tarantino" and tv_series_0.release_year > 2010 and actor_0.aid = cast_0.aid and actor_0.aid = cast_1.aid and cast_0.msid = movie_0.mid and cast_1.msid = tv_series_0.sid and directed_by_0.did = director_0.did and directed_by_0.msid = tv_series_0.sid group by movie_0.title having count(distinct(director_0.name)) < 2002) as subquery
TOT: 0.8302469643508104; TR: 0.920066463578981; QF: 0.0; select count(*) from (select movie_0.title from actor as actor_0, cast as cast_0, cast as cast_1, directed_by as directed_by_0, director as director_0, movie as movie_0, tv_series as tv_series_0 where actor_0.birth_year > 2010 and actor_0.name = "Quentin Tarantino" and actor_0.aid = cast_0.aid and actor_0.aid = cast_1.aid and cast_0.msid = movie_0.mid and cast_1.msid = tv_series_0.sid and directed_by_0.did = director_0.did and directed_by_0.msid = tv_series_0.sid group by movie_0.title having count(distinct(director_0.name)) < 2002) as subquery


03:02  INFO: ================
03:02  INFO: QUERY 45: Who directed the movie "Inglourious Basterds"?
03:02  INFO: ================
03:03  INFO: ================
03:03  INFO: QUERY 20: Find the actor who played "Captain Miller" in the movie "Saving Private Ryan"
03:03  INFO: ================
03:07  INFO: ================
03:07  INFO: QUERY 17: Which actors were born in Tehran
03:07  INFO: ================
03:08  INFO: ================
03:08  INFO: QUERY 88: What is the number of actors in the movie "Grumpier Old Men"?
03:08  INFO: ================
03:10  INFO: ================
03:10  INFO: QUERY 44: What are all the movies directed by "Quentin Tarantino" featuring "Christoph Waltz"?
03:10  INFO: ================
846. ROOT: ROOT; NA; ; (0) 
847. What: CMT; NA; ; (0) 
849. movies: NT; NA; all; (0) movie.title(1.0):| movie(1.0):| cast.role(0.95):Movie; Movie F; Movie AD; | company.name(0.95):Movies; Movie; Movie Movie; | tv_series.title(0.84):Movies, Movies, Movi; Movie Mob; Moon Movies; | keyword.keyword(0.83):movie-in-movie; movies-about-movies; b-movie; | actor.name(0.76):| 
852. directed: NT; NA; ; (0) directed_by(1.0):| director.name(0.72):| director(0.72):| written_by(0.68):| cast.role(0.67):| cast(0.67):| made_by(0.67):| 
853. Christoph Waltz: VTTEXT; NA; ; (0) director.name(1.0):Christoph Waltz; Christoph Waltz; Christoph Walther; | actor.name(1.0):Christoph Waltz; Christoph Waltz; Christoph Walz; | producer.name(1.0):Christoph Waltz; Christoph Waltz; Christopher Waltz; | writer.name(1.0):Christoph Waltz; Christoph Waltz; Christoph Walz; | cast.role(0.76):Christoph Balthus; Christoph Balthus; Christoph Wenk; | movie.title(0.76):Christoph; Christoph; Christoph Columbus; | company.name(0.63):Christoph Schinko; Christoph Schinko; Christoph Kohler; | 
855. Quentin Tarantino: VTTEXT; NA; ; (0) director.name(1.0):Quentin Tarantino; Quentin Tarantino; Quentin Tarrantino; | actor.name(1.0):Quentin Tarantino; Quentin Tarantino; Quentin Tarrantino; | producer.name(1.0):Quentin Tarantino; Quentin Tarantino; Quentin Tarrantino; | writer.name(1.0):Quentin Tarantino; Quentin Tarantino; Quentin Tarrantino; | cast.role(0.85):Quentin Tarrantino '; Quentin Tarrantino '; Quentin Tarrantino '; | movie.title(0.84):21 Years: Quentin Ta; 21 Years: Quentin Ta; Quentin Tarantino's ; | writer.birth_city(0.74):San Quentin; San Quentin; Saint-Quentin; | 
856. featuring: VTTEXT; NA; ; (0) cast.role(1.0):Featuring; Featuring; Featuring; | tv_series.title(0.66):| tv_series(0.66):| movie.title_aka(0.64):| tv_series.title_aka(0.64):| actor.name(0.63):Coolio featuring L.V; San Jose featuring R; San Jose featuring R; | writer.name(0.63):Coolio featuring L.V; Gangstagrass featuri; San Jose featuring R; | 
What, WP
are, VBP
all, PDT
the, DT
movies, NNS
directed, VBN
by, IN
Quentin Tarantino, NNP
featuring, NNP
Christoph Waltz, NNP
root(ROOT-0, What-1)
cop(What-1, are-2)
det:predet(movies-5, all-3)
det(movies-5, the-4)
nsubj(What-1, movies-5)
acl(movies-5, directed-6)
case(Christoph Waltz-10, by-7)
compound(Christoph Waltz-10, Quentin Tarantino-8)
compound(Christoph Waltz-10, featuring-9)
nmod(directed-6, Christoph Waltz-10)

PARSE TREE:(846) ROOT ROOT
    (847) What CMT
        (849) movies NT
            (852) directed NT
                (853) Christoph Waltz VTTEXT
                    (855) Quentin Tarantino VTTEXT
                    (856) featuring VTTEXT


===========
TRANSLATIONS
===========
TOT: 1.0; NL: 1.0; NL+AG: 1.0; NL+QF: 1.0; rels: [directed_by]; projs: [movie_0.title]; preds: [director_0.name = "Christoph Waltz",director_0.name = "Quentin Tarantino",cast_0.role = "Featuring"]; havings: []; superlative: []; blanks: 0
TOT: 1.0; NL: 1.0; NL+AG: 1.0; NL+QF: 1.0; rels: [directed_by]; projs: [movie_0.title]; preds: [director_0.name = "Christoph Waltz",actor_0.name = "Quentin Tarantino",cast_0.role = "Featuring"]; havings: []; superlative: []; blanks: 0
TOT: 1.0; NL: 1.0; NL+AG: 1.0; NL+QF: 1.0; rels: [directed_by]; projs: [movie_0.title]; preds: [director_0.name = "Christoph Waltz",producer_0.name = "Quentin Tarantino",cast_0.role = "Featuring"]; havings: []; superlative: []; blanks: 0
TOT: 1.0; NL: 1.0; NL+AG: 1.0; NL+QF: 1.0; rels: [directed_by]; projs: [movie_0.title]; preds: [director_0.name = "Christoph Waltz",writer_0.name = "Quentin Tarantino",cast_0.role = "Featuring"]; havings: []; superlative: []; blanks: 0
TOT: 1.0; NL: 1.0; NL+AG: 1.0; NL+QF: 1.0; rels: [directed_by]; projs: [movie_0.title]; preds: [actor_0.name = "Christoph Waltz",director_0.name = "Quentin Tarantino",cast_0.role = "Featuring"]; havings: []; superlative: []; blanks: 0
TOT: 1.0; NL: 1.0; NL+AG: 1.0; NL+QF: 1.0; rels: [directed_by]; projs: [movie_0.title]; preds: [actor_0.name = "Christoph Waltz",actor_0.name = "Quentin Tarantino",cast_0.role = "Featuring"]; havings: []; superlative: []; blanks: 0
TOT: 1.0; NL: 1.0; NL+AG: 1.0; NL+QF: 1.0; rels: [directed_by]; projs: [movie_0.title]; preds: [actor_0.name = "Christoph Waltz",producer_0.name = "Quentin Tarantino",cast_0.role = "Featuring"]; havings: []; superlative: []; blanks: 0
TOT: 1.0; NL: 1.0; NL+AG: 1.0; NL+QF: 1.0; rels: [directed_by]; projs: [movie_0.title]; preds: [actor_0.name = "Christoph Waltz",writer_0.name = "Quentin Tarantino",cast_0.role = "Featuring"]; havings: []; superlative: []; blanks: 0
TOT: 1.0; NL: 1.0; NL+AG: 1.0; NL+QF: 1.0; rels: [directed_by]; projs: [movie_0.title]; preds: [producer_0.name = "Christoph Waltz",director_0.name = "Quentin Tarantino",cast_0.role = "Featuring"]; havings: []; superlative: []; blanks: 0
TOT: 1.0; NL: 1.0; NL+AG: 1.0; NL+QF: 1.0; rels: [directed_by]; projs: [movie_0.title]; preds: [producer_0.name = "Christoph Waltz",actor_0.name = "Quentin Tarantino",cast_0.role = "Featuring"]; havings: []; superlative: []; blanks: 0
TOT: 1.0; NL: 1.0; NL+AG: 1.0; NL+QF: 1.0; rels: [directed_by]; projs: [movie_0.title]; preds: [producer_0.name = "Christoph Waltz",producer_0.name = "Quentin Tarantino",cast_0.role = "Featuring"]; havings: []; superlative: []; blanks: 0
TOT: 1.0; NL: 1.0; NL+AG: 1.0; NL+QF: 1.0; rels: [directed_by]; projs: [movie_0.title]; preds: [producer_0.name = "Christoph Waltz",writer_0.name = "Quentin Tarantino",cast_0.role = "Featuring"]; havings: []; superlative: []; blanks: 0
TOT: 1.0; NL: 1.0; NL+AG: 1.0; NL+QF: 1.0; rels: [directed_by]; projs: [movie_0.title]; preds: [writer_0.name = "Christoph Waltz",director_0.name = "Quentin Tarantino",cast_0.role = "Featuring"]; havings: []; superlative: []; blanks: 0
TOT: 1.0; NL: 1.0; NL+AG: 1.0; NL+QF: 1.0; rels: [directed_by]; projs: [movie_0.title]; preds: [writer_0.name = "Christoph Waltz",actor_0.name = "Quentin Tarantino",cast_0.role = "Featuring"]; havings: []; superlative: []; blanks: 0
TOT: 1.0; NL: 1.0; NL+AG: 1.0; NL+QF: 1.0; rels: [directed_by]; projs: [movie_0.title]; preds: [writer_0.name = "Christoph Waltz",producer_0.name = "Quentin Tarantino",cast_0.role = "Featuring"]; havings: []; superlative: []; blanks: 0
TOT: 1.0; NL: 1.0; NL+AG: 1.0; NL+QF: 1.0; rels: [directed_by]; projs: [movie_0.title]; preds: [writer_0.name = "Christoph Waltz",writer_0.name = "Quentin Tarantino",cast_0.role = "Featuring"]; havings: []; superlative: []; blanks: 0

===========
RESULTS
===========
TOT: 0.9070197334262446; TR: 1.0; QF: 0.0; select movie_0.title from actor as actor_0, cast as cast_0, directed_by as directed_by_0, director as director_0, movie as movie_0 where actor_0.name = "Quentin Tarantino" and cast_0.role = "Featuring" and director_0.name = "Christoph Waltz" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid
TOT: 0.9070197334262446; TR: 1.0; QF: 0.0; select movie_0.title from actor as actor_0, cast as cast_0, directed_by as directed_by_0, director as director_0, movie as movie_0 where actor_0.name = "Christoph Waltz" and cast_0.role = "Featuring" and director_0.name = "Quentin Tarantino" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid
TOT: 0.9020516570341425; TR: 1.0; QF: 0.0; select movie_0.title from cast as cast_0, directed_by as directed_by_0, director as director_0, movie as movie_0, writer as writer_0, written_by as written_by_0 where cast_0.role = "Featuring" and director_0.name = "Christoph Waltz" and writer_0.name = "Quentin Tarantino" and cast_0.msid = movie_0.mid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and movie_0.mid = written_by_0.msid and writer_0.wid = written_by_0.wid
TOT: 0.9020516570341425; TR: 1.0; QF: 0.0; select movie_0.title from cast as cast_0, directed_by as directed_by_0, director as director_0, movie as movie_0, writer as writer_0, written_by as written_by_0 where cast_0.role = "Featuring" and director_0.name = "Quentin Tarantino" and writer_0.name = "Christoph Waltz" and cast_0.msid = movie_0.mid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and movie_0.mid = written_by_0.msid and writer_0.wid = written_by_0.wid
TOT: 0.9020516570341425; TR: 1.0; QF: 0.0; select movie_0.title from cast as cast_0, directed_by as directed_by_0, director as director_0, made_by as made_by_0, movie as movie_0, producer as producer_0 where cast_0.role = "Featuring" and director_0.name = "Christoph Waltz" and producer_0.name = "Quentin Tarantino" and cast_0.msid = movie_0.mid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid
TOT: 0.9020516570341425; TR: 1.0; QF: 0.0; select movie_0.title from cast as cast_0, directed_by as directed_by_0, director as director_0, made_by as made_by_0, movie as movie_0, producer as producer_0 where cast_0.role = "Featuring" and director_0.name = "Quentin Tarantino" and producer_0.name = "Christoph Waltz" and cast_0.msid = movie_0.mid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid
TOT: 0.9020516570341425; TR: 1.0; QF: 0.0; select movie_0.title from cast as cast_0, directed_by as directed_by_0, directed_by as directed_by_1, director as director_0, director as director_1, movie as movie_0 where cast_0.role = "Featuring" and director_0.name = "Christoph Waltz" and director_1.name = "Quentin Tarantino" and cast_0.msid = movie_0.mid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and directed_by_1.did = director_1.did and directed_by_1.msid = movie_0.mid
TOT: 0.8981904703086765; TR: 1.0; QF: 0.0; select movie_0.title from actor as actor_0, cast as cast_0, cast as cast_1, directed_by as directed_by_0, director as director_0, movie as movie_0, tv_series as tv_series_0 where actor_0.name = "Quentin Tarantino" and cast_0.role = "Featuring" and director_0.name = "Christoph Waltz" and actor_0.aid = cast_0.aid and actor_0.aid = cast_1.aid and cast_0.msid = movie_0.mid and cast_1.msid = tv_series_0.sid and directed_by_0.did = director_0.did and directed_by_0.msid = tv_series_0.sid
TOT: 0.8981904703086765; TR: 1.0; QF: 0.0; select movie_0.title from actor as actor_0, cast as cast_0, cast as cast_1, directed_by as directed_by_0, director as director_0, movie as movie_0, tv_series as tv_series_0 where actor_0.name = "Christoph Waltz" and cast_0.role = "Featuring" and director_0.name = "Quentin Tarantino" and actor_0.aid = cast_0.aid and actor_0.aid = cast_1.aid and cast_0.msid = movie_0.mid and cast_1.msid = tv_series_0.sid and directed_by_0.did = director_0.did and directed_by_0.msid = tv_series_0.sid
TOT: 0.8981904703086765; TR: 1.0; QF: 0.0; select movie_0.title from actor as actor_0, cast as cast_0, directed_by as directed_by_0, directed_by as directed_by_1, director as director_0, movie as movie_0, tv_series as tv_series_0 where actor_0.name = "Quentin Tarantino" and cast_0.role = "Featuring" and director_0.name = "Christoph Waltz" and actor_0.aid = cast_0.aid and cast_0.msid = tv_series_0.sid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and directed_by_1.did = director_0.did and directed_by_1.msid = tv_series_0.sid


03:12  INFO: ================
03:12  INFO: QUERY 75: List "James Bond" directors
03:12  INFO: ================
03:14  INFO: ================
03:14  INFO: QUERY 35: Find all movies about Persians
03:14  INFO: ================
863. ROOT: ROOT; NA; ; (0) 
864. Find: CMT; NA; ; (0) 
865. movies: NT; NA; all; (0) movie.title(1.0):| movie(1.0):| cast.role(0.95):Movie; Movie F; Movie AD; | company.name(0.95):Movies; Movie; Movie Movie; | tv_series.title(0.84):Movies, Movies, Movi; Movie Mob; Moon Movies; | keyword.keyword(0.83):movie-in-movie; movies-about-movies; b-movie; | actor.name(0.76):| 
867. Persians: VTTEXT; NA; ; (0) cast.role(1.0):Persian; Persian; Persian; | keyword.keyword(1.0):persian; persian-cat; persian-rug; | movie.title(0.82):Persian Version; Persian Eyes; The Persian; | director.name(0.74):Luke Persian; Persian Pink Panther; The Persian Ed Wood; | actor.name(0.74):Persian Lamb; Little Persian; Persian Princess Dia; | producer.name(0.74):Luke Persian; Persian Pink Panther; Persian Maglinte; | writer.name(0.74):Luke Persian; Persian Pink Panther; The Persian Ed Wood; | 
Find, VB
all, DT
movies, NNS
about, IN
Persians, NNP
root(ROOT-0, Find-1)
det(movies-3, all-2)
dobj(Find-1, movies-3)
case(Persians-5, about-4)
nmod(Find-1, Persians-5)

PARSE TREE:(863) ROOT ROOT
    (864) Find CMT
        (865) movies NT
        (867) Persians VTTEXT


===========
TRANSLATIONS
===========
TOT: 1.0; NL: 1.0; NL+AG: 1.0; NL+QF: 1.0; rels: []; projs: [movie_0.title]; preds: [cast_0.role = "Persian"]; havings: []; superlative: []; blanks: 0
TOT: 1.0; NL: 1.0; NL+AG: 1.0; NL+QF: 1.0; rels: []; projs: [movie_0.title]; preds: [keyword_0.keyword = "persian"]; havings: []; superlative: []; blanks: 0
TOT: 0.9064126192070304; NL: 0.9064126192070304; NL+AG: 0.990136484098398; NL+QF: 0.9064126192070304; rels: []; projs: [movie_0.title]; preds: [movie_0.title = "Persian Version"]; havings: []; superlative: []; blanks: 0
TOT: 0.8730692985095742; NL: 0.8730692985095742; NL+AG: 0.9889432485322897; NL+QF: 0.8730692985095742; rels: []; projs: [actor_0.name]; preds: [cast_0.role = "Persian"]; havings: []; superlative: []; blanks: 0
TOT: 0.8730692985095742; NL: 0.8730692985095742; NL+AG: 0.9889432485322897; NL+QF: 0.8730692985095742; rels: []; projs: [actor_0.name]; preds: [keyword_0.keyword = "persian"]; havings: []; superlative: []; blanks: 0
TOT: 0.8593887047640296; NL: 0.8593887047640296; NL+AG: 0.9889432485322897; NL+QF: 0.8593887047640296; rels: []; projs: [movie_0.title]; preds: [director_0.name = "Luke Persian"]; havings: []; superlative: []; blanks: 0
TOT: 0.8593887047640296; NL: 0.8593887047640296; NL+AG: 0.9889432485322897; NL+QF: 0.8593887047640296; rels: []; projs: [movie_0.title]; preds: [actor_0.name = "Persian Lamb"]; havings: []; superlative: []; blanks: 0
TOT: 0.8593887047640296; NL: 0.8593887047640296; NL+AG: 0.9889432485322897; NL+QF: 0.8593887047640296; rels: []; projs: [movie_0.title]; preds: [producer_0.name = "Luke Persian"]; havings: []; superlative: []; blanks: 0
TOT: 0.8593887047640296; NL: 0.8593887047640296; NL+AG: 0.9889432485322897; NL+QF: 0.8593887047640296; rels: []; projs: [movie_0.title]; preds: [writer_0.name = "Luke Persian"]; havings: []; superlative: []; blanks: 0
TOT: 0.82915619758885; NL: 0.82915619758885; NL+AG: 0.9889432485322897; NL+QF: 0.82915619758885; rels: []; projs: [tv_series_0.title]; preds: [cast_0.role = "Persian"]; havings: []; superlative: []; blanks: 0
TOT: 0.82915619758885; NL: 0.82915619758885; NL+AG: 0.9889432485322897; NL+QF: 0.82915619758885; rels: []; projs: [tv_series_0.title]; preds: [keyword_0.keyword = "persian"]; havings: []; superlative: []; blanks: 0
TOT: 0.82915619758885; NL: 0.82915619758885; NL+AG: 0.9889432485322897; NL+QF: 0.82915619758885; rels: []; projs: [tv_series_0.title]; preds: [cast_0.role = "Persian"]; havings: []; superlative: []; blanks: 0
TOT: 0.82915619758885; NL: 0.82915619758885; NL+AG: 0.9889432485322897; NL+QF: 0.82915619758885; rels: []; projs: [tv_series_0.title]; preds: [keyword_0.keyword = "persian"]; havings: []; superlative: []; blanks: 0

===========
RESULTS
===========
TOT: 0.9401561146012848; TR: 1.0; QF: 0.0; select movie_0.title from cast as cast_0, movie as movie_0 where cast_0.role = "Persian" and cast_0.msid = movie_0.mid
TOT: 0.9236121593216773; TR: 1.0; QF: 0.0; select movie_0.title from keyword as keyword_0, movie as movie_0, tags as tags_0 where keyword_0.keyword = "persian" and keyword_0.id = tags_0.kid and movie_0.mid = tags_0.msid
TOT: 0.9020516570341425; TR: 1.0; QF: 0.0; select movie_0.title from cast as cast_0, keyword as keyword_0, movie as movie_0, tags as tags_0, tags as tags_1, tv_series as tv_series_0 where cast_0.role = "Persian" and cast_0.msid = tv_series_0.sid and keyword_0.id = tags_0.kid and keyword_0.id = tags_1.kid and movie_0.mid = tags_0.msid and tags_1.msid = tv_series_0.sid
TOT: 0.9020516570341425; TR: 1.0; QF: 0.0; select movie_0.title from cast as cast_0, company as company_0, copyright as copyright_0, copyright as copyright_1, movie as movie_0, tv_series as tv_series_0 where cast_0.role = "Persian" and cast_0.msid = tv_series_0.sid and company_0.id = copyright_0.cid and company_0.id = copyright_1.cid and copyright_0.msid = movie_0.mid and copyright_1.msid = tv_series_0.sid
TOT: 0.9020516570341425; TR: 1.0; QF: 0.0; select movie_0.title from cast as cast_0, directed_by as directed_by_0, directed_by as directed_by_1, director as director_0, movie as movie_0, tv_series as tv_series_0 where cast_0.role = "Persian" and cast_0.msid = tv_series_0.sid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and directed_by_1.did = director_0.did and directed_by_1.msid = tv_series_0.sid
TOT: 0.9020516570341425; TR: 1.0; QF: 0.0; select movie_0.title from cast as cast_0, made_by as made_by_0, made_by as made_by_1, movie as movie_0, producer as producer_0, tv_series as tv_series_0 where cast_0.role = "Persian" and cast_0.msid = tv_series_0.sid and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid and made_by_1.msid = tv_series_0.sid and made_by_1.pid = producer_0.pid
TOT: 0.9020516570341425; TR: 1.0; QF: 0.0; select movie_0.title from cast as cast_0, movie as movie_0, tv_series as tv_series_0, writer as writer_0, written_by as written_by_0, written_by as written_by_1 where cast_0.role = "Persian" and cast_0.msid = tv_series_0.sid and movie_0.mid = written_by_0.msid and tv_series_0.sid = written_by_1.msid and writer_0.wid = written_by_0.wid and writer_0.wid = written_by_1.wid
TOT: 0.9020516570341425; TR: 1.0; QF: 0.0; select movie_0.title from cast as cast_0, classification as classification_0, classification as classification_1, genre as genre_0, movie as movie_0, tv_series as tv_series_0 where cast_0.role = "Persian" and cast_0.msid = tv_series_0.sid and classification_0.gid = genre_0.gid and classification_0.msid = movie_0.mid and classification_1.gid = genre_0.gid and classification_1.msid = tv_series_0.sid
TOT: 0.8981904703086765; TR: 1.0; QF: 0.0; select movie_0.title from keyword as keyword_0, made_by as made_by_0, made_by as made_by_1, movie as movie_0, producer as producer_0, tags as tags_0, tv_series as tv_series_0 where keyword_0.keyword = "persian" and keyword_0.id = tags_0.kid and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid and made_by_1.msid = tv_series_0.sid and made_by_1.pid = producer_0.pid and tags_0.msid = tv_series_0.sid
TOT: 0.8981904703086765; TR: 1.0; QF: 0.0; select movie_0.title from directed_by as directed_by_0, directed_by as directed_by_1, director as director_0, keyword as keyword_0, movie as movie_0, tags as tags_0, tv_series as tv_series_0 where keyword_0.keyword = "persian" and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and directed_by_1.did = director_0.did and directed_by_1.msid = tv_series_0.sid and keyword_0.id = tags_0.kid and tags_0.msid = tv_series_0.sid


03:15  INFO: ================
03:15  INFO: QUERY 114: Find all movies that star both "Angelina Jolie" and "Brad Pitt"
03:15  INFO: ================
870. ROOT: ROOT; NA; ; (0) 
871. Find: CMT; NA; ; (0) 
872. movies: NT; NA; all; (0) movie.title(1.0):| movie(1.0):| cast.role(0.95):Movie; Movie F; Movie AD; | company.name(0.95):Movies; Movie; Movie Movie; | tv_series.title(0.84):Movies, Movies, Movi; Movie Mob; Moon Movies; | keyword.keyword(0.83):movie-in-movie; movies-about-movies; b-movie; | actor.name(0.76):| 
874. star: NT; NA; ; (0) actor.name(0.73):| actor(0.73):| writer.name(0.69):| writer(0.69):| cast.role(0.66):| cast(0.66):| producer.name(0.65):| 
876. Angelina Jolie: VTTEXT; NA; ; (0) director.name(1.0):Angelina Jolie; Angelina Jolie; Angelina Jolie Pitt; | actor.name(1.0):Angelina Jolie; Angelina Jolie; Angelina Jolie Pitt; | producer.name(1.0):Angelina Jolie; Angelina Jolie; Angelina Jolie Pitt; | writer.name(1.0):Angelina Jolie; Angelina Jolie; Angelina Jolie Pitt; | cast.role(0.82):Angelina Jones; Angelina John; Angelina Jones; | movie.title(0.78):Angelina; Angelina; Angelina; | keyword.keyword(0.62):referece-to-angelina; referece-to-angelina; | 
879. Brad Pitt: VTTEXT; NA; ; (0) actor.name(1.0):Brad Pitt; Brad Pitt; bRad sPitt; | cast.role(1.0):Brad Pitt'; Brad Pitt'; Brad Pitt #1; | producer.name(1.0):Brad Pitt; Brad Pitt; Mad Pitt; | director.name(0.78):Brad Pruitt; Brad Pruitt; Brad Witty; | writer.name(0.78):Brad Pruitt; Brad Pruitt; Brad Witt; | movie.title(0.72):Brad Pitt Video Port; Brad Pitt Video Port; Brad; | actor.birth_city(0.61):Brad; Brad; Pitt Meadows; | 
Find, VB
all, DT
movies, NNS
that, WDT
star, VB
both, CC
Angelina Jolie, NNP
and, CC
Brad Pitt, NNP
root(ROOT-0, Find-1)
det(movies-3, all-2)
dobj(Find-1, movies-3)
nsubj(star-5, that-4)
acl:relcl(movies-3, star-5)
cc:preconj(Angelina Jolie-7, both-6)
dobj(star-5, Angelina Jolie-7)
cc(Angelina Jolie-7, and-8)
conj(Angelina Jolie-7, Brad Pitt-9)

PARSE TREE:(870) ROOT ROOT
    (871) Find CMT
        (872) movies NT
            (874) star NT
                (876) Angelina Jolie VTTEXT
                (879) Brad Pitt VTTEXT


===========
TRANSLATIONS
===========
TOT: 1.0; NL: 1.0; NL+AG: 1.0; NL+QF: 1.0; rels: []; projs: [movie_0.title]; preds: [director_0.name = "Angelina Jolie",actor_0.name = "Brad Pitt"]; havings: []; superlative: []; blanks: 0
TOT: 1.0; NL: 1.0; NL+AG: 1.0; NL+QF: 1.0; rels: []; projs: [movie_0.title]; preds: [actor_0.name = "Angelina Jolie",actor_0.name = "Brad Pitt"]; havings: []; superlative: []; blanks: 0
TOT: 1.0; NL: 1.0; NL+AG: 1.0; NL+QF: 1.0; rels: []; projs: [movie_0.title]; preds: [actor_0.name = "Angelina Jolie",cast_0.role = "Brad Pitt'"]; havings: []; superlative: []; blanks: 0
TOT: 1.0; NL: 1.0; NL+AG: 1.0; NL+QF: 1.0; rels: []; projs: [movie_0.title]; preds: [actor_0.name = "Angelina Jolie",producer_0.name = "Brad Pitt"]; havings: []; superlative: []; blanks: 0
TOT: 1.0; NL: 1.0; NL+AG: 1.0; NL+QF: 1.0; rels: []; projs: [movie_0.title]; preds: [actor_0.name = "Angelina Jolie",actor_0.name = "Brad Pitt"]; havings: []; superlative: []; blanks: 0
TOT: 1.0; NL: 1.0; NL+AG: 1.0; NL+QF: 1.0; rels: []; projs: [movie_0.title]; preds: [producer_0.name = "Angelina Jolie",actor_0.name = "Brad Pitt"]; havings: []; superlative: []; blanks: 0
TOT: 1.0; NL: 1.0; NL+AG: 1.0; NL+QF: 1.0; rels: []; projs: [movie_0.title]; preds: [writer_0.name = "Angelina Jolie",actor_0.name = "Brad Pitt"]; havings: []; superlative: []; blanks: 0
TOT: 1.0; NL: 1.0; NL+AG: 1.0; NL+QF: 1.0; rels: []; projs: [movie_0.title]; preds: [writer_0.name = "Angelina Jolie",actor_0.name = "Brad Pitt"]; havings: []; superlative: []; blanks: 0
TOT: 1.0; NL: 1.0; NL+AG: 1.0; NL+QF: 1.0; rels: []; projs: [movie_0.title]; preds: [writer_0.name = "Angelina Jolie",cast_0.role = "Brad Pitt'"]; havings: []; superlative: []; blanks: 0
TOT: 1.0; NL: 1.0; NL+AG: 1.0; NL+QF: 1.0; rels: []; projs: [movie_0.title]; preds: [writer_0.name = "Angelina Jolie",producer_0.name = "Brad Pitt"]; havings: []; superlative: []; blanks: 0
TOT: 1.0; NL: 1.0; NL+AG: 1.0; NL+QF: 1.0; rels: []; projs: [movie_0.title]; preds: [director_0.name = "Angelina Jolie",cast_0.role = "Brad Pitt'"]; havings: []; superlative: []; blanks: 0
TOT: 1.0; NL: 1.0; NL+AG: 1.0; NL+QF: 1.0; rels: []; projs: [movie_0.title]; preds: [actor_0.name = "Angelina Jolie",cast_0.role = "Brad Pitt'"]; havings: []; superlative: []; blanks: 0
TOT: 1.0; NL: 1.0; NL+AG: 1.0; NL+QF: 1.0; rels: []; projs: [movie_0.title]; preds: [producer_0.name = "Angelina Jolie",cast_0.role = "Brad Pitt'"]; havings: []; superlative: []; blanks: 0
TOT: 1.0; NL: 1.0; NL+AG: 1.0; NL+QF: 1.0; rels: []; projs: [movie_0.title]; preds: [writer_0.name = "Angelina Jolie",cast_0.role = "Brad Pitt'"]; havings: []; superlative: []; blanks: 0
TOT: 1.0; NL: 1.0; NL+AG: 1.0; NL+QF: 1.0; rels: []; projs: [movie_0.title]; preds: [director_0.name = "Angelina Jolie",producer_0.name = "Brad Pitt"]; havings: []; superlative: []; blanks: 0
TOT: 1.0; NL: 1.0; NL+AG: 1.0; NL+QF: 1.0; rels: []; projs: [movie_0.title]; preds: [actor_0.name = "Angelina Jolie",producer_0.name = "Brad Pitt"]; havings: []; superlative: []; blanks: 0
TOT: 1.0; NL: 1.0; NL+AG: 1.0; NL+QF: 1.0; rels: []; projs: [movie_0.title]; preds: [producer_0.name = "Angelina Jolie",actor_0.name = "Brad Pitt"]; havings: []; superlative: []; blanks: 0
TOT: 1.0; NL: 1.0; NL+AG: 1.0; NL+QF: 1.0; rels: []; projs: [movie_0.title]; preds: [producer_0.name = "Angelina Jolie",cast_0.role = "Brad Pitt'"]; havings: []; superlative: []; blanks: 0
TOT: 1.0; NL: 1.0; NL+AG: 1.0; NL+QF: 1.0; rels: []; projs: [movie_0.title]; preds: [producer_0.name = "Angelina Jolie",producer_0.name = "Brad Pitt"]; havings: []; superlative: []; blanks: 0
TOT: 1.0; NL: 1.0; NL+AG: 1.0; NL+QF: 1.0; rels: []; projs: [movie_0.title]; preds: [producer_0.name = "Angelina Jolie",producer_0.name = "Brad Pitt"]; havings: []; superlative: []; blanks: 0
TOT: 1.0; NL: 1.0; NL+AG: 1.0; NL+QF: 1.0; rels: []; projs: [movie_0.title]; preds: [writer_0.name = "Angelina Jolie",producer_0.name = "Brad Pitt"]; havings: []; superlative: []; blanks: 0

===========
RESULTS
===========
TOT: 0.9236121593216773; TR: 1.0; QF: 0.0; select movie_0.title from actor as actor_0, cast as cast_0, movie as movie_0 where actor_0.name = "Angelina Jolie" and cast_0.role = "Brad Pitt'" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid
TOT: 0.91375; TR: 1.0; QF: 0.0; select movie_0.title from cast as cast_0, made_by as made_by_0, movie as movie_0, producer as producer_0 where cast_0.role = "Brad Pitt'" and producer_0.name = "Angelina Jolie" and cast_0.msid = movie_0.mid and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid
TOT: 0.91375; TR: 1.0; QF: 0.0; select movie_0.title from cast as cast_0, directed_by as directed_by_0, director as director_0, movie as movie_0 where cast_0.role = "Brad Pitt'" and director_0.name = "Angelina Jolie" and cast_0.msid = movie_0.mid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid
TOT: 0.91375; TR: 1.0; QF: 0.0; select movie_0.title from cast as cast_0, movie as movie_0, writer as writer_0, written_by as written_by_0 where cast_0.role = "Brad Pitt'" and writer_0.name = "Angelina Jolie" and cast_0.msid = movie_0.mid and movie_0.mid = written_by_0.msid and writer_0.wid = written_by_0.wid
TOT: 0.9070197334262446; TR: 1.0; QF: 0.0; select movie_0.title from actor as actor_0, cast as cast_0, movie as movie_0, writer as writer_0, written_by as written_by_0 where actor_0.name = "Brad Pitt" and writer_0.name = "Angelina Jolie" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and movie_0.mid = written_by_0.msid and writer_0.wid = written_by_0.wid
TOT: 0.9070197334262446; TR: 1.0; QF: 0.0; select movie_0.title from directed_by as directed_by_0, director as director_0, made_by as made_by_0, movie as movie_0, producer as producer_0 where director_0.name = "Angelina Jolie" and producer_0.name = "Brad Pitt" and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid
TOT: 0.9070197334262446; TR: 1.0; QF: 0.0; select movie_0.title from actor as actor_0, cast as cast_0, directed_by as directed_by_0, director as director_0, movie as movie_0 where actor_0.name = "Brad Pitt" and director_0.name = "Angelina Jolie" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid
TOT: 0.9070197334262446; TR: 1.0; QF: 0.0; select movie_0.title from made_by as made_by_0, movie as movie_0, producer as producer_0, writer as writer_0, written_by as written_by_0 where producer_0.name = "Brad Pitt" and writer_0.name = "Angelina Jolie" and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid and movie_0.mid = written_by_0.msid and writer_0.wid = written_by_0.wid
TOT: 0.9070197334262446; TR: 1.0; QF: 0.0; select movie_0.title from actor as actor_0, cast as cast_0, made_by as made_by_0, movie as movie_0, producer as producer_0 where actor_0.name = "Angelina Jolie" and producer_0.name = "Brad Pitt" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid
TOT: 0.9070197334262446; TR: 1.0; QF: 0.0; select movie_0.title from actor as actor_0, cast as cast_0, made_by as made_by_0, movie as movie_0, producer as producer_0 where actor_0.name = "Brad Pitt" and producer_0.name = "Angelina Jolie" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid


03:17  INFO: ================
03:17  INFO: QUERY 14: Find all actors from Italy
03:17  INFO: ================
03:17  INFO: ================
03:17  INFO: QUERY 99: How many movies about Persians were released after 1990?
03:17  INFO: ================
888. ROOT: ROOT; NA; ; (0) 
889. released: NT; NA; ; (0) movie.release_year(1.0):| tv_series.release_year(1.0):| movie.title(0.64):| movie(0.64):| movie.title_aka(0.63):| tv_series.title_aka(0.63):| cast.role(0.63):| 
891. How many: CMT; count; ; (0) 
892. movies: NT; NA; ; (0) movie.title(1.0):| movie(1.0):| cast.role(0.95):Movie; Movie F; Movie AD; | company.name(0.95):Movies; Movie; Movie Movie; | tv_series.title(0.84):Movies, Movies, Movi; Movie Mob; Moon Movies; | keyword.keyword(0.83):movie-in-movie; movies-about-movies; b-movie; | actor.name(0.76):| 
893. Persians: VTTEXT; NA; ; (0) cast.role(1.0):Persian; Persian; Persian; | keyword.keyword(1.0):persian; persian-cat; persian-rug; | movie.title(0.82):Persian Version; Persian Eyes; The Persian; | director.name(0.74):Luke Persian; Persian Pink Panther; The Persian Ed Wood; | actor.name(0.74):Persian Lamb; Little Persian; Persian Princess Dia; | producer.name(0.74):Luke Persian; Persian Pink Panther; Persian Maglinte; | writer.name(0.74):Luke Persian; Persian Pink Panther; The Persian Ed Wood; | 
896. 1990: VTNUM; NA; ; (0) movie.release_year(1.0):2012; 2014; 2015; | director.birth_year(1.0):1993; 1994; 1996; | tv_series.release_year(1.0):2014; 1991; 2014; | actor.birth_year(1.0):1999; 2003; 1993; | producer.birth_year(1.0):1993; 1997; 1995; | writer.birth_year(1.0):1993; 1994; 1998; | 
897. after: OT; >; ; (0) 
How, WRB
many, JJ
movies, NNS
about, IN
Persians, NNP
were, VBD
released, VBN
after, IN
1990, CD
advmod(many-2, How-1)
dep(released-7, many-2)
nsubjpass(released-7, movies-3)
case(Persians-5, about-4)
nmod(movies-3, Persians-5)
auxpass(released-7, were-6)
root(ROOT-0, released-7)
case(1990-9, after-8)
nmod(released-7, 1990-9)

PARSE TREE:(888) ROOT ROOT
    (891) How many CMT
        (892) movies NT
            (893) Persians VTTEXT
            (889) released NT
                (896) 1990 VTNUM
                    (897) after OT


===========
TRANSLATIONS
===========
TOT: 1.0; NL: 1.0; NL+AG: 1.0; NL+QF: 1.0; rels: []; projs: [count(distinct(movie_0.title))]; preds: [cast_0.role = "Persian",movie_0.release_year > 1990]; havings: []; superlative: []; blanks: 0
TOT: 1.0; NL: 1.0; NL+AG: 1.0; NL+QF: 1.0; rels: []; projs: [count(distinct(movie_0.title))]; preds: [keyword_0.keyword = "persian",movie_0.release_year > 1990]; havings: []; superlative: []; blanks: 0
TOT: 1.0; NL: 1.0; NL+AG: 1.0; NL+QF: 1.0; rels: []; projs: [count(distinct(movie_0.title))]; preds: [cast_0.role = "Persian",tv_series_0.release_year > 1990]; havings: []; superlative: []; blanks: 0
TOT: 1.0; NL: 1.0; NL+AG: 1.0; NL+QF: 1.0; rels: []; projs: [count(distinct(movie_0.title))]; preds: [keyword_0.keyword = "persian",tv_series_0.release_year > 1990]; havings: []; superlative: []; blanks: 0
TOT: 0.936592398786078; NL: 0.936592398786078; NL+AG: 0.9772495308342077; NL+QF: 0.936592398786078; rels: []; projs: [count(distinct(movie_0.title))]; preds: [movie_0.title = "Persian Version",movie_0.release_year > 1990]; havings: []; superlative: []; blanks: 0
TOT: 0.936592398786078; NL: 0.936592398786078; NL+AG: 0.9772495308342077; NL+QF: 0.936592398786078; rels: []; projs: [count(distinct(movie_0.title))]; preds: [movie_0.title = "Persian Version",tv_series_0.release_year > 1990]; havings: []; superlative: []; blanks: 0
TOT: 0.9134802127015484; NL: 0.9134802127015484; NL+AG: 0.9717124183006537; NL+QF: 0.9134802127015484; rels: []; projs: [count(distinct(actor_0.name))]; preds: [cast_0.role = "Persian",movie_0.release_year > 1990]; havings: []; superlative: []; blanks: 0
TOT: 0.9134802127015484; NL: 0.9134802127015484; NL+AG: 0.9717124183006537; NL+QF: 0.9134802127015484; rels: []; projs: [count(distinct(actor_0.name))]; preds: [keyword_0.keyword = "persian",movie_0.release_year > 1990]; havings: []; superlative: []; blanks: 0
TOT: 0.9134802127015484; NL: 0.9134802127015484; NL+AG: 0.9717124183006537; NL+QF: 0.9134802127015484; rels: []; projs: [count(distinct(actor_0.name))]; preds: [cast_0.role = "Persian",tv_series_0.release_year > 1990]; havings: []; superlative: []; blanks: 0
TOT: 0.9134802127015484; NL: 0.9134802127015484; NL+AG: 0.9717124183006537; NL+QF: 0.9134802127015484; rels: []; projs: [count(distinct(actor_0.name))]; preds: [keyword_0.keyword = "persian",tv_series_0.release_year > 1990]; havings: []; superlative: []; blanks: 0
TOT: 0.9039125735618705; NL: 0.9039125735618705; NL+AG: 0.9744973003694231; NL+QF: 0.9039125735618705; rels: []; projs: [count(distinct(movie_0.title))]; preds: [director_0.name = "Luke Persian",movie_0.release_year > 1990]; havings: []; superlative: []; blanks: 0
TOT: 0.9039125735618705; NL: 0.9039125735618705; NL+AG: 0.9744973003694231; NL+QF: 0.9039125735618705; rels: []; projs: [count(distinct(movie_0.title))]; preds: [actor_0.name = "Persian Lamb",movie_0.release_year > 1990]; havings: []; superlative: []; blanks: 0
TOT: 0.9039125735618705; NL: 0.9039125735618705; NL+AG: 0.9744973003694231; NL+QF: 0.9039125735618705; rels: []; projs: [count(distinct(movie_0.title))]; preds: [producer_0.name = "Luke Persian",movie_0.release_year > 1990]; havings: []; superlative: []; blanks: 0
TOT: 0.9039125735618705; NL: 0.9039125735618705; NL+AG: 0.9744973003694231; NL+QF: 0.9039125735618705; rels: []; projs: [count(distinct(movie_0.title))]; preds: [writer_0.name = "Luke Persian",movie_0.release_year > 1990]; havings: []; superlative: []; blanks: 0
TOT: 0.9039125735618705; NL: 0.9039125735618705; NL+AG: 0.9744973003694231; NL+QF: 0.9039125735618705; rels: []; projs: [count(distinct(movie_0.title))]; preds: [director_0.name = "Luke Persian",tv_series_0.release_year > 1990]; havings: []; superlative: []; blanks: 0
TOT: 0.9039125735618705; NL: 0.9039125735618705; NL+AG: 0.9744973003694231; NL+QF: 0.9039125735618705; rels: []; projs: [count(distinct(movie_0.title))]; preds: [actor_0.name = "Persian Lamb",tv_series_0.release_year > 1990]; havings: []; superlative: []; blanks: 0
TOT: 0.9039125735618705; NL: 0.9039125735618705; NL+AG: 0.9744973003694231; NL+QF: 0.9039125735618705; rels: []; projs: [count(distinct(movie_0.title))]; preds: [producer_0.name = "Luke Persian",tv_series_0.release_year > 1990]; havings: []; superlative: []; blanks: 0
TOT: 0.9039125735618705; NL: 0.9039125735618705; NL+AG: 0.9744973003694231; NL+QF: 0.9039125735618705; rels: []; projs: [count(distinct(movie_0.title))]; preds: [writer_0.name = "Luke Persian",tv_series_0.release_year > 1990]; havings: []; superlative: []; blanks: 0

===========
RESULTS
===========
TOT: 0.9401561146012848; TR: 1.0; QF: 0.0; select count(distinct(movie_0.title)) from cast as cast_0, movie as movie_0 where cast_0.role = "Persian" and movie_0.release_year > 1990 and cast_0.msid = movie_0.mid
TOT: 0.9236121593216773; TR: 1.0; QF: 0.0; select count(distinct(movie_0.title)) from keyword as keyword_0, movie as movie_0, tags as tags_0 where keyword_0.keyword = "persian" and movie_0.release_year > 1990 and keyword_0.id = tags_0.kid and movie_0.mid = tags_0.msid
TOT: 0.9070197334262446; TR: 1.0; QF: 0.0; select count(distinct(movie_0.title)) from keyword as keyword_0, movie as movie_0, tags as tags_0, tags as tags_1, tv_series as tv_series_0 where keyword_0.keyword = "persian" and tv_series_0.release_year > 1990 and keyword_0.id = tags_0.kid and keyword_0.id = tags_1.kid and movie_0.mid = tags_0.msid and tags_1.msid = tv_series_0.sid
TOT: 0.9070197334262446; TR: 1.0; QF: 0.0; select count(distinct(movie_0.title)) from actor as actor_0, cast as cast_0, cast as cast_1, movie as movie_0, tv_series as tv_series_0 where cast_0.role = "Persian" and tv_series_0.release_year > 1990 and actor_0.aid = cast_0.aid and actor_0.aid = cast_1.aid and cast_0.msid = movie_0.mid and cast_1.msid = tv_series_0.sid
TOT: 0.9020516570341425; TR: 1.0; QF: 0.0; select count(distinct(movie_0.title)) from cast as cast_0, keyword as keyword_0, movie as movie_0, tags as tags_0, tags as tags_1, tv_series as tv_series_0 where cast_0.role = "Persian" and movie_0.release_year > 1990 and cast_0.msid = tv_series_0.sid and keyword_0.id = tags_0.kid and keyword_0.id = tags_1.kid and movie_0.mid = tags_0.msid and tags_1.msid = tv_series_0.sid
TOT: 0.9020516570341425; TR: 1.0; QF: 0.0; select count(distinct(movie_0.title)) from cast as cast_0, keyword as keyword_0, movie as movie_0, tags as tags_0, tags as tags_1, tv_series as tv_series_0 where cast_0.role = "Persian" and tv_series_0.release_year > 1990 and cast_0.msid = tv_series_0.sid and keyword_0.id = tags_0.kid and keyword_0.id = tags_1.kid and movie_0.mid = tags_0.msid and tags_1.msid = tv_series_0.sid
TOT: 0.9020516570341425; TR: 1.0; QF: 0.0; select count(distinct(movie_0.title)) from cast as cast_0, company as company_0, copyright as copyright_0, copyright as copyright_1, movie as movie_0, tv_series as tv_series_0 where cast_0.role = "Persian" and movie_0.release_year > 1990 and cast_0.msid = tv_series_0.sid and company_0.id = copyright_0.cid and company_0.id = copyright_1.cid and copyright_0.msid = movie_0.mid and copyright_1.msid = tv_series_0.sid
TOT: 0.9020516570341425; TR: 1.0; QF: 0.0; select count(distinct(movie_0.title)) from cast as cast_0, company as company_0, copyright as copyright_0, copyright as copyright_1, movie as movie_0, tv_series as tv_series_0 where cast_0.role = "Persian" and tv_series_0.release_year > 1990 and cast_0.msid = tv_series_0.sid and company_0.id = copyright_0.cid and company_0.id = copyright_1.cid and copyright_0.msid = movie_0.mid and copyright_1.msid = tv_series_0.sid
TOT: 0.9020516570341425; TR: 1.0; QF: 0.0; select count(distinct(movie_0.title)) from cast as cast_0, directed_by as directed_by_0, directed_by as directed_by_1, director as director_0, movie as movie_0, tv_series as tv_series_0 where cast_0.role = "Persian" and movie_0.release_year > 1990 and cast_0.msid = tv_series_0.sid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and directed_by_1.did = director_0.did and directed_by_1.msid = tv_series_0.sid
TOT: 0.9020516570341425; TR: 1.0; QF: 0.0; select count(distinct(movie_0.title)) from cast as cast_0, directed_by as directed_by_0, directed_by as directed_by_1, director as director_0, movie as movie_0, tv_series as tv_series_0 where cast_0.role = "Persian" and tv_series_0.release_year > 1990 and cast_0.msid = tv_series_0.sid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and directed_by_1.did = director_0.did and directed_by_1.msid = tv_series_0.sid


03:18  INFO: ================
03:18  INFO: QUERY 112: How many actors from China have acted in "Rush Hour 3"
03:18  INFO: ================
899. ROOT: ROOT; NA; ; (0) 
900. acted: NT; NA; ; (0) movie.release_year(0.63):| tv_series.release_year(0.63):| actor.name(0.62):| actor(0.62):| genre.genre(0.62):| genre(0.62):| made_by(0.61):| 
902. How many: CMT; count; ; (0) 
903. actors: NT; NA; ; (0) actor.name(1.0):| actor(1.0):| movie.title(0.95):Actors; Actors; Actors; | tv_series.title(0.95):Actors; Actor; The Actor Factor; | cast.role(0.95):Actors; Actors; Actors; | keyword.keyword(0.95):actors; actor-director; no-actors; | company.name(0.79):For Actors by Actors; Actors Loft; Actors Pool; | 
904. China: VTTEXT; NA; ; (0) movie.title(1.0):China; China; China; | director.nationality(1.0):China; China; China; | director.name(1.0):China; China Chung; China Chung; | actor.nationality(1.0):China; China; China; | actor.name(1.0):China; China; China; | producer.nationality(1.0):China; China; China; | producer.name(1.0):China; Ed China; China Chung; | 
907. Rush Hour 3: VTTEXT; NA; ; (0) movie.title(0.95):Rush Hour 3; Rush Hour 3; Rush Hour 2; | tv_series.title(0.85):Rush Hour; Rush Hour; Rush Hour; | cast.role(0.7):Rush Hour Driver; Rush Hour Driver; Rush Hour Driver; | actor.name(0.64):Rush Holt; Rush Holt; Rush; | keyword.keyword(0.64):rush-hour; rush-hour; hour; | company.name(0.62):Rush Hour Production; Rush Hour Production; Rush HD; | director.name(0.52):Rush; Rush; Rush; | 
How, WRB
many, JJ
actors, NNS
from, IN
China, NNP
have, VBP
acted, VBN
in, IN
Rush Hour 3, NNS
advmod(many-2, How-1)
dep(acted-7, many-2)
nsubj(acted-7, actors-3)
case(China-5, from-4)
nmod(actors-3, China-5)
aux(acted-7, have-6)
root(ROOT-0, acted-7)
case(Rush Hour 3-9, in-8)
nmod(acted-7, Rush Hour 3-9)

PARSE TREE:(899) ROOT ROOT
    (902) How many CMT
        (903) actors NT
            (904) China VTTEXT
            (900) acted NT
                (907) Rush Hour 3 VTTEXT


===========
TRANSLATIONS
===========
TOT: 0.806225774829855; NL: 0.806225774829855; NL+AG: 0.9326779061577943; NL+QF: 0.806225774829855; rels: []; projs: [count(distinct(actor_0.name))]; preds: [movie_0.title = "China"]; havings: []; superlative: []; blanks: 2
TOT: 0.806225774829855; NL: 0.806225774829855; NL+AG: 0.9326779061577943; NL+QF: 0.806225774829855; rels: []; projs: [count(distinct(actor_0.name))]; preds: [director_0.nationality = "China"]; havings: []; superlative: []; blanks: 2
TOT: 0.806225774829855; NL: 0.806225774829855; NL+AG: 0.9326779061577943; NL+QF: 0.806225774829855; rels: []; projs: [count(distinct(actor_0.name))]; preds: [director_0.name = "China"]; havings: []; superlative: []; blanks: 2
TOT: 0.806225774829855; NL: 0.806225774829855; NL+AG: 0.9326779061577943; NL+QF: 0.806225774829855; rels: []; projs: [count(distinct(actor_0.name))]; preds: [actor_0.nationality = "China"]; havings: []; superlative: []; blanks: 2
TOT: 0.806225774829855; NL: 0.806225774829855; NL+AG: 0.9326779061577943; NL+QF: 0.806225774829855; rels: []; projs: [count(distinct(actor_0.name))]; preds: [actor_0.name = "China"]; havings: []; superlative: []; blanks: 2
TOT: 0.806225774829855; NL: 0.806225774829855; NL+AG: 0.9326779061577943; NL+QF: 0.806225774829855; rels: []; projs: [count(distinct(actor_0.name))]; preds: [producer_0.nationality = "China"]; havings: []; superlative: []; blanks: 2
TOT: 0.806225774829855; NL: 0.806225774829855; NL+AG: 0.9326779061577943; NL+QF: 0.806225774829855; rels: []; projs: [count(distinct(actor_0.name))]; preds: [producer_0.name = "China"]; havings: []; superlative: []; blanks: 2
TOT: 0.7533226692667779; NL: 0.7533226692667779; NL+AG: 0.9057922005575166; NL+QF: 0.7533226692667779; rels: []; projs: [count(distinct(movie_0.title))]; preds: [movie_0.title = "China"]; havings: []; superlative: []; blanks: 2
TOT: 0.7533226692667779; NL: 0.7533226692667779; NL+AG: 0.9057922005575166; NL+QF: 0.7533226692667779; rels: []; projs: [count(distinct(movie_0.title))]; preds: [director_0.nationality = "China"]; havings: []; superlative: []; blanks: 2
TOT: 0.7533226692667779; NL: 0.7533226692667779; NL+AG: 0.9057922005575166; NL+QF: 0.7533226692667779; rels: []; projs: [count(distinct(movie_0.title))]; preds: [director_0.name = "China"]; havings: []; superlative: []; blanks: 2
TOT: 0.7533226692667779; NL: 0.7533226692667779; NL+AG: 0.9057922005575166; NL+QF: 0.7533226692667779; rels: []; projs: [count(distinct(movie_0.title))]; preds: [actor_0.nationality = "China"]; havings: []; superlative: []; blanks: 2
TOT: 0.7533226692667779; NL: 0.7533226692667779; NL+AG: 0.9057922005575166; NL+QF: 0.7533226692667779; rels: []; projs: [count(distinct(movie_0.title))]; preds: [actor_0.name = "China"]; havings: []; superlative: []; blanks: 2
TOT: 0.7533226692667779; NL: 0.7533226692667779; NL+AG: 0.9057922005575166; NL+QF: 0.7533226692667779; rels: []; projs: [count(distinct(movie_0.title))]; preds: [producer_0.nationality = "China"]; havings: []; superlative: []; blanks: 2
TOT: 0.7533226692667779; NL: 0.7533226692667779; NL+AG: 0.9057922005575166; NL+QF: 0.7533226692667779; rels: []; projs: [count(distinct(movie_0.title))]; preds: [producer_0.name = "China"]; havings: []; superlative: []; blanks: 2

===========
RESULTS
===========
TOT: 0.8352919086053767; TR: 0.806225774829855; QF: 1.0; select count(distinct(actor_0.name)) from actor as actor_0 where actor_0.nationality = "China"
TOT: 0.758904067927054; TR: 0.806225774829855; QF: 0.0; select count(distinct(actor_0.name)) from actor as actor_0, cast as cast_0, movie as movie_0 where movie_0.title = "China" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid
TOT: 0.7423116420316214; TR: 0.806225774829855; QF: 0.0; select count(distinct(actor_0.name)) from actor as actor_0, cast as cast_0, directed_by as directed_by_0, director as director_0, movie as movie_0 where director_0.nationality = "China" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid
TOT: 0.7423116420316214; TR: 0.806225774829855; QF: 0.0; select count(distinct(actor_0.name)) from actor as actor_0, cast as cast_0, directed_by as directed_by_0, director as director_0, movie as movie_0 where director_0.name = "China" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid
TOT: 0.7423116420316214; TR: 0.806225774829855; QF: 0.0; select count(distinct(actor_0.name)) from actor as actor_0, cast as cast_0, directed_by as directed_by_0, director as director_0, tv_series as tv_series_0 where director_0.nationality = "China" and actor_0.aid = cast_0.aid and cast_0.msid = tv_series_0.sid and directed_by_0.did = director_0.did and directed_by_0.msid = tv_series_0.sid
TOT: 0.7423116420316214; TR: 0.806225774829855; QF: 0.0; select count(distinct(actor_0.name)) from actor as actor_0, cast as cast_0, directed_by as directed_by_0, director as director_0, tv_series as tv_series_0 where director_0.name = "China" and actor_0.aid = cast_0.aid and cast_0.msid = tv_series_0.sid and directed_by_0.did = director_0.did and directed_by_0.msid = tv_series_0.sid
TOT: 0.7423116420316214; TR: 0.806225774829855; QF: 0.0; select count(distinct(actor_0.name)) from actor as actor_0, actor as actor_1, cast as cast_0, cast as cast_1, tv_series as tv_series_0 where actor_1.name = "China" and actor_0.aid = cast_0.aid and actor_1.aid = cast_1.aid and cast_0.msid = tv_series_0.sid and cast_1.msid = tv_series_0.sid
TOT: 0.7423116420316214; TR: 0.806225774829855; QF: 0.0; select count(distinct(actor_0.name)) from actor as actor_0, cast as cast_0, made_by as made_by_0, movie as movie_0, producer as producer_0 where producer_0.nationality = "China" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid
TOT: 0.7423116420316214; TR: 0.806225774829855; QF: 0.0; select count(distinct(actor_0.name)) from actor as actor_0, cast as cast_0, made_by as made_by_0, movie as movie_0, producer as producer_0 where producer_0.name = "China" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid
TOT: 0.7423116420316214; TR: 0.806225774829855; QF: 0.0; select count(distinct(actor_0.name)) from actor as actor_0, cast as cast_0, made_by as made_by_0, producer as producer_0, tv_series as tv_series_0 where producer_0.nationality = "China" and actor_0.aid = cast_0.aid and cast_0.msid = tv_series_0.sid and made_by_0.msid = tv_series_0.sid and made_by_0.pid = producer_0.pid


03:19  INFO: ================
03:19  INFO: QUERY 36: Who are the actors born in "New York City" after 1990?
03:19  INFO: ================
03:22  INFO: ================
03:22  INFO: QUERY 81: Which movie had the character "Daffy Duck"
03:22  INFO: ================
03:23  INFO: ================
03:23  INFO: QUERY 40: Find all movies about Autism
03:23  INFO: ================
03:24  INFO: ================
03:24  INFO: QUERY 5: Find all actors who are from Canada
03:24  INFO: ================
03:24  INFO: ================
03:24  INFO: QUERY 121: Who acted in the most number of movies directed by "Jim Jarmusch"
03:24  INFO: ================
945. ROOT: ROOT; NA; ; (0) 
946. acted: NT; NA; ; (0) movie.release_year(0.63):| tv_series.release_year(0.63):| actor.name(0.62):| actor(0.62):| genre.genre(0.62):| genre(0.62):| made_by(0.61):| 
947. Who: CMT; NA; ; (0) director.name(1.0):| actor.name(1.0):| producer.name(1.0):| writer.name(1.0):| 
948. number of: FT; count; ; (0) 
951. most: FT; max; ; (0) 
952. movies: NT; NA; ; (0) movie.title(1.0):| movie(1.0):| cast.role(0.95):Movie; Movie F; Movie AD; | company.name(0.95):Movies; Movie; Movie Movie; | tv_series.title(0.84):Movies, Movies, Movi; Movie Mob; Moon Movies; | keyword.keyword(0.83):movie-in-movie; movies-about-movies; b-movie; | actor.name(0.76):| 
954. directed: NT; NA; ; (0) directed_by(1.0):| director.name(0.72):| director(0.72):| written_by(0.68):| cast.role(0.67):| cast(0.67):| made_by(0.67):| 
955. Jim Jarmusch: VTTEXT; NA; ; (0) director.name(1.0):Jim Jarmusch; Jim Jarmusch; Tom Jarmusch; | actor.name(1.0):Jim Jarmusch; Jim Jarmusch; Tom Jarmusch; | producer.name(1.0):Jim Jarmusch; Jim Jarmusch; Tom Jarmusch; | writer.name(1.0):Jim Jarmusch; Jim Jarmusch; James R. Jarmusch; | movie.title(0.81):Behind Jim Jarmusch; Behind Jim Jarmusch; Focus on Jim Jarmusc; | cast.role(0.72):Jim Jarmusch's broth; Jim Jarmusch's broth; Jim Jamush; | tv_series.title(0.52):Earthworm Jim; Earthworm Jim; Jim Jam & Sunny; | 
Who, WP
acted, VBD
in, IN
the, DT
most, JJS
number, NN
of, IN
movies, NNS
directed, VBN
by, IN
Jim Jarmusch, NNP
nsubj(acted-2, Who-1)
root(ROOT-0, acted-2)
case(number-6, in-3)
det(number-6, the-4)
amod(number-6, most-5)
nmod(acted-2, number-6)
case(movies-8, of-7)
nmod(number-6, movies-8)
acl(movies-8, directed-9)
case(Jim Jarmusch-11, by-10)
nmod(directed-9, Jim Jarmusch-11)

PARSE TREE:(945) ROOT ROOT
    (947) Who CMT
        (946) acted NT
            (952) movies NT
                (954) directed NT
                    (955) Jim Jarmusch VTTEXT


===========
TRANSLATIONS
===========
TOT: 0.9307196706532547; NL: 0.9307196706532547; NL+AG: 0.9780540360102071; NL+QF: 0.9307196706532547; rels: [directed_by]; projs: [director_0.name]; preds: [director_0.name = "Jim Jarmusch"]; havings: []; superlative: [count(distinct(movie_0.title)) desc limit 1]; blanks: 1
TOT: 0.9307196706532547; NL: 0.9307196706532547; NL+AG: 0.9780540360102071; NL+QF: 0.9307196706532547; rels: [directed_by]; projs: [director_0.name]; preds: [actor_0.name = "Jim Jarmusch"]; havings: []; superlative: [count(distinct(movie_0.title)) desc limit 1]; blanks: 1
TOT: 0.9307196706532547; NL: 0.9307196706532547; NL+AG: 0.9780540360102071; NL+QF: 0.9307196706532547; rels: [directed_by]; projs: [director_0.name]; preds: [producer_0.name = "Jim Jarmusch"]; havings: []; superlative: [count(distinct(movie_0.title)) desc limit 1]; blanks: 1
TOT: 0.9307196706532547; NL: 0.9307196706532547; NL+AG: 0.9780540360102071; NL+QF: 0.9307196706532547; rels: [directed_by]; projs: [director_0.name]; preds: [writer_0.name = "Jim Jarmusch"]; havings: []; superlative: [count(distinct(movie_0.title)) desc limit 1]; blanks: 1
TOT: 0.9307196706532547; NL: 0.9307196706532547; NL+AG: 0.9780540360102071; NL+QF: 0.9307196706532547; rels: [directed_by]; projs: [actor_0.name]; preds: [director_0.name = "Jim Jarmusch"]; havings: []; superlative: [count(distinct(movie_0.title)) desc limit 1]; blanks: 1
TOT: 0.9307196706532547; NL: 0.9307196706532547; NL+AG: 0.9780540360102071; NL+QF: 0.9307196706532547; rels: [directed_by]; projs: [actor_0.name]; preds: [actor_0.name = "Jim Jarmusch"]; havings: []; superlative: [count(distinct(movie_0.title)) desc limit 1]; blanks: 1
TOT: 0.9307196706532547; NL: 0.9307196706532547; NL+AG: 0.9780540360102071; NL+QF: 0.9307196706532547; rels: [directed_by]; projs: [actor_0.name]; preds: [producer_0.name = "Jim Jarmusch"]; havings: []; superlative: [count(distinct(movie_0.title)) desc limit 1]; blanks: 1
TOT: 0.9307196706532547; NL: 0.9307196706532547; NL+AG: 0.9780540360102071; NL+QF: 0.9307196706532547; rels: [directed_by]; projs: [actor_0.name]; preds: [writer_0.name = "Jim Jarmusch"]; havings: []; superlative: [count(distinct(movie_0.title)) desc limit 1]; blanks: 1
TOT: 0.9307196706532547; NL: 0.9307196706532547; NL+AG: 0.9780540360102071; NL+QF: 0.9307196706532547; rels: [directed_by]; projs: [producer_0.name]; preds: [director_0.name = "Jim Jarmusch"]; havings: []; superlative: [count(distinct(movie_0.title)) desc limit 1]; blanks: 1
TOT: 0.9307196706532547; NL: 0.9307196706532547; NL+AG: 0.9780540360102071; NL+QF: 0.9307196706532547; rels: [directed_by]; projs: [producer_0.name]; preds: [actor_0.name = "Jim Jarmusch"]; havings: []; superlative: [count(distinct(movie_0.title)) desc limit 1]; blanks: 1
TOT: 0.9307196706532547; NL: 0.9307196706532547; NL+AG: 0.9780540360102071; NL+QF: 0.9307196706532547; rels: [directed_by]; projs: [producer_0.name]; preds: [producer_0.name = "Jim Jarmusch"]; havings: []; superlative: [count(distinct(movie_0.title)) desc limit 1]; blanks: 1
TOT: 0.9307196706532547; NL: 0.9307196706532547; NL+AG: 0.9780540360102071; NL+QF: 0.9307196706532547; rels: [directed_by]; projs: [producer_0.name]; preds: [writer_0.name = "Jim Jarmusch"]; havings: []; superlative: [count(distinct(movie_0.title)) desc limit 1]; blanks: 1
TOT: 0.9307196706532547; NL: 0.9307196706532547; NL+AG: 0.9780540360102071; NL+QF: 0.9307196706532547; rels: [directed_by]; projs: [writer_0.name]; preds: [director_0.name = "Jim Jarmusch"]; havings: []; superlative: [count(distinct(movie_0.title)) desc limit 1]; blanks: 1
TOT: 0.9307196706532547; NL: 0.9307196706532547; NL+AG: 0.9780540360102071; NL+QF: 0.9307196706532547; rels: [directed_by]; projs: [writer_0.name]; preds: [actor_0.name = "Jim Jarmusch"]; havings: []; superlative: [count(distinct(movie_0.title)) desc limit 1]; blanks: 1
TOT: 0.9307196706532547; NL: 0.9307196706532547; NL+AG: 0.9780540360102071; NL+QF: 0.9307196706532547; rels: [directed_by]; projs: [writer_0.name]; preds: [producer_0.name = "Jim Jarmusch"]; havings: []; superlative: [count(distinct(movie_0.title)) desc limit 1]; blanks: 1
TOT: 0.9307196706532547; NL: 0.9307196706532547; NL+AG: 0.9780540360102071; NL+QF: 0.9307196706532547; rels: [directed_by]; projs: [writer_0.name]; preds: [writer_0.name = "Jim Jarmusch"]; havings: []; superlative: [count(distinct(movie_0.title)) desc limit 1]; blanks: 1

===========
RESULTS
===========
TOT: 0.8481314534815111; TR: 0.9307196706532547; QF: 0.0; select director_0.name from directed_by as directed_by_0, director as director_0, made_by as made_by_0, movie as movie_0, producer as producer_0 where producer_0.name = "Jim Jarmusch" and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid group by director_0.name order by count(distinct(movie_0.title)) desc limit 1
TOT: 0.8481314534815111; TR: 0.9307196706532547; QF: 0.0; select producer_0.name from directed_by as directed_by_0, director as director_0, made_by as made_by_0, movie as movie_0, producer as producer_0 where director_0.name = "Jim Jarmusch" and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid group by producer_0.name order by count(distinct(movie_0.title)) desc limit 1
TOT: 0.8481314534815111; TR: 0.9307196706532547; QF: 0.0; select director_0.name from actor as actor_0, cast as cast_0, directed_by as directed_by_0, director as director_0, movie as movie_0 where actor_0.name = "Jim Jarmusch" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid group by director_0.name order by count(distinct(movie_0.title)) desc limit 1
TOT: 0.8481314534815111; TR: 0.9307196706532547; QF: 0.0; select actor_0.name from actor as actor_0, cast as cast_0, directed_by as directed_by_0, director as director_0, movie as movie_0 where director_0.name = "Jim Jarmusch" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid group by actor_0.name order by count(distinct(movie_0.title)) desc limit 1
TOT: 0.8481314534815111; TR: 0.9307196706532547; QF: 0.0; select director_0.name from directed_by as directed_by_0, directed_by as directed_by_1, director as director_0, director as director_1, movie as movie_0 where director_1.name = "Jim Jarmusch" and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and directed_by_1.did = director_1.did and directed_by_1.msid = movie_0.mid group by director_0.name order by count(distinct(movie_0.title)) desc limit 1
TOT: 0.8481314534815111; TR: 0.9307196706532547; QF: 0.0; select director_0.name from directed_by as directed_by_0, director as director_0, movie as movie_0, writer as writer_0, written_by as written_by_0 where writer_0.name = "Jim Jarmusch" and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and movie_0.mid = written_by_0.msid and writer_0.wid = written_by_0.wid group by director_0.name order by count(distinct(movie_0.title)) desc limit 1
TOT: 0.8481314534815111; TR: 0.9307196706532547; QF: 0.0; select writer_0.name from directed_by as directed_by_0, director as director_0, movie as movie_0, writer as writer_0, written_by as written_by_0 where director_0.name = "Jim Jarmusch" and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and movie_0.mid = written_by_0.msid and writer_0.wid = written_by_0.wid group by writer_0.name order by count(distinct(movie_0.title)) desc limit 1
TOT: 0.8393021903639429; TR: 0.9307196706532547; QF: 0.0; select director_0.name from actor as actor_0, cast as cast_0, cast as cast_1, directed_by as directed_by_0, director as director_0, movie as movie_0, tv_series as tv_series_0 where actor_0.name = "Jim Jarmusch" and actor_0.aid = cast_0.aid and actor_0.aid = cast_1.aid and cast_0.msid = movie_0.mid and cast_1.msid = tv_series_0.sid and directed_by_0.did = director_0.did and directed_by_0.msid = tv_series_0.sid group by director_0.name order by count(distinct(movie_0.title)) desc limit 1
TOT: 0.8393021903639429; TR: 0.9307196706532547; QF: 0.0; select actor_0.name from actor as actor_0, cast as cast_0, cast as cast_1, directed_by as directed_by_0, director as director_0, movie as movie_0, tv_series as tv_series_0 where director_0.name = "Jim Jarmusch" and actor_0.aid = cast_0.aid and actor_0.aid = cast_1.aid and cast_0.msid = movie_0.mid and cast_1.msid = tv_series_0.sid and directed_by_0.did = director_0.did and directed_by_0.msid = tv_series_0.sid group by actor_0.name order by count(distinct(movie_0.title)) desc limit 1
TOT: 0.8393021903639429; TR: 0.9307196706532547; QF: 0.0; select director_0.name from directed_by as directed_by_0, director as director_0, movie as movie_0, tv_series as tv_series_0, writer as writer_0, written_by as written_by_0, written_by as written_by_1 where writer_0.name = "Jim Jarmusch" and directed_by_0.did = director_0.did and directed_by_0.msid = tv_series_0.sid and movie_0.mid = written_by_0.msid and tv_series_0.sid = written_by_1.msid and writer_0.wid = written_by_0.wid and writer_0.wid = written_by_1.wid group by director_0.name order by count(distinct(movie_0.title)) desc limit 1


03:26  INFO: ================
03:26  INFO: QUERY 30: Find all actors born in "Los Angeles" after 1980
03:26  INFO: ================
03:28  INFO: ================
03:28  INFO: QUERY 96: What is the number of movies that "Brad Pitt" acts in per year?
03:28  INFO: ================
968. ROOT: ROOT; NA; ; (0) 
969. What: CMT; NA; ; (0) 
971. number of: FT; count; ; (0) 
973. movies: NT; NA; ; (0) movie.title(1.0):| movie(1.0):| cast.role(0.95):Movie; Movie F; Movie AD; | company.name(0.95):Movies; Movie; Movie Movie; | tv_series.title(0.84):Movies, Movies, Movi; Movie Mob; Moon Movies; | keyword.keyword(0.83):movie-in-movie; movies-about-movies; b-movie; | actor.name(0.76):| 
975. acts: NT; NA; ; (0) movie.release_year(0.63):| tv_series.release_year(0.63):| actor.name(0.62):| actor(0.62):| genre.genre(0.62):| genre(0.62):| made_by(0.61):| 
977. Brad Pitt: VTTEXT; NA; ; (0) actor.name(1.0):Brad Pitt; Brad Pitt; bRad sPitt; | cast.role(1.0):Brad Pitt'; Brad Pitt'; Brad Pitt #1; | producer.name(1.0):Brad Pitt; Brad Pitt; Mad Pitt; | director.name(0.78):Brad Pruitt; Brad Pruitt; Brad Witty; | writer.name(0.78):Brad Pruitt; Brad Pruitt; Brad Witt; | movie.title(0.72):Brad Pitt Video Port; Brad Pitt Video Port; Brad; | actor.birth_city(0.61):Brad; Brad; Pitt Meadows; | 
979. year: NT; NA; each; (0) movie.release_year(1.0):| director.birth_year(1.0):| tv_series.release_year(1.0):| actor.birth_year(1.0):| producer.birth_year(1.0):| writer.birth_year(1.0):| movie.title(0.95):Year; Years; Years; | 
What, WP
is, VBZ
the, DT
number, NN
of, IN
movies, NNS
that, IN
Brad Pitt, NNP
acts, VBZ
in, RP
per, IN
year, NN
root(ROOT-0, What-1)
cop(What-1, is-2)
det(number-4, the-3)
nsubj(What-1, number-4)
case(movies-6, of-5)
nmod(number-4, movies-6)
mark(acts-9, that-7)
nsubj(acts-9, Brad Pitt-8)
dep(movies-6, acts-9)
compound:prt(acts-9, in-10)
case(year-12, per-11)
nmod(acts-9, year-12)

PARSE TREE:(968) ROOT ROOT
    (969) What CMT
        (971) number of FT
            (973) movies NT
                (975) acts NT
                    (977) Brad Pitt VTTEXT
                    (979) year NT


===========
TRANSLATIONS
===========
TOT: 0.9174505626104981; NL: 0.9174505626104981; NL+AG: 0.9744248149088094; NL+QF: 0.9174505626104981; rels: []; projs: [movie_0.release_year,count(distinct(movie_0.title))]; preds: [actor_0.name = "Brad Pitt"]; havings: []; superlative: []; blanks: 1
TOT: 0.9174505626104981; NL: 0.9174505626104981; NL+AG: 0.9744248149088094; NL+QF: 0.9174505626104981; rels: []; projs: [director_0.birth_year,count(distinct(movie_0.title))]; preds: [actor_0.name = "Brad Pitt"]; havings: []; superlative: []; blanks: 1
TOT: 0.9174505626104981; NL: 0.9174505626104981; NL+AG: 0.9744248149088094; NL+QF: 0.9174505626104981; rels: []; projs: [tv_series_0.release_year,count(distinct(movie_0.title))]; preds: [actor_0.name = "Brad Pitt"]; havings: []; superlative: []; blanks: 1
TOT: 0.9174505626104981; NL: 0.9174505626104981; NL+AG: 0.9744248149088094; NL+QF: 0.9174505626104981; rels: []; projs: [actor_0.birth_year,count(distinct(movie_0.title))]; preds: [actor_0.name = "Brad Pitt"]; havings: []; superlative: []; blanks: 1
TOT: 0.9174505626104981; NL: 0.9174505626104981; NL+AG: 0.9744248149088094; NL+QF: 0.9174505626104981; rels: []; projs: [producer_0.birth_year,count(distinct(movie_0.title))]; preds: [actor_0.name = "Brad Pitt"]; havings: []; superlative: []; blanks: 1
TOT: 0.9174505626104981; NL: 0.9174505626104981; NL+AG: 0.9744248149088094; NL+QF: 0.9174505626104981; rels: []; projs: [writer_0.birth_year,count(distinct(movie_0.title))]; preds: [actor_0.name = "Brad Pitt"]; havings: []; superlative: []; blanks: 1
TOT: 0.9174505626104981; NL: 0.9174505626104981; NL+AG: 0.9744248149088094; NL+QF: 0.9174505626104981; rels: []; projs: [movie_0.release_year,count(distinct(movie_0.title))]; preds: [cast_0.role = "Brad Pitt'"]; havings: []; superlative: []; blanks: 1
TOT: 0.9174505626104981; NL: 0.9174505626104981; NL+AG: 0.9744248149088094; NL+QF: 0.9174505626104981; rels: []; projs: [director_0.birth_year,count(distinct(movie_0.title))]; preds: [cast_0.role = "Brad Pitt'"]; havings: []; superlative: []; blanks: 1
TOT: 0.9174505626104981; NL: 0.9174505626104981; NL+AG: 0.9744248149088094; NL+QF: 0.9174505626104981; rels: []; projs: [tv_series_0.release_year,count(distinct(movie_0.title))]; preds: [cast_0.role = "Brad Pitt'"]; havings: []; superlative: []; blanks: 1
TOT: 0.9174505626104981; NL: 0.9174505626104981; NL+AG: 0.9744248149088094; NL+QF: 0.9174505626104981; rels: []; projs: [actor_0.birth_year,count(distinct(movie_0.title))]; preds: [cast_0.role = "Brad Pitt'"]; havings: []; superlative: []; blanks: 1
TOT: 0.9174505626104981; NL: 0.9174505626104981; NL+AG: 0.9744248149088094; NL+QF: 0.9174505626104981; rels: []; projs: [producer_0.birth_year,count(distinct(movie_0.title))]; preds: [cast_0.role = "Brad Pitt'"]; havings: []; superlative: []; blanks: 1
TOT: 0.9174505626104981; NL: 0.9174505626104981; NL+AG: 0.9744248149088094; NL+QF: 0.9174505626104981; rels: []; projs: [writer_0.birth_year,count(distinct(movie_0.title))]; preds: [cast_0.role = "Brad Pitt'"]; havings: []; superlative: []; blanks: 1
TOT: 0.9174505626104981; NL: 0.9174505626104981; NL+AG: 0.9744248149088094; NL+QF: 0.9174505626104981; rels: []; projs: [movie_0.release_year,count(distinct(movie_0.title))]; preds: [producer_0.name = "Brad Pitt"]; havings: []; superlative: []; blanks: 1
TOT: 0.9174505626104981; NL: 0.9174505626104981; NL+AG: 0.9744248149088094; NL+QF: 0.9174505626104981; rels: []; projs: [director_0.birth_year,count(distinct(movie_0.title))]; preds: [producer_0.name = "Brad Pitt"]; havings: []; superlative: []; blanks: 1
TOT: 0.9174505626104981; NL: 0.9174505626104981; NL+AG: 0.9744248149088094; NL+QF: 0.9174505626104981; rels: []; projs: [tv_series_0.release_year,count(distinct(movie_0.title))]; preds: [producer_0.name = "Brad Pitt"]; havings: []; superlative: []; blanks: 1
TOT: 0.9174505626104981; NL: 0.9174505626104981; NL+AG: 0.9744248149088094; NL+QF: 0.9174505626104981; rels: []; projs: [actor_0.birth_year,count(distinct(movie_0.title))]; preds: [producer_0.name = "Brad Pitt"]; havings: []; superlative: []; blanks: 1
TOT: 0.9174505626104981; NL: 0.9174505626104981; NL+AG: 0.9744248149088094; NL+QF: 0.9174505626104981; rels: []; projs: [producer_0.birth_year,count(distinct(movie_0.title))]; preds: [producer_0.name = "Brad Pitt"]; havings: []; superlative: []; blanks: 1
TOT: 0.9174505626104981; NL: 0.9174505626104981; NL+AG: 0.9744248149088094; NL+QF: 0.9174505626104981; rels: []; projs: [writer_0.birth_year,count(distinct(movie_0.title))]; preds: [producer_0.name = "Brad Pitt"]; havings: []; superlative: []; blanks: 1

===========
RESULTS
===========
TOT: 0.8699890928202082; TR: 0.9174505626104981; QF: 0.0; select count(distinct(movie_0.title)), movie_0.release_year from cast as cast_0, movie as movie_0 where cast_0.role = "Brad Pitt'" and cast_0.msid = movie_0.mid group by movie_0.release_year
TOT: 0.8534451375406007; TR: 0.9174505626104981; QF: 0.0; select movie_0.release_year, count(distinct(movie_0.title)) from made_by as made_by_0, movie as movie_0, producer as producer_0 where producer_0.name = "Brad Pitt" and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid group by movie_0.release_year
TOT: 0.8534451375406007; TR: 0.9174505626104981; QF: 0.0; select producer_0.birth_year, count(distinct(movie_0.title)) from made_by as made_by_0, movie as movie_0, producer as producer_0 where producer_0.name = "Brad Pitt" and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid group by producer_0.birth_year
TOT: 0.8534451375406007; TR: 0.9174505626104981; QF: 0.0; select movie_0.release_year, count(distinct(movie_0.title)) from actor as actor_0, cast as cast_0, movie as movie_0 where actor_0.name = "Brad Pitt" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid group by movie_0.release_year
TOT: 0.8534451375406007; TR: 0.9174505626104981; QF: 0.0; select actor_0.birth_year, count(distinct(movie_0.title)) from actor as actor_0, cast as cast_0, movie as movie_0 where actor_0.name = "Brad Pitt" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid group by actor_0.birth_year
TOT: 0.8534451375406007; TR: 0.9174505626104981; QF: 0.0; select actor_0.birth_year, count(distinct(movie_0.title)) from actor as actor_0, cast as cast_0, movie as movie_0 where cast_0.role = "Brad Pitt'" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid group by actor_0.birth_year
TOT: 0.8435829782189234; TR: 0.9174505626104981; QF: 0.0; select count(distinct(movie_0.title)), producer_0.birth_year from cast as cast_0, made_by as made_by_0, movie as movie_0, producer as producer_0 where cast_0.role = "Brad Pitt'" and cast_0.msid = movie_0.mid and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid group by producer_0.birth_year
TOT: 0.8435829782189234; TR: 0.9174505626104981; QF: 0.0; select count(distinct(movie_0.title)), director_0.birth_year from cast as cast_0, directed_by as directed_by_0, director as director_0, movie as movie_0 where cast_0.role = "Brad Pitt'" and cast_0.msid = movie_0.mid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid group by director_0.birth_year
TOT: 0.8435829782189234; TR: 0.9174505626104981; QF: 0.0; select count(distinct(movie_0.title)), writer_0.birth_year from cast as cast_0, movie as movie_0, writer as writer_0, written_by as written_by_0 where cast_0.role = "Brad Pitt'" and cast_0.msid = movie_0.mid and movie_0.mid = written_by_0.msid and writer_0.wid = written_by_0.wid group by writer_0.birth_year
TOT: 0.8368527116451681; TR: 0.9174505626104981; QF: 0.0; select writer_0.birth_year, count(distinct(movie_0.title)) from actor as actor_0, cast as cast_0, movie as movie_0, writer as writer_0, written_by as written_by_0 where actor_0.name = "Brad Pitt" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and movie_0.mid = written_by_0.msid and writer_0.wid = written_by_0.wid group by writer_0.birth_year


03:29  INFO: ===== FOLD 3 =====
03:29  INFO: ===== Parsing Results =====
03:29  INFO: Total Queries: 0
03:29  INFO: Correctly Parsed: 0/0

03:29  INFO: ================
03:29  INFO: QUERY 8: What is the nationality of the actor "Christoph Waltz"?
03:29  INFO: ================
03:31  INFO: ================
03:31  INFO: QUERY 102: How many movies did "Quentin Tarantino" direct before 2010?
03:31  INFO: ================
992. ROOT: ROOT; NA; ; (0) 
993. direct: NT; NA; ; (0) directed_by(1.0):| director.name(0.72):| director(0.72):| written_by(0.68):| cast.role(0.67):| cast(0.67):| made_by(0.67):| 
994. movies: NT; NA; ; (0) movie.title(1.0):| movie(1.0):| cast.role(0.95):Movie; Movie F; Movie AD; | company.name(0.95):Movies; Movie; Movie Movie; | tv_series.title(0.84):Movies, Movies, Movi; Movie Mob; Moon Movies; | keyword.keyword(0.83):movie-in-movie; movies-about-movies; b-movie; | actor.name(0.76):| 
996. How many: CMT; count; ; (0) 
998. Quentin Tarantino: VTTEXT; NA; ; (0) director.name(1.0):Quentin Tarantino; Quentin Tarantino; Quentin Tarrantino; | actor.name(1.0):Quentin Tarantino; Quentin Tarantino; Quentin Tarrantino; | producer.name(1.0):Quentin Tarantino; Quentin Tarantino; Quentin Tarrantino; | writer.name(1.0):Quentin Tarantino; Quentin Tarantino; Quentin Tarrantino; | cast.role(0.85):Quentin Tarrantino '; Quentin Tarrantino '; Quentin Tarrantino '; | movie.title(0.84):21 Years: Quentin Ta; 21 Years: Quentin Ta; Quentin Tarantino's ; | writer.birth_city(0.74):San Quentin; San Quentin; Saint-Quentin; | 
999. 2010: VTNUM; NA; ; (0) movie.release_year(1.0):2005; 2009; 2005; | director.birth_year(1.0):1927; 1958; 1924; | tv_series.release_year(1.0):1987; 1991; 2007; | actor.birth_year(1.0):1935; 1958; 1924; | producer.birth_year(1.0):1926; 1964; 1985; | writer.birth_year(1.0):1955; 1926; 1985; | 
1000. before: OT; <; ; (0) 
How, WRB
many, JJ
movies, NNS
did, VBD
Quentin Tarantino, NNP
direct, VB
before, IN
2010, CD
advmod(many-2, How-1)
amod(movies-3, many-2)
dobj(direct-6, movies-3)
aux(direct-6, did-4)
nsubj(direct-6, Quentin Tarantino-5)
root(ROOT-0, direct-6)
case(2010-8, before-7)
nmod(direct-6, 2010-8)

PARSE TREE:(992) ROOT ROOT
    (996) How many CMT
        (994) movies NT
            (993) direct NT
                (998) Quentin Tarantino VTTEXT
                (999) 2010 VTNUM
                    (1000) before OT


===========
TRANSLATIONS
===========
TOT: 0.8979007600118484; NL: 0.8979007600118484; NL+AG: 0.9673199040648885; NL+QF: 0.8979007600118484; rels: []; projs: [count(distinct(movie_0.title))]; preds: [director_0.name = "Quentin Tarantino",movie_0.release_year < 2010]; havings: []; superlative: []; blanks: 1
TOT: 0.8979007600118484; NL: 0.8979007600118484; NL+AG: 0.9673199040648885; NL+QF: 0.8979007600118484; rels: []; projs: [count(distinct(movie_0.title))]; preds: [director_0.name = "Quentin Tarantino",director_0.birth_year < 2010]; havings: []; superlative: []; blanks: 1
TOT: 0.8979007600118484; NL: 0.8979007600118484; NL+AG: 0.9673199040648885; NL+QF: 0.8979007600118484; rels: []; projs: [count(distinct(movie_0.title))]; preds: [director_0.name = "Quentin Tarantino",tv_series_0.release_year < 2010]; havings: []; superlative: []; blanks: 1
TOT: 0.8979007600118484; NL: 0.8979007600118484; NL+AG: 0.9673199040648885; NL+QF: 0.8979007600118484; rels: []; projs: [count(distinct(movie_0.title))]; preds: [director_0.name = "Quentin Tarantino",actor_0.birth_year < 2010]; havings: []; superlative: []; blanks: 1
TOT: 0.8979007600118484; NL: 0.8979007600118484; NL+AG: 0.9673199040648885; NL+QF: 0.8979007600118484; rels: []; projs: [count(distinct(movie_0.title))]; preds: [director_0.name = "Quentin Tarantino",producer_0.birth_year < 2010]; havings: []; superlative: []; blanks: 1
TOT: 0.8979007600118484; NL: 0.8979007600118484; NL+AG: 0.9673199040648885; NL+QF: 0.8979007600118484; rels: []; projs: [count(distinct(movie_0.title))]; preds: [director_0.name = "Quentin Tarantino",writer_0.birth_year < 2010]; havings: []; superlative: []; blanks: 1
TOT: 0.8979007600118484; NL: 0.8979007600118484; NL+AG: 0.9673199040648885; NL+QF: 0.8979007600118484; rels: []; projs: [count(distinct(movie_0.title))]; preds: [actor_0.name = "Quentin Tarantino",movie_0.release_year < 2010]; havings: []; superlative: []; blanks: 1
TOT: 0.8979007600118484; NL: 0.8979007600118484; NL+AG: 0.9673199040648885; NL+QF: 0.8979007600118484; rels: []; projs: [count(distinct(movie_0.title))]; preds: [actor_0.name = "Quentin Tarantino",director_0.birth_year < 2010]; havings: []; superlative: []; blanks: 1
TOT: 0.8979007600118484; NL: 0.8979007600118484; NL+AG: 0.9673199040648885; NL+QF: 0.8979007600118484; rels: []; projs: [count(distinct(movie_0.title))]; preds: [actor_0.name = "Quentin Tarantino",tv_series_0.release_year < 2010]; havings: []; superlative: []; blanks: 1
TOT: 0.8979007600118484; NL: 0.8979007600118484; NL+AG: 0.9673199040648885; NL+QF: 0.8979007600118484; rels: []; projs: [count(distinct(movie_0.title))]; preds: [actor_0.name = "Quentin Tarantino",actor_0.birth_year < 2010]; havings: []; superlative: []; blanks: 1
TOT: 0.8979007600118484; NL: 0.8979007600118484; NL+AG: 0.9673199040648885; NL+QF: 0.8979007600118484; rels: []; projs: [count(distinct(movie_0.title))]; preds: [actor_0.name = "Quentin Tarantino",producer_0.birth_year < 2010]; havings: []; superlative: []; blanks: 1
TOT: 0.8979007600118484; NL: 0.8979007600118484; NL+AG: 0.9673199040648885; NL+QF: 0.8979007600118484; rels: []; projs: [count(distinct(movie_0.title))]; preds: [actor_0.name = "Quentin Tarantino",writer_0.birth_year < 2010]; havings: []; superlative: []; blanks: 1
TOT: 0.8979007600118484; NL: 0.8979007600118484; NL+AG: 0.9673199040648885; NL+QF: 0.8979007600118484; rels: []; projs: [count(distinct(movie_0.title))]; preds: [producer_0.name = "Quentin Tarantino",movie_0.release_year < 2010]; havings: []; superlative: []; blanks: 1
TOT: 0.8979007600118484; NL: 0.8979007600118484; NL+AG: 0.9673199040648885; NL+QF: 0.8979007600118484; rels: []; projs: [count(distinct(movie_0.title))]; preds: [producer_0.name = "Quentin Tarantino",director_0.birth_year < 2010]; havings: []; superlative: []; blanks: 1
TOT: 0.8979007600118484; NL: 0.8979007600118484; NL+AG: 0.9673199040648885; NL+QF: 0.8979007600118484; rels: []; projs: [count(distinct(movie_0.title))]; preds: [producer_0.name = "Quentin Tarantino",tv_series_0.release_year < 2010]; havings: []; superlative: []; blanks: 1
TOT: 0.8979007600118484; NL: 0.8979007600118484; NL+AG: 0.9673199040648885; NL+QF: 0.8979007600118484; rels: []; projs: [count(distinct(movie_0.title))]; preds: [producer_0.name = "Quentin Tarantino",actor_0.birth_year < 2010]; havings: []; superlative: []; blanks: 1
TOT: 0.8979007600118484; NL: 0.8979007600118484; NL+AG: 0.9673199040648885; NL+QF: 0.8979007600118484; rels: []; projs: [count(distinct(movie_0.title))]; preds: [producer_0.name = "Quentin Tarantino",producer_0.birth_year < 2010]; havings: []; superlative: []; blanks: 1
TOT: 0.8979007600118484; NL: 0.8979007600118484; NL+AG: 0.9673199040648885; NL+QF: 0.8979007600118484; rels: []; projs: [count(distinct(movie_0.title))]; preds: [producer_0.name = "Quentin Tarantino",writer_0.birth_year < 2010]; havings: []; superlative: []; blanks: 1
TOT: 0.8979007600118484; NL: 0.8979007600118484; NL+AG: 0.9673199040648885; NL+QF: 0.8979007600118484; rels: []; projs: [count(distinct(movie_0.title))]; preds: [writer_0.name = "Quentin Tarantino",movie_0.release_year < 2010]; havings: []; superlative: []; blanks: 1
TOT: 0.8979007600118484; NL: 0.8979007600118484; NL+AG: 0.9673199040648885; NL+QF: 0.8979007600118484; rels: []; projs: [count(distinct(movie_0.title))]; preds: [writer_0.name = "Quentin Tarantino",director_0.birth_year < 2010]; havings: []; superlative: []; blanks: 1
TOT: 0.8979007600118484; NL: 0.8979007600118484; NL+AG: 0.9673199040648885; NL+QF: 0.8979007600118484; rels: []; projs: [count(distinct(movie_0.title))]; preds: [writer_0.name = "Quentin Tarantino",tv_series_0.release_year < 2010]; havings: []; superlative: []; blanks: 1
TOT: 0.8979007600118484; NL: 0.8979007600118484; NL+AG: 0.9673199040648885; NL+QF: 0.8979007600118484; rels: []; projs: [count(distinct(movie_0.title))]; preds: [writer_0.name = "Quentin Tarantino",actor_0.birth_year < 2010]; havings: []; superlative: []; blanks: 1
TOT: 0.8979007600118484; NL: 0.8979007600118484; NL+AG: 0.9673199040648885; NL+QF: 0.8979007600118484; rels: []; projs: [count(distinct(movie_0.title))]; preds: [writer_0.name = "Quentin Tarantino",producer_0.birth_year < 2010]; havings: []; superlative: []; blanks: 1
TOT: 0.8979007600118484; NL: 0.8979007600118484; NL+AG: 0.9673199040648885; NL+QF: 0.8979007600118484; rels: []; projs: [count(distinct(movie_0.title))]; preds: [writer_0.name = "Quentin Tarantino",writer_0.birth_year < 2010]; havings: []; superlative: []; blanks: 1

===========
RESULTS
===========
TOT: 0.8368278053317484; TR: 0.8979007600118484; QF: 0.0; select count(distinct(movie_0.title)) from movie as movie_0, writer as writer_0, written_by as written_by_0 where movie_0.release_year < 2010 and writer_0.name = "Quentin Tarantino" and movie_0.mid = written_by_0.msid and writer_0.wid = written_by_0.wid
TOT: 0.8368278053317484; TR: 0.8979007600118484; QF: 0.0; select count(distinct(movie_0.title)) from movie as movie_0, writer as writer_0, written_by as written_by_0 where writer_0.birth_year < 2010 and writer_0.name = "Quentin Tarantino" and movie_0.mid = written_by_0.msid and writer_0.wid = written_by_0.wid
TOT: 0.8368278053317484; TR: 0.8979007600118484; QF: 0.0; select count(distinct(movie_0.title)) from made_by as made_by_0, movie as movie_0, producer as producer_0 where movie_0.release_year < 2010 and producer_0.name = "Quentin Tarantino" and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid
TOT: 0.8368278053317484; TR: 0.8979007600118484; QF: 0.0; select count(distinct(movie_0.title)) from made_by as made_by_0, movie as movie_0, producer as producer_0 where producer_0.birth_year < 2010 and producer_0.name = "Quentin Tarantino" and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid
TOT: 0.8368278053317484; TR: 0.8979007600118484; QF: 0.0; select count(distinct(movie_0.title)) from actor as actor_0, cast as cast_0, movie as movie_0 where actor_0.name = "Quentin Tarantino" and movie_0.release_year < 2010 and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid
TOT: 0.8368278053317484; TR: 0.8979007600118484; QF: 0.0; select count(distinct(movie_0.title)) from actor as actor_0, cast as cast_0, movie as movie_0 where actor_0.birth_year < 2010 and actor_0.name = "Quentin Tarantino" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid
TOT: 0.8368278053317484; TR: 0.8979007600118484; QF: 0.0; select count(distinct(movie_0.title)) from directed_by as directed_by_0, director as director_0, movie as movie_0 where director_0.name = "Quentin Tarantino" and movie_0.release_year < 2010 and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid
TOT: 0.8368278053317484; TR: 0.8979007600118484; QF: 0.0; select count(distinct(movie_0.title)) from directed_by as directed_by_0, director as director_0, movie as movie_0 where director_0.birth_year < 2010 and director_0.name = "Quentin Tarantino" and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid
TOT: 0.8202353794363157; TR: 0.8979007600118484; QF: 0.0; select count(distinct(movie_0.title)) from actor as actor_0, cast as cast_0, movie as movie_0, writer as writer_0, written_by as written_by_0 where actor_0.name = "Quentin Tarantino" and writer_0.birth_year < 2010 and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and movie_0.mid = written_by_0.msid and writer_0.wid = written_by_0.wid
TOT: 0.8202353794363157; TR: 0.8979007600118484; QF: 0.0; select count(distinct(movie_0.title)) from actor as actor_0, cast as cast_0, movie as movie_0, writer as writer_0, written_by as written_by_0 where actor_0.birth_year < 2010 and writer_0.name = "Quentin Tarantino" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and movie_0.mid = written_by_0.msid and writer_0.wid = written_by_0.wid


03:32  INFO: ================
03:32  INFO: QUERY 59: Find all the female actors from Austin
03:32  INFO: ================
03:35  INFO: ================
03:35  INFO: QUERY 83: What are the major roles in the movie "Daddy Long Legs"
03:35  INFO: ================
1011. ROOT: ROOT; NA; ; (0) 
1012. What: CMT; NA; ; (0) 
1014. roles: VTTEXT; NA; ; (0) movie.title(0.95):Roles; Rolê; The Role; | tv_series.title(0.95):Roles; Role Call; Role Play; | cast.role(0.82):| actor.name(0.69):| actor(0.69):| cast(0.64):| director.name(0.64):| 
1016. major: VTTEXT; NA; ; (0) movie.title(1.0):Major; Major!; Major Minors; | director.name(1.0):Major; Major; Major; | actor.name(1.0):Major; Major; Major; | producer.name(1.0):Major; Major; BP Major; | company.name(1.0):Major; Major Zeus; Major Networks; | writer.name(1.0):Major; JL Major; BP Major; | cast.role(0.94):Major Major; 'Major'; Maj. Major Major; | 
1017. Daddy Long Legs: VTTEXT; NA; ; (0) movie.title(0.95):Daddy Long Legs; Daddy Long Legs; Daddy Long Legs; | director.name(0.95):Daddy Long Legs; Daddy Long Legs; Daddy Long Legs of W; | actor.name(0.95):Daddy Long Legs; Daddy Long Legs; Daddy Longlegs; | cast.role(0.86):Lady Long Legs; Long Leg; Sweet Daddy Longlegs; | producer.name(0.76):Long Legs; Long Legs; Din Long Lee; | writer.name(0.61):Adam Long; Adam Long; Cody Long; | tv_series.title(0.54):A Long Long Crime Ag; A Long Long Crime Ag; The Long Gray Line; | 
1020. movie: NT; NA; ; (0) movie.title(1.0):| movie(1.0):| cast.role(0.95):Movie; Movie F; Movie AD; | company.name(0.95):Movie; Movies; Movie Movie; | keyword.keyword(0.83):movie-in-movie; b-movie; z-movie; | actor.name(0.76):| actor(0.76):| 
What, WP
are, VBP
the, DT
major, JJ
roles, NNS
in, IN
the, DT
movie, NN
Daddy Long Legs, NNS
root(ROOT-0, What-1)
cop(What-1, are-2)
det(roles-5, the-3)
amod(roles-5, major-4)
nsubj(What-1, roles-5)
case(Daddy Long Legs-9, in-6)
det(Daddy Long Legs-9, the-7)
compound(Daddy Long Legs-9, movie-8)
nmod(roles-5, Daddy Long Legs-9)

PARSE TREE:(1011) ROOT ROOT
    (1012) What CMT
        (1014) roles VTTEXT
            (1016) major VTTEXT
            (1017) Daddy Long Legs VTTEXT
                (1020) movie NT


===========
TRANSLATIONS
===========
TOT: 0.9364940320609404; NL: 0.9364940320609404; NL+AG: 0.9912197108066971; NL+QF: 0.9364940320609404; rels: []; projs: [cast_0.role]; preds: [movie_0.title = "Major",movie_0.title = "Daddy Long Legs"]; havings: []; superlative: []; blanks: 0
TOT: 0.9364940320609404; NL: 0.9364940320609404; NL+AG: 0.9912197108066971; NL+QF: 0.9364940320609404; rels: []; projs: [cast_0.role]; preds: [director_0.name = "Major",movie_0.title = "Daddy Long Legs"]; havings: []; superlative: []; blanks: 0
TOT: 0.9364940320609404; NL: 0.9364940320609404; NL+AG: 0.9912197108066971; NL+QF: 0.9364940320609404; rels: []; projs: [cast_0.role]; preds: [actor_0.name = "Major",movie_0.title = "Daddy Long Legs"]; havings: []; superlative: []; blanks: 0
TOT: 0.9364940320609404; NL: 0.9364940320609404; NL+AG: 0.9912197108066971; NL+QF: 0.9364940320609404; rels: []; projs: [cast_0.role]; preds: [producer_0.name = "Major",movie_0.title = "Daddy Long Legs"]; havings: []; superlative: []; blanks: 0
TOT: 0.9364940320609404; NL: 0.9364940320609404; NL+AG: 0.9912197108066971; NL+QF: 0.9364940320609404; rels: []; projs: [cast_0.role]; preds: [company_0.name = "Major",movie_0.title = "Daddy Long Legs"]; havings: []; superlative: []; blanks: 0
TOT: 0.9364940320609404; NL: 0.9364940320609404; NL+AG: 0.9912197108066971; NL+QF: 0.9364940320609404; rels: []; projs: [cast_0.role]; preds: [writer_0.name = "Major",movie_0.title = "Daddy Long Legs"]; havings: []; superlative: []; blanks: 0
TOT: 0.9182894476021624; NL: 0.9182894476021624; NL+AG: 0.9851794127874313; NL+QF: 0.9182894476021624; rels: []; projs: [cast_0.role]; preds: [cast_0.role = "Major Major",movie_0.title = "Daddy Long Legs"]; havings: []; superlative: []; blanks: 0
TOT: 0.88222320096765; NL: 0.88222320096765; NL+AG: 0.9901717764731464; NL+QF: 0.88222320096765; rels: []; projs: [actor_0.name]; preds: [movie_0.title = "Major",movie_0.title = "Daddy Long Legs"]; havings: []; superlative: []; blanks: 0
TOT: 0.88222320096765; NL: 0.88222320096765; NL+AG: 0.9901717764731464; NL+QF: 0.88222320096765; rels: []; projs: [actor_0.name]; preds: [director_0.name = "Major",movie_0.title = "Daddy Long Legs"]; havings: []; superlative: []; blanks: 0
TOT: 0.88222320096765; NL: 0.88222320096765; NL+AG: 0.9901717764731464; NL+QF: 0.88222320096765; rels: []; projs: [actor_0.name]; preds: [actor_0.name = "Major",movie_0.title = "Daddy Long Legs"]; havings: []; superlative: []; blanks: 0
TOT: 0.88222320096765; NL: 0.88222320096765; NL+AG: 0.9901717764731464; NL+QF: 0.88222320096765; rels: []; projs: [actor_0.name]; preds: [producer_0.name = "Major",movie_0.title = "Daddy Long Legs"]; havings: []; superlative: []; blanks: 0
TOT: 0.88222320096765; NL: 0.88222320096765; NL+AG: 0.9901717764731464; NL+QF: 0.88222320096765; rels: []; projs: [actor_0.name]; preds: [company_0.name = "Major",movie_0.title = "Daddy Long Legs"]; havings: []; superlative: []; blanks: 0
TOT: 0.88222320096765; NL: 0.88222320096765; NL+AG: 0.9901717764731464; NL+QF: 0.88222320096765; rels: []; projs: [actor_0.name]; preds: [writer_0.name = "Major",movie_0.title = "Daddy Long Legs"]; havings: []; superlative: []; blanks: 0

===========
RESULTS
===========
TOT: 0.8696320865734766; TR: 0.9364940320609404; QF: 0.0; select cast_0.role from actor as actor_0, cast as cast_0, movie as movie_0 where actor_0.name = "Major" and movie_0.title = "Daddy Long Legs" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid
TOT: 0.8597699272517992; TR: 0.9364940320609404; QF: 0.0; select cast_0.role from cast as cast_0, made_by as made_by_0, movie as movie_0, producer as producer_0 where movie_0.title = "Daddy Long Legs" and producer_0.name = "Major" and cast_0.msid = movie_0.mid and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid
TOT: 0.8597699272517992; TR: 0.9364940320609404; QF: 0.0; select cast_0.role from cast as cast_0, directed_by as directed_by_0, director as director_0, movie as movie_0 where director_0.name = "Major" and movie_0.title = "Daddy Long Legs" and cast_0.msid = movie_0.mid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid
TOT: 0.8597699272517992; TR: 0.9364940320609404; QF: 0.0; select cast_0.role from cast as cast_0, movie as movie_0, writer as writer_0, written_by as written_by_0 where movie_0.title = "Daddy Long Legs" and writer_0.name = "Major" and cast_0.msid = movie_0.mid and movie_0.mid = written_by_0.msid and writer_0.wid = written_by_0.wid
TOT: 0.8597699272517992; TR: 0.9364940320609404; QF: 0.0; select cast_0.role from cast as cast_0, company as company_0, copyright as copyright_0, movie as movie_0 where company_0.name = "Major" and movie_0.title = "Daddy Long Legs" and cast_0.msid = movie_0.mid and company_0.id = copyright_0.cid and copyright_0.msid = movie_0.mid
TOT: 0.8541581897835153; TR: 0.9182894476021624; QF: 0.0; select cast_0.role from cast as cast_0, cast as cast_1, movie as movie_0 where cast_1.role = "Major Major" and movie_0.title = "Daddy Long Legs" and cast_0.msid = movie_0.mid and cast_1.msid = movie_0.mid
TOT: 0.8530396606780439; TR: 0.9364940320609404; QF: 0.0; select cast_0.role from actor as actor_0, cast as cast_0, cast as cast_1, movie as movie_0, movie as movie_1 where movie_0.title = "Major" and movie_1.title = "Daddy Long Legs" and actor_0.aid = cast_0.aid and actor_0.aid = cast_1.aid and cast_0.msid = movie_0.mid and cast_1.msid = movie_1.mid
TOT: 0.8480715842859418; TR: 0.9364940320609404; QF: 0.0; select cast_0.role from cast as cast_0, company as company_0, copyright as copyright_0, copyright as copyright_1, movie as movie_0, movie as movie_1 where movie_0.title = "Major" and movie_1.title = "Daddy Long Legs" and cast_0.msid = movie_0.mid and company_0.id = copyright_0.cid and company_0.id = copyright_1.cid and copyright_0.msid = movie_0.mid and copyright_1.msid = movie_1.mid
TOT: 0.8480715842859418; TR: 0.9364940320609404; QF: 0.0; select cast_0.role from cast as cast_0, company as company_0, copyright as copyright_0, copyright as copyright_1, movie as movie_0, movie as movie_1 where movie_0.title = "Daddy Long Legs" and movie_1.title = "Major" and cast_0.msid = movie_0.mid and company_0.id = copyright_0.cid and company_0.id = copyright_1.cid and copyright_0.msid = movie_0.mid and copyright_1.msid = movie_1.mid
TOT: 0.8480715842859418; TR: 0.9364940320609404; QF: 0.0; select cast_0.role from cast as cast_0, made_by as made_by_0, made_by as made_by_1, movie as movie_0, movie as movie_1, producer as producer_0 where movie_0.title = "Major" and movie_1.title = "Daddy Long Legs" and cast_0.msid = movie_0.mid and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid and made_by_1.msid = movie_1.mid and made_by_1.pid = producer_0.pid


03:38  INFO: ================
03:38  INFO: QUERY 43: Who acts "Olivia Pope" in the series Scandal?
03:38  INFO: ================
03:39  INFO: ================
03:39  INFO: QUERY 67: What year was the movie "The Imitation Game" produced
03:39  INFO: ================
1031. ROOT: ROOT; NA; ; (0) 
1032. produced: NT; NA; ; (0) made_by(0.74):| directed_by(0.69):| producer.name(0.68):| producer(0.68):| cast.role(0.63):| cast(0.63):| written_by(0.63):| 
1033. year: NT; NA; ; (0) movie.release_year(1.0):| director.birth_year(1.0):| tv_series.release_year(1.0):| actor.birth_year(1.0):| producer.birth_year(1.0):| writer.birth_year(1.0):| movie.title(0.95):Year; Years; Years; | 
1036. The Imitation Game: VTTEXT; NA; ; (0) movie.title(1.0):The Imitation Game; The Imitation Game; The Imitation Game; | cast.role(0.84):The Imitation Game &; The Imitation Game &; The Imitation Game &; | tv_series.title(0.74):The Temptation Game; The Game; The Game; | keyword.keyword(0.69):imitation; imitation; camel-imitation; | company.name(0.67):Game Station, the; Game Station; Imagination Games; | actor.name(0.64):The Game; The Game; Simon Game; | producer.name(0.64):The Game; The Game; Simon Game; | 
1038. movie: NT; NA; ; (0) movie.title(1.0):| movie(1.0):| cast.role(0.95):Movie; Movie F; Movie AD; | company.name(0.95):Movie; Movies; Movie Movie; | keyword.keyword(0.83):movie-in-movie; b-movie; z-movie; | actor.name(0.76):| actor(0.76):| 
What, WDT
year, NN
was, VBD
the, DT
movie, NN
The Imitation Game, NNP
produced, VBN
det(year-2, What-1)
nmod:tmod(produced-7, year-2)
auxpass(produced-7, was-3)
det(The Imitation Game-6, the-4)
compound(The Imitation Game-6, movie-5)
nsubjpass(produced-7, The Imitation Game-6)
root(ROOT-0, produced-7)

PARSE TREE:(1031) ROOT ROOT
    (1032) produced NT
        (1033) year NT
        (1036) The Imitation Game VTTEXT
            (1038) movie NT


===========
TRANSLATIONS
===========
TOT: 0.7187291109240963; NL: 0.7187291109240963; NL+AG: 0.9272593056085746; NL+QF: 0.7187291109240963; rels: [made_by]; projs: [movie_0.release_year]; preds: [movie_0.title = "The Imitation Game"]; havings: []; superlative: []; blanks: 0
TOT: 0.7187291109240963; NL: 0.7187291109240963; NL+AG: 0.9272593056085746; NL+QF: 0.7187291109240963; rels: [made_by]; projs: [director_0.birth_year]; preds: [movie_0.title = "The Imitation Game"]; havings: []; superlative: []; blanks: 0
TOT: 0.7187291109240963; NL: 0.7187291109240963; NL+AG: 0.9272593056085746; NL+QF: 0.7187291109240963; rels: [made_by]; projs: [tv_series_0.release_year]; preds: [movie_0.title = "The Imitation Game"]; havings: []; superlative: []; blanks: 0
TOT: 0.7187291109240963; NL: 0.7187291109240963; NL+AG: 0.9272593056085746; NL+QF: 0.7187291109240963; rels: [made_by]; projs: [actor_0.birth_year]; preds: [movie_0.title = "The Imitation Game"]; havings: []; superlative: []; blanks: 0
TOT: 0.7187291109240963; NL: 0.7187291109240963; NL+AG: 0.9272593056085746; NL+QF: 0.7187291109240963; rels: [made_by]; projs: [producer_0.birth_year]; preds: [movie_0.title = "The Imitation Game"]; havings: []; superlative: []; blanks: 0
TOT: 0.7187291109240963; NL: 0.7187291109240963; NL+AG: 0.9272593056085746; NL+QF: 0.7187291109240963; rels: [made_by]; projs: [writer_0.birth_year]; preds: [movie_0.title = "The Imitation Game"]; havings: []; superlative: []; blanks: 0
TOT: 0.7026093091136248; NL: 0.7026093091136248; NL+AG: 0.9272593056085746; NL+QF: 0.7026093091136248; rels: [directed_by]; projs: [movie_0.release_year]; preds: [movie_0.title = "The Imitation Game"]; havings: []; superlative: []; blanks: 0
TOT: 0.7026093091136248; NL: 0.7026093091136248; NL+AG: 0.9272593056085746; NL+QF: 0.7026093091136248; rels: [directed_by]; projs: [director_0.birth_year]; preds: [movie_0.title = "The Imitation Game"]; havings: []; superlative: []; blanks: 0
TOT: 0.7026093091136248; NL: 0.7026093091136248; NL+AG: 0.9272593056085746; NL+QF: 0.7026093091136248; rels: [directed_by]; projs: [tv_series_0.release_year]; preds: [movie_0.title = "The Imitation Game"]; havings: []; superlative: []; blanks: 0
TOT: 0.7026093091136248; NL: 0.7026093091136248; NL+AG: 0.9272593056085746; NL+QF: 0.7026093091136248; rels: [directed_by]; projs: [actor_0.birth_year]; preds: [movie_0.title = "The Imitation Game"]; havings: []; superlative: []; blanks: 0
TOT: 0.7026093091136248; NL: 0.7026093091136248; NL+AG: 0.9272593056085746; NL+QF: 0.7026093091136248; rels: [directed_by]; projs: [producer_0.birth_year]; preds: [movie_0.title = "The Imitation Game"]; havings: []; superlative: []; blanks: 0
TOT: 0.7026093091136248; NL: 0.7026093091136248; NL+AG: 0.9272593056085746; NL+QF: 0.7026093091136248; rels: [directed_by]; projs: [writer_0.birth_year]; preds: [movie_0.title = "The Imitation Game"]; havings: []; superlative: []; blanks: 0

===========
RESULTS
===========
TOT: 0.6845319036071591; TR: 0.7187291109240963; QF: 0.0; select producer_0.birth_year from made_by as made_by_0, movie as movie_0, producer as producer_0 where movie_0.title = "The Imitation Game" and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid
TOT: 0.6708300720682584; TR: 0.7026093091136248; QF: 0.0; select director_0.birth_year from directed_by as directed_by_0, director as director_0, movie as movie_0 where movie_0.title = "The Imitation Game" and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid
TOT: 0.6679394777117265; TR: 0.7187291109240963; QF: 0.0; select tv_series_0.release_year from made_by as made_by_0, made_by as made_by_1, movie as movie_0, producer as producer_0, tv_series as tv_series_0 where movie_0.title = "The Imitation Game" and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid and made_by_1.msid = tv_series_0.sid and made_by_1.pid = producer_0.pid
TOT: 0.6591102145941583; TR: 0.7187291109240963; QF: 0.0; select producer_0.birth_year from classification as classification_0, classification as classification_1, genre as genre_0, made_by as made_by_0, movie as movie_0, producer as producer_0, tv_series as tv_series_0 where movie_0.title = "The Imitation Game" and classification_0.gid = genre_0.gid and classification_0.msid = movie_0.mid and classification_1.gid = genre_0.gid and classification_1.msid = tv_series_0.sid and made_by_0.msid = tv_series_0.sid and made_by_0.pid = producer_0.pid
TOT: 0.6591102145941583; TR: 0.7187291109240963; QF: 0.0; select producer_0.birth_year from keyword as keyword_0, made_by as made_by_0, movie as movie_0, producer as producer_0, tags as tags_0, tags as tags_1, tv_series as tv_series_0 where movie_0.title = "The Imitation Game" and keyword_0.id = tags_0.kid and keyword_0.id = tags_1.kid and made_by_0.msid = tv_series_0.sid and made_by_0.pid = producer_0.pid and movie_0.mid = tags_0.msid and tags_1.msid = tv_series_0.sid
TOT: 0.6591102145941583; TR: 0.7187291109240963; QF: 0.0; select producer_0.birth_year from made_by as made_by_0, movie as movie_0, producer as producer_0, tv_series as tv_series_0, writer as writer_0, written_by as written_by_0, written_by as written_by_1 where movie_0.title = "The Imitation Game" and made_by_0.msid = tv_series_0.sid and made_by_0.pid = producer_0.pid and movie_0.mid = written_by_0.msid and tv_series_0.sid = written_by_1.msid and writer_0.wid = written_by_0.wid and writer_0.wid = written_by_1.wid
TOT: 0.6591102145941583; TR: 0.7187291109240963; QF: 0.0; select producer_0.birth_year from directed_by as directed_by_0, directed_by as directed_by_1, director as director_0, made_by as made_by_0, movie as movie_0, producer as producer_0, tv_series as tv_series_0 where movie_0.title = "The Imitation Game" and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and directed_by_1.did = director_0.did and directed_by_1.msid = tv_series_0.sid and made_by_0.msid = tv_series_0.sid and made_by_0.pid = producer_0.pid
TOT: 0.6591102145941583; TR: 0.7187291109240963; QF: 0.0; select director_0.birth_year from directed_by as directed_by_0, director as director_0, made_by as made_by_0, made_by as made_by_1, movie as movie_0, producer as producer_0, tv_series as tv_series_0 where movie_0.title = "The Imitation Game" and directed_by_0.did = director_0.did and directed_by_0.msid = tv_series_0.sid and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid and made_by_1.msid = tv_series_0.sid and made_by_1.pid = producer_0.pid
TOT: 0.6591102145941583; TR: 0.7187291109240963; QF: 0.0; select writer_0.birth_year from made_by as made_by_0, made_by as made_by_1, movie as movie_0, producer as producer_0, tv_series as tv_series_0, writer as writer_0, written_by as written_by_0 where movie_0.title = "The Imitation Game" and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid and made_by_1.msid = tv_series_0.sid and made_by_1.pid = producer_0.pid and tv_series_0.sid = written_by_0.msid and writer_0.wid = written_by_0.wid
TOT: 0.6591102145941583; TR: 0.7187291109240963; QF: 0.0; select producer_0.birth_year from company as company_0, copyright as copyright_0, copyright as copyright_1, made_by as made_by_0, movie as movie_0, producer as producer_0, tv_series as tv_series_0 where movie_0.title = "The Imitation Game" and company_0.id = copyright_0.cid and company_0.id = copyright_1.cid and copyright_0.msid = movie_0.mid and copyright_1.msid = tv_series_0.sid and made_by_0.msid = tv_series_0.sid and made_by_0.pid = producer_0.pid


03:41  INFO: ================
03:41  INFO: QUERY 97: What is the number of movies in which "Tom Cruise" acted?
03:41  INFO: ================
1040. ROOT: ROOT; NA; ; (0) 
1041. What: CMT; NA; ; (0) 
1043. number of: FT; count; ; (0) 
1045. movies: NT; NA; ; (0) movie.title(1.0):| movie(1.0):| cast.role(0.95):Movie; Movie F; Movie AD; | company.name(0.95):Movies; Movie; Movie Movie; | tv_series.title(0.84):Movies, Movies, Movi; Movie Mob; Moon Movies; | keyword.keyword(0.83):movie-in-movie; movies-about-movies; b-movie; | actor.name(0.76):| 
1047. acted: NT; NA; ; (0) movie.release_year(0.63):| tv_series.release_year(0.63):| actor.name(0.62):| actor(0.62):| genre.genre(0.62):| genre(0.62):| made_by(0.61):| 
1050. Tom Cruise: VTTEXT; NA; ; (0) director.name(1.0):Tom Cruise; Tom Cruise; Cruise; | actor.name(1.0):Tom Cruise; Tom Cruise; Tom Cruiso; | producer.name(1.0):Tom Cruise; Tom Cruise; Cruise; | writer.name(1.0):Tom Cruise; Tom Cruise; Cruise; | cast.role(0.95):'Tom Cruise'; 'Tom Cruise'; 'Tom Cruise'; | movie.title(0.88):Tom Cruise On: Tom C; Tom Cruise On: Tom C; Cruise; | tv_series.title(0.75):Cruise; The Cruise; Inside Cruise; | 
What, WP
is, VBZ
the, DT
number, NN
of, IN
movies, NNS
in, IN
which, WDT
Tom Cruise, NNP
acted, VBD
root(ROOT-0, What-1)
cop(What-1, is-2)
det(number-4, the-3)
nsubj(What-1, number-4)
case(movies-6, of-5)
nmod(number-4, movies-6)
case(which-8, in-7)
nmod(acted-10, which-8)
nsubj(acted-10, Tom Cruise-9)
acl:relcl(movies-6, acted-10)

PARSE TREE:(1040) ROOT ROOT
    (1041) What CMT
        (1043) number of FT
            (1045) movies NT
                (1047) acted NT
                    (1050) Tom Cruise VTTEXT


===========
TRANSLATIONS
===========
TOT: 0.8662391053409028; NL: 0.8662391053409028; NL+AG: 0.9623803610291506; NL+QF: 0.8662391053409028; rels: []; projs: [count(distinct(movie_0.title))]; preds: [director_0.name = "Tom Cruise"]; havings: []; superlative: []; blanks: 1
TOT: 0.8662391053409028; NL: 0.8662391053409028; NL+AG: 0.9623803610291506; NL+QF: 0.8662391053409028; rels: []; projs: [count(distinct(movie_0.title))]; preds: [actor_0.name = "Tom Cruise"]; havings: []; superlative: []; blanks: 1
TOT: 0.8662391053409028; NL: 0.8662391053409028; NL+AG: 0.9623803610291506; NL+QF: 0.8662391053409028; rels: []; projs: [count(distinct(movie_0.title))]; preds: [producer_0.name = "Tom Cruise"]; havings: []; superlative: []; blanks: 1
TOT: 0.8662391053409028; NL: 0.8662391053409028; NL+AG: 0.9623803610291506; NL+QF: 0.8662391053409028; rels: []; projs: [count(distinct(movie_0.title))]; preds: [writer_0.name = "Tom Cruise"]; havings: []; superlative: []; blanks: 1
TOT: 0.8511606491570143; NL: 0.8511606491570143; NL+AG: 0.9550159970562051; NL+QF: 0.8511606491570143; rels: []; projs: [count(distinct(movie_0.title))]; preds: [cast_0.role = "'Tom Cruise'"]; havings: []; superlative: []; blanks: 1
TOT: 0.828587847371172; NL: 0.828587847371172; NL+AG: 0.9444691039097105; NL+QF: 0.828587847371172; rels: []; projs: [count(distinct(movie_0.title))]; preds: [movie_0.title = "Tom Cruise On: Tom Cruise, Jew"]; havings: []; superlative: []; blanks: 1
TOT: 0.7912922821972069; NL: 0.7912922821972069; NL+AG: 0.9334884919988383; NL+QF: 0.7912922821972069; rels: []; projs: [count(distinct(actor_0.name))]; preds: [director_0.name = "Tom Cruise"]; havings: []; superlative: []; blanks: 1
TOT: 0.7912922821972069; NL: 0.7912922821972069; NL+AG: 0.9334884919988383; NL+QF: 0.7912922821972069; rels: []; projs: [count(distinct(actor_0.name))]; preds: [actor_0.name = "Tom Cruise"]; havings: []; superlative: []; blanks: 1
TOT: 0.7912922821972069; NL: 0.7912922821972069; NL+AG: 0.9334884919988383; NL+QF: 0.7912922821972069; rels: []; projs: [count(distinct(actor_0.name))]; preds: [producer_0.name = "Tom Cruise"]; havings: []; superlative: []; blanks: 1
TOT: 0.7912922821972069; NL: 0.7912922821972069; NL+AG: 0.9334884919988383; NL+QF: 0.7912922821972069; rels: []; projs: [count(distinct(actor_0.name))]; preds: [writer_0.name = "Tom Cruise"]; havings: []; superlative: []; blanks: 1
TOT: 0.7854026604085581; NL: 0.7854026604085581; NL+AG: 0.9336787348794631; NL+QF: 0.7854026604085581; rels: []; projs: [count(distinct(movie_0.title))]; preds: [tv_series_0.title = "Cruise"]; havings: []; superlative: []; blanks: 1

===========
RESULTS
===========
TOT: 0.8136426663847469; TR: 0.8511606491570143; QF: 0.0; select count(distinct(movie_0.title)) from cast as cast_0, movie as movie_0 where cast_0.role = "'Tom Cruise'" and cast_0.msid = movie_0.mid
TOT: 0.8099153988614446; TR: 0.8662391053409028; QF: 0.0; select count(distinct(movie_0.title)) from movie as movie_0, writer as writer_0, written_by as written_by_0 where writer_0.name = "Tom Cruise" and movie_0.mid = written_by_0.msid and writer_0.wid = written_by_0.wid
TOT: 0.8099153988614446; TR: 0.8662391053409028; QF: 0.0; select count(distinct(movie_0.title)) from made_by as made_by_0, movie as movie_0, producer as producer_0 where producer_0.name = "Tom Cruise" and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid
TOT: 0.8099153988614446; TR: 0.8662391053409028; QF: 0.0; select count(distinct(movie_0.title)) from actor as actor_0, cast as cast_0, movie as movie_0 where actor_0.name = "Tom Cruise" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid
TOT: 0.8099153988614446; TR: 0.8662391053409028; QF: 0.0; select count(distinct(movie_0.title)) from directed_by as directed_by_0, director as director_0, movie as movie_0 where director_0.name = "Tom Cruise" and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid
TOT: 0.7844937098484438; TR: 0.8662391053409028; QF: 0.0; select count(distinct(movie_0.title)) from classification as classification_0, classification as classification_1, genre as genre_0, made_by as made_by_0, movie as movie_0, producer as producer_0, tv_series as tv_series_0 where producer_0.name = "Tom Cruise" and classification_0.gid = genre_0.gid and classification_0.msid = movie_0.mid and classification_1.gid = genre_0.gid and classification_1.msid = tv_series_0.sid and made_by_0.msid = tv_series_0.sid and made_by_0.pid = producer_0.pid
TOT: 0.7844937098484438; TR: 0.8662391053409028; QF: 0.0; select count(distinct(movie_0.title)) from actor as actor_0, cast as cast_0, classification as classification_0, classification as classification_1, genre as genre_0, movie as movie_0, tv_series as tv_series_0 where actor_0.name = "Tom Cruise" and actor_0.aid = cast_0.aid and cast_0.msid = tv_series_0.sid and classification_0.gid = genre_0.gid and classification_0.msid = movie_0.mid and classification_1.gid = genre_0.gid and classification_1.msid = tv_series_0.sid
TOT: 0.7844937098484438; TR: 0.8662391053409028; QF: 0.0; select count(distinct(movie_0.title)) from directed_by as directed_by_0, director as director_0, keyword as keyword_0, movie as movie_0, tags as tags_0, tags as tags_1, tv_series as tv_series_0 where director_0.name = "Tom Cruise" and directed_by_0.did = director_0.did and directed_by_0.msid = tv_series_0.sid and keyword_0.id = tags_0.kid and keyword_0.id = tags_1.kid and movie_0.mid = tags_0.msid and tags_1.msid = tv_series_0.sid
TOT: 0.7844937098484438; TR: 0.8662391053409028; QF: 0.0; select count(distinct(movie_0.title)) from company as company_0, copyright as copyright_0, copyright as copyright_1, movie as movie_0, tv_series as tv_series_0, writer as writer_0, written_by as written_by_0 where writer_0.name = "Tom Cruise" and company_0.id = copyright_0.cid and company_0.id = copyright_1.cid and copyright_0.msid = movie_0.mid and copyright_1.msid = tv_series_0.sid and tv_series_0.sid = written_by_0.msid and writer_0.wid = written_by_0.wid
TOT: 0.7844937098484438; TR: 0.8662391053409028; QF: 0.0; select count(distinct(movie_0.title)) from classification as classification_0, classification as classification_1, genre as genre_0, movie as movie_0, tv_series as tv_series_0, writer as writer_0, written_by as written_by_0 where writer_0.name = "Tom Cruise" and classification_0.gid = genre_0.gid and classification_0.msid = movie_0.mid and classification_1.gid = genre_0.gid and classification_1.msid = tv_series_0.sid and tv_series_0.sid = written_by_0.msid and writer_0.wid = written_by_0.wid


03:42  INFO: ================
03:42  INFO: QUERY 47: What are the series featuring "Kerry Washington"?
03:42  INFO: ================
03:43  INFO: ================
03:43  INFO: QUERY 85: What are the movies related to nuclear weapons
03:43  INFO: ================
1060. ROOT: ROOT; NA; ; (0) 
1061. related: NT; NA; ; (0) made_by(0.69):| written_by(0.66):| directed_by(0.66):| cast.role(0.61):| cast(0.6):| company.name(0.59):| company(0.59):| 
1062. What: CMT; NA; ; (0) 
1064. movies: NT; NA; ; (0) movie.title(1.0):| movie(1.0):| cast.role(0.95):Movie; Movie F; Movie AD; | company.name(0.95):Movies; Movie; Movie Movie; | tv_series.title(0.84):Movies, Movies, Movi; Movie Mob; Moon Movies; | keyword.keyword(0.83):movie-in-movie; movies-about-movies; b-movie; | actor.name(0.76):| 
1066. weapons: VTTEXT; NA; ; (0) movie.title(0.95):Weapons; Weapons; Weapons; | cast.role(0.95):Weapons; Weapons; Weapons; | keyword.keyword(0.95):weapon; weapon-x; power-weapon; | actor.name(0.74):The Weapons; Leatha Weapons; Letha Weapons; | tv_series.title(0.71):Weapons of Power; Weapon Wars; Weapons at War; | company.name(0.67):Weapon Films; Weapons Productions; No Weapon Production; | director.nationality(0.59):| 
1068. nuclear: VTTEXT; NA; ; (0) movie.title(1.0):Nuclear; Nuclear Leak; Nuclear Day; | company.name(1.0):Nuclear; Nuclear; Nuclear Cat; | keyword.keyword(1.0):nuclear; nuclear-leak; nuclear-arms; | cast.role(0.79):Nuclear dealer; Nuclear Man; Nuclear Man; | tv_series.title(0.77):Nuclear Ned; Nuclear Coleslaw; Nuclear Family; | actor.name(0.68):Nuclear Family; Nuclear Wintour; El Físico Nuclear; | company.country_code(0.62):| 
What, WP
are, VBP
the, DT
movies, NNS
related, VBN
to, TO
nuclear, JJ
weapons, NNS
dobj(related-5, What-1)
auxpass(related-5, are-2)
det(movies-4, the-3)
nsubjpass(related-5, movies-4)
root(ROOT-0, related-5)
case(weapons-8, to-6)
amod(weapons-8, nuclear-7)
nmod(related-5, weapons-8)

PARSE TREE:(1060) ROOT ROOT
    (1062) What CMT
        (1064) movies NT
            (1061) related NT
                (1066) weapons VTTEXT
                    (1068) nuclear VTTEXT


===========
TRANSLATIONS
===========
TOT: 0.8193886719056226; NL: 0.8193886719056226; NL+AG: 0.9331636843049301; NL+QF: 0.8193886719056226; rels: [made_by]; projs: [movie_0.title]; preds: [movie_0.title = "Nuclear"]; havings: []; superlative: []; blanks: 1
TOT: 0.8193886719056226; NL: 0.8193886719056226; NL+AG: 0.9331636843049301; NL+QF: 0.8193886719056226; rels: [made_by]; projs: [movie_0.title]; preds: [company_0.name = "Nuclear"]; havings: []; superlative: []; blanks: 1
TOT: 0.8193886719056226; NL: 0.8193886719056226; NL+AG: 0.9331636843049301; NL+QF: 0.8193886719056226; rels: [made_by]; projs: [movie_0.title]; preds: [keyword_0.keyword = "nuclear"]; havings: []; superlative: []; blanks: 1
TOT: 0.8104255302688795; NL: 0.8104255302688795; NL+AG: 0.9331636843049301; NL+QF: 0.8104255302688795; rels: [written_by]; projs: [movie_0.title]; preds: [movie_0.title = "Nuclear"]; havings: []; superlative: []; blanks: 1
TOT: 0.8104255302688795; NL: 0.8104255302688795; NL+AG: 0.9331636843049301; NL+QF: 0.8104255302688795; rels: [written_by]; projs: [movie_0.title]; preds: [company_0.name = "Nuclear"]; havings: []; superlative: []; blanks: 1
TOT: 0.8104255302688795; NL: 0.8104255302688795; NL+AG: 0.9331636843049301; NL+QF: 0.8104255302688795; rels: [written_by]; projs: [movie_0.title]; preds: [keyword_0.keyword = "nuclear"]; havings: []; superlative: []; blanks: 1
TOT: 0.8081260796742606; NL: 0.8081260796742606; NL+AG: 0.9331636843049301; NL+QF: 0.8081260796742606; rels: [directed_by]; projs: [movie_0.title]; preds: [movie_0.title = "Nuclear"]; havings: []; superlative: []; blanks: 1
TOT: 0.8081260796742606; NL: 0.8081260796742606; NL+AG: 0.9331636843049301; NL+QF: 0.8081260796742606; rels: [directed_by]; projs: [movie_0.title]; preds: [company_0.name = "Nuclear"]; havings: []; superlative: []; blanks: 1
TOT: 0.8081260796742606; NL: 0.8081260796742606; NL+AG: 0.9331636843049301; NL+QF: 0.8081260796742606; rels: [directed_by]; projs: [movie_0.title]; preds: [keyword_0.keyword = "nuclear"]; havings: []; superlative: []; blanks: 1
TOT: 0.806225774829855; NL: 0.806225774829855; NL+AG: 0.9331636843049301; NL+QF: 0.806225774829855; rels: []; projs: [movie_0.title]; preds: [movie_0.title = "Nuclear"]; havings: []; superlative: []; blanks: 2
TOT: 0.806225774829855; NL: 0.806225774829855; NL+AG: 0.9331636843049301; NL+QF: 0.806225774829855; rels: []; projs: [movie_0.title]; preds: [company_0.name = "Nuclear"]; havings: []; superlative: []; blanks: 2
TOT: 0.806225774829855; NL: 0.806225774829855; NL+AG: 0.9331636843049301; NL+QF: 0.806225774829855; rels: []; projs: [movie_0.title]; preds: [keyword_0.keyword = "nuclear"]; havings: []; superlative: []; blanks: 2

===========
RESULTS
===========
TOT: 0.758904067927054; TR: 0.806225774829855; QF: 0.0; select movie_0.title from keyword as keyword_0, movie as movie_0, tags as tags_0 where keyword_0.keyword = "nuclear" and keyword_0.id = tags_0.kid and movie_0.mid = tags_0.msid
TOT: 0.758904067927054; TR: 0.806225774829855; QF: 0.0; select movie_0.title from company as company_0, copyright as copyright_0, movie as movie_0 where company_0.name = "Nuclear" and company_0.id = copyright_0.cid and copyright_0.msid = movie_0.mid
TOT: 0.7535001045460239; TR: 0.8193886719056226; QF: 0.0; select movie_0.title from made_by as made_by_0, made_by as made_by_1, movie as movie_0, movie as movie_1, producer as producer_0 where movie_1.title = "Nuclear" and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid and made_by_1.msid = movie_1.mid and made_by_1.pid = producer_0.pid
TOT: 0.7458814341547922; TR: 0.8104255302688795; QF: 0.0; select movie_0.title from movie as movie_0, movie as movie_1, writer as writer_0, written_by as written_by_0, written_by as written_by_1 where movie_1.title = "Nuclear" and movie_0.mid = written_by_0.msid and movie_1.mid = written_by_1.msid and writer_0.wid = written_by_0.wid and writer_0.wid = written_by_1.wid
TOT: 0.7446708414284557; TR: 0.8193886719056226; QF: 0.0; select movie_0.title from keyword as keyword_0, made_by as made_by_0, made_by as made_by_1, movie as movie_0, producer as producer_0, tags as tags_0, tv_series as tv_series_0 where keyword_0.keyword = "nuclear" and keyword_0.id = tags_0.kid and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid and made_by_1.msid = tv_series_0.sid and made_by_1.pid = producer_0.pid and tags_0.msid = tv_series_0.sid
TOT: 0.7446708414284557; TR: 0.8193886719056226; QF: 0.0; select movie_0.title from company as company_0, copyright as copyright_0, made_by as made_by_0, made_by as made_by_1, movie as movie_0, producer as producer_0, tv_series as tv_series_0 where company_0.name = "Nuclear" and company_0.id = copyright_0.cid and copyright_0.msid = tv_series_0.sid and made_by_0.msid = tv_series_0.sid and made_by_0.pid = producer_0.pid and made_by_1.msid = movie_0.mid and made_by_1.pid = producer_0.pid
TOT: 0.7439269011493662; TR: 0.8081260796742606; QF: 0.0; select movie_0.title from directed_by as directed_by_0, directed_by as directed_by_1, director as director_0, movie as movie_0, movie as movie_1 where movie_1.title = "Nuclear" and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and directed_by_1.did = director_0.did and directed_by_1.msid = movie_1.mid
TOT: 0.7423116420316214; TR: 0.806225774829855; QF: 0.0; select movie_0.title from keyword as keyword_0, movie as movie_0, movie as movie_1, tags as tags_0, tags as tags_1 where movie_1.title = "Nuclear" and keyword_0.id = tags_0.kid and keyword_0.id = tags_1.kid and movie_0.mid = tags_0.msid and movie_1.mid = tags_1.msid
TOT: 0.7423116420316214; TR: 0.806225774829855; QF: 0.0; select movie_0.title from actor as actor_0, cast as cast_0, cast as cast_1, movie as movie_0, movie as movie_1 where movie_1.title = "Nuclear" and actor_0.aid = cast_0.aid and actor_0.aid = cast_1.aid and cast_0.msid = movie_0.mid and cast_1.msid = movie_1.mid
TOT: 0.7423116420316214; TR: 0.806225774829855; QF: 0.0; select movie_0.title from classification as classification_0, classification as classification_1, genre as genre_0, movie as movie_0, movie as movie_1 where movie_1.title = "Nuclear" and classification_0.gid = genre_0.gid and classification_0.msid = movie_0.mid and classification_1.gid = genre_0.gid and classification_1.msid = movie_1.mid


03:45  INFO: ================
03:45  INFO: QUERY 22: Who was the director of the movie Joy from 2015?
03:45  INFO: ================
1070. ROOT: ROOT; NA; ; (0) 
1071. Joy: NT; NA; ; (0) writer.name(0.61):| writer(0.61):| written_by(0.6):| director.birth_city(0.59):| director.birth_year(0.59):| actor.birth_city(0.59):| actor.birth_year(0.59):| 
1072. Who: CMT; NA; ; (0) director.name(1.0):| actor.name(1.0):| producer.name(1.0):| writer.name(1.0):| 
1074. director: NT; NA; ; (0) director.name(1.0):| director(1.0):| movie.title(0.95):Director; Director; Director; | producer.name(0.95):Director; Co-Director; Director GT; | company.name(0.95):Director; Directors; Directors; | writer.name(0.95):Director; Director X; Director X.; | tv_series.title(0.86):Directors on Directo; The Directors; The Directors; | 
1076. movie: NT; NA; ; (0) movie.title(1.0):| movie(1.0):| cast.role(0.95):Movie; Movie F; Movie AD; | company.name(0.95):Movie; Movies; Movie Movie; | keyword.keyword(0.83):movie-in-movie; b-movie; z-movie; | actor.name(0.76):| actor(0.76):| 
1079. 2015: VTNUM; NA; ; (0) movie.release_year(1.0):2015; 2015; 2015; | tv_series.release_year(1.0):2015; 2015; 2015; | 
Who, WP
was, VBD
the, DT
director, NN
of, IN
the, DT
movie, NN
Joy, VBN
from, IN
2015, CD
dobj(Joy-8, Who-1)
auxpass(Joy-8, was-2)
det(director-4, the-3)
nsubjpass(Joy-8, director-4)
case(movie-7, of-5)
det(movie-7, the-6)
nmod(director-4, movie-7)
root(ROOT-0, Joy-8)
case(2015-10, from-9)
nmod(Joy-8, 2015-10)

PARSE TREE:(1070) ROOT ROOT
    (1072) Who CMT
        (1074) director NT
            (1076) movie NT
            (1071) Joy NT
                (1079) 2015 VTNUM


===========
TRANSLATIONS
===========
TOT: 0.9174505626104981; NL: 0.9174505626104981; NL+AG: 0.9702920339048415; NL+QF: 0.9174505626104981; rels: [movie]; projs: [director_0.name]; preds: [movie_0.release_year = 2015]; havings: []; superlative: []; blanks: 2
TOT: 0.9174505626104981; NL: 0.9174505626104981; NL+AG: 0.9702920339048415; NL+QF: 0.9174505626104981; rels: [movie]; projs: [director_0.name]; preds: [tv_series_0.release_year = 2015]; havings: []; superlative: []; blanks: 2
TOT: 0.8689647470148877; NL: 0.8689647470148877; NL+AG: 0.940584067809683; NL+QF: 0.8689647470148877; rels: [actor]; projs: [director_0.name]; preds: [movie_0.release_year = 2015]; havings: []; superlative: []; blanks: 2
TOT: 0.8689647470148877; NL: 0.8689647470148877; NL+AG: 0.940584067809683; NL+QF: 0.8689647470148877; rels: [actor]; projs: [director_0.name]; preds: [tv_series_0.release_year = 2015]; havings: []; superlative: []; blanks: 2
TOT: 0.846655699563006; NL: 0.846655699563006; NL+AG: 0.940584067809683; NL+QF: 0.846655699563006; rels: [movie]; projs: [producer_0.name]; preds: [movie_0.release_year = 2015]; havings: []; superlative: []; blanks: 2
TOT: 0.846655699563006; NL: 0.846655699563006; NL+AG: 0.940584067809683; NL+QF: 0.846655699563006; rels: [movie]; projs: [producer_0.name]; preds: [tv_series_0.release_year = 2015]; havings: []; superlative: []; blanks: 2
TOT: 0.8417155348343195; NL: 0.8417155348343195; NL+AG: 0.940584067809683; NL+QF: 0.8417155348343195; rels: [movie]; projs: [director_0.name]; preds: [movie_0.release_year = 2015]; havings: []; superlative: []; blanks: 2
TOT: 0.8417155348343195; NL: 0.8417155348343195; NL+AG: 0.940584067809683; NL+QF: 0.8417155348343195; rels: [movie]; projs: [director_0.name]; preds: [tv_series_0.release_year = 2015]; havings: []; superlative: []; blanks: 2
TOT: 0.8417155348343195; NL: 0.8417155348343195; NL+AG: 0.940584067809683; NL+QF: 0.8417155348343195; rels: [movie]; projs: [director_0.name]; preds: [movie_0.release_year = 2015]; havings: []; superlative: []; blanks: 2
TOT: 0.8417155348343195; NL: 0.8417155348343195; NL+AG: 0.940584067809683; NL+QF: 0.8417155348343195; rels: [movie]; projs: [director_0.name]; preds: [tv_series_0.release_year = 2015]; havings: []; superlative: []; blanks: 2
TOT: 0.8417155348343195; NL: 0.8417155348343195; NL+AG: 0.940584067809683; NL+QF: 0.8417155348343195; rels: []; projs: [director_0.name]; preds: [movie_0.release_year = 2015]; havings: []; superlative: []; blanks: 3
TOT: 0.8417155348343195; NL: 0.8417155348343195; NL+AG: 0.940584067809683; NL+QF: 0.8417155348343195; rels: []; projs: [director_0.name]; preds: [tv_series_0.release_year = 2015]; havings: []; superlative: []; blanks: 3
TOT: 0.8417155348343195; NL: 0.8417155348343195; NL+AG: 0.9386993405476363; NL+QF: 0.8417155348343195; rels: [movie]; projs: [director_0.name]; preds: []; havings: []; superlative: []; blanks: 3
TOT: 0.8417155348343195; NL: 0.8417155348343195; NL+AG: 0.940584067809683; NL+QF: 0.8417155348343195; rels: [movie]; projs: [actor_0.name]; preds: [movie_0.release_year = 2015]; havings: []; superlative: []; blanks: 2
TOT: 0.8417155348343195; NL: 0.8417155348343195; NL+AG: 0.940584067809683; NL+QF: 0.8417155348343195; rels: [movie]; projs: [actor_0.name]; preds: [tv_series_0.release_year = 2015]; havings: []; superlative: []; blanks: 2
TOT: 0.8417155348343195; NL: 0.8417155348343195; NL+AG: 0.940584067809683; NL+QF: 0.8417155348343195; rels: [movie]; projs: [producer_0.name]; preds: [movie_0.release_year = 2015]; havings: []; superlative: []; blanks: 2
TOT: 0.8417155348343195; NL: 0.8417155348343195; NL+AG: 0.940584067809683; NL+QF: 0.8417155348343195; rels: [movie]; projs: [producer_0.name]; preds: [tv_series_0.release_year = 2015]; havings: []; superlative: []; blanks: 2
TOT: 0.8417155348343195; NL: 0.8417155348343195; NL+AG: 0.940584067809683; NL+QF: 0.8417155348343195; rels: [movie]; projs: [writer_0.name]; preds: [movie_0.release_year = 2015]; havings: []; superlative: []; blanks: 2
TOT: 0.8417155348343195; NL: 0.8417155348343195; NL+AG: 0.940584067809683; NL+QF: 0.8417155348343195; rels: [movie]; projs: [writer_0.name]; preds: [tv_series_0.release_year = 2015]; havings: []; superlative: []; blanks: 2

===========
RESULTS
===========
TOT: 0.8534451375406007; TR: 0.9174505626104981; QF: 0.0; select director_0.name from directed_by as directed_by_0, director as director_0, movie as movie_0 where movie_0.release_year = 2015 and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid
TOT: 0.8280234485275999; TR: 0.9174505626104981; QF: 0.0; select director_0.name from directed_by as directed_by_0, director as director_0, keyword as keyword_0, movie as movie_0, tags as tags_0, tags as tags_1, tv_series as tv_series_0 where movie_0.release_year = 2015 and directed_by_0.did = director_0.did and directed_by_0.msid = tv_series_0.sid and keyword_0.id = tags_0.kid and keyword_0.id = tags_1.kid and movie_0.mid = tags_0.msid and tags_1.msid = tv_series_0.sid
TOT: 0.8280234485275999; TR: 0.9174505626104981; QF: 0.0; select director_0.name from directed_by as directed_by_0, director as director_0, keyword as keyword_0, movie as movie_0, tags as tags_0, tags as tags_1, tv_series as tv_series_0 where tv_series_0.release_year = 2015 and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and keyword_0.id = tags_0.kid and keyword_0.id = tags_1.kid and movie_0.mid = tags_0.msid and tags_1.msid = tv_series_0.sid
TOT: 0.8280234485275999; TR: 0.9174505626104981; QF: 0.0; select director_0.name from classification as classification_0, classification as classification_1, directed_by as directed_by_0, director as director_0, genre as genre_0, movie as movie_0, tv_series as tv_series_0 where tv_series_0.release_year = 2015 and classification_0.gid = genre_0.gid and classification_0.msid = movie_0.mid and classification_1.gid = genre_0.gid and classification_1.msid = tv_series_0.sid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid
TOT: 0.8280234485275999; TR: 0.9174505626104981; QF: 0.0; select director_0.name from actor as actor_0, cast as cast_0, cast as cast_1, directed_by as directed_by_0, director as director_0, movie as movie_0, tv_series as tv_series_0 where movie_0.release_year = 2015 and actor_0.aid = cast_0.aid and actor_0.aid = cast_1.aid and cast_0.msid = movie_0.mid and cast_1.msid = tv_series_0.sid and directed_by_0.did = director_0.did and directed_by_0.msid = tv_series_0.sid
TOT: 0.8280234485275999; TR: 0.9174505626104981; QF: 0.0; select director_0.name from directed_by as directed_by_0, director as director_0, movie as movie_0, tv_series as tv_series_0, writer as writer_0, written_by as written_by_0, written_by as written_by_1 where movie_0.release_year = 2015 and directed_by_0.did = director_0.did and directed_by_0.msid = tv_series_0.sid and movie_0.mid = written_by_0.msid and tv_series_0.sid = written_by_1.msid and writer_0.wid = written_by_0.wid and writer_0.wid = written_by_1.wid
TOT: 0.8280234485275999; TR: 0.9174505626104981; QF: 0.0; select director_0.name from directed_by as directed_by_0, director as director_0, made_by as made_by_0, made_by as made_by_1, movie as movie_0, producer as producer_0, tv_series as tv_series_0 where tv_series_0.release_year = 2015 and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid and made_by_1.msid = tv_series_0.sid and made_by_1.pid = producer_0.pid
TOT: 0.8280234485275999; TR: 0.9174505626104981; QF: 0.0; select director_0.name from directed_by as directed_by_0, director as director_0, movie as movie_0, tv_series as tv_series_0, writer as writer_0, written_by as written_by_0, written_by as written_by_1 where tv_series_0.release_year = 2015 and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and movie_0.mid = written_by_0.msid and tv_series_0.sid = written_by_1.msid and writer_0.wid = written_by_0.wid and writer_0.wid = written_by_1.wid
TOT: 0.8280234485275999; TR: 0.9174505626104981; QF: 0.0; select director_0.name from directed_by as directed_by_0, director as director_0, made_by as made_by_0, made_by as made_by_1, movie as movie_0, producer as producer_0, tv_series as tv_series_0 where movie_0.release_year = 2015 and directed_by_0.did = director_0.did and directed_by_0.msid = tv_series_0.sid and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid and made_by_1.msid = tv_series_0.sid and made_by_1.pid = producer_0.pid
TOT: 0.8280234485275999; TR: 0.9174505626104981; QF: 0.0; select director_0.name from company as company_0, copyright as copyright_0, copyright as copyright_1, directed_by as directed_by_0, director as director_0, movie as movie_0, tv_series as tv_series_0 where tv_series_0.release_year = 2015 and company_0.id = copyright_0.cid and company_0.id = copyright_1.cid and copyright_0.msid = movie_0.mid and copyright_1.msid = tv_series_0.sid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid


03:46  INFO: ================
03:46  INFO: QUERY 56: Who is the director of the series "House of Cards" produced by Netflix?
03:46  INFO: ================
1082. ROOT: ROOT; NA; ; (0) 
1083. produced: NT; NA; ; (0) made_by(0.74):| directed_by(0.69):| producer.name(0.68):| producer(0.68):| cast.role(0.63):| cast(0.63):| written_by(0.63):| 
1084. Who: CMT; NA; ; (0) director.name(1.0):| actor.name(1.0):| producer.name(1.0):| writer.name(1.0):| 
1086. director: NT; NA; ; (0) director.name(1.0):| director(1.0):| movie.title(0.95):Director; Director; Director; | producer.name(0.95):Director; Co-Director; Director GT; | company.name(0.95):Director; Directors; Directors; | writer.name(0.95):Director; Director X; Director X.; | tv_series.title(0.86):Directors on Directo; The Directors; The Directors; | 
1088. House of Cards: VTTEXT; NA; ; (0) movie.title(0.95):House of Cards; House of Cards; House of Cards; | tv_series.title(0.95):House of Cards; House of Cards; House of Card; | company.name(0.95):House of Cards; House of Cards; House of C; | cast.role(0.73):Boy with House of Ca; Boy with House of Ca; Ted - House of Cards; | keyword.keyword(0.66):house-of-cards; house-of-cards; card-house; | producer.name(0.65):House of Chooch; House of Chooch; House of Pain; | director.name(0.61):House of Rogues; House of Rogues; House of Rogues; | 
1091. series: NT; NA; ; (0) tv_series.title(1.0):| tv_series(1.0):| keyword.keyword(0.95):series; series; series-in-series; | company.name(0.87):Series+; Series+; T-Series; | movie.title(0.8):Series 4; Series 4; Chinese Series; | actor.name(0.79):Eric Series; Eric Series; series editor; | tv_series.num_of_episodes(0.68):| 
1092. Netflix: VTTEXT; NA; ; (0) company.name(1.0):Netflix; Netflix; Netflix; | keyword.keyword(1.0):netflix; netflix-series; netflix-production; | tv_series.title(0.78):| tv_series(0.78):| cast.role(0.77):Netflix guy; | movie.title(0.74):| movie(0.74):| 
Who, WP
is, VBZ
the, DT
director, NN
of, IN
the, DT
series, NN
House of Cards, NNS
produced, VBN
by, IN
Netflix, NNP
dobj(produced-9, Who-1)
auxpass(produced-9, is-2)
det(director-4, the-3)
nsubjpass(produced-9, director-4)
case(House of Cards-8, of-5)
det(House of Cards-8, the-6)
compound(House of Cards-8, series-7)
nmod(director-4, House of Cards-8)
root(ROOT-0, produced-9)
case(Netflix-11, by-10)
nmod(produced-9, Netflix-11)

PARSE TREE:(1082) ROOT ROOT
    (1084) Who CMT
        (1086) director NT
            (1088) House of Cards VTTEXT
                (1091) series NT
            (1083) produced NT
                (1092) Netflix VTTEXT


===========
TRANSLATIONS
===========
TOT: 0.942204427045604; NL: 0.942204427045604; NL+AG: 0.9718750876813372; NL+QF: 0.942204427045604; rels: [made_by]; projs: [director_0.name]; preds: [tv_series_0.title = "House of Cards",company_0.name = "Netflix"]; havings: []; superlative: []; blanks: 1
TOT: 0.942204427045604; NL: 0.942204427045604; NL+AG: 0.9718750876813372; NL+QF: 0.942204427045604; rels: [made_by]; projs: [director_0.name]; preds: [tv_series_0.title = "House of Cards",keyword_0.keyword = "netflix"]; havings: []; superlative: []; blanks: 1
TOT: 0.9294677786067335; NL: 0.9294677786067335; NL+AG: 0.9718750876813372; NL+QF: 0.9294677786067335; rels: [directed_by]; projs: [director_0.name]; preds: [tv_series_0.title = "House of Cards",company_0.name = "Netflix"]; havings: []; superlative: []; blanks: 1
TOT: 0.9294677786067335; NL: 0.9294677786067335; NL+AG: 0.9718750876813372; NL+QF: 0.9294677786067335; rels: [directed_by]; projs: [director_0.name]; preds: [tv_series_0.title = "House of Cards",keyword_0.keyword = "netflix"]; havings: []; superlative: []; blanks: 1
TOT: 0.9251400815999482; NL: 0.9251400815999482; NL+AG: 0.9718750876813372; NL+QF: 0.9251400815999482; rels: [producer]; projs: [director_0.name]; preds: [tv_series_0.title = "House of Cards",company_0.name = "Netflix"]; havings: []; superlative: []; blanks: 1
TOT: 0.9251400815999482; NL: 0.9251400815999482; NL+AG: 0.9718750876813372; NL+QF: 0.9251400815999482; rels: [producer]; projs: [director_0.name]; preds: [tv_series_0.title = "House of Cards",keyword_0.keyword = "netflix"]; havings: []; superlative: []; blanks: 1
TOT: 0.9174505626104981; NL: 0.9174505626104981; NL+AG: 0.9718750876813372; NL+QF: 0.9174505626104981; rels: []; projs: [director_0.name]; preds: [tv_series_0.title = "House of Cards",company_0.name = "Netflix"]; havings: []; superlative: []; blanks: 2
TOT: 0.9174505626104981; NL: 0.9174505626104981; NL+AG: 0.9718750876813372; NL+QF: 0.9174505626104981; rels: []; projs: [director_0.name]; preds: [tv_series_0.title = "House of Cards",keyword_0.keyword = "netflix"]; havings: []; superlative: []; blanks: 2
TOT: 0.9044929918959371; NL: 0.9044929918959371; NL+AG: 0.9685548245020893; NL+QF: 0.9044929918959371; rels: []; projs: [producer_0.name]; preds: [tv_series_0.title = "House of Cards",company_0.name = "Netflix"]; havings: []; superlative: []; blanks: 1
TOT: 0.9044929918959371; NL: 0.9044929918959371; NL+AG: 0.9685548245020893; NL+QF: 0.9044929918959371; rels: []; projs: [producer_0.name]; preds: [tv_series_0.title = "House of Cards",keyword_0.keyword = "netflix"]; havings: []; superlative: []; blanks: 1
TOT: 0.8979007600118484; NL: 0.8979007600118484; NL+AG: 0.9685548245020893; NL+QF: 0.8979007600118484; rels: []; projs: [producer_0.name]; preds: [tv_series_0.title = "House of Cards",company_0.name = "Netflix"]; havings: []; superlative: []; blanks: 1
TOT: 0.8979007600118484; NL: 0.8979007600118484; NL+AG: 0.9685548245020893; NL+QF: 0.8979007600118484; rels: []; projs: [producer_0.name]; preds: [tv_series_0.title = "House of Cards",keyword_0.keyword = "netflix"]; havings: []; superlative: []; blanks: 1

===========
RESULTS
===========
TOT: 0.8470673452419681; TR: 0.9294677786067335; QF: 0.0; select director_0.name from directed_by as directed_by_0, director as director_0, keyword as keyword_0, tags as tags_0, tv_series as tv_series_0 where keyword_0.keyword = "netflix" and tv_series_0.title = "House of Cards" and directed_by_0.did = director_0.did and directed_by_0.msid = tv_series_0.sid and keyword_0.id = tags_0.kid and tags_0.msid = tv_series_0.sid
TOT: 0.8470673452419681; TR: 0.9294677786067335; QF: 0.0; select director_0.name from company as company_0, copyright as copyright_0, directed_by as directed_by_0, director as director_0, tv_series as tv_series_0 where company_0.name = "Netflix" and tv_series_0.title = "House of Cards" and company_0.id = copyright_0.cid and copyright_0.msid = tv_series_0.sid and directed_by_0.did = director_0.did and directed_by_0.msid = tv_series_0.sid
TOT: 0.8382380821244; TR: 0.9294677786067335; QF: 0.0; select director_0.name from directed_by as directed_by_0, director as director_0, keyword as keyword_0, movie as movie_0, tags as tags_0, tags as tags_1, tv_series as tv_series_0 where keyword_0.keyword = "netflix" and tv_series_0.title = "House of Cards" and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and keyword_0.id = tags_0.kid and keyword_0.id = tags_1.kid and movie_0.mid = tags_0.msid and tags_1.msid = tv_series_0.sid
TOT: 0.8382380821244; TR: 0.9294677786067335; QF: 0.0; select director_0.name from directed_by as directed_by_0, directed_by as directed_by_1, director as director_0, keyword as keyword_0, movie as movie_0, tags as tags_0, tv_series as tv_series_0 where keyword_0.keyword = "netflix" and tv_series_0.title = "House of Cards" and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and directed_by_1.did = director_0.did and directed_by_1.msid = tv_series_0.sid and keyword_0.id = tags_0.kid and movie_0.mid = tags_0.msid
TOT: 0.8382380821244; TR: 0.9294677786067335; QF: 0.0; select director_0.name from company as company_0, copyright as copyright_0, copyright as copyright_1, directed_by as directed_by_0, director as director_0, movie as movie_0, tv_series as tv_series_0 where company_0.name = "Netflix" and tv_series_0.title = "House of Cards" and company_0.id = copyright_0.cid and company_0.id = copyright_1.cid and copyright_0.msid = movie_0.mid and copyright_1.msid = tv_series_0.sid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid
TOT: 0.8382380821244; TR: 0.9294677786067335; QF: 0.0; select director_0.name from company as company_0, copyright as copyright_0, directed_by as directed_by_0, directed_by as directed_by_1, director as director_0, movie as movie_0, tv_series as tv_series_0 where company_0.name = "Netflix" and tv_series_0.title = "House of Cards" and company_0.id = copyright_0.cid and copyright_0.msid = movie_0.mid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and directed_by_1.did = director_0.did and directed_by_1.msid = tv_series_0.sid
TOT: 0.8258387765377913; TR: 0.9044929918959371; QF: 0.0; select producer_0.name from company as company_0, copyright as copyright_0, made_by as made_by_0, producer as producer_0, tv_series as tv_series_0 where company_0.name = "Netflix" and tv_series_0.title = "House of Cards" and company_0.id = copyright_0.cid and copyright_0.msid = tv_series_0.sid and made_by_0.msid = tv_series_0.sid and made_by_0.pid = producer_0.pid
TOT: 0.8258387765377913; TR: 0.9044929918959371; QF: 0.0; select producer_0.name from keyword as keyword_0, made_by as made_by_0, producer as producer_0, tags as tags_0, tv_series as tv_series_0 where keyword_0.keyword = "netflix" and tv_series_0.title = "House of Cards" and keyword_0.id = tags_0.kid and made_by_0.msid = tv_series_0.sid and made_by_0.pid = producer_0.pid and tags_0.msid = tv_series_0.sid
TOT: 0.8170095134202231; TR: 0.9044929918959371; QF: 0.0; select producer_0.name from company as company_0, copyright as copyright_0, made_by as made_by_0, made_by as made_by_1, movie as movie_0, producer as producer_0, tv_series as tv_series_0 where company_0.name = "Netflix" and tv_series_0.title = "House of Cards" and company_0.id = copyright_0.cid and copyright_0.msid = movie_0.mid and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid and made_by_1.msid = tv_series_0.sid and made_by_1.pid = producer_0.pid
TOT: 0.8170095134202231; TR: 0.9044929918959371; QF: 0.0; select producer_0.name from keyword as keyword_0, made_by as made_by_0, made_by as made_by_1, movie as movie_0, producer as producer_0, tags as tags_0, tv_series as tv_series_0 where keyword_0.keyword = "netflix" and tv_series_0.title = "House of Cards" and keyword_0.id = tags_0.kid and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid and made_by_1.msid = tv_series_0.sid and made_by_1.pid = producer_0.pid and movie_0.mid = tags_0.msid


03:55  INFO: ================
03:55  INFO: QUERY 98: How many movies about Iraq war were produced in 2015?
03:55  INFO: ================
1095. ROOT: ROOT; NA; ; (0) 
1096. produced: NT; NA; ; (0) made_by(0.74):| directed_by(0.69):| producer.name(0.68):| producer(0.68):| cast.role(0.63):| cast(0.63):| written_by(0.63):| 
1098. How many: CMT; count; ; (0) 
1099. movies: NT; NA; ; (0) movie.title(1.0):| movie(1.0):| cast.role(0.95):Movie; Movie F; Movie AD; | company.name(0.95):Movies; Movie; Movie Movie; | tv_series.title(0.84):Movies, Movies, Movi; Movie Mob; Moon Movies; | keyword.keyword(0.83):movie-in-movie; movies-about-movies; b-movie; | actor.name(0.76):| 
1100. war: VTTEXT; NA; ; (0) movie.title(0.95):Wars; Wars; Hardware Wars; | tv_series.title(0.95):War; Car Wars; War Walks; | actor.name(0.95):War; War; War; | genre.genre(0.95):War; War; Documentary; | producer.name(0.95):War; Johnny Star Wars; Vivian War; | company.name(0.95):War; War on Want; NWA War Zone; | writer.name(0.95):War; Johnny Star Wars; Men Of War; | 
1102. Iraq: VTTEXT; NA; ; (0) movie.title(1.0):Iraq; Iraq; Ski Iraq; | director.nationality(1.0):Iraq; Iraq; Iraq; | actor.nationality(1.0):Iraq; Iraq; Iraq; | producer.nationality(1.0):Iraq; Iraq; Iraq; | writer.nationality(1.0):Iraq; Iraq; Iraq; | cast.role(0.8):Ira - Iraq; Iraq Vet; Iraq Veteran; | keyword.keyword(0.72):iraq-iran-war; basra-iraq; hatra-iraq; | 
1104. 2015: VTNUM; NA; ; (0) movie.release_year(1.0):2015; 2015; 2015; | tv_series.release_year(1.0):2015; 2015; 2015; | 
How, WRB
many, JJ
movies, NNS
about, IN
Iraq, NNP
war, NN
were, VBD
produced, VBN
in, IN
2015, CD
advmod(many-2, How-1)
dep(produced-8, many-2)
nsubjpass(produced-8, movies-3)
case(war-6, about-4)
compound(war-6, Iraq-5)
nmod(movies-3, war-6)
auxpass(produced-8, were-7)
root(ROOT-0, produced-8)
case(2015-10, in-9)
nmod(produced-8, 2015-10)

PARSE TREE:(1095) ROOT ROOT
    (1098) How many CMT
        (1099) movies NT
            (1100) war VTTEXT
                (1102) Iraq VTTEXT
            (1096) produced NT
                (1104) 2015 VTNUM


===========
TRANSLATIONS
===========
TOT: 0.9080868618771001; NL: 0.9080868618771001; NL+AG: 0.9668624566648176; NL+QF: 0.9080868618771001; rels: []; projs: [count(distinct(movie_0.title))]; preds: [genre_0.genre = "War",movie_0.title = "Iraq",movie_0.release_year = 2015]; havings: []; superlative: []; blanks: 1
TOT: 0.9080868618771001; NL: 0.9080868618771001; NL+AG: 0.9668624566648176; NL+QF: 0.9080868618771001; rels: []; projs: [count(distinct(movie_0.title))]; preds: [genre_0.genre = "War",movie_0.title = "Iraq",tv_series_0.release_year = 2015]; havings: []; superlative: []; blanks: 1
TOT: 0.9080868618771001; NL: 0.9080868618771001; NL+AG: 0.9668624566648176; NL+QF: 0.9080868618771001; rels: []; projs: [count(distinct(movie_0.title))]; preds: [genre_0.genre = "War",director_0.nationality = "Iraq",movie_0.release_year = 2015]; havings: []; superlative: []; blanks: 1
TOT: 0.9080868618771001; NL: 0.9080868618771001; NL+AG: 0.9668624566648176; NL+QF: 0.9080868618771001; rels: []; projs: [count(distinct(movie_0.title))]; preds: [genre_0.genre = "War",director_0.nationality = "Iraq",tv_series_0.release_year = 2015]; havings: []; superlative: []; blanks: 1
TOT: 0.9080868618771001; NL: 0.9080868618771001; NL+AG: 0.9668624566648176; NL+QF: 0.9080868618771001; rels: []; projs: [count(distinct(movie_0.title))]; preds: [genre_0.genre = "War",actor_0.nationality = "Iraq",movie_0.release_year = 2015]; havings: []; superlative: []; blanks: 1
TOT: 0.9080868618771001; NL: 0.9080868618771001; NL+AG: 0.9668624566648176; NL+QF: 0.9080868618771001; rels: []; projs: [count(distinct(movie_0.title))]; preds: [genre_0.genre = "War",actor_0.nationality = "Iraq",tv_series_0.release_year = 2015]; havings: []; superlative: []; blanks: 1
TOT: 0.9080868618771001; NL: 0.9080868618771001; NL+AG: 0.9668624566648176; NL+QF: 0.9080868618771001; rels: []; projs: [count(distinct(movie_0.title))]; preds: [genre_0.genre = "War",producer_0.nationality = "Iraq",movie_0.release_year = 2015]; havings: []; superlative: []; blanks: 1
TOT: 0.9080868618771001; NL: 0.9080868618771001; NL+AG: 0.9668624566648176; NL+QF: 0.9080868618771001; rels: []; projs: [count(distinct(movie_0.title))]; preds: [genre_0.genre = "War",producer_0.nationality = "Iraq",tv_series_0.release_year = 2015]; havings: []; superlative: []; blanks: 1
TOT: 0.9080868618771001; NL: 0.9080868618771001; NL+AG: 0.9668624566648176; NL+QF: 0.9080868618771001; rels: []; projs: [count(distinct(movie_0.title))]; preds: [genre_0.genre = "War",writer_0.nationality = "Iraq",movie_0.release_year = 2015]; havings: []; superlative: []; blanks: 1
TOT: 0.9080868618771001; NL: 0.9080868618771001; NL+AG: 0.9668624566648176; NL+QF: 0.9080868618771001; rels: []; projs: [count(distinct(movie_0.title))]; preds: [genre_0.genre = "War",writer_0.nationality = "Iraq",tv_series_0.release_year = 2015]; havings: []; superlative: []; blanks: 1
TOT: 0.8957571279501789; NL: 0.8957571279501789; NL+AG: 0.9556911764705882; NL+QF: 0.8957571279501789; rels: []; projs: [count(distinct(movie_0.title))]; preds: [genre_0.genre = "War",movie_0.title = "Iraq"]; havings: [count(distinct(producer_0.name)) = 2015]; superlative: []; blanks: 0
TOT: 0.8957571279501789; NL: 0.8957571279501789; NL+AG: 0.9556911764705882; NL+QF: 0.8957571279501789; rels: []; projs: [count(distinct(movie_0.title))]; preds: [genre_0.genre = "War",director_0.nationality = "Iraq"]; havings: [count(distinct(producer_0.name)) = 2015]; superlative: []; blanks: 0
TOT: 0.8957571279501789; NL: 0.8957571279501789; NL+AG: 0.9556911764705882; NL+QF: 0.8957571279501789; rels: []; projs: [count(distinct(movie_0.title))]; preds: [genre_0.genre = "War",actor_0.nationality = "Iraq"]; havings: [count(distinct(producer_0.name)) = 2015]; superlative: []; blanks: 0
TOT: 0.8957571279501789; NL: 0.8957571279501789; NL+AG: 0.9556911764705882; NL+QF: 0.8957571279501789; rels: []; projs: [count(distinct(movie_0.title))]; preds: [genre_0.genre = "War",producer_0.nationality = "Iraq"]; havings: [count(distinct(producer_0.name)) = 2015]; superlative: []; blanks: 0
TOT: 0.8957571279501789; NL: 0.8957571279501789; NL+AG: 0.9556911764705882; NL+QF: 0.8957571279501789; rels: []; projs: [count(distinct(movie_0.title))]; preds: [genre_0.genre = "War",writer_0.nationality = "Iraq"]; havings: [count(distinct(producer_0.name)) = 2015]; superlative: []; blanks: 0

===========
RESULTS
===========
TOT: 0.8288935660217798; TR: 0.9080868618771001; QF: 0.0; select count(distinct(movie_0.title)) from classification as classification_0, directed_by as directed_by_0, director as director_0, genre as genre_0, movie as movie_0 where director_0.nationality = "Iraq" and genre_0.genre = "War" and movie_0.release_year = 2015 and classification_0.gid = genre_0.gid and classification_0.msid = movie_0.mid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid
TOT: 0.8288935660217798; TR: 0.9080868618771001; QF: 0.0; select count(distinct(movie_0.title)) from classification as classification_0, genre as genre_0, made_by as made_by_0, movie as movie_0, producer as producer_0 where genre_0.genre = "War" and movie_0.release_year = 2015 and producer_0.nationality = "Iraq" and classification_0.gid = genre_0.gid and classification_0.msid = movie_0.mid and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid
TOT: 0.8288935660217798; TR: 0.9080868618771001; QF: 0.0; select count(distinct(movie_0.title)) from classification as classification_0, genre as genre_0, movie as movie_0, writer as writer_0, written_by as written_by_0 where genre_0.genre = "War" and movie_0.release_year = 2015 and writer_0.nationality = "Iraq" and classification_0.gid = genre_0.gid and classification_0.msid = movie_0.mid and movie_0.mid = written_by_0.msid and writer_0.wid = written_by_0.wid
TOT: 0.8288935660217798; TR: 0.9080868618771001; QF: 0.0; select count(distinct(movie_0.title)) from classification as classification_0, classification as classification_1, genre as genre_0, movie as movie_0, movie as movie_1 where genre_0.genre = "War" and movie_0.release_year = 2015 and movie_1.title = "Iraq" and classification_0.gid = genre_0.gid and classification_0.msid = movie_0.mid and classification_1.gid = genre_0.gid and classification_1.msid = movie_1.mid
TOT: 0.8288935660217798; TR: 0.9080868618771001; QF: 0.0; select count(distinct(movie_0.title)) from actor as actor_0, cast as cast_0, classification as classification_0, genre as genre_0, movie as movie_0 where actor_0.nationality = "Iraq" and genre_0.genre = "War" and movie_0.release_year = 2015 and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and classification_0.gid = genre_0.gid and classification_0.msid = movie_0.mid
TOT: 0.8200643029042116; TR: 0.9080868618771001; QF: 0.0; select count(distinct(movie_0.title)) from actor as actor_0, cast as cast_0, classification as classification_0, classification as classification_1, genre as genre_0, movie as movie_0, tv_series as tv_series_0 where actor_0.nationality = "Iraq" and genre_0.genre = "War" and tv_series_0.release_year = 2015 and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and classification_0.gid = genre_0.gid and classification_0.msid = movie_0.mid and classification_1.gid = genre_0.gid and classification_1.msid = tv_series_0.sid
TOT: 0.8200643029042116; TR: 0.9080868618771001; QF: 0.0; select count(distinct(movie_0.title)) from classification as classification_0, classification as classification_1, genre as genre_0, made_by as made_by_0, movie as movie_0, producer as producer_0, tv_series as tv_series_0 where genre_0.genre = "War" and movie_0.release_year = 2015 and producer_0.nationality = "Iraq" and classification_0.gid = genre_0.gid and classification_0.msid = movie_0.mid and classification_1.gid = genre_0.gid and classification_1.msid = tv_series_0.sid and made_by_0.msid = tv_series_0.sid and made_by_0.pid = producer_0.pid
TOT: 0.8200643029042116; TR: 0.9080868618771001; QF: 0.0; select count(distinct(movie_0.title)) from classification as classification_0, classification as classification_1, genre as genre_0, made_by as made_by_0, movie as movie_0, producer as producer_0, tv_series as tv_series_0 where genre_0.genre = "War" and producer_0.nationality = "Iraq" and tv_series_0.release_year = 2015 and classification_0.gid = genre_0.gid and classification_0.msid = movie_0.mid and classification_1.gid = genre_0.gid and classification_1.msid = tv_series_0.sid and made_by_0.msid = tv_series_0.sid and made_by_0.pid = producer_0.pid
TOT: 0.8200643029042116; TR: 0.9080868618771001; QF: 0.0; select count(distinct(movie_0.title)) from actor as actor_0, cast as cast_0, cast as cast_1, classification as classification_0, genre as genre_0, movie as movie_0, movie as movie_1 where genre_0.genre = "War" and movie_0.release_year = 2015 and movie_1.title = "Iraq" and actor_0.aid = cast_0.aid and actor_0.aid = cast_1.aid and cast_0.msid = movie_0.mid and cast_1.msid = movie_1.mid and classification_0.gid = genre_0.gid and classification_0.msid = movie_0.mid
TOT: 0.8200643029042116; TR: 0.9080868618771001; QF: 0.0; select count(distinct(movie_1.title)) from actor as actor_0, cast as cast_0, cast as cast_1, classification as classification_0, genre as genre_0, movie as movie_0, movie as movie_1 where genre_0.genre = "War" and movie_0.release_year = 2015 and movie_0.title = "Iraq" and actor_0.aid = cast_0.aid and actor_0.aid = cast_1.aid and cast_0.msid = movie_0.mid and cast_1.msid = movie_1.mid and classification_0.gid = genre_0.gid and classification_0.msid = movie_0.mid


03:58  INFO: ================
03:58  INFO: QUERY 90: How many movies were produced in the year 2012?
03:58  INFO: ================
04:00  INFO: ================
04:00  INFO: QUERY 119: What is the maximum number of movies in which "Brad Pitt" act in a given year?
04:00  INFO: ================
1118. ROOT: ROOT; NA; ; (0) 
1119. What: CMT; NA; ; (0) 
1121. number of: FT; count; ; (0) 
1123. maximum: FT; max; ; (0) 
1124. movies: NT; NA; ; (0) movie.title(1.0):| movie(1.0):| cast.role(0.95):Movie; Movie F; Movie AD; | company.name(0.95):Movies; Movie; Movie Movie; | tv_series.title(0.84):Movies, Movies, Movi; Movie Mob; Moon Movies; | keyword.keyword(0.83):movie-in-movie; movies-about-movies; b-movie; | actor.name(0.76):| 
1126. act: NT; NA; ; (0) movie.release_year(0.63):| tv_series.release_year(0.63):| actor.name(0.62):| actor(0.62):| genre.genre(0.62):| genre(0.62):| made_by(0.61):| 
1129. Brad Pitt: VTTEXT; NA; ; (0) actor.name(1.0):Brad Pitt; Brad Pitt; bRad sPitt; | cast.role(1.0):Brad Pitt'; Brad Pitt'; Brad Pitt #1; | producer.name(1.0):Brad Pitt; Brad Pitt; Mad Pitt; | director.name(0.78):Brad Pruitt; Brad Pruitt; Brad Witty; | writer.name(0.78):Brad Pruitt; Brad Pruitt; Brad Witt; | movie.title(0.72):Brad Pitt Video Port; Brad Pitt Video Port; Brad; | actor.birth_city(0.61):Brad; Brad; Pitt Meadows; | 
1130. year: NT; NA; ; (0) movie.release_year(1.0):| director.birth_year(1.0):| tv_series.release_year(1.0):| actor.birth_year(1.0):| producer.birth_year(1.0):| writer.birth_year(1.0):| movie.title(0.95):Year; Years; Years; | 
1133. given: NT; NA; ; (0) made_by(0.8):| directed_by(0.68):| written_by(0.67):| cast.role(0.66):| cast(0.66):| movie.release_year(0.59):| tv_series.release_year(0.59):| 
What, WP
is, VBZ
the, DT
maximum, JJ
number, NN
of, IN
movies, NNS
in, IN
which, WDT
Brad Pitt, NNP
act, VBP
in, IN
a, DT
given, VBN
year, NN
root(ROOT-0, What-1)
cop(What-1, is-2)
det(number-5, the-3)
amod(number-5, maximum-4)
nsubj(What-1, number-5)
case(movies-7, of-6)
nmod(number-5, movies-7)
case(which-9, in-8)
nmod(act-11, which-9)
nsubj(act-11, Brad Pitt-10)
acl:relcl(movies-7, act-11)
case(year-15, in-12)
det(year-15, a-13)
amod(year-15, given-14)
nmod(act-11, year-15)

PARSE TREE:(1118) ROOT ROOT
    (1119) What CMT
        (1121) number of FT
            (1123) maximum FT
            (1124) movies NT
                (1126) act NT
                    (1129) Brad Pitt VTTEXT
                    (1130) year NT
                        (1133) given NT


===========
TRANSLATIONS
===========
TOT: 0.7717313085512446; NL: 0.7717313085512446; NL+AG: 0.9323354200596522; NL+QF: 0.7717313085512446; rels: []; projs: [movie_0.release_year]; preds: [actor_0.name = "Brad Pitt"]; havings: []; superlative: [count(distinct(movie_0.title)) desc limit 1]; blanks: 2
TOT: 0.7717313085512446; NL: 0.7717313085512446; NL+AG: 0.9323354200596522; NL+QF: 0.7717313085512446; rels: []; projs: [director_0.birth_year]; preds: [actor_0.name = "Brad Pitt"]; havings: []; superlative: [count(distinct(movie_0.title)) desc limit 1]; blanks: 2
TOT: 0.7717313085512446; NL: 0.7717313085512446; NL+AG: 0.9323354200596522; NL+QF: 0.7717313085512446; rels: []; projs: [tv_series_0.release_year]; preds: [actor_0.name = "Brad Pitt"]; havings: []; superlative: [count(distinct(movie_0.title)) desc limit 1]; blanks: 2
TOT: 0.7717313085512446; NL: 0.7717313085512446; NL+AG: 0.9323354200596522; NL+QF: 0.7717313085512446; rels: []; projs: [actor_0.birth_year]; preds: [actor_0.name = "Brad Pitt"]; havings: []; superlative: [count(distinct(movie_0.title)) desc limit 1]; blanks: 2
TOT: 0.7717313085512446; NL: 0.7717313085512446; NL+AG: 0.9323354200596522; NL+QF: 0.7717313085512446; rels: []; projs: [producer_0.birth_year]; preds: [actor_0.name = "Brad Pitt"]; havings: []; superlative: [count(distinct(movie_0.title)) desc limit 1]; blanks: 2
TOT: 0.7717313085512446; NL: 0.7717313085512446; NL+AG: 0.9323354200596522; NL+QF: 0.7717313085512446; rels: []; projs: [writer_0.birth_year]; preds: [actor_0.name = "Brad Pitt"]; havings: []; superlative: [count(distinct(movie_0.title)) desc limit 1]; blanks: 2
TOT: 0.7717313085512446; NL: 0.7717313085512446; NL+AG: 0.9323354200596522; NL+QF: 0.7717313085512446; rels: []; projs: [movie_0.release_year]; preds: [cast_0.role = "Brad Pitt'"]; havings: []; superlative: [count(distinct(movie_0.title)) desc limit 1]; blanks: 2
TOT: 0.7717313085512446; NL: 0.7717313085512446; NL+AG: 0.9323354200596522; NL+QF: 0.7717313085512446; rels: []; projs: [director_0.birth_year]; preds: [cast_0.role = "Brad Pitt'"]; havings: []; superlative: [count(distinct(movie_0.title)) desc limit 1]; blanks: 2
TOT: 0.7717313085512446; NL: 0.7717313085512446; NL+AG: 0.9323354200596522; NL+QF: 0.7717313085512446; rels: []; projs: [tv_series_0.release_year]; preds: [cast_0.role = "Brad Pitt'"]; havings: []; superlative: [count(distinct(movie_0.title)) desc limit 1]; blanks: 2
TOT: 0.7717313085512446; NL: 0.7717313085512446; NL+AG: 0.9323354200596522; NL+QF: 0.7717313085512446; rels: []; projs: [actor_0.birth_year]; preds: [cast_0.role = "Brad Pitt'"]; havings: []; superlative: [count(distinct(movie_0.title)) desc limit 1]; blanks: 2
TOT: 0.7717313085512446; NL: 0.7717313085512446; NL+AG: 0.9323354200596522; NL+QF: 0.7717313085512446; rels: []; projs: [producer_0.birth_year]; preds: [cast_0.role = "Brad Pitt'"]; havings: []; superlative: [count(distinct(movie_0.title)) desc limit 1]; blanks: 2
TOT: 0.7717313085512446; NL: 0.7717313085512446; NL+AG: 0.9323354200596522; NL+QF: 0.7717313085512446; rels: []; projs: [writer_0.birth_year]; preds: [cast_0.role = "Brad Pitt'"]; havings: []; superlative: [count(distinct(movie_0.title)) desc limit 1]; blanks: 2
TOT: 0.7717313085512446; NL: 0.7717313085512446; NL+AG: 0.9323354200596522; NL+QF: 0.7717313085512446; rels: []; projs: [movie_0.release_year]; preds: [producer_0.name = "Brad Pitt"]; havings: []; superlative: [count(distinct(movie_0.title)) desc limit 1]; blanks: 2
TOT: 0.7717313085512446; NL: 0.7717313085512446; NL+AG: 0.9323354200596522; NL+QF: 0.7717313085512446; rels: []; projs: [director_0.birth_year]; preds: [producer_0.name = "Brad Pitt"]; havings: []; superlative: [count(distinct(movie_0.title)) desc limit 1]; blanks: 2
TOT: 0.7717313085512446; NL: 0.7717313085512446; NL+AG: 0.9323354200596522; NL+QF: 0.7717313085512446; rels: []; projs: [tv_series_0.release_year]; preds: [producer_0.name = "Brad Pitt"]; havings: []; superlative: [count(distinct(movie_0.title)) desc limit 1]; blanks: 2
TOT: 0.7717313085512446; NL: 0.7717313085512446; NL+AG: 0.9323354200596522; NL+QF: 0.7717313085512446; rels: []; projs: [actor_0.birth_year]; preds: [producer_0.name = "Brad Pitt"]; havings: []; superlative: [count(distinct(movie_0.title)) desc limit 1]; blanks: 2
TOT: 0.7717313085512446; NL: 0.7717313085512446; NL+AG: 0.9323354200596522; NL+QF: 0.7717313085512446; rels: []; projs: [producer_0.birth_year]; preds: [producer_0.name = "Brad Pitt"]; havings: []; superlative: [count(distinct(movie_0.title)) desc limit 1]; blanks: 2
TOT: 0.7717313085512446; NL: 0.7717313085512446; NL+AG: 0.9323354200596522; NL+QF: 0.7717313085512446; rels: []; projs: [writer_0.birth_year]; preds: [producer_0.name = "Brad Pitt"]; havings: []; superlative: [count(distinct(movie_0.title)) desc limit 1]; blanks: 2

===========
RESULTS
===========
TOT: 0.7461277268698427; TR: 0.7717313085512446; QF: 0.0; select movie_0.release_year from cast as cast_0, movie as movie_0 where cast_0.role = "Brad Pitt'" and cast_0.msid = movie_0.mid group by movie_0.release_year order by count(distinct(movie_0.title)) desc limit 1
TOT: 0.7295837715902352; TR: 0.7717313085512446; QF: 0.0; select movie_0.release_year from made_by as made_by_0, movie as movie_0, producer as producer_0 where producer_0.name = "Brad Pitt" and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid group by movie_0.release_year order by count(distinct(movie_0.title)) desc limit 1
TOT: 0.7295837715902352; TR: 0.7717313085512446; QF: 0.0; select producer_0.birth_year from made_by as made_by_0, movie as movie_0, producer as producer_0 where producer_0.name = "Brad Pitt" and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid group by producer_0.birth_year order by count(distinct(movie_0.title)) desc limit 1
TOT: 0.7295837715902352; TR: 0.7717313085512446; QF: 0.0; select movie_0.release_year from actor as actor_0, cast as cast_0, movie as movie_0 where actor_0.name = "Brad Pitt" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid group by movie_0.release_year order by count(distinct(movie_0.title)) desc limit 1
TOT: 0.7295837715902352; TR: 0.7717313085512446; QF: 0.0; select actor_0.birth_year from actor as actor_0, cast as cast_0, movie as movie_0 where actor_0.name = "Brad Pitt" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid group by actor_0.birth_year order by count(distinct(movie_0.title)) desc limit 1
TOT: 0.7295837715902352; TR: 0.7717313085512446; QF: 0.0; select actor_0.birth_year from actor as actor_0, cast as cast_0, movie as movie_0 where cast_0.role = "Brad Pitt'" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid group by actor_0.birth_year order by count(distinct(movie_0.title)) desc limit 1
TOT: 0.7197216122685579; TR: 0.7717313085512446; QF: 0.0; select producer_0.birth_year from cast as cast_0, made_by as made_by_0, movie as movie_0, producer as producer_0 where cast_0.role = "Brad Pitt'" and cast_0.msid = movie_0.mid and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid group by producer_0.birth_year order by count(distinct(movie_0.title)) desc limit 1
TOT: 0.7197216122685579; TR: 0.7717313085512446; QF: 0.0; select director_0.birth_year from cast as cast_0, directed_by as directed_by_0, director as director_0, movie as movie_0 where cast_0.role = "Brad Pitt'" and cast_0.msid = movie_0.mid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid group by director_0.birth_year order by count(distinct(movie_0.title)) desc limit 1
TOT: 0.7197216122685579; TR: 0.7717313085512446; QF: 0.0; select writer_0.birth_year from cast as cast_0, movie as movie_0, writer as writer_0, written_by as written_by_0 where cast_0.role = "Brad Pitt'" and cast_0.msid = movie_0.mid and movie_0.mid = written_by_0.msid and writer_0.wid = written_by_0.wid group by writer_0.birth_year order by count(distinct(movie_0.title)) desc limit 1
TOT: 0.7129913456948026; TR: 0.7717313085512446; QF: 0.0; select writer_0.birth_year from actor as actor_0, cast as cast_0, movie as movie_0, writer as writer_0, written_by as written_by_0 where actor_0.name = "Brad Pitt" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and movie_0.mid = written_by_0.msid and writer_0.wid = written_by_0.wid group by writer_0.birth_year order by count(distinct(movie_0.title)) desc limit 1


04:02  INFO: ================
04:02  INFO: QUERY 126: Find all movies featuring "Jason Robards" and "Woody Strode"
04:02  INFO: ================
04:04  INFO: ================
04:04  INFO: QUERY 21: What is the genre of the movie "Jurassic Park"?
04:04  INFO: ================
04:06  INFO: ================
04:06  INFO: QUERY 124: Find the actors who played in the latest movie by "Quentin Tarantino"
04:06  INFO: ================
1154. ROOT: ROOT; NA; ; (0) 
1155. Find: CMT; NA; ; (0) 
1156. actors: NT; NA; ; (0) actor.name(1.0):| actor(1.0):| movie.title(0.95):Actors; Actors; Actors; | tv_series.title(0.95):Actors; Actor; The Actor Factor; | cast.role(0.95):Actors; Actors; Actors; | keyword.keyword(0.95):actors; actor-director; no-actors; | company.name(0.79):For Actors by Actors; Actors Loft; Actors Pool; | 
1158. played: NT; NA; ; (0) tv_series.num_of_seasons(0.67):| cast.role(0.66):| directed_by(0.64):| actor.name(0.63):| actor(0.63):| cast(0.63):| movie.title_aka(0.63):| 
1160. movie: NT; NA; ; (0) movie.title(1.0):| movie(1.0):| cast.role(0.95):Movie; Movie F; Movie AD; | company.name(0.95):Movie; Movies; Movie Movie; | keyword.keyword(0.83):movie-in-movie; b-movie; z-movie; | actor.name(0.76):| actor(0.76):| 
1163. latest: FT; max; ; (0) 
1164. Quentin Tarantino: VTTEXT; NA; ; (0) director.name(1.0):Quentin Tarantino; Quentin Tarantino; Quentin Tarrantino; | actor.name(1.0):Quentin Tarantino; Quentin Tarantino; Quentin Tarrantino; | producer.name(1.0):Quentin Tarantino; Quentin Tarantino; Quentin Tarrantino; | writer.name(1.0):Quentin Tarantino; Quentin Tarantino; Quentin Tarrantino; | cast.role(0.85):Quentin Tarrantino '; Quentin Tarrantino '; Quentin Tarrantino '; | movie.title(0.84):21 Years: Quentin Ta; 21 Years: Quentin Ta; Quentin Tarantino's ; | writer.birth_city(0.74):San Quentin; San Quentin; Saint-Quentin; | 
Find, VB
the, DT
actors, NNS
who, WP
played, VBD
in, IN
the, DT
latest, JJS
movie, NN
by, IN
Quentin Tarantino, NNP
root(ROOT-0, Find-1)
det(actors-3, the-2)
dobj(Find-1, actors-3)
nsubj(played-5, who-4)
acl:relcl(actors-3, played-5)
case(movie-9, in-6)
det(movie-9, the-7)
amod(movie-9, latest-8)
nmod(played-5, movie-9)
case(Quentin Tarantino-11, by-10)
nmod(played-5, Quentin Tarantino-11)

PARSE TREE:(1154) ROOT ROOT
    (1155) Find CMT
        (1156) actors NT
            (1158) played NT
                (1160) movie NT
                (1164) Quentin Tarantino VTTEXT


===========
TRANSLATIONS
===========
TOT: 0.9174505626104981; NL: 0.9174505626104981; NL+AG: 0.9734002230204892; NL+QF: 0.9174505626104981; rels: []; projs: [actor_0.name]; preds: [director_0.name = "Quentin Tarantino"]; havings: []; superlative: [movie_0.title desc limit 1]; blanks: 1
TOT: 0.9174505626104981; NL: 0.9174505626104981; NL+AG: 0.9734002230204892; NL+QF: 0.9174505626104981; rels: []; projs: [actor_0.name]; preds: [actor_0.name = "Quentin Tarantino"]; havings: []; superlative: [movie_0.title desc limit 1]; blanks: 1
TOT: 0.9174505626104981; NL: 0.9174505626104981; NL+AG: 0.9734002230204892; NL+QF: 0.9174505626104981; rels: []; projs: [actor_0.name]; preds: [producer_0.name = "Quentin Tarantino"]; havings: []; superlative: [movie_0.title desc limit 1]; blanks: 1
TOT: 0.9174505626104981; NL: 0.9174505626104981; NL+AG: 0.9734002230204892; NL+QF: 0.9174505626104981; rels: []; projs: [actor_0.name]; preds: [writer_0.name = "Quentin Tarantino"]; havings: []; superlative: [movie_0.title desc limit 1]; blanks: 1
TOT: 0.8879579826791157; NL: 0.8879579826791157; NL+AG: 0.9557508540140572; NL+QF: 0.8879579826791157; rels: []; projs: [actor_0.name]; preds: [cast_0.role = "Quentin Tarrantino 'esque' Patient"]; havings: []; superlative: [movie_0.title desc limit 1]; blanks: 1
TOT: 0.8862129230052637; NL: 0.8862129230052637; NL+AG: 0.9547774891905295; NL+QF: 0.8862129230052637; rels: []; projs: [actor_0.name]; preds: [movie_0.title = "21 Years: Quentin Tarantino"]; havings: []; superlative: [movie_0.title desc limit 1]; blanks: 1
TOT: 0.8689647470148877; NL: 0.8689647470148877; NL+AG: 0.9512320693408807; NL+QF: 0.8689647470148877; rels: []; projs: [movie_0.title]; preds: [director_0.name = "Quentin Tarantino"]; havings: []; superlative: [movie_0.title desc limit 1]; blanks: 1
TOT: 0.8689647470148877; NL: 0.8689647470148877; NL+AG: 0.9512320693408807; NL+QF: 0.8689647470148877; rels: []; projs: [movie_0.title]; preds: [actor_0.name = "Quentin Tarantino"]; havings: []; superlative: [movie_0.title desc limit 1]; blanks: 1
TOT: 0.8689647470148877; NL: 0.8689647470148877; NL+AG: 0.9512320693408807; NL+QF: 0.8689647470148877; rels: []; projs: [movie_0.title]; preds: [producer_0.name = "Quentin Tarantino"]; havings: []; superlative: [movie_0.title desc limit 1]; blanks: 1
TOT: 0.8689647470148877; NL: 0.8689647470148877; NL+AG: 0.9512320693408807; NL+QF: 0.8689647470148877; rels: []; projs: [movie_0.title]; preds: [writer_0.name = "Quentin Tarantino"]; havings: []; superlative: [movie_0.title desc limit 1]; blanks: 1
TOT: 0.8675415861861546; NL: 0.8675415861861546; NL+AG: 0.9512320693408807; NL+QF: 0.8675415861861546; rels: []; projs: [cast_0.role]; preds: [director_0.name = "Quentin Tarantino"]; havings: []; superlative: [movie_0.title desc limit 1]; blanks: 1
TOT: 0.8675415861861546; NL: 0.8675415861861546; NL+AG: 0.9512320693408807; NL+QF: 0.8675415861861546; rels: []; projs: [cast_0.role]; preds: [actor_0.name = "Quentin Tarantino"]; havings: []; superlative: [movie_0.title desc limit 1]; blanks: 1
TOT: 0.8675415861861546; NL: 0.8675415861861546; NL+AG: 0.9512320693408807; NL+QF: 0.8675415861861546; rels: []; projs: [cast_0.role]; preds: [producer_0.name = "Quentin Tarantino"]; havings: []; superlative: [movie_0.title desc limit 1]; blanks: 1
TOT: 0.8675415861861546; NL: 0.8675415861861546; NL+AG: 0.9512320693408807; NL+QF: 0.8675415861861546; rels: []; projs: [cast_0.role]; preds: [writer_0.name = "Quentin Tarantino"]; havings: []; superlative: [movie_0.title desc limit 1]; blanks: 1
TOT: 0.8675415861861546; NL: 0.8675415861861546; NL+AG: 0.9512320693408807; NL+QF: 0.8675415861861546; rels: []; projs: [cast_0.role]; preds: [director_0.name = "Quentin Tarantino"]; havings: []; superlative: [movie_0.title desc limit 1]; blanks: 1
TOT: 0.8675415861861546; NL: 0.8675415861861546; NL+AG: 0.9512320693408807; NL+QF: 0.8675415861861546; rels: []; projs: [cast_0.role]; preds: [actor_0.name = "Quentin Tarantino"]; havings: []; superlative: [movie_0.title desc limit 1]; blanks: 1
TOT: 0.8675415861861546; NL: 0.8675415861861546; NL+AG: 0.9512320693408807; NL+QF: 0.8675415861861546; rels: []; projs: [cast_0.role]; preds: [producer_0.name = "Quentin Tarantino"]; havings: []; superlative: [movie_0.title desc limit 1]; blanks: 1
TOT: 0.8675415861861546; NL: 0.8675415861861546; NL+AG: 0.9512320693408807; NL+QF: 0.8675415861861546; rels: []; projs: [cast_0.role]; preds: [writer_0.name = "Quentin Tarantino"]; havings: []; superlative: [movie_0.title desc limit 1]; blanks: 1

===========
RESULTS
===========
TOT: 0.8368527116451681; TR: 0.9174505626104981; QF: 0.0; select actor_0.name from actor as actor_0, cast as cast_0, movie as movie_0, writer as writer_0, written_by as written_by_0 where writer_0.name = "Quentin Tarantino" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and movie_0.mid = written_by_0.msid and writer_0.wid = written_by_0.wid order by movie_0.title desc limit 1
TOT: 0.8368527116451681; TR: 0.9174505626104981; QF: 0.0; select actor_0.name from actor as actor_0, cast as cast_0, directed_by as directed_by_0, director as director_0, movie as movie_0 where director_0.name = "Quentin Tarantino" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid order by movie_0.title desc limit 1
TOT: 0.8368527116451681; TR: 0.9174505626104981; QF: 0.0; select actor_0.name from actor as actor_0, cast as cast_0, made_by as made_by_0, movie as movie_0, producer as producer_0 where producer_0.name = "Quentin Tarantino" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid order by movie_0.title desc limit 1
TOT: 0.8368527116451681; TR: 0.9174505626104981; QF: 0.0; select actor_0.name from actor as actor_0, actor as actor_1, cast as cast_0, cast as cast_1, movie as movie_0 where actor_1.name = "Quentin Tarantino" and actor_0.aid = cast_0.aid and actor_1.aid = cast_1.aid and cast_0.msid = movie_0.mid and cast_1.msid = movie_0.mid order by movie_0.title desc limit 1
TOT: 0.8283764445989257; TR: 0.8879579826791157; QF: 0.0; select actor_0.name from actor as actor_0, cast as cast_0, movie as movie_0 where cast_0.role = "Quentin Tarrantino 'esque' Patient" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid order by movie_0.title desc limit 1
TOT: 0.8280234485275999; TR: 0.9174505626104981; QF: 0.0; select actor_0.name from actor as actor_0, cast as cast_0, cast as cast_1, directed_by as directed_by_0, director as director_0, movie as movie_0, tv_series as tv_series_0 where director_0.name = "Quentin Tarantino" and actor_0.aid = cast_0.aid and actor_0.aid = cast_1.aid and cast_0.msid = movie_0.mid and cast_1.msid = tv_series_0.sid and directed_by_0.did = director_0.did and directed_by_0.msid = tv_series_0.sid order by movie_0.title desc limit 1
TOT: 0.8280234485275999; TR: 0.9174505626104981; QF: 0.0; select actor_0.name from actor as actor_0, actor as actor_1, cast as cast_0, cast as cast_1, cast as cast_2, movie as movie_0, tv_series as tv_series_0 where actor_1.name = "Quentin Tarantino" and actor_0.aid = cast_0.aid and actor_0.aid = cast_1.aid and actor_1.aid = cast_2.aid and cast_0.msid = movie_0.mid and cast_1.msid = tv_series_0.sid and cast_2.msid = tv_series_0.sid order by movie_0.title desc limit 1
TOT: 0.8280234485275999; TR: 0.9174505626104981; QF: 0.0; select actor_1.name from actor as actor_0, actor as actor_1, cast as cast_0, cast as cast_1, cast as cast_2, movie as movie_0, tv_series as tv_series_0 where actor_0.name = "Quentin Tarantino" and actor_0.aid = cast_0.aid and actor_0.aid = cast_1.aid and actor_1.aid = cast_2.aid and cast_0.msid = movie_0.mid and cast_1.msid = tv_series_0.sid and cast_2.msid = tv_series_0.sid order by movie_0.title desc limit 1
TOT: 0.8280234485275999; TR: 0.9174505626104981; QF: 0.0; select actor_0.name from actor as actor_0, cast as cast_0, directed_by as directed_by_0, directed_by as directed_by_1, director as director_0, movie as movie_0, tv_series as tv_series_0 where director_0.name = "Quentin Tarantino" and actor_0.aid = cast_0.aid and cast_0.msid = tv_series_0.sid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and directed_by_1.did = director_0.did and directed_by_1.msid = tv_series_0.sid order by movie_0.title desc limit 1
TOT: 0.8280234485275999; TR: 0.9174505626104981; QF: 0.0; select actor_0.name from actor as actor_0, cast as cast_0, movie as movie_0, tv_series as tv_series_0, writer as writer_0, written_by as written_by_0, written_by as written_by_1 where writer_0.name = "Quentin Tarantino" and actor_0.aid = cast_0.aid and cast_0.msid = tv_series_0.sid and movie_0.mid = written_by_0.msid and tv_series_0.sid = written_by_1.msid and writer_0.wid = written_by_0.wid and writer_0.wid = written_by_1.wid order by movie_0.title desc limit 1


04:08  INFO: ================
04:08  INFO: QUERY 125: Find the name and budget of the latest movie by "Quentin Tarantino"
04:08  INFO: ================
1167. ROOT: ROOT; NA; ; (0) 
1168. Find: CMT; NA; ; (0) 
1169. name: VTTEXT; NA; ; (0) movie.title(0.95):Name; Name; Names; | actor.name(0.95):name; No Name; Famous Names; | actor.name(0.81):| director.name(0.79):| tv_series.title(0.79):Same Name; No Names; Name This; | keyword.keyword(0.79):same-name; name-game; naming-names; | writer.name(0.79):| 
1172. budget: NT; NA; ; (0) movie.budget(1.0):| tv_series.budget(1.0):| movie.title(0.95):Budget; Fudget's Budget; No Budget; | tv_series.title(0.95):Budget; Budget TV; No Budget Gourmet; | cast.role(0.95):Budgets; Budgets; Budgets; | keyword.keyword(0.95):budget; in-budget; no-budget; | company.name(0.71):Low Budget; Cero Budget; Budget Movies; | 
1173. movie: NT; NA; ; (0) movie.title(1.0):| movie(1.0):| cast.role(0.95):Movie; Movie F; Movie AD; | company.name(0.95):Movie; Movies; Movie Movie; | keyword.keyword(0.83):movie-in-movie; b-movie; z-movie; | actor.name(0.76):| actor(0.76):| 
1176. latest: FT; max; ; (0) 
1177. Quentin Tarantino: VTTEXT; NA; ; (0) director.name(1.0):Quentin Tarantino; Quentin Tarantino; Quentin Tarrantino; | actor.name(1.0):Quentin Tarantino; Quentin Tarantino; Quentin Tarrantino; | producer.name(1.0):Quentin Tarantino; Quentin Tarantino; Quentin Tarrantino; | writer.name(1.0):Quentin Tarantino; Quentin Tarantino; Quentin Tarrantino; | cast.role(0.85):Quentin Tarrantino '; Quentin Tarrantino '; Quentin Tarrantino '; | movie.title(0.84):21 Years: Quentin Ta; 21 Years: Quentin Ta; Quentin Tarantino's ; | writer.birth_city(0.74):San Quentin; San Quentin; Saint-Quentin; | 
Find, VB
the, DT
name, NN
and, CC
budget, NN
of, IN
the, DT
latest, JJS
movie, NN
by, IN
Quentin Tarantino, NNP
root(ROOT-0, Find-1)
det(name-3, the-2)
dobj(Find-1, name-3)
cc(name-3, and-4)
conj(name-3, budget-5)
case(movie-9, of-6)
det(movie-9, the-7)
amod(movie-9, latest-8)
nmod(name-3, movie-9)
case(Quentin Tarantino-11, by-10)
nmod(Find-1, Quentin Tarantino-11)

PARSE TREE:(1167) ROOT ROOT
    (1168) Find CMT
        (1169) name VTTEXT
            (1173) movie NT
        (1172) budget NT
        (1177) Quentin Tarantino VTTEXT


===========
TRANSLATIONS
===========
TOT: 0.9174505626104981; NL: 0.9174505626104981; NL+AG: 0.9734002230204892; NL+QF: 0.9174505626104981; rels: []; projs: [actor_0.name]; preds: [director_0.name = "Quentin Tarantino"]; havings: []; superlative: [movie_0.title desc limit 1]; blanks: 1
TOT: 0.9174505626104981; NL: 0.9174505626104981; NL+AG: 0.9734002230204892; NL+QF: 0.9174505626104981; rels: []; projs: [actor_0.name]; preds: [actor_0.name = "Quentin Tarantino"]; havings: []; superlative: [movie_0.title desc limit 1]; blanks: 1
TOT: 0.9174505626104981; NL: 0.9174505626104981; NL+AG: 0.9734002230204892; NL+QF: 0.9174505626104981; rels: []; projs: [actor_0.name]; preds: [producer_0.name = "Quentin Tarantino"]; havings: []; superlative: [movie_0.title desc limit 1]; blanks: 1
TOT: 0.9174505626104981; NL: 0.9174505626104981; NL+AG: 0.9734002230204892; NL+QF: 0.9174505626104981; rels: []; projs: [actor_0.name]; preds: [writer_0.name = "Quentin Tarantino"]; havings: []; superlative: [movie_0.title desc limit 1]; blanks: 1
TOT: 0.8879579826791157; NL: 0.8879579826791157; NL+AG: 0.9557508540140572; NL+QF: 0.8879579826791157; rels: []; projs: [actor_0.name]; preds: [cast_0.role = "Quentin Tarrantino 'esque' Patient"]; havings: []; superlative: [movie_0.title desc limit 1]; blanks: 1
TOT: 0.8862129230052637; NL: 0.8862129230052637; NL+AG: 0.9547774891905295; NL+QF: 0.8862129230052637; rels: []; projs: [actor_0.name]; preds: [movie_0.title = "21 Years: Quentin Tarantino"]; havings: []; superlative: [movie_0.title desc limit 1]; blanks: 1
TOT: 0.8787564719717046; NL: 0.8787564719717046; NL+AG: 0.9519165110857386; NL+QF: 0.8787564719717046; rels: []; projs: [actor_0.name]; preds: [director_0.name = "Quentin Tarantino"]; havings: []; superlative: [movie_0.title desc limit 1]; blanks: 1
TOT: 0.8787564719717046; NL: 0.8787564719717046; NL+AG: 0.9519165110857386; NL+QF: 0.8787564719717046; rels: []; projs: [actor_0.name]; preds: [actor_0.name = "Quentin Tarantino"]; havings: []; superlative: [movie_0.title desc limit 1]; blanks: 1
TOT: 0.8787564719717046; NL: 0.8787564719717046; NL+AG: 0.9519165110857386; NL+QF: 0.8787564719717046; rels: []; projs: [actor_0.name]; preds: [producer_0.name = "Quentin Tarantino"]; havings: []; superlative: [movie_0.title desc limit 1]; blanks: 1
TOT: 0.8787564719717046; NL: 0.8787564719717046; NL+AG: 0.9519165110857386; NL+QF: 0.8787564719717046; rels: []; projs: [actor_0.name]; preds: [writer_0.name = "Quentin Tarantino"]; havings: []; superlative: [movie_0.title desc limit 1]; blanks: 1
TOT: 0.875826614971916; NL: 0.875826614971916; NL+AG: 0.9512320693408807; NL+QF: 0.875826614971916; rels: []; projs: [director_0.name]; preds: [director_0.name = "Quentin Tarantino"]; havings: []; superlative: [movie_0.title desc limit 1]; blanks: 1
TOT: 0.875826614971916; NL: 0.875826614971916; NL+AG: 0.9512320693408807; NL+QF: 0.875826614971916; rels: []; projs: [director_0.name]; preds: [actor_0.name = "Quentin Tarantino"]; havings: []; superlative: [movie_0.title desc limit 1]; blanks: 1
TOT: 0.875826614971916; NL: 0.875826614971916; NL+AG: 0.9512320693408807; NL+QF: 0.875826614971916; rels: []; projs: [director_0.name]; preds: [producer_0.name = "Quentin Tarantino"]; havings: []; superlative: [movie_0.title desc limit 1]; blanks: 1
TOT: 0.875826614971916; NL: 0.875826614971916; NL+AG: 0.9512320693408807; NL+QF: 0.875826614971916; rels: []; projs: [director_0.name]; preds: [writer_0.name = "Quentin Tarantino"]; havings: []; superlative: [movie_0.title desc limit 1]; blanks: 1

===========
RESULTS
===========
TOT: 0.8368527116451681; TR: 0.9174505626104981; QF: 0.0; select actor_0.name from actor as actor_0, cast as cast_0, movie as movie_0, writer as writer_0, written_by as written_by_0 where writer_0.name = "Quentin Tarantino" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and movie_0.mid = written_by_0.msid and writer_0.wid = written_by_0.wid order by movie_0.title desc limit 1
TOT: 0.8368527116451681; TR: 0.9174505626104981; QF: 0.0; select actor_0.name from actor as actor_0, cast as cast_0, directed_by as directed_by_0, director as director_0, movie as movie_0 where director_0.name = "Quentin Tarantino" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid order by movie_0.title desc limit 1
TOT: 0.8368527116451681; TR: 0.9174505626104981; QF: 0.0; select actor_0.name from actor as actor_0, cast as cast_0, made_by as made_by_0, movie as movie_0, producer as producer_0 where producer_0.name = "Quentin Tarantino" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid order by movie_0.title desc limit 1
TOT: 0.8368527116451681; TR: 0.9174505626104981; QF: 0.0; select actor_0.name from actor as actor_0, actor as actor_1, cast as cast_0, cast as cast_1, movie as movie_0 where actor_1.name = "Quentin Tarantino" and actor_0.aid = cast_0.aid and actor_1.aid = cast_1.aid and cast_0.msid = movie_0.mid and cast_1.msid = movie_0.mid order by movie_0.title desc limit 1
TOT: 0.8283764445989257; TR: 0.8879579826791157; QF: 0.0; select actor_0.name from actor as actor_0, cast as cast_0, movie as movie_0 where cast_0.role = "Quentin Tarrantino 'esque' Patient" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid order by movie_0.title desc limit 1
TOT: 0.8280234485275999; TR: 0.9174505626104981; QF: 0.0; select actor_0.name from actor as actor_0, cast as cast_0, cast as cast_1, directed_by as directed_by_0, director as director_0, movie as movie_0, tv_series as tv_series_0 where director_0.name = "Quentin Tarantino" and actor_0.aid = cast_0.aid and actor_0.aid = cast_1.aid and cast_0.msid = movie_0.mid and cast_1.msid = tv_series_0.sid and directed_by_0.did = director_0.did and directed_by_0.msid = tv_series_0.sid order by movie_0.title desc limit 1
TOT: 0.8280234485275999; TR: 0.9174505626104981; QF: 0.0; select actor_1.name from actor as actor_0, actor as actor_1, cast as cast_0, cast as cast_1, cast as cast_2, movie as movie_0, tv_series as tv_series_0 where actor_0.name = "Quentin Tarantino" and actor_0.aid = cast_0.aid and actor_0.aid = cast_1.aid and actor_1.aid = cast_2.aid and cast_0.msid = movie_0.mid and cast_1.msid = tv_series_0.sid and cast_2.msid = tv_series_0.sid order by movie_0.title desc limit 1
TOT: 0.8280234485275999; TR: 0.9174505626104981; QF: 0.0; select actor_0.name from actor as actor_0, actor as actor_1, cast as cast_0, cast as cast_1, cast as cast_2, movie as movie_0, tv_series as tv_series_0 where actor_1.name = "Quentin Tarantino" and actor_0.aid = cast_0.aid and actor_0.aid = cast_1.aid and actor_1.aid = cast_2.aid and cast_0.msid = movie_0.mid and cast_1.msid = tv_series_0.sid and cast_2.msid = tv_series_0.sid order by movie_0.title desc limit 1
TOT: 0.8280234485275999; TR: 0.9174505626104981; QF: 0.0; select actor_0.name from actor as actor_0, cast as cast_0, directed_by as directed_by_0, directed_by as directed_by_1, director as director_0, movie as movie_0, tv_series as tv_series_0 where director_0.name = "Quentin Tarantino" and actor_0.aid = cast_0.aid and cast_0.msid = tv_series_0.sid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and directed_by_1.did = director_0.did and directed_by_1.msid = tv_series_0.sid order by movie_0.title desc limit 1
TOT: 0.8280234485275999; TR: 0.9174505626104981; QF: 0.0; select actor_0.name from actor as actor_0, cast as cast_0, movie as movie_0, tv_series as tv_series_0, writer as writer_0, written_by as written_by_0, written_by as written_by_1 where writer_0.name = "Quentin Tarantino" and actor_0.aid = cast_0.aid and cast_0.msid = tv_series_0.sid and movie_0.mid = written_by_0.msid and tv_series_0.sid = written_by_1.msid and writer_0.wid = written_by_0.wid and writer_0.wid = written_by_1.wid order by movie_0.title desc limit 1


04:09  INFO: ================
04:09  INFO: QUERY 18: Find all movies directed by "Steven Spielberg" after 2006
04:09  INFO: ================
1180. ROOT: ROOT; NA; ; (0) 
1181. Find: CMT; NA; ; (0) 
1182. movies: NT; NA; all; (0) movie.title(1.0):| movie(1.0):| cast.role(0.95):Movie; Movie F; Movie AD; | company.name(0.95):Movies; Movie; Movie Movie; | tv_series.title(0.84):Movies, Movies, Movi; Movie Mob; Moon Movies; | keyword.keyword(0.83):movie-in-movie; movies-about-movies; b-movie; | actor.name(0.76):| 
1184. directed: NT; NA; ; (0) directed_by(1.0):| director.name(0.72):| director(0.72):| written_by(0.68):| cast.role(0.67):| cast(0.67):| made_by(0.67):| 
1185. Steven Spielberg: VTTEXT; NA; ; (0) director.name(1.0):Steven Spielberg; Steven Spielberg; Steve Spielberg; | actor.name(1.0):Steven Spielberg; Steve Spielberg; Steven Allan Spielbe; | producer.name(1.0):Steven Spielberg; Steven Spielberg; Steven Spieldberg; | writer.name(1.0):Steven Spielberg; Steven Spielberg; Steve Spielberg; | movie.title(0.88):Dear Steven Spielber; Dear Steven Spielber; Being Steven Spielbe; | cast.role(0.86):Young Steven Spielbe; Young Steven Spielbe; Young Steven Spielbe; | company.name(0.75):Steven Spielberg Fil; Steven Spielberg Fil; Steven S.A.; | 
1187. 2006: VTNUM; NA; ; (0) movie.release_year(1.0):2012; 2014; 2015; | tv_series.release_year(1.0):2014; 2014; 2007; | actor.birth_year(1.0):2011; 2007; 2013; | producer.birth_year(1.0):2007; 2010; | 
1188. after: OT; >; ; (0) 
Find, VB
all, DT
movies, NNS
directed, VBN
by, IN
Steven Spielberg, NNP
after, IN
2006, CD
root(ROOT-0, Find-1)
det(movies-3, all-2)
dobj(Find-1, movies-3)
acl(movies-3, directed-4)
case(Steven Spielberg-6, by-5)
nmod(directed-4, Steven Spielberg-6)
case(2006-8, after-7)
nmod(directed-4, 2006-8)

PARSE TREE:(1180) ROOT ROOT
    (1181) Find CMT
        (1182) movies NT
            (1184) directed NT
                (1185) Steven Spielberg VTTEXT
                (1187) 2006 VTNUM
                    (1188) after OT


===========
TRANSLATIONS
===========
TOT: 0.8979007600118484; NL: 0.8979007600118484; NL+AG: 0.9687724970127387; NL+QF: 0.8979007600118484; rels: []; projs: [movie_0.title]; preds: [director_0.name = "Steven Spielberg",movie_0.release_year > 2006]; havings: []; superlative: []; blanks: 1
TOT: 0.8979007600118484; NL: 0.8979007600118484; NL+AG: 0.9687724970127387; NL+QF: 0.8979007600118484; rels: []; projs: [movie_0.title]; preds: [director_0.name = "Steven Spielberg",tv_series_0.release_year > 2006]; havings: []; superlative: []; blanks: 1
TOT: 0.8979007600118484; NL: 0.8979007600118484; NL+AG: 0.9687724970127387; NL+QF: 0.8979007600118484; rels: []; projs: [movie_0.title]; preds: [director_0.name = "Steven Spielberg",actor_0.birth_year > 2006]; havings: []; superlative: []; blanks: 1
TOT: 0.8979007600118484; NL: 0.8979007600118484; NL+AG: 0.9687724970127387; NL+QF: 0.8979007600118484; rels: []; projs: [movie_0.title]; preds: [director_0.name = "Steven Spielberg",producer_0.birth_year > 2006]; havings: []; superlative: []; blanks: 1
TOT: 0.8979007600118484; NL: 0.8979007600118484; NL+AG: 0.9687724970127387; NL+QF: 0.8979007600118484; rels: []; projs: [movie_0.title]; preds: [actor_0.name = "Steven Spielberg",movie_0.release_year > 2006]; havings: []; superlative: []; blanks: 1
TOT: 0.8979007600118484; NL: 0.8979007600118484; NL+AG: 0.9687724970127387; NL+QF: 0.8979007600118484; rels: []; projs: [movie_0.title]; preds: [actor_0.name = "Steven Spielberg",tv_series_0.release_year > 2006]; havings: []; superlative: []; blanks: 1
TOT: 0.8979007600118484; NL: 0.8979007600118484; NL+AG: 0.9687724970127387; NL+QF: 0.8979007600118484; rels: []; projs: [movie_0.title]; preds: [actor_0.name = "Steven Spielberg",actor_0.birth_year > 2006]; havings: []; superlative: []; blanks: 1
TOT: 0.8979007600118484; NL: 0.8979007600118484; NL+AG: 0.9687724970127387; NL+QF: 0.8979007600118484; rels: []; projs: [movie_0.title]; preds: [actor_0.name = "Steven Spielberg",producer_0.birth_year > 2006]; havings: []; superlative: []; blanks: 1
TOT: 0.8979007600118484; NL: 0.8979007600118484; NL+AG: 0.9687724970127387; NL+QF: 0.8979007600118484; rels: []; projs: [movie_0.title]; preds: [producer_0.name = "Steven Spielberg",movie_0.release_year > 2006]; havings: []; superlative: []; blanks: 1
TOT: 0.8979007600118484; NL: 0.8979007600118484; NL+AG: 0.9687724970127387; NL+QF: 0.8979007600118484; rels: []; projs: [movie_0.title]; preds: [producer_0.name = "Steven Spielberg",tv_series_0.release_year > 2006]; havings: []; superlative: []; blanks: 1
TOT: 0.8979007600118484; NL: 0.8979007600118484; NL+AG: 0.9687724970127387; NL+QF: 0.8979007600118484; rels: []; projs: [movie_0.title]; preds: [producer_0.name = "Steven Spielberg",actor_0.birth_year > 2006]; havings: []; superlative: []; blanks: 1
TOT: 0.8979007600118484; NL: 0.8979007600118484; NL+AG: 0.9687724970127387; NL+QF: 0.8979007600118484; rels: []; projs: [movie_0.title]; preds: [producer_0.name = "Steven Spielberg",producer_0.birth_year > 2006]; havings: []; superlative: []; blanks: 1
TOT: 0.8979007600118484; NL: 0.8979007600118484; NL+AG: 0.9687724970127387; NL+QF: 0.8979007600118484; rels: []; projs: [movie_0.title]; preds: [writer_0.name = "Steven Spielberg",movie_0.release_year > 2006]; havings: []; superlative: []; blanks: 1
TOT: 0.8979007600118484; NL: 0.8979007600118484; NL+AG: 0.9687724970127387; NL+QF: 0.8979007600118484; rels: []; projs: [movie_0.title]; preds: [writer_0.name = "Steven Spielberg",tv_series_0.release_year > 2006]; havings: []; superlative: []; blanks: 1
TOT: 0.8979007600118484; NL: 0.8979007600118484; NL+AG: 0.9687724970127387; NL+QF: 0.8979007600118484; rels: []; projs: [movie_0.title]; preds: [writer_0.name = "Steven Spielberg",actor_0.birth_year > 2006]; havings: []; superlative: []; blanks: 1
TOT: 0.8979007600118484; NL: 0.8979007600118484; NL+AG: 0.9687724970127387; NL+QF: 0.8979007600118484; rels: []; projs: [movie_0.title]; preds: [writer_0.name = "Steven Spielberg",producer_0.birth_year > 2006]; havings: []; superlative: []; blanks: 1

===========
RESULTS
===========
TOT: 0.8368278053317484; TR: 0.8979007600118484; QF: 0.0; select movie_0.title from movie as movie_0, writer as writer_0, written_by as written_by_0 where movie_0.release_year > 2006 and writer_0.name = "Steven Spielberg" and movie_0.mid = written_by_0.msid and writer_0.wid = written_by_0.wid
TOT: 0.8368278053317484; TR: 0.8979007600118484; QF: 0.0; select movie_0.title from made_by as made_by_0, movie as movie_0, producer as producer_0 where movie_0.release_year > 2006 and producer_0.name = "Steven Spielberg" and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid
TOT: 0.8368278053317484; TR: 0.8979007600118484; QF: 0.0; select movie_0.title from made_by as made_by_0, movie as movie_0, producer as producer_0 where producer_0.birth_year > 2006 and producer_0.name = "Steven Spielberg" and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid
TOT: 0.8368278053317484; TR: 0.8979007600118484; QF: 0.0; select movie_0.title from actor as actor_0, cast as cast_0, movie as movie_0 where actor_0.name = "Steven Spielberg" and movie_0.release_year > 2006 and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid
TOT: 0.8368278053317484; TR: 0.8979007600118484; QF: 0.0; select movie_0.title from actor as actor_0, cast as cast_0, movie as movie_0 where actor_0.birth_year > 2006 and actor_0.name = "Steven Spielberg" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid
TOT: 0.8368278053317484; TR: 0.8979007600118484; QF: 0.0; select movie_0.title from directed_by as directed_by_0, director as director_0, movie as movie_0 where director_0.name = "Steven Spielberg" and movie_0.release_year > 2006 and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid
TOT: 0.8202353794363157; TR: 0.8979007600118484; QF: 0.0; select movie_0.title from actor as actor_0, cast as cast_0, movie as movie_0, writer as writer_0, written_by as written_by_0 where actor_0.birth_year > 2006 and writer_0.name = "Steven Spielberg" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and movie_0.mid = written_by_0.msid and writer_0.wid = written_by_0.wid
TOT: 0.8202353794363157; TR: 0.8979007600118484; QF: 0.0; select movie_0.title from made_by as made_by_0, made_by as made_by_1, movie as movie_0, producer as producer_0, tv_series as tv_series_0 where producer_0.name = "Steven Spielberg" and tv_series_0.release_year > 2006 and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid and made_by_1.msid = tv_series_0.sid and made_by_1.pid = producer_0.pid
TOT: 0.8202353794363157; TR: 0.8979007600118484; QF: 0.0; select movie_0.title from directed_by as directed_by_0, director as director_0, made_by as made_by_0, movie as movie_0, producer as producer_0 where director_0.name = "Steven Spielberg" and producer_0.birth_year > 2006 and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid
TOT: 0.8202353794363157; TR: 0.8979007600118484; QF: 0.0; select movie_0.title from directed_by as directed_by_0, directed_by as directed_by_1, director as director_0, movie as movie_0, tv_series as tv_series_0 where director_0.name = "Steven Spielberg" and tv_series_0.release_year > 2006 and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and directed_by_1.did = director_0.did and directed_by_1.msid = tv_series_0.sid


04:11  INFO: ================
04:11  INFO: QUERY 80: what are the genres of movies directed by "Asghar Farhadi"
04:11  INFO: ================
04:13  INFO: ================
04:13  INFO: QUERY 34: Find all actors who were born in "New York City" in 1984
04:13  INFO: ================
04:15  INFO: ================
04:15  INFO: QUERY 61: How many movies are there that are directed by "Steven Spielberg" and featuring "Matt Damon"?
04:15  INFO: ================
1213. ROOT: ROOT; NA; ; (0) 
1215. movies: NT; NA; ; (0) movie.title(1.0):| movie(1.0):| cast.role(0.95):Movie; Movie F; Movie AD; | company.name(0.95):Movies; Movie; Movie Movie; | tv_series.title(0.84):Movies, Movies, Movi; Movie Mob; Moon Movies; | keyword.keyword(0.83):movie-in-movie; movies-about-movies; b-movie; | actor.name(0.76):| 
1217. How many: CMT; count; ; (0) 
1219. directed: NT; NA; ; (0) directed_by(1.0):| director.name(0.72):| director(0.72):| written_by(0.68):| cast.role(0.67):| cast(0.67):| made_by(0.67):| 
1225. featuring: NT; NA; ; (0) tv_series.title(0.69):| tv_series(0.69):| movie.release_year(0.64):| tv_series.release_year(0.64):| made_by(0.64):| movie.title_aka(0.62):| tv_series.title_aka(0.62):| 
1226. Matt Damon: VTTEXT; NA; ; (0) director.name(1.0):Matt Damon; Matt Diamond; Matt Diamond; | actor.name(1.0):Matt Damon; Matt Damon; Matt Diamond; | producer.name(1.0):Matt Damon; Matt Damon; Matt Diamond; | writer.name(1.0):Matt Damon; Matt Damon; Matt Diamond; | movie.title(0.76):I'm Not Matt Damon; I'm Not Matt Damon; Meeting Matt Damon; | cast.role(0.74):Matt Stamon; Matt Damien; Matt Demond; | tv_series.title(0.67):Damon; The Damon Elliott Sh; Matt Houston; | 
How, WRB
many, JJ
movies, NNS
are, VBP
there, EX
that, WDT
are, VBP
directed, VBN
by, IN
Steven Spielberg, VBG
and, CC
featuring, VBG
Matt Damon, NNP
advmod(many-2, How-1)
amod(movies-3, many-2)
nsubj(are-4, movies-3)
root(ROOT-0, are-4)
expl(are-4, there-5)
nsubjpass(directed-8, that-6)
auxpass(directed-8, are-7)
dep(are-4, directed-8)
mark(Steven Spielberg-10, by-9)
advcl(directed-8, Steven Spielberg-10)
cc(Steven Spielberg-10, and-11)
conj(Steven Spielberg-10, featuring-12)
dobj(Steven Spielberg-10, Matt Damon-13)

PARSE TREE:(1213) ROOT ROOT
    (1217) How many CMT
        (1215) movies NT
            (1219) directed NT
                (1226) Matt Damon VTTEXT
                (1225) featuring NT


===========
TRANSLATIONS
===========
TOT: 0.9100167166104893; NL: 0.9100167166104893; NL+AG: 0.9663389530788972; NL+QF: 0.9100167166104893; rels: [tv_series,directed_by]; projs: [count(distinct(movie_0.title))]; preds: [director_0.name = "Matt Damon"]; havings: []; superlative: []; blanks: 0
TOT: 0.9100167166104893; NL: 0.9100167166104893; NL+AG: 0.9663389530788972; NL+QF: 0.9100167166104893; rels: [tv_series,directed_by]; projs: [count(distinct(movie_0.title))]; preds: [actor_0.name = "Matt Damon"]; havings: []; superlative: []; blanks: 0
TOT: 0.9100167166104893; NL: 0.9100167166104893; NL+AG: 0.9663389530788972; NL+QF: 0.9100167166104893; rels: [tv_series,directed_by]; projs: [count(distinct(movie_0.title))]; preds: [producer_0.name = "Matt Damon"]; havings: []; superlative: []; blanks: 0
TOT: 0.9100167166104893; NL: 0.9100167166104893; NL+AG: 0.9663389530788972; NL+QF: 0.9100167166104893; rels: [tv_series,directed_by]; projs: [count(distinct(movie_0.title))]; preds: [writer_0.name = "Matt Damon"]; havings: []; superlative: []; blanks: 0
TOT: 0.8979007600118484; NL: 0.8979007600118484; NL+AG: 0.9663389530788972; NL+QF: 0.8979007600118484; rels: [directed_by]; projs: [count(distinct(movie_0.title))]; preds: [director_0.name = "Matt Damon"]; havings: []; superlative: []; blanks: 1
TOT: 0.8979007600118484; NL: 0.8979007600118484; NL+AG: 0.9663389530788972; NL+QF: 0.8979007600118484; rels: [directed_by]; projs: [count(distinct(movie_0.title))]; preds: [actor_0.name = "Matt Damon"]; havings: []; superlative: []; blanks: 1
TOT: 0.8979007600118484; NL: 0.8979007600118484; NL+AG: 0.9663389530788972; NL+QF: 0.8979007600118484; rels: [directed_by]; projs: [count(distinct(movie_0.title))]; preds: [producer_0.name = "Matt Damon"]; havings: []; superlative: []; blanks: 1
TOT: 0.8979007600118484; NL: 0.8979007600118484; NL+AG: 0.9663389530788972; NL+QF: 0.8979007600118484; rels: [directed_by]; projs: [count(distinct(movie_0.title))]; preds: [writer_0.name = "Matt Damon"]; havings: []; superlative: []; blanks: 1
TOT: 0.850990783171964; NL: 0.850990783171964; NL+AG: 0.9396672707193222; NL+QF: 0.850990783171964; rels: [tv_series,directed_by]; projs: [count(distinct(movie_0.title))]; preds: [movie_0.title = "I'm Not Matt Damon"]; havings: []; superlative: []; blanks: 0
TOT: 0.8503030335132583; NL: 0.8503030335132583; NL+AG: 0.9394532474786195; NL+QF: 0.8503030335132583; rels: [tv_series,directed_by]; projs: [count(distinct(actor_0.name))]; preds: [director_0.name = "Matt Damon"]; havings: []; superlative: []; blanks: 0
TOT: 0.8503030335132583; NL: 0.8503030335132583; NL+AG: 0.9394532474786195; NL+QF: 0.8503030335132583; rels: [tv_series,directed_by]; projs: [count(distinct(actor_0.name))]; preds: [actor_0.name = "Matt Damon"]; havings: []; superlative: []; blanks: 0
TOT: 0.8503030335132583; NL: 0.8503030335132583; NL+AG: 0.9394532474786195; NL+QF: 0.8503030335132583; rels: [tv_series,directed_by]; projs: [count(distinct(actor_0.name))]; preds: [producer_0.name = "Matt Damon"]; havings: []; superlative: []; blanks: 0
TOT: 0.8503030335132583; NL: 0.8503030335132583; NL+AG: 0.9394532474786195; NL+QF: 0.8503030335132583; rels: [tv_series,directed_by]; projs: [count(distinct(actor_0.name))]; preds: [writer_0.name = "Matt Damon"]; havings: []; superlative: []; blanks: 0

===========
RESULTS
===========
TOT: 0.8368278053317484; TR: 0.8979007600118484; QF: 0.0; select count(distinct(movie_0.title)) from directed_by as directed_by_0, director as director_0, movie as movie_0 where director_0.name = "Matt Damon" and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid
TOT: 0.8217046794275924; TR: 0.9100167166104893; QF: 0.0; select count(distinct(movie_0.title)) from directed_by as directed_by_0, director as director_0, keyword as keyword_0, movie as movie_0, tags as tags_0, tags as tags_1, tv_series as tv_series_0 where director_0.name = "Matt Damon" and directed_by_0.did = director_0.did and directed_by_0.msid = tv_series_0.sid and keyword_0.id = tags_0.kid and keyword_0.id = tags_1.kid and movie_0.mid = tags_0.msid and tags_1.msid = tv_series_0.sid
TOT: 0.8217046794275924; TR: 0.9100167166104893; QF: 0.0; select count(distinct(movie_0.title)) from actor as actor_0, cast as cast_0, cast as cast_1, directed_by as directed_by_0, director as director_0, movie as movie_0, tv_series as tv_series_0 where director_0.name = "Matt Damon" and actor_0.aid = cast_0.aid and actor_0.aid = cast_1.aid and cast_0.msid = movie_0.mid and cast_1.msid = tv_series_0.sid and directed_by_0.did = director_0.did and directed_by_0.msid = tv_series_0.sid
TOT: 0.8217046794275924; TR: 0.9100167166104893; QF: 0.0; select count(distinct(movie_0.title)) from directed_by as directed_by_0, director as director_0, movie as movie_0, tv_series as tv_series_0, writer as writer_0, written_by as written_by_0, written_by as written_by_1 where director_0.name = "Matt Damon" and directed_by_0.did = director_0.did and directed_by_0.msid = tv_series_0.sid and movie_0.mid = written_by_0.msid and tv_series_0.sid = written_by_1.msid and writer_0.wid = written_by_0.wid and writer_0.wid = written_by_1.wid
TOT: 0.8217046794275924; TR: 0.9100167166104893; QF: 0.0; select count(distinct(movie_0.title)) from directed_by as directed_by_0, directed_by as directed_by_1, director as director_0, made_by as made_by_0, movie as movie_0, producer as producer_0, tv_series as tv_series_0 where producer_0.name = "Matt Damon" and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and directed_by_1.did = director_0.did and directed_by_1.msid = tv_series_0.sid and made_by_0.msid = tv_series_0.sid and made_by_0.pid = producer_0.pid
TOT: 0.8217046794275924; TR: 0.9100167166104893; QF: 0.0; select count(distinct(movie_0.title)) from directed_by as directed_by_0, directed_by as directed_by_1, director as director_0, movie as movie_0, tv_series as tv_series_0, writer as writer_0, written_by as written_by_0 where writer_0.name = "Matt Damon" and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and directed_by_1.did = director_0.did and directed_by_1.msid = tv_series_0.sid and tv_series_0.sid = written_by_0.msid and writer_0.wid = written_by_0.wid
TOT: 0.8217046794275924; TR: 0.9100167166104893; QF: 0.0; select count(distinct(movie_0.title)) from directed_by as directed_by_0, director as director_0, made_by as made_by_0, made_by as made_by_1, movie as movie_0, producer as producer_0, tv_series as tv_series_0 where director_0.name = "Matt Damon" and directed_by_0.did = director_0.did and directed_by_0.msid = tv_series_0.sid and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid and made_by_1.msid = tv_series_0.sid and made_by_1.pid = producer_0.pid
TOT: 0.8217046794275924; TR: 0.9100167166104893; QF: 0.0; select count(distinct(movie_0.title)) from actor as actor_0, cast as cast_0, directed_by as directed_by_0, directed_by as directed_by_1, director as director_0, movie as movie_0, tv_series as tv_series_0 where actor_0.name = "Matt Damon" and actor_0.aid = cast_0.aid and cast_0.msid = tv_series_0.sid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and directed_by_1.did = director_0.did and directed_by_1.msid = tv_series_0.sid
TOT: 0.8217046794275924; TR: 0.9100167166104893; QF: 0.0; select count(distinct(movie_0.title)) from classification as classification_0, classification as classification_1, directed_by as directed_by_0, director as director_0, genre as genre_0, movie as movie_0, tv_series as tv_series_0 where director_0.name = "Matt Damon" and classification_0.gid = genre_0.gid and classification_0.msid = movie_0.mid and classification_1.gid = genre_0.gid and classification_1.msid = tv_series_0.sid and directed_by_0.did = director_0.did and directed_by_0.msid = tv_series_0.sid
TOT: 0.8217046794275924; TR: 0.9100167166104893; QF: 0.0; select count(distinct(movie_0.title)) from company as company_0, copyright as copyright_0, copyright as copyright_1, directed_by as directed_by_0, director as director_0, movie as movie_0, tv_series as tv_series_0 where director_0.name = "Matt Damon" and company_0.id = copyright_0.cid and company_0.id = copyright_1.cid and copyright_0.msid = movie_0.mid and copyright_1.msid = tv_series_0.sid and directed_by_0.did = director_0.did and directed_by_0.msid = tv_series_0.sid


04:16  INFO: ================
04:16  INFO: QUERY 9: When was "Kevin Spacey" born?
04:16  INFO: ================
04:17  INFO: ================
04:17  INFO: QUERY 107: How many female actors were born in "New York City" after 1980?
04:17  INFO: ================
04:32  INFO: ================
04:32  INFO: QUERY 117: Find all movies featuring "Benedict Cumberbatch" and "Keira Knightley"
04:32  INFO: ================
1246. ROOT: ROOT; NA; ; (0) 
1247. Find: CMT; NA; ; (0) 
1248. featuring: NT; NA; ; (0) tv_series.title(0.69):| tv_series(0.69):| movie.release_year(0.64):| tv_series.release_year(0.64):| made_by(0.64):| movie.title_aka(0.62):| tv_series.title_aka(0.62):| 
1249. movies: NT; NA; all; (0) movie.title(1.0):| movie(1.0):| cast.role(0.95):Movie; Movie F; Movie AD; | company.name(0.95):Movies; Movie; Movie Movie; | tv_series.title(0.84):Movies, Movies, Movi; Movie Mob; Moon Movies; | keyword.keyword(0.83):movie-in-movie; movies-about-movies; b-movie; | actor.name(0.76):| 
1251. Benedict Cumberbatch: VTTEXT; NA; ; (0) actor.name(1.0):Benedict Cumberbatch; Benedict Cumberbatch; Benedict Timothy Car; | producer.name(1.0):Benedict Cumberbatch; Benedict Cumberbatch; Benedict Timothy Car; | cast.role(0.7):Tom Cumberbatch; Bert Benedict; Bert Benedict; | director.name(0.68):Jill Cumberbatch; Benedict Coen; Benedict Coen; | writer.name(0.67):Benedict Berenberg; Benedict Berenberg; Carol Cumberbatch; | movie.title(0.66):Benedict; Benedict; My Tribute, Eddie Cu; | company.name(0.59):St. Benedict Center; St. Benedict Center; Yerden-Cumberbatch M; | 
1253. Keira Knightley: VTTEXT; NA; ; (0) actor.name(1.0):Keira Knightley; Keira Knightley; Keira Knightly; | producer.name(1.0):Keira Knightley; Keira Knightley; Keira Knightly; | writer.name(0.89):Keira Knightly; Keira Knightly; Keira Ennis; | cast.role(0.82):Sara Knightley; Sara Knightley; Mr Knightley; | actor.birth_city(0.76):Knightley; | movie.title(0.69):Keira Knightley: Bec; Keira Knightley: Bec; Keira Nicole: Bikini; | director.name(0.45):Keira Lyons; Keira Lyons; Keira Brown; | 
Find, VB
all, DT
movies, NNS
featuring, VBG
Benedict Cumberbatch, NNP
and, CC
Keira Knightley, NNP
root(ROOT-0, Find-1)
det(movies-3, all-2)
nsubj(featuring-4, movies-3)
dep(Find-1, featuring-4)
dobj(featuring-4, Benedict Cumberbatch-5)
cc(Benedict Cumberbatch-5, and-6)
conj(Benedict Cumberbatch-5, Keira Knightley-7)

PARSE TREE:(1246) ROOT ROOT
    (1247) Find CMT
        (1249) movies NT
            (1248) featuring NT
                (1251) Benedict Cumberbatch VTTEXT
                (1253) Keira Knightley VTTEXT


===========
TRANSLATIONS
===========
TOT: 0.8979007600118484; NL: 0.8979007600118484; NL+AG: 0.9685548245020893; NL+QF: 0.8979007600118484; rels: []; projs: [movie_0.title]; preds: [actor_0.name = "Benedict Cumberbatch",actor_0.name = "Keira Knightley"]; havings: []; superlative: []; blanks: 1
TOT: 0.8979007600118484; NL: 0.8979007600118484; NL+AG: 0.9685548245020893; NL+QF: 0.8979007600118484; rels: []; projs: [movie_0.title]; preds: [actor_0.name = "Benedict Cumberbatch",producer_0.name = "Keira Knightley"]; havings: []; superlative: []; blanks: 1
TOT: 0.8979007600118484; NL: 0.8979007600118484; NL+AG: 0.9685548245020893; NL+QF: 0.8979007600118484; rels: []; projs: [movie_0.title]; preds: [producer_0.name = "Benedict Cumberbatch",actor_0.name = "Keira Knightley"]; havings: []; superlative: []; blanks: 1
TOT: 0.8979007600118484; NL: 0.8979007600118484; NL+AG: 0.9685548245020893; NL+QF: 0.8979007600118484; rels: []; projs: [movie_0.title]; preds: [producer_0.name = "Benedict Cumberbatch",producer_0.name = "Keira Knightley"]; havings: []; superlative: []; blanks: 1
TOT: 0.8825870838315157; NL: 0.8825870838315157; NL+AG: 0.9901717764731464; NL+QF: 0.8825870838315157; rels: []; projs: [tv_series_0.title]; preds: [actor_0.name = "Benedict Cumberbatch",actor_0.name = "Keira Knightley"]; havings: []; superlative: []; blanks: 0
TOT: 0.8825870838315157; NL: 0.8825870838315157; NL+AG: 0.9901717764731464; NL+QF: 0.8825870838315157; rels: []; projs: [tv_series_0.title]; preds: [actor_0.name = "Benedict Cumberbatch",producer_0.name = "Keira Knightley"]; havings: []; superlative: []; blanks: 0
TOT: 0.8825870838315157; NL: 0.8825870838315157; NL+AG: 0.9901717764731464; NL+QF: 0.8825870838315157; rels: []; projs: [tv_series_0.title]; preds: [producer_0.name = "Benedict Cumberbatch",actor_0.name = "Keira Knightley"]; havings: []; superlative: []; blanks: 0
TOT: 0.8825870838315157; NL: 0.8825870838315157; NL+AG: 0.9901717764731464; NL+QF: 0.8825870838315157; rels: []; projs: [tv_series_0.title]; preds: [producer_0.name = "Benedict Cumberbatch",producer_0.name = "Keira Knightley"]; havings: []; superlative: []; blanks: 0
TOT: 0.8825870838315157; NL: 0.8825870838315157; NL+AG: 0.9901717764731464; NL+QF: 0.8825870838315157; rels: []; projs: [tv_series_0.title]; preds: [actor_0.name = "Benedict Cumberbatch",actor_0.name = "Keira Knightley"]; havings: []; superlative: []; blanks: 0
TOT: 0.8825870838315157; NL: 0.8825870838315157; NL+AG: 0.9901717764731464; NL+QF: 0.8825870838315157; rels: []; projs: [tv_series_0.title]; preds: [actor_0.name = "Benedict Cumberbatch",producer_0.name = "Keira Knightley"]; havings: []; superlative: []; blanks: 0
TOT: 0.8825870838315157; NL: 0.8825870838315157; NL+AG: 0.9901717764731464; NL+QF: 0.8825870838315157; rels: []; projs: [tv_series_0.title]; preds: [producer_0.name = "Benedict Cumberbatch",actor_0.name = "Keira Knightley"]; havings: []; superlative: []; blanks: 0
TOT: 0.8825870838315157; NL: 0.8825870838315157; NL+AG: 0.9901717764731464; NL+QF: 0.8825870838315157; rels: []; projs: [tv_series_0.title]; preds: [producer_0.name = "Benedict Cumberbatch",producer_0.name = "Keira Knightley"]; havings: []; superlative: []; blanks: 0

===========
RESULTS
===========
TOT: 0.8202353794363157; TR: 0.8979007600118484; QF: 0.0; select movie_0.title from actor as actor_0, cast as cast_0, made_by as made_by_0, movie as movie_0, producer as producer_0 where actor_0.name = "Benedict Cumberbatch" and producer_0.name = "Keira Knightley" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid
TOT: 0.8202353794363157; TR: 0.8979007600118484; QF: 0.0; select movie_0.title from actor as actor_0, cast as cast_0, made_by as made_by_0, movie as movie_0, producer as producer_0 where actor_0.name = "Keira Knightley" and producer_0.name = "Benedict Cumberbatch" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid
TOT: 0.8202353794363157; TR: 0.8979007600118484; QF: 0.0; select movie_0.title from made_by as made_by_0, made_by as made_by_1, movie as movie_0, producer as producer_0, producer as producer_1 where producer_0.name = "Benedict Cumberbatch" and producer_1.name = "Keira Knightley" and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid and made_by_1.msid = movie_0.mid and made_by_1.pid = producer_1.pid
TOT: 0.8202353794363157; TR: 0.8979007600118484; QF: 0.0; select movie_0.title from actor as actor_0, actor as actor_1, cast as cast_0, cast as cast_1, movie as movie_0 where actor_0.name = "Benedict Cumberbatch" and actor_1.name = "Keira Knightley" and actor_0.aid = cast_0.aid and actor_1.aid = cast_1.aid and cast_0.msid = movie_0.mid and cast_1.msid = movie_0.mid
TOT: 0.8114061163187476; TR: 0.8979007600118484; QF: 0.0; select movie_0.title from actor as actor_0, actor as actor_1, cast as cast_0, cast as cast_1, cast as cast_2, movie as movie_0, tv_series as tv_series_0 where actor_0.name = "Benedict Cumberbatch" and actor_1.name = "Keira Knightley" and actor_0.aid = cast_0.aid and actor_0.aid = cast_1.aid and actor_1.aid = cast_2.aid and cast_0.msid = movie_0.mid and cast_1.msid = tv_series_0.sid and cast_2.msid = tv_series_0.sid
TOT: 0.8114061163187476; TR: 0.8979007600118484; QF: 0.0; select movie_0.title from actor as actor_0, actor as actor_1, cast as cast_0, cast as cast_1, cast as cast_2, movie as movie_0, tv_series as tv_series_0 where actor_0.name = "Keira Knightley" and actor_1.name = "Benedict Cumberbatch" and actor_0.aid = cast_0.aid and actor_0.aid = cast_1.aid and actor_1.aid = cast_2.aid and cast_0.msid = movie_0.mid and cast_1.msid = tv_series_0.sid and cast_2.msid = tv_series_0.sid
TOT: 0.8114061163187476; TR: 0.8979007600118484; QF: 0.0; select movie_0.title from made_by as made_by_0, made_by as made_by_1, made_by as made_by_2, movie as movie_0, producer as producer_0, producer as producer_1, tv_series as tv_series_0 where producer_0.name = "Benedict Cumberbatch" and producer_1.name = "Keira Knightley" and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid and made_by_1.msid = tv_series_0.sid and made_by_1.pid = producer_0.pid and made_by_2.msid = tv_series_0.sid and made_by_2.pid = producer_1.pid
TOT: 0.8114061163187476; TR: 0.8979007600118484; QF: 0.0; select movie_0.title from made_by as made_by_0, made_by as made_by_1, made_by as made_by_2, movie as movie_0, producer as producer_0, producer as producer_1, tv_series as tv_series_0 where producer_0.name = "Keira Knightley" and producer_1.name = "Benedict Cumberbatch" and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid and made_by_1.msid = tv_series_0.sid and made_by_1.pid = producer_0.pid and made_by_2.msid = tv_series_0.sid and made_by_2.pid = producer_1.pid
TOT: 0.8114061163187476; TR: 0.8979007600118484; QF: 0.0; select movie_0.title from actor as actor_0, cast as cast_0, cast as cast_1, made_by as made_by_0, movie as movie_0, producer as producer_0, tv_series as tv_series_0 where actor_0.name = "Benedict Cumberbatch" and producer_0.name = "Keira Knightley" and actor_0.aid = cast_0.aid and actor_0.aid = cast_1.aid and cast_0.msid = movie_0.mid and cast_1.msid = tv_series_0.sid and made_by_0.msid = tv_series_0.sid and made_by_0.pid = producer_0.pid
TOT: 0.8114061163187476; TR: 0.8979007600118484; QF: 0.0; select movie_0.title from actor as actor_0, cast as cast_0, cast as cast_1, made_by as made_by_0, movie as movie_0, producer as producer_0, tv_series as tv_series_0 where actor_0.name = "Keira Knightley" and producer_0.name = "Benedict Cumberbatch" and actor_0.aid = cast_0.aid and actor_0.aid = cast_1.aid and cast_0.msid = movie_0.mid and cast_1.msid = tv_series_0.sid and made_by_0.msid = tv_series_0.sid and made_by_0.pid = producer_0.pid


04:34  INFO: ================
04:34  INFO: QUERY 48: What are all the movies featuring "Kerry Washington"?
04:34  INFO: ================
1255. ROOT: ROOT; NA; ; (0) 
1256. What: CMT; NA; ; (0) 
1258. movies: NT; NA; all; (0) movie.title(1.0):| movie(1.0):| cast.role(0.95):Movie; Movie F; Movie AD; | company.name(0.95):Movies; Movie; Movie Movie; | tv_series.title(0.84):Movies, Movies, Movi; Movie Mob; Moon Movies; | keyword.keyword(0.83):movie-in-movie; movies-about-movies; b-movie; | actor.name(0.76):| 
1261. featuring: NT; NA; ; (0) tv_series.title(0.69):| tv_series(0.69):| movie.release_year(0.64):| tv_series.release_year(0.64):| made_by(0.64):| movie.title_aka(0.62):| tv_series.title_aka(0.62):| 
1262. Kerry Washington: VTTEXT; NA; ; (0) actor.name(1.0):Kerry Washington; Kerry Washington; Jerry Washington; | producer.name(1.0):Kerry Washington; Kerry Washington; Terry Washington; | director.name(0.93):Jerry Washington; Leroy Washington; Tony Washington; | writer.name(0.93):Jerry Washington; Ellery Washington; Leroy Washington; | cast.role(0.91):Sherry Washington; Roy Washington; Amy Washington; | director.birth_city(0.77):Washington; Washington; Washington; | actor.birth_city(0.77):Washington; Washington; Washington; | 
What, WP
are, VBP
all, PDT
the, DT
movies, NNS
featuring, VBG
Kerry Washington, NNP
root(ROOT-0, What-1)
cop(What-1, are-2)
det:predet(movies-5, all-3)
det(movies-5, the-4)
nsubj(What-1, movies-5)
dep(movies-5, featuring-6)
dobj(featuring-6, Kerry Washington-7)

PARSE TREE:(1255) ROOT ROOT
    (1256) What CMT
        (1258) movies NT
            (1261) featuring NT
                (1262) Kerry Washington VTTEXT


===========
TRANSLATIONS
===========
TOT: 0.8662391053409028; NL: 0.8662391053409028; NL+AG: 0.9628121638266046; NL+QF: 0.8662391053409028; rels: []; projs: [movie_0.title]; preds: [actor_0.name = "Kerry Washington"]; havings: []; superlative: []; blanks: 1
TOT: 0.8662391053409028; NL: 0.8662391053409028; NL+AG: 0.9628121638266046; NL+QF: 0.8662391053409028; rels: []; projs: [movie_0.title]; preds: [producer_0.name = "Kerry Washington"]; havings: []; superlative: []; blanks: 1
TOT: 0.846544991160274; NL: 0.846544991160274; NL+AG: 0.9549358938904248; NL+QF: 0.846544991160274; rels: []; projs: [movie_0.title]; preds: [director_0.name = "Jerry Washington"]; havings: []; superlative: []; blanks: 1
TOT: 0.846544991160274; NL: 0.846544991160274; NL+AG: 0.9549358938904248; NL+QF: 0.846544991160274; rels: []; projs: [movie_0.title]; preds: [writer_0.name = "Jerry Washington"]; havings: []; superlative: []; blanks: 1
TOT: 0.8403126689217164; NL: 0.8403126689217164; NL+AG: 0.952518382610044; NL+QF: 0.8403126689217164; rels: []; projs: [movie_0.title]; preds: [cast_0.role = "Sherry Washington"]; havings: []; superlative: []; blanks: 1
TOT: 0.7955417822520919; NL: 0.7955417822520919; NL+AG: 0.9391833540180654; NL+QF: 0.7955417822520919; rels: []; projs: [movie_0.title]; preds: [director_0.birth_city = "Washington"]; havings: []; superlative: []; blanks: 1
TOT: 0.7955417822520919; NL: 0.7955417822520919; NL+AG: 0.9391833540180654; NL+QF: 0.7955417822520919; rels: []; projs: [movie_0.title]; preds: [actor_0.birth_city = "Washington"]; havings: []; superlative: []; blanks: 1
TOT: 0.7912922821972069; NL: 0.7912922821972069; NL+AG: 0.9394249139348947; NL+QF: 0.7912922821972069; rels: []; projs: [actor_0.name]; preds: [actor_0.name = "Kerry Washington"]; havings: []; superlative: []; blanks: 1
TOT: 0.7912922821972069; NL: 0.7912922821972069; NL+AG: 0.9394249139348947; NL+QF: 0.7912922821972069; rels: []; projs: [actor_0.name]; preds: [producer_0.name = "Kerry Washington"]; havings: []; superlative: []; blanks: 1
TOT: 0.7783173787653892; NL: 0.7783173787653892; NL+AG: 0.9394249139348947; NL+QF: 0.7783173787653892; rels: []; projs: [tv_series_0.title]; preds: [actor_0.name = "Kerry Washington"]; havings: []; superlative: []; blanks: 1
TOT: 0.7783173787653892; NL: 0.7783173787653892; NL+AG: 0.9394249139348947; NL+QF: 0.7783173787653892; rels: []; projs: [tv_series_0.title]; preds: [producer_0.name = "Kerry Washington"]; havings: []; superlative: []; blanks: 1
TOT: 0.7783173787653892; NL: 0.7783173787653892; NL+AG: 0.9394249139348947; NL+QF: 0.7783173787653892; rels: []; projs: [tv_series_0.title]; preds: [actor_0.name = "Kerry Washington"]; havings: []; superlative: []; blanks: 1
TOT: 0.7783173787653892; NL: 0.7783173787653892; NL+AG: 0.9394249139348947; NL+QF: 0.7783173787653892; rels: []; projs: [tv_series_0.title]; preds: [producer_0.name = "Kerry Washington"]; havings: []; superlative: []; blanks: 1

===========
RESULTS
===========
TOT: 0.8099153988614446; TR: 0.8662391053409028; QF: 0.0; select movie_0.title from made_by as made_by_0, movie as movie_0, producer as producer_0 where producer_0.name = "Kerry Washington" and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid
TOT: 0.8099153988614446; TR: 0.8662391053409028; QF: 0.0; select movie_0.title from actor as actor_0, cast as cast_0, movie as movie_0 where actor_0.name = "Kerry Washington" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid
TOT: 0.8044218831847437; TR: 0.8403126689217164; QF: 0.0; select movie_0.title from cast as cast_0, movie as movie_0 where cast_0.role = "Sherry Washington" and cast_0.msid = movie_0.mid
TOT: 0.7931754018079102; TR: 0.846544991160274; QF: 0.0; select movie_0.title from movie as movie_0, writer as writer_0, written_by as written_by_0 where writer_0.name = "Jerry Washington" and movie_0.mid = written_by_0.msid and writer_0.wid = written_by_0.wid
TOT: 0.7931754018079102; TR: 0.846544991160274; QF: 0.0; select movie_0.title from directed_by as directed_by_0, director as director_0, movie as movie_0 where director_0.name = "Jerry Washington" and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid
TOT: 0.7844937098484438; TR: 0.8662391053409028; QF: 0.0; select movie_0.title from classification as classification_0, classification as classification_1, genre as genre_0, made_by as made_by_0, movie as movie_0, producer as producer_0, tv_series as tv_series_0 where producer_0.name = "Kerry Washington" and classification_0.gid = genre_0.gid and classification_0.msid = movie_0.mid and classification_1.gid = genre_0.gid and classification_1.msid = tv_series_0.sid and made_by_0.msid = tv_series_0.sid and made_by_0.pid = producer_0.pid
TOT: 0.7844937098484438; TR: 0.8662391053409028; QF: 0.0; select movie_0.title from actor as actor_0, cast as cast_0, classification as classification_0, classification as classification_1, genre as genre_0, movie as movie_0, tv_series as tv_series_0 where actor_0.name = "Kerry Washington" and actor_0.aid = cast_0.aid and cast_0.msid = tv_series_0.sid and classification_0.gid = genre_0.gid and classification_0.msid = movie_0.mid and classification_1.gid = genre_0.gid and classification_1.msid = tv_series_0.sid
TOT: 0.7844937098484438; TR: 0.8662391053409028; QF: 0.0; select movie_0.title from keyword as keyword_0, made_by as made_by_0, movie as movie_0, producer as producer_0, tags as tags_0, tags as tags_1, tv_series as tv_series_0 where producer_0.name = "Kerry Washington" and keyword_0.id = tags_0.kid and keyword_0.id = tags_1.kid and made_by_0.msid = tv_series_0.sid and made_by_0.pid = producer_0.pid and movie_0.mid = tags_0.msid and tags_1.msid = tv_series_0.sid
TOT: 0.7844937098484438; TR: 0.8662391053409028; QF: 0.0; select movie_0.title from made_by as made_by_0, movie as movie_0, producer as producer_0, tv_series as tv_series_0, writer as writer_0, written_by as written_by_0, written_by as written_by_1 where producer_0.name = "Kerry Washington" and made_by_0.msid = tv_series_0.sid and made_by_0.pid = producer_0.pid and movie_0.mid = written_by_0.msid and tv_series_0.sid = written_by_1.msid and writer_0.wid = written_by_0.wid and writer_0.wid = written_by_1.wid
TOT: 0.7844937098484438; TR: 0.8662391053409028; QF: 0.0; select movie_0.title from directed_by as directed_by_0, directed_by as directed_by_1, director as director_0, made_by as made_by_0, movie as movie_0, producer as producer_0, tv_series as tv_series_0 where producer_0.name = "Kerry Washington" and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and directed_by_1.did = director_0.did and directed_by_1.msid = tv_series_0.sid and made_by_0.msid = tv_series_0.sid and made_by_0.pid = producer_0.pid


04:34  INFO: ================
04:34  INFO: QUERY 101: How many movies did "Quentin Tarantino" direct after 2010?
04:34  INFO: ================
1264. ROOT: ROOT; NA; ; (0) 
1265. direct: NT; NA; ; (0) directed_by(1.0):| director.name(0.72):| director(0.72):| written_by(0.68):| cast.role(0.67):| cast(0.67):| made_by(0.67):| 
1266. movies: NT; NA; ; (0) movie.title(1.0):| movie(1.0):| cast.role(0.95):Movie; Movie F; Movie AD; | company.name(0.95):Movies; Movie; Movie Movie; | tv_series.title(0.84):Movies, Movies, Movi; Movie Mob; Moon Movies; | keyword.keyword(0.83):movie-in-movie; movies-about-movies; b-movie; | actor.name(0.76):| 
1268. How many: CMT; count; ; (0) 
1270. Quentin Tarantino: VTTEXT; NA; ; (0) director.name(1.0):Quentin Tarantino; Quentin Tarantino; Quentin Tarrantino; | actor.name(1.0):Quentin Tarantino; Quentin Tarantino; Quentin Tarrantino; | producer.name(1.0):Quentin Tarantino; Quentin Tarantino; Quentin Tarrantino; | writer.name(1.0):Quentin Tarantino; Quentin Tarantino; Quentin Tarrantino; | cast.role(0.85):Quentin Tarrantino '; Quentin Tarrantino '; Quentin Tarrantino '; | movie.title(0.84):21 Years: Quentin Ta; 21 Years: Quentin Ta; Quentin Tarantino's ; | writer.birth_city(0.74):San Quentin; San Quentin; Saint-Quentin; | 
1271. 2010: VTNUM; NA; ; (0) movie.release_year(1.0):2012; 2014; 2015; | tv_series.release_year(1.0):2014; 2014; 2013; | actor.birth_year(1.0):2011; 2013; 2013; | 
1272. after: OT; >; ; (0) 
How, WRB
many, JJ
movies, NNS
did, VBD
Quentin Tarantino, NNP
direct, VB
after, IN
2010, CD
advmod(many-2, How-1)
amod(movies-3, many-2)
dobj(direct-6, movies-3)
aux(direct-6, did-4)
nsubj(direct-6, Quentin Tarantino-5)
root(ROOT-0, direct-6)
case(2010-8, after-7)
nmod(direct-6, 2010-8)

PARSE TREE:(1264) ROOT ROOT
    (1268) How many CMT
        (1266) movies NT
            (1265) direct NT
                (1270) Quentin Tarantino VTTEXT
                (1271) 2010 VTNUM
                    (1272) after OT


===========
TRANSLATIONS
===========
TOT: 0.8979007600118484; NL: 0.8979007600118484; NL+AG: 0.9685296079391709; NL+QF: 0.8979007600118484; rels: []; projs: [count(distinct(movie_0.title))]; preds: [director_0.name = "Quentin Tarantino",movie_0.release_year > 2010]; havings: []; superlative: []; blanks: 1
TOT: 0.8979007600118484; NL: 0.8979007600118484; NL+AG: 0.9685296079391709; NL+QF: 0.8979007600118484; rels: []; projs: [count(distinct(movie_0.title))]; preds: [director_0.name = "Quentin Tarantino",tv_series_0.release_year > 2010]; havings: []; superlative: []; blanks: 1
TOT: 0.8979007600118484; NL: 0.8979007600118484; NL+AG: 0.9685296079391709; NL+QF: 0.8979007600118484; rels: []; projs: [count(distinct(movie_0.title))]; preds: [director_0.name = "Quentin Tarantino",actor_0.birth_year > 2010]; havings: []; superlative: []; blanks: 1
TOT: 0.8979007600118484; NL: 0.8979007600118484; NL+AG: 0.9685296079391709; NL+QF: 0.8979007600118484; rels: []; projs: [count(distinct(movie_0.title))]; preds: [actor_0.name = "Quentin Tarantino",movie_0.release_year > 2010]; havings: []; superlative: []; blanks: 1
TOT: 0.8979007600118484; NL: 0.8979007600118484; NL+AG: 0.9685296079391709; NL+QF: 0.8979007600118484; rels: []; projs: [count(distinct(movie_0.title))]; preds: [actor_0.name = "Quentin Tarantino",tv_series_0.release_year > 2010]; havings: []; superlative: []; blanks: 1
TOT: 0.8979007600118484; NL: 0.8979007600118484; NL+AG: 0.9685296079391709; NL+QF: 0.8979007600118484; rels: []; projs: [count(distinct(movie_0.title))]; preds: [actor_0.name = "Quentin Tarantino",actor_0.birth_year > 2010]; havings: []; superlative: []; blanks: 1
TOT: 0.8979007600118484; NL: 0.8979007600118484; NL+AG: 0.9685296079391709; NL+QF: 0.8979007600118484; rels: []; projs: [count(distinct(movie_0.title))]; preds: [producer_0.name = "Quentin Tarantino",movie_0.release_year > 2010]; havings: []; superlative: []; blanks: 1
TOT: 0.8979007600118484; NL: 0.8979007600118484; NL+AG: 0.9685296079391709; NL+QF: 0.8979007600118484; rels: []; projs: [count(distinct(movie_0.title))]; preds: [producer_0.name = "Quentin Tarantino",tv_series_0.release_year > 2010]; havings: []; superlative: []; blanks: 1
TOT: 0.8979007600118484; NL: 0.8979007600118484; NL+AG: 0.9685296079391709; NL+QF: 0.8979007600118484; rels: []; projs: [count(distinct(movie_0.title))]; preds: [producer_0.name = "Quentin Tarantino",actor_0.birth_year > 2010]; havings: []; superlative: []; blanks: 1
TOT: 0.8979007600118484; NL: 0.8979007600118484; NL+AG: 0.9685296079391709; NL+QF: 0.8979007600118484; rels: []; projs: [count(distinct(movie_0.title))]; preds: [writer_0.name = "Quentin Tarantino",movie_0.release_year > 2010]; havings: []; superlative: []; blanks: 1
TOT: 0.8979007600118484; NL: 0.8979007600118484; NL+AG: 0.9685296079391709; NL+QF: 0.8979007600118484; rels: []; projs: [count(distinct(movie_0.title))]; preds: [writer_0.name = "Quentin Tarantino",tv_series_0.release_year > 2010]; havings: []; superlative: []; blanks: 1
TOT: 0.8979007600118484; NL: 0.8979007600118484; NL+AG: 0.9685296079391709; NL+QF: 0.8979007600118484; rels: []; projs: [count(distinct(movie_0.title))]; preds: [writer_0.name = "Quentin Tarantino",actor_0.birth_year > 2010]; havings: []; superlative: []; blanks: 1

===========
RESULTS
===========
TOT: 0.8368278053317484; TR: 0.8979007600118484; QF: 0.0; select count(distinct(movie_0.title)) from movie as movie_0, writer as writer_0, written_by as written_by_0 where movie_0.release_year > 2010 and writer_0.name = "Quentin Tarantino" and movie_0.mid = written_by_0.msid and writer_0.wid = written_by_0.wid
TOT: 0.8368278053317484; TR: 0.8979007600118484; QF: 0.0; select count(distinct(movie_0.title)) from made_by as made_by_0, movie as movie_0, producer as producer_0 where movie_0.release_year > 2010 and producer_0.name = "Quentin Tarantino" and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid
TOT: 0.8368278053317484; TR: 0.8979007600118484; QF: 0.0; select count(distinct(movie_0.title)) from actor as actor_0, cast as cast_0, movie as movie_0 where actor_0.name = "Quentin Tarantino" and movie_0.release_year > 2010 and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid
TOT: 0.8368278053317484; TR: 0.8979007600118484; QF: 0.0; select count(distinct(movie_0.title)) from actor as actor_0, cast as cast_0, movie as movie_0 where actor_0.birth_year > 2010 and actor_0.name = "Quentin Tarantino" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid
TOT: 0.8368278053317484; TR: 0.8979007600118484; QF: 0.0; select count(distinct(movie_0.title)) from directed_by as directed_by_0, director as director_0, movie as movie_0 where director_0.name = "Quentin Tarantino" and movie_0.release_year > 2010 and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid
TOT: 0.8202353794363157; TR: 0.8979007600118484; QF: 0.0; select count(distinct(movie_0.title)) from actor as actor_0, cast as cast_0, movie as movie_0, writer as writer_0, written_by as written_by_0 where actor_0.birth_year > 2010 and writer_0.name = "Quentin Tarantino" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and movie_0.mid = written_by_0.msid and writer_0.wid = written_by_0.wid
TOT: 0.8202353794363157; TR: 0.8979007600118484; QF: 0.0; select count(distinct(movie_0.title)) from made_by as made_by_0, made_by as made_by_1, movie as movie_0, producer as producer_0, tv_series as tv_series_0 where producer_0.name = "Quentin Tarantino" and tv_series_0.release_year > 2010 and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid and made_by_1.msid = tv_series_0.sid and made_by_1.pid = producer_0.pid
TOT: 0.8202353794363157; TR: 0.8979007600118484; QF: 0.0; select count(distinct(movie_0.title)) from directed_by as directed_by_0, directed_by as directed_by_1, director as director_0, movie as movie_0, tv_series as tv_series_0 where director_0.name = "Quentin Tarantino" and tv_series_0.release_year > 2010 and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and directed_by_1.did = director_0.did and directed_by_1.msid = tv_series_0.sid
TOT: 0.8202353794363157; TR: 0.8979007600118484; QF: 0.0; select count(distinct(movie_0.title)) from actor as actor_0, cast as cast_0, directed_by as directed_by_0, director as director_0, movie as movie_0 where actor_0.birth_year > 2010 and director_0.name = "Quentin Tarantino" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid
TOT: 0.8202353794363157; TR: 0.8979007600118484; QF: 0.0; select count(distinct(movie_0.title)) from actor as actor_0, cast as cast_0, cast as cast_1, movie as movie_0, tv_series as tv_series_0 where actor_0.name = "Quentin Tarantino" and tv_series_0.release_year > 2010 and actor_0.aid = cast_0.aid and actor_0.aid = cast_1.aid and cast_0.msid = movie_0.mid and cast_1.msid = tv_series_0.sid


04:35  INFO: ================
04:35  INFO: QUERY 15: Find all actors born in Milan
04:35  INFO: ================
04:36  INFO: ================
04:36  INFO: QUERY 71: Who is the writer of "The Truman Show"
04:36  INFO: ================
04:37  INFO: ================
04:37  INFO: QUERY 37: Find all movies produced by "Walt Disney" after 2010
04:37  INFO: ================
1290. ROOT: ROOT; NA; ; (0) 
1291. Find: CMT; NA; ; (0) 
1292. movies: NT; NA; all; (0) movie.title(1.0):| movie(1.0):| cast.role(0.95):Movie; Movie F; Movie AD; | company.name(0.95):Movies; Movie; Movie Movie; | tv_series.title(0.84):Movies, Movies, Movi; Movie Mob; Moon Movies; | keyword.keyword(0.83):movie-in-movie; movies-about-movies; b-movie; | actor.name(0.76):| 
1294. produced: NT; NA; ; (0) made_by(0.74):| directed_by(0.69):| producer.name(0.68):| producer(0.68):| cast.role(0.63):| cast(0.63):| written_by(0.63):| 
1295. Walt Disney: VTTEXT; NA; ; (0) director.name(1.0):Walt Disney; Walt Disney; Walter Elias Disney; | actor.name(1.0):Walt Disney; Walt Disney; Walter Disney; | producer.name(1.0):Walt Disney; Walt Disney; Walter Disney; | company.name(1.0):Walt Disney; Walt Disney; Walt Disney; | writer.name(1.0):Walt Disney; Walt Disney; The Dutch Walt Disne; | cast.role(0.85):Adult Walt Disney; Adult Walt Disney; Adult Walt Disney; | movie.title(0.81):Walt Disney Is Dead; Walt Disney Is Dead; Praça Walt Disney; | 
1297. 2010: VTNUM; NA; ; (0) movie.release_year(1.0):2012; 2014; 2015; | tv_series.release_year(1.0):2014; 2014; 2013; | actor.birth_year(1.0):2011; 2013; 2013; | 
1298. after: OT; >; ; (0) 
Find, VB
all, DT
movies, NNS
produced, VBN
by, IN
Walt Disney, NNP
after, IN
2010, CD
root(ROOT-0, Find-1)
det(movies-3, all-2)
dobj(Find-1, movies-3)
acl(movies-3, produced-4)
case(Walt Disney-6, by-5)
nmod(produced-4, Walt Disney-6)
case(2010-8, after-7)
nmod(produced-4, 2010-8)

PARSE TREE:(1290) ROOT ROOT
    (1291) Find CMT
        (1292) movies NT
            (1294) produced NT
                (1295) Walt Disney VTTEXT
                (1297) 2010 VTNUM
                    (1298) after OT


===========
TRANSLATIONS
===========
TOT: 0.8979007600118484; NL: 0.8979007600118484; NL+AG: 0.9687724970127387; NL+QF: 0.8979007600118484; rels: []; projs: [movie_0.title]; preds: [director_0.name = "Walt Disney",movie_0.release_year > 2010]; havings: []; superlative: []; blanks: 1
TOT: 0.8979007600118484; NL: 0.8979007600118484; NL+AG: 0.9687724970127387; NL+QF: 0.8979007600118484; rels: []; projs: [movie_0.title]; preds: [director_0.name = "Walt Disney",tv_series_0.release_year > 2010]; havings: []; superlative: []; blanks: 1
TOT: 0.8979007600118484; NL: 0.8979007600118484; NL+AG: 0.9687724970127387; NL+QF: 0.8979007600118484; rels: []; projs: [movie_0.title]; preds: [director_0.name = "Walt Disney",actor_0.birth_year > 2010]; havings: []; superlative: []; blanks: 1
TOT: 0.8979007600118484; NL: 0.8979007600118484; NL+AG: 0.9687724970127387; NL+QF: 0.8979007600118484; rels: []; projs: [movie_0.title]; preds: [actor_0.name = "Walt Disney",movie_0.release_year > 2010]; havings: []; superlative: []; blanks: 1
TOT: 0.8979007600118484; NL: 0.8979007600118484; NL+AG: 0.9687724970127387; NL+QF: 0.8979007600118484; rels: []; projs: [movie_0.title]; preds: [actor_0.name = "Walt Disney",tv_series_0.release_year > 2010]; havings: []; superlative: []; blanks: 1
TOT: 0.8979007600118484; NL: 0.8979007600118484; NL+AG: 0.9687724970127387; NL+QF: 0.8979007600118484; rels: []; projs: [movie_0.title]; preds: [actor_0.name = "Walt Disney",actor_0.birth_year > 2010]; havings: []; superlative: []; blanks: 1
TOT: 0.8979007600118484; NL: 0.8979007600118484; NL+AG: 0.9687724970127387; NL+QF: 0.8979007600118484; rels: []; projs: [movie_0.title]; preds: [producer_0.name = "Walt Disney",movie_0.release_year > 2010]; havings: []; superlative: []; blanks: 1
TOT: 0.8979007600118484; NL: 0.8979007600118484; NL+AG: 0.9687724970127387; NL+QF: 0.8979007600118484; rels: []; projs: [movie_0.title]; preds: [producer_0.name = "Walt Disney",tv_series_0.release_year > 2010]; havings: []; superlative: []; blanks: 1
TOT: 0.8979007600118484; NL: 0.8979007600118484; NL+AG: 0.9687724970127387; NL+QF: 0.8979007600118484; rels: []; projs: [movie_0.title]; preds: [producer_0.name = "Walt Disney",actor_0.birth_year > 2010]; havings: []; superlative: []; blanks: 1
TOT: 0.8979007600118484; NL: 0.8979007600118484; NL+AG: 0.9687724970127387; NL+QF: 0.8979007600118484; rels: []; projs: [movie_0.title]; preds: [company_0.name = "Walt Disney",movie_0.release_year > 2010]; havings: []; superlative: []; blanks: 1
TOT: 0.8979007600118484; NL: 0.8979007600118484; NL+AG: 0.9687724970127387; NL+QF: 0.8979007600118484; rels: []; projs: [movie_0.title]; preds: [company_0.name = "Walt Disney",tv_series_0.release_year > 2010]; havings: []; superlative: []; blanks: 1
TOT: 0.8979007600118484; NL: 0.8979007600118484; NL+AG: 0.9687724970127387; NL+QF: 0.8979007600118484; rels: []; projs: [movie_0.title]; preds: [company_0.name = "Walt Disney",actor_0.birth_year > 2010]; havings: []; superlative: []; blanks: 1
TOT: 0.8979007600118484; NL: 0.8979007600118484; NL+AG: 0.9687724970127387; NL+QF: 0.8979007600118484; rels: []; projs: [movie_0.title]; preds: [writer_0.name = "Walt Disney",movie_0.release_year > 2010]; havings: []; superlative: []; blanks: 1
TOT: 0.8979007600118484; NL: 0.8979007600118484; NL+AG: 0.9687724970127387; NL+QF: 0.8979007600118484; rels: []; projs: [movie_0.title]; preds: [writer_0.name = "Walt Disney",tv_series_0.release_year > 2010]; havings: []; superlative: []; blanks: 1
TOT: 0.8979007600118484; NL: 0.8979007600118484; NL+AG: 0.9687724970127387; NL+QF: 0.8979007600118484; rels: []; projs: [movie_0.title]; preds: [writer_0.name = "Walt Disney",actor_0.birth_year > 2010]; havings: []; superlative: []; blanks: 1

===========
RESULTS
===========
TOT: 0.8368278053317484; TR: 0.8979007600118484; QF: 0.0; select movie_0.title from movie as movie_0, writer as writer_0, written_by as written_by_0 where movie_0.release_year > 2010 and writer_0.name = "Walt Disney" and movie_0.mid = written_by_0.msid and writer_0.wid = written_by_0.wid
TOT: 0.8368278053317484; TR: 0.8979007600118484; QF: 0.0; select movie_0.title from made_by as made_by_0, movie as movie_0, producer as producer_0 where movie_0.release_year > 2010 and producer_0.name = "Walt Disney" and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid
TOT: 0.8368278053317484; TR: 0.8979007600118484; QF: 0.0; select movie_0.title from actor as actor_0, cast as cast_0, movie as movie_0 where actor_0.name = "Walt Disney" and movie_0.release_year > 2010 and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid
TOT: 0.8368278053317484; TR: 0.8979007600118484; QF: 0.0; select movie_0.title from actor as actor_0, cast as cast_0, movie as movie_0 where actor_0.birth_year > 2010 and actor_0.name = "Walt Disney" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid
TOT: 0.8368278053317484; TR: 0.8979007600118484; QF: 0.0; select movie_0.title from company as company_0, copyright as copyright_0, movie as movie_0 where company_0.name = "Walt Disney" and movie_0.release_year > 2010 and company_0.id = copyright_0.cid and copyright_0.msid = movie_0.mid
TOT: 0.8368278053317484; TR: 0.8979007600118484; QF: 0.0; select movie_0.title from directed_by as directed_by_0, director as director_0, movie as movie_0 where director_0.name = "Walt Disney" and movie_0.release_year > 2010 and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid
TOT: 0.8202353794363157; TR: 0.8979007600118484; QF: 0.0; select movie_0.title from actor as actor_0, cast as cast_0, movie as movie_0, writer as writer_0, written_by as written_by_0 where actor_0.birth_year > 2010 and writer_0.name = "Walt Disney" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and movie_0.mid = written_by_0.msid and writer_0.wid = written_by_0.wid
TOT: 0.8202353794363157; TR: 0.8979007600118484; QF: 0.0; select movie_0.title from made_by as made_by_0, made_by as made_by_1, movie as movie_0, producer as producer_0, tv_series as tv_series_0 where producer_0.name = "Walt Disney" and tv_series_0.release_year > 2010 and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid and made_by_1.msid = tv_series_0.sid and made_by_1.pid = producer_0.pid
TOT: 0.8202353794363157; TR: 0.8979007600118484; QF: 0.0; select movie_0.title from directed_by as directed_by_0, directed_by as directed_by_1, director as director_0, movie as movie_0, tv_series as tv_series_0 where director_0.name = "Walt Disney" and tv_series_0.release_year > 2010 and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and directed_by_1.did = director_0.did and directed_by_1.msid = tv_series_0.sid
TOT: 0.8202353794363157; TR: 0.8979007600118484; QF: 0.0; select movie_0.title from actor as actor_0, cast as cast_0, company as company_0, copyright as copyright_0, movie as movie_0 where actor_0.birth_year > 2010 and company_0.name = "Walt Disney" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and company_0.id = copyright_0.cid and copyright_0.msid = movie_0.mid


04:38  INFO: ================
04:38  INFO: QUERY 129: Which producer has worked with the most number of directors?
04:38  INFO: ================
1300. ROOT: ROOT; NA; ; (0) 
1301. worked: NT; NA; ; (0) directed_by(0.71):| made_by(0.64):| written_by(0.63):| director.name(0.62):| director(0.62):| cast.role(0.62):| cast(0.62):| 
1302. Which: CMT; NA; ; (0) 
1303. producer: NT; NA; ; (0) producer.name(1.0):| producer(1.0):| movie.title(0.95):Producer; Producer Sam; The Producer; | director.name(0.95):producer; The Producer; senior producer; | writer.name(0.95):producer; The Producer; Producer Wardy; | cast.role(0.84):Producer 3; Producer 1; Producer 1; | keyword.keyword(0.79):tv-producer; opera-producer; film-producer; | 
1305. number of: FT; count; ; (0) 
1308. most: FT; max; ; (0) 
1309. directors: NT; NA; ; (0) director.name(1.0):| director(1.0):| movie.title(0.95):Director; Director; Director; | producer.name(0.95):Director; Co-Director; Director GT; | company.name(0.95):Directors; Directors; Director; | writer.name(0.95):Director; Director X; Director X.; | tv_series.title(0.88):Directors on Directo; The Directors; The Directors; | 
Which, WDT
producer, NN
has, VBZ
worked, VBN
with, IN
the, DT
most, JJS
number, NN
of, IN
directors, NNS
dobj(worked-4, Which-1)
nsubj(worked-4, producer-2)
aux(worked-4, has-3)
root(ROOT-0, worked-4)
case(number-8, with-5)
det(number-8, the-6)
amod(number-8, most-7)
nmod(worked-4, number-8)
case(directors-10, of-9)
nmod(number-8, directors-10)

PARSE TREE:(1300) ROOT ROOT
    (1302) Which CMT
        (1303) producer NT
            (1301) worked NT
                (1309) directors NT


===========
TRANSLATIONS
===========
TOT: 0.9168559143387582; NL: 0.9168559143387582; NL+AG: 0.9736485986733417; NL+QF: 0.9168559143387582; rels: [directed_by]; projs: [producer_0.name]; preds: []; havings: []; superlative: [count(distinct(director_0.name)) desc limit 1]; blanks: 0
TOT: 0.8979007600118484; NL: 0.8979007600118484; NL+AG: 0.9736485986733417; NL+QF: 0.8979007600118484; rels: []; projs: [producer_0.name]; preds: []; havings: []; superlative: [count(distinct(director_0.name)) desc limit 1]; blanks: 1
TOT: 0.8432739291701302; NL: 0.8432739291701302; NL+AG: 0.9439140838490361; NL+QF: 0.8432739291701302; rels: [directed_by]; projs: [writer_0.name]; preds: []; havings: []; superlative: [count(distinct(director_0.name)) desc limit 1]; blanks: 0
TOT: 0.8292897490977486; NL: 0.8292897490977486; NL+AG: 0.9439140838490361; NL+QF: 0.8292897490977486; rels: [directed_by]; projs: [director_0.name]; preds: []; havings: []; superlative: [count(distinct(director_0.name)) desc limit 1]; blanks: 0
TOT: 0.825840014836047; NL: 0.825840014836047; NL+AG: 0.9439140838490361; NL+QF: 0.825840014836047; rels: []; projs: [writer_0.name]; preds: []; havings: []; superlative: [count(distinct(director_0.name)) desc limit 1]; blanks: 1
TOT: 0.8121449448487525; NL: 0.8121449448487525; NL+AG: 0.9439140838490361; NL+QF: 0.8121449448487525; rels: []; projs: [director_0.name]; preds: []; havings: []; superlative: [count(distinct(director_0.name)) desc limit 1]; blanks: 1
TOT: 0.7956541194291353; NL: 0.7956541194291353; NL+AG: 0.9413127154984015; NL+QF: 0.7956541194291353; rels: [directed_by]; projs: [movie_0.mid]; preds: [movie_0.title = "Producer"]; havings: []; superlative: [count(distinct(director_0.name)) desc limit 1]; blanks: 0
TOT: 0.7956541194291353; NL: 0.7956541194291353; NL+AG: 0.9413127154984015; NL+QF: 0.7956541194291353; rels: [directed_by]; projs: [director_0.did]; preds: [director_0.name = "producer"]; havings: []; superlative: [count(distinct(director_0.name)) desc limit 1]; blanks: 0
TOT: 0.7956541194291353; NL: 0.7956541194291353; NL+AG: 0.9413127154984015; NL+QF: 0.7956541194291353; rels: [directed_by]; projs: [writer_0.wid]; preds: [writer_0.name = "producer"]; havings: []; superlative: [count(distinct(director_0.name)) desc limit 1]; blanks: 0
TOT: 0.7875334997845946; NL: 0.7875334997845946; NL+AG: 0.9355123222226686; NL+QF: 0.7875334997845946; rels: [directed_by]; projs: [producer_0.name]; preds: [movie_0.title = "Director"]; havings: []; superlative: [movie_0.mid desc limit 1]; blanks: 0
TOT: 0.7875334997845946; NL: 0.7875334997845946; NL+AG: 0.9355123222226686; NL+QF: 0.7875334997845946; rels: [directed_by]; projs: [producer_0.name]; preds: [producer_0.name = "Director"]; havings: []; superlative: [producer_0.pid desc limit 1]; blanks: 0
TOT: 0.7875334997845946; NL: 0.7875334997845946; NL+AG: 0.9355123222226686; NL+QF: 0.7875334997845946; rels: [directed_by]; projs: [producer_0.name]; preds: [company_0.name = "Directors"]; havings: []; superlative: [company_0.id desc limit 1]; blanks: 0
TOT: 0.7875334997845946; NL: 0.7875334997845946; NL+AG: 0.9355123222226686; NL+QF: 0.7875334997845946; rels: [directed_by]; projs: [producer_0.name]; preds: [writer_0.name = "Director"]; havings: []; superlative: [writer_0.wid desc limit 1]; blanks: 0

===========
RESULTS
===========
TOT: 0.8363472606141892; TR: 0.9168559143387582; QF: 0.0; select producer_0.name from directed_by as directed_by_0, director as director_0, made_by as made_by_0, producer as producer_0, tv_series as tv_series_0 where directed_by_0.did = director_0.did and directed_by_0.msid = tv_series_0.sid and made_by_0.msid = tv_series_0.sid and made_by_0.pid = producer_0.pid group by producer_0.name order by count(distinct(director_0.name)) desc limit 1
TOT: 0.8363472606141892; TR: 0.9168559143387582; QF: 0.0; select producer_0.name from directed_by as directed_by_0, director as director_0, made_by as made_by_0, movie as movie_0, producer as producer_0 where directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid group by producer_0.name order by count(distinct(director_0.name)) desc limit 1
TOT: 0.7738025732208553; TR: 0.8432739291701302; QF: 0.0; select writer_0.name from directed_by as directed_by_0, director as director_0, tv_series as tv_series_0, writer as writer_0, written_by as written_by_0 where directed_by_0.did = director_0.did and directed_by_0.msid = tv_series_0.sid and tv_series_0.sid = written_by_0.msid and writer_0.wid = written_by_0.wid group by writer_0.name order by count(distinct(director_0.name)) desc limit 1
TOT: 0.7738025732208553; TR: 0.8432739291701302; QF: 0.0; select writer_0.name from directed_by as directed_by_0, director as director_0, movie as movie_0, writer as writer_0, written_by as written_by_0 where directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and movie_0.mid = written_by_0.msid and writer_0.wid = written_by_0.wid group by writer_0.name order by count(distinct(director_0.name)) desc limit 1
TOT: 0.7619160201593309; TR: 0.8292897490977486; QF: 0.0; select director_0.name from directed_by as directed_by_0, directed_by as directed_by_1, director as director_0, director as director_1, movie as movie_0 where directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and directed_by_1.did = director_1.did and directed_by_1.msid = movie_0.mid group by director_0.name order by count(distinct(director_1.name)) desc limit 1
TOT: 0.7619160201593309; TR: 0.8292897490977486; QF: 0.0; select director_0.name from directed_by as directed_by_0, directed_by as directed_by_1, director as director_0, director as director_1, tv_series as tv_series_0 where directed_by_0.did = director_0.did and directed_by_0.msid = tv_series_0.sid and directed_by_1.did = director_1.did and directed_by_1.msid = tv_series_0.sid group by director_0.name order by count(distinct(director_1.name)) desc limit 1
TOT: 0.7499181608364424; TR: 0.7956541194291353; QF: 0.0; select movie_0.mid from directed_by as directed_by_0, director as director_0, movie as movie_0 where movie_0.title = "Producer" and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid group by movie_0.mid order by count(distinct(director_0.name)) desc limit 1
TOT: 0.7333257349410097; TR: 0.7956541194291353; QF: 0.0; select director_0.did from directed_by as directed_by_0, directed_by as directed_by_1, director as director_0, director as director_1, movie as movie_0 where director_0.name = "producer" and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and directed_by_1.did = director_1.did and directed_by_1.msid = movie_0.mid group by director_0.did order by count(distinct(director_1.name)) desc limit 1
TOT: 0.7333257349410097; TR: 0.7956541194291353; QF: 0.0; select writer_0.wid from directed_by as directed_by_0, director as director_0, tv_series as tv_series_0, writer as writer_0, written_by as written_by_0 where writer_0.name = "producer" and directed_by_0.did = director_0.did and directed_by_0.msid = tv_series_0.sid and tv_series_0.sid = written_by_0.msid and writer_0.wid = written_by_0.wid group by writer_0.wid order by count(distinct(director_0.name)) desc limit 1
TOT: 0.7333257349410097; TR: 0.7956541194291353; QF: 0.0; select writer_0.wid from directed_by as directed_by_0, director as director_0, movie as movie_0, writer as writer_0, written_by as written_by_0 where writer_0.name = "producer" and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and movie_0.mid = written_by_0.msid and writer_0.wid = written_by_0.wid group by writer_0.wid order by count(distinct(director_0.name)) desc limit 1


04:39  INFO: ================
04:39  INFO: QUERY 57: Who is the director of the tv series "House of Cards" from 2013?
04:39  INFO: ================
04:42  INFO: ====== RANKS ======
04:42  INFO: QUERY 0: 1
04:42  INFO: QUERY 1: 1
04:42  INFO: QUERY 2: 1
04:42  INFO: QUERY 3: 1
04:42  INFO: QUERY 4: 1
04:42  INFO: QUERY 5: 1
04:42  INFO: QUERY 6: 1
04:42  INFO: QUERY 7: 1
04:42  INFO: QUERY 8: 1
04:42  INFO: QUERY 9: 1
04:42  INFO: QUERY 10: 1
04:42  INFO: QUERY 11: 1
04:42  INFO: QUERY 12: 1
04:42  INFO: QUERY 13: 1
04:42  INFO: QUERY 14: 1
04:42  INFO: QUERY 15: 1
04:42  INFO: QUERY 16: 1
04:42  INFO: QUERY 17: 1
04:42  INFO: QUERY 18: 6
04:42  INFO: QUERY 19: 1
04:42  INFO: QUERY 20: 1
04:42  INFO: QUERY 21: 1
04:42  INFO: QUERY 22: -1
04:42  INFO: QUERY 23: 1
04:42  INFO: QUERY 24: 1
04:42  INFO: QUERY 25: -1
04:42  INFO: QUERY 26: 1
04:42  INFO: QUERY 27: 1
04:42  INFO: QUERY 28: 1
04:42  INFO: QUERY 29: 1
04:42  INFO: QUERY 30: 1
04:42  INFO: QUERY 31: 1
04:42  INFO: QUERY 32: 2
04:42  INFO: QUERY 33: 4
04:42  INFO: QUERY 34: 1
04:42  INFO: QUERY 35: 2
04:42  INFO: QUERY 36: 1
04:42  INFO: QUERY 37: 2
04:42  INFO: QUERY 38: 2
04:42  INFO: QUERY 39: 4
04:42  INFO: QUERY 40: 1
04:42  INFO: QUERY 41: 3
04:42  INFO: QUERY 42: 1
04:42  INFO: QUERY 43: 1
04:42  INFO: QUERY 44: -1
04:42  INFO: QUERY 45: 1
04:42  INFO: QUERY 46: 1
04:42  INFO: QUERY 47: 1
04:42  INFO: QUERY 48: 2
04:42  INFO: QUERY 49: 1
04:42  INFO: QUERY 50: 1
04:42  INFO: QUERY 51: 1
04:42  INFO: QUERY 52: 1
04:42  INFO: QUERY 53: 4
04:42  INFO: QUERY 54: 4
04:42  INFO: QUERY 55: 3
04:42  INFO: QUERY 56: 2
04:42  INFO: QUERY 57: 1
04:42  INFO: QUERY 58: 2
04:42  INFO: QUERY 59: 1
04:42  INFO: QUERY 60: 1
04:42  INFO: QUERY 61: -1
04:42  INFO: QUERY 62: 1
04:42  INFO: QUERY 63: 1
04:42  INFO: QUERY 64: 1
04:42  INFO: QUERY 65: 1
04:42  INFO: QUERY 66: -1
04:42  INFO: QUERY 67: -1
04:42  INFO: QUERY 68: -1
04:42  INFO: QUERY 69: 1
04:42  INFO: QUERY 70: 1
04:42  INFO: QUERY 71: 1
04:42  INFO: QUERY 72: 2
04:42  INFO: QUERY 73: 1
04:42  INFO: QUERY 74: 1
04:42  INFO: QUERY 75: 1
04:42  INFO: QUERY 76: 1
04:42  INFO: QUERY 77: 1
04:42  INFO: QUERY 78: 6
04:42  INFO: QUERY 79: 1
04:42  INFO: QUERY 80: 1
04:42  INFO: QUERY 81: 1
04:42  INFO: QUERY 82: 1
04:42  INFO: QUERY 83: -1
04:42  INFO: QUERY 84: 3
04:42  INFO: QUERY 85: -1
04:42  INFO: QUERY 86: -1
04:42  INFO: QUERY 87: 2
04:42  INFO: QUERY 88: 1
04:42  INFO: QUERY 89: 1
04:42  INFO: QUERY 90: 1
04:42  INFO: QUERY 91: 1
04:42  INFO: QUERY 92: 1
04:42  INFO: QUERY 93: 2
04:42  INFO: QUERY 94: 1
04:42  INFO: QUERY 95: 3
04:42  INFO: QUERY 96: 4
04:42  INFO: QUERY 97: 4
04:42  INFO: QUERY 98: -1
04:42  INFO: QUERY 99: 2
04:42  INFO: QUERY 100: 1
04:42  INFO: QUERY 101: 5
04:42  INFO: QUERY 102: 7
04:42  INFO: QUERY 103: -1
04:42  INFO: QUERY 104: 3
04:42  INFO: QUERY 105: 1
04:42  INFO: QUERY 106: 4
04:42  INFO: QUERY 107: 1
04:42  INFO: QUERY 108: 1
04:42  INFO: QUERY 109: 2
04:42  INFO: QUERY 110: -1
04:42  INFO: QUERY 111: 2
04:42  INFO: QUERY 112: -1
04:42  INFO: QUERY 113: 1
04:42  INFO: QUERY 114: -1
04:42  INFO: QUERY 115: 4
04:42  INFO: QUERY 116: 1
04:42  INFO: QUERY 117: 4
04:42  INFO: QUERY 118: -1
04:42  INFO: QUERY 119: -1
04:42  INFO: QUERY 120: 1
04:42  INFO: QUERY 121: -1
04:42  INFO: QUERY 122: 1
04:42  INFO: QUERY 123: 1
04:42  INFO: QUERY 124: -1
04:42  INFO: QUERY 125: -1
04:42  INFO: QUERY 126: 1
04:42  INFO: QUERY 127: -1
04:42  INFO: QUERY 128: -1
04:42  INFO: QUERY 129: 2
04:42  INFO: QUERY 130: -1
04:42  INFO: ==============
04:42  INFO: SUMMARY
04:42  INFO: ==============
04:42  INFO: Total queries: 131
04:42  INFO: Top 1: 76
04:42  INFO: Top 3: 95
04:42  INFO: Top 5: 105
