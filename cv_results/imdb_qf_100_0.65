00:00  INFO: ==============================
00:00  INFO: Reading relations info...
00:00  INFO: Read 16 relations/views/functions.
00:00  INFO: ==============================

00:00  INFO: ==============================
00:00  INFO: Reading edges info...
00:00  INFO: Read 21 FK-PK relationships.
00:00  INFO: Read 21 PK-FK relationships.
00:00  INFO: ==============================

00:00  INFO: ==============================
00:00  INFO: Reading relations info...
00:00  INFO: Read 7 relations/views/functions.
00:00  INFO: ==============================

00:00  INFO: ==============================
00:00  INFO: Reading edges info...
00:00  INFO: Read 7 FK-PK relationships.
00:00  INFO: Read 7 PK-FK relationships.
00:00  INFO: ==============================

00:00  INFO: ==============================
00:00  INFO: Reading relations info...
00:00  INFO: Read 15 relations/views/functions.
00:00  INFO: ==============================

00:00  INFO: ==============================
00:00  INFO: Reading edges info...
00:00  INFO: Read 19 FK-PK relationships.
00:00  INFO: Read 19 PK-FK relationships.
00:00  INFO: ==============================

00:00  INFO: ===== Parsing Results =====
00:00  INFO: Total Queries: 128
00:00  INFO: Correctly Parsed: 95/128

00:01  INFO: ===== Parsing Results =====
00:01  INFO: Total Queries: 196
00:01  INFO: Correctly Parsed: 184/196

00:01  INFO: ==============================
00:01  INFO: Generating templates using schema for join level: 6
00:04  INFO: Done generating 4979 templates.
00:04  INFO: ==============================

00:06  INFO: ===== FOLD 0 =====
00:06  INFO: ===== Parsing Results =====
00:06  INFO: Total Queries: 98
00:06  INFO: Correctly Parsed: 97/98

00:06  INFO: ================
00:06  INFO: QUERY 14: Find all actors from Italy
00:06  INFO: ================
Loading parser from serialized file edu/stanford/nlp/models/lexparser/englishPCFG.ser.gz ... done [1.4 sec].
00:12  INFO: ================
00:12  INFO: QUERY 123: which movie has the most number of actors from China?
00:12  INFO: ================
00:16  INFO: ================
00:16  INFO: QUERY 125: Find the name and budget of the latest movie by "Quentin Tarantino"
00:16  INFO: ================
20. ROOT: ROOT; NA; ; (0) 
21. Find: CMT; NA; ; (0) 
22. name: VTTEXT; NA; ; (0) movie.title(0.95):Name; Name; Names; | actor.name(0.95):name; No Name; Famous Names; | actor.name(0.81):| director.name(0.79):| tv_series.title(0.79):Same Name; No Names; Name This; | keyword.keyword(0.79):same-name; name-game; naming-names; | writer.name(0.79):| 
25. budget: NT; NA; ; (0) movie.budget(1.0):| tv_series.budget(1.0):| movie.title(0.95):Budget; Fudget's Budget; No Budget; | tv_series.title(0.95):Budget; Budget TV; No Budget Gourmet; | cast.role(0.95):Budgets; Budgets; Budgets; | keyword.keyword(0.95):budget; in-budget; no-budget; | company.name(0.71):Low Budget; Cero Budget; Budget Movies; | 
26. movie: NT; NA; ; (0) movie.title(1.0):| movie(1.0):| cast.role(0.95):Movie; Movie F; Movie AD; | company.name(0.95):Movie; Movies; Movie Movie; | keyword.keyword(0.83):movie-in-movie; b-movie; z-movie; | actor.name(0.76):| actor(0.76):| 
29. latest: FT; max; ; (0) 
30. Quentin Tarantino: VTTEXT; NA; ; (0) director.name(1.0):Quentin Tarantino; Quentin Tarantino; Quentin Tarrantino; | actor.name(1.0):Quentin Tarantino; Quentin Tarantino; Quentin Tarrantino; | producer.name(1.0):Quentin Tarantino; Quentin Tarantino; Quentin Tarrantino; | writer.name(1.0):Quentin Tarantino; Quentin Tarantino; Quentin Tarrantino; | cast.role(0.85):Quentin Tarrantino '; Quentin Tarrantino '; Quentin Tarrantino '; | movie.title(0.84):21 Years: Quentin Ta; 21 Years: Quentin Ta; Quentin Tarantino's ; | writer.birth_city(0.74):San Quentin; San Quentin; Saint-Quentin; | 
Find, VB
the, DT
name, NN
and, CC
budget, NN
of, IN
the, DT
latest, JJS
movie, NN
by, IN
Quentin Tarantino, NNP
root(ROOT-0, Find-1)
det(name-3, the-2)
dobj(Find-1, name-3)
cc(name-3, and-4)
conj(name-3, budget-5)
case(movie-9, of-6)
det(movie-9, the-7)
amod(movie-9, latest-8)
nmod(name-3, movie-9)
case(Quentin Tarantino-11, by-10)
nmod(Find-1, Quentin Tarantino-11)

PARSE TREE:(20) ROOT ROOT
    (21) Find CMT
        (22) name VTTEXT
            (26) movie NT
        (25) budget NT
        (30) Quentin Tarantino VTTEXT


===========
TRANSLATIONS
===========
TOT: 0.9174505626104981; NL: 0.9174505626104981; NL+AG: 0.9733138759953143; NL+QF: 0.9174505626104981; rels: []; projs: [actor_0.name]; preds: [director_0.name = "Quentin Tarantino"]; havings: []; superlative: [movie_0.title desc limit 1]; blanks: 1
TOT: 0.9174505626104981; NL: 0.9174505626104981; NL+AG: 0.9733138759953143; NL+QF: 0.9174505626104981; rels: []; projs: [actor_0.name]; preds: [actor_0.name = "Quentin Tarantino"]; havings: []; superlative: [movie_0.title desc limit 1]; blanks: 1
TOT: 0.9174505626104981; NL: 0.9174505626104981; NL+AG: 0.9733138759953143; NL+QF: 0.9174505626104981; rels: []; projs: [actor_0.name]; preds: [producer_0.name = "Quentin Tarantino"]; havings: []; superlative: [movie_0.title desc limit 1]; blanks: 1
TOT: 0.9174505626104981; NL: 0.9174505626104981; NL+AG: 0.9733138759953143; NL+QF: 0.9174505626104981; rels: []; projs: [actor_0.name]; preds: [writer_0.name = "Quentin Tarantino"]; havings: []; superlative: [movie_0.title desc limit 1]; blanks: 1
TOT: 0.8914326676246277; NL: 0.8879579826791157; NL+AG: 0.9556734954069785; NL+QF: 0.8914326676246277; rels: []; projs: [actor_0.name]; preds: [cast_0.role = "Quentin Tarrantino 'esque' Patient"]; havings: []; superlative: [movie_0.title desc limit 1]; blanks: 1
TOT: 0.8890594327029326; NL: 0.8862129230052637; NL+AG: 0.9547006262957899; NL+QF: 0.8890594327029326; rels: []; projs: [actor_0.name]; preds: [movie_0.title = "21 Years: Quentin Tarantino"]; havings: []; superlative: [movie_0.title desc limit 1]; blanks: 1
TOT: 0.883063826568098; NL: 0.8787564719717046; NL+AG: 0.951753035575193; NL+QF: 0.883063826568098; rels: []; projs: [actor_0.name]; preds: [director_0.name = "Quentin Tarantino"]; havings: []; superlative: [movie_0.title desc limit 1]; blanks: 1
TOT: 0.8828651300758494; NL: 0.8787564719717046; NL+AG: 0.951753035575193; NL+QF: 0.8828651300758494; rels: []; projs: [actor_0.name]; preds: [actor_0.name = "Quentin Tarantino"]; havings: []; superlative: [movie_0.title desc limit 1]; blanks: 1
TOT: 0.8822498437654105; NL: 0.8787564719717046; NL+AG: 0.951753035575193; NL+QF: 0.8822498437654105; rels: []; projs: [actor_0.name]; preds: [producer_0.name = "Quentin Tarantino"]; havings: []; superlative: [movie_0.title desc limit 1]; blanks: 1
TOT: 0.8822498437654105; NL: 0.8787564719717046; NL+AG: 0.951753035575193; NL+QF: 0.8822498437654105; rels: []; projs: [actor_0.name]; preds: [writer_0.name = "Quentin Tarantino"]; havings: []; superlative: [movie_0.title desc limit 1]; blanks: 1
TOT: 0.8796571017983323; NL: 0.8616655341946088; NL+AG: 0.9774777880588814; NL+QF: 0.8796571017983323; rels: []; projs: [actor_0.name]; preds: [cast_0.role = "Budgets",actor_0.name = "Quentin Tarantino"]; havings: []; superlative: [movie_0.title desc limit 1]; blanks: 0

===========
RESULTS
===========
TOT: 0.9127174660404578; TR: 0.9174505626104981; QF: 0.1399446061508608; select actor_0.name from actor as actor_0, cast as cast_0, directed_by as directed_by_0, director as director_0, movie as movie_0 where director_0.name = "Quentin Tarantino" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid order by movie_0.title desc limit 1
TOT: 0.9127156497266345; TR: 0.9174505626104981; QF: 0.12178146791922942; select actor_0.name from actor as actor_0, cast as cast_0, movie as movie_0, writer as writer_0, written_by as written_by_0 where writer_0.name = "Quentin Tarantino" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and movie_0.mid = written_by_0.msid and writer_0.wid = written_by_0.wid order by movie_0.title desc limit 1
TOT: 0.9127156497266345; TR: 0.9174505626104981; QF: 0.12178146791922942; select actor_0.name from actor as actor_0, actor as actor_1, cast as cast_0, cast as cast_1, movie as movie_0 where actor_1.name = "Quentin Tarantino" and actor_0.aid = cast_0.aid and actor_1.aid = cast_1.aid and cast_0.msid = movie_0.mid and cast_1.msid = movie_0.mid order by movie_0.title desc limit 1
TOT: 0.9127155127403332; TR: 0.9174505626104981; QF: 0.12041160490553078; select actor_0.name from actor as actor_0, cast as cast_0, made_by as made_by_0, movie as movie_0, producer as producer_0 where producer_0.name = "Quentin Tarantino" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid order by movie_0.title desc limit 1
TOT: 0.91202427059475; TR: 0.9174505626104981; QF: 0.06365327565625406; select actor_0.name from actor as actor_0, cast as cast_0, cast as cast_1, made_by as made_by_0, movie as movie_0, producer as producer_0, tv_series as tv_series_0 where producer_0.name = "Quentin Tarantino" and actor_0.aid = cast_0.aid and actor_0.aid = cast_1.aid and cast_0.msid = movie_0.mid and cast_1.msid = tv_series_0.sid and made_by_0.msid = tv_series_0.sid and made_by_0.pid = producer_0.pid order by movie_0.title desc limit 1
TOT: 0.9120239531344326; TR: 0.9174505626104981; QF: 0.06047867248165088; select actor_0.name from actor as actor_0, cast as cast_0, cast as cast_1, directed_by as directed_by_0, director as director_0, movie as movie_0, tv_series as tv_series_0 where director_0.name = "Quentin Tarantino" and actor_0.aid = cast_0.aid and actor_0.aid = cast_1.aid and cast_0.msid = movie_0.mid and cast_1.msid = tv_series_0.sid and directed_by_0.did = director_0.did and directed_by_0.msid = tv_series_0.sid order by movie_0.title desc limit 1
TOT: 0.9120237944042738; TR: 0.9174505626104981; QF: 0.058891370894349294; select actor_0.name from actor as actor_0, cast as cast_0, cast as cast_1, movie as movie_0, tv_series as tv_series_0, writer as writer_0, written_by as written_by_0 where writer_0.name = "Quentin Tarantino" and actor_0.aid = cast_0.aid and actor_0.aid = cast_1.aid and cast_0.msid = movie_0.mid and cast_1.msid = tv_series_0.sid and tv_series_0.sid = written_by_0.msid and writer_0.wid = written_by_0.wid order by movie_0.title desc limit 1
TOT: 0.9120236183515684; TR: 0.9174505626104981; QF: 0.05713084383970459; select actor_0.name from actor as actor_0, cast as cast_0, directed_by as directed_by_0, directed_by as directed_by_1, director as director_0, movie as movie_0, tv_series as tv_series_0 where director_0.name = "Quentin Tarantino" and actor_0.aid = cast_0.aid and cast_0.msid = tv_series_0.sid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and directed_by_1.did = director_0.did and directed_by_1.msid = tv_series_0.sid order by movie_0.title desc limit 1
TOT: 0.9120225947100653; TR: 0.9174505626104981; QF: 0.046894428808769026; select actor_0.name from actor as actor_0, cast as cast_0, movie as movie_0, tv_series as tv_series_0, writer as writer_0, written_by as written_by_0, written_by as written_by_1 where writer_0.name = "Quentin Tarantino" and actor_0.aid = cast_0.aid and cast_0.msid = tv_series_0.sid and movie_0.mid = written_by_0.msid and tv_series_0.sid = written_by_1.msid and writer_0.wid = written_by_0.wid and writer_0.wid = written_by_1.wid order by movie_0.title desc limit 1
TOT: 0.9120225294784932; TR: 0.9174505626104981; QF: 0.046242113087960154; select actor_0.name from actor as actor_0, cast as cast_0, made_by as made_by_0, made_by as made_by_1, movie as movie_0, producer as producer_0, tv_series as tv_series_0 where producer_0.name = "Quentin Tarantino" and actor_0.aid = cast_0.aid and cast_0.msid = tv_series_0.sid and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid and made_by_1.msid = tv_series_0.sid and made_by_1.pid = producer_0.pid order by movie_0.title desc limit 1


00:21  INFO: ================
00:21  INFO: QUERY 52: What company produced the series Scandal?
00:21  INFO: ================
00:25  INFO: ================
00:25  INFO: QUERY 93: How many movies did "Ronald Reagan" act in?
00:25  INFO: ================
00:29  INFO: ================
00:29  INFO: QUERY 36: Who are the actors born in "New York City" after 1990?
00:29  INFO: ================
00:39  INFO: ================
00:39  INFO: QUERY 65: Who acts as "Alan Turing" in the movie "The Imitation Game"?
00:39  INFO: ================
00:43  INFO: ================
00:43  INFO: QUERY 70: Give me the name of all the actors from Afghanistan
00:43  INFO: ================
00:44  INFO: ================
00:44  INFO: QUERY 40: Find all movies about Autism
00:44  INFO: ================
00:46  INFO: ================
00:46  INFO: QUERY 87: What is the number of movies in which "Jennifer Aniston" acted after 2010?
00:46  INFO: ================
90. ROOT: ROOT; NA; ; (0) 
91. What: CMT; NA; ; (0) 
93. number of: FT; count; ; (0) 
95. movies: NT; NA; ; (0) movie.title(1.0):| movie(1.0):| cast.role(0.95):Movie; Movie F; Movie AD; | company.name(0.95):Movies; Movie; Movie Movie; | tv_series.title(0.84):Movies, Movies, Movi; Movie Mob; Moon Movies; | keyword.keyword(0.83):movie-in-movie; movies-about-movies; b-movie; | actor.name(0.76):| 
97. acted: NT; NA; ; (0) movie.release_year(0.63):| tv_series.release_year(0.63):| actor.name(0.62):| actor(0.62):| genre.genre(0.62):| genre(0.62):| made_by(0.61):| 
100. Jennifer Aniston: VTTEXT; NA; ; (0) director.name(1.0):Jennifer Aniston; Jennifer Aniston; Jennifer Aniston Pit; | actor.name(1.0):Jennifer Aniston; Jennifer Aniston; Jennifer Aniston Pit; | producer.name(1.0):Jennifer Aniston; Jennifer Aniston; Jennifer Aniston Pit; | cast.role(0.91):Jennifer Faniston; Jennifer Faniston; Jennifer Tangston; | writer.name(0.84):Jennifer An; Jennifer An; Jennifer Piston; | movie.title(0.84):Dating Jennifer Anis; Dating Jennifer Anis; Jennifer; | company.name(0.74):Jennifer Alliston Le; Jennifer Alliston Le; Dear Jennifer; | 
101. 2010: VTNUM; NA; ; (0) movie.release_year(1.0):2012; 2014; 2015; | tv_series.release_year(1.0):2014; 2014; 2013; | actor.birth_year(1.0):2011; 2013; 2013; | 
102. after: OT; >; ; (0) 
What, WP
is, VBZ
the, DT
number, NN
of, IN
movies, NNS
in, IN
which, WDT
Jennifer Aniston, NNP
acted, VBD
after, IN
2010, CD
root(ROOT-0, What-1)
cop(What-1, is-2)
det(number-4, the-3)
nsubj(What-1, number-4)
case(movies-6, of-5)
nmod(number-4, movies-6)
case(which-8, in-7)
nmod(acted-10, which-8)
nsubj(acted-10, Jennifer Aniston-9)
acl:relcl(movies-6, acted-10)
case(2010-12, after-11)
nmod(acted-10, 2010-12)

PARSE TREE:(90) ROOT ROOT
    (91) What CMT
        (93) number of FT
            (95) movies NT
                (97) acted NT
                    (100) Jennifer Aniston VTTEXT
                    (101) 2010 VTNUM
                        (102) after OT


===========
TRANSLATIONS
===========
TOT: 0.8979007600118484; NL: 0.8979007600118484; NL+AG: 0.9685217674536027; NL+QF: 0.8979007600118484; rels: []; projs: [count(distinct(movie_0.title))]; preds: [director_0.name = "Jennifer Aniston",movie_0.release_year > 2010]; havings: []; superlative: []; blanks: 1
TOT: 0.8979007600118484; NL: 0.8979007600118484; NL+AG: 0.9685217674536027; NL+QF: 0.8979007600118484; rels: []; projs: [count(distinct(movie_0.title))]; preds: [director_0.name = "Jennifer Aniston",tv_series_0.release_year > 2010]; havings: []; superlative: []; blanks: 1
TOT: 0.8979007600118484; NL: 0.8979007600118484; NL+AG: 0.9685217674536027; NL+QF: 0.8979007600118484; rels: []; projs: [count(distinct(movie_0.title))]; preds: [director_0.name = "Jennifer Aniston",actor_0.birth_year > 2010]; havings: []; superlative: []; blanks: 1
TOT: 0.8979007600118484; NL: 0.8979007600118484; NL+AG: 0.9685217674536027; NL+QF: 0.8979007600118484; rels: []; projs: [count(distinct(movie_0.title))]; preds: [actor_0.name = "Jennifer Aniston",movie_0.release_year > 2010]; havings: []; superlative: []; blanks: 1
TOT: 0.8979007600118484; NL: 0.8979007600118484; NL+AG: 0.9685217674536027; NL+QF: 0.8979007600118484; rels: []; projs: [count(distinct(movie_0.title))]; preds: [actor_0.name = "Jennifer Aniston",tv_series_0.release_year > 2010]; havings: []; superlative: []; blanks: 1
TOT: 0.8979007600118484; NL: 0.8979007600118484; NL+AG: 0.9685217674536027; NL+QF: 0.8979007600118484; rels: []; projs: [count(distinct(movie_0.title))]; preds: [actor_0.name = "Jennifer Aniston",actor_0.birth_year > 2010]; havings: []; superlative: []; blanks: 1
TOT: 0.8979007600118484; NL: 0.8979007600118484; NL+AG: 0.9685217674536027; NL+QF: 0.8979007600118484; rels: []; projs: [count(distinct(movie_0.title))]; preds: [producer_0.name = "Jennifer Aniston",movie_0.release_year > 2010]; havings: []; superlative: []; blanks: 1
TOT: 0.8979007600118484; NL: 0.8979007600118484; NL+AG: 0.9685217674536027; NL+QF: 0.8979007600118484; rels: []; projs: [count(distinct(movie_0.title))]; preds: [producer_0.name = "Jennifer Aniston",tv_series_0.release_year > 2010]; havings: []; superlative: []; blanks: 1
TOT: 0.8979007600118484; NL: 0.8979007600118484; NL+AG: 0.9685217674536027; NL+QF: 0.8979007600118484; rels: []; projs: [count(distinct(movie_0.title))]; preds: [producer_0.name = "Jennifer Aniston",actor_0.birth_year > 2010]; havings: []; superlative: []; blanks: 1
TOT: 0.8780983407516854; NL: 0.8780983407516854; NL+AG: 0.9578894148328949; NL+QF: 0.8780983407516854; rels: []; projs: [count(distinct(movie_0.title))]; preds: [cast_0.role = "Jennifer Faniston",movie_0.release_year > 2010]; havings: []; superlative: []; blanks: 1
TOT: 0.8780983407516854; NL: 0.8780983407516854; NL+AG: 0.9578894148328949; NL+QF: 0.8780983407516854; rels: []; projs: [count(distinct(movie_0.title))]; preds: [cast_0.role = "Jennifer Faniston",tv_series_0.release_year > 2010]; havings: []; superlative: []; blanks: 1
TOT: 0.8780983407516854; NL: 0.8780983407516854; NL+AG: 0.9578894148328949; NL+QF: 0.8780983407516854; rels: []; projs: [count(distinct(movie_0.title))]; preds: [cast_0.role = "Jennifer Faniston",actor_0.birth_year > 2010]; havings: []; superlative: []; blanks: 1

===========
RESULTS
===========
TOT: 0.8946616109857981; TR: 0.8979007600118484; QF: 0.24090909090909088; select count(distinct(movie_0.title)) from directed_by as directed_by_0, director as director_0, movie as movie_0 where director_0.name = "Jennifer Aniston" and movie_0.release_year > 2010 and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid
TOT: 0.8946600773696666; TR: 0.8979007600118484; QF: 0.22557292959377842; select count(distinct(movie_0.title)) from actor as actor_0, cast as cast_0, movie as movie_0 where actor_0.name = "Jennifer Aniston" and movie_0.release_year > 2010 and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid
TOT: 0.8946600773696666; TR: 0.8979007600118484; QF: 0.22557292959377842; select count(distinct(movie_0.title)) from actor as actor_0, cast as cast_0, movie as movie_0 where actor_0.birth_year > 2010 and actor_0.name = "Jennifer Aniston" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid
TOT: 0.894655099985383; TR: 0.8979007600118484; QF: 0.17579908675799086; select count(distinct(movie_0.title)) from made_by as made_by_0, movie as movie_0, producer as producer_0 where movie_0.release_year > 2010 and producer_0.name = "Jennifer Aniston" and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid
TOT: 0.8933631614677946; TR: 0.8979007600118484; QF: 0.1399446061508608; select count(distinct(movie_0.title)) from actor as actor_0, cast as cast_0, directed_by as directed_by_0, director as director_0, movie as movie_0 where actor_0.birth_year > 2010 and director_0.name = "Jennifer Aniston" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid
TOT: 0.8933612081676701; TR: 0.8979007600118484; QF: 0.12041160490553078; select count(distinct(movie_0.title)) from actor as actor_0, cast as cast_0, made_by as made_by_0, movie as movie_0, producer as producer_0 where actor_0.birth_year > 2010 and producer_0.name = "Jennifer Aniston" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid
TOT: 0.89335672761324; TR: 0.8979007600118484; QF: 0.07560606060606061; select count(distinct(movie_0.title)) from directed_by as directed_by_0, directed_by as directed_by_1, director as director_0, movie as movie_0, tv_series as tv_series_0 where director_0.name = "Jennifer Aniston" and tv_series_0.release_year > 2010 and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and directed_by_1.did = director_0.did and directed_by_1.msid = tv_series_0.sid
TOT: 0.8933565341950673; TR: 0.8979007600118484; QF: 0.07367187887813353; select count(distinct(movie_0.title)) from actor as actor_0, cast as cast_0, cast as cast_1, movie as movie_0, tv_series as tv_series_0 where actor_0.name = "Jennifer Aniston" and tv_series_0.release_year > 2010 and actor_0.aid = cast_0.aid and actor_0.aid = cast_1.aid and cast_0.msid = movie_0.mid and cast_1.msid = tv_series_0.sid
TOT: 0.8933544409797822; TR: 0.8979007600118484; QF: 0.05273972602739726; select count(distinct(movie_0.title)) from made_by as made_by_0, made_by as made_by_1, movie as movie_0, producer as producer_0, tv_series as tv_series_0 where producer_0.name = "Jennifer Aniston" and tv_series_0.release_year > 2010 and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid and made_by_1.msid = tv_series_0.sid and made_by_1.pid = producer_0.pid
TOT: 0.8926705504376713; TR: 0.8979007600118484; QF: 0.0694974315004099; select count(distinct(movie_0.title)) from actor as actor_0, cast as cast_0, cast as cast_1, directed_by as directed_by_0, director as director_0, movie as movie_0, tv_series as tv_series_0 where director_0.name = "Jennifer Aniston" and tv_series_0.release_year > 2010 and actor_0.aid = cast_0.aid and actor_0.aid = cast_1.aid and cast_0.msid = movie_0.mid and cast_1.msid = tv_series_0.sid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid


00:49  INFO: ================
00:49  INFO: QUERY 55: Find all movies featuring "Kevin Spacey"
00:49  INFO: ================
104. ROOT: ROOT; NA; ; (0) 
105. Find: CMT; NA; ; (0) 
106. featuring: NT; NA; ; (0) tv_series.title(0.69):| tv_series(0.69):| movie.release_year(0.64):| tv_series.release_year(0.64):| made_by(0.64):| movie.title_aka(0.62):| tv_series.title_aka(0.62):| 
107. movies: NT; NA; all; (0) movie.title(1.0):| movie(1.0):| cast.role(0.95):Movie; Movie F; Movie AD; | company.name(0.95):Movies; Movie; Movie Movie; | tv_series.title(0.84):Movies, Movies, Movi; Movie Mob; Moon Movies; | keyword.keyword(0.83):movie-in-movie; movies-about-movies; b-movie; | actor.name(0.76):| 
109. Kevin Spacey: VTTEXT; NA; ; (0) director.name(1.0):Kevin Spacey; Kevin Spacey; Kevin Spacey Fowler; | actor.name(1.0):Kevin Spacey; Kevin Spacey Fowler; John Spacey; | producer.name(1.0):Kevin Spacey; Kevin Spacey; Kevin Spacey Fowler; | writer.name(1.0):Kevin Spacey; Kevin Spacey; Kevin Pacey; | cast.role(0.86):Kid Kevin Spacey; Kid Kevin Spacey; Kevin Spatz; | company.name(0.71):Kevin Spacey Foundat; Kevin Spacey Foundat; Kevin Spencer; | tv_series.title(0.7):Kevin Spencer; Kevin Spencer; Kevin Seal, Sporting; | 
Find, VB
all, DT
movies, NNS
featuring, VBG
Kevin Spacey, NNP
root(ROOT-0, Find-1)
det(movies-3, all-2)
nsubj(featuring-4, movies-3)
dep(Find-1, featuring-4)
dobj(featuring-4, Kevin Spacey-5)

PARSE TREE:(104) ROOT ROOT
    (105) Find CMT
        (107) movies NT
            (106) featuring NT
                (109) Kevin Spacey VTTEXT


===========
TRANSLATIONS
===========
TOT: 0.8662391053409028; NL: 0.8662391053409028; NL+AG: 0.9626264316569841; NL+QF: 0.8662391053409028; rels: []; projs: [movie_0.title]; preds: [director_0.name = "Kevin Spacey"]; havings: []; superlative: []; blanks: 1
TOT: 0.8662391053409028; NL: 0.8662391053409028; NL+AG: 0.9626264316569841; NL+QF: 0.8662391053409028; rels: []; projs: [movie_0.title]; preds: [actor_0.name = "Kevin Spacey"]; havings: []; superlative: []; blanks: 1
TOT: 0.8662391053409028; NL: 0.8662391053409028; NL+AG: 0.9626264316569841; NL+QF: 0.8662391053409028; rels: []; projs: [movie_0.title]; preds: [producer_0.name = "Kevin Spacey"]; havings: []; superlative: []; blanks: 1
TOT: 0.8662391053409028; NL: 0.8662391053409028; NL+AG: 0.9626264316569841; NL+QF: 0.8662391053409028; rels: []; projs: [movie_0.title]; preds: [writer_0.name = "Kevin Spacey"]; havings: []; superlative: []; blanks: 1
TOT: 0.8344522897223012; NL: 0.8344522897223012; NL+AG: 0.9890291262135922; NL+QF: 0.8344522897223012; rels: []; projs: [movie_0.title]; preds: [tv_series_0.title = "Kevin Spencer"]; havings: []; superlative: []; blanks: 0
TOT: 0.82915619758885; NL: 0.82915619758885; NL+AG: 0.9890291262135922; NL+QF: 0.82915619758885; rels: []; projs: [tv_series_0.title]; preds: [director_0.name = "Kevin Spacey"]; havings: []; superlative: []; blanks: 0
TOT: 0.82915619758885; NL: 0.82915619758885; NL+AG: 0.9890291262135922; NL+QF: 0.82915619758885; rels: []; projs: [tv_series_0.title]; preds: [actor_0.name = "Kevin Spacey"]; havings: []; superlative: []; blanks: 0
TOT: 0.82915619758885; NL: 0.82915619758885; NL+AG: 0.9890291262135922; NL+QF: 0.82915619758885; rels: []; projs: [tv_series_0.title]; preds: [producer_0.name = "Kevin Spacey"]; havings: []; superlative: []; blanks: 0
TOT: 0.82915619758885; NL: 0.82915619758885; NL+AG: 0.9890291262135922; NL+QF: 0.82915619758885; rels: []; projs: [tv_series_0.title]; preds: [writer_0.name = "Kevin Spacey"]; havings: []; superlative: []; blanks: 0
TOT: 0.82915619758885; NL: 0.82915619758885; NL+AG: 0.9890291262135922; NL+QF: 0.82915619758885; rels: []; projs: [tv_series_0.title]; preds: [director_0.name = "Kevin Spacey"]; havings: []; superlative: []; blanks: 0
TOT: 0.82915619758885; NL: 0.82915619758885; NL+AG: 0.9890291262135922; NL+QF: 0.82915619758885; rels: []; projs: [tv_series_0.title]; preds: [actor_0.name = "Kevin Spacey"]; havings: []; superlative: []; blanks: 0
TOT: 0.82915619758885; NL: 0.82915619758885; NL+AG: 0.9890291262135922; NL+QF: 0.82915619758885; rels: []; projs: [tv_series_0.title]; preds: [producer_0.name = "Kevin Spacey"]; havings: []; superlative: []; blanks: 0
TOT: 0.82915619758885; NL: 0.82915619758885; NL+AG: 0.9890291262135922; NL+QF: 0.82915619758885; rels: []; projs: [tv_series_0.title]; preds: [writer_0.name = "Kevin Spacey"]; havings: []; superlative: []; blanks: 0

===========
RESULTS
===========
TOT: 0.8633165728615619; TR: 0.8662391053409028; QF: 0.24090909090909088; select movie_0.title from directed_by as directed_by_0, director as director_0, movie as movie_0 where director_0.name = "Kevin Spacey" and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid
TOT: 0.8633150392454304; TR: 0.8662391053409028; QF: 0.22557292959377842; select movie_0.title from actor as actor_0, cast as cast_0, movie as movie_0 where actor_0.name = "Kevin Spacey" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid
TOT: 0.8633105184821513; TR: 0.8662391053409028; QF: 0.18036529680365296; select movie_0.title from movie as movie_0, writer as writer_0, written_by as written_by_0 where writer_0.name = "Kevin Spacey" and movie_0.mid = written_by_0.msid and writer_0.wid = written_by_0.wid
TOT: 0.8633100618611468; TR: 0.8662391053409028; QF: 0.17579908675799086; select movie_0.title from made_by as made_by_0, movie as movie_0, producer as producer_0 where producer_0.name = "Kevin Spacey" and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid
TOT: 0.8613250200017425; TR: 0.8662391053409028; QF: 0.06457431457431458; select movie_0.title from directed_by as directed_by_0, directed_by as directed_by_1, director as director_0, made_by as made_by_0, movie as movie_0, producer as producer_0, tv_series as tv_series_0 where producer_0.name = "Kevin Spacey" and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and directed_by_1.did = director_0.did and directed_by_1.msid = tv_series_0.sid and made_by_0.msid = tv_series_0.sid and made_by_0.pid = producer_0.pid
TOT: 0.8613249278978506; TR: 0.8662391053409028; QF: 0.06365327565625406; select movie_0.title from actor as actor_0, cast as cast_0, cast as cast_1, made_by as made_by_0, movie as movie_0, producer as producer_0, tv_series as tv_series_0 where producer_0.name = "Kevin Spacey" and actor_0.aid = cast_0.aid and actor_0.aid = cast_1.aid and cast_0.msid = movie_0.mid and cast_1.msid = tv_series_0.sid and made_by_0.msid = tv_series_0.sid and made_by_0.pid = producer_0.pid
TOT: 0.8613246104375333; TR: 0.8662391053409028; QF: 0.06047867248165088; select movie_0.title from actor as actor_0, cast as cast_0, cast as cast_1, directed_by as directed_by_0, director as director_0, movie as movie_0, tv_series as tv_series_0 where director_0.name = "Kevin Spacey" and actor_0.aid = cast_0.aid and actor_0.aid = cast_1.aid and cast_0.msid = movie_0.mid and cast_1.msid = tv_series_0.sid and directed_by_0.did = director_0.did and directed_by_0.msid = tv_series_0.sid
TOT: 0.8613245438112663; TR: 0.8662391053409028; QF: 0.05981240981240982; select movie_0.title from directed_by as directed_by_0, directed_by as directed_by_1, director as director_0, movie as movie_0, tv_series as tv_series_0, writer as writer_0, written_by as written_by_0 where writer_0.name = "Kevin Spacey" and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and directed_by_1.did = director_0.did and directed_by_1.msid = tv_series_0.sid and tv_series_0.sid = written_by_0.msid and writer_0.wid = written_by_0.wid
TOT: 0.8613244517073745; TR: 0.8662391053409028; QF: 0.058891370894349294; select movie_0.title from actor as actor_0, cast as cast_0, cast as cast_1, movie as movie_0, tv_series as tv_series_0, writer as writer_0, written_by as written_by_0 where writer_0.name = "Kevin Spacey" and actor_0.aid = cast_0.aid and actor_0.aid = cast_1.aid and cast_0.msid = movie_0.mid and cast_1.msid = tv_series_0.sid and tv_series_0.sid = written_by_0.msid and writer_0.wid = written_by_0.wid
TOT: 0.8613242756546691; TR: 0.8662391053409028; QF: 0.05713084383970459; select movie_0.title from actor as actor_0, cast as cast_0, directed_by as directed_by_0, directed_by as directed_by_1, director as director_0, movie as movie_0, tv_series as tv_series_0 where actor_0.name = "Kevin Spacey" and actor_0.aid = cast_0.aid and cast_0.msid = tv_series_0.sid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and directed_by_1.did = director_0.did and directed_by_1.msid = tv_series_0.sid


00:52  INFO: ================
00:52  INFO: QUERY 50: Find the producers of all movies in which "Kate Winslet" is an actor
00:52  INFO: ================
00:56  INFO: ================
00:56  INFO: QUERY 100: How many movies did "Matt Damon" direct?
00:56  INFO: ================
00:59  INFO: ================
00:59  INFO: QUERY 121: Who acted in the most number of movies directed by "Jim Jarmusch"
00:59  INFO: ================
133. ROOT: ROOT; NA; ; (0) 
134. acted: NT; NA; ; (0) movie.release_year(0.63):| tv_series.release_year(0.63):| actor.name(0.62):| actor(0.62):| genre.genre(0.62):| genre(0.62):| made_by(0.61):| 
135. Who: CMT; NA; ; (0) director.name(1.0):| actor.name(1.0):| producer.name(1.0):| writer.name(1.0):| 
136. number of: FT; count; ; (0) 
139. most: FT; max; ; (0) 
140. movies: NT; NA; ; (0) movie.title(1.0):| movie(1.0):| cast.role(0.95):Movie; Movie F; Movie AD; | company.name(0.95):Movies; Movie; Movie Movie; | tv_series.title(0.84):Movies, Movies, Movi; Movie Mob; Moon Movies; | keyword.keyword(0.83):movie-in-movie; movies-about-movies; b-movie; | actor.name(0.76):| 
142. directed: NT; NA; ; (0) directed_by(1.0):| director.name(0.72):| director(0.72):| written_by(0.68):| cast.role(0.67):| cast(0.67):| made_by(0.67):| 
143. Jim Jarmusch: VTTEXT; NA; ; (0) director.name(1.0):Jim Jarmusch; Jim Jarmusch; Tom Jarmusch; | actor.name(1.0):Jim Jarmusch; Jim Jarmusch; Tom Jarmusch; | producer.name(1.0):Jim Jarmusch; Jim Jarmusch; Tom Jarmusch; | writer.name(1.0):Jim Jarmusch; Jim Jarmusch; James R. Jarmusch; | movie.title(0.81):Behind Jim Jarmusch; Behind Jim Jarmusch; Focus on Jim Jarmusc; | cast.role(0.72):Jim Jarmusch's broth; Jim Jarmusch's broth; Jim Jamush; | tv_series.title(0.52):Earthworm Jim; Earthworm Jim; Jim Jam & Sunny; | 
Who, WP
acted, VBD
in, IN
the, DT
most, JJS
number, NN
of, IN
movies, NNS
directed, VBN
by, IN
Jim Jarmusch, NNP
nsubj(acted-2, Who-1)
root(ROOT-0, acted-2)
case(number-6, in-3)
det(number-6, the-4)
amod(number-6, most-5)
nmod(acted-2, number-6)
case(movies-8, of-7)
nmod(number-6, movies-8)
acl(movies-8, directed-9)
case(Jim Jarmusch-11, by-10)
nmod(directed-9, Jim Jarmusch-11)

PARSE TREE:(133) ROOT ROOT
    (135) Who CMT
        (134) acted NT
            (140) movies NT
                (142) directed NT
                    (143) Jim Jarmusch VTTEXT


===========
TRANSLATIONS
===========
TOT: 0.9307196706532547; NL: 0.9307196706532547; NL+AG: 0.9779685024679495; NL+QF: 0.9307196706532547; rels: [directed_by]; projs: [director_0.name]; preds: [director_0.name = "Jim Jarmusch"]; havings: []; superlative: [count(distinct(movie_0.title)) desc limit 1]; blanks: 1
TOT: 0.9307196706532547; NL: 0.9307196706532547; NL+AG: 0.9779685024679495; NL+QF: 0.9307196706532547; rels: [directed_by]; projs: [director_0.name]; preds: [actor_0.name = "Jim Jarmusch"]; havings: []; superlative: [count(distinct(movie_0.title)) desc limit 1]; blanks: 1
TOT: 0.9307196706532547; NL: 0.9307196706532547; NL+AG: 0.9779685024679495; NL+QF: 0.9307196706532547; rels: [directed_by]; projs: [director_0.name]; preds: [producer_0.name = "Jim Jarmusch"]; havings: []; superlative: [count(distinct(movie_0.title)) desc limit 1]; blanks: 1
TOT: 0.9307196706532547; NL: 0.9307196706532547; NL+AG: 0.9779685024679495; NL+QF: 0.9307196706532547; rels: [directed_by]; projs: [director_0.name]; preds: [writer_0.name = "Jim Jarmusch"]; havings: []; superlative: [count(distinct(movie_0.title)) desc limit 1]; blanks: 1
TOT: 0.9307196706532547; NL: 0.9307196706532547; NL+AG: 0.9779685024679495; NL+QF: 0.9307196706532547; rels: [directed_by]; projs: [actor_0.name]; preds: [director_0.name = "Jim Jarmusch"]; havings: []; superlative: [count(distinct(movie_0.title)) desc limit 1]; blanks: 1
TOT: 0.9307196706532547; NL: 0.9307196706532547; NL+AG: 0.9779685024679495; NL+QF: 0.9307196706532547; rels: [directed_by]; projs: [actor_0.name]; preds: [actor_0.name = "Jim Jarmusch"]; havings: []; superlative: [count(distinct(movie_0.title)) desc limit 1]; blanks: 1
TOT: 0.9307196706532547; NL: 0.9307196706532547; NL+AG: 0.9779685024679495; NL+QF: 0.9307196706532547; rels: [directed_by]; projs: [actor_0.name]; preds: [producer_0.name = "Jim Jarmusch"]; havings: []; superlative: [count(distinct(movie_0.title)) desc limit 1]; blanks: 1
TOT: 0.9307196706532547; NL: 0.9307196706532547; NL+AG: 0.9779685024679495; NL+QF: 0.9307196706532547; rels: [directed_by]; projs: [actor_0.name]; preds: [writer_0.name = "Jim Jarmusch"]; havings: []; superlative: [count(distinct(movie_0.title)) desc limit 1]; blanks: 1
TOT: 0.9307196706532547; NL: 0.9307196706532547; NL+AG: 0.9779685024679495; NL+QF: 0.9307196706532547; rels: [directed_by]; projs: [producer_0.name]; preds: [director_0.name = "Jim Jarmusch"]; havings: []; superlative: [count(distinct(movie_0.title)) desc limit 1]; blanks: 1
TOT: 0.9307196706532547; NL: 0.9307196706532547; NL+AG: 0.9779685024679495; NL+QF: 0.9307196706532547; rels: [directed_by]; projs: [producer_0.name]; preds: [actor_0.name = "Jim Jarmusch"]; havings: []; superlative: [count(distinct(movie_0.title)) desc limit 1]; blanks: 1
TOT: 0.9307196706532547; NL: 0.9307196706532547; NL+AG: 0.9779685024679495; NL+QF: 0.9307196706532547; rels: [directed_by]; projs: [producer_0.name]; preds: [producer_0.name = "Jim Jarmusch"]; havings: []; superlative: [count(distinct(movie_0.title)) desc limit 1]; blanks: 1
TOT: 0.9307196706532547; NL: 0.9307196706532547; NL+AG: 0.9779685024679495; NL+QF: 0.9307196706532547; rels: [directed_by]; projs: [producer_0.name]; preds: [writer_0.name = "Jim Jarmusch"]; havings: []; superlative: [count(distinct(movie_0.title)) desc limit 1]; blanks: 1
TOT: 0.9307196706532547; NL: 0.9307196706532547; NL+AG: 0.9779685024679495; NL+QF: 0.9307196706532547; rels: [directed_by]; projs: [writer_0.name]; preds: [director_0.name = "Jim Jarmusch"]; havings: []; superlative: [count(distinct(movie_0.title)) desc limit 1]; blanks: 1
TOT: 0.9307196706532547; NL: 0.9307196706532547; NL+AG: 0.9779685024679495; NL+QF: 0.9307196706532547; rels: [directed_by]; projs: [writer_0.name]; preds: [actor_0.name = "Jim Jarmusch"]; havings: []; superlative: [count(distinct(movie_0.title)) desc limit 1]; blanks: 1
TOT: 0.9307196706532547; NL: 0.9307196706532547; NL+AG: 0.9779685024679495; NL+QF: 0.9307196706532547; rels: [directed_by]; projs: [writer_0.name]; preds: [producer_0.name = "Jim Jarmusch"]; havings: []; superlative: [count(distinct(movie_0.title)) desc limit 1]; blanks: 1
TOT: 0.9307196706532547; NL: 0.9307196706532547; NL+AG: 0.9779685024679495; NL+QF: 0.9307196706532547; rels: [directed_by]; projs: [writer_0.name]; preds: [writer_0.name = "Jim Jarmusch"]; havings: []; superlative: [count(distinct(movie_0.title)) desc limit 1]; blanks: 1

===========
RESULTS
===========
TOT: 0.9258538830027868; TR: 0.9307196706532547; QF: 0.1399446061508608; select director_0.name from actor as actor_0, cast as cast_0, directed_by as directed_by_0, director as director_0, movie as movie_0 where actor_0.name = "Jim Jarmusch" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid group by director_0.name order by count(distinct(movie_0.title)) desc limit 1
TOT: 0.9258538830027868; TR: 0.9307196706532547; QF: 0.1399446061508608; select actor_0.name from actor as actor_0, cast as cast_0, directed_by as directed_by_0, director as director_0, movie as movie_0 where director_0.name = "Jim Jarmusch" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid group by actor_0.name order by count(distinct(movie_0.title)) desc limit 1
TOT: 0.925852526773803; TR: 0.9307196706532547; QF: 0.12638231631382316; select director_0.name from directed_by as directed_by_0, director as director_0, movie as movie_0, writer as writer_0, written_by as written_by_0 where writer_0.name = "Jim Jarmusch" and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and movie_0.mid = written_by_0.msid and writer_0.wid = written_by_0.wid group by director_0.name order by count(distinct(movie_0.title)) desc limit 1
TOT: 0.925852526773803; TR: 0.9307196706532547; QF: 0.12638231631382316; select writer_0.name from directed_by as directed_by_0, director as director_0, movie as movie_0, writer as writer_0, written_by as written_by_0 where director_0.name = "Jim Jarmusch" and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and movie_0.mid = written_by_0.msid and writer_0.wid = written_by_0.wid group by writer_0.name order by count(distinct(movie_0.title)) desc limit 1
TOT: 0.9258523897875017; TR: 0.9307196706532547; QF: 0.12501245330012453; select director_0.name from directed_by as directed_by_0, director as director_0, made_by as made_by_0, movie as movie_0, producer as producer_0 where producer_0.name = "Jim Jarmusch" and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid group by director_0.name order by count(distinct(movie_0.title)) desc limit 1
TOT: 0.9258523897875017; TR: 0.9307196706532547; QF: 0.12501245330012453; select producer_0.name from directed_by as directed_by_0, director as director_0, made_by as made_by_0, movie as movie_0, producer as producer_0 where director_0.name = "Jim Jarmusch" and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid group by producer_0.name order by count(distinct(movie_0.title)) desc limit 1
TOT: 0.9258472566599694; TR: 0.9307196706532547; QF: 0.07368117797695262; select director_0.name from directed_by as directed_by_0, directed_by as directed_by_1, director as director_0, director as director_1, movie as movie_0 where director_1.name = "Jim Jarmusch" and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and directed_by_1.did = director_1.did and directed_by_1.msid = movie_0.mid group by director_0.name order by count(distinct(movie_0.title)) desc limit 1
TOT: 0.9251607796609709; TR: 0.9307196706532547; QF: 0.06457431457431458; select director_0.name from directed_by as directed_by_0, directed_by as directed_by_1, director as director_0, made_by as made_by_0, movie as movie_0, producer as producer_0, tv_series as tv_series_0 where producer_0.name = "Jim Jarmusch" and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and directed_by_1.did = director_0.did and directed_by_1.msid = tv_series_0.sid and made_by_0.msid = tv_series_0.sid and made_by_0.pid = producer_0.pid group by director_0.name order by count(distinct(movie_0.title)) desc limit 1
TOT: 0.9251607796609709; TR: 0.9307196706532547; QF: 0.06457431457431458; select producer_0.name from directed_by as directed_by_0, directed_by as directed_by_1, director as director_0, made_by as made_by_0, movie as movie_0, producer as producer_0, tv_series as tv_series_0 where director_0.name = "Jim Jarmusch" and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and directed_by_1.did = director_0.did and directed_by_1.msid = tv_series_0.sid and made_by_0.msid = tv_series_0.sid and made_by_0.pid = producer_0.pid group by producer_0.name order by count(distinct(movie_0.title)) desc limit 1
TOT: 0.9251603700967617; TR: 0.9307196706532547; QF: 0.06047867248165088; select director_0.name from actor as actor_0, cast as cast_0, cast as cast_1, directed_by as directed_by_0, director as director_0, movie as movie_0, tv_series as tv_series_0 where actor_0.name = "Jim Jarmusch" and actor_0.aid = cast_0.aid and actor_0.aid = cast_1.aid and cast_0.msid = movie_0.mid and cast_1.msid = tv_series_0.sid and directed_by_0.did = director_0.did and directed_by_0.msid = tv_series_0.sid group by director_0.name order by count(distinct(movie_0.title)) desc limit 1


01:03  INFO: ================
01:03  INFO: QUERY 39: Which movies did "Alfred Hitchcock" direct?
01:03  INFO: ================
146. ROOT: ROOT; NA; ; (0) 
147. direct: NT; NA; ; (0) directed_by(1.0):| director.name(0.72):| director(0.72):| written_by(0.68):| cast.role(0.67):| cast(0.67):| made_by(0.67):| 
148. movies: NT; NA; ; (0) movie.title(1.0):| movie(1.0):| cast.role(0.95):Movie; Movie F; Movie AD; | company.name(0.95):Movies; Movie; Movie Movie; | tv_series.title(0.84):Movies, Movies, Movi; Movie Mob; Moon Movies; | keyword.keyword(0.83):movie-in-movie; movies-about-movies; b-movie; | actor.name(0.76):| 
151. Alfred Hitchcock: VTTEXT; NA; ; (0) director.name(1.0):Alfred Hitchcock; Alfred Hitchcock; Sir Alfred Hitchcock; | actor.name(1.0):Alfred Hitchcock; Alfred Hitchcock; Alfred Hitchcock; | producer.name(1.0):Alfred Hitchcock; Alfred Hitchcock; Sir Alfred Hitchcock; | writer.name(1.0):Alfred Hitchcock; Alfred Hitchcock; Sir Alfred Hitchcock; | movie.title(0.85):Alfred Hitchcock's G; Alfred Hitchcock's G; Alfred Hitchcock and; | tv_series.title(0.85):Ciclo Alfred Hitchco; Ciclo Alfred Hitchco; Alfred Hitchcock Pre; | cast.role(0.84):Alfred Hitchcock fig; Alfred Hitchcock fig; Alfred Hitchcock fig; | 
Which, WDT
movies, NN
did, VBD
Alfred Hitchcock, NNP
direct, VB
det(movies-2, Which-1)
dobj(direct-5, movies-2)
aux(direct-5, did-3)
nsubj(direct-5, Alfred Hitchcock-4)
root(ROOT-0, direct-5)

PARSE TREE:(146) ROOT ROOT
    (147) direct NT
        (148) movies NT
        (151) Alfred Hitchcock VTTEXT


===========
TRANSLATIONS
===========
TOT: 0.8121428649800173; NL: 0.5525910798980354; NL+AG: 0.939080334171806; NL+QF: 0.8121428649800173; rels: [cast]; projs: [movie_0.title]; preds: [actor_0.name = "Alfred Hitchcock"]; havings: []; superlative: []; blanks: 0
TOT: 0.7937005259840998; NL: 0.6875344335370706; NL+AG: 0.939080334171806; NL+QF: 0.7937005259840998; rels: []; projs: [movie_0.title]; preds: [actor_0.name = "Alfred Hitchcock"]; havings: []; superlative: []; blanks: 1
TOT: 0.7735872574402521; NL: 0.6299605249474366; NL+AG: 0.939080334171806; NL+QF: 0.7735872574402521; rels: [directed_by]; projs: [movie_0.title]; preds: [director_0.name = "Alfred Hitchcock"]; havings: []; superlative: []; blanks: 0
TOT: 0.7526840991457382; NL: 0.6299605249474366; NL+AG: 0.939080334171806; NL+QF: 0.7526840991457382; rels: [directed_by]; projs: [movie_0.title]; preds: [actor_0.name = "Alfred Hitchcock"]; havings: []; superlative: []; blanks: 0
TOT: 0.7483259764566532; NL: 0.563731458429221; NL+AG: 0.939080334171806; NL+QF: 0.7483259764566532; rels: [director]; projs: [movie_0.title]; preds: [director_0.name = "Alfred Hitchcock"]; havings: []; superlative: []; blanks: 0
TOT: 0.7394177869261628; NL: 0.6875344335370706; NL+AG: 0.939080334171806; NL+QF: 0.7394177869261628; rels: []; projs: [movie_0.title]; preds: [director_0.name = "Alfred Hitchcock"]; havings: []; superlative: []; blanks: 1
TOT: 0.7199357891220765; NL: 0.6875344335370706; NL+AG: 0.939080334171806; NL+QF: 0.7199357891220765; rels: []; projs: [movie_0.title]; preds: [writer_0.name = "Alfred Hitchcock"]; havings: []; superlative: []; blanks: 1
TOT: 0.7198020225112817; NL: 0.5525910798980354; NL+AG: 0.939080334171806; NL+QF: 0.7198020225112817; rels: [cast]; projs: [movie_0.title]; preds: [director_0.name = "Alfred Hitchcock"]; havings: []; superlative: []; blanks: 0
TOT: 0.7194481575612923; NL: 0.55297288261635; NL+AG: 0.939080334171806; NL+QF: 0.7194481575612923; rels: [written_by]; projs: [movie_0.title]; preds: [writer_0.name = "Alfred Hitchcock"]; havings: []; superlative: []; blanks: 0
TOT: 0.7089349431548148; NL: 0.5047810172022357; NL+AG: 0.939080334171806; NL+QF: 0.7089349431548148; rels: [cast]; projs: [actor_0.name]; preds: [actor_0.name = "Alfred Hitchcock"]; havings: []; superlative: []; blanks: 0
TOT: 0.7041078694647765; NL: 0.6875344335370706; NL+AG: 0.939080334171806; NL+QF: 0.7041078694647765; rels: []; projs: [movie_0.title]; preds: [producer_0.name = "Alfred Hitchcock"]; havings: []; superlative: []; blanks: 1

===========
RESULTS
===========
TOT: 0.8097597612881539; TR: 0.8121428649800173; QF: 0.22557292959377842; select movie_0.title from actor as actor_0, cast as cast_0, movie as movie_0 where actor_0.name = "Alfred Hitchcock" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid
TOT: 0.8077689976973925; TR: 0.8121428649800173; QF: 0.05713084383970459; select movie_0.title from actor as actor_0, cast as cast_0, directed_by as directed_by_0, directed_by as directed_by_1, director as director_0, movie as movie_0, tv_series as tv_series_0 where actor_0.name = "Alfred Hitchcock" and actor_0.aid = cast_0.aid and cast_0.msid = tv_series_0.sid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and directed_by_1.did = director_0.did and directed_by_1.msid = tv_series_0.sid
TOT: 0.8077682486727545; TR: 0.8121428649800173; QF: 0.049640597460569334; select movie_0.title from actor as actor_0, cast as cast_0, company as company_0, copyright as copyright_0, copyright as copyright_1, movie as movie_0, tv_series as tv_series_0 where actor_0.name = "Alfred Hitchcock" and actor_0.aid = cast_0.aid and cast_0.msid = tv_series_0.sid and company_0.id = copyright_0.cid and company_0.id = copyright_1.cid and copyright_0.msid = movie_0.mid and copyright_1.msid = tv_series_0.sid
TOT: 0.8077681543010228; TR: 0.8121428649800173; QF: 0.048696880142583006; select movie_0.title from actor as actor_0, cast as cast_0, keyword as keyword_0, movie as movie_0, tags as tags_0, tags as tags_1, tv_series as tv_series_0 where actor_0.name = "Alfred Hitchcock" and actor_0.aid = cast_0.aid and cast_0.msid = tv_series_0.sid and keyword_0.id = tags_0.kid and keyword_0.id = tags_1.kid and movie_0.mid = tags_0.msid and tags_1.msid = tv_series_0.sid
TOT: 0.8077679740558894; TR: 0.8121428649800173; QF: 0.046894428808769026; select movie_0.title from actor as actor_0, cast as cast_0, classification as classification_0, classification as classification_1, genre as genre_0, movie as movie_0, tv_series as tv_series_0 where actor_0.name = "Alfred Hitchcock" and actor_0.aid = cast_0.aid and cast_0.msid = tv_series_0.sid and classification_0.gid = genre_0.gid and classification_0.msid = movie_0.mid and classification_1.gid = genre_0.gid and classification_1.msid = tv_series_0.sid
TOT: 0.8077679740558894; TR: 0.8121428649800173; QF: 0.046894428808769026; select movie_0.title from actor as actor_0, cast as cast_0, movie as movie_0, tv_series as tv_series_0, writer as writer_0, written_by as written_by_0, written_by as written_by_1 where actor_0.name = "Alfred Hitchcock" and actor_0.aid = cast_0.aid and cast_0.msid = tv_series_0.sid and movie_0.mid = written_by_0.msid and tv_series_0.sid = written_by_1.msid and writer_0.wid = written_by_0.wid and writer_0.wid = written_by_1.wid
TOT: 0.8077679088243173; TR: 0.8121428649800173; QF: 0.046242113087960154; select movie_0.title from actor as actor_0, cast as cast_0, made_by as made_by_0, made_by as made_by_1, movie as movie_0, producer as producer_0, tv_series as tv_series_0 where actor_0.name = "Alfred Hitchcock" and actor_0.aid = cast_0.aid and cast_0.msid = tv_series_0.sid and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid and made_by_1.msid = tv_series_0.sid and made_by_1.pid = producer_0.pid
TOT: 0.7715912434399178; TR: 0.7735872574402521; QF: 0.24090909090909088; select movie_0.title from directed_by as directed_by_0, director as director_0, movie as movie_0 where director_0.name = "Alfred Hitchcock" and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid
TOT: 0.7695992810158891; TR: 0.7735872574402521; QF: 0.06047867248165088; select movie_0.title from actor as actor_0, cast as cast_0, cast as cast_1, directed_by as directed_by_0, director as director_0, movie as movie_0, tv_series as tv_series_0 where director_0.name = "Alfred Hitchcock" and actor_0.aid = cast_0.aid and actor_0.aid = cast_1.aid and cast_0.msid = movie_0.mid and cast_1.msid = tv_series_0.sid and directed_by_0.did = director_0.did and directed_by_0.msid = tv_series_0.sid
TOT: 0.769598624095143; TR: 0.7735872574402521; QF: 0.05390946502057613; select movie_0.title from company as company_0, copyright as copyright_0, copyright as copyright_1, directed_by as directed_by_0, director as director_0, movie as movie_0, tv_series as tv_series_0 where director_0.name = "Alfred Hitchcock" and company_0.id = copyright_0.cid and company_0.id = copyright_1.cid and copyright_0.msid = movie_0.mid and copyright_1.msid = tv_series_0.sid and directed_by_0.did = director_0.did and directed_by_0.msid = tv_series_0.sid


01:05  INFO: ================
01:05  INFO: QUERY 10: In what year was "Kevin Spacey" born?
01:05  INFO: ================
01:07  INFO: ================
01:07  INFO: QUERY 13: What is the nationality of "Kevin Spacey"?
01:07  INFO: ================
01:09  INFO: ================
01:09  INFO: QUERY 74: Find all actors from Canada who acted in "James Bond" movies
01:09  INFO: ================
01:14  INFO: ================
01:14  INFO: QUERY 83: What are the major roles in the movie "Daddy Long Legs"
01:14  INFO: ================
181. ROOT: ROOT; NA; ; (0) 
182. What: CMT; NA; ; (0) 
184. roles: VTTEXT; NA; ; (0) movie.title(0.95):Roles; Rolê; The Role; | tv_series.title(0.95):Roles; Role Call; Role Play; | cast.role(0.82):| actor.name(0.69):| actor(0.69):| cast(0.64):| director.name(0.64):| 
186. major: VTTEXT; NA; ; (0) movie.title(1.0):Major; Major!; Major Minors; | director.name(1.0):Major; Major; Major; | actor.name(1.0):Major; Major; Major; | producer.name(1.0):Major; Major; BP Major; | company.name(1.0):Major; Major Zeus; Major Networks; | writer.name(1.0):Major; JL Major; BP Major; | cast.role(0.94):Major Major; 'Major'; Maj. Major Major; | 
187. Daddy Long Legs: VTTEXT; NA; ; (0) movie.title(0.95):Daddy Long Legs; Daddy Long Legs; Daddy Long Legs; | director.name(0.95):Daddy Long Legs; Daddy Long Legs; Daddy Long Legs of W; | actor.name(0.95):Daddy Long Legs; Daddy Long Legs; Daddy Longlegs; | cast.role(0.86):Lady Long Legs; Long Leg; Sweet Daddy Longlegs; | producer.name(0.76):Long Legs; Long Legs; Din Long Lee; | writer.name(0.61):Adam Long; Adam Long; Cody Long; | tv_series.title(0.54):A Long Long Crime Ag; A Long Long Crime Ag; The Long Gray Line; | 
190. movie: NT; NA; ; (0) movie.title(1.0):| movie(1.0):| cast.role(0.95):Movie; Movie F; Movie AD; | company.name(0.95):Movie; Movies; Movie Movie; | keyword.keyword(0.83):movie-in-movie; b-movie; z-movie; | actor.name(0.76):| actor(0.76):| 
What, WP
are, VBP
the, DT
major, JJ
roles, NNS
in, IN
the, DT
movie, NN
Daddy Long Legs, NNS
root(ROOT-0, What-1)
cop(What-1, are-2)
det(roles-5, the-3)
amod(roles-5, major-4)
nsubj(What-1, roles-5)
case(Daddy Long Legs-9, in-6)
det(Daddy Long Legs-9, the-7)
compound(Daddy Long Legs-9, movie-8)
nmod(roles-5, Daddy Long Legs-9)

PARSE TREE:(181) ROOT ROOT
    (182) What CMT
        (184) roles VTTEXT
            (186) major VTTEXT
            (187) Daddy Long Legs VTTEXT
                (190) movie NT


===========
TRANSLATIONS
===========
TOT: 0.9364940320609404; NL: 0.9364940320609404; NL+AG: 0.991287907227616; NL+QF: 0.9364940320609404; rels: []; projs: [cast_0.role]; preds: [movie_0.title = "Major",movie_0.title = "Daddy Long Legs"]; havings: []; superlative: []; blanks: 0
TOT: 0.9364940320609404; NL: 0.9364940320609404; NL+AG: 0.991287907227616; NL+QF: 0.9364940320609404; rels: []; projs: [cast_0.role]; preds: [director_0.name = "Major",movie_0.title = "Daddy Long Legs"]; havings: []; superlative: []; blanks: 0
TOT: 0.9364940320609404; NL: 0.9364940320609404; NL+AG: 0.991287907227616; NL+QF: 0.9364940320609404; rels: []; projs: [cast_0.role]; preds: [actor_0.name = "Major",movie_0.title = "Daddy Long Legs"]; havings: []; superlative: []; blanks: 0
TOT: 0.9364940320609404; NL: 0.9364940320609404; NL+AG: 0.991287907227616; NL+QF: 0.9364940320609404; rels: []; projs: [cast_0.role]; preds: [producer_0.name = "Major",movie_0.title = "Daddy Long Legs"]; havings: []; superlative: []; blanks: 0
TOT: 0.9364940320609404; NL: 0.9364940320609404; NL+AG: 0.991287907227616; NL+QF: 0.9364940320609404; rels: []; projs: [cast_0.role]; preds: [company_0.name = "Major",movie_0.title = "Daddy Long Legs"]; havings: []; superlative: []; blanks: 0
TOT: 0.9364940320609404; NL: 0.9364940320609404; NL+AG: 0.991287907227616; NL+QF: 0.9364940320609404; rels: []; projs: [cast_0.role]; preds: [writer_0.name = "Major",movie_0.title = "Daddy Long Legs"]; havings: []; superlative: []; blanks: 0
TOT: 0.9203479259126857; NL: 0.9182894476021624; NL+AG: 0.9852484681293937; NL+QF: 0.9203479259126857; rels: []; projs: [cast_0.role]; preds: [cast_0.role = "Major Major",movie_0.title = "Daddy Long Legs"]; havings: []; superlative: []; blanks: 0
TOT: 0.9153722211188877; NL: 0.88222320096765; NL+AG: 0.9902481121898598; NL+QF: 0.9153722211188877; rels: []; projs: [actor_0.name]; preds: [movie_0.title = "Major",movie_0.title = "Daddy Long Legs"]; havings: []; superlative: []; blanks: 0
TOT: 0.9072945538781675; NL: 0.8650735916549619; NL+AG: 0.9842086730916376; NL+QF: 0.9072945538781675; rels: []; projs: [actor_0.name]; preds: [cast_0.role = "Major Major",movie_0.title = "Daddy Long Legs"]; havings: []; superlative: []; blanks: 0
TOT: 0.9028875378827855; NL: 0.88222320096765; NL+AG: 0.9902481121898598; NL+QF: 0.9028875378827855; rels: []; projs: [actor_0.name]; preds: [director_0.name = "Major",movie_0.title = "Daddy Long Legs"]; havings: []; superlative: []; blanks: 0
TOT: 0.9019654209422344; NL: 0.88222320096765; NL+AG: 0.9902481121898598; NL+QF: 0.9019654209422344; rels: []; projs: [actor_0.name]; preds: [actor_0.name = "Major",movie_0.title = "Daddy Long Legs"]; havings: []; superlative: []; blanks: 0

===========
RESULTS
===========
TOT: 0.9328674166982677; TR: 0.9364940320609404; QF: 0.22557292959377842; select cast_0.role from actor as actor_0, cast as cast_0, movie as movie_0 where actor_0.name = "Major" and movie_0.title = "Daddy Long Legs" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid
TOT: 0.932095875756968; TR: 0.9364940320609404; QF: 0.16784016636957813; select cast_0.role from cast as cast_0, directed_by as directed_by_0, director as director_0, movie as movie_0 where director_0.name = "Major" and movie_0.title = "Daddy Long Legs" and cast_0.msid = movie_0.mid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid
TOT: 0.9320938097262907; TR: 0.9364940320609404; QF: 0.14717985959816024; select cast_0.role from cast as cast_0, company as company_0, copyright as copyright_0, movie as movie_0 where company_0.name = "Major" and movie_0.title = "Daddy Long Legs" and cast_0.msid = movie_0.mid and company_0.id = copyright_0.cid and copyright_0.msid = movie_0.mid
TOT: 0.9320928485672627; TR: 0.9364940320609404; QF: 0.13756826931685917; select cast_0.role from cast as cast_0, movie as movie_0, writer as writer_0, written_by as written_by_0 where movie_0.title = "Daddy Long Legs" and writer_0.name = "Major" and cast_0.msid = movie_0.mid and movie_0.mid = written_by_0.msid and writer_0.wid = written_by_0.wid
TOT: 0.9320926202567604; TR: 0.9364940320609404; QF: 0.13528516429402812; select cast_0.role from cast as cast_0, made_by as made_by_0, movie as movie_0, producer as producer_0 where movie_0.title = "Daddy Long Legs" and producer_0.name = "Major" and cast_0.msid = movie_0.mid and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid
TOT: 0.9315638735236684; TR: 0.9364940320609404; QF: 0.07367187887813353; select cast_0.role from actor as actor_0, cast as cast_0, cast as cast_1, movie as movie_0, movie as movie_1 where movie_0.title = "Major" and movie_1.title = "Daddy Long Legs" and actor_0.aid = cast_0.aid and actor_0.aid = cast_1.aid and cast_0.msid = movie_0.mid and cast_1.msid = movie_1.mid
TOT: 0.9311810189781335; TR: 0.9364940320609404; QF: 0.10269162210338682; select cast_0.role from cast as cast_0, directed_by as directed_by_0, directed_by as directed_by_1, director as director_0, movie as movie_0, movie as movie_1 where movie_0.title = "Daddy Long Legs" and movie_1.title = "Major" and cast_0.msid = movie_0.mid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and directed_by_1.did = director_0.did and directed_by_1.msid = movie_1.mid
TOT: 0.9311810189781335; TR: 0.9364940320609404; QF: 0.10269162210338682; select cast_0.role from cast as cast_0, directed_by as directed_by_0, directed_by as directed_by_1, director as director_0, movie as movie_0, movie as movie_1 where movie_0.title = "Major" and movie_1.title = "Daddy Long Legs" and cast_0.msid = movie_0.mid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and directed_by_1.did = director_0.did and directed_by_1.msid = movie_1.mid
TOT: 0.9311766370103072; TR: 0.9364940320609404; QF: 0.058871943839264106; select cast_0.role from cast as cast_0, company as company_0, copyright as copyright_0, copyright as copyright_1, movie as movie_0, movie as movie_1 where movie_0.title = "Daddy Long Legs" and movie_1.title = "Major" and cast_0.msid = movie_0.mid and company_0.id = copyright_0.cid and company_0.id = copyright_1.cid and copyright_0.msid = movie_0.mid and copyright_1.msid = movie_1.mid
TOT: 0.9311766370103072; TR: 0.9364940320609404; QF: 0.058871943839264106; select cast_0.role from cast as cast_0, company as company_0, copyright as copyright_0, copyright as copyright_1, movie as movie_0, movie as movie_1 where movie_0.title = "Major" and movie_1.title = "Daddy Long Legs" and cast_0.msid = movie_0.mid and company_0.id = copyright_0.cid and company_0.id = copyright_1.cid and copyright_0.msid = movie_0.mid and copyright_1.msid = movie_1.mid


01:18  INFO: ================
01:18  INFO: QUERY 128: What is the latest movie by "Jim Jarmusch"
01:18  INFO: ================
192. ROOT: ROOT; NA; ; (0) 
193. What: CMT; NA; ; (0) 
195. movie: NT; NA; ; (0) movie.title(1.0):| movie(1.0):| cast.role(0.95):Movie; Movie F; Movie AD; | company.name(0.95):Movie; Movies; Movie Movie; | keyword.keyword(0.83):movie-in-movie; b-movie; z-movie; | actor.name(0.76):| actor(0.76):| 
197. latest: FT; max; ; (0) 
198. Jim Jarmusch: VTTEXT; NA; ; (0) director.name(1.0):Jim Jarmusch; Jim Jarmusch; Tom Jarmusch; | actor.name(1.0):Jim Jarmusch; Jim Jarmusch; Tom Jarmusch; | producer.name(1.0):Jim Jarmusch; Jim Jarmusch; Tom Jarmusch; | writer.name(1.0):Jim Jarmusch; Jim Jarmusch; James R. Jarmusch; | movie.title(0.81):Behind Jim Jarmusch; Behind Jim Jarmusch; Focus on Jim Jarmusc; | cast.role(0.72):Jim Jarmusch's broth; Jim Jarmusch's broth; Jim Jamush; | tv_series.title(0.52):Earthworm Jim; Earthworm Jim; Jim Jam & Sunny; | 
What, WP
is, VBZ
the, DT
latest, JJS
movie, NN
by, IN
Jim Jarmusch, NNP
root(ROOT-0, What-1)
cop(What-1, is-2)
det(movie-5, the-3)
amod(movie-5, latest-4)
nsubj(What-1, movie-5)
case(Jim Jarmusch-7, by-6)
nmod(movie-5, Jim Jarmusch-7)

PARSE TREE:(192) ROOT ROOT
    (193) What CMT
        (195) movie NT
            (198) Jim Jarmusch VTTEXT


===========
TRANSLATIONS
===========

===========
RESULTS
===========


01:19  INFO: ================
01:19  INFO: QUERY 114: Find all movies that star both "Angelina Jolie" and "Brad Pitt"
01:19  INFO: ================
201. ROOT: ROOT; NA; ; (0) 
202. Find: CMT; NA; ; (0) 
203. movies: NT; NA; all; (0) movie.title(1.0):| movie(1.0):| cast.role(0.95):Movie; Movie F; Movie AD; | company.name(0.95):Movies; Movie; Movie Movie; | tv_series.title(0.84):Movies, Movies, Movi; Movie Mob; Moon Movies; | keyword.keyword(0.83):movie-in-movie; movies-about-movies; b-movie; | actor.name(0.76):| 
205. star: NT; NA; ; (0) actor.name(0.73):| actor(0.73):| writer.name(0.69):| writer(0.69):| cast.role(0.66):| cast(0.66):| producer.name(0.65):| 
207. Angelina Jolie: VTTEXT; NA; ; (0) director.name(1.0):Angelina Jolie; Angelina Jolie; Angelina Jolie Pitt; | actor.name(1.0):Angelina Jolie; Angelina Jolie; Angelina Jolie Pitt; | producer.name(1.0):Angelina Jolie; Angelina Jolie; Angelina Jolie Pitt; | writer.name(1.0):Angelina Jolie; Angelina Jolie; Angelina Jolie Pitt; | cast.role(0.82):Angelina Jones; Angelina John; Angelina Jones; | movie.title(0.78):Angelina; Angelina; Angelina; | keyword.keyword(0.62):referece-to-angelina; referece-to-angelina; | 
210. Brad Pitt: VTTEXT; NA; ; (0) actor.name(1.0):Brad Pitt; Brad Pitt; bRad sPitt; | cast.role(1.0):Brad Pitt'; Brad Pitt'; Brad Pitt #1; | producer.name(1.0):Brad Pitt; Brad Pitt; Mad Pitt; | director.name(0.78):Brad Pruitt; Brad Pruitt; Brad Witty; | writer.name(0.78):Brad Pruitt; Brad Pruitt; Brad Witt; | movie.title(0.72):Brad Pitt Video Port; Brad Pitt Video Port; Brad; | actor.birth_city(0.61):Brad; Brad; Pitt Meadows; | 
Find, VB
all, DT
movies, NNS
that, WDT
star, VB
both, CC
Angelina Jolie, NNP
and, CC
Brad Pitt, NNP
root(ROOT-0, Find-1)
det(movies-3, all-2)
dobj(Find-1, movies-3)
nsubj(star-5, that-4)
acl:relcl(movies-3, star-5)
cc:preconj(Angelina Jolie-7, both-6)
dobj(star-5, Angelina Jolie-7)
cc(Angelina Jolie-7, and-8)
conj(Angelina Jolie-7, Brad Pitt-9)

PARSE TREE:(201) ROOT ROOT
    (202) Find CMT
        (203) movies NT
            (205) star NT
                (207) Angelina Jolie VTTEXT
                (210) Brad Pitt VTTEXT


===========
TRANSLATIONS
===========
TOT: 1.0; NL: 1.0; NL+AG: 1.0; NL+QF: 1.0; rels: []; projs: [movie_0.title]; preds: [director_0.name = "Angelina Jolie",actor_0.name = "Brad Pitt"]; havings: []; superlative: []; blanks: 0
TOT: 1.0; NL: 1.0; NL+AG: 1.0; NL+QF: 1.0; rels: []; projs: [movie_0.title]; preds: [actor_0.name = "Angelina Jolie",actor_0.name = "Brad Pitt"]; havings: []; superlative: []; blanks: 0
TOT: 1.0; NL: 1.0; NL+AG: 1.0; NL+QF: 1.0; rels: []; projs: [movie_0.title]; preds: [actor_0.name = "Angelina Jolie",cast_0.role = "Brad Pitt'"]; havings: []; superlative: []; blanks: 0
TOT: 1.0; NL: 1.0; NL+AG: 1.0; NL+QF: 1.0; rels: []; projs: [movie_0.title]; preds: [actor_0.name = "Angelina Jolie",producer_0.name = "Brad Pitt"]; havings: []; superlative: []; blanks: 0
TOT: 1.0; NL: 1.0; NL+AG: 1.0; NL+QF: 1.0; rels: []; projs: [movie_0.title]; preds: [actor_0.name = "Angelina Jolie",actor_0.name = "Brad Pitt"]; havings: []; superlative: []; blanks: 0
TOT: 1.0; NL: 1.0; NL+AG: 1.0; NL+QF: 1.0; rels: []; projs: [movie_0.title]; preds: [producer_0.name = "Angelina Jolie",actor_0.name = "Brad Pitt"]; havings: []; superlative: []; blanks: 0
TOT: 1.0; NL: 1.0; NL+AG: 1.0; NL+QF: 1.0; rels: []; projs: [movie_0.title]; preds: [writer_0.name = "Angelina Jolie",actor_0.name = "Brad Pitt"]; havings: []; superlative: []; blanks: 0
TOT: 1.0; NL: 1.0; NL+AG: 1.0; NL+QF: 1.0; rels: []; projs: [movie_0.title]; preds: [writer_0.name = "Angelina Jolie",actor_0.name = "Brad Pitt"]; havings: []; superlative: []; blanks: 0
TOT: 1.0; NL: 1.0; NL+AG: 1.0; NL+QF: 1.0; rels: []; projs: [movie_0.title]; preds: [writer_0.name = "Angelina Jolie",cast_0.role = "Brad Pitt'"]; havings: []; superlative: []; blanks: 0
TOT: 1.0; NL: 1.0; NL+AG: 1.0; NL+QF: 1.0; rels: []; projs: [movie_0.title]; preds: [writer_0.name = "Angelina Jolie",producer_0.name = "Brad Pitt"]; havings: []; superlative: []; blanks: 0
TOT: 1.0; NL: 1.0; NL+AG: 1.0; NL+QF: 1.0; rels: []; projs: [movie_0.title]; preds: [director_0.name = "Angelina Jolie",cast_0.role = "Brad Pitt'"]; havings: []; superlative: []; blanks: 0
TOT: 1.0; NL: 1.0; NL+AG: 1.0; NL+QF: 1.0; rels: []; projs: [movie_0.title]; preds: [actor_0.name = "Angelina Jolie",cast_0.role = "Brad Pitt'"]; havings: []; superlative: []; blanks: 0
TOT: 1.0; NL: 1.0; NL+AG: 1.0; NL+QF: 1.0; rels: []; projs: [movie_0.title]; preds: [producer_0.name = "Angelina Jolie",cast_0.role = "Brad Pitt'"]; havings: []; superlative: []; blanks: 0
TOT: 1.0; NL: 1.0; NL+AG: 1.0; NL+QF: 1.0; rels: []; projs: [movie_0.title]; preds: [writer_0.name = "Angelina Jolie",cast_0.role = "Brad Pitt'"]; havings: []; superlative: []; blanks: 0
TOT: 1.0; NL: 1.0; NL+AG: 1.0; NL+QF: 1.0; rels: []; projs: [movie_0.title]; preds: [director_0.name = "Angelina Jolie",producer_0.name = "Brad Pitt"]; havings: []; superlative: []; blanks: 0
TOT: 1.0; NL: 1.0; NL+AG: 1.0; NL+QF: 1.0; rels: []; projs: [movie_0.title]; preds: [actor_0.name = "Angelina Jolie",producer_0.name = "Brad Pitt"]; havings: []; superlative: []; blanks: 0
TOT: 1.0; NL: 1.0; NL+AG: 1.0; NL+QF: 1.0; rels: []; projs: [movie_0.title]; preds: [producer_0.name = "Angelina Jolie",actor_0.name = "Brad Pitt"]; havings: []; superlative: []; blanks: 0
TOT: 1.0; NL: 1.0; NL+AG: 1.0; NL+QF: 1.0; rels: []; projs: [movie_0.title]; preds: [producer_0.name = "Angelina Jolie",cast_0.role = "Brad Pitt'"]; havings: []; superlative: []; blanks: 0
TOT: 1.0; NL: 1.0; NL+AG: 1.0; NL+QF: 1.0; rels: []; projs: [movie_0.title]; preds: [producer_0.name = "Angelina Jolie",producer_0.name = "Brad Pitt"]; havings: []; superlative: []; blanks: 0
TOT: 1.0; NL: 1.0; NL+AG: 1.0; NL+QF: 1.0; rels: []; projs: [movie_0.title]; preds: [producer_0.name = "Angelina Jolie",producer_0.name = "Brad Pitt"]; havings: []; superlative: []; blanks: 0
TOT: 1.0; NL: 1.0; NL+AG: 1.0; NL+QF: 1.0; rels: []; projs: [movie_0.title]; preds: [writer_0.name = "Angelina Jolie",producer_0.name = "Brad Pitt"]; havings: []; superlative: []; blanks: 0

===========
RESULTS
===========
TOT: 0.9957383249579367; TR: 1.0; QF: 0.22557292959377842; select movie_0.title from actor as actor_0, cast as cast_0, movie as movie_0 where actor_0.name = "Angelina Jolie" and cast_0.role = "Brad Pitt'" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid
TOT: 0.994966784016637; TR: 1.0; QF: 0.16784016636957813; select movie_0.title from cast as cast_0, directed_by as directed_by_0, director as director_0, movie as movie_0 where cast_0.role = "Brad Pitt'" and director_0.name = "Angelina Jolie" and cast_0.msid = movie_0.mid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid
TOT: 0.9949637568269317; TR: 1.0; QF: 0.13756826931685917; select movie_0.title from cast as cast_0, movie as movie_0, writer as writer_0, written_by as written_by_0 where cast_0.role = "Brad Pitt'" and writer_0.name = "Angelina Jolie" and cast_0.msid = movie_0.mid and movie_0.mid = written_by_0.msid and writer_0.wid = written_by_0.wid
TOT: 0.9949635285164294; TR: 1.0; QF: 0.13528516429402812; select movie_0.title from cast as cast_0, made_by as made_by_0, movie as movie_0, producer as producer_0 where cast_0.role = "Brad Pitt'" and producer_0.name = "Angelina Jolie" and cast_0.msid = movie_0.mid and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid
TOT: 0.9944414090560647; TR: 1.0; QF: 0.1399446061508608; select movie_0.title from actor as actor_0, cast as cast_0, directed_by as directed_by_0, director as director_0, movie as movie_0 where actor_0.name = "Brad Pitt" and director_0.name = "Angelina Jolie" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid
TOT: 0.9944399158407796; TR: 1.0; QF: 0.12501245330012453; select movie_0.title from directed_by as directed_by_0, director as director_0, made_by as made_by_0, movie as movie_0, producer as producer_0 where director_0.name = "Angelina Jolie" and producer_0.name = "Brad Pitt" and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid
TOT: 0.9944395927422415; TR: 1.0; QF: 0.12178146791922942; select movie_0.title from actor as actor_0, cast as cast_0, movie as movie_0, writer as writer_0, written_by as written_by_0 where actor_0.name = "Brad Pitt" and writer_0.name = "Angelina Jolie" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and movie_0.mid = written_by_0.msid and writer_0.wid = written_by_0.wid
TOT: 0.9944395927422415; TR: 1.0; QF: 0.12178146791922942; select movie_0.title from actor as actor_0, actor as actor_1, cast as cast_0, cast as cast_1, movie as movie_0 where actor_0.name = "Angelina Jolie" and actor_1.name = "Brad Pitt" and actor_0.aid = cast_0.aid and actor_1.aid = cast_1.aid and cast_0.msid = movie_0.mid and cast_1.msid = movie_0.mid
TOT: 0.9944394557559402; TR: 1.0; QF: 0.12041160490553078; select movie_0.title from actor as actor_0, cast as cast_0, made_by as made_by_0, movie as movie_0, producer as producer_0 where actor_0.name = "Angelina Jolie" and producer_0.name = "Brad Pitt" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid
TOT: 0.9944394557559402; TR: 1.0; QF: 0.12041160490553078; select movie_0.title from actor as actor_0, cast as cast_0, made_by as made_by_0, movie as movie_0, producer as producer_0 where actor_0.name = "Brad Pitt" and producer_0.name = "Angelina Jolie" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid


01:22  INFO: ================
01:22  INFO: QUERY 49: Find the directors of all movies featuring "Kate Winslet"
01:22  INFO: ================
01:24  INFO: ================
01:24  INFO: QUERY 28: Find all comedies produced in year 2015
01:24  INFO: ================
222. ROOT: ROOT; NA; ; (0) 
223. Find: CMT; NA; ; (0) 
224. comedies: VTTEXT; NA; all; (0) movie.title(0.95):Comedy; 2N Comedy; Comedy of a Sexomedy; | cast.role(0.95):Comedy; Comedy; Comedy; | genre.genre(0.95):Comedy; Comedy; Commercial; | tv_series.title(0.87):/Comedy; Comedy.TV; Comedy Homecoming; | company.name(0.82):Comedy.com; Comus Comedies; Cub Comedies; | actor.name(0.77):Comedy Dom; Kid Comedy; Comedy King; | movie.title(0.76):| 
226. produced: NT; NA; ; (0) made_by(0.74):| directed_by(0.69):| producer.name(0.68):| producer(0.68):| cast.role(0.63):| cast(0.63):| written_by(0.63):| 
227. year: NT; NA; ; (0) movie.release_year(1.0):| director.birth_year(1.0):| tv_series.release_year(1.0):| actor.birth_year(1.0):| producer.birth_year(1.0):| writer.birth_year(1.0):| movie.title(0.95):Year; Years; Years; | 
229. 2015: VTNUM; NA; ; (0) movie.release_year(1.0):2015; 2015; 2015; | tv_series.release_year(1.0):2015; 2015; 2015; | 
Find, VB
all, DT
comedies, NNS
produced, VBN
in, IN
year, NN
2015, CD
root(ROOT-0, Find-1)
det(comedies-3, all-2)
dobj(Find-1, comedies-3)
acl(comedies-3, produced-4)
case(year-6, in-5)
nmod(produced-4, year-6)
nummod(year-6, 2015-7)

PARSE TREE:(222) ROOT ROOT
    (223) Find CMT
        (224) comedies VTTEXT
            (226) produced NT
                (227) year NT
                    (229) 2015 VTNUM


===========
TRANSLATIONS
===========
TOT: 0.9081220672421095; NL: 0.8895179703361841; NL+AG: 0.9557515854134285; NL+QF: 0.9081220672421095; rels: [directed_by]; projs: [movie_0.title]; preds: [genre_0.genre = "Comedy",movie_0.release_year = 2015]; havings: []; superlative: []; blanks: 0
TOT: 0.9075525153565824; NL: 0.9047804921433703; NL+AG: 0.9557515854134285; NL+QF: 0.9075525153565824; rels: [made_by]; projs: [movie_0.title]; preds: [genre_0.genre = "Comedy",movie_0.release_year = 2015]; havings: []; superlative: []; blanks: 0
TOT: 0.906925886144075; NL: 0.9047804921433703; NL+AG: 0.9557515854134285; NL+QF: 0.906925886144075; rels: [made_by]; projs: [movie_0.title]; preds: [genre_0.genre = "Comedy",tv_series_0.release_year = 2015]; havings: []; superlative: []; blanks: 0
TOT: 0.8994494073241177; NL: 0.8895179703361841; NL+AG: 0.9557515854134285; NL+QF: 0.8994494073241177; rels: [directed_by]; projs: [movie_0.title]; preds: [genre_0.genre = "Comedy",tv_series_0.release_year = 2015]; havings: []; superlative: []; blanks: 0
TOT: 0.8877273853170272; NL: 0.8843438787251812; NL+AG: 0.9557515854134285; NL+QF: 0.8877273853170272; rels: [producer]; projs: [movie_0.title]; preds: [genre_0.genre = "Comedy",movie_0.release_year = 2015]; havings: []; superlative: []; blanks: 0
TOT: 0.8871144445747894; NL: 0.8843438787251812; NL+AG: 0.9557515854134285; NL+QF: 0.8871144445747894; rels: [producer]; projs: [movie_0.title]; preds: [genre_0.genre = "Comedy",tv_series_0.release_year = 2015]; havings: []; superlative: []; blanks: 0
TOT: 0.8760730972073264; NL: 0.8751654049883154; NL+AG: 0.9557515854134285; NL+QF: 0.8760730972073264; rels: []; projs: [movie_0.title]; preds: [genre_0.genre = "Comedy",movie_0.release_year = 2015]; havings: []; superlative: []; blanks: 1
TOT: 0.8751654049883154; NL: 0.8751654049883154; NL+AG: 0.9557515854134285; NL+QF: 0.8751654049883154; rels: []; projs: [movie_0.title]; preds: [genre_0.genre = "Comedy",tv_series_0.release_year = 2015]; havings: []; superlative: []; blanks: 1
TOT: 0.8568813157694886; NL: 0.8078102875765448; NL+AG: 0.9230706354214849; NL+QF: 0.8568813157694886; rels: [directed_by]; projs: [movie_0.title]; preds: [movie_0.release_year = 2015]; havings: []; superlative: []; blanks: 0
TOT: 0.8568813157694886; NL: 0.8078102875765448; NL+AG: 0.9230706354214849; NL+QF: 0.8568813157694886; rels: [directed_by]; projs: [movie_0.title]; preds: [movie_0.release_year = 2015]; havings: []; superlative: []; blanks: 0
TOT: 0.8493722238699192; NL: 0.8354230475230675; NL+AG: 0.9317945217090372; NL+QF: 0.8493722238699192; rels: [directed_by]; projs: [movie_0.title]; preds: [genre_0.genre = "Comedy",movie_0.release_year = 2015]; havings: []; superlative: []; blanks: 1

===========
RESULTS
===========
TOT: 0.902788676093461; TR: 0.9081220672421095; QF: 0.05981240981240982; select movie_0.title from classification as classification_0, directed_by as directed_by_0, directed_by as directed_by_1, director as director_0, genre as genre_0, movie as movie_0, tv_series as tv_series_0 where genre_0.genre = "Comedy" and movie_0.release_year = 2015 and classification_0.gid = genre_0.gid and classification_0.msid = tv_series_0.sid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and directed_by_1.did = director_0.did and directed_by_1.msid = tv_series_0.sid
TOT: 0.9022237308537141; TR: 0.9075525153565824; QF: 0.048923679060665366; select movie_0.title from classification as classification_0, genre as genre_0, made_by as made_by_0, made_by as made_by_1, movie as movie_0, producer as producer_0, tv_series as tv_series_0 where genre_0.genre = "Comedy" and movie_0.release_year = 2015 and classification_0.gid = genre_0.gid and classification_0.msid = tv_series_0.sid and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid and made_by_1.msid = tv_series_0.sid and made_by_1.pid = producer_0.pid
TOT: 0.9016035636280479; TR: 0.906925886144075; QF: 0.05088062622309197; select movie_0.title from classification as classification_0, genre as genre_0, made_by as made_by_0, made_by as made_by_1, movie as movie_0, producer as producer_0, tv_series as tv_series_0 where genre_0.genre = "Comedy" and tv_series_0.release_year = 2015 and classification_0.gid = genre_0.gid and classification_0.msid = movie_0.mid and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid and made_by_1.msid = tv_series_0.sid and made_by_1.pid = producer_0.pid
TOT: 0.9016033679333317; TR: 0.906925886144075; QF: 0.048923679060665366; select movie_0.title from classification as classification_0, genre as genre_0, made_by as made_by_0, made_by as made_by_1, movie as movie_0, producer as producer_0, tv_series as tv_series_0 where genre_0.genre = "Comedy" and tv_series_0.release_year = 2015 and classification_0.gid = genre_0.gid and classification_0.msid = tv_series_0.sid and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid and made_by_1.msid = tv_series_0.sid and made_by_1.pid = producer_0.pid
TOT: 0.8942029384693654; TR: 0.8994494073241177; QF: 0.061769356974836424; select movie_0.title from classification as classification_0, directed_by as directed_by_0, directed_by as directed_by_1, director as director_0, genre as genre_0, movie as movie_0, tv_series as tv_series_0 where genre_0.genre = "Comedy" and tv_series_0.release_year = 2015 and classification_0.gid = genre_0.gid and classification_0.msid = movie_0.mid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and directed_by_1.did = director_0.did and directed_by_1.msid = tv_series_0.sid
TOT: 0.8942027427746492; TR: 0.8994494073241177; QF: 0.05981240981240982; select movie_0.title from classification as classification_0, directed_by as directed_by_0, directed_by as directed_by_1, director as director_0, genre as genre_0, movie as movie_0, tv_series as tv_series_0 where genre_0.genre = "Comedy" and tv_series_0.release_year = 2015 and classification_0.gid = genre_0.gid and classification_0.msid = tv_series_0.sid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and directed_by_1.did = director_0.did and directed_by_1.msid = tv_series_0.sid
TOT: 0.8730461704299107; TR: 0.8760730972073264; QF: 0.18036529680365296; select movie_0.title from classification as classification_0, genre as genre_0, movie as movie_0 where genre_0.genre = "Comedy" and movie_0.release_year = 2015 and classification_0.gid = genre_0.gid and classification_0.msid = movie_0.mid
TOT: 0.8710601036551339; TR: 0.8760730972073264; QF: 0.058891370894349294; select movie_0.title from actor as actor_0, cast as cast_0, cast as cast_1, classification as classification_0, genre as genre_0, movie as movie_0, tv_series as tv_series_0 where genre_0.genre = "Comedy" and movie_0.release_year = 2015 and actor_0.aid = cast_0.aid and actor_0.aid = cast_1.aid and cast_0.msid = movie_0.mid and cast_1.msid = tv_series_0.sid and classification_0.gid = genre_0.gid and classification_0.msid = tv_series_0.sid
TOT: 0.8710594467343877; TR: 0.8760730972073264; QF: 0.052322163433274546; select movie_0.title from classification as classification_0, company as company_0, copyright as copyright_0, copyright as copyright_1, genre as genre_0, movie as movie_0, tv_series as tv_series_0 where genre_0.genre = "Comedy" and movie_0.release_year = 2015 and classification_0.gid = genre_0.gid and classification_0.msid = tv_series_0.sid and company_0.id = copyright_0.cid and company_0.id = copyright_1.cid and copyright_0.msid = movie_0.mid and copyright_1.msid = tv_series_0.sid
TOT: 0.871059352362656; TR: 0.8760730972073264; QF: 0.051378446115288225; select movie_0.title from classification as classification_0, genre as genre_0, keyword as keyword_0, movie as movie_0, tags as tags_0, tags as tags_1, tv_series as tv_series_0 where genre_0.genre = "Comedy" and movie_0.release_year = 2015 and classification_0.gid = genre_0.gid and classification_0.msid = tv_series_0.sid and keyword_0.id = tags_0.kid and keyword_0.id = tags_1.kid and movie_0.mid = tags_0.msid and tags_1.msid = tv_series_0.sid


01:27  INFO: ================
01:27  INFO: QUERY 15: Find all actors born in Milan
01:27  INFO: ================
01:28  INFO: ================
01:28  INFO: QUERY 115: Find all actors who acted in the same movie as "Tom Hanks"
01:28  INFO: ================
239. ROOT: ROOT; NA; ; (0) 
240. Find: CMT; NA; ; (0) 
241. actors: NT; NA; all; (0) actor.name(1.0):| actor(1.0):| movie.title(0.95):Actors; Actors; Actors; | tv_series.title(0.95):Actors; Actor; The Actor Factor; | cast.role(0.95):Actors; Actors; Actors; | keyword.keyword(0.95):actors; actor-director; no-actors; | company.name(0.79):For Actors by Actors; Actors Loft; Actors Pool; | 
243. acted: NT; NA; ; (0) movie.release_year(0.63):| tv_series.release_year(0.63):| actor.name(0.62):| actor(0.62):| genre.genre(0.62):| genre(0.62):| made_by(0.61):| 
245. movie: NT; NA; ; (0) movie.title(1.0):| movie(1.0):| cast.role(0.95):Movie; Movie F; Movie AD; | company.name(0.95):Movie; Movies; Movie Movie; | keyword.keyword(0.83):movie-in-movie; b-movie; z-movie; | actor.name(0.76):| actor(0.76):| 
249. Tom Hanks: VTTEXT; NA; ; (0) director.name(1.0):Tom Hanks; Tom Hanks; Tom Hankins; | actor.name(1.0):Tom Hanks; Jim Hanks; Tom Banks; | producer.name(1.0):Tom Hanks; Tom Hanks; Tom Hanc; | writer.name(1.0):Tom Hanks; Tom Hanks; Tom Hankins; | cast.role(0.76):Young Tom Hanks; Tom Hanner; Tom H; | movie.title(0.65):Hank; Arly Hanks; Tom Horn; | tv_series.title(0.65):Hank; Hank; Hank; | 
Find, VB
all, DT
actors, NNS
who, WP
acted, VBD
in, IN
the, DT
same, JJ
movie, NN
as, IN
Tom Hanks, NNP
root(ROOT-0, Find-1)
det(actors-3, all-2)
dobj(Find-1, actors-3)
nsubj(acted-5, who-4)
acl:relcl(actors-3, acted-5)
case(movie-9, in-6)
det(movie-9, the-7)
amod(movie-9, same-8)
nmod(acted-5, movie-9)
case(Tom Hanks-11, as-10)
nmod(acted-5, Tom Hanks-11)

PARSE TREE:(239) ROOT ROOT
    (240) Find CMT
        (241) actors NT
            (243) acted NT
                (245) movie NT
                (249) Tom Hanks VTTEXT


===========
TRANSLATIONS
===========
TOT: 0.8979007600118484; NL: 0.8979007600118484; NL+AG: 0.9664773678070535; NL+QF: 0.8979007600118484; rels: [movie]; projs: [actor_0.name]; preds: [director_0.name = "Tom Hanks"]; havings: []; superlative: []; blanks: 1
TOT: 0.8979007600118484; NL: 0.8979007600118484; NL+AG: 0.9664773678070535; NL+QF: 0.8979007600118484; rels: [movie]; projs: [actor_0.name]; preds: [actor_0.name = "Tom Hanks"]; havings: []; superlative: []; blanks: 1
TOT: 0.8979007600118484; NL: 0.8979007600118484; NL+AG: 0.9664773678070535; NL+QF: 0.8979007600118484; rels: [movie]; projs: [actor_0.name]; preds: [producer_0.name = "Tom Hanks"]; havings: []; superlative: []; blanks: 1
TOT: 0.8979007600118484; NL: 0.8979007600118484; NL+AG: 0.9664773678070535; NL+QF: 0.8979007600118484; rels: [movie]; projs: [actor_0.name]; preds: [writer_0.name = "Tom Hanks"]; havings: []; superlative: []; blanks: 1
TOT: 0.8781405699117981; NL: 0.8389821044998752; NL+AG: 0.932954735614107; NL+QF: 0.8781405699117981; rels: [actor]; projs: [actor_0.name]; preds: [actor_0.name = "Tom Hanks"]; havings: []; superlative: []; blanks: 1
TOT: 0.8721851340624786; NL: 0.8389821044998752; NL+AG: 0.9427307265828302; NL+QF: 0.8721851340624786; rels: []; projs: [movie_0.title]; preds: [actor_0.name = "Tom Hanks"]; havings: []; superlative: []; blanks: 2
TOT: 0.871831294449845; NL: 0.8389821044998752; NL+AG: 0.9427307265828302; NL+QF: 0.871831294449845; rels: [movie]; projs: [movie_0.title]; preds: [actor_0.name = "Tom Hanks"]; havings: []; superlative: []; blanks: 1
TOT: 0.8631148906993363; NL: 0.8389821044998752; NL+AG: 0.9427307265828302; NL+QF: 0.8631148906993363; rels: [movie]; projs: [movie_0.title]; preds: [director_0.name = "Tom Hanks"]; havings: []; superlative: []; blanks: 1
TOT: 0.8623358559369992; NL: 0.8389821044998752; NL+AG: 0.932954735614107; NL+QF: 0.8623358559369992; rels: [actor]; projs: [actor_0.name]; preds: [director_0.name = "Tom Hanks"]; havings: []; superlative: []; blanks: 1
TOT: 0.8602236844348266; NL: 0.8389821044998752; NL+AG: 0.9427307265828302; NL+QF: 0.8602236844348266; rels: [movie]; projs: [movie_0.title]; preds: [writer_0.name = "Tom Hanks"]; havings: []; superlative: []; blanks: 1
TOT: 0.8579669246119673; NL: 0.8389821044998752; NL+AG: 0.9427307265828302; NL+QF: 0.8579669246119673; rels: [movie]; projs: [movie_0.title]; preds: [producer_0.name = "Tom Hanks"]; havings: []; superlative: []; blanks: 1

===========
RESULTS
===========
TOT: 0.8933631614677946; TR: 0.8979007600118484; QF: 0.1399446061508608; select actor_0.name from actor as actor_0, cast as cast_0, directed_by as directed_by_0, director as director_0, movie as movie_0 where director_0.name = "Tom Hanks" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid
TOT: 0.8933613451539714; TR: 0.8979007600118484; QF: 0.12178146791922942; select actor_0.name from actor as actor_0, cast as cast_0, movie as movie_0, writer as writer_0, written_by as written_by_0 where writer_0.name = "Tom Hanks" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and movie_0.mid = written_by_0.msid and writer_0.wid = written_by_0.wid
TOT: 0.8933613451539714; TR: 0.8979007600118484; QF: 0.12178146791922942; select actor_0.name from actor as actor_0, actor as actor_1, cast as cast_0, cast as cast_1, movie as movie_0 where actor_1.name = "Tom Hanks" and actor_0.aid = cast_0.aid and actor_1.aid = cast_1.aid and cast_0.msid = movie_0.mid and cast_1.msid = movie_0.mid
TOT: 0.8933612081676701; TR: 0.8979007600118484; QF: 0.12041160490553078; select actor_0.name from actor as actor_0, cast as cast_0, made_by as made_by_0, movie as movie_0, producer as producer_0 where producer_0.name = "Tom Hanks" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid
TOT: 0.8737960156792755; TR: 0.8781405699117981; QF: 0.09436871145731905; select actor_0.name from actor as actor_0, actor as actor_1, cast as cast_0, cast as cast_1, tv_series as tv_series_0 where actor_1.name = "Tom Hanks" and actor_0.aid = cast_0.aid and actor_1.aid = cast_1.aid and cast_0.msid = tv_series_0.sid and cast_1.msid = tv_series_0.sid
TOT: 0.8692016076797905; TR: 0.8721851340624786; QF: 0.22557292959377842; select movie_0.title from actor as actor_0, cast as cast_0, movie as movie_0 where actor_0.name = "Tom Hanks" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid
TOT: 0.8672108440890292; TR: 0.8721851340624786; QF: 0.05713084383970459; select movie_0.title from actor as actor_0, cast as cast_0, directed_by as directed_by_0, directed_by as directed_by_1, director as director_0, movie as movie_0, tv_series as tv_series_0 where actor_0.name = "Tom Hanks" and actor_0.aid = cast_0.aid and cast_0.msid = tv_series_0.sid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and directed_by_1.did = director_0.did and directed_by_1.msid = tv_series_0.sid
TOT: 0.8672100950643912; TR: 0.8721851340624786; QF: 0.049640597460569334; select movie_0.title from actor as actor_0, cast as cast_0, company as company_0, copyright as copyright_0, copyright as copyright_1, movie as movie_0, tv_series as tv_series_0 where actor_0.name = "Tom Hanks" and actor_0.aid = cast_0.aid and cast_0.msid = tv_series_0.sid and company_0.id = copyright_0.cid and company_0.id = copyright_1.cid and copyright_0.msid = movie_0.mid and copyright_1.msid = tv_series_0.sid
TOT: 0.8672100006926594; TR: 0.8721851340624786; QF: 0.048696880142583006; select movie_0.title from actor as actor_0, cast as cast_0, keyword as keyword_0, movie as movie_0, tags as tags_0, tags as tags_1, tv_series as tv_series_0 where actor_0.name = "Tom Hanks" and actor_0.aid = cast_0.aid and cast_0.msid = tv_series_0.sid and keyword_0.id = tags_0.kid and keyword_0.id = tags_1.kid and movie_0.mid = tags_0.msid and tags_1.msid = tv_series_0.sid
TOT: 0.867209820447526; TR: 0.8721851340624786; QF: 0.046894428808769026; select movie_0.title from actor as actor_0, cast as cast_0, classification as classification_0, classification as classification_1, genre as genre_0, movie as movie_0, tv_series as tv_series_0 where actor_0.name = "Tom Hanks" and actor_0.aid = cast_0.aid and cast_0.msid = tv_series_0.sid and classification_0.gid = genre_0.gid and classification_0.msid = movie_0.mid and classification_1.gid = genre_0.gid and classification_1.msid = tv_series_0.sid


01:30  INFO: ================
01:30  INFO: QUERY 46: Who is the writer of the movie "Django Unchained"
01:30  INFO: ================
01:32  INFO: ================
01:32  INFO: QUERY 22: Who was the director of the movie Joy from 2015?
01:32  INFO: ================
262. ROOT: ROOT; NA; ; (0) 
263. Joy: NT; NA; ; (0) writer.name(0.61):| writer(0.61):| written_by(0.6):| director.birth_city(0.59):| director.birth_year(0.59):| actor.birth_city(0.59):| actor.birth_year(0.59):| 
264. Who: CMT; NA; ; (0) director.name(1.0):| actor.name(1.0):| producer.name(1.0):| writer.name(1.0):| 
266. director: NT; NA; ; (0) director.name(1.0):| director(1.0):| movie.title(0.95):Director; Director; Director; | producer.name(0.95):Director; Co-Director; Director GT; | company.name(0.95):Director; Directors; Directors; | writer.name(0.95):Director; Director X; Director X.; | tv_series.title(0.86):Directors on Directo; The Directors; The Directors; | 
268. movie: NT; NA; ; (0) movie.title(1.0):| movie(1.0):| cast.role(0.95):Movie; Movie F; Movie AD; | company.name(0.95):Movie; Movies; Movie Movie; | keyword.keyword(0.83):movie-in-movie; b-movie; z-movie; | actor.name(0.76):| actor(0.76):| 
271. 2015: VTNUM; NA; ; (0) movie.release_year(1.0):2015; 2015; 2015; | tv_series.release_year(1.0):2015; 2015; 2015; | 
Who, WP
was, VBD
the, DT
director, NN
of, IN
the, DT
movie, NN
Joy, VBN
from, IN
2015, CD
dobj(Joy-8, Who-1)
auxpass(Joy-8, was-2)
det(director-4, the-3)
nsubjpass(Joy-8, director-4)
case(movie-7, of-5)
det(movie-7, the-6)
nmod(director-4, movie-7)
root(ROOT-0, Joy-8)
case(2015-10, from-9)
nmod(Joy-8, 2015-10)

PARSE TREE:(262) ROOT ROOT
    (264) Who CMT
        (266) director NT
            (268) movie NT
            (263) Joy NT
                (271) 2015 VTNUM


===========
TRANSLATIONS
===========
TOT: 0.9174505626104981; NL: 0.9174505626104981; NL+AG: 0.9702103575099612; NL+QF: 0.9174505626104981; rels: [movie]; projs: [director_0.name]; preds: [movie_0.release_year = 2015]; havings: []; superlative: []; blanks: 2
TOT: 0.9174505626104981; NL: 0.9174505626104981; NL+AG: 0.9702103575099612; NL+QF: 0.9174505626104981; rels: [movie]; projs: [director_0.name]; preds: [tv_series_0.release_year = 2015]; havings: []; superlative: []; blanks: 2
TOT: 0.8698663239835652; NL: 0.8689647470148877; NL+AG: 0.9404207150199223; NL+QF: 0.8698663239835652; rels: [actor]; projs: [director_0.name]; preds: [movie_0.release_year = 2015]; havings: []; superlative: []; blanks: 2
TOT: 0.8689647470148877; NL: 0.8689647470148877; NL+AG: 0.9404207150199223; NL+QF: 0.8689647470148877; rels: [actor]; projs: [director_0.name]; preds: [tv_series_0.release_year = 2015]; havings: []; superlative: []; blanks: 2
TOT: 0.846655699563006; NL: 0.846655699563006; NL+AG: 0.9404207150199223; NL+QF: 0.846655699563006; rels: [movie]; projs: [producer_0.name]; preds: [movie_0.release_year = 2015]; havings: []; superlative: []; blanks: 2
TOT: 0.846655699563006; NL: 0.846655699563006; NL+AG: 0.9404207150199223; NL+QF: 0.846655699563006; rels: [movie]; projs: [producer_0.name]; preds: [tv_series_0.release_year = 2015]; havings: []; superlative: []; blanks: 2
TOT: 0.8417155348343195; NL: 0.8417155348343195; NL+AG: 0.9404207150199223; NL+QF: 0.8417155348343195; rels: [movie]; projs: [director_0.name]; preds: [movie_0.release_year = 2015]; havings: []; superlative: []; blanks: 2
TOT: 0.8417155348343195; NL: 0.8417155348343195; NL+AG: 0.9404207150199223; NL+QF: 0.8417155348343195; rels: [movie]; projs: [director_0.name]; preds: [tv_series_0.release_year = 2015]; havings: []; superlative: []; blanks: 2
TOT: 0.8417155348343195; NL: 0.8417155348343195; NL+AG: 0.9404207150199223; NL+QF: 0.8417155348343195; rels: [movie]; projs: [director_0.name]; preds: [movie_0.release_year = 2015]; havings: []; superlative: []; blanks: 2
TOT: 0.8417155348343195; NL: 0.8417155348343195; NL+AG: 0.9404207150199223; NL+QF: 0.8417155348343195; rels: [movie]; projs: [director_0.name]; preds: [tv_series_0.release_year = 2015]; havings: []; superlative: []; blanks: 2
TOT: 0.8417155348343195; NL: 0.8417155348343195; NL+AG: 0.9404207150199223; NL+QF: 0.8417155348343195; rels: []; projs: [director_0.name]; preds: [movie_0.release_year = 2015]; havings: []; superlative: []; blanks: 3
TOT: 0.8417155348343195; NL: 0.8417155348343195; NL+AG: 0.9404207150199223; NL+QF: 0.8417155348343195; rels: []; projs: [director_0.name]; preds: [tv_series_0.release_year = 2015]; havings: []; superlative: []; blanks: 3
TOT: 0.8417155348343195; NL: 0.8417155348343195; NL+AG: 0.9385574894223223; NL+QF: 0.8417155348343195; rels: [movie]; projs: [director_0.name]; preds: []; havings: []; superlative: []; blanks: 3
TOT: 0.8417155348343195; NL: 0.8417155348343195; NL+AG: 0.9404207150199223; NL+QF: 0.8417155348343195; rels: [movie]; projs: [actor_0.name]; preds: [movie_0.release_year = 2015]; havings: []; superlative: []; blanks: 2
TOT: 0.8417155348343195; NL: 0.8417155348343195; NL+AG: 0.9404207150199223; NL+QF: 0.8417155348343195; rels: [movie]; projs: [actor_0.name]; preds: [tv_series_0.release_year = 2015]; havings: []; superlative: []; blanks: 2
TOT: 0.8417155348343195; NL: 0.8417155348343195; NL+AG: 0.9404207150199223; NL+QF: 0.8417155348343195; rels: [movie]; projs: [producer_0.name]; preds: [movie_0.release_year = 2015]; havings: []; superlative: []; blanks: 2
TOT: 0.8417155348343195; NL: 0.8417155348343195; NL+AG: 0.9404207150199223; NL+QF: 0.8417155348343195; rels: [movie]; projs: [producer_0.name]; preds: [tv_series_0.release_year = 2015]; havings: []; superlative: []; blanks: 2
TOT: 0.8417155348343195; NL: 0.8417155348343195; NL+AG: 0.9404207150199223; NL+QF: 0.8417155348343195; rels: [movie]; projs: [writer_0.name]; preds: [movie_0.release_year = 2015]; havings: []; superlative: []; blanks: 2
TOT: 0.8417155348343195; NL: 0.8417155348343195; NL+AG: 0.9404207150199223; NL+QF: 0.8417155348343195; rels: [movie]; projs: [writer_0.name]; preds: [tv_series_0.release_year = 2015]; havings: []; superlative: []; blanks: 2

===========
RESULTS
===========
TOT: 0.9140159155584613; TR: 0.9174505626104981; QF: 0.24090909090909088; select director_0.name from directed_by as directed_by_0, director as director_0, movie as movie_0 where movie_0.release_year = 2015 and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid
TOT: 0.9120248550103345; TR: 0.9174505626104981; QF: 0.0694974315004099; select director_0.name from actor as actor_0, cast as cast_0, cast as cast_1, directed_by as directed_by_0, director as director_0, movie as movie_0, tv_series as tv_series_0 where tv_series_0.release_year = 2015 and actor_0.aid = cast_0.aid and actor_0.aid = cast_1.aid and cast_0.msid = movie_0.mid and cast_1.msid = tv_series_0.sid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid
TOT: 0.9120241980895883; TR: 0.9174505626104981; QF: 0.06292822403933515; select director_0.name from company as company_0, copyright as copyright_0, copyright as copyright_1, directed_by as directed_by_0, director as director_0, movie as movie_0, tv_series as tv_series_0 where tv_series_0.release_year = 2015 and company_0.id = copyright_0.cid and company_0.id = copyright_1.cid and copyright_0.msid = movie_0.mid and copyright_1.msid = tv_series_0.sid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid
TOT: 0.9120241037178566; TR: 0.9174505626104981; QF: 0.06198450672134882; select director_0.name from directed_by as directed_by_0, director as director_0, keyword as keyword_0, movie as movie_0, tags as tags_0, tags as tags_1, tv_series as tv_series_0 where tv_series_0.release_year = 2015 and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and keyword_0.id = tags_0.kid and keyword_0.id = tags_1.kid and movie_0.mid = tags_0.msid and tags_1.msid = tv_series_0.sid
TOT: 0.9120239531344326; TR: 0.9174505626104981; QF: 0.06047867248165088; select director_0.name from actor as actor_0, cast as cast_0, cast as cast_1, directed_by as directed_by_0, director as director_0, movie as movie_0, tv_series as tv_series_0 where movie_0.release_year = 2015 and actor_0.aid = cast_0.aid and actor_0.aid = cast_1.aid and cast_0.msid = movie_0.mid and cast_1.msid = tv_series_0.sid and directed_by_0.did = director_0.did and directed_by_0.msid = tv_series_0.sid
TOT: 0.9120239234727232; TR: 0.9174505626104981; QF: 0.060182055387534836; select director_0.name from classification as classification_0, classification as classification_1, directed_by as directed_by_0, director as director_0, genre as genre_0, movie as movie_0, tv_series as tv_series_0 where tv_series_0.release_year = 2015 and classification_0.gid = genre_0.gid and classification_0.msid = movie_0.mid and classification_1.gid = genre_0.gid and classification_1.msid = tv_series_0.sid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid
TOT: 0.9120239234727232; TR: 0.9174505626104981; QF: 0.060182055387534836; select director_0.name from directed_by as directed_by_0, director as director_0, movie as movie_0, tv_series as tv_series_0, writer as writer_0, written_by as written_by_0, written_by as written_by_1 where tv_series_0.release_year = 2015 and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and movie_0.mid = written_by_0.msid and tv_series_0.sid = written_by_1.msid and writer_0.wid = written_by_0.wid and writer_0.wid = written_by_1.wid
TOT: 0.9120238582411511; TR: 0.9174505626104981; QF: 0.05952973966672597; select director_0.name from directed_by as directed_by_0, director as director_0, made_by as made_by_0, made_by as made_by_1, movie as movie_0, producer as producer_0, tv_series as tv_series_0 where tv_series_0.release_year = 2015 and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid and made_by_1.msid = tv_series_0.sid and made_by_1.pid = producer_0.pid
TOT: 0.9120232962136865; TR: 0.9174505626104981; QF: 0.05390946502057613; select director_0.name from company as company_0, copyright as copyright_0, copyright as copyright_1, directed_by as directed_by_0, director as director_0, movie as movie_0, tv_series as tv_series_0 where movie_0.release_year = 2015 and company_0.id = copyright_0.cid and company_0.id = copyright_1.cid and copyright_0.msid = movie_0.mid and copyright_1.msid = tv_series_0.sid and directed_by_0.did = director_0.did and directed_by_0.msid = tv_series_0.sid
TOT: 0.9120232018419546; TR: 0.9174505626104981; QF: 0.052965747702589806; select director_0.name from directed_by as directed_by_0, director as director_0, keyword as keyword_0, movie as movie_0, tags as tags_0, tags as tags_1, tv_series as tv_series_0 where movie_0.release_year = 2015 and directed_by_0.did = director_0.did and directed_by_0.msid = tv_series_0.sid and keyword_0.id = tags_0.kid and keyword_0.id = tags_1.kid and movie_0.mid = tags_0.msid and tags_1.msid = tv_series_0.sid


01:34  INFO: ================
01:34  INFO: QUERY 43: Who acts "Olivia Pope" in the series Scandal?
01:34  INFO: ================
01:37  INFO: ================
01:37  INFO: QUERY 26: Find all movies featuring "Kate Winslet"
01:37  INFO: ================
01:37  INFO: ================
01:37  INFO: QUERY 113: Find the number of companies which worked with "Gabriele Ferzetti"
01:37  INFO: ================
290. ROOT: ROOT; NA; ; (0) 
291. Find: CMT; NA; ; (0) 
292. number of: FT; count; ; (0) 
294. companies: NT; NA; ; (0) company.name(1.0):| company(1.0):| movie.title(0.95):Company; Company; Company; | cast.role(0.95):Company; Company; Company; | keyword.keyword(0.95):company; company-k; it-company; | tv_series.title(0.82):X Company; Eco Company; Company and Co; | actor.name(0.74):Eva Company; Angel Company; Marc Company; | 
296. worked: NT; NA; ; (0) directed_by(0.71):| made_by(0.64):| written_by(0.63):| director.name(0.62):| director(0.62):| cast.role(0.62):| cast(0.62):| 
298. Gabriele Ferzetti: VTTEXT; NA; ; (0) actor.name(1.0):Gabriele Ferzetti; Gabriele Ferzetti; Gabriel Ferzetti; | director.name(0.73):Gabriele Ferluga; Gabriele Ferluga; Gabriele Mainetti; | writer.name(0.73):Gabriele Ferluga; Gabriele Ferluga; Gabriele Kiefer; | cast.role(0.71):Gabriele Cercetti; Gabriele Cercetti; Gabriele Cercetti; | producer.name(0.69):Gabriele Mainetti; Gabriele Mainetti; Gabriele Gauler; | movie.title(0.53):Gabriele Dambrone; Gabriele Dambrone; For Gabriele; | company.name(0.53):San Gabriele; San Gabriele; Kranzelbinder Gabrie; | 
Find, VB
the, DT
number, NN
of, IN
companies, NNS
which, WDT
worked, VBD
with, IN
Gabriele Ferzetti, NNP
root(ROOT-0, Find-1)
det(number-3, the-2)
dobj(Find-1, number-3)
case(companies-5, of-4)
nmod(number-3, companies-5)
nsubj(worked-7, which-6)
acl:relcl(companies-5, worked-7)
case(Gabriele Ferzetti-9, with-8)
nmod(worked-7, Gabriele Ferzetti-9)

PARSE TREE:(290) ROOT ROOT
    (291) Find CMT
        (292) number of FT
            (294) companies NT
                (296) worked NT
                    (298) Gabriele Ferzetti VTTEXT


===========
TRANSLATIONS
===========
TOT: 0.8999134166259757; NL: 0.8907068407403163; NL+AG: 0.962381256972397; NL+QF: 0.8999134166259757; rels: [directed_by]; projs: [count(distinct(company_0.name))]; preds: [actor_0.name = "Gabriele Ferzetti"]; havings: []; superlative: []; blanks: 0
TOT: 0.8699334634650558; NL: 0.8011251866475296; NL+AG: 0.9336336059357445; NL+QF: 0.8699334634650558; rels: [directed_by]; projs: [count(distinct(company_0.name))]; preds: [director_0.name = "Gabriele Ferluga"]; havings: []; superlative: []; blanks: 0
TOT: 0.8662391053409028; NL: 0.8662391053409028; NL+AG: 0.962381256972397; NL+QF: 0.8662391053409028; rels: []; projs: [count(distinct(company_0.name))]; preds: [actor_0.name = "Gabriele Ferzetti"]; havings: []; superlative: []; blanks: 1
TOT: 0.8011251866475296; NL: 0.8011251866475296; NL+AG: 0.9336336059357445; NL+QF: 0.8011251866475296; rels: [directed_by]; projs: [count(distinct(company_0.name))]; preds: [writer_0.name = "Gabriele Ferluga"]; havings: []; superlative: []; blanks: 0
TOT: 0.7935295826543791; NL: 0.7935295826543791; NL+AG: 0.9336336059357445; NL+QF: 0.7935295826543791; rels: [directed_by]; projs: [count(distinct(company_0.name))]; preds: [cast_0.role = "Gabriele Cercetti"]; havings: []; superlative: []; blanks: 0
TOT: 0.7861263531177781; NL: 0.7861263531177781; NL+AG: 0.9336336059357445; NL+QF: 0.7861263531177781; rels: [directed_by]; projs: [count(distinct(company_0.name))]; preds: [producer_0.name = "Gabriele Mainetti"]; havings: []; superlative: []; blanks: 0
TOT: 0.7791182611450765; NL: 0.7791182611450765; NL+AG: 0.9336336059357445; NL+QF: 0.7791182611450765; rels: []; projs: [count(distinct(company_0.name))]; preds: [director_0.name = "Gabriele Ferluga"]; havings: []; superlative: []; blanks: 1
TOT: 0.7791182611450765; NL: 0.7791182611450765; NL+AG: 0.9336336059357445; NL+QF: 0.7791182611450765; rels: []; projs: [count(distinct(company_0.name))]; preds: [writer_0.name = "Gabriele Ferluga"]; havings: []; superlative: []; blanks: 1
TOT: 0.7752296961764223; NL: 0.7514591805029028; NL+AG: 0.9301748443315139; NL+QF: 0.7752296961764223; rels: [directed_by]; projs: [movie_0.mid]; preds: [movie_0.title = "Company",actor_0.name = "Gabriele Ferzetti"]; havings: []; superlative: []; blanks: 0
TOT: 0.7717313085512446; NL: 0.7717313085512446; NL+AG: 0.9336336059357445; NL+QF: 0.7717313085512446; rels: []; projs: [count(distinct(company_0.name))]; preds: [cast_0.role = "Gabriele Cercetti"]; havings: []; superlative: []; blanks: 1
TOT: 0.7715650968439136; NL: 0.7715650968439136; NL+AG: 0.9177248990261656; NL+QF: 0.7715650968439136; rels: [directed_by]; projs: [count(distinct(company_0.name))]; preds: []; havings: []; superlative: []; blanks: 1

===========
RESULTS
===========
TOT: 0.8656747583529031; TR: 0.8699334634650558; QF: 0.1321492704826038; select count(distinct(company_0.name)) from company as company_0, copyright as copyright_0, directed_by as directed_by_0, director as director_0, movie as movie_0 where director_0.name = "Gabriele Ferluga" and company_0.id = copyright_0.cid and copyright_0.msid = movie_0.mid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid
TOT: 0.8656735434258549; TR: 0.8699334634650558; QF: 0.12; select count(distinct(company_0.name)) from company as company_0, copyright as copyright_0, directed_by as directed_by_0, director as director_0, tv_series as tv_series_0 where director_0.name = "Gabriele Ferluga" and company_0.id = copyright_0.cid and copyright_0.msid = tv_series_0.sid and directed_by_0.did = director_0.did and directed_by_0.msid = tv_series_0.sid
TOT: 0.8620168837251521; TR: 0.8662391053409028; QF: 0.12754842208801007; select count(distinct(company_0.name)) from actor as actor_0, cast as cast_0, company as company_0, copyright as copyright_0, movie as movie_0 where actor_0.name = "Gabriele Ferzetti" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and company_0.id = copyright_0.cid and copyright_0.msid = movie_0.mid
TOT: 0.8620152324207557; TR: 0.8662391053409028; QF: 0.11103537812398571; select count(distinct(company_0.name)) from actor as actor_0, cast as cast_0, company as company_0, copyright as copyright_0, tv_series as tv_series_0 where actor_0.name = "Gabriele Ferzetti" and actor_0.aid = cast_0.aid and cast_0.msid = tv_series_0.sid and company_0.id = copyright_0.cid and copyright_0.msid = tv_series_0.sid
TOT: 0.775766159795742; TR: 0.7791182611450765; QF: 0.11666666666666665; select count(distinct(company_0.name)) from company as company_0, copyright as copyright_0, tv_series as tv_series_0, writer as writer_0, written_by as written_by_0 where writer_0.name = "Gabriele Ferluga" and company_0.id = copyright_0.cid and copyright_0.msid = tv_series_0.sid and tv_series_0.sid = written_by_0.msid and writer_0.wid = written_by_0.wid
TOT: 0.7757658917423005; TR: 0.7791182611450765; QF: 0.11398613225097243; select count(distinct(company_0.name)) from company as company_0, copyright as copyright_0, movie as movie_0, writer as writer_0, written_by as written_by_0 where writer_0.name = "Gabriele Ferluga" and company_0.id = copyright_0.cid and copyright_0.msid = movie_0.mid and movie_0.mid = written_by_0.msid and writer_0.wid = written_by_0.wid
TOT: 0.7712249605818334; TR: 0.7752296961764223; QF: 0.05713084383970459; select movie_0.mid from actor as actor_0, cast as cast_0, directed_by as directed_by_0, directed_by as directed_by_1, director as director_0, movie as movie_0, tv_series as tv_series_0 where actor_0.name = "Gabriele Ferzetti" and movie_0.title = "Company" and actor_0.aid = cast_0.aid and cast_0.msid = tv_series_0.sid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and directed_by_1.did = director_0.did and directed_by_1.msid = tv_series_0.sid
TOT: 0.7689787134516919; TR: 0.7717313085512446; QF: 0.14717985959816024; select count(distinct(company_0.name)) from cast as cast_0, company as company_0, copyright as copyright_0, movie as movie_0 where cast_0.role = "Gabriele Cercetti" and cast_0.msid = movie_0.mid and company_0.id = copyright_0.cid and copyright_0.msid = movie_0.mid
TOT: 0.768975961277698; TR: 0.7717313085512446; QF: 0.11965811965811966; select count(distinct(company_0.name)) from cast as cast_0, company as company_0, copyright as copyright_0, tv_series as tv_series_0 where cast_0.role = "Gabriele Cercetti" and cast_0.msid = tv_series_0.sid and company_0.id = copyright_0.cid and copyright_0.msid = tv_series_0.sid


01:39  INFO: ================
01:39  INFO: QUERY 72: List all the Sci-Fi movies which released in 2010
01:39  INFO: ================
301. ROOT: ROOT; NA; ; (0) 
302. List: CMT; NA; ; (0) 
303. movies: NT; NA; all; (0) movie.title(1.0):| movie(1.0):| cast.role(0.95):Movie; Movie F; Movie AD; | company.name(0.95):Movies; Movie; Movie Movie; | tv_series.title(0.84):Movies, Movies, Movi; Movie Mob; Moon Movies; | keyword.keyword(0.83):movie-in-movie; movies-about-movies; b-movie; | actor.name(0.76):| 
306. Sci-Fi: VTTEXT; NA; ; (0) cast.role(1.0):Sci-Fi; Sci-Fi; Sci-fi #1; | genre.genre(1.0):Sci-Fi; Sci-Fi; Film-Noir; | keyword.keyword(0.87):sci-fi-fan; sci-fi-fan; sci-fi-geek; | actor.name(0.75):Mr. Sci-Fi; Mr. Sci-Fi; That Sci-fiGuy; | producer.name(0.75):Mr. Sci-Fi; Mr. Sci-Fi; That Sci-fiGuy; | company.name(0.75):AXN Sci-Fi; AXN Sci-Fi; AXN Sci-Fi; | writer.name(0.75):Mr. Sci-Fi; Mr. Sci-Fi; That Sci-fiGuy; | 
307. released: NT; NA; ; (0) movie.release_year(1.0):| tv_series.release_year(1.0):| movie.title(0.64):| movie(0.64):| movie.title_aka(0.63):| tv_series.title_aka(0.63):| cast.role(0.63):| 
309. 2010: VTNUM; NA; ; (0) movie.release_year(1.0):2010; 2010; 2010; | tv_series.release_year(1.0):2010; 2010; 2010; | actor.birth_year(1.0):2010; 2010; | producer.birth_year(1.0):2010; | 
List, VB
all, PDT
the, DT
Sci-Fi, JJ
movies, NNS
which, WDT
released, VBN
in, IN
2010, CD
root(ROOT-0, List-1)
det:predet(movies-5, all-2)
det(movies-5, the-3)
amod(movies-5, Sci-Fi-4)
dobj(List-1, movies-5)
nsubj(released-7, which-6)
acl:relcl(movies-5, released-7)
case(2010-9, in-8)
nmod(released-7, 2010-9)

PARSE TREE:(301) ROOT ROOT
    (302) List CMT
        (303) movies NT
            (306) Sci-Fi VTTEXT
            (307) released NT
                (309) 2010 VTNUM


===========
TRANSLATIONS
===========
TOT: 1.0; NL: 1.0; NL+AG: 1.0; NL+QF: 1.0; rels: []; projs: [movie_0.title]; preds: [cast_0.role = "Sci-Fi",movie_0.release_year = 2010]; havings: []; superlative: []; blanks: 0
TOT: 1.0; NL: 1.0; NL+AG: 1.0; NL+QF: 1.0; rels: []; projs: [movie_0.title]; preds: [cast_0.role = "Sci-Fi",tv_series_0.release_year = 2010]; havings: []; superlative: []; blanks: 0
TOT: 1.0; NL: 1.0; NL+AG: 1.0; NL+QF: 1.0; rels: []; projs: [movie_0.title]; preds: [genre_0.genre = "Sci-Fi",movie_0.release_year = 2010]; havings: []; superlative: []; blanks: 0
TOT: 1.0; NL: 1.0; NL+AG: 1.0; NL+QF: 1.0; rels: []; projs: [movie_0.title]; preds: [genre_0.genre = "Sci-Fi",tv_series_0.release_year = 2010]; havings: []; superlative: []; blanks: 0
TOT: 0.9636489271886979; NL: 0.9539972450774545; NL+AG: 0.9839129337159068; NL+QF: 0.9636489271886979; rels: []; projs: [movie_0.title]; preds: [keyword_0.keyword = "sci-fi-fan",movie_0.release_year = 2010]; havings: []; superlative: []; blanks: 0
TOT: 0.9586445736399809; NL: 0.9539972450774545; NL+AG: 0.9839129337159068; NL+QF: 0.9586445736399809; rels: []; projs: [movie_0.title]; preds: [keyword_0.keyword = "sci-fi-fan",tv_series_0.release_year = 2010]; havings: []; superlative: []; blanks: 0
TOT: 0.9360967216822134; NL: 0.9066811409991332; NL+AG: 0.975580677099496; NL+QF: 0.9360967216822134; rels: []; projs: [movie_0.title]; preds: [actor_0.name = "Mr. Sci-Fi",movie_0.release_year = 2010]; havings: []; superlative: []; blanks: 0
TOT: 0.9336687832197524; NL: 0.9066811409991332; NL+AG: 0.975580677099496; NL+QF: 0.9336687832197524; rels: []; projs: [movie_0.title]; preds: [actor_0.name = "Mr. Sci-Fi",tv_series_0.release_year = 2010]; havings: []; superlative: []; blanks: 0
TOT: 0.9290424491142183; NL: 0.9134802127015484; NL+AG: 0.9751694075688527; NL+QF: 0.9290424491142183; rels: []; projs: [actor_0.name]; preds: [cast_0.role = "Sci-Fi",movie_0.release_year = 2010]; havings: []; superlative: []; blanks: 0
TOT: 0.9290424491142183; NL: 0.9134802127015484; NL+AG: 0.9751694075688527; NL+QF: 0.9290424491142183; rels: []; projs: [actor_0.name]; preds: [cast_0.role = "Sci-Fi",tv_series_0.release_year = 2010]; havings: []; superlative: []; blanks: 0
TOT: 0.920764704798526; NL: 0.9066811409991332; NL+AG: 0.975580677099496; NL+QF: 0.920764704798526; rels: []; projs: [movie_0.title]; preds: [company_0.name = "AXN Sci-Fi",movie_0.release_year = 2010]; havings: []; superlative: []; blanks: 0

===========
RESULTS
===========
TOT: 0.9970287885062958; TR: 1.0; QF: 0.28431372549019607; select movie_0.title from cast as cast_0, movie as movie_0 where cast_0.role = "Sci-Fi" and movie_0.release_year = 2010 and cast_0.msid = movie_0.mid
TOT: 0.9957338041946576; TR: 1.0; QF: 0.18036529680365296; select movie_0.title from classification as classification_0, genre as genre_0, movie as movie_0 where genre_0.genre = "Sci-Fi" and movie_0.release_year = 2010 and classification_0.gid = genre_0.gid and classification_0.msid = movie_0.mid
TOT: 0.9944347817833374; TR: 1.0; QF: 0.07367187887813353; select movie_0.title from actor as actor_0, cast as cast_0, cast as cast_1, movie as movie_0, tv_series as tv_series_0 where cast_0.role = "Sci-Fi" and tv_series_0.release_year = 2010 and actor_0.aid = cast_0.aid and actor_0.aid = cast_1.aid and cast_0.msid = movie_0.mid and cast_1.msid = tv_series_0.sid
TOT: 0.9944328255543536; TR: 1.0; QF: 0.05410958904109588; select movie_0.title from classification as classification_0, classification as classification_1, genre as genre_0, movie as movie_0, tv_series as tv_series_0 where genre_0.genre = "Sci-Fi" and tv_series_0.release_year = 2010 and classification_0.gid = genre_0.gid and classification_0.msid = movie_0.mid and classification_1.gid = genre_0.gid and classification_1.msid = tv_series_0.sid
TOT: 0.9940485939044692; TR: 1.0; QF: 0.06935828877005348; select movie_0.title from cast as cast_0, directed_by as directed_by_0, directed_by as directed_by_1, director as director_0, movie as movie_0, tv_series as tv_series_0 where cast_0.role = "Sci-Fi" and tv_series_0.release_year = 2010 and cast_0.msid = movie_0.mid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and directed_by_1.did = director_0.did and directed_by_1.msid = tv_series_0.sid
TOT: 0.9940475452699762; TR: 1.0; QF: 0.058871943839264106; select movie_0.title from cast as cast_0, company as company_0, copyright as copyright_0, copyright as copyright_1, movie as movie_0, tv_series as tv_series_0 where cast_0.role = "Sci-Fi" and tv_series_0.release_year = 2010 and cast_0.msid = movie_0.mid and company_0.id = copyright_0.cid and company_0.id = copyright_1.cid and copyright_0.msid = movie_0.mid and copyright_1.msid = tv_series_0.sid
TOT: 0.9940474131495517; TR: 1.0; QF: 0.057550739594083244; select movie_0.title from cast as cast_0, keyword as keyword_0, movie as movie_0, tags as tags_0, tags as tags_1, tv_series as tv_series_0 where cast_0.role = "Sci-Fi" and tv_series_0.release_year = 2010 and cast_0.msid = movie_0.mid and keyword_0.id = tags_0.kid and keyword_0.id = tags_1.kid and movie_0.mid = tags_0.msid and tags_1.msid = tv_series_0.sid
TOT: 0.9940471608063649; TR: 1.0; QF: 0.05502730772674367; select movie_0.title from cast as cast_0, movie as movie_0, tv_series as tv_series_0, writer as writer_0, written_by as written_by_0, written_by as written_by_1 where cast_0.role = "Sci-Fi" and tv_series_0.release_year = 2010 and cast_0.msid = movie_0.mid and movie_0.mid = written_by_0.msid and tv_series_0.sid = written_by_1.msid and writer_0.wid = written_by_0.wid and writer_0.wid = written_by_1.wid
TOT: 0.9940471608063649; TR: 1.0; QF: 0.05502730772674366; select movie_0.title from cast as cast_0, classification as classification_0, classification as classification_1, genre as genre_0, movie as movie_0, tv_series as tv_series_0 where cast_0.role = "Sci-Fi" and tv_series_0.release_year = 2010 and cast_0.msid = movie_0.mid and classification_0.gid = genre_0.gid and classification_0.msid = movie_0.mid and classification_1.gid = genre_0.gid and classification_1.msid = tv_series_0.sid
TOT: 0.994047069482164; TR: 1.0; QF: 0.054114065717611244; select movie_0.title from cast as cast_0, made_by as made_by_0, made_by as made_by_1, movie as movie_0, producer as producer_0, tv_series as tv_series_0 where cast_0.role = "Sci-Fi" and tv_series_0.release_year = 2010 and cast_0.msid = movie_0.mid and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid and made_by_1.msid = tv_series_0.sid and made_by_1.pid = producer_0.pid


01:41  INFO: ================
01:41  INFO: QUERY 29: Who was the actor that played "Vinny Gambini" in the movie "My Cousin Vinny"?
01:41  INFO: ================
01:45  INFO: ================
01:45  INFO: QUERY 17: Which actors were born in Tehran
01:45  INFO: ================
01:46  INFO: ===== FOLD 1 =====
01:46  INFO: ===== Parsing Results =====
01:46  INFO: Total Queries: 98
01:46  INFO: Correctly Parsed: 98/98

01:46  INFO: ================
01:46  INFO: QUERY 35: Find all movies about Persians
01:46  INFO: ================
333. ROOT: ROOT; NA; ; (0) 
334. Find: CMT; NA; ; (0) 
335. movies: NT; NA; all; (0) movie.title(1.0):| movie(1.0):| cast.role(0.95):Movie; Movie F; Movie AD; | company.name(0.95):Movies; Movie; Movie Movie; | tv_series.title(0.84):Movies, Movies, Movi; Movie Mob; Moon Movies; | keyword.keyword(0.83):movie-in-movie; movies-about-movies; b-movie; | actor.name(0.76):| 
337. Persians: VTTEXT; NA; ; (0) cast.role(1.0):Persian; Persian; Persian; | keyword.keyword(1.0):persian; persian-cat; persian-rug; | movie.title(0.82):Persian Version; Persian Eyes; The Persian; | director.name(0.74):Luke Persian; Persian Pink Panther; The Persian Ed Wood; | actor.name(0.74):Persian Lamb; Little Persian; Persian Princess Dia; | producer.name(0.74):Luke Persian; Persian Pink Panther; Persian Maglinte; | writer.name(0.74):Luke Persian; Persian Pink Panther; The Persian Ed Wood; | 
Find, VB
all, DT
movies, NNS
about, IN
Persians, NNP
root(ROOT-0, Find-1)
det(movies-3, all-2)
dobj(Find-1, movies-3)
case(Persians-5, about-4)
nmod(Find-1, Persians-5)

PARSE TREE:(333) ROOT ROOT
    (334) Find CMT
        (335) movies NT
        (337) Persians VTTEXT


===========
TRANSLATIONS
===========
TOT: 1.0; NL: 1.0; NL+AG: 1.0; NL+QF: 1.0; rels: []; projs: [movie_0.title]; preds: [cast_0.role = "Persian"]; havings: []; superlative: []; blanks: 0
TOT: 1.0; NL: 1.0; NL+AG: 1.0; NL+QF: 1.0; rels: []; projs: [movie_0.title]; preds: [keyword_0.keyword = "persian"]; havings: []; superlative: []; blanks: 0
TOT: 0.934763205166549; NL: 0.8593887047640296; NL+AG: 0.9890291262135922; NL+QF: 0.934763205166549; rels: []; projs: [movie_0.title]; preds: [actor_0.name = "Persian Lamb"]; havings: []; superlative: []; blanks: 0
TOT: 0.9159386160584653; NL: 0.8730692985095742; NL+AG: 0.9890291262135922; NL+QF: 0.9159386160584653; rels: []; projs: [actor_0.name]; preds: [cast_0.role = "Persian"]; havings: []; superlative: []; blanks: 0
TOT: 0.9107625612433827; NL: 0.8593887047640296; NL+AG: 0.9890291262135922; NL+QF: 0.9107625612433827; rels: []; projs: [movie_0.title]; preds: [director_0.name = "Luke Persian"]; havings: []; superlative: []; blanks: 0
TOT: 0.9064126192070304; NL: 0.9064126192070304; NL+AG: 0.9902130939306435; NL+QF: 0.9064126192070304; rels: []; projs: [movie_0.title]; preds: [movie_0.title = "Persian Version"]; havings: []; superlative: []; blanks: 0
TOT: 0.8730692985095742; NL: 0.8730692985095742; NL+AG: 0.9890291262135922; NL+QF: 0.8730692985095742; rels: []; projs: [actor_0.name]; preds: [keyword_0.keyword = "persian"]; havings: []; superlative: []; blanks: 0
TOT: 0.8593887047640296; NL: 0.8593887047640296; NL+AG: 0.9890291262135922; NL+QF: 0.8593887047640296; rels: []; projs: [movie_0.title]; preds: [producer_0.name = "Luke Persian"]; havings: []; superlative: []; blanks: 0
TOT: 0.8593887047640296; NL: 0.8593887047640296; NL+AG: 0.9890291262135922; NL+QF: 0.8593887047640296; rels: []; projs: [movie_0.title]; preds: [writer_0.name = "Luke Persian"]; havings: []; superlative: []; blanks: 0
TOT: 0.8411568677294218; NL: 0.7913610296113078; NL+AG: 0.9792422201442357; NL+QF: 0.8411568677294218; rels: []; projs: [actor_0.name]; preds: [movie_0.title = "Persian Version"]; havings: []; superlative: []; blanks: 0
TOT: 0.82915619758885; NL: 0.82915619758885; NL+AG: 0.9890291262135922; NL+QF: 0.82915619758885; rels: []; projs: [tv_series_0.title]; preds: [cast_0.role = "Persian"]; havings: []; superlative: []; blanks: 0
TOT: 0.82915619758885; NL: 0.82915619758885; NL+AG: 0.9890291262135922; NL+QF: 0.82915619758885; rels: []; projs: [tv_series_0.title]; preds: [keyword_0.keyword = "persian"]; havings: []; superlative: []; blanks: 0
TOT: 0.82915619758885; NL: 0.82915619758885; NL+AG: 0.9890291262135922; NL+QF: 0.82915619758885; rels: []; projs: [tv_series_0.title]; preds: [cast_0.role = "Persian"]; havings: []; superlative: []; blanks: 0
TOT: 0.82915619758885; NL: 0.82915619758885; NL+AG: 0.9890291262135922; NL+QF: 0.82915619758885; rels: []; projs: [tv_series_0.title]; preds: [keyword_0.keyword = "persian"]; havings: []; superlative: []; blanks: 0

===========
RESULTS
===========
TOT: 0.9970333846566826; TR: 1.0; QF: 0.3302752293577982; select movie_0.title from cast as cast_0, movie as movie_0 where cast_0.role = "Persian" and cast_0.msid = movie_0.mid
TOT: 0.9957342361334458; TR: 1.0; QF: 0.18468468468468469; select movie_0.title from keyword as keyword_0, movie as movie_0, tags as tags_0 where keyword_0.keyword = "persian" and keyword_0.id = tags_0.kid and movie_0.mid = tags_0.msid
TOT: 0.9940468487321579; TR: 1.0; QF: 0.05190656565656565; select movie_0.title from cast as cast_0, directed_by as directed_by_0, directed_by as directed_by_1, director as director_0, movie as movie_0, tv_series as tv_series_0 where cast_0.role = "Persian" and cast_0.msid = tv_series_0.sid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and directed_by_1.did = director_0.did and directed_by_1.msid = tv_series_0.sid
TOT: 0.9940458851565281; TR: 1.0; QF: 0.042270809359416954; select movie_0.title from cast as cast_0, company as company_0, copyright as copyright_0, copyright as copyright_1, movie as movie_0, tv_series as tv_series_0 where cast_0.role = "Persian" and cast_0.msid = tv_series_0.sid and company_0.id = copyright_0.cid and company_0.id = copyright_1.cid and copyright_0.msid = movie_0.mid and copyright_1.msid = tv_series_0.sid
TOT: 0.994045654799589; TR: 1.0; QF: 0.03996723996723996; select movie_0.title from cast as cast_0, keyword as keyword_0, movie as movie_0, tags as tags_0, tags as tags_1, tv_series as tv_series_0 where cast_0.role = "Persian" and cast_0.msid = tv_series_0.sid and keyword_0.id = tags_0.kid and keyword_0.id = tags_1.kid and movie_0.mid = tags_0.msid and tags_1.msid = tv_series_0.sid
TOT: 0.994045654799589; TR: 1.0; QF: 0.03996723996723996; select movie_0.title from cast as cast_0, classification as classification_0, classification as classification_1, genre as genre_0, movie as movie_0, tv_series as tv_series_0 where cast_0.role = "Persian" and cast_0.msid = tv_series_0.sid and classification_0.gid = genre_0.gid and classification_0.msid = movie_0.mid and classification_1.gid = genre_0.gid and classification_1.msid = tv_series_0.sid
TOT: 0.9940454796244138; TR: 1.0; QF: 0.03821548821548821; select movie_0.title from cast as cast_0, movie as movie_0, tv_series as tv_series_0, writer as writer_0, written_by as written_by_0, written_by as written_by_1 where cast_0.role = "Persian" and cast_0.msid = tv_series_0.sid and movie_0.mid = written_by_0.msid and tv_series_0.sid = written_by_1.msid and writer_0.wid = written_by_0.wid and writer_0.wid = written_by_1.wid
TOT: 0.9940453870318212; TR: 1.0; QF: 0.03728956228956228; select movie_0.title from cast as cast_0, made_by as made_by_0, made_by as made_by_1, movie as movie_0, producer as producer_0, tv_series as tv_series_0 where cast_0.role = "Persian" and cast_0.msid = tv_series_0.sid and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid and made_by_1.msid = tv_series_0.sid and made_by_1.pid = producer_0.pid
TOT: 0.9937479991510446; TR: 1.0; QF: 0.06150868253252071; select movie_0.title from actor as actor_0, cast as cast_0, cast as cast_1, keyword as keyword_0, movie as movie_0, tags as tags_0, tv_series as tv_series_0 where keyword_0.keyword = "persian" and actor_0.aid = cast_0.aid and actor_0.aid = cast_1.aid and cast_0.msid = movie_0.mid and cast_1.msid = tv_series_0.sid and keyword_0.id = tags_0.kid and tags_0.msid = tv_series_0.sid
TOT: 0.9937477203967885; TR: 1.0; QF: 0.05872113997113997; select movie_0.title from directed_by as directed_by_0, directed_by as directed_by_1, director as director_0, keyword as keyword_0, movie as movie_0, tags as tags_0, tv_series as tv_series_0 where keyword_0.keyword = "persian" and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and directed_by_1.did = director_0.did and directed_by_1.msid = tv_series_0.sid and keyword_0.id = tags_0.kid and tags_0.msid = tv_series_0.sid


01:47  INFO: ================
01:47  INFO: QUERY 33: Find all movies that were produced by Netflix
01:47  INFO: ================
340. ROOT: ROOT; NA; ; (0) 
341. Find: CMT; NA; ; (0) 
342. movies: NT; NA; all; (0) movie.title(1.0):| movie(1.0):| cast.role(0.95):Movie; Movie F; Movie AD; | company.name(0.95):Movies; Movie; Movie Movie; | tv_series.title(0.84):Movies, Movies, Movi; Movie Mob; Moon Movies; | keyword.keyword(0.83):movie-in-movie; movies-about-movies; b-movie; | actor.name(0.76):| 
344. produced: NT; NA; ; (0) made_by(0.74):| directed_by(0.69):| producer.name(0.68):| producer(0.68):| cast.role(0.63):| cast(0.63):| written_by(0.63):| 
347. Netflix: VTTEXT; NA; ; (0) company.name(1.0):Netflix; Netflix; Netflix; | keyword.keyword(1.0):netflix; netflix-series; netflix-production; | tv_series.title(0.78):| tv_series(0.78):| cast.role(0.77):Netflix guy; | movie.title(0.74):| movie(0.74):| 
Find, VB
all, DT
movies, NNS
that, WDT
were, VBD
produced, VBN
by, IN
Netflix, NNP
root(ROOT-0, Find-1)
det(movies-3, all-2)
dobj(Find-1, movies-3)
nsubjpass(produced-6, that-4)
auxpass(produced-6, were-5)
acl:relcl(movies-3, produced-6)
case(Netflix-8, by-7)
nmod(produced-6, Netflix-8)

PARSE TREE:(340) ROOT ROOT
    (341) Find CMT
        (342) movies NT
            (344) produced NT
                (347) Netflix VTTEXT


===========
TRANSLATIONS
===========
TOT: 0.9147664798164705; NL: 0.8852322584043497; NL+AG: 0.9626264316569841; NL+QF: 0.9147664798164705; rels: [directed_by]; projs: [movie_0.title]; preds: [company_0.name = "Netflix"]; havings: []; superlative: []; blanks: 0
TOT: 0.9109458456617278; NL: 0.8852322584043497; NL+AG: 0.9626264316569841; NL+QF: 0.9109458456617278; rels: [directed_by]; projs: [movie_0.title]; preds: [keyword_0.keyword = "netflix"]; havings: []; superlative: []; blanks: 0
TOT: 0.9055419360254962; NL: 0.9055419360254962; NL+AG: 0.9626264316569841; NL+QF: 0.9055419360254962; rels: [made_by]; projs: [movie_0.title]; preds: [company_0.name = "Netflix"]; havings: []; superlative: []; blanks: 0
TOT: 0.9055419360254962; NL: 0.9055419360254962; NL+AG: 0.9626264316569841; NL+QF: 0.9055419360254962; rels: [made_by]; projs: [movie_0.title]; preds: [keyword_0.keyword = "netflix"]; havings: []; superlative: []; blanks: 0
TOT: 0.8987604383840093; NL: 0.8002271178074418; NL+AG: 0.9182152483953397; NL+QF: 0.8987604383840093; rels: [movie,directed_by]; projs: [movie_0.title]; preds: []; havings: []; superlative: []; blanks: 0
TOT: 0.8783733725393061; NL: 0.8783733725393061; NL+AG: 0.9626264316569841; NL+QF: 0.8783733725393061; rels: [producer]; projs: [movie_0.title]; preds: [company_0.name = "Netflix"]; havings: []; superlative: []; blanks: 0
TOT: 0.8783733725393061; NL: 0.8783733725393061; NL+AG: 0.9626264316569841; NL+QF: 0.8783733725393061; rels: [producer]; projs: [movie_0.title]; preds: [keyword_0.keyword = "netflix"]; havings: []; superlative: []; blanks: 0
TOT: 0.8662391053409028; NL: 0.8662391053409028; NL+AG: 0.9626264316569841; NL+QF: 0.8662391053409028; rels: []; projs: [movie_0.title]; preds: [company_0.name = "Netflix"]; havings: []; superlative: []; blanks: 1
TOT: 0.8662391053409028; NL: 0.8662391053409028; NL+AG: 0.9626264316569841; NL+QF: 0.8662391053409028; rels: []; projs: [movie_0.title]; preds: [keyword_0.keyword = "netflix"]; havings: []; superlative: []; blanks: 1
TOT: 0.8597383602899326; NL: 0.8352193753498772; NL+AG: 0.9182152483953397; NL+QF: 0.8597383602899326; rels: [made_by,tv_series]; projs: [movie_0.title]; preds: []; havings: []; superlative: []; blanks: 0
TOT: 0.847229186301455; NL: 0.8185865422772004; NL+AG: 0.9182152483953397; NL+QF: 0.847229186301455; rels: [made_by,movie]; projs: [movie_0.title]; preds: []; havings: []; superlative: []; blanks: 0

===========
RESULTS
===========
TOT: 0.909366129217669; TR: 0.9147664798164705; QF: 0.054659165719073546; select movie_0.title from company as company_0, copyright as copyright_0, directed_by as directed_by_0, directed_by as directed_by_1, director as director_0, movie as movie_0, tv_series as tv_series_0 where company_0.name = "Netflix" and company_0.id = copyright_0.cid and copyright_0.msid = tv_series_0.sid and directed_by_0.did = director_0.did and directed_by_0.msid = tv_series_0.sid and directed_by_1.did = director_0.did and directed_by_1.msid = movie_0.mid
TOT: 0.905584107601899; TR: 0.9109458456617278; QF: 0.05872113997113997; select movie_0.title from directed_by as directed_by_0, directed_by as directed_by_1, director as director_0, keyword as keyword_0, movie as movie_0, tags as tags_0, tv_series as tv_series_0 where keyword_0.keyword = "netflix" and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and directed_by_1.did = director_0.did and directed_by_1.msid = tv_series_0.sid and keyword_0.id = tags_0.kid and tags_0.msid = tv_series_0.sid
TOT: 0.9002344873970121; TR: 0.9055419360254962; QF: 0.061224489795918366; select movie_0.title from company as company_0, copyright as copyright_0, made_by as made_by_0, made_by as made_by_1, movie as movie_0, producer as producer_0, tv_series as tv_series_0 where company_0.name = "Netflix" and company_0.id = copyright_0.cid and copyright_0.msid = tv_series_0.sid and made_by_0.msid = tv_series_0.sid and made_by_0.pid = producer_0.pid and made_by_1.msid = movie_0.mid and made_by_1.pid = producer_0.pid
TOT: 0.9002331929903605; TR: 0.9055419360254962; QF: 0.04828042328042328; select movie_0.title from keyword as keyword_0, made_by as made_by_0, made_by as made_by_1, movie as movie_0, producer as producer_0, tags as tags_0, tv_series as tv_series_0 where keyword_0.keyword = "netflix" and keyword_0.id = tags_0.kid and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid and made_by_1.msid = tv_series_0.sid and made_by_1.pid = producer_0.pid and tags_0.msid = tv_series_0.sid
TOT: 0.8633121022056356; TR: 0.8662391053409028; QF: 0.19620253164556964; select movie_0.title from company as company_0, copyright as copyright_0, movie as movie_0 where company_0.name = "Netflix" and company_0.id = copyright_0.cid and copyright_0.msid = movie_0.mid
TOT: 0.8633109504209395; TR: 0.8662391053409028; QF: 0.18468468468468469; select movie_0.title from keyword as keyword_0, movie as movie_0, tags as tags_0 where keyword_0.keyword = "netflix" and keyword_0.id = tags_0.kid and movie_0.mid = tags_0.msid
TOT: 0.8613247134385383; TR: 0.8662391053409028; QF: 0.06150868253252071; select movie_0.title from actor as actor_0, cast as cast_0, cast as cast_1, keyword as keyword_0, movie as movie_0, tags as tags_0, tv_series as tv_series_0 where keyword_0.keyword = "netflix" and actor_0.aid = cast_0.aid and actor_0.aid = cast_1.aid and cast_0.msid = movie_0.mid and cast_1.msid = tv_series_0.sid and keyword_0.id = tags_0.kid and tags_0.msid = tv_series_0.sid
TOT: 0.8613242948219336; TR: 0.8662391053409028; QF: 0.05732251648527995; select movie_0.title from actor as actor_0, cast as cast_0, cast as cast_1, company as company_0, copyright as copyright_0, movie as movie_0, tv_series as tv_series_0 where company_0.name = "Netflix" and actor_0.aid = cast_0.aid and actor_0.aid = cast_1.aid and cast_0.msid = tv_series_0.sid and cast_1.msid = movie_0.mid and company_0.id = copyright_0.cid and copyright_0.msid = tv_series_0.sid
TOT: 0.8613240047471558; TR: 0.8662391053409028; QF: 0.05442176870748299; select movie_0.title from company as company_0, copyright as copyright_0, movie as movie_0, tv_series as tv_series_0, writer as writer_0, written_by as written_by_0, written_by as written_by_1 where company_0.name = "Netflix" and company_0.id = copyright_0.cid and copyright_0.msid = tv_series_0.sid and movie_0.mid = written_by_1.msid and tv_series_0.sid = written_by_0.msid and writer_0.wid = written_by_0.wid and writer_0.wid = written_by_1.wid
TOT: 0.8613240047471558; TR: 0.8662391053409028; QF: 0.05442176870748299; select movie_0.title from company as company_0, copyright as copyright_0, keyword as keyword_0, movie as movie_0, tags as tags_0, tags as tags_1, tv_series as tv_series_0 where company_0.name = "Netflix" and company_0.id = copyright_0.cid and copyright_0.msid = tv_series_0.sid and keyword_0.id = tags_0.kid and keyword_0.id = tags_1.kid and movie_0.mid = tags_1.msid and tags_0.msid = tv_series_0.sid


01:47  INFO: ================
01:47  INFO: QUERY 45: Who directed the movie "Inglourious Basterds"?
01:47  INFO: ================
01:49  INFO: ================
01:49  INFO: QUERY 98: How many movies about Iraq war were produced in 2015?
01:49  INFO: ================
357. ROOT: ROOT; NA; ; (0) 
358. produced: NT; NA; ; (0) made_by(0.74):| directed_by(0.69):| producer.name(0.68):| producer(0.68):| cast.role(0.63):| cast(0.63):| written_by(0.63):| 
360. How many: CMT; count; ; (0) 
361. movies: NT; NA; ; (0) movie.title(1.0):| movie(1.0):| cast.role(0.95):Movie; Movie F; Movie AD; | company.name(0.95):Movies; Movie; Movie Movie; | tv_series.title(0.84):Movies, Movies, Movi; Movie Mob; Moon Movies; | keyword.keyword(0.83):movie-in-movie; movies-about-movies; b-movie; | actor.name(0.76):| 
362. war: VTTEXT; NA; ; (0) movie.title(0.95):Wars; Wars; Hardware Wars; | tv_series.title(0.95):War; Car Wars; War Walks; | actor.name(0.95):War; War; War; | genre.genre(0.95):War; War; Documentary; | producer.name(0.95):War; Johnny Star Wars; Vivian War; | company.name(0.95):War; War on Want; NWA War Zone; | writer.name(0.95):War; Johnny Star Wars; Men Of War; | 
364. Iraq: VTTEXT; NA; ; (0) movie.title(1.0):Iraq; Iraq; Ski Iraq; | director.nationality(1.0):Iraq; Iraq; Iraq; | actor.nationality(1.0):Iraq; Iraq; Iraq; | producer.nationality(1.0):Iraq; Iraq; Iraq; | writer.nationality(1.0):Iraq; Iraq; Iraq; | cast.role(0.8):Ira - Iraq; Iraq Vet; Iraq Veteran; | keyword.keyword(0.72):iraq-iran-war; basra-iraq; hatra-iraq; | 
366. 2015: VTNUM; NA; ; (0) movie.release_year(1.0):2015; 2015; 2015; | tv_series.release_year(1.0):2015; 2015; 2015; | 
How, WRB
many, JJ
movies, NNS
about, IN
Iraq, NNP
war, NN
were, VBD
produced, VBN
in, IN
2015, CD
advmod(many-2, How-1)
dep(produced-8, many-2)
nsubjpass(produced-8, movies-3)
case(war-6, about-4)
compound(war-6, Iraq-5)
nmod(movies-3, war-6)
auxpass(produced-8, were-7)
root(ROOT-0, produced-8)
case(2015-10, in-9)
nmod(produced-8, 2015-10)

PARSE TREE:(357) ROOT ROOT
    (360) How many CMT
        (361) movies NT
            (362) war VTTEXT
                (364) Iraq VTTEXT
            (358) produced NT
                (366) 2015 VTNUM


===========
TRANSLATIONS
===========
TOT: 0.9089349482140021; NL: 0.9080868618771001; NL+AG: 0.9668474549872347; NL+QF: 0.9089349482140021; rels: []; projs: [count(distinct(movie_0.title))]; preds: [genre_0.genre = "War",movie_0.title = "Iraq",movie_0.release_year = 2015]; havings: []; superlative: []; blanks: 1
TOT: 0.9089349482140021; NL: 0.9080868618771001; NL+AG: 0.9668474549872347; NL+QF: 0.9089349482140021; rels: []; projs: [count(distinct(movie_0.title))]; preds: [genre_0.genre = "War",director_0.nationality = "Iraq",movie_0.release_year = 2015]; havings: []; superlative: []; blanks: 1
TOT: 0.9089349482140021; NL: 0.9080868618771001; NL+AG: 0.9668474549872347; NL+QF: 0.9089349482140021; rels: []; projs: [count(distinct(movie_0.title))]; preds: [genre_0.genre = "War",actor_0.nationality = "Iraq",movie_0.release_year = 2015]; havings: []; superlative: []; blanks: 1
TOT: 0.9089349482140021; NL: 0.9080868618771001; NL+AG: 0.9668474549872347; NL+QF: 0.9089349482140021; rels: []; projs: [count(distinct(movie_0.title))]; preds: [genre_0.genre = "War",producer_0.nationality = "Iraq",movie_0.release_year = 2015]; havings: []; superlative: []; blanks: 1
TOT: 0.9089349482140021; NL: 0.9080868618771001; NL+AG: 0.9668474549872347; NL+QF: 0.9089349482140021; rels: []; projs: [count(distinct(movie_0.title))]; preds: [genre_0.genre = "War",writer_0.nationality = "Iraq",movie_0.release_year = 2015]; havings: []; superlative: []; blanks: 1
TOT: 0.9080868618771001; NL: 0.9080868618771001; NL+AG: 0.9668474549872347; NL+QF: 0.9080868618771001; rels: []; projs: [count(distinct(movie_0.title))]; preds: [genre_0.genre = "War",movie_0.title = "Iraq",tv_series_0.release_year = 2015]; havings: []; superlative: []; blanks: 1
TOT: 0.9080868618771001; NL: 0.9080868618771001; NL+AG: 0.9668474549872347; NL+QF: 0.9080868618771001; rels: []; projs: [count(distinct(movie_0.title))]; preds: [genre_0.genre = "War",director_0.nationality = "Iraq",tv_series_0.release_year = 2015]; havings: []; superlative: []; blanks: 1
TOT: 0.9080868618771001; NL: 0.9080868618771001; NL+AG: 0.9668474549872347; NL+QF: 0.9080868618771001; rels: []; projs: [count(distinct(movie_0.title))]; preds: [genre_0.genre = "War",actor_0.nationality = "Iraq",tv_series_0.release_year = 2015]; havings: []; superlative: []; blanks: 1
TOT: 0.9080868618771001; NL: 0.9080868618771001; NL+AG: 0.9668474549872347; NL+QF: 0.9080868618771001; rels: []; projs: [count(distinct(movie_0.title))]; preds: [genre_0.genre = "War",producer_0.nationality = "Iraq",tv_series_0.release_year = 2015]; havings: []; superlative: []; blanks: 1
TOT: 0.9080868618771001; NL: 0.9080868618771001; NL+AG: 0.9668474549872347; NL+QF: 0.9080868618771001; rels: []; projs: [count(distinct(movie_0.title))]; preds: [genre_0.genre = "War",writer_0.nationality = "Iraq",tv_series_0.release_year = 2015]; havings: []; superlative: []; blanks: 1
TOT: 0.8957571279501789; NL: 0.8957571279501789; NL+AG: 0.9556781725488586; NL+QF: 0.8957571279501789; rels: []; projs: [count(distinct(movie_0.title))]; preds: [genre_0.genre = "War",movie_0.title = "Iraq"]; havings: [count(distinct(producer_0.name)) = 2015]; superlative: []; blanks: 0
TOT: 0.8957571279501789; NL: 0.8957571279501789; NL+AG: 0.9556781725488586; NL+QF: 0.8957571279501789; rels: []; projs: [count(distinct(movie_0.title))]; preds: [genre_0.genre = "War",director_0.nationality = "Iraq"]; havings: [count(distinct(producer_0.name)) = 2015]; superlative: []; blanks: 0
TOT: 0.8957571279501789; NL: 0.8957571279501789; NL+AG: 0.9556781725488586; NL+QF: 0.8957571279501789; rels: []; projs: [count(distinct(movie_0.title))]; preds: [genre_0.genre = "War",actor_0.nationality = "Iraq"]; havings: [count(distinct(producer_0.name)) = 2015]; superlative: []; blanks: 0
TOT: 0.8957571279501789; NL: 0.8957571279501789; NL+AG: 0.9556781725488586; NL+QF: 0.8957571279501789; rels: []; projs: [count(distinct(movie_0.title))]; preds: [genre_0.genre = "War",producer_0.nationality = "Iraq"]; havings: [count(distinct(producer_0.name)) = 2015]; superlative: []; blanks: 0
TOT: 0.8957571279501789; NL: 0.8957571279501789; NL+AG: 0.9556781725488586; NL+QF: 0.8957571279501789; rels: []; projs: [count(distinct(movie_0.title))]; preds: [genre_0.genre = "War",writer_0.nationality = "Iraq"]; havings: [count(distinct(producer_0.name)) = 2015]; superlative: []; blanks: 0

===========
RESULTS
===========
TOT: 0.9042858853072462; TR: 0.9089349482140021; QF: 0.12871979934479935; select count(distinct(movie_0.title)) from classification as classification_0, directed_by as directed_by_0, director as director_0, genre as genre_0, movie as movie_0 where director_0.nationality = "Iraq" and genre_0.genre = "War" and movie_0.release_year = 2015 and classification_0.gid = genre_0.gid and classification_0.msid = movie_0.mid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid
TOT: 0.9042858149534792; TR: 0.9089349482140021; QF: 0.12801626167451854; select count(distinct(movie_0.title)) from actor as actor_0, cast as cast_0, classification as classification_0, genre as genre_0, movie as movie_0 where actor_0.nationality = "Iraq" and genre_0.genre = "War" and movie_0.release_year = 2015 and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and classification_0.gid = genre_0.gid and classification_0.msid = movie_0.mid
TOT: 0.90428383164563; TR: 0.9089349482140021; QF: 0.10818318318318317; select count(distinct(movie_0.title)) from classification as classification_0, genre as genre_0, movie as movie_0, writer as writer_0, written_by as written_by_0 where genre_0.genre = "War" and movie_0.release_year = 2015 and writer_0.nationality = "Iraq" and classification_0.gid = genre_0.gid and classification_0.msid = movie_0.mid and movie_0.mid = written_by_0.msid and writer_0.wid = written_by_0.wid
TOT: 0.9042836927567411; TR: 0.9089349482140021; QF: 0.10679429429429428; select count(distinct(movie_0.title)) from classification as classification_0, genre as genre_0, made_by as made_by_0, movie as movie_0, producer as producer_0 where genre_0.genre = "War" and movie_0.release_year = 2015 and producer_0.nationality = "Iraq" and classification_0.gid = genre_0.gid and classification_0.msid = movie_0.mid and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid
TOT: 0.9042785538678522; TR: 0.9089349482140021; QF: 0.05540540540540541; select count(distinct(movie_0.title)) from classification as classification_0, classification as classification_1, genre as genre_0, movie as movie_0, movie as movie_1 where genre_0.genre = "War" and movie_0.release_year = 2015 and movie_1.title = "Iraq" and classification_0.gid = genre_0.gid and classification_0.msid = movie_0.mid and classification_1.gid = genre_0.gid and classification_1.msid = movie_1.mid
TOT: 0.903593855283164; TR: 0.9089349482140021; QF: 0.06408268510652329; select count(distinct(movie_0.title)) from actor as actor_0, cast as cast_0, cast as cast_1, classification as classification_0, genre as genre_0, movie as movie_0, movie as movie_1 where genre_0.genre = "War" and movie_0.release_year = 2015 and movie_1.title = "Iraq" and actor_0.aid = cast_0.aid and actor_0.aid = cast_1.aid and cast_0.msid = movie_0.mid and cast_1.msid = movie_1.mid and classification_0.gid = genre_0.gid and classification_0.msid = movie_0.mid
TOT: 0.903593855283164; TR: 0.9089349482140021; QF: 0.06408268510652329; select count(distinct(movie_1.title)) from actor as actor_0, cast as cast_0, cast as cast_1, classification as classification_0, genre as genre_0, movie as movie_0, movie as movie_1 where genre_0.genre = "War" and movie_0.release_year = 2015 and movie_0.title = "Iraq" and actor_0.aid = cast_0.aid and actor_0.aid = cast_1.aid and cast_0.msid = movie_0.mid and cast_1.msid = movie_1.mid and classification_0.gid = genre_0.gid and classification_0.msid = movie_0.mid
TOT: 0.9035935978829067; TR: 0.9089349482140021; QF: 0.06150868253252071; select count(distinct(movie_0.title)) from actor as actor_0, cast as cast_0, cast as cast_1, classification as classification_0, genre as genre_0, movie as movie_0, tv_series as tv_series_0 where actor_0.nationality = "Iraq" and genre_0.genre = "War" and movie_0.release_year = 2015 and actor_0.aid = cast_0.aid and actor_0.aid = cast_1.aid and cast_0.msid = movie_0.mid and cast_1.msid = tv_series_0.sid and classification_0.gid = genre_0.gid and classification_0.msid = tv_series_0.sid
TOT: 0.9035935765289079; TR: 0.9089349482140021; QF: 0.06129514254514255; select count(distinct(movie_1.title)) from classification as classification_0, directed_by as directed_by_0, directed_by as directed_by_1, director as director_0, genre as genre_0, movie as movie_0, movie as movie_1 where genre_0.genre = "War" and movie_0.release_year = 2015 and movie_0.title = "Iraq" and classification_0.gid = genre_0.gid and classification_0.msid = movie_0.mid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and directed_by_1.did = director_0.did and directed_by_1.msid = movie_1.mid
TOT: 0.9035935765289079; TR: 0.9089349482140021; QF: 0.06129514254514255; select count(distinct(movie_0.title)) from classification as classification_0, directed_by as directed_by_0, directed_by as directed_by_1, director as director_0, genre as genre_0, movie as movie_0, movie as movie_1 where genre_0.genre = "War" and movie_0.release_year = 2015 and movie_1.title = "Iraq" and classification_0.gid = genre_0.gid and classification_0.msid = movie_0.mid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and directed_by_1.did = director_0.did and directed_by_1.msid = movie_1.mid


01:54  INFO: ================
01:54  INFO: QUERY 0: What year is the movie "Dead Poets Society" from?
01:54  INFO: ================
01:56  INFO: ================
01:56  INFO: QUERY 24: Find all movies written by "Matt Damon"
01:56  INFO: ================
01:57  INFO: ================
01:57  INFO: QUERY 58: Find all movies in which "Robin Wright" appears
01:57  INFO: ================
386. ROOT: ROOT; NA; ; (0) 
387. Find: CMT; NA; ; (0) 
388. movies: NT; NA; all; (0) movie.title(1.0):| movie(1.0):| cast.role(0.95):Movie; Movie F; Movie AD; | company.name(0.95):Movies; Movie; Movie Movie; | tv_series.title(0.84):Movies, Movies, Movi; Movie Mob; Moon Movies; | keyword.keyword(0.83):movie-in-movie; movies-about-movies; b-movie; | actor.name(0.76):| 
390. appears: NT; NA; ; (0) made_by(0.67):| written_by(0.63):| cast.role(0.63):| cast(0.63):| movie.release_year(0.62):| tv_series.release_year(0.62):| directed_by(0.61):| 
393. Robin Wright: VTTEXT; NA; ; (0) director.name(1.0):Robin Wright; Robin Wright; Robin Wright-Penn; | actor.name(1.0):Robin Wright; Robin Wright; Robin Wright; | producer.name(1.0):Robin Wright; Robin Wright; Robin Wright-Penn; | writer.name(0.8):Rob Wright; Quinn Wright; Kevin Wright; | cast.role(0.76):Tobi Wright; Tobi Wright; Lorin Wright; | movie.title(0.74):'In Wrong' Wright; Mr. Wright in Wrong; Wrong Wrights; | tv_series.title(0.7):Doobie Wright; Wrights Wrongs; Robin; | 
Find, VB
all, DT
movies, NNS
in, IN
which, WDT
Robin Wright, NNP
appears, VBZ
root(ROOT-0, Find-1)
det(movies-3, all-2)
dobj(Find-1, movies-3)
case(which-5, in-4)
nmod(appears-7, which-5)
nsubj(appears-7, Robin Wright-6)
acl:relcl(movies-3, appears-7)

PARSE TREE:(386) ROOT ROOT
    (387) Find CMT
        (388) movies NT
            (390) appears NT
                (393) Robin Wright VTTEXT


===========
TRANSLATIONS
===========
TOT: 0.9215380699206003; NL: 0.8767285557917976; NL+AG: 0.9626264316569841; NL+QF: 0.9215380699206003; rels: [made_by]; projs: [movie_0.title]; preds: [producer_0.name = "Robin Wright"]; havings: []; superlative: []; blanks: 0
TOT: 0.880993118720071; NL: 0.8767285557917976; NL+AG: 0.9626264316569841; NL+QF: 0.880993118720071; rels: [made_by]; projs: [movie_0.title]; preds: [actor_0.name = "Robin Wright"]; havings: []; superlative: []; blanks: 0
TOT: 0.8767285557917976; NL: 0.8767285557917976; NL+AG: 0.9626264316569841; NL+QF: 0.8767285557917976; rels: [made_by]; projs: [movie_0.title]; preds: [director_0.name = "Robin Wright"]; havings: []; superlative: []; blanks: 0
TOT: 0.8662391053409028; NL: 0.8662391053409028; NL+AG: 0.9626264316569841; NL+QF: 0.8662391053409028; rels: []; projs: [movie_0.title]; preds: [director_0.name = "Robin Wright"]; havings: []; superlative: []; blanks: 1
TOT: 0.8662391053409028; NL: 0.8662391053409028; NL+AG: 0.9626264316569841; NL+QF: 0.8662391053409028; rels: []; projs: [movie_0.title]; preds: [actor_0.name = "Robin Wright"]; havings: []; superlative: []; blanks: 1
TOT: 0.8662391053409028; NL: 0.8662391053409028; NL+AG: 0.9626264316569841; NL+QF: 0.8662391053409028; rels: []; projs: [movie_0.title]; preds: [producer_0.name = "Robin Wright"]; havings: []; superlative: []; blanks: 1
TOT: 0.8418067921236444; NL: 0.8008741876262127; NL+AG: 0.939080334171806; NL+QF: 0.8418067921236444; rels: [made_by]; projs: [actor_0.name]; preds: [producer_0.name = "Robin Wright"]; havings: []; superlative: []; blanks: 0
TOT: 0.8152471364450296; NL: 0.8152471364450296; NL+AG: 0.9395222268006057; NL+QF: 0.8152471364450296; rels: [made_by]; projs: [movie_0.title]; preds: [writer_0.name = "Rob Wright"]; havings: []; superlative: []; blanks: 0
TOT: 0.813337597770946; NL: 0.773789299368099; NL+AG: 0.939080334171806; NL+QF: 0.813337597770946; rels: [made_by]; projs: [tv_series_0.title]; preds: [producer_0.name = "Robin Wright"]; havings: []; superlative: []; blanks: 0
TOT: 0.813337597770946; NL: 0.773789299368099; NL+AG: 0.939080334171806; NL+QF: 0.813337597770946; rels: [made_by]; projs: [tv_series_0.title]; preds: [producer_0.name = "Robin Wright"]; havings: []; superlative: []; blanks: 0
TOT: 0.8062882005518943; NL: 0.8008741876262127; NL+AG: 0.939080334171806; NL+QF: 0.8062882005518943; rels: [made_by]; projs: [actor_0.name]; preds: [actor_0.name = "Robin Wright"]; havings: []; superlative: []; blanks: 0

===========
RESULTS
===========
TOT: 0.9180555865160012; TR: 0.9215380699206003; QF: 0.17129629629629628; select movie_0.title from made_by as made_by_0, movie as movie_0, producer as producer_0 where producer_0.name = "Robin Wright" and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid
TOT: 0.9160713686445477; TR: 0.9215380699206003; QF: 0.06831140362095607; select movie_0.title from actor as actor_0, cast as cast_0, cast as cast_1, made_by as made_by_0, movie as movie_0, producer as producer_0, tv_series as tv_series_0 where producer_0.name = "Robin Wright" and actor_0.aid = cast_0.aid and actor_0.aid = cast_1.aid and cast_0.msid = movie_0.mid and cast_1.msid = tv_series_0.sid and made_by_0.msid = tv_series_0.sid and made_by_0.pid = producer_0.pid
TOT: 0.9160710898902915; TR: 0.9215380699206003; QF: 0.06552386105957535; select movie_0.title from directed_by as directed_by_0, directed_by as directed_by_1, director as director_0, made_by as made_by_0, movie as movie_0, producer as producer_0, tv_series as tv_series_0 where producer_0.name = "Robin Wright" and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and directed_by_1.did = director_0.did and directed_by_1.msid = tv_series_0.sid and made_by_0.msid = tv_series_0.sid and made_by_0.pid = producer_0.pid
TOT: 0.9160704016219846; TR: 0.9215380699206003; QF: 0.05864117799018342; select movie_0.title from company as company_0, copyright as copyright_0, copyright as copyright_1, made_by as made_by_0, movie as movie_0, producer as producer_0, tv_series as tv_series_0 where producer_0.name = "Robin Wright" and company_0.id = copyright_0.cid and company_0.id = copyright_1.cid and copyright_0.msid = movie_0.mid and copyright_1.msid = tv_series_0.sid and made_by_0.msid = tv_series_0.sid and made_by_0.pid = producer_0.pid
TOT: 0.9160702370813137; TR: 0.9215380699206003; QF: 0.056995771281485565; select movie_0.title from classification as classification_0, classification as classification_1, genre as genre_0, made_by as made_by_0, movie as movie_0, producer as producer_0, tv_series as tv_series_0 where producer_0.name = "Robin Wright" and classification_0.gid = genre_0.gid and classification_0.msid = movie_0.mid and classification_1.gid = genre_0.gid and classification_1.msid = tv_series_0.sid and made_by_0.msid = tv_series_0.sid and made_by_0.pid = producer_0.pid
TOT: 0.9160702370813137; TR: 0.9215380699206003; QF: 0.05699577128148557; select movie_0.title from keyword as keyword_0, made_by as made_by_0, movie as movie_0, producer as producer_0, tags as tags_0, tags as tags_1, tv_series as tv_series_0 where producer_0.name = "Robin Wright" and keyword_0.id = tags_0.kid and keyword_0.id = tags_1.kid and made_by_0.msid = tv_series_0.sid and made_by_0.pid = producer_0.pid and movie_0.mid = tags_0.msid and tags_1.msid = tv_series_0.sid
TOT: 0.9160701119561886; TR: 0.9215380699206003; QF: 0.055744520030234314; select movie_0.title from made_by as made_by_0, movie as movie_0, producer as producer_0, tv_series as tv_series_0, writer as writer_0, written_by as written_by_0, written_by as written_by_1 where producer_0.name = "Robin Wright" and made_by_0.msid = tv_series_0.sid and made_by_0.pid = producer_0.pid and movie_0.mid = written_by_0.msid and tv_series_0.sid = written_by_1.msid and writer_0.wid = written_by_0.wid and writer_0.wid = written_by_1.wid
TOT: 0.8759295842764601; TR: 0.880993118720071; QF: 0.045484607984607975; select movie_0.title from actor as actor_0, cast as cast_0, made_by as made_by_0, made_by as made_by_1, movie as movie_0, producer as producer_0, tv_series as tv_series_0 where actor_0.name = "Robin Wright" and actor_0.aid = cast_0.aid and cast_0.msid = tv_series_0.sid and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid and made_by_1.msid = tv_series_0.sid and made_by_1.pid = producer_0.pid
TOT: 0.8717079702987003; TR: 0.8767285557917976; QF: 0.04851782029201383; select movie_0.title from directed_by as directed_by_0, director as director_0, made_by as made_by_0, made_by as made_by_1, movie as movie_0, producer as producer_0, tv_series as tv_series_0 where director_0.name = "Robin Wright" and directed_by_0.did = director_0.did and directed_by_0.msid = tv_series_0.sid and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid and made_by_1.msid = tv_series_0.sid and made_by_1.pid = producer_0.pid
TOT: 0.8633169200837841; TR: 0.8662391053409028; QF: 0.24438131313131314; select movie_0.title from directed_by as directed_by_0, director as director_0, movie as movie_0 where director_0.name = "Robin Wright" and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid


01:59  INFO: ================
01:59  INFO: QUERY 95: How many movies did "Humphrey Bogart" act in before 1942?
01:59  INFO: ================
02:00  INFO: ================
02:00  INFO: QUERY 64: Find all the female actors in the movie "Saving Private Ryan"
02:00  INFO: ================
02:14  INFO: ================
02:14  INFO: QUERY 107: How many female actors were born in "New York City" after 1980?
02:14  INFO: ================
02:36  INFO: ================
02:36  INFO: QUERY 53: Find all tv series produced by Netflix
02:36  INFO: ================
429. ROOT: ROOT; NA; ; (0) 
430. Find: CMT; NA; ; (0) 
431. series: NT; NA; all; (0) tv_series.title(1.0):| tv_series(1.0):| keyword.keyword(0.95):series; series; series-in-series; | company.name(0.87):Series+; Series+; T-Series; | movie.title(0.8):Series 4; Series 4; Chinese Series; | actor.name(0.79):Eric Series; Eric Series; series editor; | tv_series.num_of_episodes(0.68):| 
433. tv: NT; NA; ; (0) tv_series.title(1.0):| tv_series(1.0):| actor.name(0.95):TVS; | company.name(0.95):TVS; TVS; TV Studios (TVS); | movie.title(0.69):| movie(0.69):| tv_series.num_of_episodes(0.67):| 
434. produced: NT; NA; ; (0) made_by(0.74):| directed_by(0.69):| producer.name(0.68):| producer(0.68):| cast.role(0.63):| cast(0.63):| written_by(0.63):| 
435. Netflix: VTTEXT; NA; ; (0) company.name(1.0):Netflix; Netflix; Netflix; | keyword.keyword(1.0):netflix; netflix-series; netflix-production; | tv_series.title(0.78):| tv_series(0.78):| cast.role(0.77):Netflix guy; | movie.title(0.74):| movie(0.74):| 
Find, VB
all, DT
tv, NN
series, NN
produced, VBN
by, IN
Netflix, NNP
root(ROOT-0, Find-1)
det(series-4, all-2)
compound(series-4, tv-3)
dobj(Find-1, series-4)
acl(series-4, produced-5)
case(Netflix-7, by-6)
nmod(produced-5, Netflix-7)

PARSE TREE:(429) ROOT ROOT
    (430) Find CMT
        (431) series NT
            (433) tv NT
            (434) produced NT
                (435) Netflix VTTEXT


===========
TRANSLATIONS
===========
TOT: 0.9282851983280498; NL: 0.9282851983280498; NL+AG: 0.9664773678070535; NL+QF: 0.9282851983280498; rels: [made_by]; projs: [tv_series_0.title]; preds: [company_0.name = "Netflix"]; havings: []; superlative: []; blanks: 1
TOT: 0.9282851983280498; NL: 0.9282851983280498; NL+AG: 0.9664773678070535; NL+QF: 0.9282851983280498; rels: [made_by]; projs: [tv_series_0.title]; preds: [keyword_0.keyword = "netflix"]; havings: []; superlative: []; blanks: 1
TOT: 0.9190573312464047; NL: 0.9126261813556491; NL+AG: 0.9664773678070535; NL+QF: 0.9190573312464047; rels: [directed_by]; projs: [tv_series_0.title]; preds: [company_0.name = "Netflix"]; havings: []; superlative: []; blanks: 1
TOT: 0.9159658533762419; NL: 0.9126261813556491; NL+AG: 0.9664773678070535; NL+QF: 0.9159658533762419; rels: [directed_by]; projs: [tv_series_0.title]; preds: [keyword_0.keyword = "netflix"]; havings: []; superlative: []; blanks: 1
TOT: 0.9073176753710547; NL: 0.9073176753710547; NL+AG: 0.9664773678070535; NL+QF: 0.9073176753710547; rels: [producer]; projs: [tv_series_0.title]; preds: [company_0.name = "Netflix"]; havings: []; superlative: []; blanks: 1
TOT: 0.9073176753710547; NL: 0.9073176753710547; NL+AG: 0.9664773678070535; NL+QF: 0.9073176753710547; rels: [producer]; projs: [tv_series_0.title]; preds: [keyword_0.keyword = "netflix"]; havings: []; superlative: []; blanks: 1
TOT: 0.8979007600118484; NL: 0.8979007600118484; NL+AG: 0.9664773678070535; NL+QF: 0.8979007600118484; rels: []; projs: [tv_series_0.title]; preds: [company_0.name = "Netflix"]; havings: []; superlative: []; blanks: 2
TOT: 0.8979007600118484; NL: 0.8979007600118484; NL+AG: 0.9664773678070535; NL+QF: 0.8979007600118484; rels: []; projs: [tv_series_0.title]; preds: [keyword_0.keyword = "netflix"]; havings: []; superlative: []; blanks: 2
TOT: 0.8928422404139222; NL: 0.8736760294322355; NL+AG: 0.9289960772223786; NL+QF: 0.8928422404139222; rels: [made_by,tv_series]; projs: [tv_series_0.title]; preds: []; havings: []; superlative: []; blanks: 1
TOT: 0.8887806221920638; NL: 0.8460771152438374; NL+AG: 0.9289960772223786; NL+QF: 0.8887806221920638; rels: [movie,directed_by]; projs: [tv_series_0.title]; preds: []; havings: []; superlative: []; blanks: 1
TOT: 0.8764772573642715; NL: 0.8539419840794807; NL+AG: 0.9289960772223786; NL+QF: 0.8764772573642715; rels: [producer,tv_series]; projs: [tv_series_0.title]; preds: []; havings: []; superlative: []; blanks: 1

===========
RESULTS
===========
TOT: 0.922749444610817; TR: 0.9282851983280498; QF: 0.0524998325631237; select tv_series_0.title from company as company_0, copyright as copyright_0, made_by as made_by_0, made_by as made_by_1, movie as movie_0, producer as producer_0, tv_series as tv_series_0 where company_0.name = "Netflix" and company_0.id = copyright_0.cid and copyright_0.msid = movie_0.mid and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid and made_by_1.msid = tv_series_0.sid and made_by_1.pid = producer_0.pid
TOT: 0.9227492800701461; TR: 0.9282851983280498; QF: 0.050854425854425844; select tv_series_0.title from keyword as keyword_0, made_by as made_by_0, made_by as made_by_1, movie as movie_0, producer as producer_0, tags as tags_0, tv_series as tv_series_0 where keyword_0.keyword = "netflix" and keyword_0.id = tags_0.kid and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid and made_by_1.msid = tv_series_0.sid and made_by_1.pid = producer_0.pid and movie_0.mid = tags_0.msid
TOT: 0.9136149002716573; TR: 0.9190573312464047; QF: 0.06294054925384039; select tv_series_0.title from company as company_0, copyright as copyright_0, directed_by as directed_by_0, directed_by as directed_by_1, director as director_0, movie as movie_0, tv_series as tv_series_0 where company_0.name = "Netflix" and company_0.id = copyright_0.cid and copyright_0.msid = movie_0.mid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and directed_by_1.did = director_0.did and directed_by_1.msid = tv_series_0.sid
TOT: 0.9105541726395253; TR: 0.9159658533762419; QF: 0.06129514254514255; select tv_series_0.title from directed_by as directed_by_0, directed_by as directed_by_1, director as director_0, keyword as keyword_0, movie as movie_0, tags as tags_0, tv_series as tv_series_0 where keyword_0.keyword = "netflix" and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and directed_by_1.did = director_0.did and directed_by_1.msid = tv_series_0.sid and keyword_0.id = tags_0.kid and movie_0.mid = tags_0.msid
TOT: 0.8946589486481358; TR: 0.8979007600118484; QF: 0.21428571428571427; select tv_series_0.title from company as company_0, copyright as copyright_0, tv_series as tv_series_0 where company_0.name = "Netflix" and company_0.id = copyright_0.cid and copyright_0.msid = tv_series_0.sid
TOT: 0.8946541867433738; TR: 0.8979007600118484; QF: 0.16666666666666666; select tv_series_0.title from keyword as keyword_0, tags as tags_0, tv_series as tv_series_0 where keyword_0.keyword = "netflix" and keyword_0.id = tags_0.kid and tags_0.msid = tv_series_0.sid
TOT: 0.8926701735037027; TR: 0.8979007600118484; QF: 0.06572809181522113; select tv_series_0.title from actor as actor_0, cast as cast_0, cast as cast_1, company as company_0, copyright as copyright_0, movie as movie_0, tv_series as tv_series_0 where company_0.name = "Netflix" and actor_0.aid = cast_0.aid and actor_0.aid = cast_1.aid and cast_0.msid = movie_0.mid and cast_1.msid = tv_series_0.sid and company_0.id = copyright_0.cid and copyright_0.msid = movie_0.mid
TOT: 0.8926700089630318; TR: 0.8979007600118484; QF: 0.06408268510652328; select tv_series_0.title from actor as actor_0, cast as cast_0, cast as cast_1, keyword as keyword_0, movie as movie_0, tags as tags_0, tv_series as tv_series_0 where keyword_0.keyword = "netflix" and actor_0.aid = cast_0.aid and actor_0.aid = cast_1.aid and cast_0.msid = movie_0.mid and cast_1.msid = tv_series_0.sid and keyword_0.id = tags_0.kid and movie_0.mid = tags_0.msid
TOT: 0.8926690419404688; TR: 0.8979007600118484; QF: 0.054412459475750616; select tv_series_0.title from classification as classification_0, classification as classification_1, company as company_0, copyright as copyright_0, genre as genre_0, movie as movie_0, tv_series as tv_series_0 where company_0.name = "Netflix" and classification_0.gid = genre_0.gid and classification_0.msid = movie_0.mid and classification_1.gid = genre_0.gid and classification_1.msid = tv_series_0.sid and company_0.id = copyright_0.cid and copyright_0.msid = movie_0.mid
TOT: 0.8926690419404688; TR: 0.8979007600118484; QF: 0.054412459475750616; select tv_series_0.title from company as company_0, copyright as copyright_0, copyright as copyright_1, keyword as keyword_0, movie as movie_0, tags as tags_0, tv_series as tv_series_0 where keyword_0.keyword = "netflix" and company_0.id = copyright_0.cid and company_0.id = copyright_1.cid and copyright_0.msid = movie_0.mid and copyright_1.msid = tv_series_0.sid and keyword_0.id = tags_0.kid and movie_0.mid = tags_0.msid


02:38  INFO: ================
02:38  INFO: QUERY 57: Who is the director of the tv series "House of Cards" from 2013?
02:38  INFO: ================
02:43  INFO: ================
02:43  INFO: QUERY 129: Which producer has worked with the most number of directors?
02:43  INFO: ================
02:44  INFO: ================
02:44  INFO: QUERY 16: How much was the budget of "Finding Nemo"
02:44  INFO: ================
02:45  INFO: ================
02:45  INFO: QUERY 9: When was "Kevin Spacey" born?
02:45  INFO: ================
02:46  INFO: ================
02:46  INFO: QUERY 88: What is the number of actors in the movie "Grumpier Old Men"?
02:46  INFO: ================
02:48  INFO: ================
02:48  INFO: QUERY 99: How many movies about Persians were released after 1990?
02:48  INFO: ================
490. ROOT: ROOT; NA; ; (0) 
491. released: NT; NA; ; (0) movie.release_year(1.0):| tv_series.release_year(1.0):| movie.title(0.64):| movie(0.64):| movie.title_aka(0.63):| tv_series.title_aka(0.63):| cast.role(0.63):| 
493. How many: CMT; count; ; (0) 
494. movies: NT; NA; ; (0) movie.title(1.0):| movie(1.0):| cast.role(0.95):Movie; Movie F; Movie AD; | company.name(0.95):Movies; Movie; Movie Movie; | tv_series.title(0.84):Movies, Movies, Movi; Movie Mob; Moon Movies; | keyword.keyword(0.83):movie-in-movie; movies-about-movies; b-movie; | actor.name(0.76):| 
495. Persians: VTTEXT; NA; ; (0) cast.role(1.0):Persian; Persian; Persian; | keyword.keyword(1.0):persian; persian-cat; persian-rug; | movie.title(0.82):Persian Version; Persian Eyes; The Persian; | director.name(0.74):Luke Persian; Persian Pink Panther; The Persian Ed Wood; | actor.name(0.74):Persian Lamb; Little Persian; Persian Princess Dia; | producer.name(0.74):Luke Persian; Persian Pink Panther; Persian Maglinte; | writer.name(0.74):Luke Persian; Persian Pink Panther; The Persian Ed Wood; | 
498. 1990: VTNUM; NA; ; (0) movie.release_year(1.0):2012; 2014; 2015; | director.birth_year(1.0):1993; 1994; 1996; | tv_series.release_year(1.0):2014; 1991; 2014; | actor.birth_year(1.0):1999; 2003; 1993; | producer.birth_year(1.0):1993; 1997; 1995; | writer.birth_year(1.0):1993; 1994; 1998; | 
499. after: OT; >; ; (0) 
How, WRB
many, JJ
movies, NNS
about, IN
Persians, NNP
were, VBD
released, VBN
after, IN
1990, CD
advmod(many-2, How-1)
dep(released-7, many-2)
nsubjpass(released-7, movies-3)
case(Persians-5, about-4)
nmod(movies-3, Persians-5)
auxpass(released-7, were-6)
root(ROOT-0, released-7)
case(1990-9, after-8)
nmod(released-7, 1990-9)

PARSE TREE:(490) ROOT ROOT
    (493) How many CMT
        (494) movies NT
            (495) Persians VTTEXT
            (491) released NT
                (498) 1990 VTNUM
                    (499) after OT


===========
TRANSLATIONS
===========
TOT: 1.0; NL: 1.0; NL+AG: 1.0; NL+QF: 1.0; rels: []; projs: [count(distinct(movie_0.title))]; preds: [cast_0.role = "Persian",movie_0.release_year > 1990]; havings: []; superlative: []; blanks: 0
TOT: 1.0; NL: 1.0; NL+AG: 1.0; NL+QF: 1.0; rels: []; projs: [count(distinct(movie_0.title))]; preds: [keyword_0.keyword = "persian",movie_0.release_year > 1990]; havings: []; superlative: []; blanks: 0
TOT: 1.0; NL: 1.0; NL+AG: 1.0; NL+QF: 1.0; rels: []; projs: [count(distinct(movie_0.title))]; preds: [cast_0.role = "Persian",tv_series_0.release_year > 1990]; havings: []; superlative: []; blanks: 0
TOT: 1.0; NL: 1.0; NL+AG: 1.0; NL+QF: 1.0; rels: []; projs: [count(distinct(movie_0.title))]; preds: [keyword_0.keyword = "persian",tv_series_0.release_year > 1990]; havings: []; superlative: []; blanks: 0
TOT: 0.938774317844795; NL: 0.936592398786078; NL+AG: 0.977167961025519; NL+QF: 0.938774317844795; rels: []; projs: [count(distinct(movie_0.title))]; preds: [movie_0.title = "Persian Version",movie_0.release_year > 1990]; havings: []; superlative: []; blanks: 0
TOT: 0.936592398786078; NL: 0.936592398786078; NL+AG: 0.977167961025519; NL+QF: 0.936592398786078; rels: []; projs: [count(distinct(movie_0.title))]; preds: [movie_0.title = "Persian Version",tv_series_0.release_year > 1990]; havings: []; superlative: []; blanks: 0
TOT: 0.9356150334650815; NL: 0.9039125735618705; NL+AG: 0.9744058626801713; NL+QF: 0.9356150334650815; rels: []; projs: [count(distinct(movie_0.title))]; preds: [director_0.name = "Luke Persian",movie_0.release_year > 1990]; havings: []; superlative: []; blanks: 0
TOT: 0.9202610931284728; NL: 0.9039125735618705; NL+AG: 0.9744058626801713; NL+QF: 0.9202610931284728; rels: []; projs: [count(distinct(movie_0.title))]; preds: [actor_0.name = "Persian Lamb",movie_0.release_year > 1990]; havings: []; superlative: []; blanks: 0
TOT: 0.9197930938122945; NL: 0.9039125735618705; NL+AG: 0.9744058626801713; NL+QF: 0.9197930938122945; rels: []; projs: [count(distinct(movie_0.title))]; preds: [director_0.name = "Luke Persian",tv_series_0.release_year > 1990]; havings: []; superlative: []; blanks: 0
TOT: 0.9179163170625435; NL: 0.9039125735618705; NL+AG: 0.9744058626801713; NL+QF: 0.9179163170625435; rels: []; projs: [count(distinct(movie_0.title))]; preds: [actor_0.name = "Persian Lamb",tv_series_0.release_year > 1990]; havings: []; superlative: []; blanks: 0
TOT: 0.9134802127015484; NL: 0.9134802127015484; NL+AG: 0.9716551101314842; NL+QF: 0.9134802127015484; rels: []; projs: [count(distinct(actor_0.name))]; preds: [cast_0.role = "Persian",movie_0.release_year > 1990]; havings: []; superlative: []; blanks: 0
TOT: 0.9134802127015484; NL: 0.9134802127015484; NL+AG: 0.9716551101314842; NL+QF: 0.9134802127015484; rels: []; projs: [count(distinct(actor_0.name))]; preds: [keyword_0.keyword = "persian",movie_0.release_year > 1990]; havings: []; superlative: []; blanks: 0
TOT: 0.9134802127015484; NL: 0.9134802127015484; NL+AG: 0.9716551101314842; NL+QF: 0.9134802127015484; rels: []; projs: [count(distinct(actor_0.name))]; preds: [cast_0.role = "Persian",tv_series_0.release_year > 1990]; havings: []; superlative: []; blanks: 0
TOT: 0.9134802127015484; NL: 0.9134802127015484; NL+AG: 0.9716551101314842; NL+QF: 0.9134802127015484; rels: []; projs: [count(distinct(actor_0.name))]; preds: [keyword_0.keyword = "persian",tv_series_0.release_year > 1990]; havings: []; superlative: []; blanks: 0

===========
RESULTS
===========
TOT: 0.9970333846566826; TR: 1.0; QF: 0.3302752293577982; select count(distinct(movie_0.title)) from cast as cast_0, movie as movie_0 where cast_0.role = "Persian" and movie_0.release_year > 1990 and cast_0.msid = movie_0.mid
TOT: 0.9957342361334458; TR: 1.0; QF: 0.18468468468468469; select count(distinct(movie_0.title)) from keyword as keyword_0, movie as movie_0, tags as tags_0 where keyword_0.keyword = "persian" and movie_0.release_year > 1990 and keyword_0.id = tags_0.kid and movie_0.mid = tags_0.msid
TOT: 0.9944353314187814; TR: 1.0; QF: 0.07916823331829348; select count(distinct(movie_0.title)) from actor as actor_0, cast as cast_0, cast as cast_1, movie as movie_0, tv_series as tv_series_0 where cast_0.role = "Persian" and tv_series_0.release_year > 1990 and actor_0.aid = cast_0.aid and actor_0.aid = cast_1.aid and cast_0.msid = movie_0.mid and cast_1.msid = tv_series_0.sid
TOT: 0.9944329551359901; TR: 1.0; QF: 0.05540540540540541; select count(distinct(movie_0.title)) from keyword as keyword_0, movie as movie_0, tags as tags_0, tags as tags_1, tv_series as tv_series_0 where keyword_0.keyword = "persian" and tv_series_0.release_year > 1990 and keyword_0.id = tags_0.kid and keyword_0.id = tags_1.kid and movie_0.mid = tags_0.msid and tags_1.msid = tv_series_0.sid
TOT: 0.9940487475367172; TR: 1.0; QF: 0.07089461125011584; select count(distinct(movie_0.title)) from cast as cast_0, directed_by as directed_by_0, directed_by as directed_by_1, director as director_0, movie as movie_0, tv_series as tv_series_0 where cast_0.role = "Persian" and tv_series_0.release_year > 1990 and cast_0.msid = movie_0.mid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and directed_by_1.did = director_0.did and directed_by_1.msid = tv_series_0.sid
TOT: 0.9940477839610875; TR: 1.0; QF: 0.061258854952967144; select count(distinct(movie_0.title)) from cast as cast_0, company as company_0, copyright as copyright_0, copyright as copyright_1, movie as movie_0, tv_series as tv_series_0 where cast_0.role = "Persian" and tv_series_0.release_year > 1990 and cast_0.msid = movie_0.mid and company_0.id = copyright_0.cid and company_0.id = copyright_1.cid and copyright_0.msid = movie_0.mid and copyright_1.msid = tv_series_0.sid
TOT: 0.9940475536041483; TR: 1.0; QF: 0.058955285560790154; select count(distinct(movie_0.title)) from cast as cast_0, keyword as keyword_0, movie as movie_0, tags as tags_0, tags as tags_1, tv_series as tv_series_0 where cast_0.role = "Persian" and tv_series_0.release_year > 1990 and cast_0.msid = movie_0.mid and keyword_0.id = tags_0.kid and keyword_0.id = tags_1.kid and movie_0.mid = tags_0.msid and tags_1.msid = tv_series_0.sid
TOT: 0.9940475536041483; TR: 1.0; QF: 0.058955285560790154; select count(distinct(movie_0.title)) from cast as cast_0, classification as classification_0, classification as classification_1, genre as genre_0, movie as movie_0, tv_series as tv_series_0 where cast_0.role = "Persian" and tv_series_0.release_year > 1990 and cast_0.msid = movie_0.mid and classification_0.gid = genre_0.gid and classification_0.msid = movie_0.mid and classification_1.gid = genre_0.gid and classification_1.msid = tv_series_0.sid
TOT: 0.9940473784289732; TR: 1.0; QF: 0.0572035338090384; select count(distinct(movie_0.title)) from cast as cast_0, movie as movie_0, tv_series as tv_series_0, writer as writer_0, written_by as written_by_0, written_by as written_by_1 where cast_0.role = "Persian" and tv_series_0.release_year > 1990 and cast_0.msid = movie_0.mid and movie_0.mid = written_by_0.msid and tv_series_0.sid = written_by_1.msid and writer_0.wid = written_by_0.wid and writer_0.wid = written_by_1.wid
TOT: 0.9940472858363806; TR: 1.0; QF: 0.05627760788311247; select count(distinct(movie_0.title)) from cast as cast_0, made_by as made_by_0, made_by as made_by_1, movie as movie_0, producer as producer_0, tv_series as tv_series_0 where cast_0.role = "Persian" and tv_series_0.release_year > 1990 and cast_0.msid = movie_0.mid and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid and made_by_1.msid = tv_series_0.sid and made_by_1.pid = producer_0.pid


02:50  INFO: ================
02:50  INFO: QUERY 91: What is the number of movies directed by "Woody Allen" per year?
02:50  INFO: ================
02:54  INFO: ================
02:54  INFO: QUERY 130: Find the latest movie which "Gabriele Ferzetti" acted in
02:54  INFO: ================
514. ROOT: ROOT; NA; ; (0) 
515. Find: CMT; NA; ; (0) 
516. movie: NT; NA; ; (0) movie.title(1.0):| movie(1.0):| cast.role(0.95):Movie; Movie F; Movie AD; | company.name(0.95):Movie; Movies; Movie Movie; | keyword.keyword(0.83):movie-in-movie; b-movie; z-movie; | actor.name(0.76):| actor(0.76):| 
518. latest: FT; max; ; (0) 
519. acted: NT; NA; ; (0) movie.release_year(0.63):| tv_series.release_year(0.63):| actor.name(0.62):| actor(0.62):| genre.genre(0.62):| genre(0.62):| made_by(0.61):| 
521. Gabriele Ferzetti: VTTEXT; NA; ; (0) actor.name(1.0):Gabriele Ferzetti; Gabriele Ferzetti; Gabriel Ferzetti; | director.name(0.73):Gabriele Ferluga; Gabriele Ferluga; Gabriele Mainetti; | writer.name(0.73):Gabriele Ferluga; Gabriele Ferluga; Gabriele Kiefer; | cast.role(0.71):Gabriele Cercetti; Gabriele Cercetti; Gabriele Cercetti; | producer.name(0.69):Gabriele Mainetti; Gabriele Mainetti; Gabriele Gauler; | movie.title(0.53):Gabriele Dambrone; Gabriele Dambrone; For Gabriele; | company.name(0.53):San Gabriele; San Gabriele; Kranzelbinder Gabrie; | 
Find, VB
the, DT
latest, JJS
movie, NN
which, WDT
Gabriele Ferzetti, NNP
acted, VBD
in, RP
root(ROOT-0, Find-1)
det(movie-4, the-2)
amod(movie-4, latest-3)
dobj(Find-1, movie-4)
dobj(acted-7, which-5)
nsubj(acted-7, Gabriele Ferzetti-6)
acl:relcl(movie-4, acted-7)
compound:prt(acted-7, in-8)

PARSE TREE:(514) ROOT ROOT
    (515) Find CMT
        (516) movie NT
            (519) acted NT
                (521) Gabriele Ferzetti VTTEXT


===========
TRANSLATIONS
===========

===========
RESULTS
===========


02:54  INFO: ================
02:54  INFO: QUERY 122: Find the movie which is classified in the most number of genres
02:54  INFO: ================
02:55  INFO: ================
02:55  INFO: QUERY 62: Find all actors from Italy born after 1980
02:55  INFO: ================
02:57  INFO: ================
02:57  INFO: QUERY 27: What was the budget of the movie Juno from 2007?
02:57  INFO: ================
03:00  INFO: ================
03:00  INFO: QUERY 20: Find the actor who played "Captain Miller" in the movie "Saving Private Ryan"
03:00  INFO: ================
03:07  INFO: ================
03:07  INFO: QUERY 117: Find all movies featuring "Benedict Cumberbatch" and "Keira Knightley"
03:07  INFO: ================
03:09  INFO: ================
03:09  INFO: QUERY 119: What is the maximum number of movies in which "Brad Pitt" act in a given year?
03:09  INFO: ================
581. ROOT: ROOT; NA; ; (0) 
582. What: CMT; NA; ; (0) 
584. number of: FT; count; ; (0) 
586. maximum: FT; max; ; (0) 
587. movies: NT; NA; ; (0) movie.title(1.0):| movie(1.0):| cast.role(0.95):Movie; Movie F; Movie AD; | company.name(0.95):Movies; Movie; Movie Movie; | tv_series.title(0.84):Movies, Movies, Movi; Movie Mob; Moon Movies; | keyword.keyword(0.83):movie-in-movie; movies-about-movies; b-movie; | actor.name(0.76):| 
589. act: NT; NA; ; (0) movie.release_year(0.63):| tv_series.release_year(0.63):| actor.name(0.62):| actor(0.62):| genre.genre(0.62):| genre(0.62):| made_by(0.61):| 
592. Brad Pitt: VTTEXT; NA; ; (0) actor.name(1.0):Brad Pitt; Brad Pitt; bRad sPitt; | cast.role(1.0):Brad Pitt'; Brad Pitt'; Brad Pitt #1; | producer.name(1.0):Brad Pitt; Brad Pitt; Mad Pitt; | director.name(0.78):Brad Pruitt; Brad Pruitt; Brad Witty; | writer.name(0.78):Brad Pruitt; Brad Pruitt; Brad Witt; | movie.title(0.72):Brad Pitt Video Port; Brad Pitt Video Port; Brad; | actor.birth_city(0.61):Brad; Brad; Pitt Meadows; | 
593. year: NT; NA; ; (0) movie.release_year(1.0):| director.birth_year(1.0):| tv_series.release_year(1.0):| actor.birth_year(1.0):| producer.birth_year(1.0):| writer.birth_year(1.0):| movie.title(0.95):Year; Years; Years; | 
596. given: NT; NA; ; (0) made_by(0.8):| directed_by(0.68):| written_by(0.67):| cast.role(0.66):| cast(0.66):| movie.release_year(0.59):| tv_series.release_year(0.59):| 
What, WP
is, VBZ
the, DT
maximum, JJ
number, NN
of, IN
movies, NNS
in, IN
which, WDT
Brad Pitt, NNP
act, VBP
in, IN
a, DT
given, VBN
year, NN
root(ROOT-0, What-1)
cop(What-1, is-2)
det(number-5, the-3)
amod(number-5, maximum-4)
nsubj(What-1, number-5)
case(movies-7, of-6)
nmod(number-5, movies-7)
case(which-9, in-8)
nmod(act-11, which-9)
nsubj(act-11, Brad Pitt-10)
acl:relcl(movies-7, act-11)
case(year-15, in-12)
det(year-15, a-13)
amod(year-15, given-14)
nmod(act-11, year-15)

PARSE TREE:(581) ROOT ROOT
    (582) What CMT
        (584) number of FT
            (586) maximum FT
            (587) movies NT
                (589) act NT
                    (592) Brad Pitt VTTEXT
                    (593) year NT
                        (596) given NT


===========
TRANSLATIONS
===========
TOT: 0.7791182611450765; NL: 0.7717313085512446; NL+AG: 0.9321837389655881; NL+QF: 0.7791182611450765; rels: []; projs: [actor_0.birth_year]; preds: [actor_0.name = "Brad Pitt"]; havings: []; superlative: [count(distinct(movie_0.title)) desc limit 1]; blanks: 2
TOT: 0.7743081244497138; NL: 0.7717313085512446; NL+AG: 0.9321837389655881; NL+QF: 0.7743081244497138; rels: []; projs: [movie_0.release_year]; preds: [actor_0.name = "Brad Pitt"]; havings: []; superlative: [count(distinct(movie_0.title)) desc limit 1]; blanks: 2
TOT: 0.7717313085512446; NL: 0.7717313085512446; NL+AG: 0.9321837389655881; NL+QF: 0.7717313085512446; rels: []; projs: [director_0.birth_year]; preds: [actor_0.name = "Brad Pitt"]; havings: []; superlative: [count(distinct(movie_0.title)) desc limit 1]; blanks: 2
TOT: 0.7717313085512446; NL: 0.7717313085512446; NL+AG: 0.9321837389655881; NL+QF: 0.7717313085512446; rels: []; projs: [tv_series_0.release_year]; preds: [actor_0.name = "Brad Pitt"]; havings: []; superlative: [count(distinct(movie_0.title)) desc limit 1]; blanks: 2
TOT: 0.7717313085512446; NL: 0.7717313085512446; NL+AG: 0.9321837389655881; NL+QF: 0.7717313085512446; rels: []; projs: [producer_0.birth_year]; preds: [actor_0.name = "Brad Pitt"]; havings: []; superlative: [count(distinct(movie_0.title)) desc limit 1]; blanks: 2
TOT: 0.7717313085512446; NL: 0.7717313085512446; NL+AG: 0.9321837389655881; NL+QF: 0.7717313085512446; rels: []; projs: [writer_0.birth_year]; preds: [actor_0.name = "Brad Pitt"]; havings: []; superlative: [count(distinct(movie_0.title)) desc limit 1]; blanks: 2
TOT: 0.7717313085512446; NL: 0.7717313085512446; NL+AG: 0.9321837389655881; NL+QF: 0.7717313085512446; rels: []; projs: [movie_0.release_year]; preds: [cast_0.role = "Brad Pitt'"]; havings: []; superlative: [count(distinct(movie_0.title)) desc limit 1]; blanks: 2
TOT: 0.7717313085512446; NL: 0.7717313085512446; NL+AG: 0.9321837389655881; NL+QF: 0.7717313085512446; rels: []; projs: [director_0.birth_year]; preds: [cast_0.role = "Brad Pitt'"]; havings: []; superlative: [count(distinct(movie_0.title)) desc limit 1]; blanks: 2
TOT: 0.7717313085512446; NL: 0.7717313085512446; NL+AG: 0.9321837389655881; NL+QF: 0.7717313085512446; rels: []; projs: [tv_series_0.release_year]; preds: [cast_0.role = "Brad Pitt'"]; havings: []; superlative: [count(distinct(movie_0.title)) desc limit 1]; blanks: 2
TOT: 0.7717313085512446; NL: 0.7717313085512446; NL+AG: 0.9321837389655881; NL+QF: 0.7717313085512446; rels: []; projs: [actor_0.birth_year]; preds: [cast_0.role = "Brad Pitt'"]; havings: []; superlative: [count(distinct(movie_0.title)) desc limit 1]; blanks: 2
TOT: 0.7717313085512446; NL: 0.7717313085512446; NL+AG: 0.9321837389655881; NL+QF: 0.7717313085512446; rels: []; projs: [producer_0.birth_year]; preds: [cast_0.role = "Brad Pitt'"]; havings: []; superlative: [count(distinct(movie_0.title)) desc limit 1]; blanks: 2
TOT: 0.7717313085512446; NL: 0.7717313085512446; NL+AG: 0.9321837389655881; NL+QF: 0.7717313085512446; rels: []; projs: [writer_0.birth_year]; preds: [cast_0.role = "Brad Pitt'"]; havings: []; superlative: [count(distinct(movie_0.title)) desc limit 1]; blanks: 2
TOT: 0.7717313085512446; NL: 0.7717313085512446; NL+AG: 0.9321837389655881; NL+QF: 0.7717313085512446; rels: []; projs: [movie_0.release_year]; preds: [producer_0.name = "Brad Pitt"]; havings: []; superlative: [count(distinct(movie_0.title)) desc limit 1]; blanks: 2
TOT: 0.7717313085512446; NL: 0.7717313085512446; NL+AG: 0.9321837389655881; NL+QF: 0.7717313085512446; rels: []; projs: [director_0.birth_year]; preds: [producer_0.name = "Brad Pitt"]; havings: []; superlative: [count(distinct(movie_0.title)) desc limit 1]; blanks: 2
TOT: 0.7717313085512446; NL: 0.7717313085512446; NL+AG: 0.9321837389655881; NL+QF: 0.7717313085512446; rels: []; projs: [tv_series_0.release_year]; preds: [producer_0.name = "Brad Pitt"]; havings: []; superlative: [count(distinct(movie_0.title)) desc limit 1]; blanks: 2
TOT: 0.7717313085512446; NL: 0.7717313085512446; NL+AG: 0.9321837389655881; NL+QF: 0.7717313085512446; rels: []; projs: [actor_0.birth_year]; preds: [producer_0.name = "Brad Pitt"]; havings: []; superlative: [count(distinct(movie_0.title)) desc limit 1]; blanks: 2
TOT: 0.7717313085512446; NL: 0.7717313085512446; NL+AG: 0.9321837389655881; NL+QF: 0.7717313085512446; rels: []; projs: [producer_0.birth_year]; preds: [producer_0.name = "Brad Pitt"]; havings: []; superlative: [count(distinct(movie_0.title)) desc limit 1]; blanks: 2
TOT: 0.7717313085512446; NL: 0.7717313085512446; NL+AG: 0.9321837389655881; NL+QF: 0.7717313085512446; rels: []; projs: [writer_0.birth_year]; preds: [producer_0.name = "Brad Pitt"]; havings: []; superlative: [count(distinct(movie_0.title)) desc limit 1]; blanks: 2

===========
RESULTS
===========
TOT: 0.7770670498173595; TR: 0.7791182611450765; QF: 0.24203618756371048; select actor_0.birth_year from actor as actor_0, cast as cast_0, movie as movie_0 where actor_0.name = "Brad Pitt" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid group by actor_0.birth_year order by count(distinct(movie_0.title)) desc limit 1
TOT: 0.7750745193488847; TR: 0.7791182611450765; QF: 0.05592532467532467; select actor_0.birth_year from actor as actor_0, cast as cast_0, directed_by as directed_by_0, directed_by as directed_by_1, director as director_0, movie as movie_0, tv_series as tv_series_0 where actor_0.name = "Brad Pitt" and actor_0.aid = cast_0.aid and cast_0.msid = tv_series_0.sid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and directed_by_1.did = director_0.did and directed_by_1.msid = tv_series_0.sid group by actor_0.birth_year order by count(distinct(movie_0.title)) desc limit 1
TOT: 0.7750738310805777; TR: 0.7791182611450765; QF: 0.04904264160593274; select actor_0.birth_year from actor as actor_0, cast as cast_0, company as company_0, copyright as copyright_0, copyright as copyright_1, movie as movie_0, tv_series as tv_series_0 where actor_0.name = "Brad Pitt" and actor_0.aid = cast_0.aid and cast_0.msid = tv_series_0.sid and company_0.id = copyright_0.cid and company_0.id = copyright_1.cid and copyright_0.msid = movie_0.mid and copyright_1.msid = tv_series_0.sid group by actor_0.birth_year order by count(distinct(movie_0.title)) desc limit 1
TOT: 0.7750736665399068; TR: 0.7791182611450765; QF: 0.047397234897234894; select actor_0.birth_year from actor as actor_0, cast as cast_0, classification as classification_0, classification as classification_1, genre as genre_0, movie as movie_0, tv_series as tv_series_0 where actor_0.name = "Brad Pitt" and actor_0.aid = cast_0.aid and cast_0.msid = tv_series_0.sid and classification_0.gid = genre_0.gid and classification_0.msid = movie_0.mid and classification_1.gid = genre_0.gid and classification_1.msid = tv_series_0.sid group by actor_0.birth_year order by count(distinct(movie_0.title)) desc limit 1
TOT: 0.7750736665399068; TR: 0.7791182611450765; QF: 0.0473972348972349; select actor_0.birth_year from actor as actor_0, cast as cast_0, keyword as keyword_0, movie as movie_0, tags as tags_0, tags as tags_1, tv_series as tv_series_0 where actor_0.name = "Brad Pitt" and actor_0.aid = cast_0.aid and cast_0.msid = tv_series_0.sid and keyword_0.id = tags_0.kid and keyword_0.id = tags_1.kid and movie_0.mid = tags_0.msid and tags_1.msid = tv_series_0.sid group by actor_0.birth_year order by count(distinct(movie_0.title)) desc limit 1
TOT: 0.7750735414147818; TR: 0.7791182611450765; QF: 0.04614598364598364; select actor_0.birth_year from actor as actor_0, cast as cast_0, movie as movie_0, tv_series as tv_series_0, writer as writer_0, written_by as written_by_0, written_by as written_by_1 where actor_0.name = "Brad Pitt" and actor_0.aid = cast_0.aid and cast_0.msid = tv_series_0.sid and movie_0.mid = written_by_0.msid and tv_series_0.sid = written_by_1.msid and writer_0.wid = written_by_0.wid and writer_0.wid = written_by_1.wid group by actor_0.birth_year order by count(distinct(movie_0.title)) desc limit 1
TOT: 0.7750734752772156; TR: 0.7791182611450765; QF: 0.045484607984607975; select actor_0.birth_year from actor as actor_0, cast as cast_0, made_by as made_by_0, made_by as made_by_1, movie as movie_0, producer as producer_0, tv_series as tv_series_0 where actor_0.name = "Brad Pitt" and actor_0.aid = cast_0.aid and cast_0.msid = tv_series_0.sid and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid and made_by_1.msid = tv_series_0.sid and made_by_1.pid = producer_0.pid group by actor_0.birth_year order by count(distinct(movie_0.title)) desc limit 1
TOT: 0.7723050144889503; TR: 0.7743081244497138; QF: 0.24203618756371048; select movie_0.release_year from actor as actor_0, cast as cast_0, movie as movie_0 where actor_0.name = "Brad Pitt" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid group by movie_0.release_year order by count(distinct(movie_0.title)) desc limit 1
TOT: 0.7710473801224147; TR: 0.7717313085512446; QF: 0.3302752293577982; select movie_0.release_year from cast as cast_0, movie as movie_0 where cast_0.role = "Brad Pitt'" and cast_0.msid = movie_0.mid group by movie_0.release_year order by count(distinct(movie_0.title)) desc limit 1
TOT: 0.7703124840204755; TR: 0.7743081244497138; QF: 0.05592532467532467; select movie_0.release_year from actor as actor_0, cast as cast_0, directed_by as directed_by_0, directed_by as directed_by_1, director as director_0, movie as movie_0, tv_series as tv_series_0 where actor_0.name = "Brad Pitt" and actor_0.aid = cast_0.aid and cast_0.msid = tv_series_0.sid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and directed_by_1.did = director_0.did and directed_by_1.msid = tv_series_0.sid group by movie_0.release_year order by count(distinct(movie_0.title)) desc limit 1


03:11  INFO: ================
03:11  INFO: QUERY 116: What movies have the same director as the movie "Revolutionary Road"?
03:11  INFO: ================
03:15  INFO: ================
03:15  INFO: QUERY 47: What are the series featuring "Kerry Washington"?
03:15  INFO: ================
610. ROOT: ROOT; NA; ; (0) 
611. featuring: NT; NA; ; (0) tv_series.title(0.69):| tv_series(0.69):| movie.release_year(0.64):| tv_series.release_year(0.64):| made_by(0.64):| movie.title_aka(0.62):| tv_series.title_aka(0.62):| 
612. What: CMT; NA; ; (0) 
614. series: NT; NA; ; (0) tv_series.title(1.0):| tv_series(1.0):| keyword.keyword(0.95):series; series; series-in-series; | company.name(0.87):Series+; Series+; T-Series; | movie.title(0.8):Series 4; Series 4; Chinese Series; | actor.name(0.79):Eric Series; Eric Series; series editor; | tv_series.num_of_episodes(0.68):| 
616. Kerry Washington: VTTEXT; NA; ; (0) actor.name(1.0):Kerry Washington; Kerry Washington; Jerry Washington; | producer.name(1.0):Kerry Washington; Kerry Washington; Terry Washington; | director.name(0.93):Jerry Washington; Leroy Washington; Tony Washington; | writer.name(0.93):Jerry Washington; Ellery Washington; Leroy Washington; | cast.role(0.91):Sherry Washington; Roy Washington; Amy Washington; | director.birth_city(0.77):Washington; Washington; Washington; | actor.birth_city(0.77):Washington; Washington; Washington; | 
What, WP
are, VBP
the, DT
series, NN
featuring, VBG
Kerry Washington, NNP
dep(featuring-5, What-1)
aux(featuring-5, are-2)
det(series-4, the-3)
nsubj(featuring-5, series-4)
root(ROOT-0, featuring-5)
dobj(featuring-5, Kerry Washington-6)

PARSE TREE:(610) ROOT ROOT
    (612) What CMT
        (614) series NT
            (611) featuring NT
                (616) Kerry Washington VTTEXT


===========
TRANSLATIONS
===========
TOT: 1.0; NL: 1.0; NL+AG: 1.0; NL+QF: 1.0; rels: []; projs: [tv_series_0.title]; preds: [actor_0.name = "Kerry Washington"]; havings: []; superlative: []; blanks: 0
TOT: 1.0; NL: 1.0; NL+AG: 1.0; NL+QF: 1.0; rels: []; projs: [tv_series_0.title]; preds: [producer_0.name = "Kerry Washington"]; havings: []; superlative: []; blanks: 0
TOT: 0.9660917830792959; NL: 0.9660917830792959; NL+AG: 0.9963430420711974; NL+QF: 0.9660917830792959; rels: []; projs: [tv_series_0.title]; preds: [director_0.name = "Jerry Washington"]; havings: []; superlative: []; blanks: 0
TOT: 0.9660917830792959; NL: 0.9660917830792959; NL+AG: 0.9963430420711974; NL+QF: 0.9660917830792959; rels: []; projs: [tv_series_0.title]; preds: [writer_0.name = "Jerry Washington"]; havings: []; superlative: []; blanks: 0
TOT: 0.9554427922043668; NL: 0.9554427922043668; NL+AG: 0.995220589804275; NL+QF: 0.9554427922043668; rels: []; projs: [tv_series_0.title]; preds: [cast_0.role = "Sherry Washington"]; havings: []; superlative: []; blanks: 0
TOT: 0.8801117367933934; NL: 0.8801117367933934; NL+AG: 0.9890291262135922; NL+QF: 0.8801117367933934; rels: []; projs: [tv_series_0.title]; preds: [director_0.birth_city = "Washington"]; havings: []; superlative: []; blanks: 0
TOT: 0.8801117367933934; NL: 0.8801117367933934; NL+AG: 0.9890291262135922; NL+QF: 0.8801117367933934; rels: []; projs: [tv_series_0.title]; preds: [actor_0.birth_city = "Washington"]; havings: []; superlative: []; blanks: 0
TOT: 0.8662391053409028; NL: 0.8662391053409028; NL+AG: 0.9626264316569841; NL+QF: 0.8662391053409028; rels: []; projs: [tv_series_0.title]; preds: [actor_0.name = "Kerry Washington"]; havings: []; superlative: []; blanks: 1
TOT: 0.8662391053409028; NL: 0.8662391053409028; NL+AG: 0.9626264316569841; NL+QF: 0.8662391053409028; rels: []; projs: [tv_series_0.title]; preds: [producer_0.name = "Kerry Washington"]; havings: []; superlative: []; blanks: 1
TOT: 0.846544991160274; NL: 0.846544991160274; NL+AG: 0.9547666454343248; NL+QF: 0.846544991160274; rels: []; projs: [tv_series_0.title]; preds: [director_0.name = "Jerry Washington"]; havings: []; superlative: []; blanks: 1
TOT: 0.846544991160274; NL: 0.846544991160274; NL+AG: 0.9547666454343248; NL+QF: 0.846544991160274; rels: []; projs: [tv_series_0.title]; preds: [writer_0.name = "Jerry Washington"]; havings: []; superlative: []; blanks: 1

===========
RESULTS
===========
TOT: 0.9957371962364059; TR: 1.0; QF: 0.21428571428571427; select tv_series_0.title from made_by as made_by_0, producer as producer_0, tv_series as tv_series_0 where producer_0.name = "Kerry Washington" and made_by_0.msid = tv_series_0.sid and made_by_0.pid = producer_0.pid
TOT: 0.9957304772609369; TR: 1.0; QF: 0.14709595959595959; select tv_series_0.title from actor as actor_0, cast as cast_0, tv_series as tv_series_0 where actor_0.name = "Kerry Washington" and actor_0.aid = cast_0.aid and cast_0.msid = tv_series_0.sid
TOT: 0.9937487971042298; TR: 1.0; QF: 0.06948821438500337; select tv_series_0.title from actor as actor_0, cast as cast_0, directed_by as directed_by_0, directed_by as directed_by_1, director as director_0, movie as movie_0, tv_series as tv_series_0 where actor_0.name = "Kerry Washington" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and directed_by_1.did = director_0.did and directed_by_1.msid = tv_series_0.sid
TOT: 0.9937481088359229; TR: 1.0; QF: 0.06260553131561145; select tv_series_0.title from actor as actor_0, cast as cast_0, company as company_0, copyright as copyright_0, copyright as copyright_1, movie as movie_0, tv_series as tv_series_0 where actor_0.name = "Kerry Washington" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and company_0.id = copyright_0.cid and company_0.id = copyright_1.cid and copyright_0.msid = movie_0.mid and copyright_1.msid = tv_series_0.sid
TOT: 0.9937480652886107; TR: 1.0; QF: 0.062170058193896365; select tv_series_0.title from actor as actor_0, cast as cast_0, cast as cast_1, made_by as made_by_0, movie as movie_0, producer as producer_0, tv_series as tv_series_0 where producer_0.name = "Kerry Washington" and actor_0.aid = cast_0.aid and actor_0.aid = cast_1.aid and cast_0.msid = movie_0.mid and cast_1.msid = tv_series_0.sid and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid
TOT: 0.993747944295252; TR: 1.0; QF: 0.060960124606913586; select tv_series_0.title from actor as actor_0, cast as cast_0, classification as classification_0, classification as classification_1, genre as genre_0, movie as movie_0, tv_series as tv_series_0 where actor_0.name = "Kerry Washington" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and classification_0.gid = genre_0.gid and classification_0.msid = movie_0.mid and classification_1.gid = genre_0.gid and classification_1.msid = tv_series_0.sid
TOT: 0.993747944295252; TR: 1.0; QF: 0.0609601246069136; select tv_series_0.title from actor as actor_0, cast as cast_0, keyword as keyword_0, movie as movie_0, tags as tags_0, tags as tags_1, tv_series as tv_series_0 where actor_0.name = "Kerry Washington" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and keyword_0.id = tags_0.kid and keyword_0.id = tags_1.kid and movie_0.mid = tags_0.msid and tags_1.msid = tv_series_0.sid
TOT: 0.9937478191701269; TR: 1.0; QF: 0.059708873355662336; select tv_series_0.title from actor as actor_0, cast as cast_0, movie as movie_0, tv_series as tv_series_0, writer as writer_0, written_by as written_by_0, written_by as written_by_1 where actor_0.name = "Kerry Washington" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and movie_0.mid = written_by_0.msid and tv_series_0.sid = written_by_1.msid and writer_0.wid = written_by_0.wid and writer_0.wid = written_by_1.wid
TOT: 0.9937477865343546; TR: 1.0; QF: 0.05938251563251563; select tv_series_0.title from directed_by as directed_by_0, directed_by as directed_by_1, director as director_0, made_by as made_by_0, movie as movie_0, producer as producer_0, tv_series as tv_series_0 where producer_0.name = "Kerry Washington" and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and directed_by_1.did = director_0.did and directed_by_1.msid = tv_series_0.sid and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid
TOT: 0.9937477530325608; TR: 1.0; QF: 0.05904749769428668; select tv_series_0.title from actor as actor_0, cast as cast_0, made_by as made_by_0, made_by as made_by_1, movie as movie_0, producer as producer_0, tv_series as tv_series_0 where actor_0.name = "Kerry Washington" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid and made_by_1.msid = tv_series_0.sid and made_by_1.pid = producer_0.pid


03:16  INFO: ================
03:16  INFO: QUERY 69: Find all the directors who are from Afghanistan
03:16  INFO: ================
03:17  INFO: ================
03:17  INFO: QUERY 127: Who directed the latest movie by "NBCUniversal"
03:17  INFO: ================
628. ROOT: ROOT; NA; ; (0) 
629. directed: NT; NA; ; (0) directed_by(1.0):| director.name(0.72):| director(0.72):| written_by(0.68):| cast.role(0.67):| cast(0.67):| made_by(0.67):| 
630. Who: CMT; NA; ; (0) director.name(1.0):| actor.name(1.0):| producer.name(1.0):| writer.name(1.0):| 
631. movie: NT; NA; ; (0) movie.title(1.0):| movie(1.0):| cast.role(0.95):Movie; Movie F; Movie AD; | company.name(0.95):Movie; Movies; Movie Movie; | keyword.keyword(0.83):movie-in-movie; b-movie; z-movie; | actor.name(0.76):| actor(0.76):| 
633. latest: FT; max; ; (0) 
634. NBCUniversal: VTTEXT; NA; ; (0) company.name(1.0):NBCUniversal; NBCUniversal Media; NBCUniversal Skycast; | genre.genre(0.2):Commercial; Commercial; Experimental; | 
Who, WP
directed, VBD
the, DT
latest, JJS
movie, NN
by, IN
NBCUniversal, NNP
nsubj(directed-2, Who-1)
root(ROOT-0, directed-2)
det(movie-5, the-3)
amod(movie-5, latest-4)
dobj(directed-2, movie-5)
case(NBCUniversal-7, by-6)
nmod(directed-2, NBCUniversal-7)

PARSE TREE:(628) ROOT ROOT
    (630) Who CMT
        (629) directed NT
            (631) movie NT
            (634) NBCUniversal VTTEXT


===========
TRANSLATIONS
===========
TOT: 0.9858214234596546; NL: 0.9830475724915585; NL+AG: 0.9947199354012503; NL+QF: 0.9858214234596546; rels: []; projs: [actor_0.name]; preds: [cast_0.role = "Movie",company_0.name = "NBCUniversal"]; havings: []; superlative: []; blanks: 0
TOT: 0.9830475724915585; NL: 0.9830475724915585; NL+AG: 0.9947199354012503; NL+QF: 0.9830475724915585; rels: []; projs: [director_0.name]; preds: [cast_0.role = "Movie",company_0.name = "NBCUniversal"]; havings: []; superlative: []; blanks: 0
TOT: 0.9830475724915585; NL: 0.9830475724915585; NL+AG: 0.9947199354012503; NL+QF: 0.9830475724915585; rels: []; projs: [producer_0.name]; preds: [cast_0.role = "Movie",company_0.name = "NBCUniversal"]; havings: []; superlative: []; blanks: 0
TOT: 0.9830475724915585; NL: 0.9830475724915585; NL+AG: 0.9947199354012503; NL+QF: 0.9830475724915585; rels: []; projs: [writer_0.name]; preds: [cast_0.role = "Movie",company_0.name = "NBCUniversal"]; havings: []; superlative: []; blanks: 0
TOT: 0.943605885173802; NL: 0.9355249205979076; NL+AG: 0.977752260626729; NL+QF: 0.943605885173802; rels: []; projs: [director_0.name]; preds: [company_0.name = "NBCUniversal"]; havings: []; superlative: [movie_0.title desc limit 1]; blanks: 1
TOT: 0.9174505626104981; NL: 0.9174505626104981; NL+AG: 0.9733138759953143; NL+QF: 0.9174505626104981; rels: []; projs: [director_0.name]; preds: [company_0.name = "NBCUniversal"]; havings: []; superlative: [movie_0.title desc limit 1]; blanks: 1
TOT: 0.9174505626104981; NL: 0.9174505626104981; NL+AG: 0.9733138759953143; NL+QF: 0.9174505626104981; rels: []; projs: [actor_0.name]; preds: [company_0.name = "NBCUniversal"]; havings: []; superlative: [movie_0.title desc limit 1]; blanks: 1
TOT: 0.9174505626104981; NL: 0.9174505626104981; NL+AG: 0.9733138759953143; NL+QF: 0.9174505626104981; rels: []; projs: [producer_0.name]; preds: [company_0.name = "NBCUniversal"]; havings: []; superlative: [movie_0.title desc limit 1]; blanks: 1
TOT: 0.9174505626104981; NL: 0.9174505626104981; NL+AG: 0.9733138759953143; NL+QF: 0.9174505626104981; rels: []; projs: [writer_0.name]; preds: [company_0.name = "NBCUniversal"]; havings: []; superlative: [movie_0.title desc limit 1]; blanks: 1
TOT: 0.8657117502352817; NL: 0.8582978647386919; NL+AG: 0.9510661366220432; NL+QF: 0.8657117502352817; rels: []; projs: [director_0.name]; preds: [company_0.name = "NBCUniversal"]; havings: []; superlative: [movie_0.title desc limit 1]; blanks: 1
TOT: 0.8582978647386919; NL: 0.8582978647386919; NL+AG: 0.9448334504536765; NL+QF: 0.8582978647386919; rels: []; projs: [director_0.name]; preds: []; havings: []; superlative: [movie_0.title desc limit 1]; blanks: 2

===========
RESULTS
===========
TOT: 0.980403770982084; TR: 0.9858214234596546; QF: 0.13147161576278404; select actor_0.name from actor as actor_0, cast as cast_0, company as company_0, copyright as copyright_0, movie as movie_0 where cast_0.role = "Movie" and company_0.name = "NBCUniversal" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and company_0.id = copyright_0.cid and copyright_0.msid = movie_0.mid
TOT: 0.9804014652707241; TR: 0.9858214234596546; QF: 0.10841450216450217; select actor_0.name from actor as actor_0, cast as cast_0, company as company_0, copyright as copyright_0, tv_series as tv_series_0 where cast_0.role = "Movie" and company_0.name = "NBCUniversal" and actor_0.aid = cast_0.aid and cast_0.msid = tv_series_0.sid and company_0.id = copyright_0.cid and copyright_0.msid = tv_series_0.sid
TOT: 0.977269768353993; TR: 0.9830475724915585; QF: 0.11013511757922977; select director_0.name from cast as cast_0, company as company_0, copyright as copyright_0, directed_by as directed_by_0, director as director_0, movie as movie_0 where cast_0.role = "Movie" and company_0.name = "NBCUniversal" and cast_0.msid = movie_0.mid and company_0.id = copyright_0.cid and copyright_0.msid = movie_0.mid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid
TOT: 0.977268399246249; TR: 0.9830475724915585; QF: 0.09644404013815233; select writer_0.name from cast as cast_0, company as company_0, copyright as copyright_0, movie as movie_0, writer as writer_0, written_by as written_by_0 where cast_0.role = "Movie" and company_0.name = "NBCUniversal" and cast_0.msid = movie_0.mid and company_0.id = copyright_0.cid and copyright_0.msid = movie_0.mid and movie_0.mid = written_by_0.msid and writer_0.wid = written_by_0.wid
TOT: 0.9772683066536564; TR: 0.9830475724915585; QF: 0.09551811421222639; select producer_0.name from cast as cast_0, company as company_0, copyright as copyright_0, made_by as made_by_0, movie as movie_0, producer as producer_0 where cast_0.role = "Movie" and company_0.name = "NBCUniversal" and cast_0.msid = movie_0.mid and company_0.id = copyright_0.cid and copyright_0.msid = movie_0.mid and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid
TOT: 0.9772676293011097; TR: 0.9830475724915585; QF: 0.08874458874458874; select producer_0.name from cast as cast_0, company as company_0, copyright as copyright_0, made_by as made_by_0, producer as producer_0, tv_series as tv_series_0 where cast_0.role = "Movie" and company_0.name = "NBCUniversal" and cast_0.msid = tv_series_0.sid and company_0.id = copyright_0.cid and copyright_0.msid = tv_series_0.sid and made_by_0.msid = tv_series_0.sid and made_by_0.pid = producer_0.pid
TOT: 0.9772667101557388; TR: 0.9830475724915585; QF: 0.07955313503700599; select director_0.name from cast as cast_0, company as company_0, copyright as copyright_0, directed_by as directed_by_0, director as director_0, tv_series as tv_series_0 where cast_0.role = "Movie" and company_0.name = "NBCUniversal" and cast_0.msid = tv_series_0.sid and company_0.id = copyright_0.cid and copyright_0.msid = tv_series_0.sid and directed_by_0.did = director_0.did and directed_by_0.msid = tv_series_0.sid
TOT: 0.9772666769201572; TR: 0.9830475724915585; QF: 0.0792207792207792; select writer_0.name from cast as cast_0, company as company_0, copyright as copyright_0, tv_series as tv_series_0, writer as writer_0, written_by as written_by_0 where cast_0.role = "Movie" and company_0.name = "NBCUniversal" and cast_0.msid = tv_series_0.sid and company_0.id = copyright_0.cid and copyright_0.msid = tv_series_0.sid and tv_series_0.sid = written_by_0.msid and writer_0.wid = written_by_0.wid
TOT: 0.9386104584328568; TR: 0.943605885173802; QF: 0.13217515343306482; select director_0.name from company as company_0, copyright as copyright_0, directed_by as directed_by_0, director as director_0, movie as movie_0 where company_0.name = "NBCUniversal" and company_0.id = copyright_0.cid and copyright_0.msid = movie_0.mid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid order by movie_0.title desc limit 1
TOT: 0.9379171405214272; TR: 0.943605885173802; QF: 0.054659165719073546; select director_0.name from company as company_0, copyright as copyright_0, directed_by as directed_by_0, directed_by as directed_by_1, director as director_0, movie as movie_0, tv_series as tv_series_0 where company_0.name = "NBCUniversal" and company_0.id = copyright_0.cid and copyright_0.msid = tv_series_0.sid and directed_by_0.did = director_0.did and directed_by_0.msid = tv_series_0.sid and directed_by_1.did = director_0.did and directed_by_1.msid = movie_0.mid order by movie_0.title desc limit 1


03:18  INFO: ================
03:18  INFO: QUERY 82: which company funded the "Mickey Mouse" series
03:18  INFO: ================
03:21  INFO: ================
03:21  INFO: QUERY 25: Find all movies written and produced by "Woody Allen"
03:21  INFO: ================
645. ROOT: ROOT; NA; ; (0) 
646. Find: CMT; NA; ; (0) 
647. movies: NT; NA; all; (0) movie.title(1.0):| movie(1.0):| cast.role(0.95):Movie; Movie F; Movie AD; | company.name(0.95):Movies; Movie; Movie Movie; | tv_series.title(0.84):Movies, Movies, Movi; Movie Mob; Moon Movies; | keyword.keyword(0.83):movie-in-movie; movies-about-movies; b-movie; | actor.name(0.76):| 
649. written: NT; NA; ; (0) written_by(1.0):| writer.name(0.78):| writer(0.78):| directed_by(0.68):| movie.title_aka(0.66):| tv_series.title_aka(0.66):| made_by(0.65):| 
651. produced: NT; NA; ; (0) made_by(0.74):| directed_by(0.69):| producer.name(0.68):| producer(0.68):| cast.role(0.63):| cast(0.63):| written_by(0.63):| 
652. Woody Allen: VTTEXT; NA; ; (0) director.name(1.0):Woody Allen; Woody Allen; Moody Allen; | actor.name(1.0):Woody Allen; Woody Allen; Jody Allen; | producer.name(1.0):Woody Allen; Woody Allen; Moody Allen; | writer.name(1.0):Woody Allen; Woody Allen; Moody Allen; | cast.role(0.85):Woody Allen Jr.; Woody Allen Jr.; Young Woody Allen; | movie.title(0.82):F.U. Woody Allen; F.U. Woody Allen; Woody Before Allen; | tv_series.title(0.73):The Woody Allen Show; The Woody Allen Show; Dave Allen; | 
Find, VB
all, DT
movies, NNS
written, VBN
and, CC
produced, VBN
by, IN
Woody Allen, NNP
root(ROOT-0, Find-1)
det(movies-3, all-2)
dobj(Find-1, movies-3)
acl(movies-3, written-4)
cc(written-4, and-5)
conj(written-4, produced-6)
case(Woody Allen-8, by-7)
nmod(written-4, Woody Allen-8)

PARSE TREE:(645) ROOT ROOT
    (646) Find CMT
        (647) movies NT
            (649) written NT
                (652) Woody Allen VTTEXT
            (651) produced NT


===========
TRANSLATIONS
===========
TOT: 0.9460310846547597; NL: 0.9126261813556491; NL+AG: 0.9664773678070535; NL+QF: 0.9460310846547597; rels: [written_by,directed_by]; projs: [movie_0.title]; preds: [director_0.name = "Woody Allen"]; havings: []; superlative: []; blanks: 0
TOT: 0.9456709988576465; NL: 0.9282851983280498; NL+AG: 0.9664773678070535; NL+QF: 0.9456709988576465; rels: [made_by,written_by]; projs: [movie_0.title]; preds: [producer_0.name = "Woody Allen"]; havings: []; superlative: []; blanks: 0
TOT: 0.9303945400494207; NL: 0.9073176753710547; NL+AG: 0.9664773678070535; NL+QF: 0.9303945400494207; rels: [producer,written_by]; projs: [movie_0.title]; preds: [producer_0.name = "Woody Allen"]; havings: []; superlative: []; blanks: 0
TOT: 0.9299064329246562; NL: 0.9282851983280498; NL+AG: 0.9664773678070535; NL+QF: 0.9299064329246562; rels: [made_by,written_by]; projs: [movie_0.title]; preds: [actor_0.name = "Woody Allen"]; havings: []; superlative: []; blanks: 0
TOT: 0.9294511702808901; NL: 0.9126261813556491; NL+AG: 0.9664773678070535; NL+QF: 0.9294511702808901; rels: [written_by,directed_by]; projs: [movie_0.title]; preds: [actor_0.name = "Woody Allen"]; havings: []; superlative: []; blanks: 0
TOT: 0.9282851983280498; NL: 0.9282851983280498; NL+AG: 0.9664773678070535; NL+QF: 0.9282851983280498; rels: [made_by,written_by]; projs: [movie_0.title]; preds: [director_0.name = "Woody Allen"]; havings: []; superlative: []; blanks: 0
TOT: 0.9282851983280498; NL: 0.9282851983280498; NL+AG: 0.9664773678070535; NL+QF: 0.9282851983280498; rels: [made_by,written_by]; projs: [movie_0.title]; preds: [writer_0.name = "Woody Allen"]; havings: []; superlative: []; blanks: 0
TOT: 0.9238231225476615; NL: 0.9126261813556491; NL+AG: 0.9664773678070535; NL+QF: 0.9238231225476615; rels: [written_by,directed_by]; projs: [movie_0.title]; preds: [producer_0.name = "Woody Allen"]; havings: []; superlative: []; blanks: 0
TOT: 0.9238231225476615; NL: 0.9126261813556491; NL+AG: 0.9664773678070535; NL+QF: 0.9238231225476615; rels: [written_by,directed_by]; projs: [movie_0.title]; preds: [writer_0.name = "Woody Allen"]; havings: []; superlative: []; blanks: 0
TOT: 0.9094891672581761; NL: 0.9073176753710547; NL+AG: 0.9664773678070535; NL+QF: 0.9094891672581761; rels: [producer,written_by]; projs: [movie_0.title]; preds: [actor_0.name = "Woody Allen"]; havings: []; superlative: []; blanks: 0
TOT: 0.9073176753710547; NL: 0.9073176753710547; NL+AG: 0.9664773678070535; NL+QF: 0.9073176753710547; rels: [producer,written_by]; projs: [movie_0.title]; preds: [director_0.name = "Woody Allen"]; havings: []; superlative: []; blanks: 0
TOT: 0.9073176753710547; NL: 0.9073176753710547; NL+AG: 0.9664773678070535; NL+QF: 0.9073176753710547; rels: [producer,written_by]; projs: [movie_0.title]; preds: [writer_0.name = "Woody Allen"]; havings: []; superlative: []; blanks: 0

===========
RESULTS
===========
TOT: 0.9403175400105988; TR: 0.9460310846547597; QF: 0.0491791959533895; select movie_0.title from directed_by as directed_by_0, director as director_0, movie as movie_0, tv_series as tv_series_0, writer as writer_0, written_by as written_by_0, written_by as written_by_1 where director_0.name = "Woody Allen" and directed_by_0.did = director_0.did and directed_by_0.msid = tv_series_0.sid and movie_0.mid = written_by_0.msid and tv_series_0.sid = written_by_1.msid and writer_0.wid = written_by_0.wid and writer_0.wid = written_by_1.wid
TOT: 0.9399617116038643; TR: 0.9456709988576465; QF: 0.055744520030234314; select movie_0.title from made_by as made_by_0, movie as movie_0, producer as producer_0, tv_series as tv_series_0, writer as writer_0, written_by as written_by_0, written_by as written_by_1 where producer_0.name = "Woody Allen" and made_by_0.msid = tv_series_0.sid and made_by_0.pid = producer_0.pid and movie_0.mid = written_by_0.msid and tv_series_0.sid = written_by_1.msid and writer_0.wid = written_by_0.wid and writer_0.wid = written_by_1.wid
TOT: 0.9227490226698887; TR: 0.9282851983280498; QF: 0.04828042328042328; select movie_0.title from made_by as made_by_0, made_by as made_by_1, movie as movie_0, producer as producer_0, tv_series as tv_series_0, writer as writer_0, written_by as written_by_0 where writer_0.name = "Woody Allen" and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid and made_by_1.msid = tv_series_0.sid and made_by_1.pid = producer_0.pid and tv_series_0.sid = written_by_0.msid and writer_0.wid = written_by_0.wid
TOT: 0.9183326117189734; TR: 0.9238231225476615; QF: 0.05872113997113997; select movie_0.title from directed_by as directed_by_0, directed_by as directed_by_1, director as director_0, movie as movie_0, tv_series as tv_series_0, writer as writer_0, written_by as written_by_0 where writer_0.name = "Woody Allen" and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and directed_by_1.did = director_0.did and directed_by_1.msid = tv_series_0.sid and tv_series_0.sid = written_by_0.msid and writer_0.wid = written_by_0.wid


03:23  INFO: ================
03:23  INFO: QUERY 105: How many movies did "Steven Spielberg" direct?
03:23  INFO: ================
03:25  INFO: ================
03:25  INFO: QUERY 23: Who acted "John Nash" in the movie "A Beautiful Mind"?
03:25  INFO: ================
03:31  INFO: ===== FOLD 2 =====
03:31  INFO: ===== Parsing Results =====
03:31  INFO: Total Queries: 98
03:31  INFO: Correctly Parsed: 97/98

03:31  INFO: ================
03:31  INFO: QUERY 120: Find the actor with the most number of films
03:31  INFO: ================
03:33  INFO: ================
03:33  INFO: QUERY 108: How many actors are in the movie "Saving Private Ryan"?
03:33  INFO: ================
03:34  INFO: ================
03:34  INFO: QUERY 34: Find all actors who were born in "New York City" in 1984
03:34  INFO: ================
03:36  INFO: ================
03:36  INFO: QUERY 19: Who is the director of the movie "Catch Me If You Can"?
03:36  INFO: ================
03:39  INFO: ================
03:39  INFO: QUERY 59: Find all the female actors from Austin
03:39  INFO: ================
03:42  INFO: ================
03:42  INFO: QUERY 32: What company produced the movie "Juno"?
03:42  INFO: ================
724. ROOT: ROOT; NA; ; (0) 
725. produced: NT; NA; ; (0) made_by(0.74):| directed_by(0.69):| producer.name(0.68):| producer(0.68):| cast.role(0.63):| cast(0.63):| written_by(0.63):| 
726. company: NT; NA; ; (0) company.name(1.0):| company(1.0):| movie.title(0.95):Company; Company; Company; | cast.role(0.95):Company; Company; Company; | keyword.keyword(0.95):company; company-k; it-company; | tv_series.title(0.82):X Company; Eco Company; Company and Co; | actor.name(0.74):Eva Company; Angel Company; Marc Company; | 
727. What: CMT; NA; ; (0) 
728. Juno: VTTEXT; NA; ; (0) movie.title(1.0):Juno; Juno; Jeni, Juno; | actor.name(1.0):Juno; Juno Leung; Juno Mak; | company.name(1.0):Juno; Juno; Juno Pix; | cast.role(0.83):Juno Luno; Juno Luno; Juno Luno; | director.name(0.65):Juno Mak; Juno Lee; Juno Doran; | producer.name(0.65):Juno Mak; Juno Lee; Juno Leed; | writer.name(0.65):Juno Mak; Juno Jakob; Peter Juno; | 
729. movie: NT; NA; ; (0) movie.title(1.0):| movie(1.0):| cast.role(0.95):Movie; Movie F; Movie AD; | company.name(0.95):Movie; Movies; Movie Movie; | keyword.keyword(0.83):movie-in-movie; b-movie; z-movie; | actor.name(0.76):| actor(0.76):| 
What, WDT
company, NN
produced, VBD
the, DT
movie, NN
Juno, NNP
det(company-2, What-1)
nsubj(produced-3, company-2)
root(ROOT-0, produced-3)
det(movie-5, the-4)
nsubj(Juno-6, movie-5)
xcomp(produced-3, Juno-6)

PARSE TREE:(724) ROOT ROOT
    (727) What CMT
        (726) company NT
            (725) produced NT
                (728) Juno VTTEXT
                    (729) movie NT


===========
TRANSLATIONS
===========
TOT: 0.9320444070394425; NL: 0.9282851983280498; NL+AG: 0.9664773678070535; NL+QF: 0.9320444070394425; rels: [made_by,movie]; projs: [company_0.name]; preds: [actor_0.name = "Juno"]; havings: []; superlative: []; blanks: 0
TOT: 0.9316894814132766; NL: 0.9126261813556491; NL+AG: 0.9664773678070535; NL+QF: 0.9316894814132766; rels: [movie,directed_by]; projs: [company_0.name]; preds: [actor_0.name = "Juno"]; havings: []; superlative: []; blanks: 0
TOT: 0.9316597053603425; NL: 0.9126261813556491; NL+AG: 0.9664773678070535; NL+QF: 0.9316597053603425; rels: [movie,directed_by]; projs: [company_0.name]; preds: [movie_0.title = "Juno"]; havings: []; superlative: []; blanks: 0
TOT: 0.9312785251017116; NL: 0.9126261813556491; NL+AG: 0.9664773678070535; NL+QF: 0.9312785251017116; rels: [movie,directed_by]; projs: [company_0.name]; preds: [company_0.name = "Juno"]; havings: []; superlative: []; blanks: 0
TOT: 0.9304818163879918; NL: 0.9282851983280498; NL+AG: 0.9664773678070535; NL+QF: 0.9304818163879918; rels: [made_by,movie]; projs: [company_0.name]; preds: [movie_0.title = "Juno"]; havings: []; superlative: []; blanks: 0
TOT: 0.9304818163879918; NL: 0.9282851983280498; NL+AG: 0.9664773678070535; NL+QF: 0.9304818163879918; rels: [made_by,movie]; projs: [company_0.name]; preds: [company_0.name = "Juno"]; havings: []; superlative: []; blanks: 0
TOT: 0.9123464055008278; NL: 0.9073176753710547; NL+AG: 0.9664773678070535; NL+QF: 0.9123464055008278; rels: [producer,movie]; projs: [company_0.name]; preds: [actor_0.name = "Juno"]; havings: []; superlative: []; blanks: 0
TOT: 0.9102588322984833; NL: 0.9073176753710547; NL+AG: 0.9664773678070535; NL+QF: 0.9102588322984833; rels: [producer,movie]; projs: [company_0.name]; preds: [movie_0.title = "Juno"]; havings: []; superlative: []; blanks: 0
TOT: 0.9102588322984833; NL: 0.9073176753710547; NL+AG: 0.9664773678070535; NL+QF: 0.9102588322984833; rels: [producer,movie]; projs: [company_0.name]; preds: [company_0.name = "Juno"]; havings: []; superlative: []; blanks: 0
TOT: 0.8979007600118484; NL: 0.8979007600118484; NL+AG: 0.9664773678070535; NL+QF: 0.8979007600118484; rels: [movie]; projs: [company_0.name]; preds: [movie_0.title = "Juno"]; havings: []; superlative: []; blanks: 1
TOT: 0.8979007600118484; NL: 0.8979007600118484; NL+AG: 0.9664773678070535; NL+QF: 0.8979007600118484; rels: [movie]; projs: [company_0.name]; preds: [actor_0.name = "Juno"]; havings: []; superlative: []; blanks: 1
TOT: 0.8979007600118484; NL: 0.8979007600118484; NL+AG: 0.9664773678070535; NL+QF: 0.8979007600118484; rels: [movie]; projs: [company_0.name]; preds: [company_0.name = "Juno"]; havings: []; superlative: []; blanks: 1

===========
RESULTS
===========
TOT: 0.9260912481812709; TR: 0.9316597053603425; QF: 0.06291591740458856; select company_0.name from company as company_0, copyright as copyright_0, directed_by as directed_by_0, directed_by as directed_by_1, director as director_0, movie as movie_0, tv_series as tv_series_0 where movie_0.title = "Juno" and company_0.id = copyright_0.cid and copyright_0.msid = tv_series_0.sid and directed_by_0.did = director_0.did and directed_by_0.msid = tv_series_0.sid and directed_by_1.did = director_0.did and directed_by_1.msid = movie_0.mid
TOT: 0.9249246666127232; TR: 0.9304818163879918; QF: 0.058201058201058205; select company_0.name from company as company_0, copyright as copyright_0, made_by as made_by_0, made_by as made_by_1, movie as movie_0, producer as producer_0, tv_series as tv_series_0 where movie_0.title = "Juno" and company_0.id = copyright_0.cid and copyright_0.msid = tv_series_0.sid and made_by_0.msid = tv_series_0.sid and made_by_0.pid = producer_0.pid and made_by_1.msid = movie_0.mid and made_by_1.pid = producer_0.pid
TOT: 0.8946566867433738; TR: 0.8979007600118484; QF: 0.19166666666666665; select company_0.name from company as company_0, copyright as copyright_0, movie as movie_0 where movie_0.title = "Juno" and company_0.id = copyright_0.cid and copyright_0.msid = movie_0.mid
TOT: 0.8933620945772729; TR: 0.8979007600118484; QF: 0.12927570093457944; select company_0.name from actor as actor_0, cast as cast_0, company as company_0, copyright as copyright_0, movie as movie_0 where actor_0.name = "Juno" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and company_0.id = copyright_0.cid and copyright_0.msid = movie_0.mid
TOT: 0.8933549170071795; TR: 0.8979007600118484; QF: 0.057499999999999996; select company_0.name from company as company_0, company as company_1, copyright as copyright_0, copyright as copyright_1, movie as movie_0 where company_1.name = "Juno" and company_0.id = copyright_0.cid and company_1.id = copyright_1.cid and copyright_0.msid = movie_0.mid and copyright_1.msid = movie_0.mid
TOT: 0.8926699900395313; TR: 0.8979007600118484; QF: 0.06389345010034665; select company_0.name from actor as actor_0, cast as cast_0, cast as cast_1, company as company_0, copyright as copyright_0, movie as movie_0, tv_series as tv_series_0 where movie_0.title = "Juno" and actor_0.aid = cast_0.aid and actor_0.aid = cast_1.aid and cast_0.msid = tv_series_0.sid and cast_1.msid = movie_0.mid and company_0.id = copyright_0.cid and copyright_0.msid = tv_series_0.sid
TOT: 0.8926694208003413; TR: 0.8979007600118484; QF: 0.058201058201058205; select company_0.name from company as company_0, copyright as copyright_0, movie as movie_0, tv_series as tv_series_0, writer as writer_0, written_by as written_by_0, written_by as written_by_1 where movie_0.title = "Juno" and company_0.id = copyright_0.cid and copyright_0.msid = tv_series_0.sid and movie_0.mid = written_by_1.msid and tv_series_0.sid = written_by_0.msid and writer_0.wid = written_by_0.wid and writer_0.wid = written_by_1.wid
TOT: 0.8926694208003413; TR: 0.8979007600118484; QF: 0.058201058201058205; select company_0.name from company as company_0, copyright as copyright_0, keyword as keyword_0, movie as movie_0, tags as tags_0, tags as tags_1, tv_series as tv_series_0 where movie_0.title = "Juno" and company_0.id = copyright_0.cid and copyright_0.msid = tv_series_0.sid and keyword_0.id = tags_0.kid and keyword_0.id = tags_1.kid and movie_0.mid = tags_1.msid and tags_0.msid = tv_series_0.sid
TOT: 0.8926694208003413; TR: 0.8979007600118484; QF: 0.058201058201058205; select company_0.name from classification as classification_0, classification as classification_1, company as company_0, copyright as copyright_0, genre as genre_0, movie as movie_0, tv_series as tv_series_0 where movie_0.title = "Juno" and classification_0.gid = genre_0.gid and classification_0.msid = tv_series_0.sid and classification_1.gid = genre_0.gid and classification_1.msid = movie_0.mid and company_0.id = copyright_0.cid and copyright_0.msid = tv_series_0.sid


03:43  INFO: ================
03:43  INFO: QUERY 7: In what year was "Benedict Cumberbatch" born
03:43  INFO: ================
03:44  INFO: ================
03:44  INFO: QUERY 11: Where is the birthplace of "Kevin Spacey"
03:44  INFO: ================
03:45  INFO: ================
03:45  INFO: QUERY 66: Who is the actor playing "Alan Turing" in "The Imitation Game"?
03:45  INFO: ================
748. ROOT: ROOT; NA; ; (0) 
749. Who: CMT; NA; ; (0) 
751. Alan Turing: VTTEXT; NA; ; (0) cast.role(1.0):Alan Turing; Alan Turing; Alana Turing; | movie.title(0.79):Decoding Alan Turing; Decoding Alan Turing; Dear Alan: A Tribute; | director.name(0.76):Allen Turing; Alan Tang; Alan Tang; | actor.name(0.76):Allen Turing; Alan King; Alan King; | writer.name(0.76):Allen Turing; Alan Tang; Alan Tang; | producer.name(0.7):Alan Tang; Alan Tang; Alan King; | company.name(0.63):Allan Alan Pictures; Allan Alan Pictures; Alan Trading Company; | 
753. actor: NT; NA; ; (0) actor.name(1.0):| actor(1.0):| movie.title(0.95):Actor; Actor; Actor; | tv_series.title(0.95):Actor; Actors; The Actor Factor; | cast.role(0.95):Actors; Actors; Actors; | keyword.keyword(0.95):actors; actor-director; ex-actor; | movie.title(0.76):| 
754. playing: VTTEXT; NA; ; (0) movie.title(0.95):Playing; Playing; Playing 25; | cast.role(0.95):playing; Playing; Playing; | keyword.keyword(0.95):playing; playing-gin; playing-go; | tv_series.title(0.7):Playing Dead; Multi Playing; Playing Hooky; | tv_series.num_of_seasons(0.68):| movie.title_aka(0.66):| tv_series.title_aka(0.66):| 
755. The Imitation Game: VTTEXT; NA; ; (0) movie.title(1.0):The Imitation Game; The Imitation Game; The Imitation Game; | cast.role(0.84):The Imitation Game &; The Imitation Game &; The Imitation Game &; | tv_series.title(0.74):The Temptation Game; The Game; The Game; | keyword.keyword(0.69):imitation; imitation; camel-imitation; | company.name(0.67):Game Station, the; Game Station; Imagination Games; | actor.name(0.64):The Game; The Game; Simon Game; | producer.name(0.64):The Game; The Game; Simon Game; | 
Who, WP
is, VBZ
the, DT
actor, NN
playing, NN
Alan Turing, NN
in, IN
The Imitation Game, NNP
root(ROOT-0, Who-1)
cop(Who-1, is-2)
det(Alan Turing-6, the-3)
compound(Alan Turing-6, actor-4)
compound(Alan Turing-6, playing-5)
nsubj(Who-1, Alan Turing-6)
case(The Imitation Game-8, in-7)
nmod(Alan Turing-6, The Imitation Game-8)

PARSE TREE:(748) ROOT ROOT
    (749) Who CMT
        (751) Alan Turing VTTEXT
            (753) actor NT
            (754) playing VTTEXT
            (755) The Imitation Game VTTEXT


===========
TRANSLATIONS
===========
TOT: 0.839125174031199; NL: 0.839125174031199; NL+AG: 0.9369631460257548; NL+QF: 0.839125174031199; rels: []; projs: [actor_0.aid]; preds: [actor_0.name = "Allen Turing",movie_0.title = "The Imitation Game"]; havings: []; superlative: []; blanks: 1
TOT: 0.8144063193621914; NL: 0.7550415303475492; NL+AG: 0.9524692987209032; NL+QF: 0.8144063193621914; rels: []; projs: [actor_0.name]; preds: [cast_0.role = "Alan Turing",movie_0.title = "The Imitation Game"]; havings: []; superlative: []; blanks: 1
TOT: 0.803374959172446; NL: 0.803374959172446; NL+AG: 0.9120515927474118; NL+QF: 0.803374959172446; rels: []; projs: [actor_0.aid]; preds: [actor_0.name = "Allen Turing",cast_0.role = "The Imitation Game & Selma"]; havings: []; superlative: []; blanks: 1
TOT: 0.798706103448217; NL: 0.798706103448217; NL+AG: 0.905790963813992; NL+QF: 0.798706103448217; rels: []; projs: [movie_0.mid]; preds: [movie_0.title = "Decoding Alan Turing",movie_0.title = "The Imitation Game"]; havings: []; superlative: []; blanks: 1
TOT: 0.798634547539037; NL: 0.7758393689196864; NL+AG: 0.9356688081706614; NL+QF: 0.798634547539037; rels: []; projs: [actor_0.aid]; preds: [actor_0.name = "Allen Turing",cast_0.role = "playing",movie_0.title = "The Imitation Game"]; havings: []; superlative: []; blanks: 0
TOT: 0.7970571170539851; NL: 0.6980972118841674; NL+AG: 0.9707542724124226; NL+QF: 0.7970571170539851; rels: []; projs: [actor_0.name]; preds: [cast_0.role = "Alan Turing",cast_0.role = "playing",movie_0.title = "The Imitation Game"]; havings: []; superlative: []; blanks: 0
TOT: 0.796288502884526; NL: 0.6980972118841674; NL+AG: 0.9707542724124226; NL+QF: 0.796288502884526; rels: []; projs: [actor_0.name]; preds: [cast_0.role = "Alan Turing",movie_0.title = "Playing",movie_0.title = "The Imitation Game"]; havings: []; superlative: []; blanks: 0
TOT: 0.7891634855442764; NL: 0.6683553734916184; NL+AG: 0.9539578746730878; NL+QF: 0.7891634855442764; rels: []; projs: [actor_0.name]; preds: [cast_0.role = "Alan Turing",movie_0.title = "Playing",cast_0.role = "The Imitation Game & Selma"]; havings: []; superlative: []; blanks: 0
TOT: 0.7867665196818688; NL: 0.7228736276644114; NL+AG: 0.9345674681323004; NL+QF: 0.7867665196818688; rels: []; projs: [actor_0.name]; preds: [cast_0.role = "Alan Turing",cast_0.role = "The Imitation Game & Selma"]; havings: []; superlative: []; blanks: 1
TOT: 0.7858049356222503; NL: 0.7384686557246904; NL+AG: 0.9058798698624496; NL+QF: 0.7858049356222503; rels: []; projs: [movie_0.mid]; preds: [movie_0.title = "Decoding Alan Turing",cast_0.role = "playing",movie_0.title = "The Imitation Game"]; havings: []; superlative: []; blanks: 0
TOT: 0.7804668247676972; NL: 0.6584082067266795; NL+AG: 0.9497367001646511; NL+QF: 0.7804668247676972; rels: []; projs: [actor_0.name]; preds: [movie_0.title = "Decoding Alan Turing",cast_0.role = "playing",movie_0.title = "The Imitation Game"]; havings: []; superlative: []; blanks: 0

===========
RESULTS
===========
TOT: 0.8364736151895092; TR: 0.839125174031199; QF: 0.2392523364485981; select actor_0.aid from actor as actor_0, cast as cast_0, movie as movie_0 where actor_0.name = "Allen Turing" and movie_0.title = "The Imitation Game" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid
TOT: 0.8344814959014907; TR: 0.839125174031199; QF: 0.05725327812284335; select actor_0.aid from actor as actor_0, cast as cast_0, directed_by as directed_by_0, directed_by as directed_by_1, director as director_0, movie as movie_0, tv_series as tv_series_0 where actor_0.name = "Allen Turing" and movie_0.title = "The Imitation Game" and actor_0.aid = cast_0.aid and cast_0.msid = tv_series_0.sid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and directed_by_1.did = director_0.did and directed_by_1.msid = tv_series_0.sid
TOT: 0.8344807308911387; TR: 0.839125174031199; QF: 0.04960317460317461; select actor_0.aid from actor as actor_0, cast as cast_0, company as company_0, copyright as copyright_0, copyright as copyright_1, movie as movie_0, tv_series as tv_series_0 where actor_0.name = "Allen Turing" and movie_0.title = "The Imitation Game" and actor_0.aid = cast_0.aid and cast_0.msid = tv_series_0.sid and company_0.id = copyright_0.cid and company_0.id = copyright_1.cid and copyright_0.msid = movie_0.mid and copyright_1.msid = tv_series_0.sid
TOT: 0.834480691208599; TR: 0.839125174031199; QF: 0.04920634920634921; select actor_0.aid from actor as actor_0, cast as cast_0, keyword as keyword_0, movie as movie_0, tags as tags_0, tags as tags_1, tv_series as tv_series_0 where actor_0.name = "Allen Turing" and movie_0.title = "The Imitation Game" and actor_0.aid = cast_0.aid and cast_0.msid = tv_series_0.sid and keyword_0.id = tags_0.kid and keyword_0.id = tags_1.kid and movie_0.mid = tags_0.msid and tags_1.msid = tv_series_0.sid
TOT: 0.834480631148539; TR: 0.839125174031199; QF: 0.04860574860574861; select actor_0.aid from actor as actor_0, cast as cast_0, movie as movie_0, tv_series as tv_series_0, writer as writer_0, written_by as written_by_0, written_by as written_by_1 where actor_0.name = "Allen Turing" and movie_0.title = "The Imitation Game" and actor_0.aid = cast_0.aid and cast_0.msid = tv_series_0.sid and movie_0.mid = written_by_0.msid and tv_series_0.sid = written_by_1.msid and writer_0.wid = written_by_0.wid and writer_0.wid = written_by_1.wid
TOT: 0.8344805694429979; TR: 0.839125174031199; QF: 0.04798869319417265; select actor_0.aid from actor as actor_0, cast as cast_0, classification as classification_0, classification as classification_1, genre as genre_0, movie as movie_0, tv_series as tv_series_0 where actor_0.name = "Allen Turing" and movie_0.title = "The Imitation Game" and actor_0.aid = cast_0.aid and cast_0.msid = tv_series_0.sid and classification_0.gid = genre_0.gid and classification_0.msid = movie_0.mid and classification_1.gid = genre_0.gid and classification_1.msid = tv_series_0.sid
TOT: 0.8344805694429979; TR: 0.839125174031199; QF: 0.04798869319417265; select actor_0.aid from actor as actor_0, cast as cast_0, made_by as made_by_0, made_by as made_by_1, movie as movie_0, producer as producer_0, tv_series as tv_series_0 where actor_0.name = "Allen Turing" and movie_0.title = "The Imitation Game" and actor_0.aid = cast_0.aid and cast_0.msid = tv_series_0.sid and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid and made_by_1.msid = tv_series_0.sid and made_by_1.pid = producer_0.pid
TOT: 0.8120019490671917; TR: 0.8144063193621914; QF: 0.2392523364485981; select actor_0.name from actor as actor_0, cast as cast_0, movie as movie_0 where cast_0.role = "Alan Turing" and movie_0.title = "The Imitation Game" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid
TOT: 0.8100098297791731; TR: 0.8144063193621914; QF: 0.05725327812284335; select actor_0.name from actor as actor_0, cast as cast_0, directed_by as directed_by_0, directed_by as directed_by_1, director as director_0, movie as movie_0, tv_series as tv_series_0 where cast_0.role = "Alan Turing" and movie_0.title = "The Imitation Game" and actor_0.aid = cast_0.aid and cast_0.msid = tv_series_0.sid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and directed_by_1.did = director_0.did and directed_by_1.msid = tv_series_0.sid
TOT: 0.8100090647688212; TR: 0.8144063193621914; QF: 0.04960317460317461; select actor_0.name from actor as actor_0, cast as cast_0, company as company_0, copyright as copyright_0, copyright as copyright_1, movie as movie_0, tv_series as tv_series_0 where cast_0.role = "Alan Turing" and movie_0.title = "The Imitation Game" and actor_0.aid = cast_0.aid and cast_0.msid = tv_series_0.sid and company_0.id = copyright_0.cid and company_0.id = copyright_1.cid and copyright_0.msid = movie_0.mid and copyright_1.msid = tv_series_0.sid


03:49  INFO: ================
03:49  INFO: QUERY 109: How many movies did "Shahab Hosseini" act in
03:49  INFO: ================
03:50  INFO: ================
03:50  INFO: QUERY 103: How many movies did "Quentin Tarantino" direct before 2002 and after 2010?
03:50  INFO: ================
767. ROOT: ROOT; NA; ; (0) 
768. direct: NT; NA; ; (0) directed_by(1.0):| director.name(0.72):| director(0.72):| written_by(0.68):| cast.role(0.67):| cast(0.67):| made_by(0.67):| 
769. movies: NT; NA; ; (0) movie.title(1.0):| movie(1.0):| cast.role(0.95):Movie; Movie F; Movie AD; | company.name(0.95):Movies; Movie; Movie Movie; | tv_series.title(0.84):Movies, Movies, Movi; Movie Mob; Moon Movies; | keyword.keyword(0.83):movie-in-movie; movies-about-movies; b-movie; | actor.name(0.76):| 
771. How many: CMT; count; ; (0) 
773. Quentin Tarantino: VTTEXT; NA; ; (0) director.name(1.0):Quentin Tarantino; Quentin Tarantino; Quentin Tarrantino; | actor.name(1.0):Quentin Tarantino; Quentin Tarantino; Quentin Tarrantino; | producer.name(1.0):Quentin Tarantino; Quentin Tarantino; Quentin Tarrantino; | writer.name(1.0):Quentin Tarantino; Quentin Tarantino; Quentin Tarrantino; | cast.role(0.85):Quentin Tarrantino '; Quentin Tarrantino '; Quentin Tarrantino '; | movie.title(0.84):21 Years: Quentin Ta; 21 Years: Quentin Ta; Quentin Tarantino's ; | writer.birth_city(0.74):San Quentin; San Quentin; Saint-Quentin; | 
774. 2002: VTNUM; NA; ; (0) movie.release_year(1.0):1963; 1971; 1913; | director.birth_year(1.0):1927; 1958; 1924; | tv_series.release_year(1.0):1987; 1991; 1968; | actor.birth_year(1.0):1935; 1958; 1924; | producer.birth_year(1.0):1926; 1964; 1985; | writer.birth_year(1.0):1955; 1926; 1985; | 
775. before: OT; <; ; (0) 
777. 2010: VTNUM; NA; ; (0) movie.release_year(1.0):2012; 2014; 2015; | tv_series.release_year(1.0):2014; 2014; 2013; | actor.birth_year(1.0):2011; 2013; 2013; | 
778. after: OT; >; ; (0) 
How, WRB
many, JJ
movies, NNS
did, VBD
Quentin Tarantino, NNP
direct, VB
before, IN
2002, CD
and, CC
after, IN
2010, CD
advmod(many-2, How-1)
amod(movies-3, many-2)
dobj(direct-6, movies-3)
aux(direct-6, did-4)
nsubj(direct-6, Quentin Tarantino-5)
root(ROOT-0, direct-6)
case(2002-8, before-7)
nmod(direct-6, 2002-8)
cc(2002-8, and-9)
case(2010-11, after-10)
conj(2002-8, 2010-11)

PARSE TREE:(767) ROOT ROOT
    (771) How many CMT
        (769) movies NT
            (768) direct NT
                (773) Quentin Tarantino VTTEXT
                (774) 2002 VTNUM
                    (775) before OT
                (777) 2010 VTNUM
                    (778) after OT


===========
TRANSLATIONS
===========
TOT: 0.920066463578981; NL: 0.920066463578981; NL+AG: 0.9625; NL+QF: 0.920066463578981; rels: []; projs: [count(distinct(movie_0.title))]; preds: [director_0.name = "Quentin Tarantino",movie_0.release_year > 2010]; havings: [count(distinct(director_0.name)) < 2002]; superlative: []; blanks: 0
TOT: 0.920066463578981; NL: 0.920066463578981; NL+AG: 0.9625; NL+QF: 0.920066463578981; rels: []; projs: [count(distinct(movie_0.title))]; preds: [director_0.name = "Quentin Tarantino",tv_series_0.release_year > 2010]; havings: [count(distinct(director_0.name)) < 2002]; superlative: []; blanks: 0
TOT: 0.920066463578981; NL: 0.920066463578981; NL+AG: 0.9625; NL+QF: 0.920066463578981; rels: []; projs: [count(distinct(movie_0.title))]; preds: [director_0.name = "Quentin Tarantino",actor_0.birth_year > 2010]; havings: [count(distinct(director_0.name)) < 2002]; superlative: []; blanks: 0
TOT: 0.920066463578981; NL: 0.920066463578981; NL+AG: 0.9625; NL+QF: 0.920066463578981; rels: []; projs: [count(distinct(movie_0.title))]; preds: [actor_0.name = "Quentin Tarantino",movie_0.release_year > 2010]; havings: [count(distinct(director_0.name)) < 2002]; superlative: []; blanks: 0
TOT: 0.920066463578981; NL: 0.920066463578981; NL+AG: 0.9625; NL+QF: 0.920066463578981; rels: []; projs: [count(distinct(movie_0.title))]; preds: [actor_0.name = "Quentin Tarantino",tv_series_0.release_year > 2010]; havings: [count(distinct(director_0.name)) < 2002]; superlative: []; blanks: 0
TOT: 0.920066463578981; NL: 0.920066463578981; NL+AG: 0.9625; NL+QF: 0.920066463578981; rels: []; projs: [count(distinct(movie_0.title))]; preds: [actor_0.name = "Quentin Tarantino",actor_0.birth_year > 2010]; havings: [count(distinct(director_0.name)) < 2002]; superlative: []; blanks: 0
TOT: 0.920066463578981; NL: 0.920066463578981; NL+AG: 0.9625; NL+QF: 0.920066463578981; rels: []; projs: [count(distinct(movie_0.title))]; preds: [producer_0.name = "Quentin Tarantino",movie_0.release_year > 2010]; havings: [count(distinct(director_0.name)) < 2002]; superlative: []; blanks: 0
TOT: 0.920066463578981; NL: 0.920066463578981; NL+AG: 0.9625; NL+QF: 0.920066463578981; rels: []; projs: [count(distinct(movie_0.title))]; preds: [producer_0.name = "Quentin Tarantino",tv_series_0.release_year > 2010]; havings: [count(distinct(director_0.name)) < 2002]; superlative: []; blanks: 0
TOT: 0.920066463578981; NL: 0.920066463578981; NL+AG: 0.9625; NL+QF: 0.920066463578981; rels: []; projs: [count(distinct(movie_0.title))]; preds: [producer_0.name = "Quentin Tarantino",actor_0.birth_year > 2010]; havings: [count(distinct(director_0.name)) < 2002]; superlative: []; blanks: 0
TOT: 0.920066463578981; NL: 0.920066463578981; NL+AG: 0.9625; NL+QF: 0.920066463578981; rels: []; projs: [count(distinct(movie_0.title))]; preds: [writer_0.name = "Quentin Tarantino",movie_0.release_year > 2010]; havings: [count(distinct(director_0.name)) < 2002]; superlative: []; blanks: 0
TOT: 0.920066463578981; NL: 0.920066463578981; NL+AG: 0.9625; NL+QF: 0.920066463578981; rels: []; projs: [count(distinct(movie_0.title))]; preds: [writer_0.name = "Quentin Tarantino",tv_series_0.release_year > 2010]; havings: [count(distinct(director_0.name)) < 2002]; superlative: []; blanks: 0
TOT: 0.920066463578981; NL: 0.920066463578981; NL+AG: 0.9625; NL+QF: 0.920066463578981; rels: []; projs: [count(distinct(movie_0.title))]; preds: [writer_0.name = "Quentin Tarantino",actor_0.birth_year > 2010]; havings: [count(distinct(director_0.name)) < 2002]; superlative: []; blanks: 0

===========
RESULTS
===========
TOT: 0.9153073476304734; TR: 0.920066463578981; QF: 0.1413409183258838; select count(*) from (select movie_0.title from actor as actor_0, cast as cast_0, directed_by as directed_by_0, director as director_0, movie as movie_0 where actor_0.name = "Quentin Tarantino" and movie_0.release_year > 2010 and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid group by movie_0.title having count(distinct(director_0.name)) < 2002) as subquery
TOT: 0.9153073476304734; TR: 0.920066463578981; QF: 0.1413409183258838; select count(*) from (select movie_0.title from actor as actor_0, cast as cast_0, directed_by as directed_by_0, director as director_0, movie as movie_0 where actor_0.birth_year > 2010 and actor_0.name = "Quentin Tarantino" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid group by movie_0.title having count(distinct(director_0.name)) < 2002) as subquery
TOT: 0.9153057106009205; TR: 0.920066463578981; QF: 0.12497062279670976; select count(*) from (select movie_0.title from directed_by as directed_by_0, director as director_0, movie as movie_0, writer as writer_0, written_by as written_by_0 where movie_0.release_year > 2010 and writer_0.name = "Quentin Tarantino" and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and movie_0.mid = written_by_0.msid and writer_0.wid = written_by_0.wid group by movie_0.title having count(distinct(director_0.name)) < 2002) as subquery
TOT: 0.915305581019284; TR: 0.920066463578981; QF: 0.12367480643240025; select count(*) from (select movie_0.title from directed_by as directed_by_0, director as director_0, made_by as made_by_0, movie as movie_0, producer as producer_0 where movie_0.release_year > 2010 and producer_0.name = "Quentin Tarantino" and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid group by movie_0.title having count(distinct(director_0.name)) < 2002) as subquery
TOT: 0.9153003109054504; TR: 0.920066463578981; QF: 0.0709736680955297; select count(*) from (select movie_0.title from directed_by as directed_by_0, directed_by as directed_by_1, director as director_0, director as director_1, movie as movie_0 where director_0.name = "Quentin Tarantino" and movie_0.release_year > 2010 and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and directed_by_1.did = director_1.did and directed_by_1.msid = movie_0.mid group by movie_0.title having count(distinct(director_1.name)) < 2002) as subquery
TOT: 0.9146170160985412; TR: 0.920066463578981; QF: 0.0936887255863282; select count(*) from (select movie_0.title from actor as actor_0, cast as cast_0, directed_by as directed_by_0, director as director_0, movie as movie_0, writer as writer_0, written_by as written_by_0 where actor_0.birth_year > 2010 and writer_0.name = "Quentin Tarantino" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and movie_0.mid = written_by_0.msid and writer_0.wid = written_by_0.wid group by movie_0.title having count(distinct(director_0.name)) < 2002) as subquery
TOT: 0.9146169543930001; TR: 0.920066463578981; QF: 0.09307167017475225; select count(*) from (select movie_0.title from actor as actor_0, cast as cast_0, directed_by as directed_by_0, director as director_0, made_by as made_by_0, movie as movie_0, producer as producer_0 where actor_0.birth_year > 2010 and producer_0.name = "Quentin Tarantino" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid group by movie_0.title having count(distinct(director_0.name)) < 2002) as subquery
TOT: 0.914614788254934; TR: 0.920066463578981; QF: 0.07141028951478869; select count(*) from (select movie_0.title from actor as actor_0, cast as cast_0, cast as cast_1, directed_by as directed_by_0, director as director_0, movie as movie_0, tv_series as tv_series_0 where actor_0.name = "Quentin Tarantino" and tv_series_0.release_year > 2010 and actor_0.aid = cast_0.aid and actor_0.aid = cast_1.aid and cast_0.msid = movie_0.mid and cast_1.msid = tv_series_0.sid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid group by movie_0.title having count(distinct(director_0.name)) < 2002) as subquery
TOT: 0.9146145682220933; TR: 0.920066463578981; QF: 0.06920996110756371; select count(*) from (select movie_0.title from actor as actor_0, cast as cast_0, directed_by as directed_by_0, directed_by as directed_by_1, director as director_0, movie as movie_0, tv_series as tv_series_0 where actor_0.name = "Quentin Tarantino" and tv_series_0.release_year > 2010 and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and directed_by_1.did = director_0.did and directed_by_1.msid = tv_series_0.sid group by movie_0.title having count(distinct(director_0.name)) < 2002) as subquery
TOT: 0.914614444814984; TR: 0.920066463578981; QF: 0.0679758900143377; select count(*) from (select movie_0.title from actor as actor_0, cast as cast_0, directed_by as directed_by_0, directed_by as directed_by_1, director as director_0, director as director_1, movie as movie_0 where actor_0.birth_year > 2010 and director_0.name = "Quentin Tarantino" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and directed_by_1.did = director_1.did and directed_by_1.msid = movie_0.mid group by movie_0.title having count(distinct(director_1.name)) < 2002) as subquery


03:54  INFO: ================
03:54  INFO: QUERY 77: List all the movies directed by "Asghar Farhadi" in which "Taraneh Alidoosti" played
03:54  INFO: ================
03:55  INFO: ================
03:55  INFO: QUERY 79: who acted the role of "Mr. Bean"
03:55  INFO: ================
03:57  INFO: ================
03:57  INFO: QUERY 96: What is the number of movies that "Brad Pitt" acts in per year?
03:57  INFO: ================
801. ROOT: ROOT; NA; ; (0) 
802. What: CMT; NA; ; (0) 
804. number of: FT; count; ; (0) 
806. movies: NT; NA; ; (0) movie.title(1.0):| movie(1.0):| cast.role(0.95):Movie; Movie F; Movie AD; | company.name(0.95):Movies; Movie; Movie Movie; | tv_series.title(0.84):Movies, Movies, Movi; Movie Mob; Moon Movies; | keyword.keyword(0.83):movie-in-movie; movies-about-movies; b-movie; | actor.name(0.76):| 
808. acts: NT; NA; ; (0) movie.release_year(0.63):| tv_series.release_year(0.63):| actor.name(0.62):| actor(0.62):| genre.genre(0.62):| genre(0.62):| made_by(0.61):| 
810. Brad Pitt: VTTEXT; NA; ; (0) actor.name(1.0):Brad Pitt; Brad Pitt; bRad sPitt; | cast.role(1.0):Brad Pitt'; Brad Pitt'; Brad Pitt #1; | producer.name(1.0):Brad Pitt; Brad Pitt; Mad Pitt; | director.name(0.78):Brad Pruitt; Brad Pruitt; Brad Witty; | writer.name(0.78):Brad Pruitt; Brad Pruitt; Brad Witt; | movie.title(0.72):Brad Pitt Video Port; Brad Pitt Video Port; Brad; | actor.birth_city(0.61):Brad; Brad; Pitt Meadows; | 
812. year: NT; NA; each; (0) movie.release_year(1.0):| director.birth_year(1.0):| tv_series.release_year(1.0):| actor.birth_year(1.0):| producer.birth_year(1.0):| writer.birth_year(1.0):| movie.title(0.95):Year; Years; Years; | 
What, WP
is, VBZ
the, DT
number, NN
of, IN
movies, NNS
that, IN
Brad Pitt, NNP
acts, VBZ
in, RP
per, IN
year, NN
root(ROOT-0, What-1)
cop(What-1, is-2)
det(number-4, the-3)
nsubj(What-1, number-4)
case(movies-6, of-5)
nmod(number-4, movies-6)
mark(acts-9, that-7)
nsubj(acts-9, Brad Pitt-8)
dep(movies-6, acts-9)
compound:prt(acts-9, in-10)
case(year-12, per-11)
nmod(acts-9, year-12)

PARSE TREE:(801) ROOT ROOT
    (802) What CMT
        (804) number of FT
            (806) movies NT
                (808) acts NT
                    (810) Brad Pitt VTTEXT
                    (812) year NT


===========
TRANSLATIONS
===========
TOT: 0.9174505626104981; NL: 0.9174505626104981; NL+AG: 0.9743516941813049; NL+QF: 0.9174505626104981; rels: []; projs: [movie_0.release_year,count(distinct(movie_0.title))]; preds: [actor_0.name = "Brad Pitt"]; havings: []; superlative: []; blanks: 1
TOT: 0.9174505626104981; NL: 0.9174505626104981; NL+AG: 0.9743516941813049; NL+QF: 0.9174505626104981; rels: []; projs: [director_0.birth_year,count(distinct(movie_0.title))]; preds: [actor_0.name = "Brad Pitt"]; havings: []; superlative: []; blanks: 1
TOT: 0.9174505626104981; NL: 0.9174505626104981; NL+AG: 0.9743516941813049; NL+QF: 0.9174505626104981; rels: []; projs: [tv_series_0.release_year,count(distinct(movie_0.title))]; preds: [actor_0.name = "Brad Pitt"]; havings: []; superlative: []; blanks: 1
TOT: 0.9174505626104981; NL: 0.9174505626104981; NL+AG: 0.9743516941813049; NL+QF: 0.9174505626104981; rels: []; projs: [actor_0.birth_year,count(distinct(movie_0.title))]; preds: [actor_0.name = "Brad Pitt"]; havings: []; superlative: []; blanks: 1
TOT: 0.9174505626104981; NL: 0.9174505626104981; NL+AG: 0.9743516941813049; NL+QF: 0.9174505626104981; rels: []; projs: [producer_0.birth_year,count(distinct(movie_0.title))]; preds: [actor_0.name = "Brad Pitt"]; havings: []; superlative: []; blanks: 1
TOT: 0.9174505626104981; NL: 0.9174505626104981; NL+AG: 0.9743516941813049; NL+QF: 0.9174505626104981; rels: []; projs: [writer_0.birth_year,count(distinct(movie_0.title))]; preds: [actor_0.name = "Brad Pitt"]; havings: []; superlative: []; blanks: 1
TOT: 0.9174505626104981; NL: 0.9174505626104981; NL+AG: 0.9743516941813049; NL+QF: 0.9174505626104981; rels: []; projs: [movie_0.release_year,count(distinct(movie_0.title))]; preds: [cast_0.role = "Brad Pitt'"]; havings: []; superlative: []; blanks: 1
TOT: 0.9174505626104981; NL: 0.9174505626104981; NL+AG: 0.9743516941813049; NL+QF: 0.9174505626104981; rels: []; projs: [director_0.birth_year,count(distinct(movie_0.title))]; preds: [cast_0.role = "Brad Pitt'"]; havings: []; superlative: []; blanks: 1
TOT: 0.9174505626104981; NL: 0.9174505626104981; NL+AG: 0.9743516941813049; NL+QF: 0.9174505626104981; rels: []; projs: [tv_series_0.release_year,count(distinct(movie_0.title))]; preds: [cast_0.role = "Brad Pitt'"]; havings: []; superlative: []; blanks: 1
TOT: 0.9174505626104981; NL: 0.9174505626104981; NL+AG: 0.9743516941813049; NL+QF: 0.9174505626104981; rels: []; projs: [actor_0.birth_year,count(distinct(movie_0.title))]; preds: [cast_0.role = "Brad Pitt'"]; havings: []; superlative: []; blanks: 1
TOT: 0.9174505626104981; NL: 0.9174505626104981; NL+AG: 0.9743516941813049; NL+QF: 0.9174505626104981; rels: []; projs: [producer_0.birth_year,count(distinct(movie_0.title))]; preds: [cast_0.role = "Brad Pitt'"]; havings: []; superlative: []; blanks: 1
TOT: 0.9174505626104981; NL: 0.9174505626104981; NL+AG: 0.9743516941813049; NL+QF: 0.9174505626104981; rels: []; projs: [writer_0.birth_year,count(distinct(movie_0.title))]; preds: [cast_0.role = "Brad Pitt'"]; havings: []; superlative: []; blanks: 1
TOT: 0.9174505626104981; NL: 0.9174505626104981; NL+AG: 0.9743516941813049; NL+QF: 0.9174505626104981; rels: []; projs: [movie_0.release_year,count(distinct(movie_0.title))]; preds: [producer_0.name = "Brad Pitt"]; havings: []; superlative: []; blanks: 1
TOT: 0.9174505626104981; NL: 0.9174505626104981; NL+AG: 0.9743516941813049; NL+QF: 0.9174505626104981; rels: []; projs: [director_0.birth_year,count(distinct(movie_0.title))]; preds: [producer_0.name = "Brad Pitt"]; havings: []; superlative: []; blanks: 1
TOT: 0.9174505626104981; NL: 0.9174505626104981; NL+AG: 0.9743516941813049; NL+QF: 0.9174505626104981; rels: []; projs: [tv_series_0.release_year,count(distinct(movie_0.title))]; preds: [producer_0.name = "Brad Pitt"]; havings: []; superlative: []; blanks: 1
TOT: 0.9174505626104981; NL: 0.9174505626104981; NL+AG: 0.9743516941813049; NL+QF: 0.9174505626104981; rels: []; projs: [actor_0.birth_year,count(distinct(movie_0.title))]; preds: [producer_0.name = "Brad Pitt"]; havings: []; superlative: []; blanks: 1
TOT: 0.9174505626104981; NL: 0.9174505626104981; NL+AG: 0.9743516941813049; NL+QF: 0.9174505626104981; rels: []; projs: [producer_0.birth_year,count(distinct(movie_0.title))]; preds: [producer_0.name = "Brad Pitt"]; havings: []; superlative: []; blanks: 1
TOT: 0.9174505626104981; NL: 0.9174505626104981; NL+AG: 0.9743516941813049; NL+QF: 0.9174505626104981; rels: []; projs: [writer_0.birth_year,count(distinct(movie_0.title))]; preds: [producer_0.name = "Brad Pitt"]; havings: []; superlative: []; blanks: 1

===========
RESULTS
===========
TOT: 0.9153081898190745; TR: 0.9174505626104981; QF: 0.3177570093457944; select count(distinct(movie_0.title)), movie_0.release_year from cast as cast_0, movie as movie_0 where cast_0.role = "Brad Pitt'" and cast_0.msid = movie_0.mid group by movie_0.release_year
TOT: 0.9140157498830153; TR: 0.9174505626104981; QF: 0.2392523364485981; select movie_0.release_year, count(distinct(movie_0.title)) from actor as actor_0, cast as cast_0, movie as movie_0 where actor_0.name = "Brad Pitt" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid group by movie_0.release_year
TOT: 0.9140157498830153; TR: 0.9174505626104981; QF: 0.2392523364485981; select actor_0.birth_year, count(distinct(movie_0.title)) from actor as actor_0, cast as cast_0, movie as movie_0 where actor_0.name = "Brad Pitt" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid group by actor_0.birth_year
TOT: 0.9140157498830153; TR: 0.9174505626104981; QF: 0.2392523364485981; select actor_0.birth_year, count(distinct(movie_0.title)) from actor as actor_0, cast as cast_0, movie as movie_0 where cast_0.role = "Brad Pitt'" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid group by actor_0.birth_year
TOT: 0.9140098611790507; TR: 0.9174505626104981; QF: 0.18036529680365296; select movie_0.release_year, count(distinct(movie_0.title)) from made_by as made_by_0, movie as movie_0, producer as producer_0 where producer_0.name = "Brad Pitt" and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid group by movie_0.release_year
TOT: 0.9140098611790507; TR: 0.9174505626104981; QF: 0.18036529680365296; select producer_0.birth_year, count(distinct(movie_0.title)) from made_by as made_by_0, movie as movie_0, producer as producer_0 where producer_0.name = "Brad Pitt" and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid group by producer_0.birth_year
TOT: 0.9132429471374474; TR: 0.9174505626104981; QF: 0.16890153054313964; select count(distinct(movie_0.title)), director_0.birth_year from cast as cast_0, directed_by as directed_by_0, director as director_0, movie as movie_0 where cast_0.role = "Brad Pitt'" and cast_0.msid = movie_0.mid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid group by director_0.birth_year
TOT: 0.9132405871687831; TR: 0.9174505626104981; QF: 0.14530184389997475; select count(distinct(movie_0.title)), writer_0.birth_year from cast as cast_0, movie as movie_0, writer as writer_0, written_by as written_by_0 where cast_0.role = "Brad Pitt'" and cast_0.msid = movie_0.mid and movie_0.mid = written_by_0.msid and writer_0.wid = written_by_0.wid group by writer_0.birth_year
TOT: 0.9132403711993891; TR: 0.9174505626104981; QF: 0.14314214995945887; select count(distinct(movie_0.title)), producer_0.birth_year from cast as cast_0, made_by as made_by_0, movie as movie_0, producer as producer_0 where cast_0.role = "Brad Pitt'" and cast_0.msid = movie_0.mid and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid group by producer_0.birth_year
TOT: 0.9127176056716753; TR: 0.9174505626104981; QF: 0.1413409183258838; select director_0.birth_year, count(distinct(movie_0.title)) from actor as actor_0, cast as cast_0, directed_by as directed_by_0, director as director_0, movie as movie_0 where actor_0.name = "Brad Pitt" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid group by director_0.birth_year


03:59  INFO: ================
03:59  INFO: QUERY 104: What is the number of movies featuring "Brad Pitt"?
03:59  INFO: ================
815. ROOT: ROOT; NA; ; (0) 
816. What: CMT; NA; ; (0) 
818. number of: FT; count; ; (0) 
820. movies: NT; NA; ; (0) movie.title(1.0):| movie(1.0):| cast.role(0.95):Movie; Movie F; Movie AD; | company.name(0.95):Movies; Movie; Movie Movie; | tv_series.title(0.84):Movies, Movies, Movi; Movie Mob; Moon Movies; | keyword.keyword(0.83):movie-in-movie; movies-about-movies; b-movie; | actor.name(0.76):| 
822. featuring: NT; NA; ; (0) tv_series.title(0.69):| tv_series(0.69):| movie.release_year(0.64):| tv_series.release_year(0.64):| made_by(0.64):| movie.title_aka(0.62):| tv_series.title_aka(0.62):| 
823. Brad Pitt: VTTEXT; NA; ; (0) actor.name(1.0):Brad Pitt; Brad Pitt; bRad sPitt; | cast.role(1.0):Brad Pitt'; Brad Pitt'; Brad Pitt #1; | producer.name(1.0):Brad Pitt; Brad Pitt; Mad Pitt; | director.name(0.78):Brad Pruitt; Brad Pruitt; Brad Witty; | writer.name(0.78):Brad Pruitt; Brad Pruitt; Brad Witt; | movie.title(0.72):Brad Pitt Video Port; Brad Pitt Video Port; Brad; | actor.birth_city(0.61):Brad; Brad; Pitt Meadows; | 
What, WP
is, VBZ
the, DT
number, NN
of, IN
movies, NNS
featuring, VBG
Brad Pitt, NNP
root(ROOT-0, What-1)
cop(What-1, is-2)
det(number-4, the-3)
nsubj(What-1, number-4)
case(movies-6, of-5)
nmod(number-4, movies-6)
acl(movies-6, featuring-7)
dobj(featuring-7, Brad Pitt-8)

PARSE TREE:(815) ROOT ROOT
    (816) What CMT
        (818) number of FT
            (820) movies NT
                (822) featuring NT
                    (823) Brad Pitt VTTEXT


===========
TRANSLATIONS
===========
TOT: 0.8662391053409028; NL: 0.8662391053409028; NL+AG: 0.962381256972397; NL+QF: 0.8662391053409028; rels: []; projs: [count(distinct(movie_0.title))]; preds: [actor_0.name = "Brad Pitt"]; havings: []; superlative: []; blanks: 1
TOT: 0.8662391053409028; NL: 0.8662391053409028; NL+AG: 0.962381256972397; NL+QF: 0.8662391053409028; rels: []; projs: [count(distinct(movie_0.title))]; preds: [cast_0.role = "Brad Pitt'"]; havings: []; superlative: []; blanks: 1
TOT: 0.8662391053409028; NL: 0.8662391053409028; NL+AG: 0.962381256972397; NL+QF: 0.8662391053409028; rels: []; projs: [count(distinct(movie_0.title))]; preds: [producer_0.name = "Brad Pitt"]; havings: []; superlative: []; blanks: 1
TOT: 0.8212630328102013; NL: 0.7982804026719519; NL+AG: 0.9336336059357445; NL+QF: 0.8212630328102013; rels: []; projs: [count(distinct(movie_0.title))]; preds: [director_0.name = "Brad Pruitt"]; havings: []; superlative: []; blanks: 1
TOT: 0.7982804026719519; NL: 0.7982804026719519; NL+AG: 0.9336336059357445; NL+QF: 0.7982804026719519; rels: []; projs: [count(distinct(movie_0.title))]; preds: [writer_0.name = "Brad Pruitt"]; havings: []; superlative: []; blanks: 1
TOT: 0.7912922821972069; NL: 0.7912922821972069; NL+AG: 0.9334216924339575; NL+QF: 0.7912922821972069; rels: []; projs: [count(distinct(actor_0.name))]; preds: [actor_0.name = "Brad Pitt"]; havings: []; superlative: []; blanks: 1
TOT: 0.7912922821972069; NL: 0.7912922821972069; NL+AG: 0.9334216924339575; NL+QF: 0.7912922821972069; rels: []; projs: [count(distinct(actor_0.name))]; preds: [cast_0.role = "Brad Pitt'"]; havings: []; superlative: []; blanks: 1
TOT: 0.7912922821972069; NL: 0.7912922821972069; NL+AG: 0.9334216924339575; NL+QF: 0.7912922821972069; rels: []; projs: [count(distinct(actor_0.name))]; preds: [producer_0.name = "Brad Pitt"]; havings: []; superlative: []; blanks: 1
TOT: 0.7783173787653892; NL: 0.7783173787653892; NL+AG: 0.9334216924339575; NL+QF: 0.7783173787653892; rels: []; projs: [count(distinct(tv_series_0.title))]; preds: [actor_0.name = "Brad Pitt"]; havings: []; superlative: []; blanks: 1
TOT: 0.7783173787653892; NL: 0.7783173787653892; NL+AG: 0.9334216924339575; NL+QF: 0.7783173787653892; rels: []; projs: [count(distinct(tv_series_0.title))]; preds: [cast_0.role = "Brad Pitt'"]; havings: []; superlative: []; blanks: 1
TOT: 0.7783173787653892; NL: 0.7783173787653892; NL+AG: 0.9334216924339575; NL+QF: 0.7783173787653892; rels: []; projs: [count(distinct(tv_series_0.title))]; preds: [producer_0.name = "Brad Pitt"]; havings: []; superlative: []; blanks: 1
TOT: 0.7783173787653892; NL: 0.7783173787653892; NL+AG: 0.9334216924339575; NL+QF: 0.7783173787653892; rels: []; projs: [count(distinct(tv_series_0.title))]; preds: [actor_0.name = "Brad Pitt"]; havings: []; superlative: []; blanks: 1
TOT: 0.7783173787653892; NL: 0.7783173787653892; NL+AG: 0.9334216924339575; NL+QF: 0.7783173787653892; rels: []; projs: [count(distinct(tv_series_0.title))]; preds: [cast_0.role = "Brad Pitt'"]; havings: []; superlative: []; blanks: 1
TOT: 0.7783173787653892; NL: 0.7783173787653892; NL+AG: 0.9334216924339575; NL+QF: 0.7783173787653892; rels: []; projs: [count(distinct(tv_series_0.title))]; preds: [producer_0.name = "Brad Pitt"]; havings: []; superlative: []; blanks: 1

===========
RESULTS
===========
TOT: 0.8646088471221751; TR: 0.8662391053409028; QF: 0.3177570093457944; select count(distinct(movie_0.title)) from cast as cast_0, movie as movie_0 where cast_0.role = "Brad Pitt'" and cast_0.msid = movie_0.mid
TOT: 0.8633164071861159; TR: 0.8662391053409028; QF: 0.2392523364485981; select count(distinct(movie_0.title)) from actor as actor_0, cast as cast_0, movie as movie_0 where actor_0.name = "Brad Pitt" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid
TOT: 0.8633105184821513; TR: 0.8662391053409028; QF: 0.18036529680365296; select count(distinct(movie_0.title)) from made_by as made_by_0, movie as movie_0, producer as producer_0 where producer_0.name = "Brad Pitt" and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid
TOT: 0.8616237211553565; TR: 0.8662391053409028; QF: 0.053487922705314016; select count(distinct(movie_0.title)) from cast as cast_0, directed_by as directed_by_0, directed_by as directed_by_1, director as director_0, movie as movie_0, tv_series as tv_series_0 where cast_0.role = "Brad Pitt'" and cast_0.msid = tv_series_0.sid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and directed_by_1.did = director_0.did and directed_by_1.msid = tv_series_0.sid
TOT: 0.8616226501408637; TR: 0.8662391053409028; QF: 0.042777777777777776; select count(distinct(movie_0.title)) from cast as cast_0, company as company_0, copyright as copyright_0, copyright as copyright_1, movie as movie_0, tv_series as tv_series_0 where cast_0.role = "Brad Pitt'" and cast_0.msid = tv_series_0.sid and company_0.id = copyright_0.cid and company_0.id = copyright_1.cid and copyright_0.msid = movie_0.mid and copyright_1.msid = tv_series_0.sid
TOT: 0.8616225945853082; TR: 0.8662391053409028; QF: 0.04222222222222222; select count(distinct(movie_0.title)) from cast as cast_0, keyword as keyword_0, movie as movie_0, tags as tags_0, tags as tags_1, tv_series as tv_series_0 where cast_0.role = "Brad Pitt'" and cast_0.msid = tv_series_0.sid and keyword_0.id = tags_0.kid and keyword_0.id = tags_1.kid and movie_0.mid = tags_0.msid and tags_1.msid = tv_series_0.sid
TOT: 0.8616225105012241; TR: 0.8662391053409028; QF: 0.04138138138138138; select count(distinct(movie_0.title)) from cast as cast_0, movie as movie_0, tv_series as tv_series_0, writer as writer_0, written_by as written_by_0, written_by as written_by_1 where cast_0.role = "Brad Pitt'" and cast_0.msid = tv_series_0.sid and movie_0.mid = written_by_0.msid and tv_series_0.sid = written_by_1.msid and writer_0.wid = written_by_0.wid and writer_0.wid = written_by_1.wid
TOT: 0.8616224241134665; TR: 0.8662391053409028; QF: 0.040517503805175034; select count(distinct(movie_0.title)) from cast as cast_0, made_by as made_by_0, made_by as made_by_1, movie as movie_0, producer as producer_0, tv_series as tv_series_0 where cast_0.role = "Brad Pitt'" and cast_0.msid = tv_series_0.sid and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid and made_by_1.msid = tv_series_0.sid and made_by_1.pid = producer_0.pid
TOT: 0.8616224241134665; TR: 0.8662391053409028; QF: 0.040517503805175034; select count(distinct(movie_0.title)) from cast as cast_0, classification as classification_0, classification as classification_1, genre as genre_0, movie as movie_0, tv_series as tv_series_0 where cast_0.role = "Brad Pitt'" and cast_0.msid = tv_series_0.sid and classification_0.gid = genre_0.gid and classification_0.msid = movie_0.mid and classification_1.gid = genre_0.gid and classification_1.msid = tv_series_0.sid
TOT: 0.8613247719222179; TR: 0.8662391053409028; QF: 0.062093519328453264; select count(distinct(movie_0.title)) from actor as actor_0, cast as cast_0, cast as cast_1, made_by as made_by_0, movie as movie_0, producer as producer_0, tv_series as tv_series_0 where producer_0.name = "Brad Pitt" and actor_0.aid = cast_0.aid and actor_0.aid = cast_1.aid and cast_0.msid = movie_0.mid and cast_1.msid = tv_series_0.sid and made_by_0.msid = tv_series_0.sid and made_by_0.pid = producer_0.pid


04:00  INFO: ================
04:00  INFO: QUERY 12: In what city was "Kevin Spacey" born?
04:00  INFO: ================
04:02  INFO: ================
04:02  INFO: QUERY 124: Find the actors who played in the latest movie by "Quentin Tarantino"
04:02  INFO: ================
833. ROOT: ROOT; NA; ; (0) 
834. Find: CMT; NA; ; (0) 
835. actors: NT; NA; ; (0) actor.name(1.0):| actor(1.0):| movie.title(0.95):Actors; Actors; Actors; | tv_series.title(0.95):Actors; Actor; The Actor Factor; | cast.role(0.95):Actors; Actors; Actors; | keyword.keyword(0.95):actors; actor-director; no-actors; | company.name(0.79):For Actors by Actors; Actors Loft; Actors Pool; | 
837. played: NT; NA; ; (0) tv_series.num_of_seasons(0.67):| cast.role(0.66):| directed_by(0.64):| actor.name(0.63):| actor(0.63):| cast(0.63):| movie.title_aka(0.63):| 
839. movie: NT; NA; ; (0) movie.title(1.0):| movie(1.0):| cast.role(0.95):Movie; Movie F; Movie AD; | company.name(0.95):Movie; Movies; Movie Movie; | keyword.keyword(0.83):movie-in-movie; b-movie; z-movie; | actor.name(0.76):| actor(0.76):| 
842. latest: FT; max; ; (0) 
843. Quentin Tarantino: VTTEXT; NA; ; (0) director.name(1.0):Quentin Tarantino; Quentin Tarantino; Quentin Tarrantino; | actor.name(1.0):Quentin Tarantino; Quentin Tarantino; Quentin Tarrantino; | producer.name(1.0):Quentin Tarantino; Quentin Tarantino; Quentin Tarrantino; | writer.name(1.0):Quentin Tarantino; Quentin Tarantino; Quentin Tarrantino; | cast.role(0.85):Quentin Tarrantino '; Quentin Tarrantino '; Quentin Tarrantino '; | movie.title(0.84):21 Years: Quentin Ta; 21 Years: Quentin Ta; Quentin Tarantino's ; | writer.birth_city(0.74):San Quentin; San Quentin; Saint-Quentin; | 
Find, VB
the, DT
actors, NNS
who, WP
played, VBD
in, IN
the, DT
latest, JJS
movie, NN
by, IN
Quentin Tarantino, NNP
root(ROOT-0, Find-1)
det(actors-3, the-2)
dobj(Find-1, actors-3)
nsubj(played-5, who-4)
acl:relcl(actors-3, played-5)
case(movie-9, in-6)
det(movie-9, the-7)
amod(movie-9, latest-8)
nmod(played-5, movie-9)
case(Quentin Tarantino-11, by-10)
nmod(played-5, Quentin Tarantino-11)

PARSE TREE:(833) ROOT ROOT
    (834) Find CMT
        (835) actors NT
            (837) played NT
                (839) movie NT
                (843) Quentin Tarantino VTTEXT


===========
TRANSLATIONS
===========
TOT: 0.9174505626104981; NL: 0.9174505626104981; NL+AG: 0.9733138759953143; NL+QF: 0.9174505626104981; rels: []; projs: [actor_0.name]; preds: [director_0.name = "Quentin Tarantino"]; havings: []; superlative: [movie_0.title desc limit 1]; blanks: 1
TOT: 0.9174505626104981; NL: 0.9174505626104981; NL+AG: 0.9733138759953143; NL+QF: 0.9174505626104981; rels: []; projs: [actor_0.name]; preds: [actor_0.name = "Quentin Tarantino"]; havings: []; superlative: [movie_0.title desc limit 1]; blanks: 1
TOT: 0.9174505626104981; NL: 0.9174505626104981; NL+AG: 0.9733138759953143; NL+QF: 0.9174505626104981; rels: []; projs: [actor_0.name]; preds: [producer_0.name = "Quentin Tarantino"]; havings: []; superlative: [movie_0.title desc limit 1]; blanks: 1
TOT: 0.9174505626104981; NL: 0.9174505626104981; NL+AG: 0.9733138759953143; NL+QF: 0.9174505626104981; rels: []; projs: [actor_0.name]; preds: [writer_0.name = "Quentin Tarantino"]; havings: []; superlative: [movie_0.title desc limit 1]; blanks: 1
TOT: 0.8916787961450712; NL: 0.8879579826791157; NL+AG: 0.9556734954069785; NL+QF: 0.8916787961450712; rels: []; projs: [actor_0.name]; preds: [cast_0.role = "Quentin Tarrantino 'esque' Patient"]; havings: []; superlative: [movie_0.title desc limit 1]; blanks: 1
TOT: 0.890089387885766; NL: 0.8862129230052637; NL+AG: 0.9547006262957899; NL+QF: 0.890089387885766; rels: []; projs: [actor_0.name]; preds: [movie_0.title = "21 Years: Quentin Tarantino"]; havings: []; superlative: [movie_0.title desc limit 1]; blanks: 1
TOT: 0.8813956643737827; NL: 0.8689647470148877; NL+AG: 0.9510661366220432; NL+QF: 0.8813956643737827; rels: []; projs: [movie_0.title]; preds: [actor_0.name = "Quentin Tarantino"]; havings: []; superlative: [movie_0.title desc limit 1]; blanks: 1
TOT: 0.8780097432658712; NL: 0.8689647470148877; NL+AG: 0.9510661366220432; NL+QF: 0.8780097432658712; rels: []; projs: [movie_0.title]; preds: [director_0.name = "Quentin Tarantino"]; havings: []; superlative: [movie_0.title desc limit 1]; blanks: 1
TOT: 0.8746299582599715; NL: 0.8689647470148877; NL+AG: 0.9510661366220432; NL+QF: 0.8746299582599715; rels: []; projs: [movie_0.title]; preds: [writer_0.name = "Quentin Tarantino"]; havings: []; superlative: [movie_0.title desc limit 1]; blanks: 1
TOT: 0.8736234161838105; NL: 0.8689647470148877; NL+AG: 0.9510661366220432; NL+QF: 0.8736234161838105; rels: []; projs: [movie_0.title]; preds: [producer_0.name = "Quentin Tarantino"]; havings: []; superlative: [movie_0.title desc limit 1]; blanks: 1
TOT: 0.8675415861861546; NL: 0.8675415861861546; NL+AG: 0.9510661366220432; NL+QF: 0.8675415861861546; rels: []; projs: [cast_0.role]; preds: [director_0.name = "Quentin Tarantino"]; havings: []; superlative: [movie_0.title desc limit 1]; blanks: 1
TOT: 0.8675415861861546; NL: 0.8675415861861546; NL+AG: 0.9510661366220432; NL+QF: 0.8675415861861546; rels: []; projs: [cast_0.role]; preds: [actor_0.name = "Quentin Tarantino"]; havings: []; superlative: [movie_0.title desc limit 1]; blanks: 1
TOT: 0.8675415861861546; NL: 0.8675415861861546; NL+AG: 0.9510661366220432; NL+QF: 0.8675415861861546; rels: []; projs: [cast_0.role]; preds: [producer_0.name = "Quentin Tarantino"]; havings: []; superlative: [movie_0.title desc limit 1]; blanks: 1
TOT: 0.8675415861861546; NL: 0.8675415861861546; NL+AG: 0.9510661366220432; NL+QF: 0.8675415861861546; rels: []; projs: [cast_0.role]; preds: [writer_0.name = "Quentin Tarantino"]; havings: []; superlative: [movie_0.title desc limit 1]; blanks: 1
TOT: 0.8675415861861546; NL: 0.8675415861861546; NL+AG: 0.9510661366220432; NL+QF: 0.8675415861861546; rels: []; projs: [cast_0.role]; preds: [director_0.name = "Quentin Tarantino"]; havings: []; superlative: [movie_0.title desc limit 1]; blanks: 1
TOT: 0.8675415861861546; NL: 0.8675415861861546; NL+AG: 0.9510661366220432; NL+QF: 0.8675415861861546; rels: []; projs: [cast_0.role]; preds: [actor_0.name = "Quentin Tarantino"]; havings: []; superlative: [movie_0.title desc limit 1]; blanks: 1
TOT: 0.8675415861861546; NL: 0.8675415861861546; NL+AG: 0.9510661366220432; NL+QF: 0.8675415861861546; rels: []; projs: [cast_0.role]; preds: [producer_0.name = "Quentin Tarantino"]; havings: []; superlative: [movie_0.title desc limit 1]; blanks: 1
TOT: 0.8675415861861546; NL: 0.8675415861861546; NL+AG: 0.9510661366220432; NL+QF: 0.8675415861861546; rels: []; projs: [cast_0.role]; preds: [writer_0.name = "Quentin Tarantino"]; havings: []; superlative: [movie_0.title desc limit 1]; blanks: 1

===========
RESULTS
===========
TOT: 0.9127176056716753; TR: 0.9174505626104981; QF: 0.1413409183258838; select actor_0.name from actor as actor_0, cast as cast_0, directed_by as directed_by_0, director as director_0, movie as movie_0 where director_0.name = "Quentin Tarantino" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid order by movie_0.title desc limit 1
TOT: 0.9127163158166027; TR: 0.9174505626104981; QF: 0.1284423676012461; select actor_0.name from actor as actor_0, actor as actor_1, cast as cast_0, cast as cast_1, movie as movie_0 where actor_1.name = "Quentin Tarantino" and actor_0.aid = cast_0.aid and actor_1.aid = cast_1.aid and cast_0.msid = movie_0.mid and cast_1.msid = movie_0.mid order by movie_0.title desc limit 1
TOT: 0.9127161896904766; TR: 0.9174505626104981; QF: 0.12718110633998486; select actor_0.name from actor as actor_0, cast as cast_0, movie as movie_0, writer as writer_0, written_by as written_by_0 where writer_0.name = "Quentin Tarantino" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and movie_0.mid = written_by_0.msid and writer_0.wid = written_by_0.wid order by movie_0.title desc limit 1
TOT: 0.9127160601088402; TR: 0.9174505626104981; QF: 0.12588528997567533; select actor_0.name from actor as actor_0, cast as cast_0, made_by as made_by_0, movie as movie_0, producer as producer_0 where producer_0.name = "Quentin Tarantino" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid order by movie_0.title desc limit 1
TOT: 0.912024328559766; TR: 0.9174505626104981; QF: 0.06423292581568583; select actor_0.name from actor as actor_0, cast as cast_0, cast as cast_1, directed_by as directed_by_0, director as director_0, movie as movie_0, tv_series as tv_series_0 where director_0.name = "Quentin Tarantino" and actor_0.aid = cast_0.aid and actor_0.aid = cast_1.aid and cast_0.msid = movie_0.mid and cast_1.msid = tv_series_0.sid and directed_by_0.did = director_0.did and directed_by_0.msid = tv_series_0.sid order by movie_0.title desc limit 1
TOT: 0.9120241146191173; TR: 0.9174505626104981; QF: 0.062093519328453264; select actor_0.name from actor as actor_0, cast as cast_0, cast as cast_1, made_by as made_by_0, movie as movie_0, producer as producer_0, tv_series as tv_series_0 where producer_0.name = "Quentin Tarantino" and actor_0.aid = cast_0.aid and actor_0.aid = cast_1.aid and cast_0.msid = movie_0.mid and cast_1.msid = tv_series_0.sid and made_by_0.msid = tv_series_0.sid and made_by_0.pid = producer_0.pid order by movie_0.title desc limit 1
TOT: 0.9120241146191173; TR: 0.9174505626104981; QF: 0.062093519328453264; select actor_0.name from actor as actor_0, cast as cast_0, cast as cast_1, movie as movie_0, tv_series as tv_series_0, writer as writer_0, written_by as written_by_0 where writer_0.name = "Quentin Tarantino" and actor_0.aid = cast_0.aid and actor_0.aid = cast_1.aid and cast_0.msid = movie_0.mid and cast_1.msid = tv_series_0.sid and tv_series_0.sid = written_by_0.msid and writer_0.wid = written_by_0.wid order by movie_0.title desc limit 1
TOT: 0.9120236305949967; TR: 0.9174505626104981; QF: 0.05725327812284335; select actor_0.name from actor as actor_0, cast as cast_0, directed_by as directed_by_0, directed_by as directed_by_1, director as director_0, movie as movie_0, tv_series as tv_series_0 where director_0.name = "Quentin Tarantino" and actor_0.aid = cast_0.aid and cast_0.msid = tv_series_0.sid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and directed_by_1.did = director_0.did and directed_by_1.msid = tv_series_0.sid order by movie_0.title desc limit 1
TOT: 0.912022765842045; TR: 0.9174505626104981; QF: 0.04860574860574861; select actor_0.name from actor as actor_0, cast as cast_0, movie as movie_0, tv_series as tv_series_0, writer as writer_0, written_by as written_by_0, written_by as written_by_1 where writer_0.name = "Quentin Tarantino" and actor_0.aid = cast_0.aid and cast_0.msid = tv_series_0.sid and movie_0.mid = written_by_0.msid and tv_series_0.sid = written_by_1.msid and writer_0.wid = written_by_0.wid and writer_0.wid = written_by_1.wid order by movie_0.title desc limit 1
TOT: 0.9120227041365039; TR: 0.9174505626104981; QF: 0.04798869319417265; select actor_0.name from actor as actor_0, cast as cast_0, made_by as made_by_0, made_by as made_by_1, movie as movie_0, producer as producer_0, tv_series as tv_series_0 where producer_0.name = "Quentin Tarantino" and actor_0.aid = cast_0.aid and cast_0.msid = tv_series_0.sid and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid and made_by_1.msid = tv_series_0.sid and made_by_1.pid = producer_0.pid order by movie_0.title desc limit 1


04:04  INFO: ================
04:04  INFO: QUERY 2: What is the nationality of the actress "Ellen Page"?
04:04  INFO: ================
04:06  INFO: ================
04:06  INFO: QUERY 68: Find all movies about Iraq war
04:06  INFO: ================
856. ROOT: ROOT; NA; ; (0) 
857. Find: CMT; NA; ; (0) 
858. movies: NT; NA; all; (0) movie.title(1.0):| movie(1.0):| cast.role(0.95):Movie; Movie F; Movie AD; | company.name(0.95):Movies; Movie; Movie Movie; | tv_series.title(0.84):Movies, Movies, Movi; Movie Mob; Moon Movies; | keyword.keyword(0.83):movie-in-movie; movies-about-movies; b-movie; | actor.name(0.76):| 
860. war: VTTEXT; NA; ; (0) movie.title(0.95):Wars; Wars; Hardware Wars; | tv_series.title(0.95):War; Car Wars; War Walks; | actor.name(0.95):War; War; War; | genre.genre(0.95):War; War; Documentary; | producer.name(0.95):War; Johnny Star Wars; Vivian War; | company.name(0.95):War; War on Want; NWA War Zone; | writer.name(0.95):War; Johnny Star Wars; Men Of War; | 
862. Iraq: VTTEXT; NA; ; (0) movie.title(1.0):Iraq; Iraq; Ski Iraq; | director.nationality(1.0):Iraq; Iraq; Iraq; | actor.nationality(1.0):Iraq; Iraq; Iraq; | producer.nationality(1.0):Iraq; Iraq; Iraq; | writer.nationality(1.0):Iraq; Iraq; Iraq; | cast.role(0.8):Ira - Iraq; Iraq Vet; Iraq Veteran; | keyword.keyword(0.72):iraq-iran-war; basra-iraq; hatra-iraq; | 
Find, VB
all, DT
movies, NNS
about, IN
Iraq, NNP
war, NN
root(ROOT-0, Find-1)
det(movies-3, all-2)
dobj(Find-1, movies-3)
case(war-6, about-4)
compound(war-6, Iraq-5)
nmod(Find-1, war-6)

PARSE TREE:(856) ROOT ROOT
    (857) Find CMT
        (858) movies NT
        (860) war VTTEXT
            (862) Iraq VTTEXT


===========
TRANSLATIONS
===========
TOT: 0.984061024314923; NL: 0.9830475724915585; NL+AG: 0.9947199354012503; NL+QF: 0.984061024314923; rels: []; projs: [movie_0.title]; preds: [genre_0.genre = "War",movie_0.title = "Iraq"]; havings: []; superlative: []; blanks: 0
TOT: 0.984061024314923; NL: 0.9830475724915585; NL+AG: 0.9947199354012503; NL+QF: 0.984061024314923; rels: []; projs: [movie_0.title]; preds: [genre_0.genre = "War",director_0.nationality = "Iraq"]; havings: []; superlative: []; blanks: 0
TOT: 0.984061024314923; NL: 0.9830475724915585; NL+AG: 0.9947199354012503; NL+QF: 0.984061024314923; rels: []; projs: [movie_0.title]; preds: [genre_0.genre = "War",actor_0.nationality = "Iraq"]; havings: []; superlative: []; blanks: 0
TOT: 0.984061024314923; NL: 0.9830475724915585; NL+AG: 0.9947199354012503; NL+QF: 0.984061024314923; rels: []; projs: [movie_0.title]; preds: [genre_0.genre = "War",producer_0.nationality = "Iraq"]; havings: []; superlative: []; blanks: 0
TOT: 0.984061024314923; NL: 0.9830475724915585; NL+AG: 0.9947199354012503; NL+QF: 0.984061024314923; rels: []; projs: [movie_0.title]; preds: [genre_0.genre = "War",writer_0.nationality = "Iraq"]; havings: []; superlative: []; blanks: 0
TOT: 0.9157566744585615; NL: 0.9128241092785631; NL+AG: 0.9736673430431951; NL+QF: 0.9157566744585615; rels: []; projs: [movie_0.title]; preds: [genre_0.genre = "War",cast_0.role = "Ira - Iraq"]; havings: []; superlative: []; blanks: 0
TOT: 0.91404448511991; NL: 0.8979945056153297; NL+AG: 0.9849680475911101; NL+QF: 0.91404448511991; rels: []; projs: [actor_0.name]; preds: [genre_0.genre = "War",movie_0.title = "Iraq"]; havings: []; superlative: []; blanks: 0
TOT: 0.9138113744029706; NL: 0.8979945056153297; NL+AG: 0.9849680475911101; NL+QF: 0.9138113744029706; rels: []; projs: [actor_0.name]; preds: [genre_0.genre = "War",actor_0.nationality = "Iraq"]; havings: []; superlative: []; blanks: 0
TOT: 0.8979945056153297; NL: 0.8979945056153297; NL+AG: 0.9849680475911101; NL+QF: 0.8979945056153297; rels: []; projs: [actor_0.name]; preds: [genre_0.genre = "War",director_0.nationality = "Iraq"]; havings: []; superlative: []; blanks: 0
TOT: 0.8979945056153297; NL: 0.8979945056153297; NL+AG: 0.9849680475911101; NL+QF: 0.8979945056153297; rels: []; projs: [actor_0.name]; preds: [genre_0.genre = "War",producer_0.nationality = "Iraq"]; havings: []; superlative: []; blanks: 0
TOT: 0.8979945056153297; NL: 0.8979945056153297; NL+AG: 0.9849680475911101; NL+QF: 0.8979945056153297; rels: []; projs: [actor_0.name]; preds: [genre_0.genre = "War",writer_0.nationality = "Iraq"]; havings: []; superlative: []; blanks: 0

===========
RESULTS
===========
TOT: 0.978660417196221; TR: 0.984061024314923; QF: 0.12588528997567533; select movie_0.title from actor as actor_0, cast as cast_0, classification as classification_0, genre as genre_0, movie as movie_0 where actor_0.nationality = "Iraq" and genre_0.genre = "War" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and classification_0.gid = genre_0.gid and classification_0.msid = movie_0.mid
TOT: 0.9786601961478667; TR: 0.984061024314923; QF: 0.12367480643240025; select movie_0.title from classification as classification_0, directed_by as directed_by_0, director as director_0, genre as genre_0, movie as movie_0 where director_0.nationality = "Iraq" and genre_0.genre = "War" and classification_0.gid = genre_0.gid and classification_0.msid = movie_0.mid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid
TOT: 0.9786587801666681; TR: 0.984061024314923; QF: 0.1095149944465013; select movie_0.title from classification as classification_0, genre as genre_0, movie as movie_0, writer as writer_0, written_by as written_by_0 where genre_0.genre = "War" and writer_0.nationality = "Iraq" and classification_0.gid = genre_0.gid and classification_0.msid = movie_0.mid and movie_0.mid = written_by_0.msid and writer_0.wid = written_by_0.wid
TOT: 0.9786586505850317; TR: 0.984061024314923; QF: 0.10821917808219177; select movie_0.title from classification as classification_0, genre as genre_0, made_by as made_by_0, movie as movie_0, producer as producer_0 where genre_0.genre = "War" and producer_0.nationality = "Iraq" and classification_0.gid = genre_0.gid and classification_0.msid = movie_0.mid and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid
TOT: 0.9786532396261275; TR: 0.984061024314923; QF: 0.05410958904109588; select movie_0.title from classification as classification_0, classification as classification_1, genre as genre_0, movie as movie_0, movie as movie_1 where genre_0.genre = "War" and movie_1.title = "Iraq" and classification_0.gid = genre_0.gid and classification_0.msid = movie_0.mid and classification_1.gid = genre_0.gid and classification_1.msid = movie_1.mid
TOT: 0.9779707230596334; TR: 0.984061024314923; QF: 0.08460705068209537; select movie_0.title from classification as classification_0, directed_by as directed_by_0, directed_by as directed_by_1, director as director_0, genre as genre_0, movie as movie_0, movie as movie_1 where genre_0.genre = "War" and movie_1.title = "Iraq" and classification_0.gid = genre_0.gid and classification_0.msid = movie_0.mid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and directed_by_1.did = director_0.did and directed_by_1.msid = movie_1.mid
TOT: 0.9779707230596334; TR: 0.984061024314923; QF: 0.08460705068209537; select movie_1.title from classification as classification_0, directed_by as directed_by_0, directed_by as directed_by_1, director as director_0, genre as genre_0, movie as movie_0, movie as movie_1 where genre_0.genre = "War" and movie_0.title = "Iraq" and classification_0.gid = genre_0.gid and classification_0.msid = movie_0.mid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and directed_by_1.did = director_0.did and directed_by_1.msid = movie_1.mid
TOT: 0.9779686674012142; TR: 0.984061024314923; QF: 0.06405046649087988; select movie_1.title from actor as actor_0, cast as cast_0, cast as cast_1, classification as classification_0, genre as genre_0, movie as movie_0, movie as movie_1 where genre_0.genre = "War" and movie_0.title = "Iraq" and actor_0.aid = cast_0.aid and actor_0.aid = cast_1.aid and cast_0.msid = movie_0.mid and cast_1.msid = movie_1.mid and classification_0.gid = genre_0.gid and classification_0.msid = movie_0.mid
TOT: 0.9779686674012142; TR: 0.984061024314923; QF: 0.06405046649087988; select movie_0.title from actor as actor_0, cast as cast_0, cast as cast_1, classification as classification_0, genre as genre_0, movie as movie_0, movie as movie_1 where genre_0.genre = "War" and movie_1.title = "Iraq" and actor_0.aid = cast_0.aid and actor_0.aid = cast_1.aid and cast_0.msid = movie_0.mid and cast_1.msid = movie_1.mid and classification_0.gid = genre_0.gid and classification_0.msid = movie_0.mid
TOT: 0.977968471706498; TR: 0.984061024314923; QF: 0.062093519328453264; select movie_0.title from actor as actor_0, cast as cast_0, cast as cast_1, classification as classification_0, genre as genre_0, movie as movie_0, tv_series as tv_series_0 where actor_0.nationality = "Iraq" and genre_0.genre = "War" and actor_0.aid = cast_0.aid and actor_0.aid = cast_1.aid and cast_0.msid = movie_0.mid and cast_1.msid = tv_series_0.sid and classification_0.gid = genre_0.gid and classification_0.msid = tv_series_0.sid


04:07  INFO: ================
04:07  INFO: QUERY 21: What is the genre of the movie "Jurassic Park"?
04:07  INFO: ================
04:10  INFO: ================
04:10  INFO: QUERY 75: List "James Bond" directors
04:10  INFO: ================
04:12  INFO: ================
04:12  INFO: QUERY 76: find all films in which "Rowan Atkinson" acted as "Mr. Bean"
04:12  INFO: ================
04:13  INFO: ================
04:13  INFO: QUERY 112: How many actors from China have acted in "Rush Hour 3"
04:13  INFO: ================
890. ROOT: ROOT; NA; ; (0) 
891. acted: NT; NA; ; (0) movie.release_year(0.63):| tv_series.release_year(0.63):| actor.name(0.62):| actor(0.62):| genre.genre(0.62):| genre(0.62):| made_by(0.61):| 
893. How many: CMT; count; ; (0) 
894. actors: NT; NA; ; (0) actor.name(1.0):| actor(1.0):| movie.title(0.95):Actors; Actors; Actors; | tv_series.title(0.95):Actors; Actor; The Actor Factor; | cast.role(0.95):Actors; Actors; Actors; | keyword.keyword(0.95):actors; actor-director; no-actors; | company.name(0.79):For Actors by Actors; Actors Loft; Actors Pool; | 
895. China: VTTEXT; NA; ; (0) movie.title(1.0):China; China; China; | director.nationality(1.0):China; China; China; | director.name(1.0):China; China Chung; China Chung; | actor.nationality(1.0):China; China; China; | actor.name(1.0):China; China; China; | producer.nationality(1.0):China; China; China; | producer.name(1.0):China; Ed China; China Chung; | 
898. Rush Hour 3: VTTEXT; NA; ; (0) movie.title(0.95):Rush Hour 3; Rush Hour 3; Rush Hour 2; | tv_series.title(0.85):Rush Hour; Rush Hour; Rush Hour; | cast.role(0.7):Rush Hour Driver; Rush Hour Driver; Rush Hour Driver; | actor.name(0.64):Rush Holt; Rush Holt; Rush; | keyword.keyword(0.64):rush-hour; rush-hour; hour; | company.name(0.62):Rush Hour Production; Rush Hour Production; Rush HD; | director.name(0.52):Rush; Rush; Rush; | 
How, WRB
many, JJ
actors, NNS
from, IN
China, NNP
have, VBP
acted, VBN
in, IN
Rush Hour 3, NNS
advmod(many-2, How-1)
dep(acted-7, many-2)
nsubj(acted-7, actors-3)
case(China-5, from-4)
nmod(actors-3, China-5)
aux(acted-7, have-6)
root(ROOT-0, acted-7)
case(Rush Hour 3-9, in-8)
nmod(acted-7, Rush Hour 3-9)

PARSE TREE:(890) ROOT ROOT
    (893) How many CMT
        (894) actors NT
            (895) China VTTEXT
            (891) acted NT
                (898) Rush Hour 3 VTTEXT


===========
TRANSLATIONS
===========
TOT: 0.806225774829855; NL: 0.806225774829855; NL+AG: 0.9326789140939467; NL+QF: 0.806225774829855; rels: []; projs: [count(distinct(actor_0.name))]; preds: [movie_0.title = "China"]; havings: []; superlative: []; blanks: 2
TOT: 0.806225774829855; NL: 0.806225774829855; NL+AG: 0.9326789140939467; NL+QF: 0.806225774829855; rels: []; projs: [count(distinct(actor_0.name))]; preds: [director_0.nationality = "China"]; havings: []; superlative: []; blanks: 2
TOT: 0.806225774829855; NL: 0.806225774829855; NL+AG: 0.9326789140939467; NL+QF: 0.806225774829855; rels: []; projs: [count(distinct(actor_0.name))]; preds: [director_0.name = "China"]; havings: []; superlative: []; blanks: 2
TOT: 0.806225774829855; NL: 0.806225774829855; NL+AG: 0.9326789140939467; NL+QF: 0.806225774829855; rels: []; projs: [count(distinct(actor_0.name))]; preds: [actor_0.nationality = "China"]; havings: []; superlative: []; blanks: 2
TOT: 0.806225774829855; NL: 0.806225774829855; NL+AG: 0.9326789140939467; NL+QF: 0.806225774829855; rels: []; projs: [count(distinct(actor_0.name))]; preds: [actor_0.name = "China"]; havings: []; superlative: []; blanks: 2
TOT: 0.806225774829855; NL: 0.806225774829855; NL+AG: 0.9326789140939467; NL+QF: 0.806225774829855; rels: []; projs: [count(distinct(actor_0.name))]; preds: [producer_0.nationality = "China"]; havings: []; superlative: []; blanks: 2
TOT: 0.806225774829855; NL: 0.806225774829855; NL+AG: 0.9326789140939467; NL+QF: 0.806225774829855; rels: []; projs: [count(distinct(actor_0.name))]; preds: [producer_0.name = "China"]; havings: []; superlative: []; blanks: 2
TOT: 0.7714547017937957; NL: 0.7533226692667779; NL+AG: 0.9057492868921835; NL+QF: 0.7714547017937957; rels: []; projs: [count(distinct(movie_0.title))]; preds: [director_0.name = "China"]; havings: []; superlative: []; blanks: 2
TOT: 0.7640212239889288; NL: 0.7533226692667779; NL+AG: 0.9057492868921835; NL+QF: 0.7640212239889288; rels: []; projs: [count(distinct(movie_0.title))]; preds: [actor_0.name = "China"]; havings: []; superlative: []; blanks: 2
TOT: 0.7624312687459628; NL: 0.7454212025910731; NL+AG: 0.9430108056341358; NL+QF: 0.7624312687459628; rels: []; projs: [count(distinct(actor_0.name))]; preds: [actor_0.nationality = "China",movie_0.title = "Rush Hour 3"]; havings: []; superlative: []; blanks: 1
TOT: 0.7546121633668027; NL: 0.7454212025910731; NL+AG: 0.9430108056341358; NL+QF: 0.7546121633668027; rels: []; projs: [count(distinct(actor_0.name))]; preds: [movie_0.title = "China",movie_0.title = "Rush Hour 3"]; havings: []; superlative: []; blanks: 1
TOT: 0.7546121633668027; NL: 0.7454212025910731; NL+AG: 0.9430108056341358; NL+QF: 0.7546121633668027; rels: []; projs: [count(distinct(actor_0.name))]; preds: [director_0.nationality = "China",movie_0.title = "Rush Hour 3"]; havings: []; superlative: []; blanks: 1
TOT: 0.7546121633668027; NL: 0.7454212025910731; NL+AG: 0.9430108056341358; NL+QF: 0.7546121633668027; rels: []; projs: [count(distinct(actor_0.name))]; preds: [director_0.name = "China",movie_0.title = "Rush Hour 3"]; havings: []; superlative: []; blanks: 1
TOT: 0.7546121633668027; NL: 0.7454212025910731; NL+AG: 0.9430108056341358; NL+QF: 0.7546121633668027; rels: []; projs: [count(distinct(actor_0.name))]; preds: [actor_0.name = "China",movie_0.title = "Rush Hour 3"]; havings: []; superlative: []; blanks: 1
TOT: 0.7546121633668027; NL: 0.7454212025910731; NL+AG: 0.9430108056341358; NL+QF: 0.7546121633668027; rels: []; projs: [count(distinct(actor_0.name))]; preds: [producer_0.nationality = "China",movie_0.title = "Rush Hour 3"]; havings: []; superlative: []; blanks: 1
TOT: 0.7546121633668027; NL: 0.7454212025910731; NL+AG: 0.9430108056341358; NL+QF: 0.7546121633668027; rels: []; projs: [count(distinct(actor_0.name))]; preds: [producer_0.name = "China",movie_0.title = "Rush Hour 3"]; havings: []; superlative: []; blanks: 1

===========
RESULTS
===========
TOT: 0.8081635170815564; TR: 0.806225774829855; QF: 1.0; select count(distinct(actor_0.name)) from actor as actor_0 where actor_0.nationality = "China"
TOT: 0.8039032099801786; TR: 0.806225774829855; QF: 0.2392523364485981; select count(distinct(actor_0.name)) from actor as actor_0, cast as cast_0, movie as movie_0 where movie_0.title = "China" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid
TOT: 0.8026050657688386; TR: 0.806225774829855; QF: 0.1413409183258838; select count(distinct(actor_0.name)) from actor as actor_0, cast as cast_0, directed_by as directed_by_0, director as director_0, movie as movie_0 where director_0.nationality = "China" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid
TOT: 0.8026050657688386; TR: 0.806225774829855; QF: 0.1413409183258838; select count(distinct(actor_0.name)) from actor as actor_0, cast as cast_0, directed_by as directed_by_0, director as director_0, movie as movie_0 where director_0.name = "China" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid
TOT: 0.8026037759137661; TR: 0.806225774829855; QF: 0.1284423676012461; select count(distinct(actor_0.name)) from actor as actor_0, actor as actor_1, cast as cast_0, cast as cast_1, movie as movie_0 where actor_1.name = "China" and actor_0.aid = cast_0.aid and actor_1.aid = cast_1.aid and cast_0.msid = movie_0.mid and cast_1.msid = movie_0.mid
TOT: 0.8026035202060036; TR: 0.806225774829855; QF: 0.12588528997567533; select count(distinct(actor_0.name)) from actor as actor_0, cast as cast_0, made_by as made_by_0, movie as movie_0, producer as producer_0 where producer_0.nationality = "China" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid
TOT: 0.8026035202060036; TR: 0.806225774829855; QF: 0.12588528997567533; select count(distinct(actor_0.name)) from actor as actor_0, cast as cast_0, made_by as made_by_0, movie as movie_0, producer as producer_0 where producer_0.name = "China" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid
TOT: 0.802601047619035; TR: 0.806225774829855; QF: 0.10115942028985507; select count(distinct(actor_0.name)) from actor as actor_0, cast as cast_0, directed_by as directed_by_0, director as director_0, tv_series as tv_series_0 where director_0.nationality = "China" and actor_0.aid = cast_0.aid and cast_0.msid = tv_series_0.sid and directed_by_0.did = director_0.did and directed_by_0.msid = tv_series_0.sid
TOT: 0.802601047619035; TR: 0.806225774829855; QF: 0.10115942028985507; select count(distinct(actor_0.name)) from actor as actor_0, cast as cast_0, directed_by as directed_by_0, director as director_0, tv_series as tv_series_0 where director_0.name = "China" and actor_0.aid = cast_0.aid and cast_0.msid = tv_series_0.sid and directed_by_0.did = director_0.did and directed_by_0.msid = tv_series_0.sid
TOT: 0.8026005983436727; TR: 0.806225774829855; QF: 0.09666666666666666; select count(distinct(actor_0.name)) from actor as actor_0, actor as actor_1, cast as cast_0, cast as cast_1, tv_series as tv_series_0 where actor_1.name = "China" and actor_0.aid = cast_0.aid and actor_1.aid = cast_1.aid and cast_0.msid = tv_series_0.sid and cast_1.msid = tv_series_0.sid


04:15  INFO: ================
04:15  INFO: QUERY 78: where is the director of "The Past" from
04:15  INFO: ================
901. ROOT: ROOT; NA; ; (0) 
903. where: CMT; NA; ; (0) director.birth_city(1.0):| actor.birth_city(1.0):| producer.birth_city(1.0):| writer.birth_city(1.0):| 
904. director: NT; NA; ; (0) director.name(1.0):| director(1.0):| movie.title(0.95):Director; Director; Director; | producer.name(0.95):Director; Co-Director; Director GT; | company.name(0.95):Director; Directors; Directors; | writer.name(0.95):Director; Director X; Director X.; | tv_series.title(0.86):Directors on Directo; The Directors; The Directors; | 
906. The Past: VTTEXT; NA; ; (0) movie.title(1.0):The Past; The Past; Fix the Past; | cast.role(1.0):The Past; The Past; The Past; | keyword.keyword(0.71):the-past; past; stuck-in-the-past; | tv_series.title(0.71):Ancyal/The Past; Out of the Past; Out of the Past; | company.name(0.62):Shadows of the Past; Future Past Films; Past Due Pictures; | director.name(0.62):The Nostalgia Plotho; | actor.name(0.62):The Nostalgia Plotho; Melodie Past; Pavel Past; | 
where, WRB
is, VBZ
the, DT
director, NN
of, IN
The Past, NNP
from, IN
advmod(is-2, where-1)
root(ROOT-0, is-2)
det(director-4, the-3)
nsubj(is-2, director-4)
case(The Past-6, of-5)
nmod(director-4, The Past-6)
dep(is-2, from-7)

PARSE TREE:(901) ROOT ROOT
    (903) where CMT
        (904) director NT
            (906) The Past VTTEXT


===========
TRANSLATIONS
===========
TOT: 0.8662391053409028; NL: 0.8662391053409028; NL+AG: 0.9626264316569841; NL+QF: 0.8662391053409028; rels: []; projs: [director_0.name]; preds: [movie_0.title = "The Past"]; havings: []; superlative: []; blanks: 1
TOT: 0.8662391053409028; NL: 0.8662391053409028; NL+AG: 0.9626264316569841; NL+QF: 0.8662391053409028; rels: []; projs: [director_0.name]; preds: [cast_0.role = "The Past"]; havings: []; superlative: []; blanks: 1
TOT: 0.8662391053409028; NL: 0.8662391053409028; NL+AG: 0.9626264316569841; NL+QF: 0.8662391053409028; rels: []; projs: [director_0.birth_city]; preds: [movie_0.title = "The Past"]; havings: []; superlative: []; blanks: 1
TOT: 0.8662391053409028; NL: 0.8662391053409028; NL+AG: 0.9626264316569841; NL+QF: 0.8662391053409028; rels: []; projs: [director_0.birth_city]; preds: [cast_0.role = "The Past"]; havings: []; superlative: []; blanks: 1
TOT: 0.8662391053409028; NL: 0.8662391053409028; NL+AG: 0.9626264316569841; NL+QF: 0.8662391053409028; rels: []; projs: [actor_0.birth_city]; preds: [movie_0.title = "The Past"]; havings: []; superlative: []; blanks: 1
TOT: 0.8662391053409028; NL: 0.8662391053409028; NL+AG: 0.9626264316569841; NL+QF: 0.8662391053409028; rels: []; projs: [actor_0.birth_city]; preds: [cast_0.role = "The Past"]; havings: []; superlative: []; blanks: 1
TOT: 0.8662391053409028; NL: 0.8662391053409028; NL+AG: 0.9626264316569841; NL+QF: 0.8662391053409028; rels: []; projs: [producer_0.birth_city]; preds: [movie_0.title = "The Past"]; havings: []; superlative: []; blanks: 1
TOT: 0.8662391053409028; NL: 0.8662391053409028; NL+AG: 0.9626264316569841; NL+QF: 0.8662391053409028; rels: []; projs: [producer_0.birth_city]; preds: [cast_0.role = "The Past"]; havings: []; superlative: []; blanks: 1
TOT: 0.8662391053409028; NL: 0.8662391053409028; NL+AG: 0.9626264316569841; NL+QF: 0.8662391053409028; rels: []; projs: [writer_0.birth_city]; preds: [movie_0.title = "The Past"]; havings: []; superlative: []; blanks: 1
TOT: 0.8662391053409028; NL: 0.8662391053409028; NL+AG: 0.9626264316569841; NL+QF: 0.8662391053409028; rels: []; projs: [writer_0.birth_city]; preds: [cast_0.role = "The Past"]; havings: []; superlative: []; blanks: 1
TOT: 0.8254818122236567; NL: 0.7802453753539424; NL+AG: 0.9788797416050014; NL+QF: 0.8254818122236567; rels: []; projs: [director_0.birth_city]; preds: [movie_0.title = "Director",cast_0.role = "The Past"]; havings: []; superlative: []; blanks: 0
TOT: 0.8254818122236567; NL: 0.7802453753539424; NL+AG: 0.9788797416050014; NL+QF: 0.8254818122236567; rels: []; projs: [actor_0.birth_city]; preds: [movie_0.title = "Director",cast_0.role = "The Past"]; havings: []; superlative: []; blanks: 0
TOT: 0.8254818122236567; NL: 0.7802453753539424; NL+AG: 0.9788797416050014; NL+QF: 0.8254818122236567; rels: []; projs: [producer_0.birth_city]; preds: [movie_0.title = "Director",cast_0.role = "The Past"]; havings: []; superlative: []; blanks: 0
TOT: 0.8254818122236567; NL: 0.7802453753539424; NL+AG: 0.9788797416050014; NL+QF: 0.8254818122236567; rels: []; projs: [writer_0.birth_city]; preds: [movie_0.title = "Director",cast_0.role = "The Past"]; havings: []; superlative: []; blanks: 0

===========
RESULTS
===========
TOT: 0.8646170714212406; TR: 0.8662391053409028; QF: 0.4; select actor_0.birth_city from actor as actor_0, cast as cast_0 where cast_0.role = "The Past" and actor_0.aid = cast_0.aid
TOT: 0.8633164071861159; TR: 0.8662391053409028; QF: 0.2392523364485981; select actor_0.birth_city from actor as actor_0, cast as cast_0, movie as movie_0 where movie_0.title = "The Past" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid
TOT: 0.8633156703582681; TR: 0.8662391053409028; QF: 0.2318840579710145; select director_0.name from directed_by as directed_by_0, director as director_0, movie as movie_0 where movie_0.title = "The Past" and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid
TOT: 0.8633156703582681; TR: 0.8662391053409028; QF: 0.2318840579710145; select director_0.birth_city from directed_by as directed_by_0, director as director_0, movie as movie_0 where movie_0.title = "The Past" and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid
TOT: 0.8633109504209395; TR: 0.8662391053409028; QF: 0.18468468468468469; select writer_0.birth_city from movie as movie_0, writer as writer_0, written_by as written_by_0 where movie_0.title = "The Past" and movie_0.mid = written_by_0.msid and writer_0.wid = written_by_0.wid
TOT: 0.8633105184821513; TR: 0.8662391053409028; QF: 0.18036529680365296; select producer_0.birth_city from made_by as made_by_0, movie as movie_0, producer as producer_0 where movie_0.title = "The Past" and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid
TOT: 0.862543604440548; TR: 0.8662391053409028; QF: 0.16890153054313964; select director_0.name from cast as cast_0, directed_by as directed_by_0, director as director_0, movie as movie_0 where cast_0.role = "The Past" and cast_0.msid = movie_0.mid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid
TOT: 0.862543604440548; TR: 0.8662391053409028; QF: 0.16890153054313964; select director_0.birth_city from cast as cast_0, directed_by as directed_by_0, director as director_0, movie as movie_0 where cast_0.role = "The Past" and cast_0.msid = movie_0.mid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid
TOT: 0.8625412444718837; TR: 0.8662391053409028; QF: 0.14530184389997475; select writer_0.birth_city from cast as cast_0, movie as movie_0, writer as writer_0, written_by as written_by_0 where cast_0.role = "The Past" and cast_0.msid = movie_0.mid and movie_0.mid = written_by_0.msid and writer_0.wid = written_by_0.wid
TOT: 0.8625410285024897; TR: 0.8662391053409028; QF: 0.14314214995945887; select producer_0.birth_city from cast as cast_0, made_by as made_by_0, movie as movie_0, producer as producer_0 where cast_0.role = "The Past" and cast_0.msid = movie_0.mid and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid


04:16  INFO: ================
04:16  INFO: QUERY 4: Find all actors born in "Los Angeles"
04:16  INFO: ================
04:18  INFO: ================
04:18  INFO: QUERY 42: What are all the tv series created by "Shonda Rhimes"?
04:18  INFO: ================
04:19  INFO: ================
04:19  INFO: QUERY 92: What is the number of movies produced in 2013?
04:19  INFO: ================
04:21  INFO: ================
04:21  INFO: QUERY 101: How many movies did "Quentin Tarantino" direct after 2010?
04:21  INFO: ================
04:23  INFO: ================
04:23  INFO: QUERY 80: what are the genres of movies directed by "Asghar Farhadi"
04:23  INFO: ================
04:25  INFO: ================
04:25  INFO: QUERY 86: List all the directors of movies about nuclear weapons
04:25  INFO: ================
961. ROOT: ROOT; NA; ; (0) 
962. List: CMT; NA; ; (0) 
963. directors: NT; NA; all; (0) director.name(1.0):| director(1.0):| movie.title(0.95):Director; Director; Director; | producer.name(0.95):Director; Co-Director; Director GT; | company.name(0.95):Directors; Directors; Director; | writer.name(0.95):Director; Director X; Director X.; | tv_series.title(0.88):Directors on Directo; The Directors; The Directors; | 
966. movies: NT; NA; ; (0) movie.title(1.0):| movie(1.0):| cast.role(0.95):Movie; Movie F; Movie AD; | company.name(0.95):Movies; Movie; Movie Movie; | tv_series.title(0.84):Movies, Movies, Movi; Movie Mob; Moon Movies; | keyword.keyword(0.83):movie-in-movie; movies-about-movies; b-movie; | actor.name(0.76):| 
968. weapons: VTTEXT; NA; ; (0) movie.title(0.95):Weapons; Weapons; Weapons; | cast.role(0.95):Weapons; Weapons; Weapons; | keyword.keyword(0.95):weapon; weapon-x; power-weapon; | actor.name(0.74):The Weapons; Leatha Weapons; Letha Weapons; | tv_series.title(0.71):Weapons of Power; Weapon Wars; Weapons at War; | company.name(0.67):Weapon Films; Weapons Productions; No Weapon Production; | director.nationality(0.59):| 
970. nuclear: VTTEXT; NA; ; (0) movie.title(1.0):Nuclear; Nuclear Leak; Nuclear Day; | company.name(1.0):Nuclear; Nuclear; Nuclear Cat; | keyword.keyword(1.0):nuclear; nuclear-leak; nuclear-arms; | cast.role(0.79):Nuclear dealer; Nuclear Man; Nuclear Man; | tv_series.title(0.77):Nuclear Ned; Nuclear Coleslaw; Nuclear Family; | actor.name(0.68):Nuclear Family; Nuclear Wintour; El Físico Nuclear; | company.country_code(0.62):| 
List, VB
all, PDT
the, DT
directors, NNS
of, IN
movies, NNS
about, IN
nuclear, JJ
weapons, NNS
root(ROOT-0, List-1)
det:predet(directors-4, all-2)
det(directors-4, the-3)
dobj(List-1, directors-4)
case(movies-6, of-5)
nmod(directors-4, movies-6)
case(weapons-9, about-7)
amod(weapons-9, nuclear-8)
nmod(movies-6, weapons-9)

PARSE TREE:(961) ROOT ROOT
    (962) List CMT
        (963) directors NT
            (966) movies NT
                (968) weapons VTTEXT
                    (970) nuclear VTTEXT


===========
TRANSLATIONS
===========
TOT: 0.8979007600118484; NL: 0.8979007600118484; NL+AG: 0.9664773678070535; NL+QF: 0.8979007600118484; rels: [movie]; projs: [director_0.name]; preds: [movie_0.title = "Nuclear"]; havings: []; superlative: []; blanks: 1
TOT: 0.8979007600118484; NL: 0.8979007600118484; NL+AG: 0.9664773678070535; NL+QF: 0.8979007600118484; rels: [movie]; projs: [director_0.name]; preds: [company_0.name = "Nuclear"]; havings: []; superlative: []; blanks: 1
TOT: 0.8979007600118484; NL: 0.8979007600118484; NL+AG: 0.9664773678070535; NL+QF: 0.8979007600118484; rels: [movie]; projs: [director_0.name]; preds: [keyword_0.keyword = "nuclear"]; havings: []; superlative: []; blanks: 1
TOT: 0.8706421479874179; NL: 0.8301821713362141; NL+AG: 0.9775991838486775; NL+QF: 0.8706421479874179; rels: [movie]; projs: [director_0.name]; preds: [movie_0.title = "Weapons",movie_0.title = "Nuclear"]; havings: []; superlative: []; blanks: 0
TOT: 0.8706421479874179; NL: 0.8301821713362141; NL+AG: 0.9775991838486775; NL+QF: 0.8706421479874179; rels: [movie]; projs: [director_0.name]; preds: [movie_0.title = "Weapons",company_0.name = "Nuclear"]; havings: []; superlative: []; blanks: 0
TOT: 0.8706421479874179; NL: 0.8301821713362141; NL+AG: 0.9775991838486775; NL+QF: 0.8706421479874179; rels: [movie]; projs: [director_0.name]; preds: [movie_0.title = "Weapons",keyword_0.keyword = "nuclear"]; havings: []; superlative: []; blanks: 0
TOT: 0.8636522447290672; NL: 0.8301821713362141; NL+AG: 0.9775991838486775; NL+QF: 0.8636522447290672; rels: [movie]; projs: [director_0.name]; preds: [cast_0.role = "Weapons",movie_0.title = "Nuclear"]; havings: []; superlative: []; blanks: 0
TOT: 0.850715628074582; NL: 0.8470827043267568; NL+AG: 0.9426933077521801; NL+QF: 0.850715628074582; rels: [movie]; projs: [director_0.name]; preds: [cast_0.role = "Nuclear dealer"]; havings: []; superlative: []; blanks: 1
TOT: 0.8498919018967559; NL: 0.7831967519106005; NL+AG: 0.955198367697355; NL+QF: 0.8498919018967559; rels: [movie]; projs: [director_0.name]; preds: [movie_0.title = "Weapons",cast_0.role = "Nuclear dealer"]; havings: []; superlative: []; blanks: 0
TOT: 0.8423590487037597; NL: 0.8423590487037597; NL+AG: 0.9426933077521801; NL+QF: 0.8423590487037597; rels: [movie]; projs: [director_0.name]; preds: [tv_series_0.title = "Nuclear Ned"]; havings: []; superlative: []; blanks: 1
TOT: 0.8413340403902587; NL: 0.8176106028275605; NL+AG: 0.932954735614107; NL+QF: 0.8413340403902587; rels: [tv_series]; projs: [director_0.name]; preds: [company_0.name = "Nuclear"]; havings: []; superlative: []; blanks: 1

===========
RESULTS
===========
TOT: 0.8946607084825042; TR: 0.8979007600118484; QF: 0.2318840579710145; select director_0.name from directed_by as directed_by_0, director as director_0, movie as movie_0 where movie_0.title = "Nuclear" and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid
TOT: 0.8933618735289186; TR: 0.8979007600118484; QF: 0.12706521739130436; select director_0.name from company as company_0, copyright as copyright_0, directed_by as directed_by_0, director as director_0, movie as movie_0 where company_0.name = "Nuclear" and company_0.id = copyright_0.cid and copyright_0.msid = movie_0.mid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid
TOT: 0.8933617901955853; TR: 0.8979007600118484; QF: 0.12623188405797103; select director_0.name from directed_by as directed_by_0, director as director_0, keyword as keyword_0, movie as movie_0, tags as tags_0 where keyword_0.keyword = "nuclear" and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and keyword_0.id = tags_0.kid and movie_0.mid = tags_0.msid
TOT: 0.8926700239871028; TR: 0.8979007600118484; QF: 0.06423292581568583; select director_0.name from actor as actor_0, cast as cast_0, cast as cast_1, directed_by as directed_by_0, director as director_0, movie as movie_0, tv_series as tv_series_0 where movie_0.title = "Nuclear" and actor_0.aid = cast_0.aid and actor_0.aid = cast_1.aid and cast_0.msid = movie_0.mid and cast_1.msid = tv_series_0.sid and directed_by_0.did = director_0.did and directed_by_0.msid = tv_series_0.sid
TOT: 0.892668933682789; TR: 0.8979007600118484; QF: 0.053329882677708766; select director_0.name from company as company_0, copyright as copyright_0, copyright as copyright_1, directed_by as directed_by_0, director as director_0, movie as movie_0, tv_series as tv_series_0 where movie_0.title = "Nuclear" and company_0.id = copyright_0.cid and company_0.id = copyright_1.cid and copyright_0.msid = movie_0.mid and copyright_1.msid = tv_series_0.sid and directed_by_0.did = director_0.did and directed_by_0.msid = tv_series_0.sid
TOT: 0.8926688940002493; TR: 0.8979007600118484; QF: 0.052933057280883364; select director_0.name from directed_by as directed_by_0, director as director_0, keyword as keyword_0, movie as movie_0, tags as tags_0, tags as tags_1, tv_series as tv_series_0 where movie_0.title = "Nuclear" and directed_by_0.did = director_0.did and directed_by_0.msid = tv_series_0.sid and keyword_0.id = tags_0.kid and keyword_0.id = tags_1.kid and movie_0.mid = tags_0.msid and tags_1.msid = tv_series_0.sid
TOT: 0.8926688339401893; TR: 0.8979007600118484; QF: 0.05233245668028277; select director_0.name from directed_by as directed_by_0, director as director_0, movie as movie_0, tv_series as tv_series_0, writer as writer_0, written_by as written_by_0, written_by as written_by_1 where movie_0.title = "Nuclear" and directed_by_0.did = director_0.did and directed_by_0.msid = tv_series_0.sid and movie_0.mid = written_by_0.msid and tv_series_0.sid = written_by_1.msid and writer_0.wid = written_by_0.wid and writer_0.wid = written_by_1.wid
TOT: 0.8926687722346481; TR: 0.8979007600118484; QF: 0.051715401268706794; select director_0.name from directed_by as directed_by_0, director as director_0, made_by as made_by_0, made_by as made_by_1, movie as movie_0, producer as producer_0, tv_series as tv_series_0 where movie_0.title = "Nuclear" and directed_by_0.did = director_0.did and directed_by_0.msid = tv_series_0.sid and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid and made_by_1.msid = tv_series_0.sid and made_by_1.pid = producer_0.pid
TOT: 0.8926687722346481; TR: 0.8979007600118484; QF: 0.051715401268706794; select director_0.name from classification as classification_0, classification as classification_1, directed_by as directed_by_0, director as director_0, genre as genre_0, movie as movie_0, tv_series as tv_series_0 where movie_0.title = "Nuclear" and classification_0.gid = genre_0.gid and classification_0.msid = movie_0.mid and classification_1.gid = genre_0.gid and classification_1.msid = tv_series_0.sid and directed_by_0.did = director_0.did and directed_by_0.msid = tv_series_0.sid
TOT: 0.8663758476247324; TR: 0.8706421479874179; QF: 0.12706521739130436; select director_0.name from company as company_0, copyright as copyright_0, directed_by as directed_by_0, director as director_0, movie as movie_0 where company_0.name = "Nuclear" and movie_0.title = "Weapons" and company_0.id = copyright_0.cid and copyright_0.msid = movie_0.mid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid


04:27  INFO: ================
04:27  INFO: QUERY 102: How many movies did "Quentin Tarantino" direct before 2010?
04:27  INFO: ================
04:29  INFO: ================
04:29  INFO: QUERY 111: How many companies participated in producing "Camp X-Ray"
04:29  INFO: ================
982. ROOT: ROOT; NA; ; (0) 
983. participated: NT; NA; ; (0) directed_by(0.72):| written_by(0.63):| made_by(0.63):| director.name(0.6):| director(0.6):| cast.role(0.6):| cast(0.59):| 
985. How many: CMT; count; ; (0) 
986. companies: NT; NA; ; (0) company.name(1.0):| company(1.0):| movie.title(0.95):Company; Company; Company; | cast.role(0.95):Company; Company; Company; | keyword.keyword(0.95):company; company-k; it-company; | tv_series.title(0.82):X Company; Eco Company; Company and Co; | actor.name(0.74):Eva Company; Angel Company; Marc Company; | 
987. producing: NT; NA; ; (0) made_by(0.74):| directed_by(0.69):| producer.name(0.68):| producer(0.68):| cast.role(0.63):| cast(0.63):| written_by(0.63):| 
989. Camp X-Ray: VTTEXT; NA; ; (0) movie.title(1.0):Camp X-Ray; Camp X-Ray; Camp X; | keyword.keyword(0.78):camp-x-ray; camp-x-ray; x-ray; | cast.role(0.71):Camp X-Ray Guard #1; Camp X-Ray Guard #1; X-Rays; | tv_series.title(0.67):X-Ray; Camp Camp; Camp Camp; | company.name(0.67):X-Ray; Camp B; Camp B; | actor.name(0.63):Ray Camp; Ray Camp; Camp; | producer.name(0.56):Ray Ocampo; Camp Casey; Camp Casey; | 
How, WRB
many, JJ
companies, NNS
participated, VBD
in, IN
producing, VBG
Camp X-Ray, NNP
advmod(many-2, How-1)
dep(participated-4, many-2)
nsubj(participated-4, companies-3)
root(ROOT-0, participated-4)
mark(producing-6, in-5)
advcl(participated-4, producing-6)
dobj(producing-6, Camp X-Ray-7)

PARSE TREE:(982) ROOT ROOT
    (985) How many CMT
        (986) companies NT
            (983) participated NT
                (987) producing NT
                    (989) Camp X-Ray VTTEXT


===========
TRANSLATIONS
===========
TOT: 0.8483887830624177; NL: 0.8396474479422154; NL+AG: 0.9326789140939467; NL+QF: 0.8483887830624177; rels: [directed_by]; projs: [count(distinct(company_0.name))]; preds: [movie_0.title = "Camp X-Ray"]; havings: []; superlative: []; blanks: 0
TOT: 0.8321612394706708; NL: 0.8260995542878498; NL+AG: 0.9326789140939467; NL+QF: 0.8321612394706708; rels: [directed_by]; projs: [count(distinct(company_0.name))]; preds: [movie_0.title = "Camp X-Ray"]; havings: []; superlative: []; blanks: 1
TOT: 0.806225774829855; NL: 0.806225774829855; NL+AG: 0.9326789140939467; NL+QF: 0.806225774829855; rels: []; projs: [count(distinct(company_0.name))]; preds: [movie_0.title = "Camp X-Ray"]; havings: []; superlative: []; blanks: 2
TOT: 0.7885166260389035; NL: 0.7885166260389035; NL+AG: 0.9059876895816938; NL+QF: 0.7885166260389035; rels: [directed_by]; projs: [count(distinct(company_0.name))]; preds: [keyword_0.keyword = "camp-x-ray"]; havings: []; superlative: []; blanks: 0
TOT: 0.7757937392839265; NL: 0.7757937392839265; NL+AG: 0.9059876895816938; NL+QF: 0.7757937392839265; rels: [directed_by]; projs: [count(distinct(company_0.name))]; preds: [keyword_0.keyword = "camp-x-ray"]; havings: []; superlative: []; blanks: 1
TOT: 0.7746297478789415; NL: 0.7587071162864787; NL+AG: 0.9059876895816938; NL+QF: 0.7746297478789415; rels: [directed_by]; projs: [count(distinct(company_0.name))]; preds: [company_0.name = "X-Ray"]; havings: []; superlative: []; blanks: 0
TOT: 0.7699601046294952; NL: 0.7699601046294952; NL+AG: 0.9059876895816938; NL+QF: 0.7699601046294952; rels: [directed_by]; projs: [count(distinct(company_0.name))]; preds: [cast_0.role = "Camp X-Ray Guard #1"]; havings: []; superlative: []; blanks: 0
TOT: 0.7628658165246235; NL: 0.7415851435295636; NL+AG: 0.9115252750874724; NL+QF: 0.7628658165246235; rels: [directed_by]; projs: [movie_0.mid]; preds: [movie_0.title = "Company",movie_0.title = "Camp X-Ray"]; havings: []; superlative: []; blanks: 0
TOT: 0.7587071162864787; NL: 0.7587071162864787; NL+AG: 0.9059876895816938; NL+QF: 0.7587071162864787; rels: [directed_by]; projs: [count(distinct(company_0.name))]; preds: [tv_series_0.title = "X-Ray"]; havings: []; superlative: []; blanks: 0
TOT: 0.7579026440847333; NL: 0.7464652124357007; NL+AG: 0.9059876895816938; NL+QF: 0.7579026440847333; rels: [directed_by]; projs: [count(distinct(company_0.name))]; preds: [company_0.name = "X-Ray"]; havings: []; superlative: []; blanks: 1
TOT: 0.757536631371535; NL: 0.757536631371535; NL+AG: 0.9059876895816938; NL+QF: 0.757536631371535; rels: [directed_by]; projs: [count(distinct(company_0.name))]; preds: [cast_0.role = "Camp X-Ray Guard #1"]; havings: []; superlative: []; blanks: 1

===========
RESULTS
===========
TOT: 0.8436530351063254; TR: 0.8483887830624177; QF: 0.06291591740458856; select count(distinct(company_0.name)) from company as company_0, copyright as copyright_0, directed_by as directed_by_0, directed_by as directed_by_1, director as director_0, movie as movie_0, tv_series as tv_series_0 where movie_0.title = "Camp X-Ray" and company_0.id = copyright_0.cid and copyright_0.msid = tv_series_0.sid and directed_by_0.did = director_0.did and directed_by_0.msid = tv_series_0.sid and directed_by_1.did = director_0.did and directed_by_1.msid = movie_0.mid
TOT: 0.8038984514132004; TR: 0.806225774829855; QF: 0.19166666666666665; select count(distinct(company_0.name)) from company as company_0, copyright as copyright_0, movie as movie_0 where movie_0.title = "Camp X-Ray" and company_0.id = copyright_0.cid and copyright_0.msid = movie_0.mid
TOT: 0.8019117547093578; TR: 0.806225774829855; QF: 0.06389345010034665; select count(distinct(company_0.name)) from actor as actor_0, cast as cast_0, cast as cast_1, company as company_0, copyright as copyright_0, movie as movie_0, tv_series as tv_series_0 where movie_0.title = "Camp X-Ray" and actor_0.aid = cast_0.aid and actor_0.aid = cast_1.aid and cast_0.msid = tv_series_0.sid and cast_1.msid = movie_0.mid and company_0.id = copyright_0.cid and copyright_0.msid = tv_series_0.sid
TOT: 0.8019111854701678; TR: 0.806225774829855; QF: 0.058201058201058205; select count(distinct(company_0.name)) from company as company_0, copyright as copyright_0, movie as movie_0, tv_series as tv_series_0, writer as writer_0, written_by as written_by_0, written_by as written_by_1 where movie_0.title = "Camp X-Ray" and company_0.id = copyright_0.cid and copyright_0.msid = tv_series_0.sid and movie_0.mid = written_by_1.msid and tv_series_0.sid = written_by_0.msid and writer_0.wid = written_by_0.wid and writer_0.wid = written_by_1.wid
TOT: 0.8019111854701678; TR: 0.806225774829855; QF: 0.058201058201058205; select count(distinct(company_0.name)) from company as company_0, copyright as copyright_0, keyword as keyword_0, movie as movie_0, tags as tags_0, tags as tags_1, tv_series as tv_series_0 where movie_0.title = "Camp X-Ray" and company_0.id = copyright_0.cid and copyright_0.msid = tv_series_0.sid and keyword_0.id = tags_0.kid and keyword_0.id = tags_1.kid and movie_0.mid = tags_1.msid and tags_0.msid = tv_series_0.sid
TOT: 0.8019111854701678; TR: 0.806225774829855; QF: 0.058201058201058205; select count(distinct(company_0.name)) from classification as classification_0, classification as classification_1, company as company_0, copyright as copyright_0, genre as genre_0, movie as movie_0, tv_series as tv_series_0 where movie_0.title = "Camp X-Ray" and classification_0.gid = genre_0.gid and classification_0.msid = tv_series_0.sid and classification_1.gid = genre_0.gid and classification_1.msid = movie_0.mid and company_0.id = copyright_0.cid and copyright_0.msid = tv_series_0.sid
TOT: 0.8019111854701678; TR: 0.806225774829855; QF: 0.058201058201058205; select count(distinct(company_0.name)) from company as company_0, copyright as copyright_0, made_by as made_by_0, made_by as made_by_1, movie as movie_0, producer as producer_0, tv_series as tv_series_0 where movie_0.title = "Camp X-Ray" and company_0.id = copyright_0.cid and copyright_0.msid = tv_series_0.sid and made_by_0.msid = tv_series_0.sid and made_by_0.pid = producer_0.pid and made_by_1.msid = movie_0.mid and made_by_1.pid = producer_0.pid
TOT: 0.759676929476566; TR: 0.7628658165246235; QF: 0.12356521739130435; select movie_0.mid from directed_by as directed_by_0, directed_by as directed_by_1, director as director_0, movie as movie_0, movie as movie_1 where movie_0.title = "Company" and movie_1.title = "Camp X-Ray" and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and directed_by_1.did = director_0.did and directed_by_1.msid = movie_1.mid
TOT: 0.7548681346072333; TR: 0.7587071162864787; QF: 0.062412008281573506; select count(distinct(company_0.name)) from company as company_0, copyright as copyright_0, directed_by as directed_by_0, directed_by as directed_by_1, director as director_0, movie as movie_0, tv_series as tv_series_0 where tv_series_0.title = "X-Ray" and company_0.id = copyright_0.cid and copyright_0.msid = movie_0.mid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and directed_by_1.did = director_0.did and directed_by_1.msid = tv_series_0.sid


04:31  INFO: ================
04:31  INFO: QUERY 84: List all male directors who worked with the "NBCUniversal" company
04:31  INFO: ================
991. ROOT: ROOT; NA; ; (0) 
992. List: CMT; NA; ; (0) 
993. directors: NT; NA; all; (0) director.name(1.0):| director(1.0):| movie.title(0.95):Director; Director; Director; | producer.name(0.95):Director; Co-Director; Director GT; | company.name(0.95):Directors; Directors; Director; | writer.name(0.95):Director; Director X; Director X.; | tv_series.title(0.88):Directors on Directo; The Directors; The Directors; | 
995. male: VTTEXT; NA; ; (0) movie.title(1.0):Male; Female/Male; Pale Male; | director.birth_city(1.0):Male; Wilkucice Male; | director.gender(1.0):male; male; male; | actor.gender(1.0):male; male; male; | actor.name(1.0):Male; Male; Coleman Male; | cast.role(1.0):Males; Males; Males; | producer.birth_city(1.0):Male; | 
996. worked: NT; NA; ; (0) directed_by(0.71):| made_by(0.64):| written_by(0.63):| director.name(0.62):| director(0.62):| cast.role(0.62):| cast(0.62):| 
998. company: NT; NA; ; (0) company.name(1.0):| company(1.0):| movie.title(0.95):Company; Company; Company; | cast.role(0.95):Company; Company; Company; | keyword.keyword(0.95):company; company-k; it-company; | tv_series.title(0.82):X Company; Eco Company; Company and Co; | actor.name(0.74):Eva Company; Angel Company; Marc Company; | 
1001. NBCUniversal: VTTEXT; NA; ; (0) company.name(1.0):NBCUniversal; NBCUniversal Media; NBCUniversal Skycast; | genre.genre(0.2):Commercial; Commercial; Experimental; | 
List, VB
all, DT
male, JJ
directors, NNS
who, WP
worked, VBD
with, IN
the, DT
NBCUniversal, NNP
company, NN
root(ROOT-0, List-1)
det(directors-4, all-2)
amod(directors-4, male-3)
dobj(List-1, directors-4)
nsubj(worked-6, who-5)
acl:relcl(directors-4, worked-6)
case(company-10, with-7)
det(company-10, the-8)
compound(company-10, NBCUniversal-9)
nmod(worked-6, company-10)

PARSE TREE:(991) ROOT ROOT
    (992) List CMT
        (993) directors NT
            (995) male VTTEXT
            (996) worked NT
                (998) company NT
                    (1001) NBCUniversal VTTEXT


===========
TRANSLATIONS
===========
TOT: 0.9383734951578884; NL: 0.9168559143387582; NL+AG: 0.9684566970029178; NL+QF: 0.9383734951578884; rels: [directed_by]; projs: [director_0.name]; preds: [actor_0.name = "Male",company_0.name = "NBCUniversal"]; havings: []; superlative: []; blanks: 0
TOT: 0.9383455831447247; NL: 0.9168559143387582; NL+AG: 0.9684566970029178; NL+QF: 0.9383455831447247; rels: [directed_by]; projs: [director_0.name]; preds: [movie_0.title = "Male",company_0.name = "NBCUniversal"]; havings: []; superlative: []; blanks: 0
TOT: 0.9364746612214895; NL: 0.9168559143387582; NL+AG: 0.9684566970029178; NL+QF: 0.9364746612214895; rels: [directed_by]; projs: [director_0.name]; preds: [director_0.birth_city = "Male",company_0.name = "NBCUniversal"]; havings: []; superlative: []; blanks: 0
TOT: 0.933875535029306; NL: 0.9168559143387582; NL+AG: 0.9684566970029178; NL+QF: 0.933875535029306; rels: [directed_by]; projs: [director_0.name]; preds: [director_0.gender = "male",company_0.name = "NBCUniversal"]; havings: []; superlative: []; blanks: 0
TOT: 0.933875535029306; NL: 0.9168559143387582; NL+AG: 0.9684566970029178; NL+QF: 0.933875535029306; rels: [directed_by]; projs: [director_0.name]; preds: [actor_0.gender = "male",company_0.name = "NBCUniversal"]; havings: []; superlative: []; blanks: 0
TOT: 0.933875535029306; NL: 0.9168559143387582; NL+AG: 0.9684566970029178; NL+QF: 0.933875535029306; rels: [directed_by]; projs: [director_0.name]; preds: [cast_0.role = "Males",company_0.name = "NBCUniversal"]; havings: []; superlative: []; blanks: 0
TOT: 0.933875535029306; NL: 0.9168559143387582; NL+AG: 0.9684566970029178; NL+QF: 0.933875535029306; rels: [directed_by]; projs: [director_0.name]; preds: [producer_0.birth_city = "Male",company_0.name = "NBCUniversal"]; havings: []; superlative: []; blanks: 0
TOT: 0.8979007600118484; NL: 0.8979007600118484; NL+AG: 0.9684566970029178; NL+QF: 0.8979007600118484; rels: []; projs: [director_0.name]; preds: [movie_0.title = "Male",company_0.name = "NBCUniversal"]; havings: []; superlative: []; blanks: 1
TOT: 0.8979007600118484; NL: 0.8979007600118484; NL+AG: 0.9684566970029178; NL+QF: 0.8979007600118484; rels: []; projs: [director_0.name]; preds: [director_0.birth_city = "Male",company_0.name = "NBCUniversal"]; havings: []; superlative: []; blanks: 1
TOT: 0.8979007600118484; NL: 0.8979007600118484; NL+AG: 0.9684566970029178; NL+QF: 0.8979007600118484; rels: []; projs: [director_0.name]; preds: [director_0.gender = "male",company_0.name = "NBCUniversal"]; havings: []; superlative: []; blanks: 1
TOT: 0.8979007600118484; NL: 0.8979007600118484; NL+AG: 0.9684566970029178; NL+QF: 0.8979007600118484; rels: []; projs: [director_0.name]; preds: [actor_0.gender = "male",company_0.name = "NBCUniversal"]; havings: []; superlative: []; blanks: 1
TOT: 0.8979007600118484; NL: 0.8979007600118484; NL+AG: 0.9684566970029178; NL+QF: 0.8979007600118484; rels: []; projs: [director_0.name]; preds: [actor_0.name = "Male",company_0.name = "NBCUniversal"]; havings: []; superlative: []; blanks: 1
TOT: 0.8979007600118484; NL: 0.8979007600118484; NL+AG: 0.9684566970029178; NL+QF: 0.8979007600118484; rels: []; projs: [director_0.name]; preds: [cast_0.role = "Males",company_0.name = "NBCUniversal"]; havings: []; superlative: []; blanks: 1
TOT: 0.8979007600118484; NL: 0.8979007600118484; NL+AG: 0.9684566970029178; NL+QF: 0.8979007600118484; rels: []; projs: [director_0.name]; preds: [producer_0.birth_city = "Male",company_0.name = "NBCUniversal"]; havings: []; superlative: []; blanks: 1

===========
RESULTS
===========
TOT: 0.9334022484304662; TR: 0.9383455831447247; QF: 0.12706521739130436; select director_0.name from company as company_0, copyright as copyright_0, directed_by as directed_by_0, director as director_0, movie as movie_0 where company_0.name = "NBCUniversal" and movie_0.title = "Male" and company_0.id = copyright_0.cid and copyright_0.msid = movie_0.mid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid
TOT: 0.9327410771042592; TR: 0.9383734951578884; QF: 0.09468615158375418; select director_0.name from actor as actor_0, cast as cast_0, company as company_0, copyright as copyright_0, directed_by as directed_by_0, director as director_0, movie as movie_0 where actor_0.name = "Male" and company_0.name = "NBCUniversal" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and company_0.id = copyright_0.cid and copyright_0.msid = movie_0.mid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid
TOT: 0.9327398647577919; TR: 0.9383734951578884; QF: 0.08256268691051301; select director_0.name from actor as actor_0, cast as cast_0, company as company_0, copyright as copyright_0, directed_by as directed_by_0, director as director_0, tv_series as tv_series_0 where actor_0.name = "Male" and company_0.name = "NBCUniversal" and actor_0.aid = cast_0.aid and cast_0.msid = tv_series_0.sid and company_0.id = copyright_0.cid and copyright_0.msid = tv_series_0.sid and directed_by_0.did = director_0.did and directed_by_0.msid = tv_series_0.sid
TOT: 0.9327102671878092; TR: 0.9383455831447247; QF: 0.06291591740458856; select director_0.name from company as company_0, copyright as copyright_0, directed_by as directed_by_0, directed_by as directed_by_1, director as director_0, movie as movie_0, tv_series as tv_series_0 where company_0.name = "NBCUniversal" and movie_0.title = "Male" and company_0.id = copyright_0.cid and copyright_0.msid = tv_series_0.sid and directed_by_0.did = director_0.did and directed_by_0.msid = tv_series_0.sid and directed_by_1.did = director_0.did and directed_by_1.msid = movie_0.mid
TOT: 0.9327093085843365; TR: 0.9383455831447247; QF: 0.053329882677708766; select director_0.name from company as company_0, copyright as copyright_0, copyright as copyright_1, directed_by as directed_by_0, director as director_0, movie as movie_0, tv_series as tv_series_0 where company_0.name = "NBCUniversal" and movie_0.title = "Male" and company_0.id = copyright_0.cid and company_0.id = copyright_1.cid and copyright_0.msid = movie_0.mid and copyright_1.msid = tv_series_0.sid and directed_by_0.did = director_0.did and directed_by_0.msid = tv_series_0.sid
TOT: 0.9315500357264633; TR: 0.9364746612214895; QF: 0.12706521739130436; select director_0.name from company as company_0, copyright as copyright_0, directed_by as directed_by_0, director as director_0, movie as movie_0 where company_0.name = "NBCUniversal" and director_0.birth_city = "Male" and company_0.id = copyright_0.cid and copyright_0.msid = movie_0.mid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid
TOT: 0.9315500007023088; TR: 0.9364746612214895; QF: 0.12671497584541064; select director_0.name from company as company_0, copyright as copyright_0, directed_by as directed_by_0, director as director_0, tv_series as tv_series_0 where company_0.name = "NBCUniversal" and director_0.birth_city = "Male" and company_0.id = copyright_0.cid and copyright_0.msid = tv_series_0.sid and directed_by_0.did = director_0.did and directed_by_0.msid = tv_series_0.sid
TOT: 0.9289769007962017; TR: 0.933875535029306; QF: 0.12706521739130436; select director_0.name from company as company_0, copyright as copyright_0, directed_by as directed_by_0, director as director_0, movie as movie_0 where company_0.name = "NBCUniversal" and director_0.gender = "male" and company_0.id = copyright_0.cid and copyright_0.msid = movie_0.mid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid
TOT: 0.9289768657720471; TR: 0.933875535029306; QF: 0.12671497584541064; select director_0.name from company as company_0, copyright as copyright_0, directed_by as directed_by_0, director as director_0, tv_series as tv_series_0 where company_0.name = "NBCUniversal" and director_0.gender = "male" and company_0.id = copyright_0.cid and copyright_0.msid = tv_series_0.sid and directed_by_0.did = director_0.did and directed_by_0.msid = tv_series_0.sid
TOT: 0.9285890271491603; TR: 0.933875535029306; QF: 0.10589394555058919; select director_0.name from cast as cast_0, company as company_0, copyright as copyright_0, directed_by as directed_by_0, director as director_0, movie as movie_0 where cast_0.role = "Males" and company_0.name = "NBCUniversal" and cast_0.msid = movie_0.mid and company_0.id = copyright_0.cid and copyright_0.msid = movie_0.mid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid


04:54  INFO: ===== FOLD 3 =====
04:54  INFO: ===== Parsing Results =====
04:54  INFO: Total Queries: 99
04:54  INFO: Correctly Parsed: 98/99

04:54  INFO: ================
04:54  INFO: QUERY 85: What are the movies related to nuclear weapons
04:54  INFO: ================
1003. ROOT: ROOT; NA; ; (0) 
1004. related: NT; NA; ; (0) made_by(0.69):| written_by(0.66):| directed_by(0.66):| cast.role(0.61):| cast(0.6):| company.name(0.59):| company(0.59):| 
1005. What: CMT; NA; ; (0) 
1007. movies: NT; NA; ; (0) movie.title(1.0):| movie(1.0):| cast.role(0.95):Movie; Movie F; Movie AD; | company.name(0.95):Movies; Movie; Movie Movie; | tv_series.title(0.84):Movies, Movies, Movi; Movie Mob; Moon Movies; | keyword.keyword(0.83):movie-in-movie; movies-about-movies; b-movie; | actor.name(0.76):| 
1009. weapons: VTTEXT; NA; ; (0) movie.title(0.95):Weapons; Weapons; Weapons; | cast.role(0.95):Weapons; Weapons; Weapons; | keyword.keyword(0.95):weapon; weapon-x; power-weapon; | actor.name(0.74):The Weapons; Leatha Weapons; Letha Weapons; | tv_series.title(0.71):Weapons of Power; Weapon Wars; Weapons at War; | company.name(0.67):Weapon Films; Weapons Productions; No Weapon Production; | director.nationality(0.59):| 
1011. nuclear: VTTEXT; NA; ; (0) movie.title(1.0):Nuclear; Nuclear Leak; Nuclear Day; | company.name(1.0):Nuclear; Nuclear; Nuclear Cat; | keyword.keyword(1.0):nuclear; nuclear-leak; nuclear-arms; | cast.role(0.79):Nuclear dealer; Nuclear Man; Nuclear Man; | tv_series.title(0.77):Nuclear Ned; Nuclear Coleslaw; Nuclear Family; | actor.name(0.68):Nuclear Family; Nuclear Wintour; El Físico Nuclear; | company.country_code(0.62):| 
What, WP
are, VBP
the, DT
movies, NNS
related, VBN
to, TO
nuclear, JJ
weapons, NNS
dobj(related-5, What-1)
auxpass(related-5, are-2)
det(movies-4, the-3)
nsubjpass(related-5, movies-4)
root(ROOT-0, related-5)
case(weapons-8, to-6)
amod(weapons-8, nuclear-7)
nmod(related-5, weapons-8)

PARSE TREE:(1003) ROOT ROOT
    (1005) What CMT
        (1007) movies NT
            (1004) related NT
                (1009) weapons VTTEXT
                    (1011) nuclear VTTEXT


===========
TRANSLATIONS
===========
TOT: 0.831558987214801; NL: 0.8081260796742606; NL+AG: 0.932954735614107; NL+QF: 0.831558987214801; rels: [directed_by]; projs: [movie_0.title]; preds: [movie_0.title = "Nuclear"]; havings: []; superlative: []; blanks: 1
TOT: 0.8263124226777906; NL: 0.8081260796742606; NL+AG: 0.932954735614107; NL+QF: 0.8263124226777906; rels: [directed_by]; projs: [movie_0.title]; preds: [company_0.name = "Nuclear"]; havings: []; superlative: []; blanks: 1
TOT: 0.822986287803082; NL: 0.8193886719056226; NL+AG: 0.932954735614107; NL+QF: 0.822986287803082; rels: [made_by]; projs: [movie_0.title]; preds: [movie_0.title = "Nuclear"]; havings: []; superlative: []; blanks: 1
TOT: 0.822986287803082; NL: 0.8193886719056226; NL+AG: 0.932954735614107; NL+QF: 0.822986287803082; rels: [made_by]; projs: [movie_0.title]; preds: [company_0.name = "Nuclear"]; havings: []; superlative: []; blanks: 1
TOT: 0.822986287803082; NL: 0.8193886719056226; NL+AG: 0.932954735614107; NL+QF: 0.822986287803082; rels: [made_by]; projs: [movie_0.title]; preds: [keyword_0.keyword = "nuclear"]; havings: []; superlative: []; blanks: 1
TOT: 0.8226528535190272; NL: 0.8081260796742606; NL+AG: 0.932954735614107; NL+QF: 0.8226528535190272; rels: [directed_by]; projs: [movie_0.title]; preds: [keyword_0.keyword = "nuclear"]; havings: []; superlative: []; blanks: 1
TOT: 0.8225126100298767; NL: 0.8104255302688795; NL+AG: 0.932954735614107; NL+QF: 0.8225126100298767; rels: [written_by]; projs: [movie_0.title]; preds: [movie_0.title = "Nuclear"]; havings: []; superlative: []; blanks: 1
TOT: 0.8188503008031688; NL: 0.8104255302688795; NL+AG: 0.932954735614107; NL+QF: 0.8188503008031688; rels: [written_by]; projs: [movie_0.title]; preds: [company_0.name = "Nuclear"]; havings: []; superlative: []; blanks: 1
TOT: 0.8188503008031688; NL: 0.8104255302688795; NL+AG: 0.932954735614107; NL+QF: 0.8188503008031688; rels: [written_by]; projs: [movie_0.title]; preds: [keyword_0.keyword = "nuclear"]; havings: []; superlative: []; blanks: 1
TOT: 0.806225774829855; NL: 0.806225774829855; NL+AG: 0.932954735614107; NL+QF: 0.806225774829855; rels: []; projs: [movie_0.title]; preds: [movie_0.title = "Nuclear"]; havings: []; superlative: []; blanks: 2
TOT: 0.806225774829855; NL: 0.806225774829855; NL+AG: 0.932954735614107; NL+QF: 0.806225774829855; rels: []; projs: [movie_0.title]; preds: [company_0.name = "Nuclear"]; havings: []; superlative: []; blanks: 2
TOT: 0.806225774829855; NL: 0.806225774829855; NL+AG: 0.932954735614107; NL+QF: 0.806225774829855; rels: []; projs: [movie_0.title]; preds: [keyword_0.keyword = "nuclear"]; havings: []; superlative: []; blanks: 2

===========
RESULTS
===========
TOT: 0.8276832491278697; TR: 0.831558987214801; QF: 0.12437189767086673; select movie_0.title from directed_by as directed_by_0, directed_by as directed_by_1, director as director_0, movie as movie_0, movie as movie_1 where movie_1.title = "Nuclear" and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and directed_by_1.did = director_0.did and directed_by_1.msid = movie_1.mid
TOT: 0.8217969979001204; TR: 0.8263124226777906; QF: 0.05851166316348966; select movie_0.title from company as company_0, copyright as copyright_0, directed_by as directed_by_0, directed_by as directed_by_1, director as director_0, movie as movie_0, tv_series as tv_series_0 where company_0.name = "Nuclear" and company_0.id = copyright_0.cid and copyright_0.msid = tv_series_0.sid and directed_by_0.did = director_0.did and directed_by_0.msid = tv_series_0.sid and directed_by_1.did = director_0.did and directed_by_1.msid = movie_0.mid
TOT: 0.8191892342573429; TR: 0.822986287803082; QF: 0.05394736842105263; select movie_0.title from made_by as made_by_0, made_by as made_by_1, movie as movie_0, movie as movie_1, producer as producer_0 where movie_1.title = "Nuclear" and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid and made_by_1.msid = movie_1.mid and made_by_1.pid = producer_0.pid
TOT: 0.8187202985250275; TR: 0.8225126100298767; QF: 0.054000000000000006; select movie_0.title from movie as movie_0, movie as movie_1, writer as writer_0, written_by as written_by_0, written_by as written_by_1 where movie_1.title = "Nuclear" and movie_0.mid = written_by_0.msid and movie_1.mid = written_by_1.msid and writer_0.wid = written_by_0.wid and writer_0.wid = written_by_1.wid
TOT: 0.8185043608701802; TR: 0.822986287803082; QF: 0.06087662337662337; select movie_0.title from company as company_0, copyright as copyright_0, made_by as made_by_0, made_by as made_by_1, movie as movie_0, producer as producer_0, tv_series as tv_series_0 where company_0.name = "Nuclear" and company_0.id = copyright_0.cid and copyright_0.msid = tv_series_0.sid and made_by_0.msid = tv_series_0.sid and made_by_0.pid = producer_0.pid and made_by_1.msid = movie_0.mid and made_by_1.pid = producer_0.pid
TOT: 0.8185032230825292; TR: 0.822986287803082; QF: 0.049498746867167924; select movie_0.title from keyword as keyword_0, made_by as made_by_0, made_by as made_by_1, movie as movie_0, producer as producer_0, tags as tags_0, tv_series as tv_series_0 where keyword_0.keyword = "nuclear" and keyword_0.id = tags_0.kid and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid and made_by_1.msid = tv_series_0.sid and made_by_1.pid = producer_0.pid and tags_0.msid = tv_series_0.sid
TOT: 0.818174095737946; TR: 0.8226528535190272; QF: 0.059224713176603216; select movie_0.title from directed_by as directed_by_0, directed_by as directed_by_1, director as director_0, keyword as keyword_0, movie as movie_0, tags as tags_0, tv_series as tv_series_0 where keyword_0.keyword = "nuclear" and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and directed_by_1.did = director_0.did and directed_by_1.msid = tv_series_0.sid and keyword_0.id = tags_0.kid and tags_0.msid = tv_series_0.sid
TOT: 0.8144093008398332; TR: 0.8188503008031688; QF: 0.05654761904761905; select movie_0.title from company as company_0, copyright as copyright_0, movie as movie_0, tv_series as tv_series_0, writer as writer_0, written_by as written_by_0, written_by as written_by_1 where company_0.name = "Nuclear" and company_0.id = copyright_0.cid and copyright_0.msid = tv_series_0.sid and movie_0.mid = written_by_1.msid and tv_series_0.sid = written_by_0.msid and writer_0.wid = written_by_0.wid and writer_0.wid = written_by_1.wid
TOT: 0.8144085984588809; TR: 0.8188503008031688; QF: 0.049523809523809526; select movie_0.title from keyword as keyword_0, movie as movie_0, tags as tags_0, tv_series as tv_series_0, writer as writer_0, written_by as written_by_0, written_by as written_by_1 where keyword_0.keyword = "nuclear" and keyword_0.id = tags_0.kid and movie_0.mid = written_by_0.msid and tags_0.msid = tv_series_0.sid and tv_series_0.sid = written_by_1.msid and writer_0.wid = written_by_0.wid and writer_0.wid = written_by_1.wid
TOT: 0.8038985155157645; TR: 0.806225774829855; QF: 0.1923076923076923; select movie_0.title from keyword as keyword_0, movie as movie_0, tags as tags_0 where keyword_0.keyword = "nuclear" and keyword_0.id = tags_0.kid and movie_0.mid = tags_0.msid


04:56  INFO: ================
04:56  INFO: QUERY 3: Find all movies produced in 2015
04:56  INFO: ================
04:56  INFO: ================
04:56  INFO: QUERY 61: How many movies are there that are directed by "Steven Spielberg" and featuring "Matt Damon"?
04:56  INFO: ================
1021. ROOT: ROOT; NA; ; (0) 
1023. movies: NT; NA; ; (0) movie.title(1.0):| movie(1.0):| cast.role(0.95):Movie; Movie F; Movie AD; | company.name(0.95):Movies; Movie; Movie Movie; | tv_series.title(0.84):Movies, Movies, Movi; Movie Mob; Moon Movies; | keyword.keyword(0.83):movie-in-movie; movies-about-movies; b-movie; | actor.name(0.76):| 
1025. How many: CMT; count; ; (0) 
1027. directed: NT; NA; ; (0) directed_by(1.0):| director.name(0.72):| director(0.72):| written_by(0.68):| cast.role(0.67):| cast(0.67):| made_by(0.67):| 
1033. featuring: NT; NA; ; (0) tv_series.title(0.69):| tv_series(0.69):| movie.release_year(0.64):| tv_series.release_year(0.64):| made_by(0.64):| movie.title_aka(0.62):| tv_series.title_aka(0.62):| 
1034. Matt Damon: VTTEXT; NA; ; (0) director.name(1.0):Matt Damon; Matt Diamond; Matt Diamond; | actor.name(1.0):Matt Damon; Matt Damon; Matt Diamond; | producer.name(1.0):Matt Damon; Matt Damon; Matt Diamond; | writer.name(1.0):Matt Damon; Matt Damon; Matt Diamond; | movie.title(0.76):I'm Not Matt Damon; I'm Not Matt Damon; Meeting Matt Damon; | cast.role(0.74):Matt Stamon; Matt Damien; Matt Demond; | tv_series.title(0.67):Damon; The Damon Elliott Sh; Matt Houston; | 
How, WRB
many, JJ
movies, NNS
are, VBP
there, EX
that, WDT
are, VBP
directed, VBN
by, IN
Steven Spielberg, VBG
and, CC
featuring, VBG
Matt Damon, NNP
advmod(many-2, How-1)
amod(movies-3, many-2)
nsubj(are-4, movies-3)
root(ROOT-0, are-4)
expl(are-4, there-5)
nsubjpass(directed-8, that-6)
auxpass(directed-8, are-7)
dep(are-4, directed-8)
mark(Steven Spielberg-10, by-9)
advcl(directed-8, Steven Spielberg-10)
cc(Steven Spielberg-10, and-11)
conj(Steven Spielberg-10, featuring-12)
dobj(Steven Spielberg-10, Matt Damon-13)

PARSE TREE:(1021) ROOT ROOT
    (1025) How many CMT
        (1023) movies NT
            (1027) directed NT
                (1034) Matt Damon VTTEXT
                (1033) featuring NT


===========
TRANSLATIONS
===========
TOT: 0.919751708767763; NL: 0.9100167166104893; NL+AG: 0.9663394570469733; NL+QF: 0.919751708767763; rels: [tv_series,directed_by]; projs: [count(distinct(movie_0.title))]; preds: [producer_0.name = "Matt Damon"]; havings: []; superlative: []; blanks: 0
TOT: 0.9143289387793889; NL: 0.9100167166104893; NL+AG: 0.9663394570469733; NL+QF: 0.9143289387793889; rels: [tv_series,directed_by]; projs: [count(distinct(movie_0.title))]; preds: [actor_0.name = "Matt Damon"]; havings: []; superlative: []; blanks: 0
TOT: 0.9121804722345871; NL: 0.9100167166104893; NL+AG: 0.9663394570469733; NL+QF: 0.9121804722345871; rels: [tv_series,directed_by]; projs: [count(distinct(movie_0.title))]; preds: [director_0.name = "Matt Damon"]; havings: []; superlative: []; blanks: 0
TOT: 0.9121804722345871; NL: 0.9100167166104893; NL+AG: 0.9663394570469733; NL+QF: 0.9121804722345871; rels: [tv_series,directed_by]; projs: [count(distinct(movie_0.title))]; preds: [writer_0.name = "Matt Damon"]; havings: []; superlative: []; blanks: 0
TOT: 0.8979007600118484; NL: 0.8979007600118484; NL+AG: 0.9663394570469733; NL+QF: 0.8979007600118484; rels: [directed_by]; projs: [count(distinct(movie_0.title))]; preds: [director_0.name = "Matt Damon"]; havings: []; superlative: []; blanks: 1
TOT: 0.8979007600118484; NL: 0.8979007600118484; NL+AG: 0.9663394570469733; NL+QF: 0.8979007600118484; rels: [directed_by]; projs: [count(distinct(movie_0.title))]; preds: [actor_0.name = "Matt Damon"]; havings: []; superlative: []; blanks: 1
TOT: 0.8979007600118484; NL: 0.8979007600118484; NL+AG: 0.9663394570469733; NL+QF: 0.8979007600118484; rels: [directed_by]; projs: [count(distinct(movie_0.title))]; preds: [producer_0.name = "Matt Damon"]; havings: []; superlative: []; blanks: 1
TOT: 0.8979007600118484; NL: 0.8979007600118484; NL+AG: 0.9663394570469733; NL+QF: 0.8979007600118484; rels: [directed_by]; projs: [count(distinct(movie_0.title))]; preds: [writer_0.name = "Matt Damon"]; havings: []; superlative: []; blanks: 1
TOT: 0.8656821285326051; NL: 0.8372758622495686; NL+AG: 0.9326789140939467; NL+QF: 0.8656821285326051; rels: [tv_series,director]; projs: [count(distinct(movie_0.title))]; preds: [director_0.name = "Matt Damon"]; havings: []; superlative: []; blanks: 0
TOT: 0.8626215029222025; NL: 0.8261283769089807; NL+AG: 0.9326789140939467; NL+QF: 0.8626215029222025; rels: [director]; projs: [count(distinct(movie_0.title))]; preds: [director_0.name = "Matt Damon"]; havings: []; superlative: []; blanks: 1
TOT: 0.8624276237213678; NL: 0.8217939593803067; NL+AG: 0.9326789140939467; NL+QF: 0.8624276237213678; rels: [made_by,tv_series]; projs: [count(distinct(movie_0.title))]; preds: [producer_0.name = "Matt Damon"]; havings: []; superlative: []; blanks: 0

===========
RESULTS
===========
TOT: 0.9143023953346272; TR: 0.919751708767763; QF: 0.06355371750560754; select count(distinct(movie_0.title)) from directed_by as directed_by_0, directed_by as directed_by_1, director as director_0, made_by as made_by_0, movie as movie_0, producer as producer_0, tv_series as tv_series_0 where producer_0.name = "Matt Damon" and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and directed_by_1.did = director_0.did and directed_by_1.msid = tv_series_0.sid and made_by_0.msid = tv_series_0.sid and made_by_0.pid = producer_0.pid
TOT: 0.9089332540327473; TR: 0.9143289387793889; QF: 0.0575635836084969; select count(distinct(movie_0.title)) from actor as actor_0, cast as cast_0, directed_by as directed_by_0, directed_by as directed_by_1, director as director_0, movie as movie_0, tv_series as tv_series_0 where actor_0.name = "Matt Damon" and actor_0.aid = cast_0.aid and cast_0.msid = tv_series_0.sid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and directed_by_1.did = director_0.did and directed_by_1.msid = tv_series_0.sid
TOT: 0.90680658711381; TR: 0.9121804722345871; QF: 0.06071318777458167; select count(distinct(movie_0.title)) from actor as actor_0, cast as cast_0, cast as cast_1, directed_by as directed_by_0, director as director_0, movie as movie_0, tv_series as tv_series_0 where director_0.name = "Matt Damon" and actor_0.aid = cast_0.aid and actor_0.aid = cast_1.aid and cast_0.msid = movie_0.mid and cast_1.msid = tv_series_0.sid and directed_by_0.did = director_0.did and directed_by_0.msid = tv_series_0.sid
TOT: 0.9068064382663502; TR: 0.9121804722345871; QF: 0.059224713176603216; select count(distinct(movie_0.title)) from directed_by as directed_by_0, directed_by as directed_by_1, director as director_0, movie as movie_0, tv_series as tv_series_0, writer as writer_0, written_by as written_by_0 where writer_0.name = "Matt Damon" and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and directed_by_1.did = director_0.did and directed_by_1.msid = tv_series_0.sid and tv_series_0.sid = written_by_0.msid and writer_0.wid = written_by_0.wid
TOT: 0.9068056164428415; TR: 0.9121804722345871; QF: 0.05100647808981142; select count(distinct(movie_0.title)) from directed_by as directed_by_0, director as director_0, keyword as keyword_0, movie as movie_0, tags as tags_0, tags as tags_1, tv_series as tv_series_0 where director_0.name = "Matt Damon" and directed_by_0.did = director_0.did and directed_by_0.msid = tv_series_0.sid and keyword_0.id = tags_0.kid and keyword_0.id = tags_1.kid and movie_0.mid = tags_0.msid and tags_1.msid = tv_series_0.sid
TOT: 0.9068056028761613; TR: 0.9121804722345871; QF: 0.05087081128747795; select count(distinct(movie_0.title)) from company as company_0, copyright as copyright_0, copyright as copyright_1, directed_by as directed_by_0, director as director_0, movie as movie_0, tv_series as tv_series_0 where director_0.name = "Matt Damon" and company_0.id = copyright_0.cid and company_0.id = copyright_1.cid and copyright_0.msid = movie_0.mid and copyright_1.msid = tv_series_0.sid and directed_by_0.did = director_0.did and directed_by_0.msid = tv_series_0.sid
TOT: 0.9068055593570701; TR: 0.9121804722345871; QF: 0.050435620376096564; select count(distinct(movie_0.title)) from classification as classification_0, classification as classification_1, directed_by as directed_by_0, director as director_0, genre as genre_0, movie as movie_0, tv_series as tv_series_0 where director_0.name = "Matt Damon" and classification_0.gid = genre_0.gid and classification_0.msid = movie_0.mid and classification_1.gid = genre_0.gid and classification_1.msid = tv_series_0.sid and directed_by_0.did = director_0.did and directed_by_0.msid = tv_series_0.sid
TOT: 0.9068054406186656; TR: 0.9121804722345871; QF: 0.04924823633156967; select count(distinct(movie_0.title)) from directed_by as directed_by_0, director as director_0, movie as movie_0, tv_series as tv_series_0, writer as writer_0, written_by as written_by_0, written_by as written_by_1 where director_0.name = "Matt Damon" and directed_by_0.did = director_0.did and directed_by_0.msid = tv_series_0.sid and movie_0.mid = written_by_0.msid and tv_series_0.sid = written_by_1.msid and writer_0.wid = written_by_0.wid and writer_0.wid = written_by_1.wid
TOT: 0.9068054381124; TR: 0.9121804722345871; QF: 0.04922317367492807; select count(distinct(movie_0.title)) from directed_by as directed_by_0, director as director_0, made_by as made_by_0, made_by as made_by_1, movie as movie_0, producer as producer_0, tv_series as tv_series_0 where director_0.name = "Matt Damon" and directed_by_0.did = director_0.did and directed_by_0.msid = tv_series_0.sid and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid and made_by_1.msid = tv_series_0.sid and made_by_1.pid = producer_0.pid
TOT: 0.894661199598153; TR: 0.8979007600118484; QF: 0.23679521445844473; select count(distinct(movie_0.title)) from directed_by as directed_by_0, director as director_0, movie as movie_0 where director_0.name = "Matt Damon" and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid


04:57  INFO: ================
04:57  INFO: QUERY 51: What are the series in which "Scott Foley" is an actor?
04:57  INFO: ================
04:59  INFO: ================
04:59  INFO: QUERY 110: find the number of actors from Iran who played in "Jim Jarmusch" movies
04:59  INFO: ================
1048. ROOT: ROOT; NA; ; (0) 
1049. find: CMT; NA; ; (0) 
1050. number of: FT; count; ; (0) 
1052. actors: NT; NA; ; (0) actor.name(1.0):| actor(1.0):| movie.title(0.95):Actors; Actors; Actors; | tv_series.title(0.95):Actors; Actor; The Actor Factor; | cast.role(0.95):Actors; Actors; Actors; | keyword.keyword(0.95):actors; actor-director; no-actors; | company.name(0.79):For Actors by Actors; Actors Loft; Actors Pool; | 
1054. Iran: VTTEXT; NA; ; (0) movie.title(1.0):Iran; Iran!; Ei Iran; | director.nationality(1.0):Iran; Iran; Iran; | actor.nationality(1.0):Iran; Iran; Iran; | actor.name(1.0):Iran; Iran Torabi; Iran Daniel; | producer.nationality(1.0):Iran; Iran; Iran; | writer.nationality(1.0):Iran; Iran; Iran; | keyword.keyword(0.77):tehran-iran; shiraz-iran; iraq-iran-war; | 
1056. played: NT; NA; ; (0) tv_series.num_of_seasons(0.67):| cast.role(0.66):| directed_by(0.64):| actor.name(0.63):| actor(0.63):| cast(0.63):| movie.title_aka(0.63):| 
1058. movies: NT; NA; ; (0) movie.title(1.0):| movie(1.0):| cast.role(0.95):Movie; Movie F; Movie AD; | company.name(0.95):Movies; Movie; Movie Movie; | tv_series.title(0.84):Movies, Movies, Movi; Movie Mob; Moon Movies; | keyword.keyword(0.83):movie-in-movie; movies-about-movies; b-movie; | actor.name(0.76):| 
1060. Jim Jarmusch: VTTEXT; NA; ; (0) director.name(1.0):Jim Jarmusch; Jim Jarmusch; Tom Jarmusch; | actor.name(1.0):Jim Jarmusch; Jim Jarmusch; Tom Jarmusch; | producer.name(1.0):Jim Jarmusch; Jim Jarmusch; Tom Jarmusch; | writer.name(1.0):Jim Jarmusch; Jim Jarmusch; James R. Jarmusch; | movie.title(0.81):Behind Jim Jarmusch; Behind Jim Jarmusch; Focus on Jim Jarmusc; | cast.role(0.72):Jim Jarmusch's broth; Jim Jarmusch's broth; Jim Jamush; | tv_series.title(0.52):Earthworm Jim; Earthworm Jim; Jim Jam & Sunny; | 
find, VB
the, DT
number, NN
of, IN
actors, NNS
from, IN
Iran, NNP
who, WP
played, VBN
in, IN
Jim Jarmusch, NNP
movies, NNS
root(ROOT-0, find-1)
det(number-3, the-2)
dobj(find-1, number-3)
case(actors-5, of-4)
nmod(number-3, actors-5)
case(Iran-7, from-6)
nmod(actors-5, Iran-7)
nsubj(played-9, who-8)
acl:relcl(number-3, played-9)
case(movies-12, in-10)
compound(movies-12, Jim Jarmusch-11)
nmod(played-9, movies-12)

PARSE TREE:(1048) ROOT ROOT
    (1049) find CMT
        (1050) number of FT
            (1052) actors NT
                (1054) Iran VTTEXT
            (1056) played NT
                (1058) movies NT
                    (1060) Jim Jarmusch VTTEXT


===========
TRANSLATIONS
===========
TOT: 0.8979007600118484; NL: 0.8979007600118484; NL+AG: 0.9683187862428375; NL+QF: 0.8979007600118484; rels: []; projs: [count(distinct(actor_0.name))]; preds: [movie_0.title = "Iran",movie_0.title = "Behind Jim Jarmusch"]; havings: []; superlative: []; blanks: 1
TOT: 0.8979007600118484; NL: 0.8979007600118484; NL+AG: 0.9683187862428375; NL+QF: 0.8979007600118484; rels: []; projs: [count(distinct(actor_0.name))]; preds: [director_0.nationality = "Iran",movie_0.title = "Behind Jim Jarmusch"]; havings: []; superlative: []; blanks: 1
TOT: 0.8979007600118484; NL: 0.8979007600118484; NL+AG: 0.9683187862428375; NL+QF: 0.8979007600118484; rels: []; projs: [count(distinct(actor_0.name))]; preds: [actor_0.nationality = "Iran",movie_0.title = "Behind Jim Jarmusch"]; havings: []; superlative: []; blanks: 1
TOT: 0.8979007600118484; NL: 0.8979007600118484; NL+AG: 0.9683187862428375; NL+QF: 0.8979007600118484; rels: []; projs: [count(distinct(actor_0.name))]; preds: [actor_0.name = "Iran",movie_0.title = "Behind Jim Jarmusch"]; havings: []; superlative: []; blanks: 1
TOT: 0.8979007600118484; NL: 0.8979007600118484; NL+AG: 0.9683187862428375; NL+QF: 0.8979007600118484; rels: []; projs: [count(distinct(actor_0.name))]; preds: [producer_0.nationality = "Iran",movie_0.title = "Behind Jim Jarmusch"]; havings: []; superlative: []; blanks: 1
TOT: 0.8979007600118484; NL: 0.8979007600118484; NL+AG: 0.9683187862428375; NL+QF: 0.8979007600118484; rels: []; projs: [count(distinct(actor_0.name))]; preds: [writer_0.nationality = "Iran",movie_0.title = "Behind Jim Jarmusch"]; havings: []; superlative: []; blanks: 1
TOT: 0.8871591603836416; NL: 0.8689647470148877; NL+AG: 0.9508731367277395; NL+QF: 0.8871591603836416; rels: []; projs: [count(distinct(movie_0.title))]; preds: [actor_0.name = "Iran",director_0.name = "Jim Jarmusch"]; havings: []; superlative: []; blanks: 2
TOT: 0.884650256050894; NL: 0.8689647470148877; NL+AG: 0.9508731367277395; NL+QF: 0.884650256050894; rels: []; projs: [count(distinct(movie_0.title))]; preds: [actor_0.name = "Iran",actor_0.name = "Jim Jarmusch"]; havings: []; superlative: []; blanks: 2
TOT: 0.8795453275278585; NL: 0.8689647470148877; NL+AG: 0.9508731367277395; NL+QF: 0.8795453275278585; rels: []; projs: [count(distinct(movie_0.title))]; preds: [movie_0.title = "Iran",director_0.name = "Jim Jarmusch"]; havings: []; superlative: []; blanks: 2
TOT: 0.8795453275278585; NL: 0.8689647470148877; NL+AG: 0.9508731367277395; NL+QF: 0.8795453275278585; rels: []; projs: [count(distinct(movie_0.title))]; preds: [director_0.nationality = "Iran",director_0.name = "Jim Jarmusch"]; havings: []; superlative: []; blanks: 2
TOT: 0.8795453275278585; NL: 0.8689647470148877; NL+AG: 0.9508731367277395; NL+QF: 0.8795453275278585; rels: []; projs: [count(distinct(movie_0.title))]; preds: [actor_0.nationality = "Iran",director_0.name = "Jim Jarmusch"]; havings: []; superlative: []; blanks: 2
TOT: 0.8795453275278585; NL: 0.8689647470148877; NL+AG: 0.9508731367277395; NL+QF: 0.8795453275278585; rels: []; projs: [count(distinct(movie_0.title))]; preds: [producer_0.nationality = "Iran",director_0.name = "Jim Jarmusch"]; havings: []; superlative: []; blanks: 2
TOT: 0.8795453275278585; NL: 0.8689647470148877; NL+AG: 0.9508731367277395; NL+QF: 0.8795453275278585; rels: []; projs: [count(distinct(movie_0.title))]; preds: [writer_0.nationality = "Iran",director_0.name = "Jim Jarmusch"]; havings: []; superlative: []; blanks: 2

===========
RESULTS
===========
TOT: 0.8946616587502645; TR: 0.8979007600118484; QF: 0.24138673557278212; select count(distinct(actor_0.name)) from actor as actor_0, cast as cast_0, movie as movie_0 where actor_0.nationality = "Iran" and movie_0.title = "Behind Jim Jarmusch" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid
TOT: 0.8933635124656804; TR: 0.8979007600118484; QF: 0.14345458500936806; select count(distinct(actor_0.name)) from actor as actor_0, cast as cast_0, directed_by as directed_by_0, director as director_0, movie as movie_0 where director_0.nationality = "Iran" and movie_0.title = "Behind Jim Jarmusch" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid
TOT: 0.8933618086092466; TR: 0.8979007600118484; QF: 0.12641602067183463; select count(distinct(actor_0.name)) from actor as actor_0, cast as cast_0, movie as movie_0, writer as writer_0, written_by as written_by_0 where movie_0.title = "Behind Jim Jarmusch" and writer_0.nationality = "Iran" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and movie_0.mid = written_by_0.msid and writer_0.wid = written_by_0.wid
TOT: 0.8933618086092466; TR: 0.8979007600118484; QF: 0.12641602067183463; select count(distinct(actor_0.name)) from actor as actor_0, actor as actor_1, cast as cast_0, cast as cast_1, movie as movie_0 where actor_1.name = "Iran" and movie_0.title = "Behind Jim Jarmusch" and actor_0.aid = cast_0.aid and actor_1.aid = cast_1.aid and cast_0.msid = movie_0.mid and cast_1.msid = movie_0.mid
TOT: 0.8933618033460887; TR: 0.8979007600118484; QF: 0.12636338909288727; select count(distinct(actor_0.name)) from actor as actor_0, cast as cast_0, made_by as made_by_0, movie as movie_0, producer as producer_0 where movie_0.title = "Behind Jim Jarmusch" and producer_0.nationality = "Iran" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid
TOT: 0.8933569746469825; TR: 0.8979007600118484; QF: 0.0780763980303252; select count(distinct(actor_0.name)) from actor as actor_0, cast as cast_0, cast as cast_1, movie as movie_0, movie as movie_1 where movie_0.title = "Iran" and movie_1.title = "Behind Jim Jarmusch" and actor_0.aid = cast_0.aid and actor_0.aid = cast_1.aid and cast_0.msid = movie_0.mid and cast_1.msid = movie_1.mid
TOT: 0.8926729715477757; TR: 0.8979007600118484; QF: 0.09370853254414353; select count(distinct(actor_0.name)) from actor as actor_0, cast as cast_0, directed_by as directed_by_0, directed_by as directed_by_1, director as director_0, movie as movie_0, movie as movie_1 where movie_0.title = "Behind Jim Jarmusch" and movie_1.title = "Iran" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and directed_by_1.did = director_0.did and directed_by_1.msid = movie_1.mid
TOT: 0.8926729715477757; TR: 0.8979007600118484; QF: 0.09370853254414353; select count(distinct(actor_0.name)) from actor as actor_0, cast as cast_0, directed_by as directed_by_0, directed_by as directed_by_1, director as director_0, movie as movie_0, movie as movie_1 where movie_0.title = "Iran" and movie_1.title = "Behind Jim Jarmusch" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and directed_by_1.did = director_0.did and directed_by_1.msid = movie_1.mid
TOT: 0.8926701324710508; TR: 0.8979007600118484; QF: 0.06531776529582585; select count(distinct(actor_0.name)) from actor as actor_0, cast as cast_0, cast as cast_1, made_by as made_by_0, movie as movie_0, producer as producer_0, tv_series as tv_series_0 where movie_0.title = "Behind Jim Jarmusch" and producer_0.nationality = "Iran" and actor_0.aid = cast_0.aid and actor_0.aid = cast_1.aid and cast_0.msid = movie_0.mid and cast_1.msid = tv_series_0.sid and made_by_0.msid = tv_series_0.sid and made_by_0.pid = producer_0.pid
TOT: 0.8926697963292053; TR: 0.8979007600118484; QF: 0.061956346840067775; select count(distinct(actor_0.name)) from actor as actor_0, cast as cast_0, keyword as keyword_0, movie as movie_0, movie as movie_1, tags as tags_0, tags as tags_1 where movie_0.title = "Behind Jim Jarmusch" and movie_1.title = "Iran" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and keyword_0.id = tags_0.kid and keyword_0.id = tags_1.kid and movie_0.mid = tags_0.msid and movie_1.mid = tags_1.msid


05:03  INFO: ================
05:03  INFO: QUERY 37: Find all movies produced by "Walt Disney" after 2010
05:03  INFO: ================
1062. ROOT: ROOT; NA; ; (0) 
1063. Find: CMT; NA; ; (0) 
1064. movies: NT; NA; all; (0) movie.title(1.0):| movie(1.0):| cast.role(0.95):Movie; Movie F; Movie AD; | company.name(0.95):Movies; Movie; Movie Movie; | tv_series.title(0.84):Movies, Movies, Movi; Movie Mob; Moon Movies; | keyword.keyword(0.83):movie-in-movie; movies-about-movies; b-movie; | actor.name(0.76):| 
1066. produced: NT; NA; ; (0) made_by(0.74):| directed_by(0.69):| producer.name(0.68):| producer(0.68):| cast.role(0.63):| cast(0.63):| written_by(0.63):| 
1067. Walt Disney: VTTEXT; NA; ; (0) director.name(1.0):Walt Disney; Walt Disney; Walter Elias Disney; | actor.name(1.0):Walt Disney; Walt Disney; Walter Disney; | producer.name(1.0):Walt Disney; Walt Disney; Walter Disney; | company.name(1.0):Walt Disney; Walt Disney; Walt Disney; | writer.name(1.0):Walt Disney; Walt Disney; The Dutch Walt Disne; | cast.role(0.85):Adult Walt Disney; Adult Walt Disney; Adult Walt Disney; | movie.title(0.81):Walt Disney Is Dead; Walt Disney Is Dead; Praça Walt Disney; | 
1069. 2010: VTNUM; NA; ; (0) movie.release_year(1.0):2012; 2014; 2015; | tv_series.release_year(1.0):2014; 2014; 2013; | actor.birth_year(1.0):2011; 2013; 2013; | 
1070. after: OT; >; ; (0) 
Find, VB
all, DT
movies, NNS
produced, VBN
by, IN
Walt Disney, NNP
after, IN
2010, CD
root(ROOT-0, Find-1)
det(movies-3, all-2)
dobj(Find-1, movies-3)
acl(movies-3, produced-4)
case(Walt Disney-6, by-5)
nmod(produced-4, Walt Disney-6)
case(2010-8, after-7)
nmod(produced-4, 2010-8)

PARSE TREE:(1062) ROOT ROOT
    (1063) Find CMT
        (1064) movies NT
            (1066) produced NT
                (1067) Walt Disney VTTEXT
                (1069) 2010 VTNUM
                    (1070) after OT


===========
TRANSLATIONS
===========
TOT: 0.8979007600118484; NL: 0.8979007600118484; NL+AG: 0.9686596782136829; NL+QF: 0.8979007600118484; rels: []; projs: [movie_0.title]; preds: [director_0.name = "Walt Disney",movie_0.release_year > 2010]; havings: []; superlative: []; blanks: 1
TOT: 0.8979007600118484; NL: 0.8979007600118484; NL+AG: 0.9686596782136829; NL+QF: 0.8979007600118484; rels: []; projs: [movie_0.title]; preds: [director_0.name = "Walt Disney",tv_series_0.release_year > 2010]; havings: []; superlative: []; blanks: 1
TOT: 0.8979007600118484; NL: 0.8979007600118484; NL+AG: 0.9686596782136829; NL+QF: 0.8979007600118484; rels: []; projs: [movie_0.title]; preds: [director_0.name = "Walt Disney",actor_0.birth_year > 2010]; havings: []; superlative: []; blanks: 1
TOT: 0.8979007600118484; NL: 0.8979007600118484; NL+AG: 0.9686596782136829; NL+QF: 0.8979007600118484; rels: []; projs: [movie_0.title]; preds: [actor_0.name = "Walt Disney",movie_0.release_year > 2010]; havings: []; superlative: []; blanks: 1
TOT: 0.8979007600118484; NL: 0.8979007600118484; NL+AG: 0.9686596782136829; NL+QF: 0.8979007600118484; rels: []; projs: [movie_0.title]; preds: [actor_0.name = "Walt Disney",tv_series_0.release_year > 2010]; havings: []; superlative: []; blanks: 1
TOT: 0.8979007600118484; NL: 0.8979007600118484; NL+AG: 0.9686596782136829; NL+QF: 0.8979007600118484; rels: []; projs: [movie_0.title]; preds: [actor_0.name = "Walt Disney",actor_0.birth_year > 2010]; havings: []; superlative: []; blanks: 1
TOT: 0.8979007600118484; NL: 0.8979007600118484; NL+AG: 0.9686596782136829; NL+QF: 0.8979007600118484; rels: []; projs: [movie_0.title]; preds: [producer_0.name = "Walt Disney",movie_0.release_year > 2010]; havings: []; superlative: []; blanks: 1
TOT: 0.8979007600118484; NL: 0.8979007600118484; NL+AG: 0.9686596782136829; NL+QF: 0.8979007600118484; rels: []; projs: [movie_0.title]; preds: [producer_0.name = "Walt Disney",tv_series_0.release_year > 2010]; havings: []; superlative: []; blanks: 1
TOT: 0.8979007600118484; NL: 0.8979007600118484; NL+AG: 0.9686596782136829; NL+QF: 0.8979007600118484; rels: []; projs: [movie_0.title]; preds: [producer_0.name = "Walt Disney",actor_0.birth_year > 2010]; havings: []; superlative: []; blanks: 1
TOT: 0.8979007600118484; NL: 0.8979007600118484; NL+AG: 0.9686596782136829; NL+QF: 0.8979007600118484; rels: []; projs: [movie_0.title]; preds: [company_0.name = "Walt Disney",movie_0.release_year > 2010]; havings: []; superlative: []; blanks: 1
TOT: 0.8979007600118484; NL: 0.8979007600118484; NL+AG: 0.9686596782136829; NL+QF: 0.8979007600118484; rels: []; projs: [movie_0.title]; preds: [company_0.name = "Walt Disney",tv_series_0.release_year > 2010]; havings: []; superlative: []; blanks: 1
TOT: 0.8979007600118484; NL: 0.8979007600118484; NL+AG: 0.9686596782136829; NL+QF: 0.8979007600118484; rels: []; projs: [movie_0.title]; preds: [company_0.name = "Walt Disney",actor_0.birth_year > 2010]; havings: []; superlative: []; blanks: 1
TOT: 0.8979007600118484; NL: 0.8979007600118484; NL+AG: 0.9686596782136829; NL+QF: 0.8979007600118484; rels: []; projs: [movie_0.title]; preds: [writer_0.name = "Walt Disney",movie_0.release_year > 2010]; havings: []; superlative: []; blanks: 1
TOT: 0.8979007600118484; NL: 0.8979007600118484; NL+AG: 0.9686596782136829; NL+QF: 0.8979007600118484; rels: []; projs: [movie_0.title]; preds: [writer_0.name = "Walt Disney",tv_series_0.release_year > 2010]; havings: []; superlative: []; blanks: 1
TOT: 0.8979007600118484; NL: 0.8979007600118484; NL+AG: 0.9686596782136829; NL+QF: 0.8979007600118484; rels: []; projs: [movie_0.title]; preds: [writer_0.name = "Walt Disney",actor_0.birth_year > 2010]; havings: []; superlative: []; blanks: 1

===========
RESULTS
===========
TOT: 0.8946616587502645; TR: 0.8979007600118484; QF: 0.24138673557278212; select movie_0.title from actor as actor_0, cast as cast_0, movie as movie_0 where actor_0.name = "Walt Disney" and movie_0.release_year > 2010 and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid
TOT: 0.8946616587502645; TR: 0.8979007600118484; QF: 0.24138673557278212; select movie_0.title from actor as actor_0, cast as cast_0, movie as movie_0 where actor_0.birth_year > 2010 and actor_0.name = "Walt Disney" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid
TOT: 0.894661199598153; TR: 0.8979007600118484; QF: 0.23679521445844473; select movie_0.title from directed_by as directed_by_0, director as director_0, movie as movie_0 where director_0.name = "Walt Disney" and movie_0.release_year > 2010 and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid
TOT: 0.8946566558791763; TR: 0.8979007600118484; QF: 0.19135802469135801; select movie_0.title from company as company_0, copyright as copyright_0, movie as movie_0 where company_0.name = "Walt Disney" and movie_0.release_year > 2010 and company_0.id = copyright_0.cid and copyright_0.msid = movie_0.mid
TOT: 0.8946555200767071; TR: 0.8979007600118484; QF: 0.18000000000000002; select movie_0.title from movie as movie_0, writer as writer_0, written_by as written_by_0 where movie_0.release_year > 2010 and writer_0.name = "Walt Disney" and movie_0.mid = written_by_0.msid and writer_0.wid = written_by_0.wid
TOT: 0.8946555025328475; TR: 0.8979007600118484; QF: 0.17982456140350878; select movie_0.title from made_by as made_by_0, movie as movie_0, producer as producer_0 where movie_0.release_year > 2010 and producer_0.name = "Walt Disney" and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid
TOT: 0.8933635124656804; TR: 0.8979007600118484; QF: 0.14345458500936806; select movie_0.title from actor as actor_0, cast as cast_0, directed_by as directed_by_0, director as director_0, movie as movie_0 where actor_0.birth_year > 2010 and director_0.name = "Walt Disney" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid
TOT: 0.8933621493499874; TR: 0.8979007600118484; QF: 0.12982342807924202; select movie_0.title from actor as actor_0, cast as cast_0, company as company_0, copyright as copyright_0, movie as movie_0 where actor_0.birth_year > 2010 and company_0.name = "Walt Disney" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and company_0.id = copyright_0.cid and copyright_0.msid = movie_0.mid
TOT: 0.8933618086092466; TR: 0.8979007600118484; QF: 0.12641602067183463; select movie_0.title from actor as actor_0, cast as cast_0, movie as movie_0, writer as writer_0, written_by as written_by_0 where actor_0.birth_year > 2010 and writer_0.name = "Walt Disney" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and movie_0.mid = written_by_0.msid and writer_0.wid = written_by_0.wid
TOT: 0.8933618033460887; TR: 0.8979007600118484; QF: 0.12636338909288727; select movie_0.title from actor as actor_0, cast as cast_0, made_by as made_by_0, movie as movie_0, producer as producer_0 where actor_0.birth_year > 2010 and producer_0.name = "Walt Disney" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid


05:05  INFO: ================
05:05  INFO: QUERY 81: Which movie had the character "Daffy Duck"
05:05  INFO: ================
1072. ROOT: ROOT; NA; ; (0) 
1074. movie: NT; NA; ; (0) movie.title(1.0):| movie(1.0):| cast.role(0.95):Movie; Movie F; Movie AD; | company.name(0.95):Movie; Movies; Movie Movie; | keyword.keyword(0.83):movie-in-movie; b-movie; z-movie; | actor.name(0.76):| actor(0.76):| 
1075. Which: CMT; NA; ; (0) 
1076. Daffy Duck: VTTEXT; NA; ; (0) cast.role(1.0):Daffy Duck; Daffy Duck; Daffy Duck; | movie.title(0.8):Daffy Duck Hunt; Daffy Duck Hunt; The Daffy Duckaroo; | director.name(0.78):Deafy Duck; Duck; Tim Duck; | producer.name(0.78):Deafy Duck; Duck; Duck; | writer.name(0.78):Deafy Duck; Duck; Tuck the Duck; | tv_series.title(0.75):The Daffy Duck Show; The Daffy Duck Show; Mighty Ducks; | actor.name(0.59):Joey Duck; Baby Duck; Daffy O'Brick; | 
1078. character: VTTEXT; NA; ; (0) movie.title(0.95):Character; Character; Character; | tv_series.title(0.95):Character; Character; The Characters; | cast.role(0.95):Character; Character; Character; | company.name(0.85):Character 7; Character Matters; Character Tank; | keyword.keyword(0.81):character-arc; literary-character; character-actor; | actor.name(0.78):| actor(0.78):| 
Which, WDT
movie, NN
had, VBD
the, DT
character, NN
Daffy Duck, NN
det(movie-2, Which-1)
nsubj(had-3, movie-2)
root(ROOT-0, had-3)
det(Daffy Duck-6, the-4)
compound(Daffy Duck-6, character-5)
dobj(had-3, Daffy Duck-6)

PARSE TREE:(1072) ROOT ROOT
    (1075) Which CMT
        (1074) movie NT
            (1076) Daffy Duck VTTEXT
                (1078) character VTTEXT


===========
TRANSLATIONS
===========
TOT: 0.8790472375566201; NL: 0.84126862115985; NL+AG: 0.939080334171806; NL+QF: 0.8790472375566201; rels: []; projs: [actor_0.name]; preds: [cast_0.role = "Daffy Duck"]; havings: []; superlative: []; blanks: 1
TOT: 0.8662391053409028; NL: 0.8662391053409028; NL+AG: 0.9626264316569841; NL+QF: 0.8662391053409028; rels: []; projs: [movie_0.title]; preds: [cast_0.role = "Daffy Duck"]; havings: []; superlative: []; blanks: 1
TOT: 0.8405472538994161; NL: 0.6677153471084913; NL+AG: 0.939080334171806; NL+QF: 0.8405472538994161; rels: [actor]; projs: [actor_0.name]; preds: [cast_0.role = "Daffy Duck"]; havings: []; superlative: []; blanks: 0
TOT: 0.8285026065603092; NL: 0.7802453753539424; NL+AG: 0.9788797416050014; NL+QF: 0.8285026065603092; rels: []; projs: [movie_0.title]; preds: [cast_0.role = "Daffy Duck",movie_0.title = "Character"]; havings: []; superlative: []; blanks: 0
TOT: 0.8272216780551298; NL: 0.6573229797118848; NL+AG: 0.9392573685336284; NL+QF: 0.8272216780551298; rels: [movie]; projs: [movie_0.title]; preds: [movie_0.title = "Daffy Duck Hunt"]; havings: []; superlative: []; blanks: 0
TOT: 0.8268266250158401; NL: 0.7912922821972069; NL+AG: 0.939080334171806; NL+QF: 0.8268266250158401; rels: []; projs: [actor_0.name]; preds: [cast_0.role = "Daffy Duck"]; havings: []; superlative: []; blanks: 1
TOT: 0.8243301190555186; NL: 0.7815446045368232; NL+AG: 0.9157112710484503; NL+QF: 0.8243301190555186; rels: []; projs: [actor_0.name]; preds: [movie_0.title = "Daffy Duck Hunt"]; havings: []; superlative: []; blanks: 1
TOT: 0.8205588163723728; NL: 0.6978163242785356; NL+AG: 0.9626264316569841; NL+QF: 0.8205588163723728; rels: [cast]; projs: [movie_0.title]; preds: [cast_0.role = "Daffy Duck"]; havings: []; superlative: []; blanks: 0
TOT: 0.8185649530142607; NL: 0.7075542375813906; NL+AG: 0.9626264316569841; NL+QF: 0.8185649530142607; rels: [movie]; projs: [movie_0.title]; preds: [cast_0.role = "Daffy Duck"]; havings: []; superlative: []; blanks: 0
TOT: 0.8173683888832901; NL: 0.7722196592760566; NL+AG: 0.9182152483953397; NL+QF: 0.8173683888832901; rels: [movie]; projs: [movie_0.title]; preds: []; havings: []; superlative: []; blanks: 1
TOT: 0.8167529712876178; NL: 0.7287397777448834; NL+AG: 0.8808749412351239; NL+QF: 0.8167529712876178; rels: [actor]; projs: [actor_0.name]; preds: []; havings: []; superlative: []; blanks: 1

===========
RESULTS
===========
TOT: 0.877298982779917; TR: 0.8790472375566201; QF: 0.4186046511627907; select actor_0.name from actor as actor_0, cast as cast_0 where cast_0.role = "Daffy Duck" and actor_0.aid = cast_0.aid
TOT: 0.864607626976796; TR: 0.8662391053409028; QF: 0.3055555555555556; select movie_0.title from cast as cast_0, movie as movie_0 where cast_0.role = "Daffy Duck" and cast_0.msid = movie_0.mid
TOT: 0.8616236405671167; TR: 0.8662391053409028; QF: 0.052682040307709614; select movie_0.title from cast as cast_0, directed_by as directed_by_0, directed_by as directed_by_1, director as director_0, movie as movie_0, tv_series as tv_series_0 where cast_0.role = "Daffy Duck" and cast_0.msid = tv_series_0.sid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and directed_by_1.did = director_0.did and directed_by_1.msid = tv_series_0.sid
TOT: 0.8616225285944515; TR: 0.8662391053409028; QF: 0.041562313655336906; select movie_0.title from cast as cast_0, keyword as keyword_0, movie as movie_0, tags as tags_0, tags as tags_1, tv_series as tv_series_0 where cast_0.role = "Daffy Duck" and cast_0.msid = tv_series_0.sid and keyword_0.id = tags_0.kid and keyword_0.id = tags_1.kid and movie_0.mid = tags_0.msid and tags_1.msid = tv_series_0.sid
TOT: 0.8616225096010992; TR: 0.8662391053409028; QF: 0.04137238013207006; select movie_0.title from cast as cast_0, company as company_0, copyright as copyright_0, copyright as copyright_1, movie as movie_0, tv_series as tv_series_0 where cast_0.role = "Daffy Duck" and cast_0.msid = tv_series_0.sid and company_0.id = copyright_0.cid and company_0.id = copyright_1.cid and copyright_0.msid = movie_0.mid and copyright_1.msid = tv_series_0.sid
TOT: 0.8616224486743715; TR: 0.8662391053409028; QF: 0.04076311285613611; select movie_0.title from cast as cast_0, classification as classification_0, classification as classification_1, genre as genre_0, movie as movie_0, tv_series as tv_series_0 where cast_0.role = "Daffy Duck" and cast_0.msid = tv_series_0.sid and classification_0.gid = genre_0.gid and classification_0.msid = movie_0.mid and classification_1.gid = genre_0.gid and classification_1.msid = tv_series_0.sid
TOT: 0.8616222824406053; TR: 0.8662391053409028; QF: 0.03910077519379845; select movie_0.title from cast as cast_0, movie as movie_0, tv_series as tv_series_0, writer as writer_0, written_by as written_by_0, written_by as written_by_1 where cast_0.role = "Daffy Duck" and cast_0.msid = tv_series_0.sid and movie_0.mid = written_by_0.msid and tv_series_0.sid = written_by_1.msid and writer_0.wid = written_by_0.wid and writer_0.wid = written_by_1.wid
TOT: 0.8616222789318334; TR: 0.8662391053409028; QF: 0.039065687474500205; select movie_0.title from cast as cast_0, made_by as made_by_0, made_by as made_by_1, movie as movie_0, producer as producer_0, tv_series as tv_series_0 where cast_0.role = "Daffy Duck" and cast_0.msid = tv_series_0.sid and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid and made_by_1.msid = tv_series_0.sid and made_by_1.pid = producer_0.pid
TOT: 0.8246528027299587; TR: 0.8285026065603092; QF: 0.0780763980303252; select movie_0.title from actor as actor_0, cast as cast_0, cast as cast_1, movie as movie_0, movie as movie_1 where cast_0.role = "Daffy Duck" and movie_1.title = "Character" and actor_0.aid = cast_0.aid and actor_0.aid = cast_1.aid and cast_0.msid = movie_0.mid and cast_1.msid = movie_1.mid
TOT: 0.82426956706718; TR: 0.8285026065603092; QF: 0.10328496881761486; select movie_1.title from cast as cast_0, directed_by as directed_by_0, directed_by as directed_by_1, director as director_0, movie as movie_0, movie as movie_1 where cast_0.role = "Daffy Duck" and movie_0.title = "Character" and cast_0.msid = movie_0.mid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and directed_by_1.did = director_0.did and directed_by_1.msid = movie_1.mid


05:07  INFO: ================
05:07  INFO: QUERY 118: Find all movies featuring both "Matt Damon" and "Ben Affleck"
05:07  INFO: ================
1080. ROOT: ROOT; NA; ; (0) 
1081. Find: CMT; NA; ; (0) 
1082. featuring: NT; NA; ; (0) tv_series.title(0.69):| tv_series(0.69):| movie.release_year(0.64):| tv_series.release_year(0.64):| made_by(0.64):| movie.title_aka(0.62):| tv_series.title_aka(0.62):| 
1083. movies: NT; NA; all; (0) movie.title(1.0):| movie(1.0):| cast.role(0.95):Movie; Movie F; Movie AD; | company.name(0.95):Movies; Movie; Movie Movie; | tv_series.title(0.84):Movies, Movies, Movi; Movie Mob; Moon Movies; | keyword.keyword(0.83):movie-in-movie; movies-about-movies; b-movie; | actor.name(0.76):| 
1085. Matt Damon: VTTEXT; NA; ; (0) director.name(1.0):Matt Damon; Matt Diamond; Matt Diamond; | actor.name(1.0):Matt Damon; Matt Damon; Matt Diamond; | producer.name(1.0):Matt Damon; Matt Damon; Matt Diamond; | writer.name(1.0):Matt Damon; Matt Damon; Matt Diamond; | movie.title(0.76):I'm Not Matt Damon; I'm Not Matt Damon; Meeting Matt Damon; | cast.role(0.74):Matt Stamon; Matt Damien; Matt Demond; | tv_series.title(0.67):Damon; The Damon Elliott Sh; Matt Houston; | 
1088. Ben Affleck: VTTEXT; NA; ; (0) director.name(1.0):Ben Affleck; Ben Affleck; Affleck; | actor.name(1.0):Ben Affleck; Ben Affleck; Affleck; | producer.name(1.0):Ben Affleck; Ben Affleck; Affleck; | writer.name(1.0):Ben Affleck; Ben Affleck; Affleck; | cast.role(0.9):Ben Afflect; Ben Afflect; Ben Affleck Fan; | movie.title(0.59):Untitled Ben Affleck; Untitled Ben Affleck; Argo: Ben Affleck's ; | company.name(0.56):The Affleck/Middleto; Ben Fechler; Ben Fechler; | 
Find, VB
all, DT
movies, NNS
featuring, VBG
both, CC
Matt Damon, NNP
and, CC
Ben Affleck, NNP
root(ROOT-0, Find-1)
det(movies-3, all-2)
nsubj(featuring-4, movies-3)
dep(Find-1, featuring-4)
cc:preconj(Matt Damon-6, both-5)
dobj(featuring-4, Matt Damon-6)
cc(Matt Damon-6, and-7)
conj(Matt Damon-6, Ben Affleck-8)

PARSE TREE:(1080) ROOT ROOT
    (1081) Find CMT
        (1083) movies NT
            (1082) featuring NT
                (1085) Matt Damon VTTEXT
                (1088) Ben Affleck VTTEXT


===========
TRANSLATIONS
===========
TOT: 0.8979007600118484; NL: 0.8979007600118484; NL+AG: 0.9684566970029178; NL+QF: 0.8979007600118484; rels: []; projs: [movie_0.title]; preds: [director_0.name = "Matt Damon",director_0.name = "Ben Affleck"]; havings: []; superlative: []; blanks: 1
TOT: 0.8979007600118484; NL: 0.8979007600118484; NL+AG: 0.9684566970029178; NL+QF: 0.8979007600118484; rels: []; projs: [movie_0.title]; preds: [director_0.name = "Matt Damon",actor_0.name = "Ben Affleck"]; havings: []; superlative: []; blanks: 1
TOT: 0.8979007600118484; NL: 0.8979007600118484; NL+AG: 0.9684566970029178; NL+QF: 0.8979007600118484; rels: []; projs: [movie_0.title]; preds: [director_0.name = "Matt Damon",producer_0.name = "Ben Affleck"]; havings: []; superlative: []; blanks: 1
TOT: 0.8979007600118484; NL: 0.8979007600118484; NL+AG: 0.9684566970029178; NL+QF: 0.8979007600118484; rels: []; projs: [movie_0.title]; preds: [director_0.name = "Matt Damon",writer_0.name = "Ben Affleck"]; havings: []; superlative: []; blanks: 1
TOT: 0.8979007600118484; NL: 0.8979007600118484; NL+AG: 0.9684566970029178; NL+QF: 0.8979007600118484; rels: []; projs: [movie_0.title]; preds: [actor_0.name = "Matt Damon",director_0.name = "Ben Affleck"]; havings: []; superlative: []; blanks: 1
TOT: 0.8979007600118484; NL: 0.8979007600118484; NL+AG: 0.9684566970029178; NL+QF: 0.8979007600118484; rels: []; projs: [movie_0.title]; preds: [actor_0.name = "Matt Damon",actor_0.name = "Ben Affleck"]; havings: []; superlative: []; blanks: 1
TOT: 0.8979007600118484; NL: 0.8979007600118484; NL+AG: 0.9684566970029178; NL+QF: 0.8979007600118484; rels: []; projs: [movie_0.title]; preds: [actor_0.name = "Matt Damon",producer_0.name = "Ben Affleck"]; havings: []; superlative: []; blanks: 1
TOT: 0.8979007600118484; NL: 0.8979007600118484; NL+AG: 0.9684566970029178; NL+QF: 0.8979007600118484; rels: []; projs: [movie_0.title]; preds: [actor_0.name = "Matt Damon",writer_0.name = "Ben Affleck"]; havings: []; superlative: []; blanks: 1
TOT: 0.8979007600118484; NL: 0.8979007600118484; NL+AG: 0.9684566970029178; NL+QF: 0.8979007600118484; rels: []; projs: [movie_0.title]; preds: [producer_0.name = "Matt Damon",director_0.name = "Ben Affleck"]; havings: []; superlative: []; blanks: 1
TOT: 0.8979007600118484; NL: 0.8979007600118484; NL+AG: 0.9684566970029178; NL+QF: 0.8979007600118484; rels: []; projs: [movie_0.title]; preds: [producer_0.name = "Matt Damon",actor_0.name = "Ben Affleck"]; havings: []; superlative: []; blanks: 1
TOT: 0.8979007600118484; NL: 0.8979007600118484; NL+AG: 0.9684566970029178; NL+QF: 0.8979007600118484; rels: []; projs: [movie_0.title]; preds: [producer_0.name = "Matt Damon",producer_0.name = "Ben Affleck"]; havings: []; superlative: []; blanks: 1
TOT: 0.8979007600118484; NL: 0.8979007600118484; NL+AG: 0.9684566970029178; NL+QF: 0.8979007600118484; rels: []; projs: [movie_0.title]; preds: [producer_0.name = "Matt Damon",writer_0.name = "Ben Affleck"]; havings: []; superlative: []; blanks: 1
TOT: 0.8979007600118484; NL: 0.8979007600118484; NL+AG: 0.9684566970029178; NL+QF: 0.8979007600118484; rels: []; projs: [movie_0.title]; preds: [writer_0.name = "Matt Damon",director_0.name = "Ben Affleck"]; havings: []; superlative: []; blanks: 1
TOT: 0.8979007600118484; NL: 0.8979007600118484; NL+AG: 0.9684566970029178; NL+QF: 0.8979007600118484; rels: []; projs: [movie_0.title]; preds: [writer_0.name = "Matt Damon",actor_0.name = "Ben Affleck"]; havings: []; superlative: []; blanks: 1
TOT: 0.8979007600118484; NL: 0.8979007600118484; NL+AG: 0.9684566970029178; NL+QF: 0.8979007600118484; rels: []; projs: [movie_0.title]; preds: [writer_0.name = "Matt Damon",producer_0.name = "Ben Affleck"]; havings: []; superlative: []; blanks: 1
TOT: 0.8979007600118484; NL: 0.8979007600118484; NL+AG: 0.9684566970029178; NL+QF: 0.8979007600118484; rels: []; projs: [movie_0.title]; preds: [writer_0.name = "Matt Damon",writer_0.name = "Ben Affleck"]; havings: []; superlative: []; blanks: 1

===========
RESULTS
===========
TOT: 0.8933635124656804; TR: 0.8979007600118484; QF: 0.14345458500936806; select movie_0.title from actor as actor_0, cast as cast_0, directed_by as directed_by_0, director as director_0, movie as movie_0 where actor_0.name = "Ben Affleck" and director_0.name = "Matt Damon" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid
TOT: 0.8933635124656804; TR: 0.8979007600118484; QF: 0.14345458500936806; select movie_0.title from actor as actor_0, cast as cast_0, directed_by as directed_by_0, director as director_0, movie as movie_0 where actor_0.name = "Matt Damon" and director_0.name = "Ben Affleck" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid
TOT: 0.8933618086092466; TR: 0.8979007600118484; QF: 0.12641602067183463; select movie_0.title from actor as actor_0, cast as cast_0, movie as movie_0, writer as writer_0, written_by as written_by_0 where actor_0.name = "Matt Damon" and writer_0.name = "Ben Affleck" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and movie_0.mid = written_by_0.msid and writer_0.wid = written_by_0.wid
TOT: 0.8933618086092466; TR: 0.8979007600118484; QF: 0.12641602067183463; select movie_0.title from actor as actor_0, cast as cast_0, movie as movie_0, writer as writer_0, written_by as written_by_0 where actor_0.name = "Ben Affleck" and writer_0.name = "Matt Damon" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and movie_0.mid = written_by_0.msid and writer_0.wid = written_by_0.wid
TOT: 0.8933618086092466; TR: 0.8979007600118484; QF: 0.12641602067183463; select movie_0.title from actor as actor_0, actor as actor_1, cast as cast_0, cast as cast_1, movie as movie_0 where actor_0.name = "Matt Damon" and actor_1.name = "Ben Affleck" and actor_0.aid = cast_0.aid and actor_1.aid = cast_1.aid and cast_0.msid = movie_0.mid and cast_1.msid = movie_0.mid
TOT: 0.8933618033460887; TR: 0.8979007600118484; QF: 0.12636338909288727; select movie_0.title from actor as actor_0, cast as cast_0, made_by as made_by_0, movie as movie_0, producer as producer_0 where actor_0.name = "Matt Damon" and producer_0.name = "Ben Affleck" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid
TOT: 0.8933618033460887; TR: 0.8979007600118484; QF: 0.12636338909288727; select movie_0.title from actor as actor_0, cast as cast_0, made_by as made_by_0, movie as movie_0, producer as producer_0 where actor_0.name = "Ben Affleck" and producer_0.name = "Matt Damon" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid
TOT: 0.8933616708636132; TR: 0.8979007600118484; QF: 0.1250385643375334; select movie_0.title from directed_by as directed_by_0, director as director_0, movie as movie_0, writer as writer_0, written_by as written_by_0 where director_0.name = "Matt Damon" and writer_0.name = "Ben Affleck" and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and movie_0.mid = written_by_0.msid and writer_0.wid = written_by_0.wid
TOT: 0.8933616708636132; TR: 0.8979007600118484; QF: 0.1250385643375334; select movie_0.title from directed_by as directed_by_0, director as director_0, movie as movie_0, writer as writer_0, written_by as written_by_0 where director_0.name = "Ben Affleck" and writer_0.name = "Matt Damon" and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and movie_0.mid = written_by_0.msid and writer_0.wid = written_by_0.wid
TOT: 0.8933616656004554; TR: 0.8979007600118484; QF: 0.12498593275858605; select movie_0.title from directed_by as directed_by_0, director as director_0, made_by as made_by_0, movie as movie_0, producer as producer_0 where director_0.name = "Matt Damon" and producer_0.name = "Ben Affleck" and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid


05:09  INFO: ================
05:09  INFO: QUERY 73: Find the actors who played in the movie "Camp X-Ray"
05:09  INFO: ================
05:11  INFO: ================
05:11  INFO: QUERY 54: Find all movies produced by Netflix
05:11  INFO: ================
1101. ROOT: ROOT; NA; ; (0) 
1102. Find: CMT; NA; ; (0) 
1103. movies: NT; NA; all; (0) movie.title(1.0):| movie(1.0):| cast.role(0.95):Movie; Movie F; Movie AD; | company.name(0.95):Movies; Movie; Movie Movie; | tv_series.title(0.84):Movies, Movies, Movi; Movie Mob; Moon Movies; | keyword.keyword(0.83):movie-in-movie; movies-about-movies; b-movie; | actor.name(0.76):| 
1105. produced: NT; NA; ; (0) made_by(0.74):| directed_by(0.69):| producer.name(0.68):| producer(0.68):| cast.role(0.63):| cast(0.63):| written_by(0.63):| 
1106. Netflix: VTTEXT; NA; ; (0) company.name(1.0):Netflix; Netflix; Netflix; | keyword.keyword(1.0):netflix; netflix-series; netflix-production; | tv_series.title(0.78):| tv_series(0.78):| cast.role(0.77):Netflix guy; | movie.title(0.74):| movie(0.74):| 
Find, VB
all, DT
movies, NNS
produced, VBN
by, IN
Netflix, NNP
root(ROOT-0, Find-1)
det(movies-3, all-2)
dobj(Find-1, movies-3)
acl(movies-3, produced-4)
case(Netflix-6, by-5)
nmod(produced-4, Netflix-6)

PARSE TREE:(1101) ROOT ROOT
    (1102) Find CMT
        (1103) movies NT
            (1105) produced NT
                (1106) Netflix VTTEXT


===========
TRANSLATIONS
===========
TOT: 0.9097088792229623; NL: 0.9055419360254962; NL+AG: 0.9626264316569841; NL+QF: 0.9097088792229623; rels: [made_by]; projs: [movie_0.title]; preds: [company_0.name = "Netflix"]; havings: []; superlative: []; blanks: 0
TOT: 0.9097088792229623; NL: 0.9055419360254962; NL+AG: 0.9626264316569841; NL+QF: 0.9097088792229623; rels: [made_by]; projs: [movie_0.title]; preds: [keyword_0.keyword = "netflix"]; havings: []; superlative: []; blanks: 0
TOT: 0.9077995444082381; NL: 0.8852322584043497; NL+AG: 0.9626264316569841; NL+QF: 0.9077995444082381; rels: [directed_by]; projs: [movie_0.title]; preds: [company_0.name = "Netflix"]; havings: []; superlative: []; blanks: 0
TOT: 0.9032287827813593; NL: 0.8852322584043497; NL+AG: 0.9626264316569841; NL+QF: 0.9032287827813593; rels: [directed_by]; projs: [movie_0.title]; preds: [keyword_0.keyword = "netflix"]; havings: []; superlative: []; blanks: 0
TOT: 0.884627969098385; NL: 0.8002271178074418; NL+AG: 0.9182152483953397; NL+QF: 0.884627969098385; rels: [movie,directed_by]; projs: [movie_0.title]; preds: []; havings: []; superlative: []; blanks: 0
TOT: 0.8839082369618275; NL: 0.8783733725393061; NL+AG: 0.9626264316569841; NL+QF: 0.8839082369618275; rels: [producer]; projs: [movie_0.title]; preds: [company_0.name = "Netflix"]; havings: []; superlative: []; blanks: 0
TOT: 0.8839082369618275; NL: 0.8783733725393061; NL+AG: 0.9626264316569841; NL+QF: 0.8839082369618275; rels: [producer]; projs: [movie_0.title]; preds: [keyword_0.keyword = "netflix"]; havings: []; superlative: []; blanks: 0
TOT: 0.8662391053409028; NL: 0.8662391053409028; NL+AG: 0.9626264316569841; NL+QF: 0.8662391053409028; rels: []; projs: [movie_0.title]; preds: [company_0.name = "Netflix"]; havings: []; superlative: []; blanks: 1
TOT: 0.8662391053409028; NL: 0.8662391053409028; NL+AG: 0.9626264316569841; NL+QF: 0.8662391053409028; rels: []; projs: [movie_0.title]; preds: [keyword_0.keyword = "netflix"]; havings: []; superlative: []; blanks: 1
TOT: 0.8546611142088849; NL: 0.8352193753498772; NL+AG: 0.9182152483953397; NL+QF: 0.8546611142088849; rels: [made_by,tv_series]; projs: [movie_0.title]; preds: []; havings: []; superlative: []; blanks: 0
TOT: 0.8511062822142672; NL: 0.8185865422772004; NL+AG: 0.9182152483953397; NL+QF: 0.8511062822142672; rels: [made_by,movie]; projs: [movie_0.title]; preds: []; havings: []; superlative: []; blanks: 0

===========
RESULTS
===========
TOT: 0.9043597263758617; TR: 0.9097088792229623; QF: 0.06087662337662337; select movie_0.title from company as company_0, copyright as copyright_0, made_by as made_by_0, made_by as made_by_1, movie as movie_0, producer as producer_0, tv_series as tv_series_0 where company_0.name = "Netflix" and company_0.id = copyright_0.cid and copyright_0.msid = tv_series_0.sid and made_by_0.msid = tv_series_0.sid and made_by_0.pid = producer_0.pid and made_by_1.msid = movie_0.mid and made_by_1.pid = producer_0.pid
TOT: 0.9043585885882107; TR: 0.9097088792229623; QF: 0.049498746867167924; select movie_0.title from keyword as keyword_0, made_by as made_by_0, made_by as made_by_1, movie as movie_0, producer as producer_0, tags as tags_0, tv_series as tv_series_0 where keyword_0.keyword = "netflix" and keyword_0.id = tags_0.kid and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid and made_by_1.msid = tv_series_0.sid and made_by_1.pid = producer_0.pid and tags_0.msid = tv_series_0.sid
TOT: 0.9024692484132634; TR: 0.9077995444082381; QF: 0.05851166316348966; select movie_0.title from company as company_0, copyright as copyright_0, directed_by as directed_by_0, directed_by as directed_by_1, director as director_0, movie as movie_0, tv_series as tv_series_0 where company_0.name = "Netflix" and company_0.id = copyright_0.cid and copyright_0.msid = tv_series_0.sid and directed_by_0.did = director_0.did and directed_by_0.msid = tv_series_0.sid and directed_by_1.did = director_0.did and directed_by_1.msid = movie_0.mid
TOT: 0.8979442657076547; TR: 0.9032287827813593; QF: 0.059224713176603216; select movie_0.title from directed_by as directed_by_0, directed_by as directed_by_1, director as director_0, keyword as keyword_0, movie as movie_0, tags as tags_0, tv_series as tv_series_0 where keyword_0.keyword = "netflix" and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and directed_by_1.did = director_0.did and directed_by_1.msid = tv_series_0.sid and keyword_0.id = tags_0.kid and tags_0.msid = tv_series_0.sid
TOT: 0.8633117127217018; TR: 0.8662391053409028; QF: 0.1923076923076923; select movie_0.title from keyword as keyword_0, movie as movie_0, tags as tags_0 where keyword_0.keyword = "netflix" and keyword_0.id = tags_0.kid and movie_0.mid = tags_0.msid
TOT: 0.8633116177549401; TR: 0.8662391053409028; QF: 0.19135802469135801; select movie_0.title from company as company_0, copyright as copyright_0, movie as movie_0 where company_0.name = "Netflix" and company_0.id = copyright_0.cid and copyright_0.msid = movie_0.mid
TOT: 0.8613246614463818; TR: 0.8662391053409028; QF: 0.06098876096682153; select movie_0.title from actor as actor_0, cast as cast_0, cast as cast_1, keyword as keyword_0, movie as movie_0, tags as tags_0, tv_series as tv_series_0 where keyword_0.keyword = "netflix" and actor_0.aid = cast_0.aid and actor_0.aid = cast_1.aid and cast_0.msid = movie_0.mid and cast_1.msid = tv_series_0.sid and keyword_0.id = tags_0.kid and tags_0.msid = tv_series_0.sid
TOT: 0.8613245112372024; TR: 0.8662391053409028; QF: 0.05948666917403205; select movie_0.title from actor as actor_0, cast as cast_0, cast as cast_1, company as company_0, copyright as copyright_0, movie as movie_0, tv_series as tv_series_0 where company_0.name = "Netflix" and actor_0.aid = cast_0.aid and actor_0.aid = cast_1.aid and cast_0.msid = tv_series_0.sid and cast_1.msid = movie_0.mid and company_0.id = copyright_0.cid and copyright_0.msid = tv_series_0.sid
TOT: 0.8613242173321898; TR: 0.8662391053409028; QF: 0.05654761904761905; select movie_0.title from company as company_0, copyright as copyright_0, movie as movie_0, tv_series as tv_series_0, writer as writer_0, written_by as written_by_0, written_by as written_by_1 where company_0.name = "Netflix" and company_0.id = copyright_0.cid and copyright_0.msid = tv_series_0.sid and movie_0.mid = written_by_1.msid and tv_series_0.sid = written_by_0.msid and writer_0.wid = written_by_0.wid and writer_0.wid = written_by_1.wid
TOT: 0.8613242173321898; TR: 0.8662391053409028; QF: 0.05654761904761905; select movie_0.title from company as company_0, copyright as copyright_0, keyword as keyword_0, movie as movie_0, tags as tags_0, tags as tags_1, tv_series as tv_series_0 where company_0.name = "Netflix" and company_0.id = copyright_0.cid and copyright_0.msid = tv_series_0.sid and keyword_0.id = tags_0.kid and keyword_0.id = tags_1.kid and movie_0.mid = tags_1.msid and tags_0.msid = tv_series_0.sid


05:12  INFO: ================
05:12  INFO: QUERY 60: Find all actors from Austin born after 1980
05:12  INFO: ================
05:15  INFO: ================
05:15  INFO: QUERY 71: Who is the writer of "The Truman Show"
05:15  INFO: ================
05:16  INFO: ================
05:16  INFO: QUERY 56: Who is the director of the series "House of Cards" produced by Netflix?
05:16  INFO: ================
05:27  INFO: ================
05:27  INFO: QUERY 41: Find all movies directed by "Woody Allen" and featuring "Scarlett Johansson"
05:27  INFO: ================
05:30  INFO: ================
05:30  INFO: QUERY 18: Find all movies directed by "Steven Spielberg" after 2006
05:30  INFO: ================
05:33  INFO: ================
05:33  INFO: QUERY 5: Find all actors who are from Canada
05:33  INFO: ================
05:34  INFO: ================
05:34  INFO: QUERY 67: What year was the movie "The Imitation Game" produced
05:34  INFO: ================
1170. ROOT: ROOT; NA; ; (0) 
1171. produced: NT; NA; ; (0) made_by(0.74):| directed_by(0.69):| producer.name(0.68):| producer(0.68):| cast.role(0.63):| cast(0.63):| written_by(0.63):| 
1172. year: NT; NA; ; (0) movie.release_year(1.0):| director.birth_year(1.0):| tv_series.release_year(1.0):| actor.birth_year(1.0):| producer.birth_year(1.0):| writer.birth_year(1.0):| movie.title(0.95):Year; Years; Years; | 
1175. The Imitation Game: VTTEXT; NA; ; (0) movie.title(1.0):The Imitation Game; The Imitation Game; The Imitation Game; | cast.role(0.84):The Imitation Game &; The Imitation Game &; The Imitation Game &; | tv_series.title(0.74):The Temptation Game; The Game; The Game; | keyword.keyword(0.69):imitation; imitation; camel-imitation; | company.name(0.67):Game Station, the; Game Station; Imagination Games; | actor.name(0.64):The Game; The Game; Simon Game; | producer.name(0.64):The Game; The Game; Simon Game; | 
1177. movie: NT; NA; ; (0) movie.title(1.0):| movie(1.0):| cast.role(0.95):Movie; Movie F; Movie AD; | company.name(0.95):Movie; Movies; Movie Movie; | keyword.keyword(0.83):movie-in-movie; b-movie; z-movie; | actor.name(0.76):| actor(0.76):| 
What, WDT
year, NN
was, VBD
the, DT
movie, NN
The Imitation Game, NNP
produced, VBN
det(year-2, What-1)
nmod:tmod(produced-7, year-2)
auxpass(produced-7, was-3)
det(The Imitation Game-6, the-4)
compound(The Imitation Game-6, movie-5)
nsubjpass(produced-7, The Imitation Game-6)
root(ROOT-0, produced-7)

PARSE TREE:(1170) ROOT ROOT
    (1171) produced NT
        (1172) year NT
        (1175) The Imitation Game VTTEXT
            (1177) movie NT


===========
TRANSLATIONS
===========
TOT: 0.735618578791678; NL: 0.7026093091136248; NL+AG: 0.9271073801545473; NL+QF: 0.735618578791678; rels: [directed_by]; projs: [movie_0.release_year]; preds: [movie_0.title = "The Imitation Game"]; havings: []; superlative: []; blanks: 0
TOT: 0.7296922955689433; NL: 0.6453241615249634; NL+AG: 0.9045098871809079; NL+QF: 0.7296922955689433; rels: [movie,directed_by]; projs: [movie_0.release_year]; preds: [movie_0.title = "The Imitation Game"]; havings: []; superlative: []; blanks: 0
TOT: 0.7280696423218294; NL: 0.6890706686060093; NL+AG: 0.9092080943898837; NL+QF: 0.7280696423218294; rels: [directed_by]; projs: [movie_0.title]; preds: [movie_0.title = "The Imitation Game"]; havings: []; superlative: []; blanks: 1
TOT: 0.7274949639993702; NL: 0.7187291109240963; NL+AG: 0.9271073801545473; NL+QF: 0.7274949639993702; rels: [made_by]; projs: [movie_0.release_year]; preds: [movie_0.title = "The Imitation Game"]; havings: []; superlative: []; blanks: 0
TOT: 0.7227329367682401; NL: 0.6890706686060093; NL+AG: 0.9025816416202771; NL+QF: 0.7227329367682401; rels: [movie,directed_by]; projs: [movie_0.release_year]; preds: []; havings: []; superlative: []; blanks: 1
TOT: 0.7187291109240963; NL: 0.7187291109240963; NL+AG: 0.9271073801545473; NL+QF: 0.7187291109240963; rels: [made_by]; projs: [director_0.birth_year]; preds: [movie_0.title = "The Imitation Game"]; havings: []; superlative: []; blanks: 0
TOT: 0.7187291109240963; NL: 0.7187291109240963; NL+AG: 0.9271073801545473; NL+QF: 0.7187291109240963; rels: [made_by]; projs: [tv_series_0.release_year]; preds: [movie_0.title = "The Imitation Game"]; havings: []; superlative: []; blanks: 0
TOT: 0.7187291109240963; NL: 0.7187291109240963; NL+AG: 0.9271073801545473; NL+QF: 0.7187291109240963; rels: [made_by]; projs: [actor_0.birth_year]; preds: [movie_0.title = "The Imitation Game"]; havings: []; superlative: []; blanks: 0
TOT: 0.7187291109240963; NL: 0.7187291109240963; NL+AG: 0.9271073801545473; NL+QF: 0.7187291109240963; rels: [made_by]; projs: [producer_0.birth_year]; preds: [movie_0.title = "The Imitation Game"]; havings: []; superlative: []; blanks: 0
TOT: 0.7187291109240963; NL: 0.7187291109240963; NL+AG: 0.9271073801545473; NL+QF: 0.7187291109240963; rels: [made_by]; projs: [writer_0.birth_year]; preds: [movie_0.title = "The Imitation Game"]; havings: []; superlative: []; blanks: 0
TOT: 0.71505032408569; NL: 0.7026093091136248; NL+AG: 0.9271073801545473; NL+QF: 0.71505032408569; rels: [directed_by]; projs: [director_0.birth_year]; preds: [movie_0.title = "The Imitation Game"]; havings: []; superlative: []; blanks: 0
TOT: 0.71505032408569; NL: 0.7026093091136248; NL+AG: 0.9271073801545473; NL+QF: 0.71505032408569; rels: [directed_by]; projs: [tv_series_0.release_year]; preds: [movie_0.title = "The Imitation Game"]; havings: []; superlative: []; blanks: 0
TOT: 0.71505032408569; NL: 0.7026093091136248; NL+AG: 0.9271073801545473; NL+QF: 0.71505032408569; rels: [directed_by]; projs: [actor_0.birth_year]; preds: [movie_0.title = "The Imitation Game"]; havings: []; superlative: []; blanks: 0
TOT: 0.71505032408569; NL: 0.7026093091136248; NL+AG: 0.9271073801545473; NL+QF: 0.71505032408569; rels: [directed_by]; projs: [producer_0.birth_year]; preds: [movie_0.title = "The Imitation Game"]; havings: []; superlative: []; blanks: 0
TOT: 0.71505032408569; NL: 0.7026093091136248; NL+AG: 0.9271073801545473; NL+QF: 0.71505032408569; rels: [directed_by]; projs: [writer_0.birth_year]; preds: [movie_0.title = "The Imitation Game"]; havings: []; superlative: []; blanks: 0

===========
RESULTS
===========
TOT: 0.7252287976838278; TR: 0.7280696423218294; QF: 0.12437189767086673; select movie_0.title from directed_by as directed_by_0, directed_by as directed_by_1, director as director_0, movie as movie_0, movie as movie_1 where movie_1.title = "The Imitation Game" and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and directed_by_1.did = director_0.did and directed_by_1.msid = movie_1.mid
TOT: 0.717275569935973; TR: 0.7187291109240963; QF: 0.17982456140350878; select producer_0.birth_year from made_by as made_by_0, movie as movie_0, producer as producer_0 where movie_0.title = "The Imitation Game" and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid
TOT: 0.715974629147147; TR: 0.7187291109240963; QF: 0.05394736842105263; select tv_series_0.release_year from made_by as made_by_0, made_by as made_by_1, movie as movie_0, producer as producer_0, tv_series as tv_series_0 where movie_0.title = "The Imitation Game" and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid and made_by_1.msid = tv_series_0.sid and made_by_1.pid = producer_0.pid
TOT: 0.7152901998741762; TR: 0.7187291109240963; QF: 0.06531776529582585; select producer_0.birth_year from actor as actor_0, cast as cast_0, cast as cast_1, made_by as made_by_0, movie as movie_0, producer as producer_0, tv_series as tv_series_0 where movie_0.title = "The Imitation Game" and actor_0.aid = cast_0.aid and actor_0.aid = cast_1.aid and cast_0.msid = movie_0.mid and cast_1.msid = tv_series_0.sid and made_by_0.msid = tv_series_0.sid and made_by_0.pid = producer_0.pid
TOT: 0.7152900234693972; TR: 0.7187291109240963; QF: 0.06355371750560754; select producer_0.birth_year from directed_by as directed_by_0, directed_by as directed_by_1, director as director_0, made_by as made_by_0, movie as movie_0, producer as producer_0, tv_series as tv_series_0 where movie_0.title = "The Imitation Game" and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and directed_by_1.did = director_0.did and directed_by_1.msid = tv_series_0.sid and made_by_0.msid = tv_series_0.sid and made_by_0.pid = producer_0.pid
TOT: 0.7152892292032078; TR: 0.7187291109240963; QF: 0.055611055611055615; select producer_0.birth_year from keyword as keyword_0, made_by as made_by_0, movie as movie_0, producer as producer_0, tags as tags_0, tags as tags_1, tv_series as tv_series_0 where movie_0.title = "The Imitation Game" and keyword_0.id = tags_0.kid and keyword_0.id = tags_1.kid and made_by_0.msid = tv_series_0.sid and made_by_0.pid = producer_0.pid and movie_0.mid = tags_0.msid and tags_1.msid = tv_series_0.sid
TOT: 0.7152892156365276; TR: 0.7187291109240963; QF: 0.055475388808722145; select producer_0.birth_year from company as company_0, copyright as copyright_0, copyright as copyright_1, made_by as made_by_0, movie as movie_0, producer as producer_0, tv_series as tv_series_0 where movie_0.title = "The Imitation Game" and company_0.id = copyright_0.cid and company_0.id = copyright_1.cid and copyright_0.msid = movie_0.mid and copyright_1.msid = tv_series_0.sid and made_by_0.msid = tv_series_0.sid and made_by_0.pid = producer_0.pid
TOT: 0.7152891721174364; TR: 0.7187291109240963; QF: 0.05504019789734075; select producer_0.birth_year from classification as classification_0, classification as classification_1, genre as genre_0, made_by as made_by_0, movie as movie_0, producer as producer_0, tv_series as tv_series_0 where movie_0.title = "The Imitation Game" and classification_0.gid = genre_0.gid and classification_0.msid = movie_0.mid and classification_1.gid = genre_0.gid and classification_1.msid = tv_series_0.sid and made_by_0.msid = tv_series_0.sid and made_by_0.pid = producer_0.pid
TOT: 0.7152890533790319; TR: 0.7187291109240963; QF: 0.053852813852813854; select producer_0.birth_year from made_by as made_by_0, movie as movie_0, producer as producer_0, tv_series as tv_series_0, writer as writer_0, written_by as written_by_0, written_by as written_by_1 where movie_0.title = "The Imitation Game" and made_by_0.msid = tv_series_0.sid and made_by_0.pid = producer_0.pid and movie_0.mid = written_by_0.msid and tv_series_0.sid = written_by_1.msid and writer_0.wid = written_by_0.wid and writer_0.wid = written_by_1.wid
TOT: 0.7152886179723333; TR: 0.7187291109240963; QF: 0.049498746867167924; select writer_0.birth_year from made_by as made_by_0, made_by as made_by_1, movie as movie_0, producer as producer_0, tv_series as tv_series_0, writer as writer_0, written_by as written_by_0 where movie_0.title = "The Imitation Game" and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid and made_by_1.msid = tv_series_0.sid and made_by_1.pid = producer_0.pid and tv_series_0.sid = written_by_0.msid and writer_0.wid = written_by_0.wid


05:36  INFO: ================
05:36  INFO: QUERY 106: How many movies did Netflix produce?
05:36  INFO: ================
1179. ROOT: ROOT; NA; ; (0) 
1180. produce: NT; NA; ; (0) made_by(0.74):| directed_by(0.69):| producer.name(0.68):| producer(0.68):| cast.role(0.63):| cast(0.63):| written_by(0.63):| 
1181. movies: NT; NA; ; (0) movie.title(1.0):| movie(1.0):| cast.role(0.95):Movie; Movie F; Movie AD; | company.name(0.95):Movies; Movie; Movie Movie; | tv_series.title(0.84):Movies, Movies, Movi; Movie Mob; Moon Movies; | keyword.keyword(0.83):movie-in-movie; movies-about-movies; b-movie; | actor.name(0.76):| 
1183. How many: CMT; count; ; (0) 
1185. Netflix: VTTEXT; NA; ; (0) company.name(1.0):Netflix; Netflix; Netflix; | keyword.keyword(1.0):netflix; netflix-series; netflix-production; | tv_series.title(0.78):| tv_series(0.78):| cast.role(0.77):Netflix guy; | movie.title(0.74):| movie(0.74):| 
How, WRB
many, JJ
movies, NNS
did, VBD
Netflix, NNP
produce, VB
advmod(many-2, How-1)
amod(movies-3, many-2)
dobj(produce-6, movies-3)
aux(produce-6, did-4)
nsubj(produce-6, Netflix-5)
root(ROOT-0, produce-6)

PARSE TREE:(1179) ROOT ROOT
    (1183) How many CMT
        (1181) movies NT
            (1180) produce NT
                (1185) Netflix VTTEXT


===========
TRANSLATIONS
===========
TOT: 0.9128882742930282; NL: 0.8852322584043497; NL+AG: 0.962381256972397; NL+QF: 0.9128882742930282; rels: [directed_by]; projs: [count(distinct(movie_0.title))]; preds: [company_0.name = "Netflix"]; havings: []; superlative: []; blanks: 0
TOT: 0.9083687093645647; NL: 0.8852322584043497; NL+AG: 0.962381256972397; NL+QF: 0.9083687093645647; rels: [directed_by]; projs: [count(distinct(movie_0.title))]; preds: [keyword_0.keyword = "netflix"]; havings: []; superlative: []; blanks: 0
TOT: 0.9055419360254962; NL: 0.9055419360254962; NL+AG: 0.962381256972397; NL+QF: 0.9055419360254962; rels: [made_by]; projs: [count(distinct(movie_0.title))]; preds: [company_0.name = "Netflix"]; havings: []; superlative: []; blanks: 0
TOT: 0.9055419360254962; NL: 0.9055419360254962; NL+AG: 0.962381256972397; NL+QF: 0.9055419360254962; rels: [made_by]; projs: [count(distinct(movie_0.title))]; preds: [keyword_0.keyword = "netflix"]; havings: []; superlative: []; blanks: 0
TOT: 0.8844292701362244; NL: 0.8002271178074418; NL+AG: 0.9177248990261656; NL+QF: 0.8844292701362244; rels: [movie,directed_by]; projs: [count(distinct(movie_0.title))]; preds: []; havings: []; superlative: []; blanks: 0
TOT: 0.8783733725393061; NL: 0.8783733725393061; NL+AG: 0.962381256972397; NL+QF: 0.8783733725393061; rels: [producer]; projs: [count(distinct(movie_0.title))]; preds: [company_0.name = "Netflix"]; havings: []; superlative: []; blanks: 0
TOT: 0.8783733725393061; NL: 0.8783733725393061; NL+AG: 0.962381256972397; NL+QF: 0.8783733725393061; rels: [producer]; projs: [count(distinct(movie_0.title))]; preds: [keyword_0.keyword = "netflix"]; havings: []; superlative: []; blanks: 0
TOT: 0.8662391053409028; NL: 0.8662391053409028; NL+AG: 0.962381256972397; NL+QF: 0.8662391053409028; rels: []; projs: [count(distinct(movie_0.title))]; preds: [company_0.name = "Netflix"]; havings: []; superlative: []; blanks: 1
TOT: 0.8662391053409028; NL: 0.8662391053409028; NL+AG: 0.962381256972397; NL+QF: 0.8662391053409028; rels: []; projs: [count(distinct(movie_0.title))]; preds: [keyword_0.keyword = "netflix"]; havings: []; superlative: []; blanks: 1
TOT: 0.8508648798308472; NL: 0.8352193753498772; NL+AG: 0.9177248990261656; NL+QF: 0.8508648798308472; rels: [made_by,tv_series]; projs: [count(distinct(movie_0.title))]; preds: []; havings: []; superlative: []; blanks: 0
TOT: 0.8423552348322902; NL: 0.8185865422772004; NL+AG: 0.9177248990261656; NL+QF: 0.8423552348322902; rels: [made_by,movie]; projs: [count(distinct(movie_0.title))]; preds: []; havings: []; superlative: []; blanks: 0

===========
RESULTS
===========
TOT: 0.9075070909992056; TR: 0.9128882742930282; QF: 0.05851166316348966; select count(distinct(movie_0.title)) from company as company_0, copyright as copyright_0, directed_by as directed_by_0, directed_by as directed_by_1, director as director_0, movie as movie_0, tv_series as tv_series_0 where company_0.name = "Netflix" and company_0.id = copyright_0.cid and copyright_0.msid = tv_series_0.sid and directed_by_0.did = director_0.did and directed_by_0.msid = tv_series_0.sid and directed_by_1.did = director_0.did and directed_by_1.msid = movie_0.mid
TOT: 0.903032793025028; TR: 0.9083687093645647; QF: 0.059224713176603216; select count(distinct(movie_0.title)) from directed_by as directed_by_0, directed_by as directed_by_1, director as director_0, keyword as keyword_0, movie as movie_0, tags as tags_0, tv_series as tv_series_0 where keyword_0.keyword = "netflix" and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and directed_by_1.did = director_0.did and directed_by_1.msid = tv_series_0.sid and keyword_0.id = tags_0.kid and tags_0.msid = tv_series_0.sid
TOT: 0.9002344526103702; TR: 0.9055419360254962; QF: 0.06087662337662337; select count(distinct(movie_0.title)) from company as company_0, copyright as copyright_0, made_by as made_by_0, made_by as made_by_1, movie as movie_0, producer as producer_0, tv_series as tv_series_0 where company_0.name = "Netflix" and company_0.id = copyright_0.cid and copyright_0.msid = tv_series_0.sid and made_by_0.msid = tv_series_0.sid and made_by_0.pid = producer_0.pid and made_by_1.msid = movie_0.mid and made_by_1.pid = producer_0.pid
TOT: 0.9002333148227192; TR: 0.9055419360254962; QF: 0.049498746867167924; select count(distinct(movie_0.title)) from keyword as keyword_0, made_by as made_by_0, made_by as made_by_1, movie as movie_0, producer as producer_0, tags as tags_0, tv_series as tv_series_0 where keyword_0.keyword = "netflix" and keyword_0.id = tags_0.kid and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid and made_by_1.msid = tv_series_0.sid and made_by_1.pid = producer_0.pid and tags_0.msid = tv_series_0.sid
TOT: 0.8633117127217018; TR: 0.8662391053409028; QF: 0.1923076923076923; select count(distinct(movie_0.title)) from keyword as keyword_0, movie as movie_0, tags as tags_0 where keyword_0.keyword = "netflix" and keyword_0.id = tags_0.kid and movie_0.mid = tags_0.msid
TOT: 0.8633116177549401; TR: 0.8662391053409028; QF: 0.19135802469135801; select count(distinct(movie_0.title)) from company as company_0, copyright as copyright_0, movie as movie_0 where company_0.name = "Netflix" and company_0.id = copyright_0.cid and copyright_0.msid = movie_0.mid
TOT: 0.8613246614463818; TR: 0.8662391053409028; QF: 0.06098876096682153; select count(distinct(movie_0.title)) from actor as actor_0, cast as cast_0, cast as cast_1, keyword as keyword_0, movie as movie_0, tags as tags_0, tv_series as tv_series_0 where keyword_0.keyword = "netflix" and actor_0.aid = cast_0.aid and actor_0.aid = cast_1.aid and cast_0.msid = movie_0.mid and cast_1.msid = tv_series_0.sid and keyword_0.id = tags_0.kid and tags_0.msid = tv_series_0.sid
TOT: 0.8613245112372024; TR: 0.8662391053409028; QF: 0.05948666917403205; select count(distinct(movie_0.title)) from actor as actor_0, cast as cast_0, cast as cast_1, company as company_0, copyright as copyright_0, movie as movie_0, tv_series as tv_series_0 where company_0.name = "Netflix" and actor_0.aid = cast_0.aid and actor_0.aid = cast_1.aid and cast_0.msid = tv_series_0.sid and cast_1.msid = movie_0.mid and company_0.id = copyright_0.cid and copyright_0.msid = tv_series_0.sid
TOT: 0.8613242173321898; TR: 0.8662391053409028; QF: 0.05654761904761905; select count(distinct(movie_0.title)) from company as company_0, copyright as copyright_0, movie as movie_0, tv_series as tv_series_0, writer as writer_0, written_by as written_by_0, written_by as written_by_1 where company_0.name = "Netflix" and company_0.id = copyright_0.cid and copyright_0.msid = tv_series_0.sid and movie_0.mid = written_by_1.msid and tv_series_0.sid = written_by_0.msid and writer_0.wid = written_by_0.wid and writer_0.wid = written_by_1.wid
TOT: 0.8613242173321898; TR: 0.8662391053409028; QF: 0.05654761904761905; select count(distinct(movie_0.title)) from company as company_0, copyright as copyright_0, keyword as keyword_0, movie as movie_0, tags as tags_0, tags as tags_1, tv_series as tv_series_0 where company_0.name = "Netflix" and company_0.id = copyright_0.cid and copyright_0.msid = tv_series_0.sid and keyword_0.id = tags_0.kid and keyword_0.id = tags_1.kid and movie_0.mid = tags_1.msid and tags_0.msid = tv_series_0.sid


05:37  INFO: ================
05:37  INFO: QUERY 97: What is the number of movies in which "Tom Cruise" acted?
05:37  INFO: ================
05:38  INFO: ================
05:38  INFO: QUERY 89: How many movies did "Alfred Hitchcock" direct?
05:38  INFO: ================
05:39  INFO: ================
05:39  INFO: QUERY 6: Find all actors who were born in 1984
05:39  INFO: ================
05:40  INFO: ================
05:40  INFO: QUERY 31: Find all movies by directors born in "Los Angeles"
05:40  INFO: ================
05:41  INFO: ================
05:41  INFO: QUERY 126: Find all movies featuring "Jason Robards" and "Woody Strode"
05:41  INFO: ================
05:44  INFO: ================
05:44  INFO: QUERY 94: How many actors were born in "Los Angeles" after 2000?
05:44  INFO: ================
05:46  INFO: ================
05:46  INFO: QUERY 44: What are all the movies directed by "Quentin Tarantino" featuring "Christoph Waltz"?
05:46  INFO: ================
1247. ROOT: ROOT; NA; ; (0) 
1248. What: CMT; NA; ; (0) 
1250. movies: NT; NA; all; (0) movie.title(1.0):| movie(1.0):| cast.role(0.95):Movie; Movie F; Movie AD; | company.name(0.95):Movies; Movie; Movie Movie; | tv_series.title(0.84):Movies, Movies, Movi; Movie Mob; Moon Movies; | keyword.keyword(0.83):movie-in-movie; movies-about-movies; b-movie; | actor.name(0.76):| 
1253. directed: NT; NA; ; (0) directed_by(1.0):| director.name(0.72):| director(0.72):| written_by(0.68):| cast.role(0.67):| cast(0.67):| made_by(0.67):| 
1254. Christoph Waltz: VTTEXT; NA; ; (0) director.name(1.0):Christoph Waltz; Christoph Waltz; Christoph Walther; | actor.name(1.0):Christoph Waltz; Christoph Waltz; Christoph Walz; | producer.name(1.0):Christoph Waltz; Christoph Waltz; Christopher Waltz; | writer.name(1.0):Christoph Waltz; Christoph Waltz; Christoph Walz; | cast.role(0.76):Christoph Balthus; Christoph Balthus; Christoph Wenk; | movie.title(0.76):Christoph; Christoph; Christoph Columbus; | company.name(0.63):Christoph Schinko; Christoph Schinko; Christoph Kohler; | 
1256. Quentin Tarantino: VTTEXT; NA; ; (0) director.name(1.0):Quentin Tarantino; Quentin Tarantino; Quentin Tarrantino; | actor.name(1.0):Quentin Tarantino; Quentin Tarantino; Quentin Tarrantino; | producer.name(1.0):Quentin Tarantino; Quentin Tarantino; Quentin Tarrantino; | writer.name(1.0):Quentin Tarantino; Quentin Tarantino; Quentin Tarrantino; | cast.role(0.85):Quentin Tarrantino '; Quentin Tarrantino '; Quentin Tarrantino '; | movie.title(0.84):21 Years: Quentin Ta; 21 Years: Quentin Ta; Quentin Tarantino's ; | writer.birth_city(0.74):San Quentin; San Quentin; Saint-Quentin; | 
1257. featuring: VTTEXT; NA; ; (0) cast.role(1.0):Featuring; Featuring; Featuring; | tv_series.title(0.66):| tv_series(0.66):| movie.title_aka(0.64):| tv_series.title_aka(0.64):| actor.name(0.63):Coolio featuring L.V; San Jose featuring R; San Jose featuring R; | writer.name(0.63):Coolio featuring L.V; Gangstagrass featuri; San Jose featuring R; | 
What, WP
are, VBP
all, PDT
the, DT
movies, NNS
directed, VBN
by, IN
Quentin Tarantino, NNP
featuring, NNP
Christoph Waltz, NNP
root(ROOT-0, What-1)
cop(What-1, are-2)
det:predet(movies-5, all-3)
det(movies-5, the-4)
nsubj(What-1, movies-5)
acl(movies-5, directed-6)
case(Christoph Waltz-10, by-7)
compound(Christoph Waltz-10, Quentin Tarantino-8)
compound(Christoph Waltz-10, featuring-9)
nmod(directed-6, Christoph Waltz-10)

PARSE TREE:(1247) ROOT ROOT
    (1248) What CMT
        (1250) movies NT
            (1253) directed NT
                (1254) Christoph Waltz VTTEXT
                    (1256) Quentin Tarantino VTTEXT
                    (1257) featuring VTTEXT


===========
TRANSLATIONS
===========
TOT: 1.0; NL: 1.0; NL+AG: 1.0; NL+QF: 1.0; rels: [directed_by]; projs: [movie_0.title]; preds: [director_0.name = "Christoph Waltz",director_0.name = "Quentin Tarantino",cast_0.role = "Featuring"]; havings: []; superlative: []; blanks: 0
TOT: 1.0; NL: 1.0; NL+AG: 1.0; NL+QF: 1.0; rels: [directed_by]; projs: [movie_0.title]; preds: [director_0.name = "Christoph Waltz",actor_0.name = "Quentin Tarantino",cast_0.role = "Featuring"]; havings: []; superlative: []; blanks: 0
TOT: 1.0; NL: 1.0; NL+AG: 1.0; NL+QF: 1.0; rels: [directed_by]; projs: [movie_0.title]; preds: [director_0.name = "Christoph Waltz",producer_0.name = "Quentin Tarantino",cast_0.role = "Featuring"]; havings: []; superlative: []; blanks: 0
TOT: 1.0; NL: 1.0; NL+AG: 1.0; NL+QF: 1.0; rels: [directed_by]; projs: [movie_0.title]; preds: [director_0.name = "Christoph Waltz",writer_0.name = "Quentin Tarantino",cast_0.role = "Featuring"]; havings: []; superlative: []; blanks: 0
TOT: 1.0; NL: 1.0; NL+AG: 1.0; NL+QF: 1.0; rels: [directed_by]; projs: [movie_0.title]; preds: [actor_0.name = "Christoph Waltz",director_0.name = "Quentin Tarantino",cast_0.role = "Featuring"]; havings: []; superlative: []; blanks: 0
TOT: 1.0; NL: 1.0; NL+AG: 1.0; NL+QF: 1.0; rels: [directed_by]; projs: [movie_0.title]; preds: [actor_0.name = "Christoph Waltz",actor_0.name = "Quentin Tarantino",cast_0.role = "Featuring"]; havings: []; superlative: []; blanks: 0
TOT: 1.0; NL: 1.0; NL+AG: 1.0; NL+QF: 1.0; rels: [directed_by]; projs: [movie_0.title]; preds: [actor_0.name = "Christoph Waltz",producer_0.name = "Quentin Tarantino",cast_0.role = "Featuring"]; havings: []; superlative: []; blanks: 0
TOT: 1.0; NL: 1.0; NL+AG: 1.0; NL+QF: 1.0; rels: [directed_by]; projs: [movie_0.title]; preds: [actor_0.name = "Christoph Waltz",writer_0.name = "Quentin Tarantino",cast_0.role = "Featuring"]; havings: []; superlative: []; blanks: 0
TOT: 1.0; NL: 1.0; NL+AG: 1.0; NL+QF: 1.0; rels: [directed_by]; projs: [movie_0.title]; preds: [producer_0.name = "Christoph Waltz",director_0.name = "Quentin Tarantino",cast_0.role = "Featuring"]; havings: []; superlative: []; blanks: 0
TOT: 1.0; NL: 1.0; NL+AG: 1.0; NL+QF: 1.0; rels: [directed_by]; projs: [movie_0.title]; preds: [producer_0.name = "Christoph Waltz",actor_0.name = "Quentin Tarantino",cast_0.role = "Featuring"]; havings: []; superlative: []; blanks: 0
TOT: 1.0; NL: 1.0; NL+AG: 1.0; NL+QF: 1.0; rels: [directed_by]; projs: [movie_0.title]; preds: [producer_0.name = "Christoph Waltz",producer_0.name = "Quentin Tarantino",cast_0.role = "Featuring"]; havings: []; superlative: []; blanks: 0
TOT: 1.0; NL: 1.0; NL+AG: 1.0; NL+QF: 1.0; rels: [directed_by]; projs: [movie_0.title]; preds: [producer_0.name = "Christoph Waltz",writer_0.name = "Quentin Tarantino",cast_0.role = "Featuring"]; havings: []; superlative: []; blanks: 0
TOT: 1.0; NL: 1.0; NL+AG: 1.0; NL+QF: 1.0; rels: [directed_by]; projs: [movie_0.title]; preds: [writer_0.name = "Christoph Waltz",director_0.name = "Quentin Tarantino",cast_0.role = "Featuring"]; havings: []; superlative: []; blanks: 0
TOT: 1.0; NL: 1.0; NL+AG: 1.0; NL+QF: 1.0; rels: [directed_by]; projs: [movie_0.title]; preds: [writer_0.name = "Christoph Waltz",actor_0.name = "Quentin Tarantino",cast_0.role = "Featuring"]; havings: []; superlative: []; blanks: 0
TOT: 1.0; NL: 1.0; NL+AG: 1.0; NL+QF: 1.0; rels: [directed_by]; projs: [movie_0.title]; preds: [writer_0.name = "Christoph Waltz",producer_0.name = "Quentin Tarantino",cast_0.role = "Featuring"]; havings: []; superlative: []; blanks: 0
TOT: 1.0; NL: 1.0; NL+AG: 1.0; NL+QF: 1.0; rels: [directed_by]; projs: [movie_0.title]; preds: [writer_0.name = "Christoph Waltz",writer_0.name = "Quentin Tarantino",cast_0.role = "Featuring"]; havings: []; superlative: []; blanks: 0

===========
RESULTS
===========
TOT: 0.9944417600539505; TR: 1.0; QF: 0.14345458500936806; select movie_0.title from actor as actor_0, cast as cast_0, directed_by as directed_by_0, director as director_0, movie as movie_0 where actor_0.name = "Quentin Tarantino" and cast_0.role = "Featuring" and director_0.name = "Christoph Waltz" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid
TOT: 0.9944417600539505; TR: 1.0; QF: 0.14345458500936806; select movie_0.title from actor as actor_0, cast as cast_0, directed_by as directed_by_0, director as director_0, movie as movie_0 where actor_0.name = "Christoph Waltz" and cast_0.role = "Featuring" and director_0.name = "Quentin Tarantino" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid
TOT: 0.9940520310169184; TR: 1.0; QF: 0.10372941326205931; select movie_0.title from cast as cast_0, directed_by as directed_by_0, director as director_0, movie as movie_0, writer as writer_0, written_by as written_by_0 where cast_0.role = "Featuring" and director_0.name = "Christoph Waltz" and writer_0.name = "Quentin Tarantino" and cast_0.msid = movie_0.mid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and movie_0.mid = written_by_0.msid and writer_0.wid = written_by_0.wid
TOT: 0.9940520310169184; TR: 1.0; QF: 0.10372941326205931; select movie_0.title from cast as cast_0, directed_by as directed_by_0, director as director_0, movie as movie_0, writer as writer_0, written_by as written_by_0 where cast_0.role = "Featuring" and director_0.name = "Quentin Tarantino" and writer_0.name = "Christoph Waltz" and cast_0.msid = movie_0.mid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and movie_0.mid = written_by_0.msid and writer_0.wid = written_by_0.wid
TOT: 0.9940520275081465; TR: 1.0; QF: 0.10369432554276108; select movie_0.title from cast as cast_0, directed_by as directed_by_0, director as director_0, made_by as made_by_0, movie as movie_0, producer as producer_0 where cast_0.role = "Featuring" and director_0.name = "Christoph Waltz" and producer_0.name = "Quentin Tarantino" and cast_0.msid = movie_0.mid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid
TOT: 0.9940520275081465; TR: 1.0; QF: 0.10369432554276108; select movie_0.title from cast as cast_0, directed_by as directed_by_0, director as director_0, made_by as made_by_0, movie as movie_0, producer as producer_0 where cast_0.role = "Featuring" and director_0.name = "Quentin Tarantino" and producer_0.name = "Christoph Waltz" and cast_0.msid = movie_0.mid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid
TOT: 0.9940485223411194; TR: 1.0; QF: 0.06864265527119175; select movie_0.title from cast as cast_0, directed_by as directed_by_0, directed_by as directed_by_1, director as director_0, director as director_1, movie as movie_0 where cast_0.role = "Featuring" and director_0.name = "Christoph Waltz" and director_1.name = "Quentin Tarantino" and cast_0.msid = movie_0.mid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and directed_by_1.did = director_1.did and directed_by_1.msid = movie_0.mid
TOT: 0.9937479196015688; TR: 1.0; QF: 0.06071318777458167; select movie_0.title from actor as actor_0, cast as cast_0, cast as cast_1, directed_by as directed_by_0, director as director_0, movie as movie_0, tv_series as tv_series_0 where actor_0.name = "Quentin Tarantino" and cast_0.role = "Featuring" and director_0.name = "Christoph Waltz" and actor_0.aid = cast_0.aid and actor_0.aid = cast_1.aid and cast_0.msid = movie_0.mid and cast_1.msid = tv_series_0.sid and directed_by_0.did = director_0.did and directed_by_0.msid = tv_series_0.sid
TOT: 0.9937479196015688; TR: 1.0; QF: 0.06071318777458167; select movie_0.title from actor as actor_0, cast as cast_0, cast as cast_1, directed_by as directed_by_0, director as director_0, movie as movie_0, tv_series as tv_series_0 where actor_0.name = "Christoph Waltz" and cast_0.role = "Featuring" and director_0.name = "Quentin Tarantino" and actor_0.aid = cast_0.aid and actor_0.aid = cast_1.aid and cast_0.msid = movie_0.mid and cast_1.msid = tv_series_0.sid and directed_by_0.did = director_0.did and directed_by_0.msid = tv_series_0.sid
TOT: 0.9937476046411522; TR: 1.0; QF: 0.0575635836084969; select movie_0.title from actor as actor_0, cast as cast_0, directed_by as directed_by_0, directed_by as directed_by_1, director as director_0, movie as movie_0, tv_series as tv_series_0 where actor_0.name = "Quentin Tarantino" and cast_0.role = "Featuring" and director_0.name = "Christoph Waltz" and actor_0.aid = cast_0.aid and cast_0.msid = tv_series_0.sid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and directed_by_1.did = director_0.did and directed_by_1.msid = tv_series_0.sid


05:49  INFO: ================
05:49  INFO: QUERY 8: What is the nationality of the actor "Christoph Waltz"?
05:49  INFO: ================
05:50  INFO: ================
05:50  INFO: QUERY 90: How many movies were produced in the year 2012?
05:50  INFO: ================
1269. ROOT: ROOT; NA; ; (0) 
1270. produced: NT; NA; ; (0) made_by(0.74):| directed_by(0.69):| producer.name(0.68):| producer(0.68):| cast.role(0.63):| cast(0.63):| written_by(0.63):| 
1272. How many: CMT; count; ; (0) 
1273. movies: NT; NA; ; (0) movie.title(1.0):| movie(1.0):| cast.role(0.95):Movie; Movie F; Movie AD; | company.name(0.95):Movies; Movie; Movie Movie; | tv_series.title(0.84):Movies, Movies, Movi; Movie Mob; Moon Movies; | keyword.keyword(0.83):movie-in-movie; movies-about-movies; b-movie; | actor.name(0.76):| 
1275. year: NT; NA; ; (0) movie.release_year(1.0):| director.birth_year(1.0):| tv_series.release_year(1.0):| actor.birth_year(1.0):| producer.birth_year(1.0):| writer.birth_year(1.0):| movie.title(0.95):Year; Years; Years; | 
1278. 2012: VTNUM; NA; ; (0) movie.release_year(1.0):2012; 2012; 2012; | tv_series.release_year(1.0):2012; 2012; 2012; | actor.birth_year(1.0):2012; 2012; 2012; | 
How, WRB
many, JJ
movies, NNS
were, VBD
produced, VBN
in, IN
the, DT
year, NN
2012, CD
advmod(many-2, How-1)
dep(produced-5, many-2)
nsubjpass(produced-5, movies-3)
auxpass(produced-5, were-4)
root(ROOT-0, produced-5)
case(year-8, in-6)
det(year-8, the-7)
nmod(produced-5, year-8)
nummod(year-8, 2012-9)

PARSE TREE:(1269) ROOT ROOT
    (1272) How many CMT
        (1273) movies NT
            (1270) produced NT
                (1275) year NT
                    (1278) 2012 VTNUM


===========
TRANSLATIONS
===========
TOT: 0.9204958069397395; NL: 0.8852322584043497; NL+AG: 0.9614502628430829; NL+QF: 0.9204958069397395; rels: [directed_by]; projs: [count(distinct(movie_0.title))]; preds: [movie_0.release_year = 2012]; havings: []; superlative: []; blanks: 0
TOT: 0.9055419360254962; NL: 0.9055419360254962; NL+AG: 0.9614502628430829; NL+QF: 0.9055419360254962; rels: [made_by]; projs: [count(distinct(movie_0.title))]; preds: [movie_0.release_year = 2012]; havings: []; superlative: []; blanks: 0
TOT: 0.9055419360254962; NL: 0.9055419360254962; NL+AG: 0.9614502628430829; NL+QF: 0.9055419360254962; rels: [made_by]; projs: [count(distinct(movie_0.title))]; preds: [tv_series_0.release_year = 2012]; havings: []; superlative: []; blanks: 0
TOT: 0.9055419360254962; NL: 0.9055419360254962; NL+AG: 0.9614502628430829; NL+QF: 0.9055419360254962; rels: [made_by]; projs: [count(distinct(movie_0.title))]; preds: [actor_0.birth_year = 2012]; havings: []; superlative: []; blanks: 0
TOT: 0.9043595073353409; NL: 0.8852322584043497; NL+AG: 0.9614502628430829; NL+QF: 0.9043595073353409; rels: [directed_by]; projs: [count(distinct(movie_0.title))]; preds: [tv_series_0.release_year = 2012]; havings: []; superlative: []; blanks: 0
TOT: 0.9043595073353409; NL: 0.8852322584043497; NL+AG: 0.9614502628430829; NL+QF: 0.9043595073353409; rels: [directed_by]; projs: [count(distinct(movie_0.title))]; preds: [actor_0.birth_year = 2012]; havings: []; superlative: []; blanks: 0
TOT: 0.8783733725393061; NL: 0.8783733725393061; NL+AG: 0.9614502628430829; NL+QF: 0.8783733725393061; rels: [producer]; projs: [count(distinct(movie_0.title))]; preds: [movie_0.release_year = 2012]; havings: []; superlative: []; blanks: 0
TOT: 0.8783733725393061; NL: 0.8783733725393061; NL+AG: 0.9614502628430829; NL+QF: 0.8783733725393061; rels: [producer]; projs: [count(distinct(movie_0.title))]; preds: [tv_series_0.release_year = 2012]; havings: []; superlative: []; blanks: 0
TOT: 0.8783733725393061; NL: 0.8783733725393061; NL+AG: 0.9614502628430829; NL+QF: 0.8783733725393061; rels: [producer]; projs: [count(distinct(movie_0.title))]; preds: [actor_0.birth_year = 2012]; havings: []; superlative: []; blanks: 0
TOT: 0.8662391053409028; NL: 0.8662391053409028; NL+AG: 0.9614502628430829; NL+QF: 0.8662391053409028; rels: []; projs: [count(distinct(movie_0.title))]; preds: [movie_0.release_year = 2012]; havings: []; superlative: []; blanks: 1
TOT: 0.8662391053409028; NL: 0.8662391053409028; NL+AG: 0.9614502628430829; NL+QF: 0.8662391053409028; rels: []; projs: [count(distinct(movie_0.title))]; preds: [tv_series_0.release_year = 2012]; havings: []; superlative: []; blanks: 1
TOT: 0.8662391053409028; NL: 0.8662391053409028; NL+AG: 0.9614502628430829; NL+QF: 0.8662391053409028; rels: []; projs: [count(distinct(movie_0.title))]; preds: [actor_0.birth_year = 2012]; havings: []; superlative: []; blanks: 1

===========
RESULTS
===========
TOT: 0.9009193259975329; TR: 0.9055419360254962; QF: 0.05394736842105263; select count(distinct(movie_0.title)) from made_by as made_by_0, made_by as made_by_1, movie as movie_0, producer as producer_0, tv_series as tv_series_0 where tv_series_0.release_year = 2012 and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid and made_by_1.msid = tv_series_0.sid and made_by_1.pid = producer_0.pid
TOT: 0.9002331487097625; TR: 0.9055419360254962; QF: 0.047837617299061615; select count(distinct(movie_0.title)) from actor as actor_0, cast as cast_0, made_by as made_by_0, made_by as made_by_1, movie as movie_0, producer as producer_0, tv_series as tv_series_0 where actor_0.birth_year = 2012 and actor_0.aid = cast_0.aid and cast_0.msid = tv_series_0.sid and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid and made_by_1.msid = tv_series_0.sid and made_by_1.pid = producer_0.pid
TOT: 0.8997507640472041; TR: 0.9043595073353409; QF: 0.07437189767086674; select count(distinct(movie_0.title)) from directed_by as directed_by_0, directed_by as directed_by_1, director as director_0, movie as movie_0, tv_series as tv_series_0 where tv_series_0.release_year = 2012 and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and directed_by_1.did = director_0.did and directed_by_1.msid = tv_series_0.sid
TOT: 0.8990635169031397; TR: 0.9043595073353409; QF: 0.0575635836084969; select count(distinct(movie_0.title)) from actor as actor_0, cast as cast_0, directed_by as directed_by_0, directed_by as directed_by_1, director as director_0, movie as movie_0, tv_series as tv_series_0 where actor_0.birth_year = 2012 and actor_0.aid = cast_0.aid and cast_0.msid = tv_series_0.sid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and directed_by_1.did = director_0.did and directed_by_1.msid = tv_series_0.sid
TOT: 0.8675767142874937; TR: 0.8662391053409028; QF: 1.0; select count(distinct(movie_0.title)) from movie as movie_0 where movie_0.release_year = 2012
TOT: 0.8633166206260283; TR: 0.8662391053409028; QF: 0.24138673557278212; select count(distinct(movie_0.title)) from actor as actor_0, cast as cast_0, movie as movie_0 where actor_0.birth_year = 2012 and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid
TOT: 0.8620119365227463; TR: 0.8662391053409028; QF: 0.0780763980303252; select count(distinct(movie_0.title)) from actor as actor_0, cast as cast_0, cast as cast_1, movie as movie_0, tv_series as tv_series_0 where tv_series_0.release_year = 2012 and actor_0.aid = cast_0.aid and actor_0.aid = cast_1.aid and cast_0.msid = movie_0.mid and cast_1.msid = tv_series_0.sid
TOT: 0.8620098981137125; TR: 0.8662391053409028; QF: 0.05769230769230769; select count(distinct(movie_0.title)) from keyword as keyword_0, movie as movie_0, tags as tags_0, tags as tags_1, tv_series as tv_series_0 where tv_series_0.release_year = 2012 and keyword_0.id = tags_0.kid and keyword_0.id = tags_1.kid and movie_0.mid = tags_0.msid and tags_1.msid = tv_series_0.sid
TOT: 0.8620098696236841; TR: 0.8662391053409028; QF: 0.05740740740740741; select count(distinct(movie_0.title)) from company as company_0, copyright as copyright_0, copyright as copyright_1, movie as movie_0, tv_series as tv_series_0 where tv_series_0.release_year = 2012 and company_0.id = copyright_0.cid and company_0.id = copyright_1.cid and copyright_0.msid = movie_0.mid and copyright_1.msid = tv_series_0.sid
TOT: 0.8620097782335926; TR: 0.8662391053409028; QF: 0.0564935064935065; select count(distinct(movie_0.title)) from classification as classification_0, classification as classification_1, genre as genre_0, movie as movie_0, tv_series as tv_series_0 where tv_series_0.release_year = 2012 and classification_0.gid = genre_0.gid and classification_0.msid = movie_0.mid and classification_1.gid = genre_0.gid and classification_1.msid = tv_series_0.sid


05:53  INFO: ================
05:53  INFO: QUERY 63: Find all the female actors born in "New York City" after 1980
05:53  INFO: ================
06:12  INFO: ================
06:12  INFO: QUERY 48: What are all the movies featuring "Kerry Washington"?
06:12  INFO: ================
06:13  INFO: ================
06:13  INFO: QUERY 38: Find all movies featuring "Benedict Cumberbatch"
06:13  INFO: ================
06:14  INFO: ================
06:14  INFO: QUERY 1: What year was "Ellen Page" born?
06:14  INFO: ================
06:15  INFO: ================
06:15  INFO: QUERY 30: Find all actors born in "Los Angeles" after 1980
06:15  INFO: ================
06:16  INFO: ====== RANKS ======
06:16  INFO: QUERY 0: 1
06:16  INFO: QUERY 1: 1
06:16  INFO: QUERY 2: 1
06:16  INFO: QUERY 3: 1
06:16  INFO: QUERY 4: 1
06:16  INFO: QUERY 5: 1
06:16  INFO: QUERY 6: 1
06:16  INFO: QUERY 7: 1
06:16  INFO: QUERY 8: 1
06:16  INFO: QUERY 9: 1
06:16  INFO: QUERY 10: 1
06:16  INFO: QUERY 11: 1
06:16  INFO: QUERY 12: 1
06:16  INFO: QUERY 13: 1
06:16  INFO: QUERY 14: 1
06:16  INFO: QUERY 15: 1
06:16  INFO: QUERY 16: 1
06:16  INFO: QUERY 17: 1
06:16  INFO: QUERY 18: 1
06:16  INFO: QUERY 19: 1
06:16  INFO: QUERY 20: 1
06:16  INFO: QUERY 21: 1
06:16  INFO: QUERY 22: -1
06:16  INFO: QUERY 23: 1
06:16  INFO: QUERY 24: 1
06:16  INFO: QUERY 25: -1
06:16  INFO: QUERY 26: 1
06:16  INFO: QUERY 27: 1
06:16  INFO: QUERY 28: 7
06:16  INFO: QUERY 29: 1
06:16  INFO: QUERY 30: 1
06:16  INFO: QUERY 31: 1
06:16  INFO: QUERY 32: 3
06:16  INFO: QUERY 33: 5
06:16  INFO: QUERY 34: 1
06:16  INFO: QUERY 35: 2
06:16  INFO: QUERY 36: 1
06:16  INFO: QUERY 37: 4
06:16  INFO: QUERY 38: 1
06:16  INFO: QUERY 39: 8
06:16  INFO: QUERY 40: 1
06:16  INFO: QUERY 41: 1
06:16  INFO: QUERY 42: 1
06:16  INFO: QUERY 43: 1
06:16  INFO: QUERY 44: -1
06:16  INFO: QUERY 45: 1
06:16  INFO: QUERY 46: 1
06:16  INFO: QUERY 47: 2
06:16  INFO: QUERY 48: 1
06:16  INFO: QUERY 49: 1
06:16  INFO: QUERY 50: 1
06:16  INFO: QUERY 51: 1
06:16  INFO: QUERY 52: 1
06:16  INFO: QUERY 53: 5
06:16  INFO: QUERY 54: 6
06:16  INFO: QUERY 55: 2
06:16  INFO: QUERY 56: 1
06:16  INFO: QUERY 57: 1
06:16  INFO: QUERY 58: -1
06:16  INFO: QUERY 59: 1
06:16  INFO: QUERY 60: 1
06:16  INFO: QUERY 61: -1
06:16  INFO: QUERY 62: 1
06:16  INFO: QUERY 63: 1
06:16  INFO: QUERY 64: 1
06:16  INFO: QUERY 65: 1
06:16  INFO: QUERY 66: 8
06:16  INFO: QUERY 67: -1
06:16  INFO: QUERY 68: -1
06:16  INFO: QUERY 69: 1
06:16  INFO: QUERY 70: 1
06:16  INFO: QUERY 71: 1
06:16  INFO: QUERY 72: 2
06:16  INFO: QUERY 73: 1
06:16  INFO: QUERY 74: 1
06:16  INFO: QUERY 75: 1
06:16  INFO: QUERY 76: 1
06:16  INFO: QUERY 77: 1
06:16  INFO: QUERY 78: 4
06:16  INFO: QUERY 79: 1
06:16  INFO: QUERY 80: 1
06:16  INFO: QUERY 81: 2
06:16  INFO: QUERY 82: 1
06:16  INFO: QUERY 83: -1
06:16  INFO: QUERY 84: 8
06:16  INFO: QUERY 85: -1
06:16  INFO: QUERY 86: -1
06:16  INFO: QUERY 87: 2
06:16  INFO: QUERY 88: 1
06:16  INFO: QUERY 89: 1
06:16  INFO: QUERY 90: 5
06:16  INFO: QUERY 91: 1
06:16  INFO: QUERY 92: 1
06:16  INFO: QUERY 93: 1
06:16  INFO: QUERY 94: 1
06:16  INFO: QUERY 95: 1
06:16  INFO: QUERY 96: 2
06:16  INFO: QUERY 97: 1
06:16  INFO: QUERY 98: -1
06:16  INFO: QUERY 99: 2
06:16  INFO: QUERY 100: 1
06:16  INFO: QUERY 101: 1
06:16  INFO: QUERY 102: 1
06:16  INFO: QUERY 103: -1
06:16  INFO: QUERY 104: 2
06:16  INFO: QUERY 105: 1
06:16  INFO: QUERY 106: 6
06:16  INFO: QUERY 107: 1
06:16  INFO: QUERY 108: 1
06:16  INFO: QUERY 109: 1
06:16  INFO: QUERY 110: -1
06:16  INFO: QUERY 111: 2
06:16  INFO: QUERY 112: -1
06:16  INFO: QUERY 113: 3
06:16  INFO: QUERY 114: 8
06:16  INFO: QUERY 115: 3
06:16  INFO: QUERY 116: 1
06:16  INFO: QUERY 117: 1
06:16  INFO: QUERY 118: 5
06:16  INFO: QUERY 119: -1
06:16  INFO: QUERY 120: 1
06:16  INFO: QUERY 121: -1
06:16  INFO: QUERY 122: 1
06:16  INFO: QUERY 123: 1
06:16  INFO: QUERY 124: -1
06:16  INFO: QUERY 125: -1
06:16  INFO: QUERY 126: 1
06:16  INFO: QUERY 127: -1
06:16  INFO: QUERY 128: -1
06:16  INFO: QUERY 129: 1
06:16  INFO: QUERY 130: -1
06:16  INFO: ==============
06:16  INFO: SUMMARY
06:16  INFO: ==============
06:16  INFO: Total queries: 131
06:16  INFO: Top 1: 84
06:16  INFO: Top 3: 97
06:16  INFO: Top 5: 103
