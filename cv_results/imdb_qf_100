00:00  INFO: ==============================
00:00  INFO: Reading relations info...
00:00  INFO: Read 16 relations/views/functions.
00:00  INFO: ==============================

00:00  INFO: ==============================
00:00  INFO: Reading edges info...
00:00  INFO: Read 21 FK-PK relationships.
00:00  INFO: Read 21 PK-FK relationships.
00:00  INFO: ==============================

00:00  INFO: ==============================
00:00  INFO: Reading relations info...
00:00  INFO: Read 15 relations/views/functions.
00:00  INFO: ==============================

00:00  INFO: ==============================
00:00  INFO: Reading edges info...
00:00  INFO: Read 19 FK-PK relationships.
00:00  INFO: Read 19 PK-FK relationships.
00:00  INFO: ==============================

00:00  INFO: ==============================
00:00  INFO: Reading relations info...
00:00  INFO: Read 7 relations/views/functions.
00:00  INFO: ==============================

00:00  INFO: ==============================
00:00  INFO: Reading edges info...
00:00  INFO: Read 7 FK-PK relationships.
00:00  INFO: Read 7 PK-FK relationships.
00:00  INFO: ==============================

00:00  INFO: ===== Parsing Results =====
00:00  INFO: Total Queries: 196
00:00  INFO: Correctly Parsed: 184/196

00:00  INFO: ===== Parsing Results =====
00:00  INFO: Total Queries: 128
00:00  INFO: Correctly Parsed: 95/128

00:00  INFO: ==============================
00:00  INFO: Generating templates using schema for join level: 6
00:08  INFO: Done generating 29843 templates.
00:08  INFO: ==============================

00:10  INFO: ===== FOLD 0 =====
Loading parser from serialized file edu/stanford/nlp/models/lexparser/englishPCFG.ser.gz ... done [2.0 sec].
00:11  INFO: ===== Parsing Results =====
00:11  INFO: Total Queries: 98
00:11  INFO: Correctly Parsed: 97/98

00:11  INFO: ================
00:11  INFO: QUERY 14: Find all actors from Italy
00:11  INFO: ================
00:24  INFO: ================
00:24  INFO: QUERY 123: which movie has the most number of actors from China?
00:24  INFO: ================
00:34  INFO: ================
00:34  INFO: QUERY 125: Find the name and budget of the latest movie by "Quentin Tarantino"
00:34  INFO: ================
20. ROOT: ROOT; NA; ; (0) 
21. Find: CMT; NA; ; (0) 
22. name: VTTEXT; NA; ; (0) movie.title(0.95):Name; Name; Names; | actor.name(0.95):name; No Name; Famous Names; | actor.name(0.81):| director.name(0.79):| tv_series.title(0.79):Same Name; No Names; Name This; | keyword.keyword(0.79):same-name; name-game; naming-names; | writer.name(0.79):| 
25. budget: NT; NA; ; (0) movie.budget(1.0):| tv_series.budget(1.0):| movie.title(0.95):Budget; Fudget's Budget; No Budget; | tv_series.title(0.95):Budget; Budget TV; No Budget Gourmet; | cast.role(0.95):Budgets; Budgets; Budgets; | keyword.keyword(0.95):budget; in-budget; no-budget; | company.name(0.71):Low Budget; Cero Budget; Budget Movies; | 
26. movie: NT; NA; ; (0) movie.title(1.0):| movie(1.0):| cast.role(0.95):Movie; Movie F; Movie AD; | company.name(0.95):Movie; Movies; Movie Movie; | keyword.keyword(0.83):movie-in-movie; b-movie; z-movie; | actor.name(0.76):| actor(0.76):| 
29. latest: FT; max; ; (0) 
30. Quentin Tarantino: VTTEXT; NA; ; (0) director.name(1.0):Quentin Tarantino; Quentin Tarantino; Quentin Tarrantino; | actor.name(1.0):Quentin Tarantino; Quentin Tarantino; Quentin Tarrantino; | producer.name(1.0):Quentin Tarantino; Quentin Tarantino; Quentin Tarrantino; | writer.name(1.0):Quentin Tarantino; Quentin Tarantino; Quentin Tarrantino; | cast.role(0.85):Quentin Tarrantino '; Quentin Tarrantino '; Quentin Tarrantino '; | movie.title(0.84):21 Years: Quentin Ta; 21 Years: Quentin Ta; Quentin Tarantino's ; | writer.birth_city(0.74):San Quentin; San Quentin; Saint-Quentin; | 
Find, VB
the, DT
name, NN
and, CC
budget, NN
of, IN
the, DT
latest, JJS
movie, NN
by, IN
Quentin Tarantino, NNP
root(ROOT-0, Find-1)
det(name-3, the-2)
dobj(Find-1, name-3)
cc(name-3, and-4)
conj(name-3, budget-5)
case(movie-9, of-6)
det(movie-9, the-7)
amod(movie-9, latest-8)
nmod(name-3, movie-9)
case(Quentin Tarantino-11, by-10)
nmod(Find-1, Quentin Tarantino-11)

PARSE TREE:(20) ROOT ROOT
    (21) Find CMT
        (22) name VTTEXT
            (26) movie NT
        (25) budget NT
        (30) Quentin Tarantino VTTEXT


===========
TRANSLATIONS
===========
TOT: 0.9174505626104981; NL: 0.9174505626104981; NL+AG: 0.9733138759953143; NL+QF: 0.9174505626104981; rels: []; projs: [actor_0.name]; preds: [director_0.name = "Quentin Tarantino"]; havings: []; superlative: [movie_0.title desc limit 1]; blanks: 1
TOT: 0.9174505626104981; NL: 0.9174505626104981; NL+AG: 0.9733138759953143; NL+QF: 0.9174505626104981; rels: []; projs: [actor_0.name]; preds: [actor_0.name = "Quentin Tarantino"]; havings: []; superlative: [movie_0.title desc limit 1]; blanks: 1
TOT: 0.9174505626104981; NL: 0.9174505626104981; NL+AG: 0.9733138759953143; NL+QF: 0.9174505626104981; rels: []; projs: [actor_0.name]; preds: [producer_0.name = "Quentin Tarantino"]; havings: []; superlative: [movie_0.title desc limit 1]; blanks: 1
TOT: 0.9174505626104981; NL: 0.9174505626104981; NL+AG: 0.9733138759953143; NL+QF: 0.9174505626104981; rels: []; projs: [actor_0.name]; preds: [writer_0.name = "Quentin Tarantino"]; havings: []; superlative: [movie_0.title desc limit 1]; blanks: 1
TOT: 0.8914326676246277; NL: 0.8879579826791157; NL+AG: 0.9556734954069785; NL+QF: 0.8914326676246277; rels: []; projs: [actor_0.name]; preds: [cast_0.role = "Quentin Tarrantino 'esque' Patient"]; havings: []; superlative: [movie_0.title desc limit 1]; blanks: 1
TOT: 0.8890594327029326; NL: 0.8862129230052637; NL+AG: 0.9547006262957899; NL+QF: 0.8890594327029326; rels: []; projs: [actor_0.name]; preds: [movie_0.title = "21 Years: Quentin Tarantino"]; havings: []; superlative: [movie_0.title desc limit 1]; blanks: 1
TOT: 0.883063826568098; NL: 0.8787564719717046; NL+AG: 0.951753035575193; NL+QF: 0.883063826568098; rels: []; projs: [actor_0.name]; preds: [director_0.name = "Quentin Tarantino"]; havings: []; superlative: [movie_0.title desc limit 1]; blanks: 1
TOT: 0.8828651300758494; NL: 0.8787564719717046; NL+AG: 0.951753035575193; NL+QF: 0.8828651300758494; rels: []; projs: [actor_0.name]; preds: [actor_0.name = "Quentin Tarantino"]; havings: []; superlative: [movie_0.title desc limit 1]; blanks: 1
TOT: 0.8822498437654105; NL: 0.8787564719717046; NL+AG: 0.951753035575193; NL+QF: 0.8822498437654105; rels: []; projs: [actor_0.name]; preds: [producer_0.name = "Quentin Tarantino"]; havings: []; superlative: [movie_0.title desc limit 1]; blanks: 1
TOT: 0.8822498437654105; NL: 0.8787564719717046; NL+AG: 0.951753035575193; NL+QF: 0.8822498437654105; rels: []; projs: [actor_0.name]; preds: [writer_0.name = "Quentin Tarantino"]; havings: []; superlative: [movie_0.title desc limit 1]; blanks: 1
TOT: 0.8796571017983323; NL: 0.8616655341946088; NL+AG: 0.9774777880588814; NL+QF: 0.8796571017983323; rels: []; projs: [actor_0.name]; preds: [cast_0.role = "Budgets",actor_0.name = "Quentin Tarantino"]; havings: []; superlative: [movie_0.title desc limit 1]; blanks: 0

===========
RESULTS
===========
TOT: 0.9127174660404578; TR: 0.9174505626104981; QF: 0.1399446061508608; select actor_0.name from actor as actor_0, cast as cast_0, directed_by as directed_by_0, director as director_0, movie as movie_0 where director_0.name = "Quentin Tarantino" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid order by movie_0.title desc limit 1
TOT: 0.9127156497266345; TR: 0.9174505626104981; QF: 0.12178146791922942; select actor_0.name from actor as actor_0, cast as cast_0, movie as movie_0, writer as writer_0, written_by as written_by_0 where writer_0.name = "Quentin Tarantino" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and movie_0.mid = written_by_0.msid and writer_0.wid = written_by_0.wid order by movie_0.title desc limit 1
TOT: 0.9127156497266345; TR: 0.9174505626104981; QF: 0.12178146791922942; select actor_0.name from actor as actor_0, actor as actor_1, cast as cast_0, cast as cast_1, movie as movie_0 where actor_1.name = "Quentin Tarantino" and actor_0.aid = cast_0.aid and actor_1.aid = cast_1.aid and cast_0.msid = movie_0.mid and cast_1.msid = movie_0.mid order by movie_0.title desc limit 1
TOT: 0.9127156441731359; TR: 0.9174505626104981; QF: 0.12172593293218759; select actor_0.name from actor as actor_0, cast as cast_0, made_by as made_by_0, movie as movie_0, producer as producer_0 where producer_0.name = "Quentin Tarantino" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid order by movie_0.title desc limit 1
TOT: 0.9123265077928585; TR: 0.9174505626104981; QF: 0.0879273287314985; select actor_0.name from actor as actor_0, cast as cast_0, made_by as made_by_0, movie as movie_0, producer as producer_0, tv_series as tv_series_0 where producer_0.name = "Quentin Tarantino" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and cast_0.msid = tv_series_0.sid and made_by_0.msid = tv_series_0.sid and made_by_0.pid = producer_0.pid order by movie_0.title desc limit 1
TOT: 0.9123261239544747; TR: 0.9174505626104981; QF: 0.08408894489311465; select actor_0.name from actor as actor_0, cast as cast_0, directed_by as directed_by_0, director as director_0, movie as movie_0, tv_series as tv_series_0 where director_0.name = "Quentin Tarantino" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and cast_0.msid = tv_series_0.sid and directed_by_0.did = director_0.did and directed_by_0.msid = tv_series_0.sid order by movie_0.title desc limit 1
TOT: 0.9123259017322524; TR: 0.9174505626104981; QF: 0.08186672267089244; select actor_0.name from actor as actor_0, actor as actor_1, cast as cast_0, cast as cast_1, movie as movie_0, tv_series as tv_series_0 where actor_1.name = "Quentin Tarantino" and actor_0.aid = cast_0.aid and actor_1.aid = cast_1.aid and cast_0.msid = movie_0.mid and cast_0.msid = tv_series_0.sid and cast_1.msid = tv_series_0.sid order by movie_0.title desc limit 1
TOT: 0.9123259017322524; TR: 0.9174505626104981; QF: 0.08186672267089244; select actor_0.name from actor as actor_0, cast as cast_0, movie as movie_0, tv_series as tv_series_0, writer as writer_0, written_by as written_by_0 where writer_0.name = "Quentin Tarantino" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and cast_0.msid = tv_series_0.sid and tv_series_0.sid = written_by_0.msid and writer_0.wid = written_by_0.wid order by movie_0.title desc limit 1
TOT: 0.9123258951963047; TR: 0.9174505626104981; QF: 0.08180136319376825; select actor_0.name from actor as actor_0, cast as cast_0, directed_by as directed_by_0, director as director_0, movie as movie_0, tv_series as tv_series_0 where director_0.name = "Quentin Tarantino" and actor_0.aid = cast_0.aid and cast_0.msid = tv_series_0.sid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and directed_by_0.msid = tv_series_0.sid order by movie_0.title desc limit 1
TOT: 0.9123248826382921; TR: 0.9174505626104981; QF: 0.07167578306818813; select actor_0.name from actor as actor_0, cast as cast_0, made_by as made_by_0, movie as movie_0, producer as producer_0, tv_series as tv_series_0 where producer_0.name = "Quentin Tarantino" and actor_0.aid = cast_0.aid and cast_0.msid = tv_series_0.sid and made_by_0.msid = movie_0.mid and made_by_0.msid = tv_series_0.sid and made_by_0.pid = producer_0.pid order by movie_0.title desc limit 1


00:43  INFO: ================
00:43  INFO: QUERY 52: What company produced the series Scandal?
00:43  INFO: ================
00:51  INFO: ================
00:51  INFO: QUERY 93: How many movies did "Ronald Reagan" act in?
00:51  INFO: ================
00:56  INFO: ================
00:56  INFO: QUERY 36: Who are the actors born in "New York City" after 1990?
00:56  INFO: ================
01:13  INFO: ================
01:13  INFO: QUERY 65: Who acts as "Alan Turing" in the movie "The Imitation Game"?
01:13  INFO: ================
01:25  INFO: ================
01:25  INFO: QUERY 70: Give me the name of all the actors from Afghanistan
01:25  INFO: ================
01:28  INFO: ================
01:28  INFO: QUERY 40: Find all movies about Autism
01:28  INFO: ================
01:31  INFO: ================
01:31  INFO: QUERY 87: What is the number of movies in which "Jennifer Aniston" acted after 2010?
01:31  INFO: ================
90. ROOT: ROOT; NA; ; (0) 
91. What: CMT; NA; ; (0) 
93. number of: FT; count; ; (0) 
95. movies: NT; NA; ; (0) movie.title(1.0):| movie(1.0):| cast.role(0.95):Movie; Movie F; Movie AD; | company.name(0.95):Movies; Movie; Movie Movie; | tv_series.title(0.84):Movies, Movies, Movi; Movie Mob; Moon Movies; | keyword.keyword(0.83):movie-in-movie; movies-about-movies; b-movie; | actor.name(0.76):| 
97. acted: NT; NA; ; (0) movie.release_year(0.63):| tv_series.release_year(0.63):| actor.name(0.62):| actor(0.62):| genre.genre(0.62):| genre(0.62):| made_by(0.61):| 
100. Jennifer Aniston: VTTEXT; NA; ; (0) director.name(1.0):Jennifer Aniston; Jennifer Aniston; Jennifer Aniston Pit; | actor.name(1.0):Jennifer Aniston; Jennifer Aniston; Jennifer Aniston Pit; | producer.name(1.0):Jennifer Aniston; Jennifer Aniston; Jennifer Aniston Pit; | cast.role(0.91):Jennifer Faniston; Jennifer Faniston; Jennifer Tangston; | writer.name(0.84):Jennifer An; Jennifer An; Jennifer Piston; | movie.title(0.84):Dating Jennifer Anis; Dating Jennifer Anis; Jennifer; | company.name(0.74):Jennifer Alliston Le; Jennifer Alliston Le; Dear Jennifer; | 
101. 2010: VTNUM; NA; ; (0) movie.release_year(1.0):2012; 2014; 2015; | tv_series.release_year(1.0):2014; 2014; 2013; | actor.birth_year(1.0):2011; 2013; 2013; | 
102. after: OT; >; ; (0) 
What, WP
is, VBZ
the, DT
number, NN
of, IN
movies, NNS
in, IN
which, WDT
Jennifer Aniston, NNP
acted, VBD
after, IN
2010, CD
root(ROOT-0, What-1)
cop(What-1, is-2)
det(number-4, the-3)
nsubj(What-1, number-4)
case(movies-6, of-5)
nmod(number-4, movies-6)
case(which-8, in-7)
nmod(acted-10, which-8)
nsubj(acted-10, Jennifer Aniston-9)
acl:relcl(movies-6, acted-10)
case(2010-12, after-11)
nmod(acted-10, 2010-12)

PARSE TREE:(90) ROOT ROOT
    (91) What CMT
        (93) number of FT
            (95) movies NT
                (97) acted NT
                    (100) Jennifer Aniston VTTEXT
                    (101) 2010 VTNUM
                        (102) after OT


===========
TRANSLATIONS
===========
TOT: 0.8979007600118484; NL: 0.8979007600118484; NL+AG: 0.9685217674536027; NL+QF: 0.8979007600118484; rels: []; projs: [count(distinct(movie_0.title))]; preds: [director_0.name = "Jennifer Aniston",movie_0.release_year > 2010]; havings: []; superlative: []; blanks: 1
TOT: 0.8979007600118484; NL: 0.8979007600118484; NL+AG: 0.9685217674536027; NL+QF: 0.8979007600118484; rels: []; projs: [count(distinct(movie_0.title))]; preds: [director_0.name = "Jennifer Aniston",tv_series_0.release_year > 2010]; havings: []; superlative: []; blanks: 1
TOT: 0.8979007600118484; NL: 0.8979007600118484; NL+AG: 0.9685217674536027; NL+QF: 0.8979007600118484; rels: []; projs: [count(distinct(movie_0.title))]; preds: [director_0.name = "Jennifer Aniston",actor_0.birth_year > 2010]; havings: []; superlative: []; blanks: 1
TOT: 0.8979007600118484; NL: 0.8979007600118484; NL+AG: 0.9685217674536027; NL+QF: 0.8979007600118484; rels: []; projs: [count(distinct(movie_0.title))]; preds: [actor_0.name = "Jennifer Aniston",movie_0.release_year > 2010]; havings: []; superlative: []; blanks: 1
TOT: 0.8979007600118484; NL: 0.8979007600118484; NL+AG: 0.9685217674536027; NL+QF: 0.8979007600118484; rels: []; projs: [count(distinct(movie_0.title))]; preds: [actor_0.name = "Jennifer Aniston",tv_series_0.release_year > 2010]; havings: []; superlative: []; blanks: 1
TOT: 0.8979007600118484; NL: 0.8979007600118484; NL+AG: 0.9685217674536027; NL+QF: 0.8979007600118484; rels: []; projs: [count(distinct(movie_0.title))]; preds: [actor_0.name = "Jennifer Aniston",actor_0.birth_year > 2010]; havings: []; superlative: []; blanks: 1
TOT: 0.8979007600118484; NL: 0.8979007600118484; NL+AG: 0.9685217674536027; NL+QF: 0.8979007600118484; rels: []; projs: [count(distinct(movie_0.title))]; preds: [producer_0.name = "Jennifer Aniston",movie_0.release_year > 2010]; havings: []; superlative: []; blanks: 1
TOT: 0.8979007600118484; NL: 0.8979007600118484; NL+AG: 0.9685217674536027; NL+QF: 0.8979007600118484; rels: []; projs: [count(distinct(movie_0.title))]; preds: [producer_0.name = "Jennifer Aniston",tv_series_0.release_year > 2010]; havings: []; superlative: []; blanks: 1
TOT: 0.8979007600118484; NL: 0.8979007600118484; NL+AG: 0.9685217674536027; NL+QF: 0.8979007600118484; rels: []; projs: [count(distinct(movie_0.title))]; preds: [producer_0.name = "Jennifer Aniston",actor_0.birth_year > 2010]; havings: []; superlative: []; blanks: 1
TOT: 0.8780983407516854; NL: 0.8780983407516854; NL+AG: 0.9578894148328949; NL+QF: 0.8780983407516854; rels: []; projs: [count(distinct(movie_0.title))]; preds: [cast_0.role = "Jennifer Faniston",movie_0.release_year > 2010]; havings: []; superlative: []; blanks: 1
TOT: 0.8780983407516854; NL: 0.8780983407516854; NL+AG: 0.9578894148328949; NL+QF: 0.8780983407516854; rels: []; projs: [count(distinct(movie_0.title))]; preds: [cast_0.role = "Jennifer Faniston",tv_series_0.release_year > 2010]; havings: []; superlative: []; blanks: 1
TOT: 0.8780983407516854; NL: 0.8780983407516854; NL+AG: 0.9578894148328949; NL+QF: 0.8780983407516854; rels: []; projs: [count(distinct(movie_0.title))]; preds: [cast_0.role = "Jennifer Faniston",actor_0.birth_year > 2010]; havings: []; superlative: []; blanks: 1

===========
RESULTS
===========
TOT: 0.8946616109857981; TR: 0.8979007600118484; QF: 0.24090909090909088; select count(distinct(movie_0.title)) from directed_by as directed_by_0, director as director_0, movie as movie_0 where director_0.name = "Jennifer Aniston" and movie_0.release_year > 2010 and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid
TOT: 0.8946600773696666; TR: 0.8979007600118484; QF: 0.22557292959377842; select count(distinct(movie_0.title)) from actor as actor_0, cast as cast_0, movie as movie_0 where actor_0.name = "Jennifer Aniston" and movie_0.release_year > 2010 and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid
TOT: 0.8946600773696666; TR: 0.8979007600118484; QF: 0.22557292959377842; select count(distinct(movie_0.title)) from actor as actor_0, cast as cast_0, movie as movie_0 where actor_0.birth_year > 2010 and actor_0.name = "Jennifer Aniston" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid
TOT: 0.8946555380947252; TR: 0.8979007600118484; QF: 0.1801801801801802; select count(distinct(movie_0.title)) from made_by as made_by_0, movie as movie_0, producer as producer_0 where movie_0.release_year > 2010 and producer_0.name = "Jennifer Aniston" and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid
TOT: 0.8938848079672854; TR: 0.8979007600118484; QF: 0.13055555555555556; select count(distinct(movie_0.title)) from directed_by as directed_by_0, director as director_0, movie as movie_0, tv_series as tv_series_0 where director_0.name = "Jennifer Aniston" and tv_series_0.release_year > 2010 and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and directed_by_0.msid = tv_series_0.sid
TOT: 0.8938838857590643; TR: 0.8979007600118484; QF: 0.12133347334389777; select count(distinct(movie_0.title)) from actor as actor_0, cast as cast_0, movie as movie_0, tv_series as tv_series_0 where actor_0.name = "Jennifer Aniston" and tv_series_0.release_year > 2010 and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and cast_0.msid = tv_series_0.sid
TOT: 0.893882276572254; TR: 0.8979007600118484; QF: 0.10524160524160525; select count(distinct(movie_0.title)) from made_by as made_by_0, movie as movie_0, producer as producer_0, tv_series as tv_series_0 where producer_0.name = "Jennifer Aniston" and tv_series_0.release_year > 2010 and made_by_0.msid = movie_0.mid and made_by_0.msid = tv_series_0.sid and made_by_0.pid = producer_0.pid
TOT: 0.8933631614677946; TR: 0.8979007600118484; QF: 0.1399446061508608; select count(distinct(movie_0.title)) from actor as actor_0, cast as cast_0, directed_by as directed_by_0, director as director_0, movie as movie_0 where actor_0.birth_year > 2010 and director_0.name = "Jennifer Aniston" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid
TOT: 0.8933613396004727; TR: 0.8979007600118484; QF: 0.12172593293218759; select count(distinct(movie_0.title)) from actor as actor_0, cast as cast_0, made_by as made_by_0, movie as movie_0, producer as producer_0 where actor_0.birth_year > 2010 and producer_0.name = "Jennifer Aniston" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid
TOT: 0.8933597502376744; TR: 0.8979007600118484; QF: 0.10583230494995202; select count(distinct(movie_0.title)) from cast as cast_0, directed_by as directed_by_0, director as director_0, movie as movie_0, tv_series as tv_series_0 where director_0.name = "Jennifer Aniston" and tv_series_0.release_year > 2010 and cast_0.msid = movie_0.mid and cast_0.msid = tv_series_0.sid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid


01:38  INFO: ================
01:38  INFO: QUERY 55: Find all movies featuring "Kevin Spacey"
01:38  INFO: ================
104. ROOT: ROOT; NA; ; (0) 
105. Find: CMT; NA; ; (0) 
106. featuring: NT; NA; ; (0) tv_series.title(0.69):| tv_series(0.69):| movie.release_year(0.64):| tv_series.release_year(0.64):| made_by(0.64):| movie.title_aka(0.62):| tv_series.title_aka(0.62):| 
107. movies: NT; NA; all; (0) movie.title(1.0):| movie(1.0):| cast.role(0.95):Movie; Movie F; Movie AD; | company.name(0.95):Movies; Movie; Movie Movie; | tv_series.title(0.84):Movies, Movies, Movi; Movie Mob; Moon Movies; | keyword.keyword(0.83):movie-in-movie; movies-about-movies; b-movie; | actor.name(0.76):| 
109. Kevin Spacey: VTTEXT; NA; ; (0) director.name(1.0):Kevin Spacey; Kevin Spacey; Kevin Spacey Fowler; | actor.name(1.0):Kevin Spacey; Kevin Spacey Fowler; John Spacey; | producer.name(1.0):Kevin Spacey; Kevin Spacey; Kevin Spacey Fowler; | writer.name(1.0):Kevin Spacey; Kevin Spacey; Kevin Pacey; | cast.role(0.86):Kid Kevin Spacey; Kid Kevin Spacey; Kevin Spatz; | company.name(0.71):Kevin Spacey Foundat; Kevin Spacey Foundat; Kevin Spencer; | tv_series.title(0.7):Kevin Spencer; Kevin Spencer; Kevin Seal, Sporting; | 
Find, VB
all, DT
movies, NNS
featuring, VBG
Kevin Spacey, NNP
root(ROOT-0, Find-1)
det(movies-3, all-2)
nsubj(featuring-4, movies-3)
dep(Find-1, featuring-4)
dobj(featuring-4, Kevin Spacey-5)

PARSE TREE:(104) ROOT ROOT
    (105) Find CMT
        (107) movies NT
            (106) featuring NT
                (109) Kevin Spacey VTTEXT


===========
TRANSLATIONS
===========
TOT: 0.8662391053409028; NL: 0.8662391053409028; NL+AG: 0.9626264316569841; NL+QF: 0.8662391053409028; rels: []; projs: [movie_0.title]; preds: [director_0.name = "Kevin Spacey"]; havings: []; superlative: []; blanks: 1
TOT: 0.8662391053409028; NL: 0.8662391053409028; NL+AG: 0.9626264316569841; NL+QF: 0.8662391053409028; rels: []; projs: [movie_0.title]; preds: [actor_0.name = "Kevin Spacey"]; havings: []; superlative: []; blanks: 1
TOT: 0.8662391053409028; NL: 0.8662391053409028; NL+AG: 0.9626264316569841; NL+QF: 0.8662391053409028; rels: []; projs: [movie_0.title]; preds: [producer_0.name = "Kevin Spacey"]; havings: []; superlative: []; blanks: 1
TOT: 0.8662391053409028; NL: 0.8662391053409028; NL+AG: 0.9626264316569841; NL+QF: 0.8662391053409028; rels: []; projs: [movie_0.title]; preds: [writer_0.name = "Kevin Spacey"]; havings: []; superlative: []; blanks: 1
TOT: 0.8344522897223012; NL: 0.8344522897223012; NL+AG: 0.9890291262135922; NL+QF: 0.8344522897223012; rels: []; projs: [movie_0.title]; preds: [tv_series_0.title = "Kevin Spencer"]; havings: []; superlative: []; blanks: 0
TOT: 0.82915619758885; NL: 0.82915619758885; NL+AG: 0.9890291262135922; NL+QF: 0.82915619758885; rels: []; projs: [tv_series_0.title]; preds: [director_0.name = "Kevin Spacey"]; havings: []; superlative: []; blanks: 0
TOT: 0.82915619758885; NL: 0.82915619758885; NL+AG: 0.9890291262135922; NL+QF: 0.82915619758885; rels: []; projs: [tv_series_0.title]; preds: [actor_0.name = "Kevin Spacey"]; havings: []; superlative: []; blanks: 0
TOT: 0.82915619758885; NL: 0.82915619758885; NL+AG: 0.9890291262135922; NL+QF: 0.82915619758885; rels: []; projs: [tv_series_0.title]; preds: [producer_0.name = "Kevin Spacey"]; havings: []; superlative: []; blanks: 0
TOT: 0.82915619758885; NL: 0.82915619758885; NL+AG: 0.9890291262135922; NL+QF: 0.82915619758885; rels: []; projs: [tv_series_0.title]; preds: [writer_0.name = "Kevin Spacey"]; havings: []; superlative: []; blanks: 0
TOT: 0.82915619758885; NL: 0.82915619758885; NL+AG: 0.9890291262135922; NL+QF: 0.82915619758885; rels: []; projs: [tv_series_0.title]; preds: [director_0.name = "Kevin Spacey"]; havings: []; superlative: []; blanks: 0
TOT: 0.82915619758885; NL: 0.82915619758885; NL+AG: 0.9890291262135922; NL+QF: 0.82915619758885; rels: []; projs: [tv_series_0.title]; preds: [actor_0.name = "Kevin Spacey"]; havings: []; superlative: []; blanks: 0
TOT: 0.82915619758885; NL: 0.82915619758885; NL+AG: 0.9890291262135922; NL+QF: 0.82915619758885; rels: []; projs: [tv_series_0.title]; preds: [producer_0.name = "Kevin Spacey"]; havings: []; superlative: []; blanks: 0
TOT: 0.82915619758885; NL: 0.82915619758885; NL+AG: 0.9890291262135922; NL+QF: 0.82915619758885; rels: []; projs: [tv_series_0.title]; preds: [writer_0.name = "Kevin Spacey"]; havings: []; superlative: []; blanks: 0

===========
RESULTS
===========
TOT: 0.8633165728615619; TR: 0.8662391053409028; QF: 0.24090909090909088; select movie_0.title from directed_by as directed_by_0, director as director_0, movie as movie_0 where director_0.name = "Kevin Spacey" and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid
TOT: 0.8633150392454304; TR: 0.8662391053409028; QF: 0.22557292959377842; select movie_0.title from actor as actor_0, cast as cast_0, movie as movie_0 where actor_0.name = "Kevin Spacey" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid
TOT: 0.8633105184821513; TR: 0.8662391053409028; QF: 0.18036529680365296; select movie_0.title from movie as movie_0, writer as writer_0, written_by as written_by_0 where writer_0.name = "Kevin Spacey" and movie_0.mid = written_by_0.msid and writer_0.wid = written_by_0.wid
TOT: 0.863310499970489; TR: 0.8662391053409028; QF: 0.1801801801801802; select movie_0.title from made_by as made_by_0, movie as movie_0, producer as producer_0 where producer_0.name = "Kevin Spacey" and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid
TOT: 0.8620133939316201; TR: 0.8662391053409028; QF: 0.09265048676813384; select movie_0.title from cast as cast_0, made_by as made_by_0, movie as movie_0, producer as producer_0, tv_series as tv_series_0 where producer_0.name = "Kevin Spacey" and cast_0.msid = movie_0.mid and cast_0.msid = tv_series_0.sid and made_by_0.msid = tv_series_0.sid and made_by_0.pid = producer_0.pid
TOT: 0.8620131440344585; TR: 0.8662391053409028; QF: 0.09015151515151515; select movie_0.title from directed_by as directed_by_0, made_by as made_by_0, movie as movie_0, producer as producer_0, tv_series as tv_series_0 where producer_0.name = "Kevin Spacey" and directed_by_0.msid = movie_0.mid and directed_by_0.msid = tv_series_0.sid and made_by_0.msid = tv_series_0.sid and made_by_0.pid = producer_0.pid
TOT: 0.8620128181740444; TR: 0.8662391053409028; QF: 0.08689291101055807; select movie_0.title from cast as cast_0, directed_by as directed_by_0, director as director_0, movie as movie_0, tv_series as tv_series_0 where director_0.name = "Kevin Spacey" and cast_0.msid = movie_0.mid and cast_0.msid = tv_series_0.sid and directed_by_0.did = director_0.did and directed_by_0.msid = tv_series_0.sid
TOT: 0.86201269229484; TR: 0.8662391053409028; QF: 0.0856341189674523; select movie_0.title from copyright as copyright_0, made_by as made_by_0, movie as movie_0, producer as producer_0, tv_series as tv_series_0 where producer_0.name = "Kevin Spacey" and copyright_0.msid = movie_0.mid and copyright_0.msid = tv_series_0.sid and made_by_0.msid = tv_series_0.sid and made_by_0.pid = producer_0.pid
TOT: 0.862012484840711; TR: 0.8662391053409028; QF: 0.08355957767722474; select movie_0.title from cast as cast_0, movie as movie_0, tv_series as tv_series_0, writer as writer_0, written_by as written_by_0 where writer_0.name = "Kevin Spacey" and cast_0.msid = movie_0.mid and cast_0.msid = tv_series_0.sid and tv_series_0.sid = written_by_0.msid and writer_0.wid = written_by_0.wid
TOT: 0.8620122349435494; TR: 0.8662391053409028; QF: 0.08106060606060606; select movie_0.title from directed_by as directed_by_0, movie as movie_0, tv_series as tv_series_0, writer as writer_0, written_by as written_by_0 where writer_0.name = "Kevin Spacey" and directed_by_0.msid = movie_0.mid and directed_by_0.msid = tv_series_0.sid and tv_series_0.sid = written_by_0.msid and writer_0.wid = written_by_0.wid


01:45  INFO: ================
01:45  INFO: QUERY 50: Find the producers of all movies in which "Kate Winslet" is an actor
01:45  INFO: ================
01:52  INFO: ================
01:52  INFO: QUERY 100: How many movies did "Matt Damon" direct?
01:52  INFO: ================
01:59  INFO: ================
01:59  INFO: QUERY 121: Who acted in the most number of movies directed by "Jim Jarmusch"
01:59  INFO: ================
133. ROOT: ROOT; NA; ; (0) 
134. acted: NT; NA; ; (0) movie.release_year(0.63):| tv_series.release_year(0.63):| actor.name(0.62):| actor(0.62):| genre.genre(0.62):| genre(0.62):| made_by(0.61):| 
135. Who: CMT; NA; ; (0) director.name(1.0):| actor.name(1.0):| producer.name(1.0):| writer.name(1.0):| 
136. number of: FT; count; ; (0) 
139. most: FT; max; ; (0) 
140. movies: NT; NA; ; (0) movie.title(1.0):| movie(1.0):| cast.role(0.95):Movie; Movie F; Movie AD; | company.name(0.95):Movies; Movie; Movie Movie; | tv_series.title(0.84):Movies, Movies, Movi; Movie Mob; Moon Movies; | keyword.keyword(0.83):movie-in-movie; movies-about-movies; b-movie; | actor.name(0.76):| 
142. directed: NT; NA; ; (0) directed_by(1.0):| director.name(0.72):| director(0.72):| written_by(0.68):| cast.role(0.67):| cast(0.67):| made_by(0.67):| 
143. Jim Jarmusch: VTTEXT; NA; ; (0) director.name(1.0):Jim Jarmusch; Jim Jarmusch; Tom Jarmusch; | actor.name(1.0):Jim Jarmusch; Jim Jarmusch; Tom Jarmusch; | producer.name(1.0):Jim Jarmusch; Jim Jarmusch; Tom Jarmusch; | writer.name(1.0):Jim Jarmusch; Jim Jarmusch; James R. Jarmusch; | movie.title(0.81):Behind Jim Jarmusch; Behind Jim Jarmusch; Focus on Jim Jarmusc; | cast.role(0.72):Jim Jarmusch's broth; Jim Jarmusch's broth; Jim Jamush; | tv_series.title(0.52):Earthworm Jim; Earthworm Jim; Jim Jam & Sunny; | 
Who, WP
acted, VBD
in, IN
the, DT
most, JJS
number, NN
of, IN
movies, NNS
directed, VBN
by, IN
Jim Jarmusch, NNP
nsubj(acted-2, Who-1)
root(ROOT-0, acted-2)
case(number-6, in-3)
det(number-6, the-4)
amod(number-6, most-5)
nmod(acted-2, number-6)
case(movies-8, of-7)
nmod(number-6, movies-8)
acl(movies-8, directed-9)
case(Jim Jarmusch-11, by-10)
nmod(directed-9, Jim Jarmusch-11)

PARSE TREE:(133) ROOT ROOT
    (135) Who CMT
        (134) acted NT
            (140) movies NT
                (142) directed NT
                    (143) Jim Jarmusch VTTEXT


===========
TRANSLATIONS
===========
TOT: 0.9307196706532547; NL: 0.9307196706532547; NL+AG: 0.9779685024679495; NL+QF: 0.9307196706532547; rels: [directed_by]; projs: [director_0.name]; preds: [director_0.name = "Jim Jarmusch"]; havings: []; superlative: [count(distinct(movie_0.title)) desc limit 1]; blanks: 1
TOT: 0.9307196706532547; NL: 0.9307196706532547; NL+AG: 0.9779685024679495; NL+QF: 0.9307196706532547; rels: [directed_by]; projs: [director_0.name]; preds: [actor_0.name = "Jim Jarmusch"]; havings: []; superlative: [count(distinct(movie_0.title)) desc limit 1]; blanks: 1
TOT: 0.9307196706532547; NL: 0.9307196706532547; NL+AG: 0.9779685024679495; NL+QF: 0.9307196706532547; rels: [directed_by]; projs: [director_0.name]; preds: [producer_0.name = "Jim Jarmusch"]; havings: []; superlative: [count(distinct(movie_0.title)) desc limit 1]; blanks: 1
TOT: 0.9307196706532547; NL: 0.9307196706532547; NL+AG: 0.9779685024679495; NL+QF: 0.9307196706532547; rels: [directed_by]; projs: [director_0.name]; preds: [writer_0.name = "Jim Jarmusch"]; havings: []; superlative: [count(distinct(movie_0.title)) desc limit 1]; blanks: 1
TOT: 0.9307196706532547; NL: 0.9307196706532547; NL+AG: 0.9779685024679495; NL+QF: 0.9307196706532547; rels: [directed_by]; projs: [actor_0.name]; preds: [director_0.name = "Jim Jarmusch"]; havings: []; superlative: [count(distinct(movie_0.title)) desc limit 1]; blanks: 1
TOT: 0.9307196706532547; NL: 0.9307196706532547; NL+AG: 0.9779685024679495; NL+QF: 0.9307196706532547; rels: [directed_by]; projs: [actor_0.name]; preds: [actor_0.name = "Jim Jarmusch"]; havings: []; superlative: [count(distinct(movie_0.title)) desc limit 1]; blanks: 1
TOT: 0.9307196706532547; NL: 0.9307196706532547; NL+AG: 0.9779685024679495; NL+QF: 0.9307196706532547; rels: [directed_by]; projs: [actor_0.name]; preds: [producer_0.name = "Jim Jarmusch"]; havings: []; superlative: [count(distinct(movie_0.title)) desc limit 1]; blanks: 1
TOT: 0.9307196706532547; NL: 0.9307196706532547; NL+AG: 0.9779685024679495; NL+QF: 0.9307196706532547; rels: [directed_by]; projs: [actor_0.name]; preds: [writer_0.name = "Jim Jarmusch"]; havings: []; superlative: [count(distinct(movie_0.title)) desc limit 1]; blanks: 1
TOT: 0.9307196706532547; NL: 0.9307196706532547; NL+AG: 0.9779685024679495; NL+QF: 0.9307196706532547; rels: [directed_by]; projs: [producer_0.name]; preds: [director_0.name = "Jim Jarmusch"]; havings: []; superlative: [count(distinct(movie_0.title)) desc limit 1]; blanks: 1
TOT: 0.9307196706532547; NL: 0.9307196706532547; NL+AG: 0.9779685024679495; NL+QF: 0.9307196706532547; rels: [directed_by]; projs: [producer_0.name]; preds: [actor_0.name = "Jim Jarmusch"]; havings: []; superlative: [count(distinct(movie_0.title)) desc limit 1]; blanks: 1
TOT: 0.9307196706532547; NL: 0.9307196706532547; NL+AG: 0.9779685024679495; NL+QF: 0.9307196706532547; rels: [directed_by]; projs: [producer_0.name]; preds: [producer_0.name = "Jim Jarmusch"]; havings: []; superlative: [count(distinct(movie_0.title)) desc limit 1]; blanks: 1
TOT: 0.9307196706532547; NL: 0.9307196706532547; NL+AG: 0.9779685024679495; NL+QF: 0.9307196706532547; rels: [directed_by]; projs: [producer_0.name]; preds: [writer_0.name = "Jim Jarmusch"]; havings: []; superlative: [count(distinct(movie_0.title)) desc limit 1]; blanks: 1
TOT: 0.9307196706532547; NL: 0.9307196706532547; NL+AG: 0.9779685024679495; NL+QF: 0.9307196706532547; rels: [directed_by]; projs: [writer_0.name]; preds: [director_0.name = "Jim Jarmusch"]; havings: []; superlative: [count(distinct(movie_0.title)) desc limit 1]; blanks: 1
TOT: 0.9307196706532547; NL: 0.9307196706532547; NL+AG: 0.9779685024679495; NL+QF: 0.9307196706532547; rels: [directed_by]; projs: [writer_0.name]; preds: [actor_0.name = "Jim Jarmusch"]; havings: []; superlative: [count(distinct(movie_0.title)) desc limit 1]; blanks: 1
TOT: 0.9307196706532547; NL: 0.9307196706532547; NL+AG: 0.9779685024679495; NL+QF: 0.9307196706532547; rels: [directed_by]; projs: [writer_0.name]; preds: [producer_0.name = "Jim Jarmusch"]; havings: []; superlative: [count(distinct(movie_0.title)) desc limit 1]; blanks: 1
TOT: 0.9307196706532547; NL: 0.9307196706532547; NL+AG: 0.9779685024679495; NL+QF: 0.9307196706532547; rels: [directed_by]; projs: [writer_0.name]; preds: [writer_0.name = "Jim Jarmusch"]; havings: []; superlative: [count(distinct(movie_0.title)) desc limit 1]; blanks: 1

===========
RESULTS
===========
TOT: 0.9258538830027868; TR: 0.9307196706532547; QF: 0.1399446061508608; select director_0.name from actor as actor_0, cast as cast_0, directed_by as directed_by_0, director as director_0, movie as movie_0 where actor_0.name = "Jim Jarmusch" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid group by director_0.name order by count(distinct(movie_0.title)) desc limit 1
TOT: 0.9258538830027868; TR: 0.9307196706532547; QF: 0.1399446061508608; select actor_0.name from actor as actor_0, cast as cast_0, directed_by as directed_by_0, director as director_0, movie as movie_0 where director_0.name = "Jim Jarmusch" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid group by actor_0.name order by count(distinct(movie_0.title)) desc limit 1
TOT: 0.925852526773803; TR: 0.9307196706532547; QF: 0.12638231631382316; select director_0.name from directed_by as directed_by_0, director as director_0, movie as movie_0, writer as writer_0, written_by as written_by_0 where writer_0.name = "Jim Jarmusch" and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and movie_0.mid = written_by_0.msid and writer_0.wid = written_by_0.wid group by director_0.name order by count(distinct(movie_0.title)) desc limit 1
TOT: 0.925852526773803; TR: 0.9307196706532547; QF: 0.12638231631382316; select writer_0.name from directed_by as directed_by_0, director as director_0, movie as movie_0, writer as writer_0, written_by as written_by_0 where director_0.name = "Jim Jarmusch" and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and movie_0.mid = written_by_0.msid and writer_0.wid = written_by_0.wid group by writer_0.name order by count(distinct(movie_0.title)) desc limit 1
TOT: 0.9258525212203044; TR: 0.9307196706532547; QF: 0.12632678132678132; select director_0.name from directed_by as directed_by_0, director as director_0, made_by as made_by_0, movie as movie_0, producer as producer_0 where producer_0.name = "Jim Jarmusch" and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid group by director_0.name order by count(distinct(movie_0.title)) desc limit 1
TOT: 0.9258525212203044; TR: 0.9307196706532547; QF: 0.12632678132678132; select producer_0.name from directed_by as directed_by_0, director as director_0, made_by as made_by_0, movie as movie_0, producer as producer_0 where director_0.name = "Jim Jarmusch" and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid group by producer_0.name order by count(distinct(movie_0.title)) desc limit 1
TOT: 0.9258472566599694; TR: 0.9307196706532547; QF: 0.07368117797695262; select director_0.name from directed_by as directed_by_0, directed_by as directed_by_1, director as director_0, director as director_1, movie as movie_0 where director_1.name = "Jim Jarmusch" and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and directed_by_1.did = director_1.did and directed_by_1.msid = movie_0.mid group by director_0.name order by count(distinct(movie_0.title)) desc limit 1
TOT: 0.9254632936384759; TR: 0.9307196706532547; QF: 0.09161616161616161; select director_0.name from directed_by as directed_by_0, director as director_0, made_by as made_by_0, movie as movie_0, producer as producer_0, tv_series as tv_series_0 where producer_0.name = "Jim Jarmusch" and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and directed_by_0.msid = tv_series_0.sid and made_by_0.msid = tv_series_0.sid and made_by_0.pid = producer_0.pid group by director_0.name order by count(distinct(movie_0.title)) desc limit 1
TOT: 0.9254632936384759; TR: 0.9307196706532547; QF: 0.09161616161616161; select producer_0.name from directed_by as directed_by_0, director as director_0, made_by as made_by_0, movie as movie_0, producer as producer_0, tv_series as tv_series_0 where director_0.name = "Jim Jarmusch" and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and directed_by_0.msid = tv_series_0.sid and made_by_0.msid = tv_series_0.sid and made_by_0.pid = producer_0.pid group by producer_0.name order by count(distinct(movie_0.title)) desc limit 1
TOT: 0.9254626875778699; TR: 0.9307196706532547; QF: 0.08555555555555555; select director_0.name from directed_by as directed_by_0, director as director_0, movie as movie_0, tv_series as tv_series_0, writer as writer_0, written_by as written_by_0 where writer_0.name = "Jim Jarmusch" and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and directed_by_0.msid = tv_series_0.sid and tv_series_0.sid = written_by_0.msid and writer_0.wid = written_by_0.wid group by director_0.name order by count(distinct(movie_0.title)) desc limit 1


02:08  INFO: ================
02:08  INFO: QUERY 39: Which movies did "Alfred Hitchcock" direct?
02:08  INFO: ================
146. ROOT: ROOT; NA; ; (0) 
147. direct: NT; NA; ; (0) directed_by(1.0):| director.name(0.72):| director(0.72):| written_by(0.68):| cast.role(0.67):| cast(0.67):| made_by(0.67):| 
148. movies: NT; NA; ; (0) movie.title(1.0):| movie(1.0):| cast.role(0.95):Movie; Movie F; Movie AD; | company.name(0.95):Movies; Movie; Movie Movie; | tv_series.title(0.84):Movies, Movies, Movi; Movie Mob; Moon Movies; | keyword.keyword(0.83):movie-in-movie; movies-about-movies; b-movie; | actor.name(0.76):| 
151. Alfred Hitchcock: VTTEXT; NA; ; (0) director.name(1.0):Alfred Hitchcock; Alfred Hitchcock; Sir Alfred Hitchcock; | actor.name(1.0):Alfred Hitchcock; Alfred Hitchcock; Alfred Hitchcock; | producer.name(1.0):Alfred Hitchcock; Alfred Hitchcock; Sir Alfred Hitchcock; | writer.name(1.0):Alfred Hitchcock; Alfred Hitchcock; Sir Alfred Hitchcock; | movie.title(0.85):Alfred Hitchcock's G; Alfred Hitchcock's G; Alfred Hitchcock and; | tv_series.title(0.85):Ciclo Alfred Hitchco; Ciclo Alfred Hitchco; Alfred Hitchcock Pre; | cast.role(0.84):Alfred Hitchcock fig; Alfred Hitchcock fig; Alfred Hitchcock fig; | 
Which, WDT
movies, NN
did, VBD
Alfred Hitchcock, NNP
direct, VB
det(movies-2, Which-1)
dobj(direct-5, movies-2)
aux(direct-5, did-3)
nsubj(direct-5, Alfred Hitchcock-4)
root(ROOT-0, direct-5)

PARSE TREE:(146) ROOT ROOT
    (147) direct NT
        (148) movies NT
        (151) Alfred Hitchcock VTTEXT


===========
TRANSLATIONS
===========
TOT: 0.7937005259840998; NL: 0.6875344335370706; NL+AG: 0.939080334171806; NL+QF: 0.7937005259840998; rels: []; projs: [movie_0.title]; preds: [actor_0.name = "Alfred Hitchcock"]; havings: []; superlative: []; blanks: 1
TOT: 0.7735872574402521; NL: 0.6299605249474366; NL+AG: 0.939080334171806; NL+QF: 0.7735872574402521; rels: [directed_by]; projs: [movie_0.title]; preds: [director_0.name = "Alfred Hitchcock"]; havings: []; superlative: []; blanks: 0
TOT: 0.7526840991457382; NL: 0.6299605249474366; NL+AG: 0.939080334171806; NL+QF: 0.7526840991457382; rels: [directed_by]; projs: [movie_0.title]; preds: [actor_0.name = "Alfred Hitchcock"]; havings: []; superlative: []; blanks: 0
TOT: 0.7394177869261628; NL: 0.6875344335370706; NL+AG: 0.939080334171806; NL+QF: 0.7394177869261628; rels: []; projs: [movie_0.title]; preds: [director_0.name = "Alfred Hitchcock"]; havings: []; superlative: []; blanks: 1
TOT: 0.7199357891220765; NL: 0.6875344335370706; NL+AG: 0.939080334171806; NL+QF: 0.7199357891220765; rels: []; projs: [movie_0.title]; preds: [writer_0.name = "Alfred Hitchcock"]; havings: []; superlative: []; blanks: 1
TOT: 0.7041078694647765; NL: 0.6875344335370706; NL+AG: 0.939080334171806; NL+QF: 0.7041078694647765; rels: []; projs: [movie_0.title]; preds: [producer_0.name = "Alfred Hitchcock"]; havings: []; superlative: []; blanks: 1
TOT: 0.7009493608261871; NL: 0.6299605249474366; NL+AG: 0.939080334171806; NL+QF: 0.7009493608261871; rels: [directed_by]; projs: [movie_0.title]; preds: [writer_0.name = "Alfred Hitchcock"]; havings: []; superlative: []; blanks: 0
TOT: 0.6992690848628278; NL: 0.5933575991536099; NL+AG: 0.9206028463743752; NL+QF: 0.6992690848628278; rels: []; projs: [actor_0.name]; preds: [cast_0.role = "Alfred Hitchcock figure"]; havings: []; superlative: []; blanks: 1
TOT: 0.6937313197181267; NL: 0.6299605249474366; NL+AG: 0.939080334171806; NL+QF: 0.6937313197181267; rels: [directed_by]; projs: [movie_0.title]; preds: [producer_0.name = "Alfred Hitchcock"]; havings: []; superlative: []; blanks: 0
TOT: 0.6817369067421976; NL: 0.6495571451939826; NL+AG: 0.9206028463743752; NL+QF: 0.6817369067421976; rels: []; projs: [movie_0.title]; preds: [cast_0.role = "Alfred Hitchcock figure"]; havings: []; superlative: []; blanks: 1
TOT: 0.6780202285627194; NL: 0.5956054507747524; NL+AG: 0.9208245173419726; NL+QF: 0.6780202285627194; rels: [directed_by]; projs: [movie_0.title]; preds: [movie_0.title = "Alfred Hitchcock's Gun"]; havings: []; superlative: []; blanks: 0

===========
RESULTS
===========
TOT: 0.7915018456821955; TR: 0.7937005259840998; QF: 0.22557292959377842; select movie_0.title from actor as actor_0, cast as cast_0, movie as movie_0 where actor_0.name = "Alfred Hitchcock" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid
TOT: 0.7901984782514602; TR: 0.7937005259840998; QF: 0.07542931751792512; select movie_0.title from actor as actor_0, cast as cast_0, directed_by as directed_by_0, movie as movie_0, tv_series as tv_series_0 where actor_0.name = "Alfred Hitchcock" and actor_0.aid = cast_0.aid and cast_0.msid = tv_series_0.sid and directed_by_0.msid = movie_0.mid and directed_by_0.msid = tv_series_0.sid
TOT: 0.7901980265118418; TR: 0.7937005259840998; QF: 0.07091192133386226; select movie_0.title from actor as actor_0, cast as cast_0, copyright as copyright_0, movie as movie_0, tv_series as tv_series_0 where actor_0.name = "Alfred Hitchcock" and actor_0.aid = cast_0.aid and cast_0.msid = tv_series_0.sid and copyright_0.msid = movie_0.mid and copyright_0.msid = tv_series_0.sid
TOT: 0.7901966866871686; TR: 0.7937005259840998; QF: 0.057513674602282204; select movie_0.title from actor as actor_0, cast as cast_0, made_by as made_by_0, movie as movie_0, tv_series as tv_series_0 where actor_0.name = "Alfred Hitchcock" and actor_0.aid = cast_0.aid and cast_0.msid = tv_series_0.sid and made_by_0.msid = movie_0.mid and made_by_0.msid = tv_series_0.sid
TOT: 0.7901961616645383; TR: 0.7937005259840998; QF: 0.05226344829942432; select movie_0.title from actor as actor_0, cast as cast_0, movie as movie_0, tags as tags_0, tv_series as tv_series_0 where actor_0.name = "Alfred Hitchcock" and actor_0.aid = cast_0.aid and cast_0.msid = tv_series_0.sid and movie_0.mid = tags_0.msid and tags_0.msid = tv_series_0.sid
TOT: 0.7901957831497582; TR: 0.7937005259840998; QF: 0.048478300498414936; select movie_0.title from actor as actor_0, cast as cast_0, classification as classification_0, movie as movie_0, tv_series as tv_series_0 where actor_0.name = "Alfred Hitchcock" and actor_0.aid = cast_0.aid and cast_0.msid = tv_series_0.sid and classification_0.msid = movie_0.mid and classification_0.msid = tv_series_0.sid
TOT: 0.7901957831497582; TR: 0.7937005259840998; QF: 0.048478300498414936; select movie_0.title from actor as actor_0, cast as cast_0, movie as movie_0, tv_series as tv_series_0, written_by as written_by_0 where actor_0.name = "Alfred Hitchcock" and actor_0.aid = cast_0.aid and cast_0.msid = tv_series_0.sid and movie_0.mid = written_by_0.msid and tv_series_0.sid = written_by_0.msid
TOT: 0.7901948912774761; TR: 0.7937005259840998; QF: 0.03955957767722473; select movie_0.title from actor as actor_0, cast as cast_0, cast as cast_1, movie as movie_0, tv_series as tv_series_0 where actor_0.name = "Alfred Hitchcock" and actor_0.aid = cast_1.aid and cast_0.msid = movie_0.mid and cast_0.msid = tv_series_0.sid and cast_1.msid = tv_series_0.sid
TOT: 0.7895110820914342; TR: 0.7937005259840998; QF: 0.05713084383970459; select movie_0.title from actor as actor_0, cast as cast_0, directed_by as directed_by_0, directed_by as directed_by_1, director as director_0, movie as movie_0, tv_series as tv_series_0 where actor_0.name = "Alfred Hitchcock" and actor_0.aid = cast_0.aid and cast_0.msid = tv_series_0.sid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and directed_by_1.did = director_0.did and directed_by_1.msid = tv_series_0.sid
TOT: 0.7895103330667962; TR: 0.7937005259840998; QF: 0.049640597460569334; select movie_0.title from actor as actor_0, cast as cast_0, company as company_0, copyright as copyright_0, copyright as copyright_1, movie as movie_0, tv_series as tv_series_0 where actor_0.name = "Alfred Hitchcock" and actor_0.aid = cast_0.aid and cast_0.msid = tv_series_0.sid and company_0.id = copyright_0.cid and company_0.id = copyright_1.cid and copyright_0.msid = movie_0.mid and copyright_1.msid = tv_series_0.sid


02:13  INFO: ================
02:13  INFO: QUERY 10: In what year was "Kevin Spacey" born?
02:13  INFO: ================
02:21  INFO: ================
02:21  INFO: QUERY 13: What is the nationality of "Kevin Spacey"?
02:21  INFO: ================
02:25  INFO: ================
02:25  INFO: QUERY 74: Find all actors from Canada who acted in "James Bond" movies
02:25  INFO: ================
02:35  INFO: ================
02:35  INFO: QUERY 83: What are the major roles in the movie "Daddy Long Legs"
02:35  INFO: ================
181. ROOT: ROOT; NA; ; (0) 
182. What: CMT; NA; ; (0) 
184. roles: VTTEXT; NA; ; (0) movie.title(0.95):Roles; Rolê; The Role; | tv_series.title(0.95):Roles; Role Call; Role Play; | cast.role(0.82):| actor.name(0.69):| actor(0.69):| cast(0.64):| director.name(0.64):| 
186. major: VTTEXT; NA; ; (0) movie.title(1.0):Major; Major!; Major Minors; | director.name(1.0):Major; Major; Major; | actor.name(1.0):Major; Major; Major; | producer.name(1.0):Major; Major; BP Major; | company.name(1.0):Major; Major Zeus; Major Networks; | writer.name(1.0):Major; JL Major; BP Major; | cast.role(0.94):Major Major; 'Major'; Maj. Major Major; | 
187. Daddy Long Legs: VTTEXT; NA; ; (0) movie.title(0.95):Daddy Long Legs; Daddy Long Legs; Daddy Long Legs; | director.name(0.95):Daddy Long Legs; Daddy Long Legs; Daddy Long Legs of W; | actor.name(0.95):Daddy Long Legs; Daddy Long Legs; Daddy Longlegs; | cast.role(0.86):Lady Long Legs; Long Leg; Sweet Daddy Longlegs; | producer.name(0.76):Long Legs; Long Legs; Din Long Lee; | writer.name(0.61):Adam Long; Adam Long; Cody Long; | tv_series.title(0.54):A Long Long Crime Ag; A Long Long Crime Ag; The Long Gray Line; | 
190. movie: NT; NA; ; (0) movie.title(1.0):| movie(1.0):| cast.role(0.95):Movie; Movie F; Movie AD; | company.name(0.95):Movie; Movies; Movie Movie; | keyword.keyword(0.83):movie-in-movie; b-movie; z-movie; | actor.name(0.76):| actor(0.76):| 
What, WP
are, VBP
the, DT
major, JJ
roles, NNS
in, IN
the, DT
movie, NN
Daddy Long Legs, NNS
root(ROOT-0, What-1)
cop(What-1, are-2)
det(roles-5, the-3)
amod(roles-5, major-4)
nsubj(What-1, roles-5)
case(Daddy Long Legs-9, in-6)
det(Daddy Long Legs-9, the-7)
compound(Daddy Long Legs-9, movie-8)
nmod(roles-5, Daddy Long Legs-9)

PARSE TREE:(181) ROOT ROOT
    (182) What CMT
        (184) roles VTTEXT
            (186) major VTTEXT
            (187) Daddy Long Legs VTTEXT
                (190) movie NT


===========
TRANSLATIONS
===========
TOT: 0.9364940320609404; NL: 0.9364940320609404; NL+AG: 0.991287907227616; NL+QF: 0.9364940320609404; rels: []; projs: [cast_0.role]; preds: [movie_0.title = "Major",movie_0.title = "Daddy Long Legs"]; havings: []; superlative: []; blanks: 0
TOT: 0.9364940320609404; NL: 0.9364940320609404; NL+AG: 0.991287907227616; NL+QF: 0.9364940320609404; rels: []; projs: [cast_0.role]; preds: [director_0.name = "Major",movie_0.title = "Daddy Long Legs"]; havings: []; superlative: []; blanks: 0
TOT: 0.9364940320609404; NL: 0.9364940320609404; NL+AG: 0.991287907227616; NL+QF: 0.9364940320609404; rels: []; projs: [cast_0.role]; preds: [actor_0.name = "Major",movie_0.title = "Daddy Long Legs"]; havings: []; superlative: []; blanks: 0
TOT: 0.9364940320609404; NL: 0.9364940320609404; NL+AG: 0.991287907227616; NL+QF: 0.9364940320609404; rels: []; projs: [cast_0.role]; preds: [producer_0.name = "Major",movie_0.title = "Daddy Long Legs"]; havings: []; superlative: []; blanks: 0
TOT: 0.9364940320609404; NL: 0.9364940320609404; NL+AG: 0.991287907227616; NL+QF: 0.9364940320609404; rels: []; projs: [cast_0.role]; preds: [company_0.name = "Major",movie_0.title = "Daddy Long Legs"]; havings: []; superlative: []; blanks: 0
TOT: 0.9364940320609404; NL: 0.9364940320609404; NL+AG: 0.991287907227616; NL+QF: 0.9364940320609404; rels: []; projs: [cast_0.role]; preds: [writer_0.name = "Major",movie_0.title = "Daddy Long Legs"]; havings: []; superlative: []; blanks: 0
TOT: 0.9203479259126857; NL: 0.9182894476021624; NL+AG: 0.9852484681293937; NL+QF: 0.9203479259126857; rels: []; projs: [cast_0.role]; preds: [cast_0.role = "Major Major",movie_0.title = "Daddy Long Legs"]; havings: []; superlative: []; blanks: 0
TOT: 0.9153722211188877; NL: 0.88222320096765; NL+AG: 0.9902481121898598; NL+QF: 0.9153722211188877; rels: []; projs: [actor_0.name]; preds: [movie_0.title = "Major",movie_0.title = "Daddy Long Legs"]; havings: []; superlative: []; blanks: 0
TOT: 0.9072945538781675; NL: 0.8650735916549619; NL+AG: 0.9842086730916376; NL+QF: 0.9072945538781675; rels: []; projs: [actor_0.name]; preds: [cast_0.role = "Major Major",movie_0.title = "Daddy Long Legs"]; havings: []; superlative: []; blanks: 0
TOT: 0.9028875378827855; NL: 0.88222320096765; NL+AG: 0.9902481121898598; NL+QF: 0.9028875378827855; rels: []; projs: [actor_0.name]; preds: [director_0.name = "Major",movie_0.title = "Daddy Long Legs"]; havings: []; superlative: []; blanks: 0
TOT: 0.9019654209422344; NL: 0.88222320096765; NL+AG: 0.9902481121898598; NL+QF: 0.9019654209422344; rels: []; projs: [actor_0.name]; preds: [actor_0.name = "Major",movie_0.title = "Daddy Long Legs"]; havings: []; superlative: []; blanks: 0

===========
RESULTS
===========
TOT: 0.9328674166982677; TR: 0.9364940320609404; QF: 0.22557292959377842; select cast_0.role from actor as actor_0, cast as cast_0, movie as movie_0 where actor_0.name = "Major" and movie_0.title = "Daddy Long Legs" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid
TOT: 0.932095875756968; TR: 0.9364940320609404; QF: 0.16784016636957813; select cast_0.role from cast as cast_0, directed_by as directed_by_0, director as director_0, movie as movie_0 where director_0.name = "Major" and movie_0.title = "Daddy Long Legs" and cast_0.msid = movie_0.mid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid
TOT: 0.9320938097262907; TR: 0.9364940320609404; QF: 0.14717985959816024; select cast_0.role from cast as cast_0, company as company_0, copyright as copyright_0, movie as movie_0 where company_0.name = "Major" and movie_0.title = "Daddy Long Legs" and cast_0.msid = movie_0.mid and company_0.id = copyright_0.cid and copyright_0.msid = movie_0.mid
TOT: 0.9320928485672627; TR: 0.9364940320609404; QF: 0.13756826931685917; select cast_0.role from cast as cast_0, movie as movie_0, writer as writer_0, written_by as written_by_0 where movie_0.title = "Daddy Long Legs" and writer_0.name = "Major" and cast_0.msid = movie_0.mid and movie_0.mid = written_by_0.msid and writer_0.wid = written_by_0.wid
TOT: 0.9320928393114315; TR: 0.9364940320609404; QF: 0.13747571100512276; select cast_0.role from cast as cast_0, made_by as made_by_0, movie as movie_0, producer as producer_0 where movie_0.title = "Daddy Long Legs" and producer_0.name = "Major" and cast_0.msid = movie_0.mid and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid
TOT: 0.931566528960215; TR: 0.9364940320609404; QF: 0.10022624434389141; select cast_0.role from cast as cast_0, company as company_0, copyright as copyright_0, movie as movie_0, tv_series as tv_series_0 where company_0.name = "Major" and movie_0.title = "Daddy Long Legs" and cast_0.msid = movie_0.mid and cast_0.msid = tv_series_0.sid and company_0.id = copyright_0.cid and copyright_0.msid = tv_series_0.sid
TOT: 0.9315657713844574; TR: 0.9364940320609404; QF: 0.09265048676813384; select cast_0.role from cast as cast_0, made_by as made_by_0, movie as movie_0, producer as producer_0, tv_series as tv_series_0 where movie_0.title = "Daddy Long Legs" and producer_0.name = "Major" and cast_0.msid = movie_0.mid and cast_0.msid = tv_series_0.sid and made_by_0.msid = tv_series_0.sid and made_by_0.pid = producer_0.pid
TOT: 0.9315651956268817; TR: 0.9364940320609404; QF: 0.08689291101055807; select cast_0.role from cast as cast_0, directed_by as directed_by_0, director as director_0, movie as movie_0, tv_series as tv_series_0 where director_0.name = "Major" and movie_0.title = "Daddy Long Legs" and cast_0.msid = movie_0.mid and cast_0.msid = tv_series_0.sid and directed_by_0.did = director_0.did and directed_by_0.msid = tv_series_0.sid
TOT: 0.9315648622935483; TR: 0.9364940320609404; QF: 0.08355957767722474; select cast_0.role from cast as cast_0, movie as movie_0, tv_series as tv_series_0, writer as writer_0, written_by as written_by_0 where movie_0.title = "Daddy Long Legs" and writer_0.name = "Major" and cast_0.msid = movie_0.mid and cast_0.msid = tv_series_0.sid and tv_series_0.sid = written_by_0.msid and writer_0.wid = written_by_0.wid
TOT: 0.9315648524896267; TR: 0.9364940320609404; QF: 0.08346153846153846; select cast_0.role from cast as cast_0, directed_by as directed_by_0, director as director_0, movie as movie_0, tv_series as tv_series_0 where director_0.name = "Major" and movie_0.title = "Daddy Long Legs" and cast_0.msid = tv_series_0.sid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and directed_by_0.msid = tv_series_0.sid


02:43  INFO: ================
02:43  INFO: QUERY 128: What is the latest movie by "Jim Jarmusch"
02:43  INFO: ================
192. ROOT: ROOT; NA; ; (0) 
193. What: CMT; NA; ; (0) 
195. movie: NT; NA; ; (0) movie.title(1.0):| movie(1.0):| cast.role(0.95):Movie; Movie F; Movie AD; | company.name(0.95):Movie; Movies; Movie Movie; | keyword.keyword(0.83):movie-in-movie; b-movie; z-movie; | actor.name(0.76):| actor(0.76):| 
197. latest: FT; max; ; (0) 
198. Jim Jarmusch: VTTEXT; NA; ; (0) director.name(1.0):Jim Jarmusch; Jim Jarmusch; Tom Jarmusch; | actor.name(1.0):Jim Jarmusch; Jim Jarmusch; Tom Jarmusch; | producer.name(1.0):Jim Jarmusch; Jim Jarmusch; Tom Jarmusch; | writer.name(1.0):Jim Jarmusch; Jim Jarmusch; James R. Jarmusch; | movie.title(0.81):Behind Jim Jarmusch; Behind Jim Jarmusch; Focus on Jim Jarmusc; | cast.role(0.72):Jim Jarmusch's broth; Jim Jarmusch's broth; Jim Jamush; | tv_series.title(0.52):Earthworm Jim; Earthworm Jim; Jim Jam & Sunny; | 
What, WP
is, VBZ
the, DT
latest, JJS
movie, NN
by, IN
Jim Jarmusch, NNP
root(ROOT-0, What-1)
cop(What-1, is-2)
det(movie-5, the-3)
amod(movie-5, latest-4)
nsubj(What-1, movie-5)
case(Jim Jarmusch-7, by-6)
nmod(movie-5, Jim Jarmusch-7)

PARSE TREE:(192) ROOT ROOT
    (193) What CMT
        (195) movie NT
            (198) Jim Jarmusch VTTEXT


===========
TRANSLATIONS
===========

===========
RESULTS
===========


02:43  INFO: ================
02:43  INFO: QUERY 114: Find all movies that star both "Angelina Jolie" and "Brad Pitt"
02:43  INFO: ================
201. ROOT: ROOT; NA; ; (0) 
202. Find: CMT; NA; ; (0) 
203. movies: NT; NA; all; (0) movie.title(1.0):| movie(1.0):| cast.role(0.95):Movie; Movie F; Movie AD; | company.name(0.95):Movies; Movie; Movie Movie; | tv_series.title(0.84):Movies, Movies, Movi; Movie Mob; Moon Movies; | keyword.keyword(0.83):movie-in-movie; movies-about-movies; b-movie; | actor.name(0.76):| 
205. star: NT; NA; ; (0) actor.name(0.73):| actor(0.73):| writer.name(0.69):| writer(0.69):| cast.role(0.66):| cast(0.66):| producer.name(0.65):| 
207. Angelina Jolie: VTTEXT; NA; ; (0) director.name(1.0):Angelina Jolie; Angelina Jolie; Angelina Jolie Pitt; | actor.name(1.0):Angelina Jolie; Angelina Jolie; Angelina Jolie Pitt; | producer.name(1.0):Angelina Jolie; Angelina Jolie; Angelina Jolie Pitt; | writer.name(1.0):Angelina Jolie; Angelina Jolie; Angelina Jolie Pitt; | cast.role(0.82):Angelina Jones; Angelina John; Angelina Jones; | movie.title(0.78):Angelina; Angelina; Angelina; | keyword.keyword(0.62):referece-to-angelina; referece-to-angelina; | 
210. Brad Pitt: VTTEXT; NA; ; (0) actor.name(1.0):Brad Pitt; Brad Pitt; bRad sPitt; | cast.role(1.0):Brad Pitt'; Brad Pitt'; Brad Pitt #1; | producer.name(1.0):Brad Pitt; Brad Pitt; Mad Pitt; | director.name(0.78):Brad Pruitt; Brad Pruitt; Brad Witty; | writer.name(0.78):Brad Pruitt; Brad Pruitt; Brad Witt; | movie.title(0.72):Brad Pitt Video Port; Brad Pitt Video Port; Brad; | actor.birth_city(0.61):Brad; Brad; Pitt Meadows; | 
Find, VB
all, DT
movies, NNS
that, WDT
star, VB
both, CC
Angelina Jolie, NNP
and, CC
Brad Pitt, NNP
root(ROOT-0, Find-1)
det(movies-3, all-2)
dobj(Find-1, movies-3)
nsubj(star-5, that-4)
acl:relcl(movies-3, star-5)
cc:preconj(Angelina Jolie-7, both-6)
dobj(star-5, Angelina Jolie-7)
cc(Angelina Jolie-7, and-8)
conj(Angelina Jolie-7, Brad Pitt-9)

PARSE TREE:(201) ROOT ROOT
    (202) Find CMT
        (203) movies NT
            (205) star NT
                (207) Angelina Jolie VTTEXT
                (210) Brad Pitt VTTEXT


===========
TRANSLATIONS
===========
TOT: 1.0; NL: 1.0; NL+AG: 1.0; NL+QF: 1.0; rels: []; projs: [movie_0.title]; preds: [director_0.name = "Angelina Jolie",actor_0.name = "Brad Pitt"]; havings: []; superlative: []; blanks: 0
TOT: 1.0; NL: 1.0; NL+AG: 1.0; NL+QF: 1.0; rels: []; projs: [movie_0.title]; preds: [actor_0.name = "Angelina Jolie",actor_0.name = "Brad Pitt"]; havings: []; superlative: []; blanks: 0
TOT: 1.0; NL: 1.0; NL+AG: 1.0; NL+QF: 1.0; rels: []; projs: [movie_0.title]; preds: [actor_0.name = "Angelina Jolie",cast_0.role = "Brad Pitt'"]; havings: []; superlative: []; blanks: 0
TOT: 1.0; NL: 1.0; NL+AG: 1.0; NL+QF: 1.0; rels: []; projs: [movie_0.title]; preds: [actor_0.name = "Angelina Jolie",producer_0.name = "Brad Pitt"]; havings: []; superlative: []; blanks: 0
TOT: 1.0; NL: 1.0; NL+AG: 1.0; NL+QF: 1.0; rels: []; projs: [movie_0.title]; preds: [actor_0.name = "Angelina Jolie",actor_0.name = "Brad Pitt"]; havings: []; superlative: []; blanks: 0
TOT: 1.0; NL: 1.0; NL+AG: 1.0; NL+QF: 1.0; rels: []; projs: [movie_0.title]; preds: [producer_0.name = "Angelina Jolie",actor_0.name = "Brad Pitt"]; havings: []; superlative: []; blanks: 0
TOT: 1.0; NL: 1.0; NL+AG: 1.0; NL+QF: 1.0; rels: []; projs: [movie_0.title]; preds: [writer_0.name = "Angelina Jolie",actor_0.name = "Brad Pitt"]; havings: []; superlative: []; blanks: 0
TOT: 1.0; NL: 1.0; NL+AG: 1.0; NL+QF: 1.0; rels: []; projs: [movie_0.title]; preds: [writer_0.name = "Angelina Jolie",actor_0.name = "Brad Pitt"]; havings: []; superlative: []; blanks: 0
TOT: 1.0; NL: 1.0; NL+AG: 1.0; NL+QF: 1.0; rels: []; projs: [movie_0.title]; preds: [writer_0.name = "Angelina Jolie",cast_0.role = "Brad Pitt'"]; havings: []; superlative: []; blanks: 0
TOT: 1.0; NL: 1.0; NL+AG: 1.0; NL+QF: 1.0; rels: []; projs: [movie_0.title]; preds: [writer_0.name = "Angelina Jolie",producer_0.name = "Brad Pitt"]; havings: []; superlative: []; blanks: 0
TOT: 1.0; NL: 1.0; NL+AG: 1.0; NL+QF: 1.0; rels: []; projs: [movie_0.title]; preds: [director_0.name = "Angelina Jolie",cast_0.role = "Brad Pitt'"]; havings: []; superlative: []; blanks: 0
TOT: 1.0; NL: 1.0; NL+AG: 1.0; NL+QF: 1.0; rels: []; projs: [movie_0.title]; preds: [actor_0.name = "Angelina Jolie",cast_0.role = "Brad Pitt'"]; havings: []; superlative: []; blanks: 0
TOT: 1.0; NL: 1.0; NL+AG: 1.0; NL+QF: 1.0; rels: []; projs: [movie_0.title]; preds: [producer_0.name = "Angelina Jolie",cast_0.role = "Brad Pitt'"]; havings: []; superlative: []; blanks: 0
TOT: 1.0; NL: 1.0; NL+AG: 1.0; NL+QF: 1.0; rels: []; projs: [movie_0.title]; preds: [writer_0.name = "Angelina Jolie",cast_0.role = "Brad Pitt'"]; havings: []; superlative: []; blanks: 0
TOT: 1.0; NL: 1.0; NL+AG: 1.0; NL+QF: 1.0; rels: []; projs: [movie_0.title]; preds: [director_0.name = "Angelina Jolie",producer_0.name = "Brad Pitt"]; havings: []; superlative: []; blanks: 0
TOT: 1.0; NL: 1.0; NL+AG: 1.0; NL+QF: 1.0; rels: []; projs: [movie_0.title]; preds: [actor_0.name = "Angelina Jolie",producer_0.name = "Brad Pitt"]; havings: []; superlative: []; blanks: 0
TOT: 1.0; NL: 1.0; NL+AG: 1.0; NL+QF: 1.0; rels: []; projs: [movie_0.title]; preds: [producer_0.name = "Angelina Jolie",actor_0.name = "Brad Pitt"]; havings: []; superlative: []; blanks: 0
TOT: 1.0; NL: 1.0; NL+AG: 1.0; NL+QF: 1.0; rels: []; projs: [movie_0.title]; preds: [producer_0.name = "Angelina Jolie",cast_0.role = "Brad Pitt'"]; havings: []; superlative: []; blanks: 0
TOT: 1.0; NL: 1.0; NL+AG: 1.0; NL+QF: 1.0; rels: []; projs: [movie_0.title]; preds: [producer_0.name = "Angelina Jolie",producer_0.name = "Brad Pitt"]; havings: []; superlative: []; blanks: 0
TOT: 1.0; NL: 1.0; NL+AG: 1.0; NL+QF: 1.0; rels: []; projs: [movie_0.title]; preds: [producer_0.name = "Angelina Jolie",producer_0.name = "Brad Pitt"]; havings: []; superlative: []; blanks: 0
TOT: 1.0; NL: 1.0; NL+AG: 1.0; NL+QF: 1.0; rels: []; projs: [movie_0.title]; preds: [writer_0.name = "Angelina Jolie",producer_0.name = "Brad Pitt"]; havings: []; superlative: []; blanks: 0

===========
RESULTS
===========
TOT: 0.9957383249579367; TR: 1.0; QF: 0.22557292959377842; select movie_0.title from actor as actor_0, cast as cast_0, movie as movie_0 where actor_0.name = "Angelina Jolie" and cast_0.role = "Brad Pitt'" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid
TOT: 0.994966784016637; TR: 1.0; QF: 0.16784016636957813; select movie_0.title from cast as cast_0, directed_by as directed_by_0, director as director_0, movie as movie_0 where cast_0.role = "Brad Pitt'" and director_0.name = "Angelina Jolie" and cast_0.msid = movie_0.mid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid
TOT: 0.9949637568269317; TR: 1.0; QF: 0.13756826931685917; select movie_0.title from cast as cast_0, movie as movie_0, writer as writer_0, written_by as written_by_0 where cast_0.role = "Brad Pitt'" and writer_0.name = "Angelina Jolie" and cast_0.msid = movie_0.mid and movie_0.mid = written_by_0.msid and writer_0.wid = written_by_0.wid
TOT: 0.9949637475711005; TR: 1.0; QF: 0.13747571100512276; select movie_0.title from cast as cast_0, made_by as made_by_0, movie as movie_0, producer as producer_0 where cast_0.role = "Brad Pitt'" and producer_0.name = "Angelina Jolie" and cast_0.msid = movie_0.mid and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid
TOT: 0.9944414090560647; TR: 1.0; QF: 0.1399446061508608; select movie_0.title from actor as actor_0, cast as cast_0, directed_by as directed_by_0, director as director_0, movie as movie_0 where actor_0.name = "Brad Pitt" and director_0.name = "Angelina Jolie" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid
TOT: 0.9944400472735823; TR: 1.0; QF: 0.12632678132678132; select movie_0.title from directed_by as directed_by_0, director as director_0, made_by as made_by_0, movie as movie_0, producer as producer_0 where director_0.name = "Angelina Jolie" and producer_0.name = "Brad Pitt" and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid
TOT: 0.9944395927422415; TR: 1.0; QF: 0.12178146791922942; select movie_0.title from actor as actor_0, cast as cast_0, movie as movie_0, writer as writer_0, written_by as written_by_0 where actor_0.name = "Brad Pitt" and writer_0.name = "Angelina Jolie" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and movie_0.mid = written_by_0.msid and writer_0.wid = written_by_0.wid
TOT: 0.9944395927422415; TR: 1.0; QF: 0.12178146791922942; select movie_0.title from actor as actor_0, actor as actor_1, cast as cast_0, cast as cast_1, movie as movie_0 where actor_0.name = "Angelina Jolie" and actor_1.name = "Brad Pitt" and actor_0.aid = cast_0.aid and actor_1.aid = cast_1.aid and cast_0.msid = movie_0.mid and cast_1.msid = movie_0.mid
TOT: 0.9944395871887428; TR: 1.0; QF: 0.12172593293218759; select movie_0.title from actor as actor_0, cast as cast_0, made_by as made_by_0, movie as movie_0, producer as producer_0 where actor_0.name = "Angelina Jolie" and producer_0.name = "Brad Pitt" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid
TOT: 0.9944395871887428; TR: 1.0; QF: 0.12172593293218759; select movie_0.title from actor as actor_0, cast as cast_0, made_by as made_by_0, movie as movie_0, producer as producer_0 where actor_0.name = "Brad Pitt" and producer_0.name = "Angelina Jolie" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid


02:50  INFO: ================
02:50  INFO: QUERY 49: Find the directors of all movies featuring "Kate Winslet"
02:50  INFO: ================
02:56  INFO: ================
02:56  INFO: QUERY 28: Find all comedies produced in year 2015
02:56  INFO: ================
03:04  INFO: ================
03:04  INFO: QUERY 15: Find all actors born in Milan
03:04  INFO: ================
03:08  INFO: ================
03:08  INFO: QUERY 115: Find all actors who acted in the same movie as "Tom Hanks"
03:08  INFO: ================
239. ROOT: ROOT; NA; ; (0) 
240. Find: CMT; NA; ; (0) 
241. actors: NT; NA; all; (0) actor.name(1.0):| actor(1.0):| movie.title(0.95):Actors; Actors; Actors; | tv_series.title(0.95):Actors; Actor; The Actor Factor; | cast.role(0.95):Actors; Actors; Actors; | keyword.keyword(0.95):actors; actor-director; no-actors; | company.name(0.79):For Actors by Actors; Actors Loft; Actors Pool; | 
243. acted: NT; NA; ; (0) movie.release_year(0.63):| tv_series.release_year(0.63):| actor.name(0.62):| actor(0.62):| genre.genre(0.62):| genre(0.62):| made_by(0.61):| 
245. movie: NT; NA; ; (0) movie.title(1.0):| movie(1.0):| cast.role(0.95):Movie; Movie F; Movie AD; | company.name(0.95):Movie; Movies; Movie Movie; | keyword.keyword(0.83):movie-in-movie; b-movie; z-movie; | actor.name(0.76):| actor(0.76):| 
249. Tom Hanks: VTTEXT; NA; ; (0) director.name(1.0):Tom Hanks; Tom Hanks; Tom Hankins; | actor.name(1.0):Tom Hanks; Jim Hanks; Tom Banks; | producer.name(1.0):Tom Hanks; Tom Hanks; Tom Hanc; | writer.name(1.0):Tom Hanks; Tom Hanks; Tom Hankins; | cast.role(0.76):Young Tom Hanks; Tom Hanner; Tom H; | movie.title(0.65):Hank; Arly Hanks; Tom Horn; | tv_series.title(0.65):Hank; Hank; Hank; | 
Find, VB
all, DT
actors, NNS
who, WP
acted, VBD
in, IN
the, DT
same, JJ
movie, NN
as, IN
Tom Hanks, NNP
root(ROOT-0, Find-1)
det(actors-3, all-2)
dobj(Find-1, actors-3)
nsubj(acted-5, who-4)
acl:relcl(actors-3, acted-5)
case(movie-9, in-6)
det(movie-9, the-7)
amod(movie-9, same-8)
nmod(acted-5, movie-9)
case(Tom Hanks-11, as-10)
nmod(acted-5, Tom Hanks-11)

PARSE TREE:(239) ROOT ROOT
    (240) Find CMT
        (241) actors NT
            (243) acted NT
                (245) movie NT
                (249) Tom Hanks VTTEXT


===========
TRANSLATIONS
===========
TOT: 0.8979007600118484; NL: 0.8979007600118484; NL+AG: 0.9664773678070535; NL+QF: 0.8979007600118484; rels: [movie]; projs: [actor_0.name]; preds: [director_0.name = "Tom Hanks"]; havings: []; superlative: []; blanks: 1
TOT: 0.8979007600118484; NL: 0.8979007600118484; NL+AG: 0.9664773678070535; NL+QF: 0.8979007600118484; rels: [movie]; projs: [actor_0.name]; preds: [actor_0.name = "Tom Hanks"]; havings: []; superlative: []; blanks: 1
TOT: 0.8979007600118484; NL: 0.8979007600118484; NL+AG: 0.9664773678070535; NL+QF: 0.8979007600118484; rels: [movie]; projs: [actor_0.name]; preds: [producer_0.name = "Tom Hanks"]; havings: []; superlative: []; blanks: 1
TOT: 0.8979007600118484; NL: 0.8979007600118484; NL+AG: 0.9664773678070535; NL+QF: 0.8979007600118484; rels: [movie]; projs: [actor_0.name]; preds: [writer_0.name = "Tom Hanks"]; havings: []; superlative: []; blanks: 1
TOT: 0.8721851340624786; NL: 0.8389821044998752; NL+AG: 0.9427307265828302; NL+QF: 0.8721851340624786; rels: []; projs: [movie_0.title]; preds: [actor_0.name = "Tom Hanks"]; havings: []; superlative: []; blanks: 2
TOT: 0.871831294449845; NL: 0.8389821044998752; NL+AG: 0.9427307265828302; NL+QF: 0.871831294449845; rels: [movie]; projs: [movie_0.title]; preds: [actor_0.name = "Tom Hanks"]; havings: []; superlative: []; blanks: 1
TOT: 0.8631148906993363; NL: 0.8389821044998752; NL+AG: 0.9427307265828302; NL+QF: 0.8631148906993363; rels: [movie]; projs: [movie_0.title]; preds: [director_0.name = "Tom Hanks"]; havings: []; superlative: []; blanks: 1
TOT: 0.8602236844348266; NL: 0.8389821044998752; NL+AG: 0.9427307265828302; NL+QF: 0.8602236844348266; rels: [movie]; projs: [movie_0.title]; preds: [writer_0.name = "Tom Hanks"]; havings: []; superlative: []; blanks: 1
TOT: 0.8579669246119673; NL: 0.8389821044998752; NL+AG: 0.9427307265828302; NL+QF: 0.8579669246119673; rels: [movie]; projs: [movie_0.title]; preds: [producer_0.name = "Tom Hanks"]; havings: []; superlative: []; blanks: 1
TOT: 0.8545023957639225; NL: 0.8389821044998752; NL+AG: 0.9427307265828302; NL+QF: 0.8545023957639225; rels: []; projs: [movie_0.title]; preds: [director_0.name = "Tom Hanks"]; havings: []; superlative: []; blanks: 2
TOT: 0.8525231799782905; NL: 0.8372373281436523; NL+AG: 0.9426933077521801; NL+QF: 0.8525231799782905; rels: [movie]; projs: [actor_0.name]; preds: [cast_0.role = "Young Tom Hanks"]; havings: []; superlative: []; blanks: 1

===========
RESULTS
===========
TOT: 0.8933631614677946; TR: 0.8979007600118484; QF: 0.1399446061508608; select actor_0.name from actor as actor_0, cast as cast_0, directed_by as directed_by_0, director as director_0, movie as movie_0 where director_0.name = "Tom Hanks" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid
TOT: 0.8933613451539714; TR: 0.8979007600118484; QF: 0.12178146791922942; select actor_0.name from actor as actor_0, cast as cast_0, movie as movie_0, writer as writer_0, written_by as written_by_0 where writer_0.name = "Tom Hanks" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and movie_0.mid = written_by_0.msid and writer_0.wid = written_by_0.wid
TOT: 0.8933613451539714; TR: 0.8979007600118484; QF: 0.12178146791922942; select actor_0.name from actor as actor_0, actor as actor_1, cast as cast_0, cast as cast_1, movie as movie_0 where actor_1.name = "Tom Hanks" and actor_0.aid = cast_0.aid and actor_1.aid = cast_1.aid and cast_0.msid = movie_0.mid and cast_1.msid = movie_0.mid
TOT: 0.8933613396004727; TR: 0.8979007600118484; QF: 0.12172593293218759; select actor_0.name from actor as actor_0, cast as cast_0, made_by as made_by_0, movie as movie_0, producer as producer_0 where producer_0.name = "Tom Hanks" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid
TOT: 0.8926711160942369; TR: 0.8979007600118484; QF: 0.07515399715697557; select actor_0.name from actor as actor_0, cast as cast_0, directed_by as directed_by_0, made_by as made_by_0, movie as movie_0, producer as producer_0, tv_series as tv_series_0 where producer_0.name = "Tom Hanks" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and directed_by_0.msid = movie_0.mid and directed_by_0.msid = tv_series_0.sid and made_by_0.msid = tv_series_0.sid and made_by_0.pid = producer_0.pid
TOT: 0.8926709009801329; TR: 0.8979007600118484; QF: 0.07300285611694564; select actor_0.name from actor as actor_0, cast as cast_0, copyright as copyright_0, made_by as made_by_0, movie as movie_0, producer as producer_0, tv_series as tv_series_0 where producer_0.name = "Tom Hanks" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and copyright_0.msid = movie_0.mid and copyright_0.msid = tv_series_0.sid and made_by_0.msid = tv_series_0.sid and made_by_0.pid = producer_0.pid
TOT: 0.892670683193804; TR: 0.8979007600118484; QF: 0.07082499282797124; select actor_0.name from actor as actor_0, cast as cast_0, directed_by as directed_by_0, movie as movie_0, tv_series as tv_series_0, writer as writer_0, written_by as written_by_0 where writer_0.name = "Tom Hanks" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and directed_by_0.msid = movie_0.mid and directed_by_0.msid = tv_series_0.sid and tv_series_0.sid = written_by_0.msid and writer_0.wid = written_by_0.wid
TOT: 0.892670683193804; TR: 0.8979007600118484; QF: 0.07082499282797124; select actor_0.name from actor as actor_0, actor as actor_1, cast as cast_0, cast as cast_1, directed_by as directed_by_0, movie as movie_0, tv_series as tv_series_0 where actor_1.name = "Tom Hanks" and actor_0.aid = cast_0.aid and actor_1.aid = cast_1.aid and cast_0.msid = movie_0.mid and cast_1.msid = tv_series_0.sid and directed_by_0.msid = movie_0.mid and directed_by_0.msid = tv_series_0.sid
TOT: 0.892670683193804; TR: 0.8979007600118484; QF: 0.07082499282797124; select actor_1.name from actor as actor_0, actor as actor_1, cast as cast_0, cast as cast_1, directed_by as directed_by_0, movie as movie_0, tv_series as tv_series_0 where actor_0.name = "Tom Hanks" and actor_0.aid = cast_0.aid and actor_1.aid = cast_1.aid and cast_0.msid = movie_0.mid and cast_1.msid = tv_series_0.sid and directed_by_0.msid = movie_0.mid and directed_by_0.msid = tv_series_0.sid
TOT: 0.8926706268098588; TR: 0.8979007600118484; QF: 0.07026115337524289; select actor_0.name from actor as actor_0, cast as cast_0, copyright as copyright_0, directed_by as directed_by_0, director as director_0, movie as movie_0, tv_series as tv_series_0 where director_0.name = "Tom Hanks" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and copyright_0.msid = movie_0.mid and copyright_0.msid = tv_series_0.sid and directed_by_0.did = director_0.did and directed_by_0.msid = tv_series_0.sid


03:12  INFO: ================
03:12  INFO: QUERY 46: Who is the writer of the movie "Django Unchained"
03:12  INFO: ================
03:17  INFO: ================
03:17  INFO: QUERY 22: Who was the director of the movie Joy from 2015?
03:17  INFO: ================
262. ROOT: ROOT; NA; ; (0) 
263. Joy: NT; NA; ; (0) writer.name(0.61):| writer(0.61):| written_by(0.6):| director.birth_city(0.59):| director.birth_year(0.59):| actor.birth_city(0.59):| actor.birth_year(0.59):| 
264. Who: CMT; NA; ; (0) director.name(1.0):| actor.name(1.0):| producer.name(1.0):| writer.name(1.0):| 
266. director: NT; NA; ; (0) director.name(1.0):| director(1.0):| movie.title(0.95):Director; Director; Director; | producer.name(0.95):Director; Co-Director; Director GT; | company.name(0.95):Director; Directors; Directors; | writer.name(0.95):Director; Director X; Director X.; | tv_series.title(0.86):Directors on Directo; The Directors; The Directors; | 
268. movie: NT; NA; ; (0) movie.title(1.0):| movie(1.0):| cast.role(0.95):Movie; Movie F; Movie AD; | company.name(0.95):Movie; Movies; Movie Movie; | keyword.keyword(0.83):movie-in-movie; b-movie; z-movie; | actor.name(0.76):| actor(0.76):| 
271. 2015: VTNUM; NA; ; (0) movie.release_year(1.0):2015; 2015; 2015; | tv_series.release_year(1.0):2015; 2015; 2015; | 
Who, WP
was, VBD
the, DT
director, NN
of, IN
the, DT
movie, NN
Joy, VBN
from, IN
2015, CD
dobj(Joy-8, Who-1)
auxpass(Joy-8, was-2)
det(director-4, the-3)
nsubjpass(Joy-8, director-4)
case(movie-7, of-5)
det(movie-7, the-6)
nmod(director-4, movie-7)
root(ROOT-0, Joy-8)
case(2015-10, from-9)
nmod(Joy-8, 2015-10)

PARSE TREE:(262) ROOT ROOT
    (264) Who CMT
        (266) director NT
            (268) movie NT
            (263) Joy NT
                (271) 2015 VTNUM


===========
TRANSLATIONS
===========
TOT: 0.9174505626104981; NL: 0.9174505626104981; NL+AG: 0.9702103575099612; NL+QF: 0.9174505626104981; rels: [movie]; projs: [director_0.name]; preds: [movie_0.release_year = 2015]; havings: []; superlative: []; blanks: 2
TOT: 0.9174505626104981; NL: 0.9174505626104981; NL+AG: 0.9702103575099612; NL+QF: 0.9174505626104981; rels: [movie]; projs: [director_0.name]; preds: [tv_series_0.release_year = 2015]; havings: []; superlative: []; blanks: 2
TOT: 0.846655699563006; NL: 0.846655699563006; NL+AG: 0.9404207150199223; NL+QF: 0.846655699563006; rels: [movie]; projs: [producer_0.name]; preds: [movie_0.release_year = 2015]; havings: []; superlative: []; blanks: 2
TOT: 0.846655699563006; NL: 0.846655699563006; NL+AG: 0.9404207150199223; NL+QF: 0.846655699563006; rels: [movie]; projs: [producer_0.name]; preds: [tv_series_0.release_year = 2015]; havings: []; superlative: []; blanks: 2
TOT: 0.8417155348343195; NL: 0.8417155348343195; NL+AG: 0.9404207150199223; NL+QF: 0.8417155348343195; rels: [movie]; projs: [director_0.name]; preds: [movie_0.release_year = 2015]; havings: []; superlative: []; blanks: 2
TOT: 0.8417155348343195; NL: 0.8417155348343195; NL+AG: 0.9404207150199223; NL+QF: 0.8417155348343195; rels: [movie]; projs: [director_0.name]; preds: [tv_series_0.release_year = 2015]; havings: []; superlative: []; blanks: 2
TOT: 0.8417155348343195; NL: 0.8417155348343195; NL+AG: 0.9404207150199223; NL+QF: 0.8417155348343195; rels: [movie]; projs: [director_0.name]; preds: [movie_0.release_year = 2015]; havings: []; superlative: []; blanks: 2
TOT: 0.8417155348343195; NL: 0.8417155348343195; NL+AG: 0.9404207150199223; NL+QF: 0.8417155348343195; rels: [movie]; projs: [director_0.name]; preds: [tv_series_0.release_year = 2015]; havings: []; superlative: []; blanks: 2
TOT: 0.8417155348343195; NL: 0.8417155348343195; NL+AG: 0.9404207150199223; NL+QF: 0.8417155348343195; rels: []; projs: [director_0.name]; preds: [movie_0.release_year = 2015]; havings: []; superlative: []; blanks: 3
TOT: 0.8417155348343195; NL: 0.8417155348343195; NL+AG: 0.9404207150199223; NL+QF: 0.8417155348343195; rels: []; projs: [director_0.name]; preds: [tv_series_0.release_year = 2015]; havings: []; superlative: []; blanks: 3
TOT: 0.8417155348343195; NL: 0.8417155348343195; NL+AG: 0.9385574894223223; NL+QF: 0.8417155348343195; rels: [movie]; projs: [director_0.name]; preds: []; havings: []; superlative: []; blanks: 3
TOT: 0.8417155348343195; NL: 0.8417155348343195; NL+AG: 0.9404207150199223; NL+QF: 0.8417155348343195; rels: [movie]; projs: [actor_0.name]; preds: [movie_0.release_year = 2015]; havings: []; superlative: []; blanks: 2
TOT: 0.8417155348343195; NL: 0.8417155348343195; NL+AG: 0.9404207150199223; NL+QF: 0.8417155348343195; rels: [movie]; projs: [actor_0.name]; preds: [tv_series_0.release_year = 2015]; havings: []; superlative: []; blanks: 2
TOT: 0.8417155348343195; NL: 0.8417155348343195; NL+AG: 0.9404207150199223; NL+QF: 0.8417155348343195; rels: [movie]; projs: [producer_0.name]; preds: [movie_0.release_year = 2015]; havings: []; superlative: []; blanks: 2
TOT: 0.8417155348343195; NL: 0.8417155348343195; NL+AG: 0.9404207150199223; NL+QF: 0.8417155348343195; rels: [movie]; projs: [producer_0.name]; preds: [tv_series_0.release_year = 2015]; havings: []; superlative: []; blanks: 2
TOT: 0.8417155348343195; NL: 0.8417155348343195; NL+AG: 0.9404207150199223; NL+QF: 0.8417155348343195; rels: [movie]; projs: [writer_0.name]; preds: [movie_0.release_year = 2015]; havings: []; superlative: []; blanks: 2
TOT: 0.8417155348343195; NL: 0.8417155348343195; NL+AG: 0.9404207150199223; NL+QF: 0.8417155348343195; rels: [movie]; projs: [writer_0.name]; preds: [tv_series_0.release_year = 2015]; havings: []; superlative: []; blanks: 2

===========
RESULTS
===========
TOT: 0.9140159155584613; TR: 0.9174505626104981; QF: 0.24090909090909088; select director_0.name from directed_by as directed_by_0, director as director_0, movie as movie_0 where movie_0.release_year = 2015 and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid
TOT: 0.9127140548103376; TR: 0.9174505626104981; QF: 0.10583230494995202; select director_0.name from cast as cast_0, directed_by as directed_by_0, director as director_0, movie as movie_0, tv_series as tv_series_0 where tv_series_0.release_year = 2015 and cast_0.msid = movie_0.mid and cast_0.msid = tv_series_0.sid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid
TOT: 0.9127133531735576; TR: 0.9174505626104981; QF: 0.09881593714927048; select director_0.name from copyright as copyright_0, directed_by as directed_by_0, director as director_0, movie as movie_0, tv_series as tv_series_0 where tv_series_0.release_year = 2015 and copyright_0.msid = movie_0.mid and copyright_0.msid = tv_series_0.sid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid
TOT: 0.9127121608709438; TR: 0.9174505626104981; QF: 0.08689291101055807; select director_0.name from cast as cast_0, directed_by as directed_by_0, director as director_0, movie as movie_0, tv_series as tv_series_0 where movie_0.release_year = 2015 and cast_0.msid = movie_0.mid and cast_0.msid = tv_series_0.sid and directed_by_0.did = director_0.did and directed_by_0.msid = tv_series_0.sid
TOT: 0.9127120133488844; TR: 0.9174505626104981; QF: 0.08541769041769041; select director_0.name from directed_by as directed_by_0, director as director_0, made_by as made_by_0, movie as movie_0, tv_series as tv_series_0 where tv_series_0.release_year = 2015 and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and made_by_0.msid = movie_0.mid and made_by_0.msid = tv_series_0.sid
TOT: 0.9127114883262542; TR: 0.9174505626104981; QF: 0.08016746411483253; select director_0.name from directed_by as directed_by_0, director as director_0, movie as movie_0, tags as tags_0, tv_series as tv_series_0 where tv_series_0.release_year = 2015 and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and movie_0.mid = tags_0.msid and tags_0.msid = tv_series_0.sid
TOT: 0.9127114592341636; TR: 0.9174505626104981; QF: 0.07987654320987654; select director_0.name from copyright as copyright_0, directed_by as directed_by_0, director as director_0, movie as movie_0, tv_series as tv_series_0 where movie_0.release_year = 2015 and copyright_0.msid = movie_0.mid and copyright_0.msid = tv_series_0.sid and directed_by_0.did = director_0.did and directed_by_0.msid = tv_series_0.sid
TOT: 0.9127111098114741; TR: 0.9174505626104981; QF: 0.07638231631382317; select director_0.name from directed_by as directed_by_0, director as director_0, movie as movie_0, tv_series as tv_series_0, written_by as written_by_0 where tv_series_0.release_year = 2015 and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and movie_0.mid = written_by_0.msid and tv_series_0.sid = written_by_0.msid
TOT: 0.9127111098114741; TR: 0.9174505626104981; QF: 0.07638231631382317; select director_0.name from classification as classification_0, directed_by as directed_by_0, director as director_0, movie as movie_0, tv_series as tv_series_0 where tv_series_0.release_year = 2015 and classification_0.msid = movie_0.mid and classification_0.msid = tv_series_0.sid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid
TOT: 0.9127101194094904; TR: 0.9174505626104981; QF: 0.06647829647829648; select director_0.name from directed_by as directed_by_0, director as director_0, made_by as made_by_0, movie as movie_0, tv_series as tv_series_0 where movie_0.release_year = 2015 and directed_by_0.did = director_0.did and directed_by_0.msid = tv_series_0.sid and made_by_0.msid = movie_0.mid and made_by_0.msid = tv_series_0.sid


03:22  INFO: ================
03:22  INFO: QUERY 43: Who acts "Olivia Pope" in the series Scandal?
03:22  INFO: ================
03:29  INFO: ================
03:29  INFO: QUERY 26: Find all movies featuring "Kate Winslet"
03:29  INFO: ================
03:32  INFO: ================
03:32  INFO: QUERY 113: Find the number of companies which worked with "Gabriele Ferzetti"
03:32  INFO: ================
03:36  INFO: ================
03:36  INFO: QUERY 72: List all the Sci-Fi movies which released in 2010
03:36  INFO: ================
301. ROOT: ROOT; NA; ; (0) 
302. List: CMT; NA; ; (0) 
303. movies: NT; NA; all; (0) movie.title(1.0):| movie(1.0):| cast.role(0.95):Movie; Movie F; Movie AD; | company.name(0.95):Movies; Movie; Movie Movie; | tv_series.title(0.84):Movies, Movies, Movi; Movie Mob; Moon Movies; | keyword.keyword(0.83):movie-in-movie; movies-about-movies; b-movie; | actor.name(0.76):| 
306. Sci-Fi: VTTEXT; NA; ; (0) cast.role(1.0):Sci-Fi; Sci-Fi; Sci-fi #1; | genre.genre(1.0):Sci-Fi; Sci-Fi; Film-Noir; | keyword.keyword(0.87):sci-fi-fan; sci-fi-fan; sci-fi-geek; | actor.name(0.75):Mr. Sci-Fi; Mr. Sci-Fi; That Sci-fiGuy; | producer.name(0.75):Mr. Sci-Fi; Mr. Sci-Fi; That Sci-fiGuy; | company.name(0.75):AXN Sci-Fi; AXN Sci-Fi; AXN Sci-Fi; | writer.name(0.75):Mr. Sci-Fi; Mr. Sci-Fi; That Sci-fiGuy; | 
307. released: NT; NA; ; (0) movie.release_year(1.0):| tv_series.release_year(1.0):| movie.title(0.64):| movie(0.64):| movie.title_aka(0.63):| tv_series.title_aka(0.63):| cast.role(0.63):| 
309. 2010: VTNUM; NA; ; (0) movie.release_year(1.0):2010; 2010; 2010; | tv_series.release_year(1.0):2010; 2010; 2010; | actor.birth_year(1.0):2010; 2010; | producer.birth_year(1.0):2010; | 
List, VB
all, PDT
the, DT
Sci-Fi, JJ
movies, NNS
which, WDT
released, VBN
in, IN
2010, CD
root(ROOT-0, List-1)
det:predet(movies-5, all-2)
det(movies-5, the-3)
amod(movies-5, Sci-Fi-4)
dobj(List-1, movies-5)
nsubj(released-7, which-6)
acl:relcl(movies-5, released-7)
case(2010-9, in-8)
nmod(released-7, 2010-9)

PARSE TREE:(301) ROOT ROOT
    (302) List CMT
        (303) movies NT
            (306) Sci-Fi VTTEXT
            (307) released NT
                (309) 2010 VTNUM


===========
TRANSLATIONS
===========
TOT: 1.0; NL: 1.0; NL+AG: 1.0; NL+QF: 1.0; rels: []; projs: [movie_0.title]; preds: [cast_0.role = "Sci-Fi",movie_0.release_year = 2010]; havings: []; superlative: []; blanks: 0
TOT: 1.0; NL: 1.0; NL+AG: 1.0; NL+QF: 1.0; rels: []; projs: [movie_0.title]; preds: [cast_0.role = "Sci-Fi",tv_series_0.release_year = 2010]; havings: []; superlative: []; blanks: 0
TOT: 1.0; NL: 1.0; NL+AG: 1.0; NL+QF: 1.0; rels: []; projs: [movie_0.title]; preds: [genre_0.genre = "Sci-Fi",movie_0.release_year = 2010]; havings: []; superlative: []; blanks: 0
TOT: 1.0; NL: 1.0; NL+AG: 1.0; NL+QF: 1.0; rels: []; projs: [movie_0.title]; preds: [genre_0.genre = "Sci-Fi",tv_series_0.release_year = 2010]; havings: []; superlative: []; blanks: 0
TOT: 0.9629695742420912; NL: 0.9539972450774545; NL+AG: 0.9839129337159068; NL+QF: 0.9629695742420912; rels: []; projs: [movie_0.title]; preds: [keyword_0.keyword = "sci-fi-fan",movie_0.release_year = 2010]; havings: []; superlative: []; blanks: 0
TOT: 0.9586445736399809; NL: 0.9539972450774545; NL+AG: 0.9839129337159068; NL+QF: 0.9586445736399809; rels: []; projs: [movie_0.title]; preds: [keyword_0.keyword = "sci-fi-fan",tv_series_0.release_year = 2010]; havings: []; superlative: []; blanks: 0
TOT: 0.9336687832197524; NL: 0.9066811409991332; NL+AG: 0.975580677099496; NL+QF: 0.9336687832197524; rels: []; projs: [movie_0.title]; preds: [actor_0.name = "Mr. Sci-Fi",movie_0.release_year = 2010]; havings: []; superlative: []; blanks: 0
TOT: 0.9336687832197524; NL: 0.9066811409991332; NL+AG: 0.975580677099496; NL+QF: 0.9336687832197524; rels: []; projs: [movie_0.title]; preds: [actor_0.name = "Mr. Sci-Fi",tv_series_0.release_year = 2010]; havings: []; superlative: []; blanks: 0
TOT: 0.9290424491142183; NL: 0.9134802127015484; NL+AG: 0.9751694075688527; NL+QF: 0.9290424491142183; rels: []; projs: [actor_0.name]; preds: [cast_0.role = "Sci-Fi",movie_0.release_year = 2010]; havings: []; superlative: []; blanks: 0
TOT: 0.9290424491142183; NL: 0.9134802127015484; NL+AG: 0.9751694075688527; NL+QF: 0.9290424491142183; rels: []; projs: [actor_0.name]; preds: [cast_0.role = "Sci-Fi",tv_series_0.release_year = 2010]; havings: []; superlative: []; blanks: 0
TOT: 0.9159722504064729; NL: 0.9066811409991332; NL+AG: 0.975580677099496; NL+QF: 0.9159722504064729; rels: []; projs: [movie_0.title]; preds: [company_0.name = "AXN Sci-Fi",movie_0.release_year = 2010]; havings: []; superlative: []; blanks: 0
TOT: 0.9159722504064729; NL: 0.9066811409991332; NL+AG: 0.975580677099496; NL+QF: 0.9159722504064729; rels: []; projs: [movie_0.title]; preds: [company_0.name = "AXN Sci-Fi",tv_series_0.release_year = 2010]; havings: []; superlative: []; blanks: 0

===========
RESULTS
===========
TOT: 0.9970287885062958; TR: 1.0; QF: 0.28431372549019607; select movie_0.title from cast as cast_0, movie as movie_0 where cast_0.role = "Sci-Fi" and movie_0.release_year = 2010 and cast_0.msid = movie_0.mid
TOT: 0.9957338041946576; TR: 1.0; QF: 0.18036529680365296; select movie_0.title from classification as classification_0, genre as genre_0, movie as movie_0 where genre_0.genre = "Sci-Fi" and movie_0.release_year = 2010 and classification_0.gid = genre_0.gid and classification_0.msid = movie_0.mid
TOT: 0.9957269541908697; TR: 1.0; QF: 0.11186525892408244; select movie_0.title from cast as cast_0, movie as movie_0, tv_series as tv_series_0 where cast_0.role = "Sci-Fi" and tv_series_0.release_year = 2010 and cast_0.msid = movie_0.mid and cast_0.msid = tv_series_0.sid
TOT: 0.9949599153297682; TR: 1.0; QF: 0.09915329768270946; select movie_0.title from cast as cast_0, directed_by as directed_by_0, movie as movie_0, tv_series as tv_series_0 where cast_0.role = "Sci-Fi" and tv_series_0.release_year = 2010 and cast_0.msid = movie_0.mid and directed_by_0.msid = movie_0.mid and directed_by_0.msid = tv_series_0.sid
TOT: 0.9949591624304043; TR: 1.0; QF: 0.09162430404260469; select movie_0.title from cast as cast_0, copyright as copyright_0, movie as movie_0, tv_series as tv_series_0 where cast_0.role = "Sci-Fi" and tv_series_0.release_year = 2010 and cast_0.msid = movie_0.mid and copyright_0.msid = movie_0.mid and copyright_0.msid = tv_series_0.sid
TOT: 0.9949590182648401; TR: 1.0; QF: 0.09018264840182648; select movie_0.title from classification as classification_0, genre as genre_0, movie as movie_0, tv_series as tv_series_0 where genre_0.genre = "Sci-Fi" and tv_series_0.release_year = 2010 and classification_0.gid = genre_0.gid and classification_0.msid = movie_0.mid and classification_0.msid = tv_series_0.sid
TOT: 0.9949569293892824; TR: 1.0; QF: 0.0692938928233046; select movie_0.title from cast as cast_0, made_by as made_by_0, movie as movie_0, tv_series as tv_series_0 where cast_0.role = "Sci-Fi" and tv_series_0.release_year = 2010 and cast_0.msid = movie_0.mid and made_by_0.msid = movie_0.mid and made_by_0.msid = tv_series_0.sid
TOT: 0.9949560543515652; TR: 1.0; QF: 0.06054351565187479; select movie_0.title from cast as cast_0, movie as movie_0, tags as tags_0, tv_series as tv_series_0 where cast_0.role = "Sci-Fi" and tv_series_0.release_year = 2010 and cast_0.msid = movie_0.mid and movie_0.mid = tags_0.msid and tags_0.msid = tv_series_0.sid
TOT: 0.9949560314685315; TR: 1.0; QF: 0.06031468531468531; select movie_0.title from cast as cast_0, directed_by as directed_by_0, movie as movie_0, tv_series as tv_series_0 where cast_0.role = "Sci-Fi" and movie_0.release_year = 2010 and cast_0.msid = tv_series_0.sid and directed_by_0.msid = movie_0.mid and directed_by_0.msid = tv_series_0.sid
TOT: 0.9949560314685315; TR: 1.0; QF: 0.06031468531468531; select movie_0.title from cast as cast_0, directed_by as directed_by_0, movie as movie_0, tv_series as tv_series_0 where cast_0.role = "Sci-Fi" and tv_series_0.release_year = 2010 and cast_0.msid = tv_series_0.sid and directed_by_0.msid = movie_0.mid and directed_by_0.msid = tv_series_0.sid


03:41  INFO: ================
03:41  INFO: QUERY 29: Who was the actor that played "Vinny Gambini" in the movie "My Cousin Vinny"?
03:41  INFO: ================
03:48  INFO: ================
03:48  INFO: QUERY 17: Which actors were born in Tehran
03:48  INFO: ================
03:51  INFO: ===== FOLD 1 =====
03:51  INFO: ===== Parsing Results =====
03:51  INFO: Total Queries: 98
03:51  INFO: Correctly Parsed: 98/98

03:51  INFO: ================
03:51  INFO: QUERY 35: Find all movies about Persians
03:51  INFO: ================
333. ROOT: ROOT; NA; ; (0) 
334. Find: CMT; NA; ; (0) 
335. movies: NT; NA; all; (0) movie.title(1.0):| movie(1.0):| cast.role(0.95):Movie; Movie F; Movie AD; | company.name(0.95):Movies; Movie; Movie Movie; | tv_series.title(0.84):Movies, Movies, Movi; Movie Mob; Moon Movies; | keyword.keyword(0.83):movie-in-movie; movies-about-movies; b-movie; | actor.name(0.76):| 
337. Persians: VTTEXT; NA; ; (0) cast.role(1.0):Persian; Persian; Persian; | keyword.keyword(1.0):persian; persian-cat; persian-rug; | movie.title(0.82):Persian Version; Persian Eyes; The Persian; | director.name(0.74):Luke Persian; Persian Pink Panther; The Persian Ed Wood; | actor.name(0.74):Persian Lamb; Little Persian; Persian Princess Dia; | producer.name(0.74):Luke Persian; Persian Pink Panther; Persian Maglinte; | writer.name(0.74):Luke Persian; Persian Pink Panther; The Persian Ed Wood; | 
Find, VB
all, DT
movies, NNS
about, IN
Persians, NNP
root(ROOT-0, Find-1)
det(movies-3, all-2)
dobj(Find-1, movies-3)
case(Persians-5, about-4)
nmod(Find-1, Persians-5)

PARSE TREE:(333) ROOT ROOT
    (334) Find CMT
        (335) movies NT
        (337) Persians VTTEXT


===========
TRANSLATIONS
===========
TOT: 1.0; NL: 1.0; NL+AG: 1.0; NL+QF: 1.0; rels: []; projs: [movie_0.title]; preds: [cast_0.role = "Persian"]; havings: []; superlative: []; blanks: 0
TOT: 1.0; NL: 1.0; NL+AG: 1.0; NL+QF: 1.0; rels: []; projs: [movie_0.title]; preds: [keyword_0.keyword = "persian"]; havings: []; superlative: []; blanks: 0
TOT: 0.934763205166549; NL: 0.8593887047640296; NL+AG: 0.9890291262135922; NL+QF: 0.934763205166549; rels: []; projs: [movie_0.title]; preds: [actor_0.name = "Persian Lamb"]; havings: []; superlative: []; blanks: 0
TOT: 0.9159386160584653; NL: 0.8730692985095742; NL+AG: 0.9890291262135922; NL+QF: 0.9159386160584653; rels: []; projs: [actor_0.name]; preds: [cast_0.role = "Persian"]; havings: []; superlative: []; blanks: 0
TOT: 0.9107625612433827; NL: 0.8593887047640296; NL+AG: 0.9890291262135922; NL+QF: 0.9107625612433827; rels: []; projs: [movie_0.title]; preds: [director_0.name = "Luke Persian"]; havings: []; superlative: []; blanks: 0
TOT: 0.9064126192070304; NL: 0.9064126192070304; NL+AG: 0.9902130939306435; NL+QF: 0.9064126192070304; rels: []; projs: [movie_0.title]; preds: [movie_0.title = "Persian Version"]; havings: []; superlative: []; blanks: 0
TOT: 0.8730692985095742; NL: 0.8730692985095742; NL+AG: 0.9890291262135922; NL+QF: 0.8730692985095742; rels: []; projs: [actor_0.name]; preds: [keyword_0.keyword = "persian"]; havings: []; superlative: []; blanks: 0
TOT: 0.8593887047640296; NL: 0.8593887047640296; NL+AG: 0.9890291262135922; NL+QF: 0.8593887047640296; rels: []; projs: [movie_0.title]; preds: [producer_0.name = "Luke Persian"]; havings: []; superlative: []; blanks: 0
TOT: 0.8593887047640296; NL: 0.8593887047640296; NL+AG: 0.9890291262135922; NL+QF: 0.8593887047640296; rels: []; projs: [movie_0.title]; preds: [writer_0.name = "Luke Persian"]; havings: []; superlative: []; blanks: 0
TOT: 0.8411568677294218; NL: 0.7913610296113078; NL+AG: 0.9792422201442357; NL+QF: 0.8411568677294218; rels: []; projs: [actor_0.name]; preds: [movie_0.title = "Persian Version"]; havings: []; superlative: []; blanks: 0
TOT: 0.82915619758885; NL: 0.82915619758885; NL+AG: 0.9890291262135922; NL+QF: 0.82915619758885; rels: []; projs: [tv_series_0.title]; preds: [cast_0.role = "Persian"]; havings: []; superlative: []; blanks: 0
TOT: 0.82915619758885; NL: 0.82915619758885; NL+AG: 0.9890291262135922; NL+QF: 0.82915619758885; rels: []; projs: [tv_series_0.title]; preds: [keyword_0.keyword = "persian"]; havings: []; superlative: []; blanks: 0
TOT: 0.82915619758885; NL: 0.82915619758885; NL+AG: 0.9890291262135922; NL+QF: 0.82915619758885; rels: []; projs: [tv_series_0.title]; preds: [cast_0.role = "Persian"]; havings: []; superlative: []; blanks: 0
TOT: 0.82915619758885; NL: 0.82915619758885; NL+AG: 0.9890291262135922; NL+QF: 0.82915619758885; rels: []; projs: [tv_series_0.title]; preds: [keyword_0.keyword = "persian"]; havings: []; superlative: []; blanks: 0

===========
RESULTS
===========
TOT: 0.9970333846566826; TR: 1.0; QF: 0.3302752293577982; select movie_0.title from cast as cast_0, movie as movie_0 where cast_0.role = "Persian" and cast_0.msid = movie_0.mid
TOT: 0.9957342361334458; TR: 1.0; QF: 0.18468468468468469; select movie_0.title from keyword as keyword_0, movie as movie_0, tags as tags_0 where keyword_0.keyword = "persian" and keyword_0.id = tags_0.kid and movie_0.mid = tags_0.msid
TOT: 0.994955635487944; TR: 1.0; QF: 0.05635487943955686; select movie_0.title from cast as cast_0, directed_by as directed_by_0, movie as movie_0, tv_series as tv_series_0 where cast_0.role = "Persian" and cast_0.msid = tv_series_0.sid and directed_by_0.msid = movie_0.mid and directed_by_0.msid = tv_series_0.sid
TOT: 0.9949546153213875; TR: 1.0; QF: 0.04615321387473286; select movie_0.title from cast as cast_0, copyright as copyright_0, movie as movie_0, tv_series as tv_series_0 where cast_0.role = "Persian" and cast_0.msid = tv_series_0.sid and copyright_0.msid = movie_0.mid and copyright_0.msid = tv_series_0.sid
TOT: 0.9949532975300954; TR: 1.0; QF: 0.03297530095475301; select movie_0.title from cast as cast_0, made_by as made_by_0, movie as movie_0, tv_series as tv_series_0 where cast_0.role = "Persian" and cast_0.msid = tv_series_0.sid and made_by_0.msid = movie_0.mid and made_by_0.msid = tv_series_0.sid
TOT: 0.9949516584766585; TR: 1.0; QF: 0.016584766584766587; select movie_0.title from cast as cast_0, classification as classification_0, movie as movie_0, tv_series as tv_series_0 where cast_0.role = "Persian" and cast_0.msid = tv_series_0.sid and classification_0.msid = movie_0.mid and classification_0.msid = tv_series_0.sid
TOT: 0.9949516584766585; TR: 1.0; QF: 0.016584766584766587; select movie_0.title from cast as cast_0, movie as movie_0, tags as tags_0, tv_series as tv_series_0 where cast_0.role = "Persian" and cast_0.msid = tv_series_0.sid and movie_0.mid = tags_0.msid and tags_0.msid = tv_series_0.sid
TOT: 0.9949512205387205; TR: 1.0; QF: 0.012205387205387205; select movie_0.title from cast as cast_0, movie as movie_0, tv_series as tv_series_0, written_by as written_by_0 where cast_0.role = "Persian" and cast_0.msid = tv_series_0.sid and movie_0.mid = written_by_0.msid and tv_series_0.sid = written_by_0.msid
TOT: 0.9944361718931977; TR: 1.0; QF: 0.08757297748123435; select movie_0.title from cast as cast_0, keyword as keyword_0, movie as movie_0, tags as tags_0, tv_series as tv_series_0 where keyword_0.keyword = "persian" and cast_0.msid = movie_0.mid and cast_0.msid = tv_series_0.sid and keyword_0.id = tags_0.kid and tags_0.msid = tv_series_0.sid
TOT: 0.9944353413427613; TR: 1.0; QF: 0.07926747311827957; select movie_0.title from directed_by as directed_by_0, keyword as keyword_0, movie as movie_0, tags as tags_0, tv_series as tv_series_0 where keyword_0.keyword = "persian" and directed_by_0.msid = movie_0.mid and directed_by_0.msid = tv_series_0.sid and keyword_0.id = tags_0.kid and tags_0.msid = tv_series_0.sid


03:54  INFO: ================
03:54  INFO: QUERY 33: Find all movies that were produced by Netflix
03:54  INFO: ================
03:56  INFO: ================
03:56  INFO: QUERY 45: Who directed the movie "Inglourious Basterds"?
03:56  INFO: ================
03:59  INFO: ================
03:59  INFO: QUERY 98: How many movies about Iraq war were produced in 2015?
03:59  INFO: ================
357. ROOT: ROOT; NA; ; (0) 
358. produced: NT; NA; ; (0) made_by(0.74):| directed_by(0.69):| producer.name(0.68):| producer(0.68):| cast.role(0.63):| cast(0.63):| written_by(0.63):| 
360. How many: CMT; count; ; (0) 
361. movies: NT; NA; ; (0) movie.title(1.0):| movie(1.0):| cast.role(0.95):Movie; Movie F; Movie AD; | company.name(0.95):Movies; Movie; Movie Movie; | tv_series.title(0.84):Movies, Movies, Movi; Movie Mob; Moon Movies; | keyword.keyword(0.83):movie-in-movie; movies-about-movies; b-movie; | actor.name(0.76):| 
362. war: VTTEXT; NA; ; (0) movie.title(0.95):Wars; Wars; Hardware Wars; | tv_series.title(0.95):War; Car Wars; War Walks; | actor.name(0.95):War; War; War; | genre.genre(0.95):War; War; Documentary; | producer.name(0.95):War; Johnny Star Wars; Vivian War; | company.name(0.95):War; War on Want; NWA War Zone; | writer.name(0.95):War; Johnny Star Wars; Men Of War; | 
364. Iraq: VTTEXT; NA; ; (0) movie.title(1.0):Iraq; Iraq; Ski Iraq; | director.nationality(1.0):Iraq; Iraq; Iraq; | actor.nationality(1.0):Iraq; Iraq; Iraq; | producer.nationality(1.0):Iraq; Iraq; Iraq; | writer.nationality(1.0):Iraq; Iraq; Iraq; | cast.role(0.8):Ira - Iraq; Iraq Vet; Iraq Veteran; | keyword.keyword(0.72):iraq-iran-war; basra-iraq; hatra-iraq; | 
366. 2015: VTNUM; NA; ; (0) movie.release_year(1.0):2015; 2015; 2015; | tv_series.release_year(1.0):2015; 2015; 2015; | 
How, WRB
many, JJ
movies, NNS
about, IN
Iraq, NNP
war, NN
were, VBD
produced, VBN
in, IN
2015, CD
advmod(many-2, How-1)
dep(produced-8, many-2)
nsubjpass(produced-8, movies-3)
case(war-6, about-4)
compound(war-6, Iraq-5)
nmod(movies-3, war-6)
auxpass(produced-8, were-7)
root(ROOT-0, produced-8)
case(2015-10, in-9)
nmod(produced-8, 2015-10)

PARSE TREE:(357) ROOT ROOT
    (360) How many CMT
        (361) movies NT
            (362) war VTTEXT
                (364) Iraq VTTEXT
            (358) produced NT
                (366) 2015 VTNUM


===========
TRANSLATIONS
===========
TOT: 0.9096744360169875; NL: 0.9080868618771001; NL+AG: 0.9668474549872347; NL+QF: 0.9096744360169875; rels: []; projs: [count(distinct(movie_0.title))]; preds: [genre_0.genre = "War",movie_0.title = "Iraq",movie_0.release_year = 2015]; havings: []; superlative: []; blanks: 1
TOT: 0.9096744360169875; NL: 0.9080868618771001; NL+AG: 0.9668474549872347; NL+QF: 0.9096744360169875; rels: []; projs: [count(distinct(movie_0.title))]; preds: [genre_0.genre = "War",director_0.nationality = "Iraq",movie_0.release_year = 2015]; havings: []; superlative: []; blanks: 1
TOT: 0.9096744360169875; NL: 0.9080868618771001; NL+AG: 0.9668474549872347; NL+QF: 0.9096744360169875; rels: []; projs: [count(distinct(movie_0.title))]; preds: [genre_0.genre = "War",actor_0.nationality = "Iraq",movie_0.release_year = 2015]; havings: []; superlative: []; blanks: 1
TOT: 0.9096744360169875; NL: 0.9080868618771001; NL+AG: 0.9668474549872347; NL+QF: 0.9096744360169875; rels: []; projs: [count(distinct(movie_0.title))]; preds: [genre_0.genre = "War",producer_0.nationality = "Iraq",movie_0.release_year = 2015]; havings: []; superlative: []; blanks: 1
TOT: 0.9096744360169875; NL: 0.9080868618771001; NL+AG: 0.9668474549872347; NL+QF: 0.9096744360169875; rels: []; projs: [count(distinct(movie_0.title))]; preds: [genre_0.genre = "War",writer_0.nationality = "Iraq",movie_0.release_year = 2015]; havings: []; superlative: []; blanks: 1
TOT: 0.9080868618771001; NL: 0.9080868618771001; NL+AG: 0.9668474549872347; NL+QF: 0.9080868618771001; rels: []; projs: [count(distinct(movie_0.title))]; preds: [genre_0.genre = "War",movie_0.title = "Iraq",tv_series_0.release_year = 2015]; havings: []; superlative: []; blanks: 1
TOT: 0.9080868618771001; NL: 0.9080868618771001; NL+AG: 0.9668474549872347; NL+QF: 0.9080868618771001; rels: []; projs: [count(distinct(movie_0.title))]; preds: [genre_0.genre = "War",director_0.nationality = "Iraq",tv_series_0.release_year = 2015]; havings: []; superlative: []; blanks: 1
TOT: 0.9080868618771001; NL: 0.9080868618771001; NL+AG: 0.9668474549872347; NL+QF: 0.9080868618771001; rels: []; projs: [count(distinct(movie_0.title))]; preds: [genre_0.genre = "War",actor_0.nationality = "Iraq",tv_series_0.release_year = 2015]; havings: []; superlative: []; blanks: 1
TOT: 0.9080868618771001; NL: 0.9080868618771001; NL+AG: 0.9668474549872347; NL+QF: 0.9080868618771001; rels: []; projs: [count(distinct(movie_0.title))]; preds: [genre_0.genre = "War",producer_0.nationality = "Iraq",tv_series_0.release_year = 2015]; havings: []; superlative: []; blanks: 1
TOT: 0.9080868618771001; NL: 0.9080868618771001; NL+AG: 0.9668474549872347; NL+QF: 0.9080868618771001; rels: []; projs: [count(distinct(movie_0.title))]; preds: [genre_0.genre = "War",writer_0.nationality = "Iraq",tv_series_0.release_year = 2015]; havings: []; superlative: []; blanks: 1
TOT: 0.8957571279501789; NL: 0.8957571279501789; NL+AG: 0.9556781725488586; NL+QF: 0.8957571279501789; rels: []; projs: [count(distinct(movie_0.title))]; preds: [genre_0.genre = "War",movie_0.title = "Iraq"]; havings: [count(distinct(producer_0.name)) = 2015]; superlative: []; blanks: 0
TOT: 0.8957571279501789; NL: 0.8957571279501789; NL+AG: 0.9556781725488586; NL+QF: 0.8957571279501789; rels: []; projs: [count(distinct(movie_0.title))]; preds: [genre_0.genre = "War",director_0.nationality = "Iraq"]; havings: [count(distinct(producer_0.name)) = 2015]; superlative: []; blanks: 0
TOT: 0.8957571279501789; NL: 0.8957571279501789; NL+AG: 0.9556781725488586; NL+QF: 0.8957571279501789; rels: []; projs: [count(distinct(movie_0.title))]; preds: [genre_0.genre = "War",actor_0.nationality = "Iraq"]; havings: [count(distinct(producer_0.name)) = 2015]; superlative: []; blanks: 0
TOT: 0.8957571279501789; NL: 0.8957571279501789; NL+AG: 0.9556781725488586; NL+QF: 0.8957571279501789; rels: []; projs: [count(distinct(movie_0.title))]; preds: [genre_0.genre = "War",producer_0.nationality = "Iraq"]; havings: [count(distinct(producer_0.name)) = 2015]; superlative: []; blanks: 0
TOT: 0.8957571279501789; NL: 0.8957571279501789; NL+AG: 0.9556781725488586; NL+QF: 0.8957571279501789; rels: []; projs: [count(distinct(movie_0.title))]; preds: [genre_0.genre = "War",writer_0.nationality = "Iraq"]; havings: [count(distinct(producer_0.name)) = 2015]; superlative: []; blanks: 0

===========
RESULTS
===========
TOT: 0.9050179782322018; TR: 0.9096744360169875; QF: 0.12871979934479935; select count(distinct(movie_0.title)) from classification as classification_0, directed_by as directed_by_0, director as director_0, genre as genre_0, movie as movie_0 where director_0.nationality = "Iraq" and genre_0.genre = "War" and movie_0.release_year = 2015 and classification_0.gid = genre_0.gid and classification_0.msid = movie_0.mid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid
TOT: 0.9050179078784347; TR: 0.9096744360169875; QF: 0.12801626167451854; select count(distinct(movie_0.title)) from actor as actor_0, cast as cast_0, classification as classification_0, genre as genre_0, movie as movie_0 where actor_0.nationality = "Iraq" and genre_0.genre = "War" and movie_0.release_year = 2015 and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and classification_0.gid = genre_0.gid and classification_0.msid = movie_0.mid
TOT: 0.9050159245705856; TR: 0.9096744360169875; QF: 0.10818318318318317; select count(distinct(movie_0.title)) from classification as classification_0, genre as genre_0, movie as movie_0, writer as writer_0, written_by as written_by_0 where genre_0.genre = "War" and movie_0.release_year = 2015 and writer_0.nationality = "Iraq" and classification_0.gid = genre_0.gid and classification_0.msid = movie_0.mid and movie_0.mid = written_by_0.msid and writer_0.wid = written_by_0.wid
TOT: 0.9050159207654105; TR: 0.9096744360169875; QF: 0.10814513143280266; select count(distinct(movie_0.title)) from classification as classification_0, genre as genre_0, made_by as made_by_0, movie as movie_0, producer as producer_0 where genre_0.genre = "War" and movie_0.release_year = 2015 and producer_0.nationality = "Iraq" and classification_0.gid = genre_0.gid and classification_0.msid = movie_0.mid and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid
TOT: 0.9050106467928078; TR: 0.9096744360169875; QF: 0.05540540540540541; select count(distinct(movie_0.title)) from classification as classification_0, classification as classification_1, genre as genre_0, movie as movie_0, movie as movie_1 where genre_0.genre = "War" and movie_0.release_year = 2015 and movie_1.title = "Iraq" and classification_0.gid = genre_0.gid and classification_0.msid = movie_0.mid and classification_1.gid = genre_0.gid and classification_1.msid = movie_1.mid
TOT: 0.9046278268197976; TR: 0.9096744360169875; QF: 0.08477087387637845; select count(distinct(movie_0.title)) from actor as actor_0, cast as cast_0, classification as classification_0, genre as genre_0, movie as movie_0, tv_series as tv_series_0 where actor_0.nationality = "Iraq" and genre_0.genre = "War" and movie_0.release_year = 2015 and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and cast_0.msid = tv_series_0.sid and classification_0.gid = genre_0.gid and classification_0.msid = tv_series_0.sid
TOT: 0.9046277857457693; TR: 0.9096744360169875; QF: 0.08436013359400456; select count(distinct(movie_0.title)) from classification as classification_0, directed_by as directed_by_0, director as director_0, genre as genre_0, movie as movie_0, tv_series as tv_series_0 where director_0.nationality = "Iraq" and genre_0.genre = "War" and movie_0.release_year = 2015 and classification_0.gid = genre_0.gid and classification_0.msid = tv_series_0.sid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and directed_by_0.msid = tv_series_0.sid
TOT: 0.9046272100927703; TR: 0.9096744360169875; QF: 0.07860360360360359; select count(distinct(movie_0.title)) from classification as classification_0, genre as genre_0, made_by as made_by_0, movie as movie_0, producer as producer_0, tv_series as tv_series_0 where genre_0.genre = "War" and movie_0.release_year = 2015 and producer_0.nationality = "Iraq" and classification_0.gid = genre_0.gid and classification_0.msid = movie_0.mid and classification_0.msid = tv_series_0.sid and made_by_0.msid = tv_series_0.sid and made_by_0.pid = producer_0.pid
TOT: 0.9046270323808118; TR: 0.9096744360169875; QF: 0.07682648401826485; select count(distinct(movie_0.title)) from classification as classification_0, genre as genre_0, made_by as made_by_0, movie as movie_0, producer as producer_0, tv_series as tv_series_0 where genre_0.genre = "War" and movie_0.release_year = 2015 and producer_0.nationality = "Iraq" and classification_0.gid = genre_0.gid and classification_0.msid = tv_series_0.sid and made_by_0.msid = movie_0.mid and made_by_0.msid = tv_series_0.sid and made_by_0.pid = producer_0.pid
TOT: 0.9046264099950185; TR: 0.9096744360169875; QF: 0.07060262608649705; select count(distinct(movie_0.title)) from classification as classification_0, directed_by as directed_by_0, director as director_0, genre as genre_0, movie as movie_0, tv_series as tv_series_0 where director_0.nationality = "Iraq" and genre_0.genre = "War" and movie_0.release_year = 2015 and classification_0.gid = genre_0.gid and classification_0.msid = movie_0.mid and classification_0.msid = tv_series_0.sid and directed_by_0.did = director_0.did and directed_by_0.msid = tv_series_0.sid


04:09  INFO: ================
04:09  INFO: QUERY 0: What year is the movie "Dead Poets Society" from?
04:09  INFO: ================
04:12  INFO: ================
04:12  INFO: QUERY 24: Find all movies written by "Matt Damon"
04:12  INFO: ================
04:17  INFO: ================
04:17  INFO: QUERY 58: Find all movies in which "Robin Wright" appears
04:17  INFO: ================
386. ROOT: ROOT; NA; ; (0) 
387. Find: CMT; NA; ; (0) 
388. movies: NT; NA; all; (0) movie.title(1.0):| movie(1.0):| cast.role(0.95):Movie; Movie F; Movie AD; | company.name(0.95):Movies; Movie; Movie Movie; | tv_series.title(0.84):Movies, Movies, Movi; Movie Mob; Moon Movies; | keyword.keyword(0.83):movie-in-movie; movies-about-movies; b-movie; | actor.name(0.76):| 
390. appears: NT; NA; ; (0) made_by(0.67):| written_by(0.63):| cast.role(0.63):| cast(0.63):| movie.release_year(0.62):| tv_series.release_year(0.62):| directed_by(0.61):| 
393. Robin Wright: VTTEXT; NA; ; (0) director.name(1.0):Robin Wright; Robin Wright; Robin Wright-Penn; | actor.name(1.0):Robin Wright; Robin Wright; Robin Wright; | producer.name(1.0):Robin Wright; Robin Wright; Robin Wright-Penn; | writer.name(0.8):Rob Wright; Quinn Wright; Kevin Wright; | cast.role(0.76):Tobi Wright; Tobi Wright; Lorin Wright; | movie.title(0.74):'In Wrong' Wright; Mr. Wright in Wrong; Wrong Wrights; | tv_series.title(0.7):Doobie Wright; Wrights Wrongs; Robin; | 
Find, VB
all, DT
movies, NNS
in, IN
which, WDT
Robin Wright, NNP
appears, VBZ
root(ROOT-0, Find-1)
det(movies-3, all-2)
dobj(Find-1, movies-3)
case(which-5, in-4)
nmod(appears-7, which-5)
nsubj(appears-7, Robin Wright-6)
acl:relcl(movies-3, appears-7)

PARSE TREE:(386) ROOT ROOT
    (387) Find CMT
        (388) movies NT
            (390) appears NT
                (393) Robin Wright VTTEXT


===========
TRANSLATIONS
===========
TOT: 0.8662391053409028; NL: 0.8662391053409028; NL+AG: 0.9626264316569841; NL+QF: 0.8662391053409028; rels: []; projs: [movie_0.title]; preds: [director_0.name = "Robin Wright"]; havings: []; superlative: []; blanks: 1
TOT: 0.8662391053409028; NL: 0.8662391053409028; NL+AG: 0.9626264316569841; NL+QF: 0.8662391053409028; rels: []; projs: [movie_0.title]; preds: [actor_0.name = "Robin Wright"]; havings: []; superlative: []; blanks: 1
TOT: 0.8662391053409028; NL: 0.8662391053409028; NL+AG: 0.9626264316569841; NL+QF: 0.8662391053409028; rels: []; projs: [movie_0.title]; preds: [producer_0.name = "Robin Wright"]; havings: []; superlative: []; blanks: 1
TOT: 0.8054932686298641; NL: 0.8054932686298641; NL+AG: 0.9395222268006057; NL+QF: 0.8054932686298641; rels: []; projs: [movie_0.title]; preds: [writer_0.name = "Rob Wright"]; havings: []; superlative: []; blanks: 1
TOT: 0.8010100048443932; NL: 0.7914722034498609; NL+AG: 0.9390470729890059; NL+QF: 0.8010100048443932; rels: []; projs: [movie_0.title]; preds: [cast_0.role = "Tobi Wright"]; havings: []; superlative: []; blanks: 1
TOT: 0.7951004135643284; NL: 0.7912922821972069; NL+AG: 0.939080334171806; NL+QF: 0.7951004135643284; rels: []; projs: [actor_0.name]; preds: [director_0.name = "Robin Wright"]; havings: []; superlative: []; blanks: 1
TOT: 0.7942726601631802; NL: 0.7912922821972069; NL+AG: 0.939080334171806; NL+QF: 0.7942726601631802; rels: []; projs: [actor_0.name]; preds: [actor_0.name = "Robin Wright"]; havings: []; superlative: []; blanks: 1
TOT: 0.7912922821972069; NL: 0.7912922821972069; NL+AG: 0.939080334171806; NL+QF: 0.7912922821972069; rels: []; projs: [actor_0.name]; preds: [producer_0.name = "Robin Wright"]; havings: []; superlative: []; blanks: 1
TOT: 0.7840881682203503; NL: 0.7840881682203503; NL+AG: 0.9390470729890059; NL+QF: 0.7840881682203503; rels: []; projs: [movie_0.title]; preds: [movie_0.title = "'In Wrong' Wright"]; havings: []; superlative: []; blanks: 1
TOT: 0.7706438633725499; NL: 0.7229941967547422; NL+AG: 0.9155009755038278; NL+QF: 0.7706438633725499; rels: []; projs: [actor_0.name]; preds: [cast_0.role = "Tobi Wright"]; havings: []; superlative: []; blanks: 1
TOT: 0.7677835317727486; NL: 0.7677835317727486; NL+AG: 0.9390470729890059; NL+QF: 0.7677835317727486; rels: []; projs: [movie_0.title]; preds: [tv_series_0.title = "Doobie Wright"]; havings: []; superlative: []; blanks: 1

===========
RESULTS
===========
TOT: 0.8633169200837841; TR: 0.8662391053409028; QF: 0.24438131313131314; select movie_0.title from directed_by as directed_by_0, director as director_0, movie as movie_0 where director_0.name = "Robin Wright" and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid
TOT: 0.8633166855712274; TR: 0.8662391053409028; QF: 0.24203618756371048; select movie_0.title from actor as actor_0, cast as cast_0, movie as movie_0 where actor_0.name = "Robin Wright" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid
TOT: 0.8633100618611468; TR: 0.8662391053409028; QF: 0.17579908675799086; select movie_0.title from made_by as made_by_0, movie as movie_0, producer as producer_0 where producer_0.name = "Robin Wright" and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid
TOT: 0.8620141361806914; TR: 0.8662391053409028; QF: 0.10007297748123437; select movie_0.title from cast as cast_0, made_by as made_by_0, movie as movie_0, producer as producer_0, tv_series as tv_series_0 where producer_0.name = "Robin Wright" and cast_0.msid = movie_0.mid and cast_0.msid = tv_series_0.sid and made_by_0.msid = tv_series_0.sid and made_by_0.pid = producer_0.pid
TOT: 0.8620133056302551; TR: 0.8662391053409028; QF: 0.09176747311827957; select movie_0.title from directed_by as directed_by_0, made_by as made_by_0, movie as movie_0, producer as producer_0, tv_series as tv_series_0 where producer_0.name = "Robin Wright" and directed_by_0.msid = movie_0.mid and directed_by_0.msid = tv_series_0.sid and made_by_0.msid = tv_series_0.sid and made_by_0.pid = producer_0.pid
TOT: 0.8620129360340638; TR: 0.8662391053409028; QF: 0.08807151120557452; select movie_0.title from cast as cast_0, directed_by as directed_by_0, director as director_0, movie as movie_0, tv_series as tv_series_0 where director_0.name = "Robin Wright" and cast_0.msid = movie_0.mid and cast_0.msid = tv_series_0.sid and directed_by_0.did = director_0.did and directed_by_0.msid = tv_series_0.sid
TOT: 0.8620126935303213; TR: 0.8662391053409028; QF: 0.08564647377938517; select movie_0.title from copyright as copyright_0, made_by as made_by_0, movie as movie_0, producer as producer_0, tv_series as tv_series_0 where producer_0.name = "Robin Wright" and copyright_0.msid = movie_0.mid and copyright_0.msid = tv_series_0.sid and made_by_0.msid = tv_series_0.sid and made_by_0.pid = producer_0.pid
TOT: 0.8620114933836936; TR: 0.8662391053409028; QF: 0.07364500750372535; select movie_0.title from copyright as copyright_0, directed_by as directed_by_0, director as director_0, movie as movie_0, tv_series as tv_series_0 where director_0.name = "Robin Wright" and copyright_0.msid = movie_0.mid and copyright_0.msid = tv_series_0.sid and directed_by_0.did = director_0.did and directed_by_0.msid = tv_series_0.sid
TOT: 0.862011468509043; TR: 0.8662391053409028; QF: 0.07339626099706745; select movie_0.title from actor as actor_0, cast as cast_0, directed_by as directed_by_0, movie as movie_0, tv_series as tv_series_0 where actor_0.name = "Robin Wright" and actor_0.aid = cast_0.aid and cast_0.msid = tv_series_0.sid and directed_by_0.msid = movie_0.mid and directed_by_0.msid = tv_series_0.sid
TOT: 0.8620109194234838; TR: 0.8662391053409028; QF: 0.0679054054054054; select movie_0.title from classification as classification_0, made_by as made_by_0, movie as movie_0, producer as producer_0, tv_series as tv_series_0 where producer_0.name = "Robin Wright" and classification_0.msid = movie_0.mid and classification_0.msid = tv_series_0.sid and made_by_0.msid = tv_series_0.sid and made_by_0.pid = producer_0.pid


04:20  INFO: ================
04:20  INFO: QUERY 95: How many movies did "Humphrey Bogart" act in before 1942?
04:20  INFO: ================
04:24  INFO: ================
04:24  INFO: QUERY 64: Find all the female actors in the movie "Saving Private Ryan"
04:24  INFO: ================
04:41  INFO: ================
04:41  INFO: QUERY 107: How many female actors were born in "New York City" after 1980?
04:41  INFO: ================
06:27  INFO: ================
06:27  INFO: QUERY 53: Find all tv series produced by Netflix
06:27  INFO: ================
06:29  INFO: ================
06:29  INFO: QUERY 57: Who is the director of the tv series "House of Cards" from 2013?
06:29  INFO: ================
06:38  INFO: ================
06:38  INFO: QUERY 129: Which producer has worked with the most number of directors?
06:38  INFO: ================
06:42  INFO: ================
06:42  INFO: QUERY 16: How much was the budget of "Finding Nemo"
06:42  INFO: ================
06:45  INFO: ================
06:45  INFO: QUERY 9: When was "Kevin Spacey" born?
06:45  INFO: ================
06:51  INFO: ================
06:51  INFO: QUERY 88: What is the number of actors in the movie "Grumpier Old Men"?
06:51  INFO: ================
06:55  INFO: ================
06:55  INFO: QUERY 99: How many movies about Persians were released after 1990?
06:55  INFO: ================
490. ROOT: ROOT; NA; ; (0) 
491. released: NT; NA; ; (0) movie.release_year(1.0):| tv_series.release_year(1.0):| movie.title(0.64):| movie(0.64):| movie.title_aka(0.63):| tv_series.title_aka(0.63):| cast.role(0.63):| 
493. How many: CMT; count; ; (0) 
494. movies: NT; NA; ; (0) movie.title(1.0):| movie(1.0):| cast.role(0.95):Movie; Movie F; Movie AD; | company.name(0.95):Movies; Movie; Movie Movie; | tv_series.title(0.84):Movies, Movies, Movi; Movie Mob; Moon Movies; | keyword.keyword(0.83):movie-in-movie; movies-about-movies; b-movie; | actor.name(0.76):| 
495. Persians: VTTEXT; NA; ; (0) cast.role(1.0):Persian; Persian; Persian; | keyword.keyword(1.0):persian; persian-cat; persian-rug; | movie.title(0.82):Persian Version; Persian Eyes; The Persian; | director.name(0.74):Luke Persian; Persian Pink Panther; The Persian Ed Wood; | actor.name(0.74):Persian Lamb; Little Persian; Persian Princess Dia; | producer.name(0.74):Luke Persian; Persian Pink Panther; Persian Maglinte; | writer.name(0.74):Luke Persian; Persian Pink Panther; The Persian Ed Wood; | 
498. 1990: VTNUM; NA; ; (0) movie.release_year(1.0):2012; 2014; 2015; | director.birth_year(1.0):1993; 1994; 1996; | tv_series.release_year(1.0):2014; 1991; 2014; | actor.birth_year(1.0):1999; 2003; 1993; | producer.birth_year(1.0):1993; 1997; 1995; | writer.birth_year(1.0):1993; 1994; 1998; | 
499. after: OT; >; ; (0) 
How, WRB
many, JJ
movies, NNS
about, IN
Persians, NNP
were, VBD
released, VBN
after, IN
1990, CD
advmod(many-2, How-1)
dep(released-7, many-2)
nsubjpass(released-7, movies-3)
case(Persians-5, about-4)
nmod(movies-3, Persians-5)
auxpass(released-7, were-6)
root(ROOT-0, released-7)
case(1990-9, after-8)
nmod(released-7, 1990-9)

PARSE TREE:(490) ROOT ROOT
    (493) How many CMT
        (494) movies NT
            (495) Persians VTTEXT
            (491) released NT
                (498) 1990 VTNUM
                    (499) after OT


===========
TRANSLATIONS
===========
TOT: 1.0; NL: 1.0; NL+AG: 1.0; NL+QF: 1.0; rels: []; projs: [count(distinct(movie_0.title))]; preds: [cast_0.role = "Persian",movie_0.release_year > 1990]; havings: []; superlative: []; blanks: 0
TOT: 1.0; NL: 1.0; NL+AG: 1.0; NL+QF: 1.0; rels: []; projs: [count(distinct(movie_0.title))]; preds: [keyword_0.keyword = "persian",movie_0.release_year > 1990]; havings: []; superlative: []; blanks: 0
TOT: 1.0; NL: 1.0; NL+AG: 1.0; NL+QF: 1.0; rels: []; projs: [count(distinct(movie_0.title))]; preds: [cast_0.role = "Persian",tv_series_0.release_year > 1990]; havings: []; superlative: []; blanks: 0
TOT: 1.0; NL: 1.0; NL+AG: 1.0; NL+QF: 1.0; rels: []; projs: [count(distinct(movie_0.title))]; preds: [keyword_0.keyword = "persian",tv_series_0.release_year > 1990]; havings: []; superlative: []; blanks: 0
TOT: 0.936592398786078; NL: 0.936592398786078; NL+AG: 0.977167961025519; NL+QF: 0.936592398786078; rels: []; projs: [count(distinct(movie_0.title))]; preds: [movie_0.title = "Persian Version",movie_0.release_year > 1990]; havings: []; superlative: []; blanks: 0
TOT: 0.936592398786078; NL: 0.936592398786078; NL+AG: 0.977167961025519; NL+QF: 0.936592398786078; rels: []; projs: [count(distinct(movie_0.title))]; preds: [movie_0.title = "Persian Version",tv_series_0.release_year > 1990]; havings: []; superlative: []; blanks: 0
TOT: 0.9324934527816051; NL: 0.9039125735618705; NL+AG: 0.9744058626801713; NL+QF: 0.9324934527816051; rels: []; projs: [count(distinct(movie_0.title))]; preds: [director_0.name = "Luke Persian",movie_0.release_year > 1990]; havings: []; superlative: []; blanks: 0
TOT: 0.9207805347134947; NL: 0.9039125735618705; NL+AG: 0.9744058626801713; NL+QF: 0.9207805347134947; rels: []; projs: [count(distinct(movie_0.title))]; preds: [actor_0.name = "Persian Lamb",movie_0.release_year > 1990]; havings: []; superlative: []; blanks: 0
TOT: 0.9197930938122945; NL: 0.9039125735618705; NL+AG: 0.9744058626801713; NL+QF: 0.9197930938122945; rels: []; projs: [count(distinct(movie_0.title))]; preds: [director_0.name = "Luke Persian",tv_series_0.release_year > 1990]; havings: []; superlative: []; blanks: 0
TOT: 0.9179163170625435; NL: 0.9039125735618705; NL+AG: 0.9744058626801713; NL+QF: 0.9179163170625435; rels: []; projs: [count(distinct(movie_0.title))]; preds: [actor_0.name = "Persian Lamb",tv_series_0.release_year > 1990]; havings: []; superlative: []; blanks: 0
TOT: 0.9134802127015484; NL: 0.9134802127015484; NL+AG: 0.9716551101314842; NL+QF: 0.9134802127015484; rels: []; projs: [count(distinct(actor_0.name))]; preds: [cast_0.role = "Persian",movie_0.release_year > 1990]; havings: []; superlative: []; blanks: 0
TOT: 0.9134802127015484; NL: 0.9134802127015484; NL+AG: 0.9716551101314842; NL+QF: 0.9134802127015484; rels: []; projs: [count(distinct(actor_0.name))]; preds: [keyword_0.keyword = "persian",movie_0.release_year > 1990]; havings: []; superlative: []; blanks: 0
TOT: 0.9134802127015484; NL: 0.9134802127015484; NL+AG: 0.9716551101314842; NL+QF: 0.9134802127015484; rels: []; projs: [count(distinct(actor_0.name))]; preds: [cast_0.role = "Persian",tv_series_0.release_year > 1990]; havings: []; superlative: []; blanks: 0
TOT: 0.9134802127015484; NL: 0.9134802127015484; NL+AG: 0.9716551101314842; NL+QF: 0.9134802127015484; rels: []; projs: [count(distinct(actor_0.name))]; preds: [keyword_0.keyword = "persian",tv_series_0.release_year > 1990]; havings: []; superlative: []; blanks: 0

===========
RESULTS
===========
TOT: 0.9970333846566826; TR: 1.0; QF: 0.3302752293577982; select count(distinct(movie_0.title)) from cast as cast_0, movie as movie_0 where cast_0.role = "Persian" and movie_0.release_year > 1990 and cast_0.msid = movie_0.mid
TOT: 0.9957342361334458; TR: 1.0; QF: 0.18468468468468469; select count(distinct(movie_0.title)) from keyword as keyword_0, movie as movie_0, tags as tags_0 where keyword_0.keyword = "persian" and movie_0.release_year > 1990 and keyword_0.id = tags_0.kid and movie_0.mid = tags_0.msid
TOT: 0.9957282919908044; TR: 1.0; QF: 0.12524325827078123; select count(distinct(movie_0.title)) from cast as cast_0, movie as movie_0, tv_series as tv_series_0 where cast_0.role = "Persian" and tv_series_0.release_year > 1990 and cast_0.msid = movie_0.mid and cast_0.msid = tv_series_0.sid
TOT: 0.9949603824993424; TR: 1.0; QF: 0.10382499342343232; select count(distinct(movie_0.title)) from cast as cast_0, directed_by as directed_by_0, movie as movie_0, tv_series as tv_series_0 where cast_0.role = "Persian" and tv_series_0.release_year > 1990 and cast_0.msid = movie_0.mid and directed_by_0.msid = movie_0.mid and directed_by_0.msid = tv_series_0.sid
TOT: 0.9949593623327858; TR: 1.0; QF: 0.09362332785860832; select count(distinct(movie_0.title)) from cast as cast_0, copyright as copyright_0, movie as movie_0, tv_series as tv_series_0 where cast_0.role = "Persian" and tv_series_0.release_year > 1990 and cast_0.msid = movie_0.mid and copyright_0.msid = movie_0.mid and copyright_0.msid = tv_series_0.sid
TOT: 0.9949592342342343; TR: 1.0; QF: 0.09234234234234234; select count(distinct(movie_0.title)) from keyword as keyword_0, movie as movie_0, tags as tags_0, tv_series as tv_series_0 where keyword_0.keyword = "persian" and tv_series_0.release_year > 1990 and keyword_0.id = tags_0.kid and movie_0.mid = tags_0.msid and tags_0.msid = tv_series_0.sid
TOT: 0.9949580445414938; TR: 1.0; QF: 0.08044541493862846; select count(distinct(movie_0.title)) from cast as cast_0, made_by as made_by_0, movie as movie_0, tv_series as tv_series_0 where cast_0.role = "Persian" and tv_series_0.release_year > 1990 and cast_0.msid = movie_0.mid and made_by_0.msid = movie_0.mid and made_by_0.msid = tv_series_0.sid
TOT: 0.9949564054880569; TR: 1.0; QF: 0.06405488056864204; select count(distinct(movie_0.title)) from cast as cast_0, movie as movie_0, tags as tags_0, tv_series as tv_series_0 where cast_0.role = "Persian" and tv_series_0.release_year > 1990 and cast_0.msid = movie_0.mid and movie_0.mid = tags_0.msid and tags_0.msid = tv_series_0.sid
TOT: 0.9949564054880569; TR: 1.0; QF: 0.06405488056864204; select count(distinct(movie_0.title)) from cast as cast_0, classification as classification_0, movie as movie_0, tv_series as tv_series_0 where cast_0.role = "Persian" and tv_series_0.release_year > 1990 and cast_0.msid = movie_0.mid and classification_0.msid = movie_0.mid and classification_0.msid = tv_series_0.sid
TOT: 0.994955967550119; TR: 1.0; QF: 0.05967550118926266; select count(distinct(movie_0.title)) from cast as cast_0, movie as movie_0, tv_series as tv_series_0, written_by as written_by_0 where cast_0.role = "Persian" and tv_series_0.release_year > 1990 and cast_0.msid = movie_0.mid and movie_0.mid = written_by_0.msid and tv_series_0.sid = written_by_0.msid


07:01  INFO: ================
07:01  INFO: QUERY 91: What is the number of movies directed by "Woody Allen" per year?
07:01  INFO: ================
07:15  INFO: ================
07:15  INFO: QUERY 130: Find the latest movie which "Gabriele Ferzetti" acted in
07:15  INFO: ================
514. ROOT: ROOT; NA; ; (0) 
515. Find: CMT; NA; ; (0) 
516. movie: NT; NA; ; (0) movie.title(1.0):| movie(1.0):| cast.role(0.95):Movie; Movie F; Movie AD; | company.name(0.95):Movie; Movies; Movie Movie; | keyword.keyword(0.83):movie-in-movie; b-movie; z-movie; | actor.name(0.76):| actor(0.76):| 
518. latest: FT; max; ; (0) 
519. acted: NT; NA; ; (0) movie.release_year(0.63):| tv_series.release_year(0.63):| actor.name(0.62):| actor(0.62):| genre.genre(0.62):| genre(0.62):| made_by(0.61):| 
521. Gabriele Ferzetti: VTTEXT; NA; ; (0) actor.name(1.0):Gabriele Ferzetti; Gabriele Ferzetti; Gabriel Ferzetti; | director.name(0.73):Gabriele Ferluga; Gabriele Ferluga; Gabriele Mainetti; | writer.name(0.73):Gabriele Ferluga; Gabriele Ferluga; Gabriele Kiefer; | cast.role(0.71):Gabriele Cercetti; Gabriele Cercetti; Gabriele Cercetti; | producer.name(0.69):Gabriele Mainetti; Gabriele Mainetti; Gabriele Gauler; | movie.title(0.53):Gabriele Dambrone; Gabriele Dambrone; For Gabriele; | company.name(0.53):San Gabriele; San Gabriele; Kranzelbinder Gabrie; | 
Find, VB
the, DT
latest, JJS
movie, NN
which, WDT
Gabriele Ferzetti, NNP
acted, VBD
in, RP
root(ROOT-0, Find-1)
det(movie-4, the-2)
amod(movie-4, latest-3)
dobj(Find-1, movie-4)
dobj(acted-7, which-5)
nsubj(acted-7, Gabriele Ferzetti-6)
acl:relcl(movie-4, acted-7)
compound:prt(acted-7, in-8)

PARSE TREE:(514) ROOT ROOT
    (515) Find CMT
        (516) movie NT
            (519) acted NT
                (521) Gabriele Ferzetti VTTEXT


===========
TRANSLATIONS
===========

===========
RESULTS
===========


07:16  INFO: ================
07:16  INFO: QUERY 122: Find the movie which is classified in the most number of genres
07:16  INFO: ================
07:20  INFO: ================
07:20  INFO: QUERY 62: Find all actors from Italy born after 1980
07:20  INFO: ================
07:27  INFO: ================
07:27  INFO: QUERY 27: What was the budget of the movie Juno from 2007?
07:27  INFO: ================
07:34  INFO: ================
07:34  INFO: QUERY 20: Find the actor who played "Captain Miller" in the movie "Saving Private Ryan"
07:34  INFO: ================
07:42  INFO: ================
07:42  INFO: QUERY 117: Find all movies featuring "Benedict Cumberbatch" and "Keira Knightley"
07:42  INFO: ================
07:48  INFO: ================
07:48  INFO: QUERY 119: What is the maximum number of movies in which "Brad Pitt" act in a given year?
07:48  INFO: ================
581. ROOT: ROOT; NA; ; (0) 
582. What: CMT; NA; ; (0) 
584. number of: FT; count; ; (0) 
586. maximum: FT; max; ; (0) 
587. movies: NT; NA; ; (0) movie.title(1.0):| movie(1.0):| cast.role(0.95):Movie; Movie F; Movie AD; | company.name(0.95):Movies; Movie; Movie Movie; | tv_series.title(0.84):Movies, Movies, Movi; Movie Mob; Moon Movies; | keyword.keyword(0.83):movie-in-movie; movies-about-movies; b-movie; | actor.name(0.76):| 
589. act: NT; NA; ; (0) movie.release_year(0.63):| tv_series.release_year(0.63):| actor.name(0.62):| actor(0.62):| genre.genre(0.62):| genre(0.62):| made_by(0.61):| 
592. Brad Pitt: VTTEXT; NA; ; (0) actor.name(1.0):Brad Pitt; Brad Pitt; bRad sPitt; | cast.role(1.0):Brad Pitt'; Brad Pitt'; Brad Pitt #1; | producer.name(1.0):Brad Pitt; Brad Pitt; Mad Pitt; | director.name(0.78):Brad Pruitt; Brad Pruitt; Brad Witty; | writer.name(0.78):Brad Pruitt; Brad Pruitt; Brad Witt; | movie.title(0.72):Brad Pitt Video Port; Brad Pitt Video Port; Brad; | actor.birth_city(0.61):Brad; Brad; Pitt Meadows; | 
593. year: NT; NA; ; (0) movie.release_year(1.0):| director.birth_year(1.0):| tv_series.release_year(1.0):| actor.birth_year(1.0):| producer.birth_year(1.0):| writer.birth_year(1.0):| movie.title(0.95):Year; Years; Years; | 
596. given: NT; NA; ; (0) made_by(0.8):| directed_by(0.68):| written_by(0.67):| cast.role(0.66):| cast(0.66):| movie.release_year(0.59):| tv_series.release_year(0.59):| 
What, WP
is, VBZ
the, DT
maximum, JJ
number, NN
of, IN
movies, NNS
in, IN
which, WDT
Brad Pitt, NNP
act, VBP
in, IN
a, DT
given, VBN
year, NN
root(ROOT-0, What-1)
cop(What-1, is-2)
det(number-5, the-3)
amod(number-5, maximum-4)
nsubj(What-1, number-5)
case(movies-7, of-6)
nmod(number-5, movies-7)
case(which-9, in-8)
nmod(act-11, which-9)
nsubj(act-11, Brad Pitt-10)
acl:relcl(movies-7, act-11)
case(year-15, in-12)
det(year-15, a-13)
amod(year-15, given-14)
nmod(act-11, year-15)

PARSE TREE:(581) ROOT ROOT
    (582) What CMT
        (584) number of FT
            (586) maximum FT
            (587) movies NT
                (589) act NT
                    (592) Brad Pitt VTTEXT
                    (593) year NT
                        (596) given NT


===========
TRANSLATIONS
===========
TOT: 0.7791182611450765; NL: 0.7717313085512446; NL+AG: 0.9321837389655881; NL+QF: 0.7791182611450765; rels: []; projs: [actor_0.birth_year]; preds: [actor_0.name = "Brad Pitt"]; havings: []; superlative: [count(distinct(movie_0.title)) desc limit 1]; blanks: 2
TOT: 0.7743081244497138; NL: 0.7717313085512446; NL+AG: 0.9321837389655881; NL+QF: 0.7743081244497138; rels: []; projs: [movie_0.release_year]; preds: [actor_0.name = "Brad Pitt"]; havings: []; superlative: [count(distinct(movie_0.title)) desc limit 1]; blanks: 2
TOT: 0.7717313085512446; NL: 0.7717313085512446; NL+AG: 0.9321837389655881; NL+QF: 0.7717313085512446; rels: []; projs: [director_0.birth_year]; preds: [actor_0.name = "Brad Pitt"]; havings: []; superlative: [count(distinct(movie_0.title)) desc limit 1]; blanks: 2
TOT: 0.7717313085512446; NL: 0.7717313085512446; NL+AG: 0.9321837389655881; NL+QF: 0.7717313085512446; rels: []; projs: [tv_series_0.release_year]; preds: [actor_0.name = "Brad Pitt"]; havings: []; superlative: [count(distinct(movie_0.title)) desc limit 1]; blanks: 2
TOT: 0.7717313085512446; NL: 0.7717313085512446; NL+AG: 0.9321837389655881; NL+QF: 0.7717313085512446; rels: []; projs: [producer_0.birth_year]; preds: [actor_0.name = "Brad Pitt"]; havings: []; superlative: [count(distinct(movie_0.title)) desc limit 1]; blanks: 2
TOT: 0.7717313085512446; NL: 0.7717313085512446; NL+AG: 0.9321837389655881; NL+QF: 0.7717313085512446; rels: []; projs: [writer_0.birth_year]; preds: [actor_0.name = "Brad Pitt"]; havings: []; superlative: [count(distinct(movie_0.title)) desc limit 1]; blanks: 2
TOT: 0.7717313085512446; NL: 0.7717313085512446; NL+AG: 0.9321837389655881; NL+QF: 0.7717313085512446; rels: []; projs: [movie_0.release_year]; preds: [cast_0.role = "Brad Pitt'"]; havings: []; superlative: [count(distinct(movie_0.title)) desc limit 1]; blanks: 2
TOT: 0.7717313085512446; NL: 0.7717313085512446; NL+AG: 0.9321837389655881; NL+QF: 0.7717313085512446; rels: []; projs: [director_0.birth_year]; preds: [cast_0.role = "Brad Pitt'"]; havings: []; superlative: [count(distinct(movie_0.title)) desc limit 1]; blanks: 2
TOT: 0.7717313085512446; NL: 0.7717313085512446; NL+AG: 0.9321837389655881; NL+QF: 0.7717313085512446; rels: []; projs: [tv_series_0.release_year]; preds: [cast_0.role = "Brad Pitt'"]; havings: []; superlative: [count(distinct(movie_0.title)) desc limit 1]; blanks: 2
TOT: 0.7717313085512446; NL: 0.7717313085512446; NL+AG: 0.9321837389655881; NL+QF: 0.7717313085512446; rels: []; projs: [actor_0.birth_year]; preds: [cast_0.role = "Brad Pitt'"]; havings: []; superlative: [count(distinct(movie_0.title)) desc limit 1]; blanks: 2
TOT: 0.7717313085512446; NL: 0.7717313085512446; NL+AG: 0.9321837389655881; NL+QF: 0.7717313085512446; rels: []; projs: [producer_0.birth_year]; preds: [cast_0.role = "Brad Pitt'"]; havings: []; superlative: [count(distinct(movie_0.title)) desc limit 1]; blanks: 2
TOT: 0.7717313085512446; NL: 0.7717313085512446; NL+AG: 0.9321837389655881; NL+QF: 0.7717313085512446; rels: []; projs: [writer_0.birth_year]; preds: [cast_0.role = "Brad Pitt'"]; havings: []; superlative: [count(distinct(movie_0.title)) desc limit 1]; blanks: 2
TOT: 0.7717313085512446; NL: 0.7717313085512446; NL+AG: 0.9321837389655881; NL+QF: 0.7717313085512446; rels: []; projs: [movie_0.release_year]; preds: [producer_0.name = "Brad Pitt"]; havings: []; superlative: [count(distinct(movie_0.title)) desc limit 1]; blanks: 2
TOT: 0.7717313085512446; NL: 0.7717313085512446; NL+AG: 0.9321837389655881; NL+QF: 0.7717313085512446; rels: []; projs: [director_0.birth_year]; preds: [producer_0.name = "Brad Pitt"]; havings: []; superlative: [count(distinct(movie_0.title)) desc limit 1]; blanks: 2
TOT: 0.7717313085512446; NL: 0.7717313085512446; NL+AG: 0.9321837389655881; NL+QF: 0.7717313085512446; rels: []; projs: [tv_series_0.release_year]; preds: [producer_0.name = "Brad Pitt"]; havings: []; superlative: [count(distinct(movie_0.title)) desc limit 1]; blanks: 2
TOT: 0.7717313085512446; NL: 0.7717313085512446; NL+AG: 0.9321837389655881; NL+QF: 0.7717313085512446; rels: []; projs: [actor_0.birth_year]; preds: [producer_0.name = "Brad Pitt"]; havings: []; superlative: [count(distinct(movie_0.title)) desc limit 1]; blanks: 2
TOT: 0.7717313085512446; NL: 0.7717313085512446; NL+AG: 0.9321837389655881; NL+QF: 0.7717313085512446; rels: []; projs: [producer_0.birth_year]; preds: [producer_0.name = "Brad Pitt"]; havings: []; superlative: [count(distinct(movie_0.title)) desc limit 1]; blanks: 2
TOT: 0.7717313085512446; NL: 0.7717313085512446; NL+AG: 0.9321837389655881; NL+QF: 0.7717313085512446; rels: []; projs: [writer_0.birth_year]; preds: [producer_0.name = "Brad Pitt"]; havings: []; superlative: [count(distinct(movie_0.title)) desc limit 1]; blanks: 2

===========
RESULTS
===========
TOT: 0.7770670498173595; TR: 0.7791182611450765; QF: 0.24203618756371048; select actor_0.birth_year from actor as actor_0, cast as cast_0, movie as movie_0 where actor_0.name = "Brad Pitt" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid group by actor_0.birth_year order by count(distinct(movie_0.title)) desc limit 1
TOT: 0.7757618327551751; TR: 0.7791182611450765; QF: 0.07339626099706745; select actor_0.birth_year from actor as actor_0, cast as cast_0, directed_by as directed_by_0, movie as movie_0, tv_series as tv_series_0 where actor_0.name = "Brad Pitt" and actor_0.aid = cast_0.aid and cast_0.msid = tv_series_0.sid and directed_by_0.msid = movie_0.mid and directed_by_0.msid = tv_series_0.sid group by actor_0.birth_year order by count(distinct(movie_0.title)) desc limit 1
TOT: 0.7757612206552412; TR: 0.7791182611450765; QF: 0.06727526165817303; select actor_0.birth_year from actor as actor_0, cast as cast_0, copyright as copyright_0, movie as movie_0, tv_series as tv_series_0 where actor_0.name = "Brad Pitt" and actor_0.aid = cast_0.aid and cast_0.msid = tv_series_0.sid and copyright_0.msid = movie_0.mid and copyright_0.msid = tv_series_0.sid group by actor_0.birth_year order by count(distinct(movie_0.title)) desc limit 1
TOT: 0.775760429980466; TR: 0.7791182611450765; QF: 0.05936851390618514; select actor_0.birth_year from actor as actor_0, cast as cast_0, made_by as made_by_0, movie as movie_0, tv_series as tv_series_0 where actor_0.name = "Brad Pitt" and actor_0.aid = cast_0.aid and cast_0.msid = tv_series_0.sid and made_by_0.msid = movie_0.mid and made_by_0.msid = tv_series_0.sid group by actor_0.birth_year order by count(distinct(movie_0.title)) desc limit 1
TOT: 0.7757594465484038; TR: 0.7791182611450765; QF: 0.049534193284193284; select actor_0.birth_year from actor as actor_0, cast as cast_0, classification as classification_0, movie as movie_0, tv_series as tv_series_0 where actor_0.name = "Brad Pitt" and actor_0.aid = cast_0.aid and cast_0.msid = tv_series_0.sid and classification_0.msid = movie_0.mid and classification_0.msid = tv_series_0.sid group by actor_0.birth_year order by count(distinct(movie_0.title)) desc limit 1
TOT: 0.7757594465484038; TR: 0.7791182611450765; QF: 0.049534193284193284; select actor_0.birth_year from actor as actor_0, cast as cast_0, movie as movie_0, tags as tags_0, tv_series as tv_series_0 where actor_0.name = "Brad Pitt" and actor_0.aid = cast_0.aid and cast_0.msid = tv_series_0.sid and movie_0.mid = tags_0.msid and tags_0.msid = tv_series_0.sid group by actor_0.birth_year order by count(distinct(movie_0.title)) desc limit 1
TOT: 0.775759183785641; TR: 0.7791182611450765; QF: 0.04690656565656566; select actor_0.birth_year from actor as actor_0, cast as cast_0, movie as movie_0, tv_series as tv_series_0, written_by as written_by_0 where actor_0.name = "Brad Pitt" and actor_0.aid = cast_0.aid and cast_0.msid = tv_series_0.sid and movie_0.mid = written_by_0.msid and tv_series_0.sid = written_by_0.msid group by actor_0.birth_year order by count(distinct(movie_0.title)) desc limit 1
TOT: 0.7757589061645285; TR: 0.7791182611450765; QF: 0.044130354530414695; select actor_0.birth_year from actor as actor_0, cast as cast_0, cast as cast_1, movie as movie_0, tv_series as tv_series_0 where actor_0.name = "Brad Pitt" and actor_0.aid = cast_1.aid and cast_0.msid = movie_0.mid and cast_0.msid = tv_series_0.sid and cast_1.msid = tv_series_0.sid group by actor_0.birth_year order by count(distinct(movie_0.title)) desc limit 1
TOT: 0.7750745193488847; TR: 0.7791182611450765; QF: 0.05592532467532467; select actor_0.birth_year from actor as actor_0, cast as cast_0, directed_by as directed_by_0, directed_by as directed_by_1, director as director_0, movie as movie_0, tv_series as tv_series_0 where actor_0.name = "Brad Pitt" and actor_0.aid = cast_0.aid and cast_0.msid = tv_series_0.sid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and directed_by_1.did = director_0.did and directed_by_1.msid = tv_series_0.sid group by actor_0.birth_year order by count(distinct(movie_0.title)) desc limit 1
TOT: 0.7750738310805777; TR: 0.7791182611450765; QF: 0.04904264160593274; select actor_0.birth_year from actor as actor_0, cast as cast_0, company as company_0, copyright as copyright_0, copyright as copyright_1, movie as movie_0, tv_series as tv_series_0 where actor_0.name = "Brad Pitt" and actor_0.aid = cast_0.aid and cast_0.msid = tv_series_0.sid and company_0.id = copyright_0.cid and company_0.id = copyright_1.cid and copyright_0.msid = movie_0.mid and copyright_1.msid = tv_series_0.sid group by actor_0.birth_year order by count(distinct(movie_0.title)) desc limit 1


07:55  INFO: ================
07:55  INFO: QUERY 116: What movies have the same director as the movie "Revolutionary Road"?
07:55  INFO: ================
08:01  INFO: ================
08:01  INFO: QUERY 47: What are the series featuring "Kerry Washington"?
08:01  INFO: ================
610. ROOT: ROOT; NA; ; (0) 
611. featuring: NT; NA; ; (0) tv_series.title(0.69):| tv_series(0.69):| movie.release_year(0.64):| tv_series.release_year(0.64):| made_by(0.64):| movie.title_aka(0.62):| tv_series.title_aka(0.62):| 
612. What: CMT; NA; ; (0) 
614. series: NT; NA; ; (0) tv_series.title(1.0):| tv_series(1.0):| keyword.keyword(0.95):series; series; series-in-series; | company.name(0.87):Series+; Series+; T-Series; | movie.title(0.8):Series 4; Series 4; Chinese Series; | actor.name(0.79):Eric Series; Eric Series; series editor; | tv_series.num_of_episodes(0.68):| 
616. Kerry Washington: VTTEXT; NA; ; (0) actor.name(1.0):Kerry Washington; Kerry Washington; Jerry Washington; | producer.name(1.0):Kerry Washington; Kerry Washington; Terry Washington; | director.name(0.93):Jerry Washington; Leroy Washington; Tony Washington; | writer.name(0.93):Jerry Washington; Ellery Washington; Leroy Washington; | cast.role(0.91):Sherry Washington; Roy Washington; Amy Washington; | director.birth_city(0.77):Washington; Washington; Washington; | actor.birth_city(0.77):Washington; Washington; Washington; | 
What, WP
are, VBP
the, DT
series, NN
featuring, VBG
Kerry Washington, NNP
dep(featuring-5, What-1)
aux(featuring-5, are-2)
det(series-4, the-3)
nsubj(featuring-5, series-4)
root(ROOT-0, featuring-5)
dobj(featuring-5, Kerry Washington-6)

PARSE TREE:(610) ROOT ROOT
    (612) What CMT
        (614) series NT
            (611) featuring NT
                (616) Kerry Washington VTTEXT


===========
TRANSLATIONS
===========
TOT: 1.0; NL: 1.0; NL+AG: 1.0; NL+QF: 1.0; rels: []; projs: [tv_series_0.title]; preds: [actor_0.name = "Kerry Washington"]; havings: []; superlative: []; blanks: 0
TOT: 1.0; NL: 1.0; NL+AG: 1.0; NL+QF: 1.0; rels: []; projs: [tv_series_0.title]; preds: [producer_0.name = "Kerry Washington"]; havings: []; superlative: []; blanks: 0
TOT: 0.9660917830792959; NL: 0.9660917830792959; NL+AG: 0.9963430420711974; NL+QF: 0.9660917830792959; rels: []; projs: [tv_series_0.title]; preds: [director_0.name = "Jerry Washington"]; havings: []; superlative: []; blanks: 0
TOT: 0.9660917830792959; NL: 0.9660917830792959; NL+AG: 0.9963430420711974; NL+QF: 0.9660917830792959; rels: []; projs: [tv_series_0.title]; preds: [writer_0.name = "Jerry Washington"]; havings: []; superlative: []; blanks: 0
TOT: 0.9554427922043668; NL: 0.9554427922043668; NL+AG: 0.995220589804275; NL+QF: 0.9554427922043668; rels: []; projs: [tv_series_0.title]; preds: [cast_0.role = "Sherry Washington"]; havings: []; superlative: []; blanks: 0
TOT: 0.8801117367933934; NL: 0.8801117367933934; NL+AG: 0.9890291262135922; NL+QF: 0.8801117367933934; rels: []; projs: [tv_series_0.title]; preds: [director_0.birth_city = "Washington"]; havings: []; superlative: []; blanks: 0
TOT: 0.8801117367933934; NL: 0.8801117367933934; NL+AG: 0.9890291262135922; NL+QF: 0.8801117367933934; rels: []; projs: [tv_series_0.title]; preds: [actor_0.birth_city = "Washington"]; havings: []; superlative: []; blanks: 0
TOT: 0.8662391053409028; NL: 0.8662391053409028; NL+AG: 0.9626264316569841; NL+QF: 0.8662391053409028; rels: []; projs: [tv_series_0.title]; preds: [actor_0.name = "Kerry Washington"]; havings: []; superlative: []; blanks: 1
TOT: 0.8662391053409028; NL: 0.8662391053409028; NL+AG: 0.9626264316569841; NL+QF: 0.8662391053409028; rels: []; projs: [tv_series_0.title]; preds: [producer_0.name = "Kerry Washington"]; havings: []; superlative: []; blanks: 1
TOT: 0.846544991160274; NL: 0.846544991160274; NL+AG: 0.9547666454343248; NL+QF: 0.846544991160274; rels: []; projs: [tv_series_0.title]; preds: [director_0.name = "Jerry Washington"]; havings: []; superlative: []; blanks: 1
TOT: 0.846544991160274; NL: 0.846544991160274; NL+AG: 0.9547666454343248; NL+QF: 0.846544991160274; rels: []; projs: [tv_series_0.title]; preds: [writer_0.name = "Jerry Washington"]; havings: []; superlative: []; blanks: 1

===========
RESULTS
===========
TOT: 0.9957366009983106; TR: 1.0; QF: 0.20833333333333334; select tv_series_0.title from made_by as made_by_0, producer as producer_0, tv_series as tv_series_0 where producer_0.name = "Kerry Washington" and made_by_0.msid = tv_series_0.sid and made_by_0.pid = producer_0.pid
TOT: 0.9957304772609369; TR: 1.0; QF: 0.14709595959595959; select tv_series_0.title from actor as actor_0, cast as cast_0, tv_series as tv_series_0 where actor_0.name = "Kerry Washington" and actor_0.aid = cast_0.aid and cast_0.msid = tv_series_0.sid
TOT: 0.9944376024283883; TR: 1.0; QF: 0.10187832938739272; select tv_series_0.title from actor as actor_0, cast as cast_0, directed_by as directed_by_0, movie as movie_0, tv_series as tv_series_0 where actor_0.name = "Kerry Washington" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and directed_by_0.msid = movie_0.mid and directed_by_0.msid = tv_series_0.sid
TOT: 0.9944369903284545; TR: 1.0; QF: 0.09575733004849832; select tv_series_0.title from actor as actor_0, cast as cast_0, copyright as copyright_0, movie as movie_0, tv_series as tv_series_0 where actor_0.name = "Kerry Washington" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and copyright_0.msid = movie_0.mid and copyright_0.msid = tv_series_0.sid
TOT: 0.9944364458658005; TR: 1.0; QF: 0.09031270350863162; select tv_series_0.title from cast as cast_0, made_by as made_by_0, movie as movie_0, producer as producer_0, tv_series as tv_series_0 where producer_0.name = "Kerry Washington" and cast_0.msid = movie_0.mid and cast_0.msid = tv_series_0.sid and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid
TOT: 0.9944361996536792; TR: 1.0; QF: 0.08785058229651041; select tv_series_0.title from actor as actor_0, cast as cast_0, made_by as made_by_0, movie as movie_0, tv_series as tv_series_0 where actor_0.name = "Kerry Washington" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and made_by_0.msid = movie_0.mid and made_by_0.msid = tv_series_0.sid
TOT: 0.9944356153153642; TR: 1.0; QF: 0.08200719914567682; select tv_series_0.title from directed_by as directed_by_0, made_by as made_by_0, movie as movie_0, producer as producer_0, tv_series as tv_series_0 where producer_0.name = "Kerry Washington" and directed_by_0.msid = movie_0.mid and directed_by_0.msid = tv_series_0.sid and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid
TOT: 0.994435216221617; TR: 1.0; QF: 0.07801626167451856; select tv_series_0.title from actor as actor_0, cast as cast_0, movie as movie_0, tags as tags_0, tv_series as tv_series_0 where actor_0.name = "Kerry Washington" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and movie_0.mid = tags_0.msid and tags_0.msid = tv_series_0.sid
TOT: 0.994435216221617; TR: 1.0; QF: 0.07801626167451856; select tv_series_0.title from actor as actor_0, cast as cast_0, classification as classification_0, movie as movie_0, tv_series as tv_series_0 where actor_0.name = "Kerry Washington" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and classification_0.msid = movie_0.mid and classification_0.msid = tv_series_0.sid
TOT: 0.9944350032154302; TR: 1.0; QF: 0.07588619980678243; select tv_series_0.title from copyright as copyright_0, made_by as made_by_0, movie as movie_0, producer as producer_0, tv_series as tv_series_0 where producer_0.name = "Kerry Washington" and copyright_0.msid = movie_0.mid and copyright_0.msid = tv_series_0.sid and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid


08:04  INFO: ================
08:04  INFO: QUERY 69: Find all the directors who are from Afghanistan
08:04  INFO: ================
08:07  INFO: ================
08:07  INFO: QUERY 127: Who directed the latest movie by "NBCUniversal"
08:07  INFO: ================
628. ROOT: ROOT; NA; ; (0) 
629. directed: NT; NA; ; (0) directed_by(1.0):| director.name(0.72):| director(0.72):| written_by(0.68):| cast.role(0.67):| cast(0.67):| made_by(0.67):| 
630. Who: CMT; NA; ; (0) director.name(1.0):| actor.name(1.0):| producer.name(1.0):| writer.name(1.0):| 
631. movie: NT; NA; ; (0) movie.title(1.0):| movie(1.0):| cast.role(0.95):Movie; Movie F; Movie AD; | company.name(0.95):Movie; Movies; Movie Movie; | keyword.keyword(0.83):movie-in-movie; b-movie; z-movie; | actor.name(0.76):| actor(0.76):| 
633. latest: FT; max; ; (0) 
634. NBCUniversal: VTTEXT; NA; ; (0) company.name(1.0):NBCUniversal; NBCUniversal Media; NBCUniversal Skycast; | genre.genre(0.2):Commercial; Commercial; Experimental; | 
Who, WP
directed, VBD
the, DT
latest, JJS
movie, NN
by, IN
NBCUniversal, NNP
nsubj(directed-2, Who-1)
root(ROOT-0, directed-2)
det(movie-5, the-3)
amod(movie-5, latest-4)
dobj(directed-2, movie-5)
case(NBCUniversal-7, by-6)
nmod(directed-2, NBCUniversal-7)

PARSE TREE:(628) ROOT ROOT
    (630) Who CMT
        (629) directed NT
            (631) movie NT
            (634) NBCUniversal VTTEXT


===========
TRANSLATIONS
===========
TOT: 0.9858214234596546; NL: 0.9830475724915585; NL+AG: 0.9947199354012503; NL+QF: 0.9858214234596546; rels: []; projs: [actor_0.name]; preds: [cast_0.role = "Movie",company_0.name = "NBCUniversal"]; havings: []; superlative: []; blanks: 0
TOT: 0.9830475724915585; NL: 0.9830475724915585; NL+AG: 0.9947199354012503; NL+QF: 0.9830475724915585; rels: []; projs: [director_0.name]; preds: [cast_0.role = "Movie",company_0.name = "NBCUniversal"]; havings: []; superlative: []; blanks: 0
TOT: 0.9830475724915585; NL: 0.9830475724915585; NL+AG: 0.9947199354012503; NL+QF: 0.9830475724915585; rels: []; projs: [producer_0.name]; preds: [cast_0.role = "Movie",company_0.name = "NBCUniversal"]; havings: []; superlative: []; blanks: 0
TOT: 0.9830475724915585; NL: 0.9830475724915585; NL+AG: 0.9947199354012503; NL+QF: 0.9830475724915585; rels: []; projs: [writer_0.name]; preds: [cast_0.role = "Movie",company_0.name = "NBCUniversal"]; havings: []; superlative: []; blanks: 0
TOT: 0.943605885173802; NL: 0.9355249205979076; NL+AG: 0.977752260626729; NL+QF: 0.943605885173802; rels: []; projs: [director_0.name]; preds: [company_0.name = "NBCUniversal"]; havings: []; superlative: [movie_0.title desc limit 1]; blanks: 1
TOT: 0.9174505626104981; NL: 0.9174505626104981; NL+AG: 0.9733138759953143; NL+QF: 0.9174505626104981; rels: []; projs: [director_0.name]; preds: [company_0.name = "NBCUniversal"]; havings: []; superlative: [movie_0.title desc limit 1]; blanks: 1
TOT: 0.9174505626104981; NL: 0.9174505626104981; NL+AG: 0.9733138759953143; NL+QF: 0.9174505626104981; rels: []; projs: [actor_0.name]; preds: [company_0.name = "NBCUniversal"]; havings: []; superlative: [movie_0.title desc limit 1]; blanks: 1
TOT: 0.9174505626104981; NL: 0.9174505626104981; NL+AG: 0.9733138759953143; NL+QF: 0.9174505626104981; rels: []; projs: [producer_0.name]; preds: [company_0.name = "NBCUniversal"]; havings: []; superlative: [movie_0.title desc limit 1]; blanks: 1
TOT: 0.9174505626104981; NL: 0.9174505626104981; NL+AG: 0.9733138759953143; NL+QF: 0.9174505626104981; rels: []; projs: [writer_0.name]; preds: [company_0.name = "NBCUniversal"]; havings: []; superlative: [movie_0.title desc limit 1]; blanks: 1
TOT: 0.8657117502352817; NL: 0.8582978647386919; NL+AG: 0.9510661366220432; NL+QF: 0.8657117502352817; rels: []; projs: [director_0.name]; preds: [company_0.name = "NBCUniversal"]; havings: []; superlative: [movie_0.title desc limit 1]; blanks: 1
TOT: 0.8582978647386919; NL: 0.8582978647386919; NL+AG: 0.9448334504536765; NL+QF: 0.8582978647386919; rels: []; projs: [director_0.name]; preds: []; havings: []; superlative: [movie_0.title desc limit 1]; blanks: 2

===========
RESULTS
===========
TOT: 0.980403770982084; TR: 0.9858214234596546; QF: 0.13147161576278404; select actor_0.name from actor as actor_0, cast as cast_0, company as company_0, copyright as copyright_0, movie as movie_0 where cast_0.role = "Movie" and company_0.name = "NBCUniversal" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and company_0.id = copyright_0.cid and copyright_0.msid = movie_0.mid
TOT: 0.9804014652707241; TR: 0.9858214234596546; QF: 0.10841450216450217; select actor_0.name from actor as actor_0, cast as cast_0, company as company_0, copyright as copyright_0, tv_series as tv_series_0 where cast_0.role = "Movie" and company_0.name = "NBCUniversal" and actor_0.aid = cast_0.aid and cast_0.msid = tv_series_0.sid and company_0.id = copyright_0.cid and copyright_0.msid = tv_series_0.sid
TOT: 0.9797129700813577; TR: 0.9858214234596546; QF: 0.07912573508243191; select actor_0.name from actor as actor_0, cast as cast_0, company as company_0, copyright as copyright_0, directed_by as directed_by_0, movie as movie_0, tv_series as tv_series_0 where cast_0.role = "Movie" and company_0.name = "NBCUniversal" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and company_0.id = copyright_0.cid and copyright_0.msid = tv_series_0.sid and directed_by_0.msid = movie_0.mid and directed_by_0.msid = tv_series_0.sid
TOT: 0.979712302093401; TR: 0.9858214234596546; QF: 0.07244585551534509; select actor_0.name from actor as actor_0, cast as cast_0, company as company_0, copyright as copyright_0, made_by as made_by_0, movie as movie_0, tv_series as tv_series_0 where cast_0.role = "Movie" and company_0.name = "NBCUniversal" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and company_0.id = copyright_0.cid and copyright_0.msid = tv_series_0.sid and made_by_0.msid = movie_0.mid and made_by_0.msid = tv_series_0.sid
TOT: 0.979711833792419; TR: 0.9858214234596546; QF: 0.06776284569534897; select actor_0.name from actor as actor_0, cast as cast_0, company as company_0, copyright as copyright_0, movie as movie_0, tags as tags_0, tv_series as tv_series_0 where cast_0.role = "Movie" and company_0.name = "NBCUniversal" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and company_0.id = copyright_0.cid and copyright_0.msid = tv_series_0.sid and movie_0.mid = tags_0.msid and tags_0.msid = tv_series_0.sid
TOT: 0.979711833792419; TR: 0.9858214234596546; QF: 0.06776284569534897; select actor_0.name from actor as actor_0, cast as cast_0, classification as classification_0, company as company_0, copyright as copyright_0, movie as movie_0, tv_series as tv_series_0 where cast_0.role = "Movie" and company_0.name = "NBCUniversal" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and classification_0.msid = movie_0.mid and classification_0.msid = tv_series_0.sid and company_0.id = copyright_0.cid and copyright_0.msid = tv_series_0.sid
TOT: 0.9797117086672938; TR: 0.9858214234596546; QF: 0.06651159444409771; select actor_0.name from actor as actor_0, cast as cast_0, company as company_0, copyright as copyright_0, movie as movie_0, tv_series as tv_series_0, written_by as written_by_0 where cast_0.role = "Movie" and company_0.name = "NBCUniversal" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and company_0.id = copyright_0.cid and copyright_0.msid = tv_series_0.sid and movie_0.mid = written_by_0.msid and tv_series_0.sid = written_by_0.msid
TOT: 0.9797113554612061; TR: 0.9858214234596546; QF: 0.06297953356701827; select actor_0.name from actor as actor_0, cast as cast_0, company as company_0, copyright as copyright_0, directed_by as directed_by_0, movie as movie_0, tv_series as tv_series_0 where cast_0.role = "Movie" and company_0.name = "NBCUniversal" and actor_0.aid = cast_0.aid and cast_0.msid = tv_series_0.sid and company_0.id = copyright_0.cid and copyright_0.msid = movie_0.mid and directed_by_0.msid = movie_0.mid and directed_by_0.msid = tv_series_0.sid
TOT: 0.9797106874732494; TR: 0.9858214234596546; QF: 0.05629965399993143; select actor_0.name from actor as actor_0, cast as cast_0, company as company_0, copyright as copyright_0, made_by as made_by_0, movie as movie_0, tv_series as tv_series_0 where cast_0.role = "Movie" and company_0.name = "NBCUniversal" and actor_0.aid = cast_0.aid and cast_0.msid = tv_series_0.sid and company_0.id = copyright_0.cid and copyright_0.msid = movie_0.mid and made_by_0.msid = movie_0.mid and made_by_0.msid = tv_series_0.sid
TOT: 0.9797104775780504; TR: 0.9858214234596546; QF: 0.05420070201025447; select actor_0.name from actor as actor_0, cast as cast_0, cast as cast_1, company as company_0, copyright as copyright_0, movie as movie_0, tv_series as tv_series_0 where cast_0.role = "Movie" and company_0.name = "NBCUniversal" and actor_0.aid = cast_1.aid and cast_0.msid = movie_0.mid and cast_0.msid = tv_series_0.sid and cast_1.msid = movie_0.mid and company_0.id = copyright_0.cid and copyright_0.msid = tv_series_0.sid


08:10  INFO: ================
08:10  INFO: QUERY 82: which company funded the "Mickey Mouse" series
08:10  INFO: ================
08:14  INFO: ================
08:14  INFO: QUERY 25: Find all movies written and produced by "Woody Allen"
08:14  INFO: ================
645. ROOT: ROOT; NA; ; (0) 
646. Find: CMT; NA; ; (0) 
647. movies: NT; NA; all; (0) movie.title(1.0):| movie(1.0):| cast.role(0.95):Movie; Movie F; Movie AD; | company.name(0.95):Movies; Movie; Movie Movie; | tv_series.title(0.84):Movies, Movies, Movi; Movie Mob; Moon Movies; | keyword.keyword(0.83):movie-in-movie; movies-about-movies; b-movie; | actor.name(0.76):| 
649. written: NT; NA; ; (0) written_by(1.0):| writer.name(0.78):| writer(0.78):| directed_by(0.68):| movie.title_aka(0.66):| tv_series.title_aka(0.66):| made_by(0.65):| 
651. produced: NT; NA; ; (0) made_by(0.74):| directed_by(0.69):| producer.name(0.68):| producer(0.68):| cast.role(0.63):| cast(0.63):| written_by(0.63):| 
652. Woody Allen: VTTEXT; NA; ; (0) director.name(1.0):Woody Allen; Woody Allen; Moody Allen; | actor.name(1.0):Woody Allen; Woody Allen; Jody Allen; | producer.name(1.0):Woody Allen; Woody Allen; Moody Allen; | writer.name(1.0):Woody Allen; Woody Allen; Moody Allen; | cast.role(0.85):Woody Allen Jr.; Woody Allen Jr.; Young Woody Allen; | movie.title(0.82):F.U. Woody Allen; F.U. Woody Allen; Woody Before Allen; | tv_series.title(0.73):The Woody Allen Show; The Woody Allen Show; Dave Allen; | 
Find, VB
all, DT
movies, NNS
written, VBN
and, CC
produced, VBN
by, IN
Woody Allen, NNP
root(ROOT-0, Find-1)
det(movies-3, all-2)
dobj(Find-1, movies-3)
acl(movies-3, written-4)
cc(written-4, and-5)
conj(written-4, produced-6)
case(Woody Allen-8, by-7)
nmod(written-4, Woody Allen-8)

PARSE TREE:(645) ROOT ROOT
    (646) Find CMT
        (647) movies NT
            (649) written NT
                (652) Woody Allen VTTEXT
            (651) produced NT


===========
TRANSLATIONS
===========
TOT: 0.8979007600118484; NL: 0.8979007600118484; NL+AG: 0.9664773678070535; NL+QF: 0.8979007600118484; rels: [written_by]; projs: [movie_0.title]; preds: [director_0.name = "Woody Allen"]; havings: []; superlative: []; blanks: 1
TOT: 0.8979007600118484; NL: 0.8979007600118484; NL+AG: 0.9664773678070535; NL+QF: 0.8979007600118484; rels: [written_by]; projs: [movie_0.title]; preds: [actor_0.name = "Woody Allen"]; havings: []; superlative: []; blanks: 1
TOT: 0.8979007600118484; NL: 0.8979007600118484; NL+AG: 0.9664773678070535; NL+QF: 0.8979007600118484; rels: [written_by]; projs: [movie_0.title]; preds: [producer_0.name = "Woody Allen"]; havings: []; superlative: []; blanks: 1
TOT: 0.8979007600118484; NL: 0.8979007600118484; NL+AG: 0.9664773678070535; NL+QF: 0.8979007600118484; rels: [written_by]; projs: [movie_0.title]; preds: [writer_0.name = "Woody Allen"]; havings: []; superlative: []; blanks: 1
TOT: 0.8632293865512835; NL: 0.8609190835385728; NL+AG: 0.9480630652831605; NL+QF: 0.8632293865512835; rels: [written_by]; projs: [movie_0.title]; preds: [cast_0.role = "Woody Allen Jr."]; havings: []; superlative: []; blanks: 1
TOT: 0.8582820934858434; NL: 0.8535263472782527; NL+AG: 0.9446550861096057; NL+QF: 0.8582820934858434; rels: [written_by]; projs: [movie_0.title]; preds: [movie_0.title = "F.U. Woody Allen"]; havings: []; superlative: []; blanks: 1
TOT: 0.8404993972878521; NL: 0.8389821044998752; NL+AG: 0.9427307265828302; NL+QF: 0.8404993972878521; rels: [written_by]; projs: [actor_0.name]; preds: [director_0.name = "Woody Allen"]; havings: []; superlative: []; blanks: 1
TOT: 0.8401690522252446; NL: 0.8389821044998752; NL+AG: 0.9427307265828302; NL+QF: 0.8401690522252446; rels: [written_by]; projs: [actor_0.name]; preds: [actor_0.name = "Woody Allen"]; havings: []; superlative: []; blanks: 1
TOT: 0.8389821044998752; NL: 0.8389821044998752; NL+AG: 0.9427307265828302; NL+QF: 0.8389821044998752; rels: [written_by]; projs: [actor_0.name]; preds: [producer_0.name = "Woody Allen"]; havings: []; superlative: []; blanks: 1
TOT: 0.8389821044998752; NL: 0.8389821044998752; NL+AG: 0.9427307265828302; NL+QF: 0.8389821044998752; rels: [written_by]; projs: [actor_0.name]; preds: [writer_0.name = "Woody Allen"]; havings: []; superlative: []; blanks: 1
TOT: 0.8286748131504863; NL: 0.8286748131504863; NL+AG: 0.9426933077521801; NL+QF: 0.8286748131504863; rels: [written_by]; projs: [movie_0.title]; preds: [tv_series_0.title = "The Woody Allen Show"]; havings: []; superlative: []; blanks: 1

===========
RESULTS
===========
TOT: 0.8946551126692998; TR: 0.8979007600118484; QF: 0.17592592592592593; select movie_0.title from movie as movie_0, writer as writer_0, written_by as written_by_0 where writer_0.name = "Woody Allen" and movie_0.mid = written_by_0.msid and writer_0.wid = written_by_0.wid
TOT: 0.8933579243049276; TR: 0.8979007600118484; QF: 0.08757297748123435; select movie_0.title from cast as cast_0, movie as movie_0, tv_series as tv_series_0, writer as writer_0, written_by as written_by_0 where writer_0.name = "Woody Allen" and cast_0.msid = movie_0.mid and cast_0.msid = tv_series_0.sid and tv_series_0.sid = written_by_0.msid and writer_0.wid = written_by_0.wid
TOT: 0.8933570937544912; TR: 0.8979007600118484; QF: 0.07926747311827957; select movie_0.title from directed_by as directed_by_0, movie as movie_0, tv_series as tv_series_0, writer as writer_0, written_by as written_by_0 where writer_0.name = "Woody Allen" and directed_by_0.msid = movie_0.mid and directed_by_0.msid = tv_series_0.sid and tv_series_0.sid = written_by_0.msid and writer_0.wid = written_by_0.wid
TOT: 0.8933564816545574; TR: 0.8979007600118484; QF: 0.07314647377938517; select movie_0.title from copyright as copyright_0, movie as movie_0, tv_series as tv_series_0, writer as writer_0, written_by as written_by_0 where writer_0.name = "Woody Allen" and copyright_0.msid = movie_0.mid and copyright_0.msid = tv_series_0.sid and tv_series_0.sid = written_by_0.msid and writer_0.wid = written_by_0.wid
TOT: 0.8933556947849572; TR: 0.8979007600118484; QF: 0.06527777777777778; select movie_0.title from made_by as made_by_0, movie as movie_0, producer as producer_0, tv_series as tv_series_0, written_by as written_by_0 where producer_0.name = "Woody Allen" and made_by_0.msid = tv_series_0.sid and made_by_0.pid = producer_0.pid and movie_0.mid = written_by_0.msid and tv_series_0.sid = written_by_0.msid
TOT: 0.8933556909797822; TR: 0.8979007600118484; QF: 0.06523972602739726; select movie_0.title from made_by as made_by_0, movie as movie_0, tv_series as tv_series_0, writer as writer_0, written_by as written_by_0 where writer_0.name = "Woody Allen" and made_by_0.msid = movie_0.mid and made_by_0.msid = tv_series_0.sid and tv_series_0.sid = written_by_0.msid and writer_0.wid = written_by_0.wid
TOT: 0.89335470754772; TR: 0.8979007600118484; QF: 0.05540540540540541; select movie_0.title from movie as movie_0, tags as tags_0, tv_series as tv_series_0, writer as writer_0, written_by as written_by_0 where writer_0.name = "Woody Allen" and movie_0.mid = tags_0.msid and tags_0.msid = tv_series_0.sid and tv_series_0.sid = written_by_0.msid and writer_0.wid = written_by_0.wid
TOT: 0.89335470754772; TR: 0.8979007600118484; QF: 0.05540540540540541; select movie_0.title from classification as classification_0, movie as movie_0, tv_series as tv_series_0, writer as writer_0, written_by as written_by_0 where writer_0.name = "Woody Allen" and classification_0.msid = movie_0.mid and classification_0.msid = tv_series_0.sid and tv_series_0.sid = written_by_0.msid and writer_0.wid = written_by_0.wid
TOT: 0.8933544946383297; TR: 0.8979007600118484; QF: 0.05327631150211796; select movie_0.title from directed_by as directed_by_0, director as director_0, movie as movie_0, tv_series as tv_series_0, written_by as written_by_0 where director_0.name = "Woody Allen" and directed_by_0.did = director_0.did and directed_by_0.msid = tv_series_0.sid and movie_0.mid = written_by_0.msid and tv_series_0.sid = written_by_0.msid
TOT: 0.8933538576637451; TR: 0.8979007600118484; QF: 0.04690656565656566; select movie_0.title from actor as actor_0, cast as cast_0, movie as movie_0, tv_series as tv_series_0, written_by as written_by_0 where actor_0.name = "Woody Allen" and actor_0.aid = cast_0.aid and cast_0.msid = tv_series_0.sid and movie_0.mid = written_by_0.msid and tv_series_0.sid = written_by_0.msid


08:17  INFO: ================
08:17  INFO: QUERY 105: How many movies did "Steven Spielberg" direct?
08:17  INFO: ================
08:20  INFO: ================
08:20  INFO: QUERY 23: Who acted "John Nash" in the movie "A Beautiful Mind"?
08:20  INFO: ================
08:29  INFO: ===== FOLD 2 =====
08:29  INFO: ===== Parsing Results =====
08:29  INFO: Total Queries: 98
08:29  INFO: Correctly Parsed: 97/98

08:29  INFO: ================
08:29  INFO: QUERY 120: Find the actor with the most number of films
08:29  INFO: ================
08:34  INFO: ================
08:34  INFO: QUERY 108: How many actors are in the movie "Saving Private Ryan"?
08:34  INFO: ================
08:37  INFO: ================
08:37  INFO: QUERY 34: Find all actors who were born in "New York City" in 1984
08:37  INFO: ================
08:48  INFO: ================
08:48  INFO: QUERY 19: Who is the director of the movie "Catch Me If You Can"?
08:48  INFO: ================
08:53  INFO: ================
08:53  INFO: QUERY 59: Find all the female actors from Austin
08:53  INFO: ================
09:07  INFO: ================
09:07  INFO: QUERY 32: What company produced the movie "Juno"?
09:07  INFO: ================
09:11  INFO: ================
09:11  INFO: QUERY 7: In what year was "Benedict Cumberbatch" born
09:11  INFO: ================
09:13  INFO: ================
09:13  INFO: QUERY 11: Where is the birthplace of "Kevin Spacey"
09:13  INFO: ================
09:16  INFO: ================
09:16  INFO: QUERY 66: Who is the actor playing "Alan Turing" in "The Imitation Game"?
09:16  INFO: ================
748. ROOT: ROOT; NA; ; (0) 
749. Who: CMT; NA; ; (0) 
751. Alan Turing: VTTEXT; NA; ; (0) cast.role(1.0):Alan Turing; Alan Turing; Alana Turing; | movie.title(0.79):Decoding Alan Turing; Decoding Alan Turing; Dear Alan: A Tribute; | director.name(0.76):Allen Turing; Alan Tang; Alan Tang; | actor.name(0.76):Allen Turing; Alan King; Alan King; | writer.name(0.76):Allen Turing; Alan Tang; Alan Tang; | producer.name(0.7):Alan Tang; Alan Tang; Alan King; | company.name(0.63):Allan Alan Pictures; Allan Alan Pictures; Alan Trading Company; | 
753. actor: NT; NA; ; (0) actor.name(1.0):| actor(1.0):| movie.title(0.95):Actor; Actor; Actor; | tv_series.title(0.95):Actor; Actors; The Actor Factor; | cast.role(0.95):Actors; Actors; Actors; | keyword.keyword(0.95):actors; actor-director; ex-actor; | movie.title(0.76):| 
754. playing: VTTEXT; NA; ; (0) movie.title(0.95):Playing; Playing; Playing 25; | cast.role(0.95):playing; Playing; Playing; | keyword.keyword(0.95):playing; playing-gin; playing-go; | tv_series.title(0.7):Playing Dead; Multi Playing; Playing Hooky; | tv_series.num_of_seasons(0.68):| movie.title_aka(0.66):| tv_series.title_aka(0.66):| 
755. The Imitation Game: VTTEXT; NA; ; (0) movie.title(1.0):The Imitation Game; The Imitation Game; The Imitation Game; | cast.role(0.84):The Imitation Game &; The Imitation Game &; The Imitation Game &; | tv_series.title(0.74):The Temptation Game; The Game; The Game; | keyword.keyword(0.69):imitation; imitation; camel-imitation; | company.name(0.67):Game Station, the; Game Station; Imagination Games; | actor.name(0.64):The Game; The Game; Simon Game; | producer.name(0.64):The Game; The Game; Simon Game; | 
Who, WP
is, VBZ
the, DT
actor, NN
playing, NN
Alan Turing, NN
in, IN
The Imitation Game, NNP
root(ROOT-0, Who-1)
cop(Who-1, is-2)
det(Alan Turing-6, the-3)
compound(Alan Turing-6, actor-4)
compound(Alan Turing-6, playing-5)
nsubj(Who-1, Alan Turing-6)
case(The Imitation Game-8, in-7)
nmod(Alan Turing-6, The Imitation Game-8)

PARSE TREE:(748) ROOT ROOT
    (749) Who CMT
        (751) Alan Turing VTTEXT
            (753) actor NT
            (754) playing VTTEXT
            (755) The Imitation Game VTTEXT


===========
TRANSLATIONS
===========
TOT: 0.839125174031199; NL: 0.839125174031199; NL+AG: 0.9369631460257548; NL+QF: 0.839125174031199; rels: []; projs: [actor_0.aid]; preds: [actor_0.name = "Allen Turing",movie_0.title = "The Imitation Game"]; havings: []; superlative: []; blanks: 1
TOT: 0.8144063193621914; NL: 0.7550415303475492; NL+AG: 0.9524692987209032; NL+QF: 0.8144063193621914; rels: []; projs: [actor_0.name]; preds: [cast_0.role = "Alan Turing",movie_0.title = "The Imitation Game"]; havings: []; superlative: []; blanks: 1
TOT: 0.803374959172446; NL: 0.803374959172446; NL+AG: 0.9120515927474118; NL+QF: 0.803374959172446; rels: []; projs: [actor_0.aid]; preds: [actor_0.name = "Allen Turing",cast_0.role = "The Imitation Game & Selma"]; havings: []; superlative: []; blanks: 1
TOT: 0.798706103448217; NL: 0.798706103448217; NL+AG: 0.905790963813992; NL+QF: 0.798706103448217; rels: []; projs: [movie_0.mid]; preds: [movie_0.title = "Decoding Alan Turing",movie_0.title = "The Imitation Game"]; havings: []; superlative: []; blanks: 1
TOT: 0.798634547539037; NL: 0.7758393689196864; NL+AG: 0.9356688081706614; NL+QF: 0.798634547539037; rels: []; projs: [actor_0.aid]; preds: [actor_0.name = "Allen Turing",cast_0.role = "playing",movie_0.title = "The Imitation Game"]; havings: []; superlative: []; blanks: 0
TOT: 0.7970571170539851; NL: 0.6980972118841674; NL+AG: 0.9707542724124226; NL+QF: 0.7970571170539851; rels: []; projs: [actor_0.name]; preds: [cast_0.role = "Alan Turing",cast_0.role = "playing",movie_0.title = "The Imitation Game"]; havings: []; superlative: []; blanks: 0
TOT: 0.796288502884526; NL: 0.6980972118841674; NL+AG: 0.9707542724124226; NL+QF: 0.796288502884526; rels: []; projs: [actor_0.name]; preds: [cast_0.role = "Alan Turing",movie_0.title = "Playing",movie_0.title = "The Imitation Game"]; havings: []; superlative: []; blanks: 0
TOT: 0.7891634855442764; NL: 0.6683553734916184; NL+AG: 0.9539578746730878; NL+QF: 0.7891634855442764; rels: []; projs: [actor_0.name]; preds: [cast_0.role = "Alan Turing",movie_0.title = "Playing",cast_0.role = "The Imitation Game & Selma"]; havings: []; superlative: []; blanks: 0
TOT: 0.7867665196818688; NL: 0.7228736276644114; NL+AG: 0.9345674681323004; NL+QF: 0.7867665196818688; rels: []; projs: [actor_0.name]; preds: [cast_0.role = "Alan Turing",cast_0.role = "The Imitation Game & Selma"]; havings: []; superlative: []; blanks: 1
TOT: 0.7858049356222503; NL: 0.7384686557246904; NL+AG: 0.9058798698624496; NL+QF: 0.7858049356222503; rels: []; projs: [movie_0.mid]; preds: [movie_0.title = "Decoding Alan Turing",cast_0.role = "playing",movie_0.title = "The Imitation Game"]; havings: []; superlative: []; blanks: 0
TOT: 0.7804668247676972; NL: 0.6584082067266795; NL+AG: 0.9497367001646511; NL+QF: 0.7804668247676972; rels: []; projs: [actor_0.name]; preds: [movie_0.title = "Decoding Alan Turing",cast_0.role = "playing",movie_0.title = "The Imitation Game"]; havings: []; superlative: []; blanks: 0

===========
RESULTS
===========
TOT: 0.8364736151895092; TR: 0.839125174031199; QF: 0.2392523364485981; select actor_0.aid from actor as actor_0, cast as cast_0, movie as movie_0 where actor_0.name = "Allen Turing" and movie_0.title = "The Imitation Game" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid
TOT: 0.8351689757752255; TR: 0.839125174031199; QF: 0.07638888888888888; select actor_0.aid from actor as actor_0, cast as cast_0, copyright as copyright_0, movie as movie_0, tv_series as tv_series_0 where actor_0.name = "Allen Turing" and movie_0.title = "The Imitation Game" and actor_0.aid = cast_0.aid and cast_0.msid = tv_series_0.sid and copyright_0.msid = movie_0.mid and copyright_0.msid = tv_series_0.sid
TOT: 0.8351688441327134; TR: 0.839125174031199; QF: 0.07507246376811594; select actor_0.aid from actor as actor_0, cast as cast_0, directed_by as directed_by_0, movie as movie_0, tv_series as tv_series_0 where actor_0.name = "Allen Turing" and movie_0.title = "The Imitation Game" and actor_0.aid = cast_0.aid and cast_0.msid = tv_series_0.sid and directed_by_0.msid = movie_0.mid and directed_by_0.msid = tv_series_0.sid
TOT: 0.83516667021967; TR: 0.839125174031199; QF: 0.05333333333333333; select actor_0.aid from actor as actor_0, cast as cast_0, movie as movie_0, tags as tags_0, tv_series as tv_series_0 where actor_0.name = "Allen Turing" and movie_0.title = "The Imitation Game" and actor_0.aid = cast_0.aid and cast_0.msid = tv_series_0.sid and movie_0.mid = tags_0.msid and tags_0.msid = tv_series_0.sid
TOT: 0.8351665440935439; TR: 0.839125174031199; QF: 0.052072072072072075; select actor_0.aid from actor as actor_0, cast as cast_0, movie as movie_0, tv_series as tv_series_0, written_by as written_by_0 where actor_0.name = "Allen Turing" and movie_0.title = "The Imitation Game" and actor_0.aid = cast_0.aid and cast_0.msid = tv_series_0.sid and movie_0.mid = written_by_0.msid and tv_series_0.sid = written_by_0.msid
TOT: 0.8351664145119074; TR: 0.839125174031199; QF: 0.05077625570776256; select actor_0.aid from actor as actor_0, cast as cast_0, classification as classification_0, movie as movie_0, tv_series as tv_series_0 where actor_0.name = "Allen Turing" and movie_0.title = "The Imitation Game" and actor_0.aid = cast_0.aid and cast_0.msid = tv_series_0.sid and classification_0.msid = movie_0.mid and classification_0.msid = tv_series_0.sid
TOT: 0.8351664145119074; TR: 0.839125174031199; QF: 0.05077625570776256; select actor_0.aid from actor as actor_0, cast as cast_0, made_by as made_by_0, movie as movie_0, tv_series as tv_series_0 where actor_0.name = "Allen Turing" and movie_0.title = "The Imitation Game" and actor_0.aid = cast_0.aid and cast_0.msid = tv_series_0.sid and made_by_0.msid = movie_0.mid and made_by_0.msid = tv_series_0.sid
TOT: 0.8351660431920622; TR: 0.839125174031199; QF: 0.04706305725641852; select actor_0.aid from actor as actor_0, cast as cast_0, cast as cast_1, movie as movie_0, tv_series as tv_series_0 where actor_0.name = "Allen Turing" and movie_0.title = "The Imitation Game" and actor_0.aid = cast_1.aid and cast_0.msid = movie_0.mid and cast_0.msid = tv_series_0.sid and cast_1.msid = tv_series_0.sid
TOT: 0.8344814959014907; TR: 0.839125174031199; QF: 0.05725327812284335; select actor_0.aid from actor as actor_0, cast as cast_0, directed_by as directed_by_0, directed_by as directed_by_1, director as director_0, movie as movie_0, tv_series as tv_series_0 where actor_0.name = "Allen Turing" and movie_0.title = "The Imitation Game" and actor_0.aid = cast_0.aid and cast_0.msid = tv_series_0.sid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and directed_by_1.did = director_0.did and directed_by_1.msid = tv_series_0.sid
TOT: 0.8344807308911387; TR: 0.839125174031199; QF: 0.04960317460317461; select actor_0.aid from actor as actor_0, cast as cast_0, company as company_0, copyright as copyright_0, copyright as copyright_1, movie as movie_0, tv_series as tv_series_0 where actor_0.name = "Allen Turing" and movie_0.title = "The Imitation Game" and actor_0.aid = cast_0.aid and cast_0.msid = tv_series_0.sid and company_0.id = copyright_0.cid and company_0.id = copyright_1.cid and copyright_0.msid = movie_0.mid and copyright_1.msid = tv_series_0.sid


09:23  INFO: ================
09:23  INFO: QUERY 109: How many movies did "Shahab Hosseini" act in
09:23  INFO: ================
09:26  INFO: ================
09:26  INFO: QUERY 103: How many movies did "Quentin Tarantino" direct before 2002 and after 2010?
09:26  INFO: ================
767. ROOT: ROOT; NA; ; (0) 
768. direct: NT; NA; ; (0) directed_by(1.0):| director.name(0.72):| director(0.72):| written_by(0.68):| cast.role(0.67):| cast(0.67):| made_by(0.67):| 
769. movies: NT; NA; ; (0) movie.title(1.0):| movie(1.0):| cast.role(0.95):Movie; Movie F; Movie AD; | company.name(0.95):Movies; Movie; Movie Movie; | tv_series.title(0.84):Movies, Movies, Movi; Movie Mob; Moon Movies; | keyword.keyword(0.83):movie-in-movie; movies-about-movies; b-movie; | actor.name(0.76):| 
771. How many: CMT; count; ; (0) 
773. Quentin Tarantino: VTTEXT; NA; ; (0) director.name(1.0):Quentin Tarantino; Quentin Tarantino; Quentin Tarrantino; | actor.name(1.0):Quentin Tarantino; Quentin Tarantino; Quentin Tarrantino; | producer.name(1.0):Quentin Tarantino; Quentin Tarantino; Quentin Tarrantino; | writer.name(1.0):Quentin Tarantino; Quentin Tarantino; Quentin Tarrantino; | cast.role(0.85):Quentin Tarrantino '; Quentin Tarrantino '; Quentin Tarrantino '; | movie.title(0.84):21 Years: Quentin Ta; 21 Years: Quentin Ta; Quentin Tarantino's ; | writer.birth_city(0.74):San Quentin; San Quentin; Saint-Quentin; | 
774. 2002: VTNUM; NA; ; (0) movie.release_year(1.0):1963; 1971; 1913; | director.birth_year(1.0):1927; 1958; 1924; | tv_series.release_year(1.0):1987; 1991; 1968; | actor.birth_year(1.0):1935; 1958; 1924; | producer.birth_year(1.0):1926; 1964; 1985; | writer.birth_year(1.0):1955; 1926; 1985; | 
775. before: OT; <; ; (0) 
777. 2010: VTNUM; NA; ; (0) movie.release_year(1.0):2012; 2014; 2015; | tv_series.release_year(1.0):2014; 2014; 2013; | actor.birth_year(1.0):2011; 2013; 2013; | 
778. after: OT; >; ; (0) 
How, WRB
many, JJ
movies, NNS
did, VBD
Quentin Tarantino, NNP
direct, VB
before, IN
2002, CD
and, CC
after, IN
2010, CD
advmod(many-2, How-1)
amod(movies-3, many-2)
dobj(direct-6, movies-3)
aux(direct-6, did-4)
nsubj(direct-6, Quentin Tarantino-5)
root(ROOT-0, direct-6)
case(2002-8, before-7)
nmod(direct-6, 2002-8)
cc(2002-8, and-9)
case(2010-11, after-10)
conj(2002-8, 2010-11)

PARSE TREE:(767) ROOT ROOT
    (771) How many CMT
        (769) movies NT
            (768) direct NT
                (773) Quentin Tarantino VTTEXT
                (774) 2002 VTNUM
                    (775) before OT
                (777) 2010 VTNUM
                    (778) after OT


===========
TRANSLATIONS
===========
TOT: 0.920066463578981; NL: 0.920066463578981; NL+AG: 0.9625; NL+QF: 0.920066463578981; rels: []; projs: [count(distinct(movie_0.title))]; preds: [director_0.name = "Quentin Tarantino",movie_0.release_year > 2010]; havings: [count(distinct(director_0.name)) < 2002]; superlative: []; blanks: 0
TOT: 0.920066463578981; NL: 0.920066463578981; NL+AG: 0.9625; NL+QF: 0.920066463578981; rels: []; projs: [count(distinct(movie_0.title))]; preds: [director_0.name = "Quentin Tarantino",tv_series_0.release_year > 2010]; havings: [count(distinct(director_0.name)) < 2002]; superlative: []; blanks: 0
TOT: 0.920066463578981; NL: 0.920066463578981; NL+AG: 0.9625; NL+QF: 0.920066463578981; rels: []; projs: [count(distinct(movie_0.title))]; preds: [director_0.name = "Quentin Tarantino",actor_0.birth_year > 2010]; havings: [count(distinct(director_0.name)) < 2002]; superlative: []; blanks: 0
TOT: 0.920066463578981; NL: 0.920066463578981; NL+AG: 0.9625; NL+QF: 0.920066463578981; rels: []; projs: [count(distinct(movie_0.title))]; preds: [actor_0.name = "Quentin Tarantino",movie_0.release_year > 2010]; havings: [count(distinct(director_0.name)) < 2002]; superlative: []; blanks: 0
TOT: 0.920066463578981; NL: 0.920066463578981; NL+AG: 0.9625; NL+QF: 0.920066463578981; rels: []; projs: [count(distinct(movie_0.title))]; preds: [actor_0.name = "Quentin Tarantino",tv_series_0.release_year > 2010]; havings: [count(distinct(director_0.name)) < 2002]; superlative: []; blanks: 0
TOT: 0.920066463578981; NL: 0.920066463578981; NL+AG: 0.9625; NL+QF: 0.920066463578981; rels: []; projs: [count(distinct(movie_0.title))]; preds: [actor_0.name = "Quentin Tarantino",actor_0.birth_year > 2010]; havings: [count(distinct(director_0.name)) < 2002]; superlative: []; blanks: 0
TOT: 0.920066463578981; NL: 0.920066463578981; NL+AG: 0.9625; NL+QF: 0.920066463578981; rels: []; projs: [count(distinct(movie_0.title))]; preds: [producer_0.name = "Quentin Tarantino",movie_0.release_year > 2010]; havings: [count(distinct(director_0.name)) < 2002]; superlative: []; blanks: 0
TOT: 0.920066463578981; NL: 0.920066463578981; NL+AG: 0.9625; NL+QF: 0.920066463578981; rels: []; projs: [count(distinct(movie_0.title))]; preds: [producer_0.name = "Quentin Tarantino",tv_series_0.release_year > 2010]; havings: [count(distinct(director_0.name)) < 2002]; superlative: []; blanks: 0
TOT: 0.920066463578981; NL: 0.920066463578981; NL+AG: 0.9625; NL+QF: 0.920066463578981; rels: []; projs: [count(distinct(movie_0.title))]; preds: [producer_0.name = "Quentin Tarantino",actor_0.birth_year > 2010]; havings: [count(distinct(director_0.name)) < 2002]; superlative: []; blanks: 0
TOT: 0.920066463578981; NL: 0.920066463578981; NL+AG: 0.9625; NL+QF: 0.920066463578981; rels: []; projs: [count(distinct(movie_0.title))]; preds: [writer_0.name = "Quentin Tarantino",movie_0.release_year > 2010]; havings: [count(distinct(director_0.name)) < 2002]; superlative: []; blanks: 0
TOT: 0.920066463578981; NL: 0.920066463578981; NL+AG: 0.9625; NL+QF: 0.920066463578981; rels: []; projs: [count(distinct(movie_0.title))]; preds: [writer_0.name = "Quentin Tarantino",tv_series_0.release_year > 2010]; havings: [count(distinct(director_0.name)) < 2002]; superlative: []; blanks: 0
TOT: 0.920066463578981; NL: 0.920066463578981; NL+AG: 0.9625; NL+QF: 0.920066463578981; rels: []; projs: [count(distinct(movie_0.title))]; preds: [writer_0.name = "Quentin Tarantino",actor_0.birth_year > 2010]; havings: [count(distinct(director_0.name)) < 2002]; superlative: []; blanks: 0

===========
RESULTS
===========
TOT: 0.9153073476304734; TR: 0.920066463578981; QF: 0.1413409183258838; select count(*) from (select movie_0.title from actor as actor_0, cast as cast_0, directed_by as directed_by_0, director as director_0, movie as movie_0 where actor_0.name = "Quentin Tarantino" and movie_0.release_year > 2010 and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid group by movie_0.title having count(distinct(director_0.name)) < 2002) as subquery
TOT: 0.9153073476304734; TR: 0.920066463578981; QF: 0.1413409183258838; select count(*) from (select movie_0.title from actor as actor_0, cast as cast_0, directed_by as directed_by_0, director as director_0, movie as movie_0 where actor_0.birth_year > 2010 and actor_0.name = "Quentin Tarantino" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid group by movie_0.title having count(distinct(director_0.name)) < 2002) as subquery
TOT: 0.9153057106009205; TR: 0.920066463578981; QF: 0.12497062279670976; select count(*) from (select movie_0.title from directed_by as directed_by_0, director as director_0, movie as movie_0, writer as writer_0, written_by as written_by_0 where movie_0.release_year > 2010 and writer_0.name = "Quentin Tarantino" and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and movie_0.mid = written_by_0.msid and writer_0.wid = written_by_0.wid group by movie_0.title having count(distinct(director_0.name)) < 2002) as subquery
TOT: 0.915305581019284; TR: 0.920066463578981; QF: 0.12367480643240025; select count(*) from (select movie_0.title from directed_by as directed_by_0, director as director_0, made_by as made_by_0, movie as movie_0, producer as producer_0 where movie_0.release_year > 2010 and producer_0.name = "Quentin Tarantino" and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid group by movie_0.title having count(distinct(director_0.name)) < 2002) as subquery
TOT: 0.9153003109054504; TR: 0.920066463578981; QF: 0.0709736680955297; select count(*) from (select movie_0.title from directed_by as directed_by_0, directed_by as directed_by_1, director as director_0, director as director_1, movie as movie_0 where director_0.name = "Quentin Tarantino" and movie_0.release_year > 2010 and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and directed_by_1.did = director_1.did and directed_by_1.msid = movie_0.mid group by movie_0.title having count(distinct(director_1.name)) < 2002) as subquery
TOT: 0.9149173241911163; TR: 0.920066463578981; QF: 0.09867172332836698; select count(*) from (select movie_0.title from actor as actor_0, cast as cast_0, directed_by as directed_by_0, director as director_0, movie as movie_0, tv_series as tv_series_0 where actor_0.name = "Quentin Tarantino" and tv_series_0.release_year > 2010 and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and cast_0.msid = tv_series_0.sid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid group by movie_0.title having count(distinct(director_0.name)) < 2002) as subquery
TOT: 0.9149173241911163; TR: 0.920066463578981; QF: 0.09867172332836698; select count(*) from (select movie_0.title from actor as actor_0, cast as cast_0, directed_by as directed_by_0, director as director_0, movie as movie_0, tv_series as tv_series_0 where actor_0.name = "Quentin Tarantino" and tv_series_0.release_year > 2010 and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and directed_by_0.msid = tv_series_0.sid group by movie_0.title having count(distinct(director_0.name)) < 2002) as subquery
TOT: 0.9149163193601983; TR: 0.920066463578981; QF: 0.08862341414962299; select count(*) from (select movie_0.title from actor as actor_0, cast as cast_0, directed_by as directed_by_0, director as director_0, movie as movie_0, tv_series as tv_series_0 where actor_0.name = "Quentin Tarantino" and movie_0.release_year > 2010 and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and cast_0.msid = tv_series_0.sid and directed_by_0.did = director_0.did and directed_by_0.msid = tv_series_0.sid group by movie_0.title having count(distinct(director_0.name)) < 2002) as subquery
TOT: 0.9149163193601983; TR: 0.920066463578981; QF: 0.08862341414962299; select count(*) from (select movie_0.title from actor as actor_0, cast as cast_0, directed_by as directed_by_0, director as director_0, movie as movie_0, tv_series as tv_series_0 where actor_0.name = "Quentin Tarantino" and tv_series_0.release_year > 2010 and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and cast_0.msid = tv_series_0.sid and directed_by_0.did = director_0.did and directed_by_0.msid = tv_series_0.sid group by movie_0.title having count(distinct(director_0.name)) < 2002) as subquery
TOT: 0.9149163193601983; TR: 0.920066463578981; QF: 0.08862341414962299; select count(*) from (select movie_0.title from actor as actor_0, cast as cast_0, directed_by as directed_by_0, director as director_0, movie as movie_0, tv_series as tv_series_0 where actor_0.birth_year > 2010 and actor_0.name = "Quentin Tarantino" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and cast_0.msid = tv_series_0.sid and directed_by_0.did = director_0.did and directed_by_0.msid = tv_series_0.sid group by movie_0.title having count(distinct(director_0.name)) < 2002) as subquery


09:31  INFO: ================
09:31  INFO: QUERY 77: List all the movies directed by "Asghar Farhadi" in which "Taraneh Alidoosti" played
09:31  INFO: ================
09:37  INFO: ================
09:37  INFO: QUERY 79: who acted the role of "Mr. Bean"
09:37  INFO: ================
09:39  INFO: ================
09:39  INFO: QUERY 96: What is the number of movies that "Brad Pitt" acts in per year?
09:39  INFO: ================
801. ROOT: ROOT; NA; ; (0) 
802. What: CMT; NA; ; (0) 
804. number of: FT; count; ; (0) 
806. movies: NT; NA; ; (0) movie.title(1.0):| movie(1.0):| cast.role(0.95):Movie; Movie F; Movie AD; | company.name(0.95):Movies; Movie; Movie Movie; | tv_series.title(0.84):Movies, Movies, Movi; Movie Mob; Moon Movies; | keyword.keyword(0.83):movie-in-movie; movies-about-movies; b-movie; | actor.name(0.76):| 
808. acts: NT; NA; ; (0) movie.release_year(0.63):| tv_series.release_year(0.63):| actor.name(0.62):| actor(0.62):| genre.genre(0.62):| genre(0.62):| made_by(0.61):| 
810. Brad Pitt: VTTEXT; NA; ; (0) actor.name(1.0):Brad Pitt; Brad Pitt; bRad sPitt; | cast.role(1.0):Brad Pitt'; Brad Pitt'; Brad Pitt #1; | producer.name(1.0):Brad Pitt; Brad Pitt; Mad Pitt; | director.name(0.78):Brad Pruitt; Brad Pruitt; Brad Witty; | writer.name(0.78):Brad Pruitt; Brad Pruitt; Brad Witt; | movie.title(0.72):Brad Pitt Video Port; Brad Pitt Video Port; Brad; | actor.birth_city(0.61):Brad; Brad; Pitt Meadows; | 
812. year: NT; NA; each; (0) movie.release_year(1.0):| director.birth_year(1.0):| tv_series.release_year(1.0):| actor.birth_year(1.0):| producer.birth_year(1.0):| writer.birth_year(1.0):| movie.title(0.95):Year; Years; Years; | 
What, WP
is, VBZ
the, DT
number, NN
of, IN
movies, NNS
that, IN
Brad Pitt, NNP
acts, VBZ
in, RP
per, IN
year, NN
root(ROOT-0, What-1)
cop(What-1, is-2)
det(number-4, the-3)
nsubj(What-1, number-4)
case(movies-6, of-5)
nmod(number-4, movies-6)
mark(acts-9, that-7)
nsubj(acts-9, Brad Pitt-8)
dep(movies-6, acts-9)
compound:prt(acts-9, in-10)
case(year-12, per-11)
nmod(acts-9, year-12)

PARSE TREE:(801) ROOT ROOT
    (802) What CMT
        (804) number of FT
            (806) movies NT
                (808) acts NT
                    (810) Brad Pitt VTTEXT
                    (812) year NT


===========
TRANSLATIONS
===========
TOT: 0.9174505626104981; NL: 0.9174505626104981; NL+AG: 0.9743516941813049; NL+QF: 0.9174505626104981; rels: []; projs: [movie_0.release_year,count(distinct(movie_0.title))]; preds: [actor_0.name = "Brad Pitt"]; havings: []; superlative: []; blanks: 1
TOT: 0.9174505626104981; NL: 0.9174505626104981; NL+AG: 0.9743516941813049; NL+QF: 0.9174505626104981; rels: []; projs: [director_0.birth_year,count(distinct(movie_0.title))]; preds: [actor_0.name = "Brad Pitt"]; havings: []; superlative: []; blanks: 1
TOT: 0.9174505626104981; NL: 0.9174505626104981; NL+AG: 0.9743516941813049; NL+QF: 0.9174505626104981; rels: []; projs: [tv_series_0.release_year,count(distinct(movie_0.title))]; preds: [actor_0.name = "Brad Pitt"]; havings: []; superlative: []; blanks: 1
TOT: 0.9174505626104981; NL: 0.9174505626104981; NL+AG: 0.9743516941813049; NL+QF: 0.9174505626104981; rels: []; projs: [actor_0.birth_year,count(distinct(movie_0.title))]; preds: [actor_0.name = "Brad Pitt"]; havings: []; superlative: []; blanks: 1
TOT: 0.9174505626104981; NL: 0.9174505626104981; NL+AG: 0.9743516941813049; NL+QF: 0.9174505626104981; rels: []; projs: [producer_0.birth_year,count(distinct(movie_0.title))]; preds: [actor_0.name = "Brad Pitt"]; havings: []; superlative: []; blanks: 1
TOT: 0.9174505626104981; NL: 0.9174505626104981; NL+AG: 0.9743516941813049; NL+QF: 0.9174505626104981; rels: []; projs: [writer_0.birth_year,count(distinct(movie_0.title))]; preds: [actor_0.name = "Brad Pitt"]; havings: []; superlative: []; blanks: 1
TOT: 0.9174505626104981; NL: 0.9174505626104981; NL+AG: 0.9743516941813049; NL+QF: 0.9174505626104981; rels: []; projs: [movie_0.release_year,count(distinct(movie_0.title))]; preds: [cast_0.role = "Brad Pitt'"]; havings: []; superlative: []; blanks: 1
TOT: 0.9174505626104981; NL: 0.9174505626104981; NL+AG: 0.9743516941813049; NL+QF: 0.9174505626104981; rels: []; projs: [director_0.birth_year,count(distinct(movie_0.title))]; preds: [cast_0.role = "Brad Pitt'"]; havings: []; superlative: []; blanks: 1
TOT: 0.9174505626104981; NL: 0.9174505626104981; NL+AG: 0.9743516941813049; NL+QF: 0.9174505626104981; rels: []; projs: [tv_series_0.release_year,count(distinct(movie_0.title))]; preds: [cast_0.role = "Brad Pitt'"]; havings: []; superlative: []; blanks: 1
TOT: 0.9174505626104981; NL: 0.9174505626104981; NL+AG: 0.9743516941813049; NL+QF: 0.9174505626104981; rels: []; projs: [actor_0.birth_year,count(distinct(movie_0.title))]; preds: [cast_0.role = "Brad Pitt'"]; havings: []; superlative: []; blanks: 1
TOT: 0.9174505626104981; NL: 0.9174505626104981; NL+AG: 0.9743516941813049; NL+QF: 0.9174505626104981; rels: []; projs: [producer_0.birth_year,count(distinct(movie_0.title))]; preds: [cast_0.role = "Brad Pitt'"]; havings: []; superlative: []; blanks: 1
TOT: 0.9174505626104981; NL: 0.9174505626104981; NL+AG: 0.9743516941813049; NL+QF: 0.9174505626104981; rels: []; projs: [writer_0.birth_year,count(distinct(movie_0.title))]; preds: [cast_0.role = "Brad Pitt'"]; havings: []; superlative: []; blanks: 1
TOT: 0.9174505626104981; NL: 0.9174505626104981; NL+AG: 0.9743516941813049; NL+QF: 0.9174505626104981; rels: []; projs: [movie_0.release_year,count(distinct(movie_0.title))]; preds: [producer_0.name = "Brad Pitt"]; havings: []; superlative: []; blanks: 1
TOT: 0.9174505626104981; NL: 0.9174505626104981; NL+AG: 0.9743516941813049; NL+QF: 0.9174505626104981; rels: []; projs: [director_0.birth_year,count(distinct(movie_0.title))]; preds: [producer_0.name = "Brad Pitt"]; havings: []; superlative: []; blanks: 1
TOT: 0.9174505626104981; NL: 0.9174505626104981; NL+AG: 0.9743516941813049; NL+QF: 0.9174505626104981; rels: []; projs: [tv_series_0.release_year,count(distinct(movie_0.title))]; preds: [producer_0.name = "Brad Pitt"]; havings: []; superlative: []; blanks: 1
TOT: 0.9174505626104981; NL: 0.9174505626104981; NL+AG: 0.9743516941813049; NL+QF: 0.9174505626104981; rels: []; projs: [actor_0.birth_year,count(distinct(movie_0.title))]; preds: [producer_0.name = "Brad Pitt"]; havings: []; superlative: []; blanks: 1
TOT: 0.9174505626104981; NL: 0.9174505626104981; NL+AG: 0.9743516941813049; NL+QF: 0.9174505626104981; rels: []; projs: [producer_0.birth_year,count(distinct(movie_0.title))]; preds: [producer_0.name = "Brad Pitt"]; havings: []; superlative: []; blanks: 1
TOT: 0.9174505626104981; NL: 0.9174505626104981; NL+AG: 0.9743516941813049; NL+QF: 0.9174505626104981; rels: []; projs: [writer_0.birth_year,count(distinct(movie_0.title))]; preds: [producer_0.name = "Brad Pitt"]; havings: []; superlative: []; blanks: 1

===========
RESULTS
===========
TOT: 0.9153081898190745; TR: 0.9174505626104981; QF: 0.3177570093457944; select count(distinct(movie_0.title)), movie_0.release_year from cast as cast_0, movie as movie_0 where cast_0.role = "Brad Pitt'" and cast_0.msid = movie_0.mid group by movie_0.release_year
TOT: 0.9140157498830153; TR: 0.9174505626104981; QF: 0.2392523364485981; select movie_0.release_year, count(distinct(movie_0.title)) from actor as actor_0, cast as cast_0, movie as movie_0 where actor_0.name = "Brad Pitt" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid group by movie_0.release_year
TOT: 0.9140157498830153; TR: 0.9174505626104981; QF: 0.2392523364485981; select actor_0.birth_year, count(distinct(movie_0.title)) from actor as actor_0, cast as cast_0, movie as movie_0 where actor_0.name = "Brad Pitt" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid group by actor_0.birth_year
TOT: 0.9140157498830153; TR: 0.9174505626104981; QF: 0.2392523364485981; select actor_0.birth_year, count(distinct(movie_0.title)) from actor as actor_0, cast as cast_0, movie as movie_0 where cast_0.role = "Brad Pitt'" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid group by actor_0.birth_year
TOT: 0.9140098611790507; TR: 0.9174505626104981; QF: 0.18036529680365296; select movie_0.release_year, count(distinct(movie_0.title)) from made_by as made_by_0, movie as movie_0, producer as producer_0 where producer_0.name = "Brad Pitt" and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid group by movie_0.release_year
TOT: 0.9140098611790507; TR: 0.9174505626104981; QF: 0.18036529680365296; select producer_0.birth_year, count(distinct(movie_0.title)) from made_by as made_by_0, movie as movie_0, producer as producer_0 where producer_0.name = "Brad Pitt" and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid group by producer_0.birth_year
TOT: 0.9140046387719041; TR: 0.9174505626104981; QF: 0.128141225337487; select tv_series_0.release_year, count(distinct(movie_0.title)) from cast as cast_0, movie as movie_0, tv_series as tv_series_0 where cast_0.role = "Brad Pitt'" and cast_0.msid = movie_0.mid and cast_0.msid = tv_series_0.sid group by tv_series_0.release_year
TOT: 0.9132429471374474; TR: 0.9174505626104981; QF: 0.16890153054313964; select count(distinct(movie_0.title)), director_0.birth_year from cast as cast_0, directed_by as directed_by_0, director as director_0, movie as movie_0 where cast_0.role = "Brad Pitt'" and cast_0.msid = movie_0.mid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid group by director_0.birth_year
TOT: 0.9132405871687831; TR: 0.9174505626104981; QF: 0.14530184389997475; select count(distinct(movie_0.title)), writer_0.birth_year from cast as cast_0, movie as movie_0, writer as writer_0, written_by as written_by_0 where cast_0.role = "Brad Pitt'" and cast_0.msid = movie_0.mid and movie_0.mid = written_by_0.msid and writer_0.wid = written_by_0.wid group by writer_0.birth_year
TOT: 0.9132403711993891; TR: 0.9174505626104981; QF: 0.14314214995945887; select count(distinct(movie_0.title)), producer_0.birth_year from cast as cast_0, made_by as made_by_0, movie as movie_0, producer as producer_0 where cast_0.role = "Brad Pitt'" and cast_0.msid = movie_0.mid and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid group by producer_0.birth_year


09:46  INFO: ================
09:46  INFO: QUERY 104: What is the number of movies featuring "Brad Pitt"?
09:46  INFO: ================
815. ROOT: ROOT; NA; ; (0) 
816. What: CMT; NA; ; (0) 
818. number of: FT; count; ; (0) 
820. movies: NT; NA; ; (0) movie.title(1.0):| movie(1.0):| cast.role(0.95):Movie; Movie F; Movie AD; | company.name(0.95):Movies; Movie; Movie Movie; | tv_series.title(0.84):Movies, Movies, Movi; Movie Mob; Moon Movies; | keyword.keyword(0.83):movie-in-movie; movies-about-movies; b-movie; | actor.name(0.76):| 
822. featuring: NT; NA; ; (0) tv_series.title(0.69):| tv_series(0.69):| movie.release_year(0.64):| tv_series.release_year(0.64):| made_by(0.64):| movie.title_aka(0.62):| tv_series.title_aka(0.62):| 
823. Brad Pitt: VTTEXT; NA; ; (0) actor.name(1.0):Brad Pitt; Brad Pitt; bRad sPitt; | cast.role(1.0):Brad Pitt'; Brad Pitt'; Brad Pitt #1; | producer.name(1.0):Brad Pitt; Brad Pitt; Mad Pitt; | director.name(0.78):Brad Pruitt; Brad Pruitt; Brad Witty; | writer.name(0.78):Brad Pruitt; Brad Pruitt; Brad Witt; | movie.title(0.72):Brad Pitt Video Port; Brad Pitt Video Port; Brad; | actor.birth_city(0.61):Brad; Brad; Pitt Meadows; | 
What, WP
is, VBZ
the, DT
number, NN
of, IN
movies, NNS
featuring, VBG
Brad Pitt, NNP
root(ROOT-0, What-1)
cop(What-1, is-2)
det(number-4, the-3)
nsubj(What-1, number-4)
case(movies-6, of-5)
nmod(number-4, movies-6)
acl(movies-6, featuring-7)
dobj(featuring-7, Brad Pitt-8)

PARSE TREE:(815) ROOT ROOT
    (816) What CMT
        (818) number of FT
            (820) movies NT
                (822) featuring NT
                    (823) Brad Pitt VTTEXT


===========
TRANSLATIONS
===========
TOT: 0.8662391053409028; NL: 0.8662391053409028; NL+AG: 0.962381256972397; NL+QF: 0.8662391053409028; rels: []; projs: [count(distinct(movie_0.title))]; preds: [actor_0.name = "Brad Pitt"]; havings: []; superlative: []; blanks: 1
TOT: 0.8662391053409028; NL: 0.8662391053409028; NL+AG: 0.962381256972397; NL+QF: 0.8662391053409028; rels: []; projs: [count(distinct(movie_0.title))]; preds: [cast_0.role = "Brad Pitt'"]; havings: []; superlative: []; blanks: 1
TOT: 0.8662391053409028; NL: 0.8662391053409028; NL+AG: 0.962381256972397; NL+QF: 0.8662391053409028; rels: []; projs: [count(distinct(movie_0.title))]; preds: [producer_0.name = "Brad Pitt"]; havings: []; superlative: []; blanks: 1
TOT: 0.8212630328102013; NL: 0.7982804026719519; NL+AG: 0.9336336059357445; NL+QF: 0.8212630328102013; rels: []; projs: [count(distinct(movie_0.title))]; preds: [director_0.name = "Brad Pruitt"]; havings: []; superlative: []; blanks: 1
TOT: 0.7982804026719519; NL: 0.7982804026719519; NL+AG: 0.9336336059357445; NL+QF: 0.7982804026719519; rels: []; projs: [count(distinct(movie_0.title))]; preds: [writer_0.name = "Brad Pruitt"]; havings: []; superlative: []; blanks: 1
TOT: 0.7912922821972069; NL: 0.7912922821972069; NL+AG: 0.9334216924339575; NL+QF: 0.7912922821972069; rels: []; projs: [count(distinct(actor_0.name))]; preds: [actor_0.name = "Brad Pitt"]; havings: []; superlative: []; blanks: 1
TOT: 0.7912922821972069; NL: 0.7912922821972069; NL+AG: 0.9334216924339575; NL+QF: 0.7912922821972069; rels: []; projs: [count(distinct(actor_0.name))]; preds: [cast_0.role = "Brad Pitt'"]; havings: []; superlative: []; blanks: 1
TOT: 0.7912922821972069; NL: 0.7912922821972069; NL+AG: 0.9334216924339575; NL+QF: 0.7912922821972069; rels: []; projs: [count(distinct(actor_0.name))]; preds: [producer_0.name = "Brad Pitt"]; havings: []; superlative: []; blanks: 1
TOT: 0.7783173787653892; NL: 0.7783173787653892; NL+AG: 0.9334216924339575; NL+QF: 0.7783173787653892; rels: []; projs: [count(distinct(tv_series_0.title))]; preds: [actor_0.name = "Brad Pitt"]; havings: []; superlative: []; blanks: 1
TOT: 0.7783173787653892; NL: 0.7783173787653892; NL+AG: 0.9334216924339575; NL+QF: 0.7783173787653892; rels: []; projs: [count(distinct(tv_series_0.title))]; preds: [cast_0.role = "Brad Pitt'"]; havings: []; superlative: []; blanks: 1
TOT: 0.7783173787653892; NL: 0.7783173787653892; NL+AG: 0.9334216924339575; NL+QF: 0.7783173787653892; rels: []; projs: [count(distinct(tv_series_0.title))]; preds: [producer_0.name = "Brad Pitt"]; havings: []; superlative: []; blanks: 1
TOT: 0.7783173787653892; NL: 0.7783173787653892; NL+AG: 0.9334216924339575; NL+QF: 0.7783173787653892; rels: []; projs: [count(distinct(tv_series_0.title))]; preds: [actor_0.name = "Brad Pitt"]; havings: []; superlative: []; blanks: 1
TOT: 0.7783173787653892; NL: 0.7783173787653892; NL+AG: 0.9334216924339575; NL+QF: 0.7783173787653892; rels: []; projs: [count(distinct(tv_series_0.title))]; preds: [cast_0.role = "Brad Pitt'"]; havings: []; superlative: []; blanks: 1
TOT: 0.7783173787653892; NL: 0.7783173787653892; NL+AG: 0.9334216924339575; NL+QF: 0.7783173787653892; rels: []; projs: [count(distinct(tv_series_0.title))]; preds: [producer_0.name = "Brad Pitt"]; havings: []; superlative: []; blanks: 1

===========
RESULTS
===========
TOT: 0.8646088471221751; TR: 0.8662391053409028; QF: 0.3177570093457944; select count(distinct(movie_0.title)) from cast as cast_0, movie as movie_0 where cast_0.role = "Brad Pitt'" and cast_0.msid = movie_0.mid
TOT: 0.8633164071861159; TR: 0.8662391053409028; QF: 0.2392523364485981; select count(distinct(movie_0.title)) from actor as actor_0, cast as cast_0, movie as movie_0 where actor_0.name = "Brad Pitt" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid
TOT: 0.8633105184821513; TR: 0.8662391053409028; QF: 0.18036529680365296; select count(distinct(movie_0.title)) from made_by as made_by_0, movie as movie_0, producer as producer_0 where producer_0.name = "Brad Pitt" and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid
TOT: 0.8625327791023085; TR: 0.8662391053409028; QF: 0.060648148148148145; select count(distinct(movie_0.title)) from cast as cast_0, copyright as copyright_0, movie as movie_0, tv_series as tv_series_0 where cast_0.role = "Brad Pitt'" and cast_0.msid = tv_series_0.sid and copyright_0.msid = movie_0.mid and copyright_0.msid = tv_series_0.sid
TOT: 0.8625325596981217; TR: 0.8662391053409028; QF: 0.058454106280193235; select count(distinct(movie_0.title)) from cast as cast_0, directed_by as directed_by_0, movie as movie_0, tv_series as tv_series_0 where cast_0.role = "Brad Pitt'" and cast_0.msid = tv_series_0.sid and directed_by_0.msid = movie_0.mid and directed_by_0.msid = tv_series_0.sid
TOT: 0.862528936509716; TR: 0.8662391053409028; QF: 0.022222222222222223; select count(distinct(movie_0.title)) from cast as cast_0, movie as movie_0, tags as tags_0, tv_series as tv_series_0 where cast_0.role = "Brad Pitt'" and cast_0.msid = tv_series_0.sid and movie_0.mid = tags_0.msid and tags_0.msid = tv_series_0.sid
TOT: 0.8625287262995057; TR: 0.8662391053409028; QF: 0.02012012012012012; select count(distinct(movie_0.title)) from cast as cast_0, movie as movie_0, tv_series as tv_series_0, written_by as written_by_0 where cast_0.role = "Brad Pitt'" and cast_0.msid = tv_series_0.sid and movie_0.mid = written_by_0.msid and tv_series_0.sid = written_by_0.msid
TOT: 0.8625285103301117; TR: 0.8662391053409028; QF: 0.01796042617960426; select count(distinct(movie_0.title)) from cast as cast_0, classification as classification_0, movie as movie_0, tv_series as tv_series_0 where cast_0.role = "Brad Pitt'" and cast_0.msid = tv_series_0.sid and classification_0.msid = movie_0.mid and classification_0.msid = tv_series_0.sid
TOT: 0.8625285103301117; TR: 0.8662391053409028; QF: 0.01796042617960426; select count(distinct(movie_0.title)) from cast as cast_0, made_by as made_by_0, movie as movie_0, tv_series as tv_series_0 where cast_0.role = "Brad Pitt'" and cast_0.msid = tv_series_0.sid and made_by_0.msid = movie_0.mid and made_by_0.msid = tv_series_0.sid
TOT: 0.8620129731197034; TR: 0.8662391053409028; QF: 0.0884423676012461; select count(distinct(movie_0.title)) from cast as cast_0, made_by as made_by_0, movie as movie_0, producer as producer_0, tv_series as tv_series_0 where producer_0.name = "Brad Pitt" and cast_0.msid = movie_0.mid and cast_0.msid = tv_series_0.sid and made_by_0.msid = tv_series_0.sid and made_by_0.pid = producer_0.pid


09:49  INFO: ================
09:49  INFO: QUERY 12: In what city was "Kevin Spacey" born?
09:49  INFO: ================
09:54  INFO: ================
09:54  INFO: QUERY 124: Find the actors who played in the latest movie by "Quentin Tarantino"
09:54  INFO: ================
833. ROOT: ROOT; NA; ; (0) 
834. Find: CMT; NA; ; (0) 
835. actors: NT; NA; ; (0) actor.name(1.0):| actor(1.0):| movie.title(0.95):Actors; Actors; Actors; | tv_series.title(0.95):Actors; Actor; The Actor Factor; | cast.role(0.95):Actors; Actors; Actors; | keyword.keyword(0.95):actors; actor-director; no-actors; | company.name(0.79):For Actors by Actors; Actors Loft; Actors Pool; | 
837. played: NT; NA; ; (0) tv_series.num_of_seasons(0.67):| cast.role(0.66):| directed_by(0.64):| actor.name(0.63):| actor(0.63):| cast(0.63):| movie.title_aka(0.63):| 
839. movie: NT; NA; ; (0) movie.title(1.0):| movie(1.0):| cast.role(0.95):Movie; Movie F; Movie AD; | company.name(0.95):Movie; Movies; Movie Movie; | keyword.keyword(0.83):movie-in-movie; b-movie; z-movie; | actor.name(0.76):| actor(0.76):| 
842. latest: FT; max; ; (0) 
843. Quentin Tarantino: VTTEXT; NA; ; (0) director.name(1.0):Quentin Tarantino; Quentin Tarantino; Quentin Tarrantino; | actor.name(1.0):Quentin Tarantino; Quentin Tarantino; Quentin Tarrantino; | producer.name(1.0):Quentin Tarantino; Quentin Tarantino; Quentin Tarrantino; | writer.name(1.0):Quentin Tarantino; Quentin Tarantino; Quentin Tarrantino; | cast.role(0.85):Quentin Tarrantino '; Quentin Tarrantino '; Quentin Tarrantino '; | movie.title(0.84):21 Years: Quentin Ta; 21 Years: Quentin Ta; Quentin Tarantino's ; | writer.birth_city(0.74):San Quentin; San Quentin; Saint-Quentin; | 
Find, VB
the, DT
actors, NNS
who, WP
played, VBD
in, IN
the, DT
latest, JJS
movie, NN
by, IN
Quentin Tarantino, NNP
root(ROOT-0, Find-1)
det(actors-3, the-2)
dobj(Find-1, actors-3)
nsubj(played-5, who-4)
acl:relcl(actors-3, played-5)
case(movie-9, in-6)
det(movie-9, the-7)
amod(movie-9, latest-8)
nmod(played-5, movie-9)
case(Quentin Tarantino-11, by-10)
nmod(played-5, Quentin Tarantino-11)

PARSE TREE:(833) ROOT ROOT
    (834) Find CMT
        (835) actors NT
            (837) played NT
                (839) movie NT
                (843) Quentin Tarantino VTTEXT


===========
TRANSLATIONS
===========
TOT: 0.9174505626104981; NL: 0.9174505626104981; NL+AG: 0.9733138759953143; NL+QF: 0.9174505626104981; rels: []; projs: [actor_0.name]; preds: [director_0.name = "Quentin Tarantino"]; havings: []; superlative: [movie_0.title desc limit 1]; blanks: 1
TOT: 0.9174505626104981; NL: 0.9174505626104981; NL+AG: 0.9733138759953143; NL+QF: 0.9174505626104981; rels: []; projs: [actor_0.name]; preds: [actor_0.name = "Quentin Tarantino"]; havings: []; superlative: [movie_0.title desc limit 1]; blanks: 1
TOT: 0.9174505626104981; NL: 0.9174505626104981; NL+AG: 0.9733138759953143; NL+QF: 0.9174505626104981; rels: []; projs: [actor_0.name]; preds: [producer_0.name = "Quentin Tarantino"]; havings: []; superlative: [movie_0.title desc limit 1]; blanks: 1
TOT: 0.9174505626104981; NL: 0.9174505626104981; NL+AG: 0.9733138759953143; NL+QF: 0.9174505626104981; rels: []; projs: [actor_0.name]; preds: [writer_0.name = "Quentin Tarantino"]; havings: []; superlative: [movie_0.title desc limit 1]; blanks: 1
TOT: 0.8916787961450712; NL: 0.8879579826791157; NL+AG: 0.9556734954069785; NL+QF: 0.8916787961450712; rels: []; projs: [actor_0.name]; preds: [cast_0.role = "Quentin Tarrantino 'esque' Patient"]; havings: []; superlative: [movie_0.title desc limit 1]; blanks: 1
TOT: 0.890089387885766; NL: 0.8862129230052637; NL+AG: 0.9547006262957899; NL+QF: 0.890089387885766; rels: []; projs: [actor_0.name]; preds: [movie_0.title = "21 Years: Quentin Tarantino"]; havings: []; superlative: [movie_0.title desc limit 1]; blanks: 1
TOT: 0.8813956643737827; NL: 0.8689647470148877; NL+AG: 0.9510661366220432; NL+QF: 0.8813956643737827; rels: []; projs: [movie_0.title]; preds: [actor_0.name = "Quentin Tarantino"]; havings: []; superlative: [movie_0.title desc limit 1]; blanks: 1
TOT: 0.8780097432658712; NL: 0.8689647470148877; NL+AG: 0.9510661366220432; NL+QF: 0.8780097432658712; rels: []; projs: [movie_0.title]; preds: [director_0.name = "Quentin Tarantino"]; havings: []; superlative: [movie_0.title desc limit 1]; blanks: 1
TOT: 0.8746299582599715; NL: 0.8689647470148877; NL+AG: 0.9510661366220432; NL+QF: 0.8746299582599715; rels: []; projs: [movie_0.title]; preds: [writer_0.name = "Quentin Tarantino"]; havings: []; superlative: [movie_0.title desc limit 1]; blanks: 1
TOT: 0.8736234161838105; NL: 0.8689647470148877; NL+AG: 0.9510661366220432; NL+QF: 0.8736234161838105; rels: []; projs: [movie_0.title]; preds: [producer_0.name = "Quentin Tarantino"]; havings: []; superlative: [movie_0.title desc limit 1]; blanks: 1
TOT: 0.8675415861861546; NL: 0.8675415861861546; NL+AG: 0.9510661366220432; NL+QF: 0.8675415861861546; rels: []; projs: [cast_0.role]; preds: [director_0.name = "Quentin Tarantino"]; havings: []; superlative: [movie_0.title desc limit 1]; blanks: 1
TOT: 0.8675415861861546; NL: 0.8675415861861546; NL+AG: 0.9510661366220432; NL+QF: 0.8675415861861546; rels: []; projs: [cast_0.role]; preds: [actor_0.name = "Quentin Tarantino"]; havings: []; superlative: [movie_0.title desc limit 1]; blanks: 1
TOT: 0.8675415861861546; NL: 0.8675415861861546; NL+AG: 0.9510661366220432; NL+QF: 0.8675415861861546; rels: []; projs: [cast_0.role]; preds: [producer_0.name = "Quentin Tarantino"]; havings: []; superlative: [movie_0.title desc limit 1]; blanks: 1
TOT: 0.8675415861861546; NL: 0.8675415861861546; NL+AG: 0.9510661366220432; NL+QF: 0.8675415861861546; rels: []; projs: [cast_0.role]; preds: [writer_0.name = "Quentin Tarantino"]; havings: []; superlative: [movie_0.title desc limit 1]; blanks: 1
TOT: 0.8675415861861546; NL: 0.8675415861861546; NL+AG: 0.9510661366220432; NL+QF: 0.8675415861861546; rels: []; projs: [cast_0.role]; preds: [director_0.name = "Quentin Tarantino"]; havings: []; superlative: [movie_0.title desc limit 1]; blanks: 1
TOT: 0.8675415861861546; NL: 0.8675415861861546; NL+AG: 0.9510661366220432; NL+QF: 0.8675415861861546; rels: []; projs: [cast_0.role]; preds: [actor_0.name = "Quentin Tarantino"]; havings: []; superlative: [movie_0.title desc limit 1]; blanks: 1
TOT: 0.8675415861861546; NL: 0.8675415861861546; NL+AG: 0.9510661366220432; NL+QF: 0.8675415861861546; rels: []; projs: [cast_0.role]; preds: [producer_0.name = "Quentin Tarantino"]; havings: []; superlative: [movie_0.title desc limit 1]; blanks: 1
TOT: 0.8675415861861546; NL: 0.8675415861861546; NL+AG: 0.9510661366220432; NL+QF: 0.8675415861861546; rels: []; projs: [cast_0.role]; preds: [writer_0.name = "Quentin Tarantino"]; havings: []; superlative: [movie_0.title desc limit 1]; blanks: 1

===========
RESULTS
===========
TOT: 0.9127176056716753; TR: 0.9174505626104981; QF: 0.1413409183258838; select actor_0.name from actor as actor_0, cast as cast_0, directed_by as directed_by_0, director as director_0, movie as movie_0 where director_0.name = "Quentin Tarantino" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid order by movie_0.title desc limit 1
TOT: 0.9127163158166027; TR: 0.9174505626104981; QF: 0.1284423676012461; select actor_0.name from actor as actor_0, actor as actor_1, cast as cast_0, cast as cast_1, movie as movie_0 where actor_1.name = "Quentin Tarantino" and actor_0.aid = cast_0.aid and actor_1.aid = cast_1.aid and cast_0.msid = movie_0.mid and cast_1.msid = movie_0.mid order by movie_0.title desc limit 1
TOT: 0.9127161896904766; TR: 0.9174505626104981; QF: 0.12718110633998486; select actor_0.name from actor as actor_0, cast as cast_0, movie as movie_0, writer as writer_0, written_by as written_by_0 where writer_0.name = "Quentin Tarantino" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and movie_0.mid = written_by_0.msid and writer_0.wid = written_by_0.wid order by movie_0.title desc limit 1
TOT: 0.9127160601088402; TR: 0.9174505626104981; QF: 0.12588528997567533; select actor_0.name from actor as actor_0, cast as cast_0, made_by as made_by_0, movie as movie_0, producer as producer_0 where producer_0.name = "Quentin Tarantino" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid order by movie_0.title desc limit 1
TOT: 0.9123265774014002; TR: 0.9174505626104981; QF: 0.08862341414962299; select actor_0.name from actor as actor_0, cast as cast_0, directed_by as directed_by_0, director as director_0, movie as movie_0, tv_series as tv_series_0 where director_0.name = "Quentin Tarantino" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and cast_0.msid = tv_series_0.sid and directed_by_0.did = director_0.did and directed_by_0.msid = tv_series_0.sid order by movie_0.title desc limit 1
TOT: 0.912326277884492; TR: 0.9174505626104981; QF: 0.0856282450674974; select actor_0.name from actor as actor_0, cast as cast_0, made_by as made_by_0, movie as movie_0, producer as producer_0, tv_series as tv_series_0 where producer_0.name = "Quentin Tarantino" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and cast_0.msid = tv_series_0.sid and made_by_0.msid = tv_series_0.sid and made_by_0.pid = producer_0.pid order by movie_0.title desc limit 1
TOT: 0.912326277884492; TR: 0.9174505626104981; QF: 0.0856282450674974; select actor_0.name from actor as actor_0, actor as actor_1, cast as cast_0, cast as cast_1, movie as movie_0, tv_series as tv_series_0 where actor_1.name = "Quentin Tarantino" and actor_0.aid = cast_0.aid and actor_1.aid = cast_1.aid and cast_0.msid = movie_0.mid and cast_0.msid = tv_series_0.sid and cast_1.msid = tv_series_0.sid order by movie_0.title desc limit 1
TOT: 0.912326277884492; TR: 0.9174505626104981; QF: 0.0856282450674974; select actor_0.name from actor as actor_0, cast as cast_0, movie as movie_0, tv_series as tv_series_0, writer as writer_0, written_by as written_by_0 where writer_0.name = "Quentin Tarantino" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and cast_0.msid = tv_series_0.sid and tv_series_0.sid = written_by_0.msid and writer_0.wid = written_by_0.wid order by movie_0.title desc limit 1
TOT: 0.9123259082967002; TR: 0.9174505626104981; QF: 0.08193236714975846; select actor_0.name from actor as actor_0, cast as cast_0, directed_by as directed_by_0, director as director_0, movie as movie_0, tv_series as tv_series_0 where director_0.name = "Quentin Tarantino" and actor_0.aid = cast_0.aid and cast_0.msid = tv_series_0.sid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and directed_by_0.msid = tv_series_0.sid order by movie_0.title desc limit 1
TOT: 0.9123245198647901; TR: 0.9174505626104981; QF: 0.06804804804804805; select actor_0.name from actor as actor_0, cast as cast_0, movie as movie_0, tv_series as tv_series_0, writer as writer_0, written_by as written_by_0 where writer_0.name = "Quentin Tarantino" and actor_0.aid = cast_0.aid and cast_0.msid = tv_series_0.sid and movie_0.mid = written_by_0.msid and tv_series_0.sid = written_by_0.msid and writer_0.wid = written_by_0.wid order by movie_0.title desc limit 1


10:01  INFO: ================
10:01  INFO: QUERY 2: What is the nationality of the actress "Ellen Page"?
10:01  INFO: ================
10:06  INFO: ================
10:06  INFO: QUERY 68: Find all movies about Iraq war
10:06  INFO: ================
856. ROOT: ROOT; NA; ; (0) 
857. Find: CMT; NA; ; (0) 
858. movies: NT; NA; all; (0) movie.title(1.0):| movie(1.0):| cast.role(0.95):Movie; Movie F; Movie AD; | company.name(0.95):Movies; Movie; Movie Movie; | tv_series.title(0.84):Movies, Movies, Movi; Movie Mob; Moon Movies; | keyword.keyword(0.83):movie-in-movie; movies-about-movies; b-movie; | actor.name(0.76):| 
860. war: VTTEXT; NA; ; (0) movie.title(0.95):Wars; Wars; Hardware Wars; | tv_series.title(0.95):War; Car Wars; War Walks; | actor.name(0.95):War; War; War; | genre.genre(0.95):War; War; Documentary; | producer.name(0.95):War; Johnny Star Wars; Vivian War; | company.name(0.95):War; War on Want; NWA War Zone; | writer.name(0.95):War; Johnny Star Wars; Men Of War; | 
862. Iraq: VTTEXT; NA; ; (0) movie.title(1.0):Iraq; Iraq; Ski Iraq; | director.nationality(1.0):Iraq; Iraq; Iraq; | actor.nationality(1.0):Iraq; Iraq; Iraq; | producer.nationality(1.0):Iraq; Iraq; Iraq; | writer.nationality(1.0):Iraq; Iraq; Iraq; | cast.role(0.8):Ira - Iraq; Iraq Vet; Iraq Veteran; | keyword.keyword(0.72):iraq-iran-war; basra-iraq; hatra-iraq; | 
Find, VB
all, DT
movies, NNS
about, IN
Iraq, NNP
war, NN
root(ROOT-0, Find-1)
det(movies-3, all-2)
dobj(Find-1, movies-3)
case(war-6, about-4)
compound(war-6, Iraq-5)
nmod(Find-1, war-6)

PARSE TREE:(856) ROOT ROOT
    (857) Find CMT
        (858) movies NT
        (860) war VTTEXT
            (862) Iraq VTTEXT


===========
TRANSLATIONS
===========
TOT: 0.984061024314923; NL: 0.9830475724915585; NL+AG: 0.9947199354012503; NL+QF: 0.984061024314923; rels: []; projs: [movie_0.title]; preds: [genre_0.genre = "War",movie_0.title = "Iraq"]; havings: []; superlative: []; blanks: 0
TOT: 0.984061024314923; NL: 0.9830475724915585; NL+AG: 0.9947199354012503; NL+QF: 0.984061024314923; rels: []; projs: [movie_0.title]; preds: [genre_0.genre = "War",director_0.nationality = "Iraq"]; havings: []; superlative: []; blanks: 0
TOT: 0.984061024314923; NL: 0.9830475724915585; NL+AG: 0.9947199354012503; NL+QF: 0.984061024314923; rels: []; projs: [movie_0.title]; preds: [genre_0.genre = "War",actor_0.nationality = "Iraq"]; havings: []; superlative: []; blanks: 0
TOT: 0.984061024314923; NL: 0.9830475724915585; NL+AG: 0.9947199354012503; NL+QF: 0.984061024314923; rels: []; projs: [movie_0.title]; preds: [genre_0.genre = "War",producer_0.nationality = "Iraq"]; havings: []; superlative: []; blanks: 0
TOT: 0.984061024314923; NL: 0.9830475724915585; NL+AG: 0.9947199354012503; NL+QF: 0.984061024314923; rels: []; projs: [movie_0.title]; preds: [genre_0.genre = "War",writer_0.nationality = "Iraq"]; havings: []; superlative: []; blanks: 0
TOT: 0.9157566744585615; NL: 0.9128241092785631; NL+AG: 0.9736673430431951; NL+QF: 0.9157566744585615; rels: []; projs: [movie_0.title]; preds: [genre_0.genre = "War",cast_0.role = "Ira - Iraq"]; havings: []; superlative: []; blanks: 0
TOT: 0.91404448511991; NL: 0.8979945056153297; NL+AG: 0.9849680475911101; NL+QF: 0.91404448511991; rels: []; projs: [actor_0.name]; preds: [genre_0.genre = "War",movie_0.title = "Iraq"]; havings: []; superlative: []; blanks: 0
TOT: 0.9138113744029706; NL: 0.8979945056153297; NL+AG: 0.9849680475911101; NL+QF: 0.9138113744029706; rels: []; projs: [actor_0.name]; preds: [genre_0.genre = "War",actor_0.nationality = "Iraq"]; havings: []; superlative: []; blanks: 0
TOT: 0.8979945056153297; NL: 0.8979945056153297; NL+AG: 0.9849680475911101; NL+QF: 0.8979945056153297; rels: []; projs: [actor_0.name]; preds: [genre_0.genre = "War",director_0.nationality = "Iraq"]; havings: []; superlative: []; blanks: 0
TOT: 0.8979945056153297; NL: 0.8979945056153297; NL+AG: 0.9849680475911101; NL+QF: 0.8979945056153297; rels: []; projs: [actor_0.name]; preds: [genre_0.genre = "War",producer_0.nationality = "Iraq"]; havings: []; superlative: []; blanks: 0
TOT: 0.8979945056153297; NL: 0.8979945056153297; NL+AG: 0.9849680475911101; NL+QF: 0.8979945056153297; rels: []; projs: [actor_0.name]; preds: [genre_0.genre = "War",writer_0.nationality = "Iraq"]; havings: []; superlative: []; blanks: 0

===========
RESULTS
===========
TOT: 0.978660417196221; TR: 0.984061024314923; QF: 0.12588528997567533; select movie_0.title from actor as actor_0, cast as cast_0, classification as classification_0, genre as genre_0, movie as movie_0 where actor_0.nationality = "Iraq" and genre_0.genre = "War" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and classification_0.gid = genre_0.gid and classification_0.msid = movie_0.mid
TOT: 0.9786601961478667; TR: 0.984061024314923; QF: 0.12367480643240025; select movie_0.title from classification as classification_0, directed_by as directed_by_0, director as director_0, genre as genre_0, movie as movie_0 where director_0.nationality = "Iraq" and genre_0.genre = "War" and classification_0.gid = genre_0.gid and classification_0.msid = movie_0.mid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid
TOT: 0.9786587801666681; TR: 0.984061024314923; QF: 0.1095149944465013; select movie_0.title from classification as classification_0, genre as genre_0, movie as movie_0, writer as writer_0, written_by as written_by_0 where genre_0.genre = "War" and writer_0.nationality = "Iraq" and classification_0.gid = genre_0.gid and classification_0.msid = movie_0.mid and movie_0.mid = written_by_0.msid and writer_0.wid = written_by_0.wid
TOT: 0.9786586505850317; TR: 0.984061024314923; QF: 0.10821917808219177; select movie_0.title from classification as classification_0, genre as genre_0, made_by as made_by_0, movie as movie_0, producer as producer_0 where genre_0.genre = "War" and producer_0.nationality = "Iraq" and classification_0.gid = genre_0.gid and classification_0.msid = movie_0.mid and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid
TOT: 0.9786532396261275; TR: 0.984061024314923; QF: 0.05410958904109588; select movie_0.title from classification as classification_0, classification as classification_1, genre as genre_0, movie as movie_0, movie as movie_1 where genre_0.genre = "War" and movie_1.title = "Iraq" and classification_0.gid = genre_0.gid and classification_0.msid = movie_0.mid and classification_1.gid = genre_0.gid and classification_1.msid = movie_1.mid
TOT: 0.9782706349718728; TR: 0.984061024314923; QF: 0.0856282450674974; select movie_0.title from actor as actor_0, cast as cast_0, classification as classification_0, genre as genre_0, movie as movie_0, tv_series as tv_series_0 where actor_0.nationality = "Iraq" and genre_0.genre = "War" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and cast_0.msid = tv_series_0.sid and classification_0.gid = genre_0.gid and classification_0.msid = tv_series_0.sid
TOT: 0.9782704876063033; TR: 0.984061024314923; QF: 0.08415458937198068; select movie_0.title from classification as classification_0, directed_by as directed_by_0, director as director_0, genre as genre_0, movie as movie_0, tv_series as tv_series_0 where director_0.nationality = "Iraq" and genre_0.genre = "War" and classification_0.gid = genre_0.gid and classification_0.msid = tv_series_0.sid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and directed_by_0.msid = tv_series_0.sid
TOT: 0.9782693123035437; TR: 0.984061024314923; QF: 0.07240156177618952; select movie_0.title from classification as classification_0, directed_by as directed_by_0, director as director_0, genre as genre_0, movie as movie_0, tv_series as tv_series_0 where director_0.nationality = "Iraq" and genre_0.genre = "War" and classification_0.gid = genre_0.gid and classification_0.msid = movie_0.mid and classification_0.msid = tv_series_0.sid and directed_by_0.did = director_0.did and directed_by_0.msid = tv_series_0.sid
TOT: 0.9782690991743931; TR: 0.984061024314923; QF: 0.07027027027027026; select movie_0.title from classification as classification_0, genre as genre_0, movie as movie_0, tv_series as tv_series_0, writer as writer_0, written_by as written_by_0 where genre_0.genre = "War" and writer_0.nationality = "Iraq" and classification_0.gid = genre_0.gid and classification_0.msid = tv_series_0.sid and movie_0.mid = written_by_0.msid and tv_series_0.sid = written_by_0.msid and writer_0.wid = written_by_0.wid
TOT: 0.9782690127866355; TR: 0.984061024314923; QF: 0.06940639269406391; select movie_0.title from classification as classification_0, genre as genre_0, made_by as made_by_0, movie as movie_0, producer as producer_0, tv_series as tv_series_0 where genre_0.genre = "War" and producer_0.nationality = "Iraq" and classification_0.gid = genre_0.gid and classification_0.msid = movie_0.mid and classification_0.msid = tv_series_0.sid and made_by_0.msid = tv_series_0.sid and made_by_0.pid = producer_0.pid


10:09  INFO: ================
10:09  INFO: QUERY 21: What is the genre of the movie "Jurassic Park"?
10:09  INFO: ================
10:13  INFO: ================
10:13  INFO: QUERY 75: List "James Bond" directors
10:13  INFO: ================
10:16  INFO: ================
10:16  INFO: QUERY 76: find all films in which "Rowan Atkinson" acted as "Mr. Bean"
10:16  INFO: ================
10:20  INFO: ================
10:20  INFO: QUERY 112: How many actors from China have acted in "Rush Hour 3"
10:20  INFO: ================
890. ROOT: ROOT; NA; ; (0) 
891. acted: NT; NA; ; (0) movie.release_year(0.63):| tv_series.release_year(0.63):| actor.name(0.62):| actor(0.62):| genre.genre(0.62):| genre(0.62):| made_by(0.61):| 
893. How many: CMT; count; ; (0) 
894. actors: NT; NA; ; (0) actor.name(1.0):| actor(1.0):| movie.title(0.95):Actors; Actors; Actors; | tv_series.title(0.95):Actors; Actor; The Actor Factor; | cast.role(0.95):Actors; Actors; Actors; | keyword.keyword(0.95):actors; actor-director; no-actors; | company.name(0.79):For Actors by Actors; Actors Loft; Actors Pool; | 
895. China: VTTEXT; NA; ; (0) movie.title(1.0):China; China; China; | director.nationality(1.0):China; China; China; | director.name(1.0):China; China Chung; China Chung; | actor.nationality(1.0):China; China; China; | actor.name(1.0):China; China; China; | producer.nationality(1.0):China; China; China; | producer.name(1.0):China; Ed China; China Chung; | 
898. Rush Hour 3: VTTEXT; NA; ; (0) movie.title(0.95):Rush Hour 3; Rush Hour 3; Rush Hour 2; | tv_series.title(0.85):Rush Hour; Rush Hour; Rush Hour; | cast.role(0.7):Rush Hour Driver; Rush Hour Driver; Rush Hour Driver; | actor.name(0.64):Rush Holt; Rush Holt; Rush; | keyword.keyword(0.64):rush-hour; rush-hour; hour; | company.name(0.62):Rush Hour Production; Rush Hour Production; Rush HD; | director.name(0.52):Rush; Rush; Rush; | 
How, WRB
many, JJ
actors, NNS
from, IN
China, NNP
have, VBP
acted, VBN
in, IN
Rush Hour 3, NNS
advmod(many-2, How-1)
dep(acted-7, many-2)
nsubj(acted-7, actors-3)
case(China-5, from-4)
nmod(actors-3, China-5)
aux(acted-7, have-6)
root(ROOT-0, acted-7)
case(Rush Hour 3-9, in-8)
nmod(acted-7, Rush Hour 3-9)

PARSE TREE:(890) ROOT ROOT
    (893) How many CMT
        (894) actors NT
            (895) China VTTEXT
            (891) acted NT
                (898) Rush Hour 3 VTTEXT


===========
TRANSLATIONS
===========
TOT: 0.806225774829855; NL: 0.806225774829855; NL+AG: 0.9326789140939467; NL+QF: 0.806225774829855; rels: []; projs: [count(distinct(actor_0.name))]; preds: [movie_0.title = "China"]; havings: []; superlative: []; blanks: 2
TOT: 0.806225774829855; NL: 0.806225774829855; NL+AG: 0.9326789140939467; NL+QF: 0.806225774829855; rels: []; projs: [count(distinct(actor_0.name))]; preds: [director_0.nationality = "China"]; havings: []; superlative: []; blanks: 2
TOT: 0.806225774829855; NL: 0.806225774829855; NL+AG: 0.9326789140939467; NL+QF: 0.806225774829855; rels: []; projs: [count(distinct(actor_0.name))]; preds: [director_0.name = "China"]; havings: []; superlative: []; blanks: 2
TOT: 0.806225774829855; NL: 0.806225774829855; NL+AG: 0.9326789140939467; NL+QF: 0.806225774829855; rels: []; projs: [count(distinct(actor_0.name))]; preds: [actor_0.nationality = "China"]; havings: []; superlative: []; blanks: 2
TOT: 0.806225774829855; NL: 0.806225774829855; NL+AG: 0.9326789140939467; NL+QF: 0.806225774829855; rels: []; projs: [count(distinct(actor_0.name))]; preds: [actor_0.name = "China"]; havings: []; superlative: []; blanks: 2
TOT: 0.806225774829855; NL: 0.806225774829855; NL+AG: 0.9326789140939467; NL+QF: 0.806225774829855; rels: []; projs: [count(distinct(actor_0.name))]; preds: [producer_0.nationality = "China"]; havings: []; superlative: []; blanks: 2
TOT: 0.806225774829855; NL: 0.806225774829855; NL+AG: 0.9326789140939467; NL+QF: 0.806225774829855; rels: []; projs: [count(distinct(actor_0.name))]; preds: [producer_0.name = "China"]; havings: []; superlative: []; blanks: 2
TOT: 0.7714547017937957; NL: 0.7533226692667779; NL+AG: 0.9057492868921835; NL+QF: 0.7714547017937957; rels: []; projs: [count(distinct(movie_0.title))]; preds: [director_0.name = "China"]; havings: []; superlative: []; blanks: 2
TOT: 0.7640212239889288; NL: 0.7533226692667779; NL+AG: 0.9057492868921835; NL+QF: 0.7640212239889288; rels: []; projs: [count(distinct(movie_0.title))]; preds: [actor_0.name = "China"]; havings: []; superlative: []; blanks: 2
TOT: 0.7624312687459628; NL: 0.7454212025910731; NL+AG: 0.9430108056341358; NL+QF: 0.7624312687459628; rels: []; projs: [count(distinct(actor_0.name))]; preds: [actor_0.nationality = "China",movie_0.title = "Rush Hour 3"]; havings: []; superlative: []; blanks: 1
TOT: 0.7546121633668027; NL: 0.7454212025910731; NL+AG: 0.9430108056341358; NL+QF: 0.7546121633668027; rels: []; projs: [count(distinct(actor_0.name))]; preds: [movie_0.title = "China",movie_0.title = "Rush Hour 3"]; havings: []; superlative: []; blanks: 1
TOT: 0.7546121633668027; NL: 0.7454212025910731; NL+AG: 0.9430108056341358; NL+QF: 0.7546121633668027; rels: []; projs: [count(distinct(actor_0.name))]; preds: [director_0.nationality = "China",movie_0.title = "Rush Hour 3"]; havings: []; superlative: []; blanks: 1
TOT: 0.7546121633668027; NL: 0.7454212025910731; NL+AG: 0.9430108056341358; NL+QF: 0.7546121633668027; rels: []; projs: [count(distinct(actor_0.name))]; preds: [director_0.name = "China",movie_0.title = "Rush Hour 3"]; havings: []; superlative: []; blanks: 1
TOT: 0.7546121633668027; NL: 0.7454212025910731; NL+AG: 0.9430108056341358; NL+QF: 0.7546121633668027; rels: []; projs: [count(distinct(actor_0.name))]; preds: [actor_0.name = "China",movie_0.title = "Rush Hour 3"]; havings: []; superlative: []; blanks: 1
TOT: 0.7546121633668027; NL: 0.7454212025910731; NL+AG: 0.9430108056341358; NL+QF: 0.7546121633668027; rels: []; projs: [count(distinct(actor_0.name))]; preds: [producer_0.nationality = "China",movie_0.title = "Rush Hour 3"]; havings: []; superlative: []; blanks: 1
TOT: 0.7546121633668027; NL: 0.7454212025910731; NL+AG: 0.9430108056341358; NL+QF: 0.7546121633668027; rels: []; projs: [count(distinct(actor_0.name))]; preds: [producer_0.name = "China",movie_0.title = "Rush Hour 3"]; havings: []; superlative: []; blanks: 1

===========
RESULTS
===========
TOT: 0.8081635170815564; TR: 0.806225774829855; QF: 1.0; select count(distinct(actor_0.name)) from actor as actor_0 where actor_0.nationality = "China"
TOT: 0.8039032099801786; TR: 0.806225774829855; QF: 0.2392523364485981; select count(distinct(actor_0.name)) from actor as actor_0, cast as cast_0, movie as movie_0 where movie_0.title = "China" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid
TOT: 0.8026050657688386; TR: 0.806225774829855; QF: 0.1413409183258838; select count(distinct(actor_0.name)) from actor as actor_0, cast as cast_0, directed_by as directed_by_0, director as director_0, movie as movie_0 where director_0.nationality = "China" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid
TOT: 0.8026050657688386; TR: 0.806225774829855; QF: 0.1413409183258838; select count(distinct(actor_0.name)) from actor as actor_0, cast as cast_0, directed_by as directed_by_0, director as director_0, movie as movie_0 where director_0.name = "China" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid
TOT: 0.8026037759137661; TR: 0.806225774829855; QF: 0.1284423676012461; select count(distinct(actor_0.name)) from actor as actor_0, actor as actor_1, cast as cast_0, cast as cast_1, movie as movie_0 where actor_1.name = "China" and actor_0.aid = cast_0.aid and actor_1.aid = cast_1.aid and cast_0.msid = movie_0.mid and cast_1.msid = movie_0.mid
TOT: 0.8026035202060036; TR: 0.806225774829855; QF: 0.12588528997567533; select count(distinct(actor_0.name)) from actor as actor_0, cast as cast_0, made_by as made_by_0, movie as movie_0, producer as producer_0 where producer_0.nationality = "China" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid
TOT: 0.8026035202060036; TR: 0.806225774829855; QF: 0.12588528997567533; select count(distinct(actor_0.name)) from actor as actor_0, cast as cast_0, made_by as made_by_0, movie as movie_0, producer as producer_0 where producer_0.name = "China" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid
TOT: 0.802601047619035; TR: 0.806225774829855; QF: 0.10115942028985507; select count(distinct(actor_0.name)) from actor as actor_0, cast as cast_0, directed_by as directed_by_0, director as director_0, tv_series as tv_series_0 where director_0.nationality = "China" and actor_0.aid = cast_0.aid and cast_0.msid = tv_series_0.sid and directed_by_0.did = director_0.did and directed_by_0.msid = tv_series_0.sid
TOT: 0.802601047619035; TR: 0.806225774829855; QF: 0.10115942028985507; select count(distinct(actor_0.name)) from actor as actor_0, cast as cast_0, directed_by as directed_by_0, director as director_0, tv_series as tv_series_0 where director_0.name = "China" and actor_0.aid = cast_0.aid and cast_0.msid = tv_series_0.sid and directed_by_0.did = director_0.did and directed_by_0.msid = tv_series_0.sid
TOT: 0.8026005983436727; TR: 0.806225774829855; QF: 0.09666666666666666; select count(distinct(actor_0.name)) from actor as actor_0, actor as actor_1, cast as cast_0, cast as cast_1, tv_series as tv_series_0 where actor_1.name = "China" and actor_0.aid = cast_0.aid and actor_1.aid = cast_1.aid and cast_0.msid = tv_series_0.sid and cast_1.msid = tv_series_0.sid


10:25  INFO: ================
10:25  INFO: QUERY 78: where is the director of "The Past" from
10:25  INFO: ================
901. ROOT: ROOT; NA; ; (0) 
903. where: CMT; NA; ; (0) director.birth_city(1.0):| actor.birth_city(1.0):| producer.birth_city(1.0):| writer.birth_city(1.0):| 
904. director: NT; NA; ; (0) director.name(1.0):| director(1.0):| movie.title(0.95):Director; Director; Director; | producer.name(0.95):Director; Co-Director; Director GT; | company.name(0.95):Director; Directors; Directors; | writer.name(0.95):Director; Director X; Director X.; | tv_series.title(0.86):Directors on Directo; The Directors; The Directors; | 
906. The Past: VTTEXT; NA; ; (0) movie.title(1.0):The Past; The Past; Fix the Past; | cast.role(1.0):The Past; The Past; The Past; | keyword.keyword(0.71):the-past; past; stuck-in-the-past; | tv_series.title(0.71):Ancyal/The Past; Out of the Past; Out of the Past; | company.name(0.62):Shadows of the Past; Future Past Films; Past Due Pictures; | director.name(0.62):The Nostalgia Plotho; | actor.name(0.62):The Nostalgia Plotho; Melodie Past; Pavel Past; | 
where, WRB
is, VBZ
the, DT
director, NN
of, IN
The Past, NNP
from, IN
advmod(is-2, where-1)
root(ROOT-0, is-2)
det(director-4, the-3)
nsubj(is-2, director-4)
case(The Past-6, of-5)
nmod(director-4, The Past-6)
dep(is-2, from-7)

PARSE TREE:(901) ROOT ROOT
    (903) where CMT
        (904) director NT
            (906) The Past VTTEXT


===========
TRANSLATIONS
===========
TOT: 0.8662391053409028; NL: 0.8662391053409028; NL+AG: 0.9626264316569841; NL+QF: 0.8662391053409028; rels: []; projs: [director_0.name]; preds: [movie_0.title = "The Past"]; havings: []; superlative: []; blanks: 1
TOT: 0.8662391053409028; NL: 0.8662391053409028; NL+AG: 0.9626264316569841; NL+QF: 0.8662391053409028; rels: []; projs: [director_0.name]; preds: [cast_0.role = "The Past"]; havings: []; superlative: []; blanks: 1
TOT: 0.8662391053409028; NL: 0.8662391053409028; NL+AG: 0.9626264316569841; NL+QF: 0.8662391053409028; rels: []; projs: [director_0.birth_city]; preds: [movie_0.title = "The Past"]; havings: []; superlative: []; blanks: 1
TOT: 0.8662391053409028; NL: 0.8662391053409028; NL+AG: 0.9626264316569841; NL+QF: 0.8662391053409028; rels: []; projs: [director_0.birth_city]; preds: [cast_0.role = "The Past"]; havings: []; superlative: []; blanks: 1
TOT: 0.8662391053409028; NL: 0.8662391053409028; NL+AG: 0.9626264316569841; NL+QF: 0.8662391053409028; rels: []; projs: [actor_0.birth_city]; preds: [movie_0.title = "The Past"]; havings: []; superlative: []; blanks: 1
TOT: 0.8662391053409028; NL: 0.8662391053409028; NL+AG: 0.9626264316569841; NL+QF: 0.8662391053409028; rels: []; projs: [actor_0.birth_city]; preds: [cast_0.role = "The Past"]; havings: []; superlative: []; blanks: 1
TOT: 0.8662391053409028; NL: 0.8662391053409028; NL+AG: 0.9626264316569841; NL+QF: 0.8662391053409028; rels: []; projs: [producer_0.birth_city]; preds: [movie_0.title = "The Past"]; havings: []; superlative: []; blanks: 1
TOT: 0.8662391053409028; NL: 0.8662391053409028; NL+AG: 0.9626264316569841; NL+QF: 0.8662391053409028; rels: []; projs: [producer_0.birth_city]; preds: [cast_0.role = "The Past"]; havings: []; superlative: []; blanks: 1
TOT: 0.8662391053409028; NL: 0.8662391053409028; NL+AG: 0.9626264316569841; NL+QF: 0.8662391053409028; rels: []; projs: [writer_0.birth_city]; preds: [movie_0.title = "The Past"]; havings: []; superlative: []; blanks: 1
TOT: 0.8662391053409028; NL: 0.8662391053409028; NL+AG: 0.9626264316569841; NL+QF: 0.8662391053409028; rels: []; projs: [writer_0.birth_city]; preds: [cast_0.role = "The Past"]; havings: []; superlative: []; blanks: 1
TOT: 0.8254818122236567; NL: 0.7802453753539424; NL+AG: 0.9788797416050014; NL+QF: 0.8254818122236567; rels: []; projs: [director_0.birth_city]; preds: [movie_0.title = "Director",cast_0.role = "The Past"]; havings: []; superlative: []; blanks: 0
TOT: 0.8254818122236567; NL: 0.7802453753539424; NL+AG: 0.9788797416050014; NL+QF: 0.8254818122236567; rels: []; projs: [actor_0.birth_city]; preds: [movie_0.title = "Director",cast_0.role = "The Past"]; havings: []; superlative: []; blanks: 0
TOT: 0.8254818122236567; NL: 0.7802453753539424; NL+AG: 0.9788797416050014; NL+QF: 0.8254818122236567; rels: []; projs: [producer_0.birth_city]; preds: [movie_0.title = "Director",cast_0.role = "The Past"]; havings: []; superlative: []; blanks: 0
TOT: 0.8254818122236567; NL: 0.7802453753539424; NL+AG: 0.9788797416050014; NL+QF: 0.8254818122236567; rels: []; projs: [writer_0.birth_city]; preds: [movie_0.title = "Director",cast_0.role = "The Past"]; havings: []; superlative: []; blanks: 0

===========
RESULTS
===========
TOT: 0.8646170714212406; TR: 0.8662391053409028; QF: 0.4; select actor_0.birth_city from actor as actor_0, cast as cast_0 where cast_0.role = "The Past" and actor_0.aid = cast_0.aid
TOT: 0.8633164071861159; TR: 0.8662391053409028; QF: 0.2392523364485981; select actor_0.birth_city from actor as actor_0, cast as cast_0, movie as movie_0 where movie_0.title = "The Past" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid
TOT: 0.8633156703582681; TR: 0.8662391053409028; QF: 0.2318840579710145; select director_0.name from directed_by as directed_by_0, director as director_0, movie as movie_0 where movie_0.title = "The Past" and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid
TOT: 0.8633156703582681; TR: 0.8662391053409028; QF: 0.2318840579710145; select director_0.birth_city from directed_by as directed_by_0, director as director_0, movie as movie_0 where movie_0.title = "The Past" and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid
TOT: 0.8633109504209395; TR: 0.8662391053409028; QF: 0.18468468468468469; select writer_0.birth_city from movie as movie_0, writer as writer_0, written_by as written_by_0 where movie_0.title = "The Past" and movie_0.mid = written_by_0.msid and writer_0.wid = written_by_0.wid
TOT: 0.8633105184821513; TR: 0.8662391053409028; QF: 0.18036529680365296; select producer_0.birth_city from made_by as made_by_0, movie as movie_0, producer as producer_0 where movie_0.title = "The Past" and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid
TOT: 0.862543604440548; TR: 0.8662391053409028; QF: 0.16890153054313964; select director_0.name from cast as cast_0, directed_by as directed_by_0, director as director_0, movie as movie_0 where cast_0.role = "The Past" and cast_0.msid = movie_0.mid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid
TOT: 0.862543604440548; TR: 0.8662391053409028; QF: 0.16890153054313964; select director_0.birth_city from cast as cast_0, directed_by as directed_by_0, director as director_0, movie as movie_0 where cast_0.role = "The Past" and cast_0.msid = movie_0.mid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid
TOT: 0.8625412444718837; TR: 0.8662391053409028; QF: 0.14530184389997475; select writer_0.birth_city from cast as cast_0, movie as movie_0, writer as writer_0, written_by as written_by_0 where cast_0.role = "The Past" and cast_0.msid = movie_0.mid and movie_0.mid = written_by_0.msid and writer_0.wid = written_by_0.wid
TOT: 0.8625410285024897; TR: 0.8662391053409028; QF: 0.14314214995945887; select producer_0.birth_city from cast as cast_0, made_by as made_by_0, movie as movie_0, producer as producer_0 where cast_0.role = "The Past" and cast_0.msid = movie_0.mid and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid


10:28  INFO: ================
10:28  INFO: QUERY 4: Find all actors born in "Los Angeles"
10:28  INFO: ================
10:32  INFO: ================
10:32  INFO: QUERY 42: What are all the tv series created by "Shonda Rhimes"?
10:32  INFO: ================
918. ROOT: ROOT; NA; ; (0) 
919. What: CMT; NA; ; (0) 
921. series: NT; NA; all; (0) tv_series.title(1.0):| tv_series(1.0):| keyword.keyword(0.95):series; series; series-in-series; | company.name(0.87):Series+; Series+; T-Series; | movie.title(0.8):Series 4; Series 4; Chinese Series; | actor.name(0.79):Eric Series; Eric Series; series editor; | tv_series.num_of_episodes(0.68):| 
924. tv: NT; NA; ; (0) tv_series.title(1.0):| tv_series(1.0):| actor.name(0.95):TVS; | company.name(0.95):TVS; TVS; TV Studios (TVS); | movie.title(0.69):| movie(0.69):| tv_series.num_of_episodes(0.67):| 
925. created: NT; NA; ; (0) made_by(0.79):| directed_by(0.71):| cast.role(0.69):| cast(0.69):| written_by(0.62):| movie.release_year(0.6):| tv_series.release_year(0.6):| 
926. Shonda Rhimes: VTTEXT; NA; ; (0) director.name(1.0):Shonda Rhimes; Shonda Rhimes; Shonda Harris; | actor.name(1.0):Shonda Rhimes; Shonda Rhimes; Shonda Tamez; | producer.name(1.0):Shonda Rhimes; Shonda Rhimes; Brandon Rhimes; | writer.name(1.0):Shonda Rhimes; Shonda Rhimes; Shonda Harris; | cast.role(0.58):Shonda Wessun; Shonda Wessun; Shonda Nichols; | movie.title(0.58):Rhimes and Reason; The Marriage of Maid; The Marriage of Maid; | genre.genre(0.32):Game-Show; Game-Show; Short; | 
What, WP
are, VBP
all, PDT
the, DT
tv, NN
series, NN
created, VBN
by, IN
Shonda Rhimes, NNP
root(ROOT-0, What-1)
cop(What-1, are-2)
det:predet(series-6, all-3)
det(series-6, the-4)
compound(series-6, tv-5)
nsubj(What-1, series-6)
acl(series-6, created-7)
case(Shonda Rhimes-9, by-8)
nmod(created-7, Shonda Rhimes-9)

PARSE TREE:(918) ROOT ROOT
    (919) What CMT
        (921) series NT
            (924) tv NT
            (925) created NT
                (926) Shonda Rhimes VTTEXT


===========
TRANSLATIONS
===========
TOT: 0.8979007600118484; NL: 0.8979007600118484; NL+AG: 0.9664773678070535; NL+QF: 0.8979007600118484; rels: []; projs: [tv_series_0.title]; preds: [director_0.name = "Shonda Rhimes"]; havings: []; superlative: []; blanks: 2
TOT: 0.8979007600118484; NL: 0.8979007600118484; NL+AG: 0.9664773678070535; NL+QF: 0.8979007600118484; rels: []; projs: [tv_series_0.title]; preds: [actor_0.name = "Shonda Rhimes"]; havings: []; superlative: []; blanks: 2
TOT: 0.8979007600118484; NL: 0.8979007600118484; NL+AG: 0.9664773678070535; NL+QF: 0.8979007600118484; rels: []; projs: [tv_series_0.title]; preds: [producer_0.name = "Shonda Rhimes"]; havings: []; superlative: []; blanks: 2
TOT: 0.8979007600118484; NL: 0.8979007600118484; NL+AG: 0.9664773678070535; NL+QF: 0.8979007600118484; rels: []; projs: [tv_series_0.title]; preds: [writer_0.name = "Shonda Rhimes"]; havings: []; superlative: []; blanks: 2
TOT: 0.806225774829855; NL: 0.806225774829855; NL+AG: 0.932954735614107; NL+QF: 0.806225774829855; rels: []; projs: [tv_series_0.title]; preds: [director_0.name = "Shonda Rhimes"]; havings: []; superlative: []; blanks: 2
TOT: 0.806225774829855; NL: 0.806225774829855; NL+AG: 0.932954735614107; NL+QF: 0.806225774829855; rels: []; projs: [tv_series_0.title]; preds: [actor_0.name = "Shonda Rhimes"]; havings: []; superlative: []; blanks: 2
TOT: 0.806225774829855; NL: 0.806225774829855; NL+AG: 0.932954735614107; NL+QF: 0.806225774829855; rels: []; projs: [tv_series_0.title]; preds: [producer_0.name = "Shonda Rhimes"]; havings: []; superlative: []; blanks: 2
TOT: 0.806225774829855; NL: 0.806225774829855; NL+AG: 0.932954735614107; NL+QF: 0.806225774829855; rels: []; projs: [tv_series_0.title]; preds: [writer_0.name = "Shonda Rhimes"]; havings: []; superlative: []; blanks: 2
TOT: 0.806225774829855; NL: 0.806225774829855; NL+AG: 0.9289960772223786; NL+QF: 0.806225774829855; rels: []; projs: [tv_series_0.title]; preds: []; havings: []; superlative: []; blanks: 3
TOT: 0.7645407753841558; NL: 0.7550415303475492; NL+AG: 0.932954735614107; NL+QF: 0.7645407753841558; rels: [tv_series]; projs: [tv_series_0.title]; preds: [actor_0.name = "Shonda Rhimes"]; havings: []; superlative: []; blanks: 1
TOT: 0.7590844504103504; NL: 0.7454212025910731; NL+AG: 0.9460558808515953; NL+QF: 0.7590844504103504; rels: []; projs: [tv_series_0.title]; preds: [actor_0.name = "TVS",director_0.name = "Shonda Rhimes"]; havings: []; superlative: []; blanks: 1

===========
RESULTS
===========
TOT: 0.8946556843279149; TR: 0.8979007600118484; QF: 0.18164251207729468; select tv_series_0.title from directed_by as directed_by_0, director as director_0, tv_series as tv_series_0 where director_0.name = "Shonda Rhimes" and directed_by_0.did = director_0.did and directed_by_0.msid = tv_series_0.sid
TOT: 0.8946541867433738; TR: 0.8979007600118484; QF: 0.16666666666666666; select tv_series_0.title from tv_series as tv_series_0, writer as writer_0, written_by as written_by_0 where writer_0.name = "Shonda Rhimes" and tv_series_0.sid = written_by_0.msid and writer_0.wid = written_by_0.wid
TOT: 0.8946541867433738; TR: 0.8979007600118484; QF: 0.16666666666666666; select tv_series_0.title from made_by as made_by_0, producer as producer_0, tv_series as tv_series_0 where producer_0.name = "Shonda Rhimes" and made_by_0.msid = tv_series_0.sid and made_by_0.pid = producer_0.pid
TOT: 0.8946530756322627; TR: 0.8979007600118484; QF: 0.15555555555555556; select tv_series_0.title from actor as actor_0, cast as cast_0, tv_series as tv_series_0 where actor_0.name = "Shonda Rhimes" and actor_0.aid = cast_0.aid and cast_0.msid = tv_series_0.sid
TOT: 0.8933599677656787; TR: 0.8979007600118484; QF: 0.10800758499255045; select tv_series_0.title from cast as cast_0, directed_by as directed_by_0, director as director_0, movie as movie_0, tv_series as tv_series_0 where director_0.name = "Shonda Rhimes" and cast_0.msid = movie_0.mid and cast_0.msid = tv_series_0.sid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid
TOT: 0.8933593167994951; TR: 0.8979007600118484; QF: 0.10149792315680166; select tv_series_0.title from actor as actor_0, cast as cast_0, copyright as copyright_0, movie as movie_0, tv_series as tv_series_0 where actor_0.name = "Shonda Rhimes" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and copyright_0.msid = movie_0.mid and copyright_0.msid = tv_series_0.sid
TOT: 0.8933591851569831; TR: 0.8979007600118484; QF: 0.10018149803602872; select tv_series_0.title from actor as actor_0, cast as cast_0, directed_by as directed_by_0, movie as movie_0, tv_series as tv_series_0 where actor_0.name = "Shonda Rhimes" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and directed_by_0.msid = movie_0.mid and directed_by_0.msid = tv_series_0.sid
TOT: 0.8933590957511408; TR: 0.8979007600118484; QF: 0.09928743961352657; select tv_series_0.title from copyright as copyright_0, directed_by as directed_by_0, director as director_0, movie as movie_0, tv_series as tv_series_0 where director_0.name = "Shonda Rhimes" and copyright_0.msid = movie_0.mid and copyright_0.msid = tv_series_0.sid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid
TOT: 0.8933585517844801; TR: 0.8979007600118484; QF: 0.09384777300665151; select tv_series_0.title from cast as cast_0, movie as movie_0, tv_series as tv_series_0, writer as writer_0, written_by as written_by_0 where writer_0.name = "Shonda Rhimes" and cast_0.msid = movie_0.mid and cast_0.msid = tv_series_0.sid and movie_0.mid = written_by_0.msid and writer_0.wid = written_by_0.wid
TOT: 0.8933584222028437; TR: 0.8979007600118484; QF: 0.09255195664234199; select tv_series_0.title from cast as cast_0, made_by as made_by_0, movie as movie_0, producer as producer_0, tv_series as tv_series_0 where producer_0.name = "Shonda Rhimes" and cast_0.msid = movie_0.mid and cast_0.msid = tv_series_0.sid and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid


10:35  INFO: ================
10:35  INFO: QUERY 92: What is the number of movies produced in 2013?
10:35  INFO: ================
10:38  INFO: ================
10:38  INFO: QUERY 101: How many movies did "Quentin Tarantino" direct after 2010?
10:38  INFO: ================
10:42  INFO: ================
10:42  INFO: QUERY 80: what are the genres of movies directed by "Asghar Farhadi"
10:42  INFO: ================
10:45  INFO: ================
10:45  INFO: QUERY 86: List all the directors of movies about nuclear weapons
10:45  INFO: ================
961. ROOT: ROOT; NA; ; (0) 
962. List: CMT; NA; ; (0) 
963. directors: NT; NA; all; (0) director.name(1.0):| director(1.0):| movie.title(0.95):Director; Director; Director; | producer.name(0.95):Director; Co-Director; Director GT; | company.name(0.95):Directors; Directors; Director; | writer.name(0.95):Director; Director X; Director X.; | tv_series.title(0.88):Directors on Directo; The Directors; The Directors; | 
966. movies: NT; NA; ; (0) movie.title(1.0):| movie(1.0):| cast.role(0.95):Movie; Movie F; Movie AD; | company.name(0.95):Movies; Movie; Movie Movie; | tv_series.title(0.84):Movies, Movies, Movi; Movie Mob; Moon Movies; | keyword.keyword(0.83):movie-in-movie; movies-about-movies; b-movie; | actor.name(0.76):| 
968. weapons: VTTEXT; NA; ; (0) movie.title(0.95):Weapons; Weapons; Weapons; | cast.role(0.95):Weapons; Weapons; Weapons; | keyword.keyword(0.95):weapon; weapon-x; power-weapon; | actor.name(0.74):The Weapons; Leatha Weapons; Letha Weapons; | tv_series.title(0.71):Weapons of Power; Weapon Wars; Weapons at War; | company.name(0.67):Weapon Films; Weapons Productions; No Weapon Production; | director.nationality(0.59):| 
970. nuclear: VTTEXT; NA; ; (0) movie.title(1.0):Nuclear; Nuclear Leak; Nuclear Day; | company.name(1.0):Nuclear; Nuclear; Nuclear Cat; | keyword.keyword(1.0):nuclear; nuclear-leak; nuclear-arms; | cast.role(0.79):Nuclear dealer; Nuclear Man; Nuclear Man; | tv_series.title(0.77):Nuclear Ned; Nuclear Coleslaw; Nuclear Family; | actor.name(0.68):Nuclear Family; Nuclear Wintour; El Físico Nuclear; | company.country_code(0.62):| 
List, VB
all, PDT
the, DT
directors, NNS
of, IN
movies, NNS
about, IN
nuclear, JJ
weapons, NNS
root(ROOT-0, List-1)
det:predet(directors-4, all-2)
det(directors-4, the-3)
dobj(List-1, directors-4)
case(movies-6, of-5)
nmod(directors-4, movies-6)
case(weapons-9, about-7)
amod(weapons-9, nuclear-8)
nmod(movies-6, weapons-9)

PARSE TREE:(961) ROOT ROOT
    (962) List CMT
        (963) directors NT
            (966) movies NT
                (968) weapons VTTEXT
                    (970) nuclear VTTEXT


===========
TRANSLATIONS
===========
TOT: 0.8979007600118484; NL: 0.8979007600118484; NL+AG: 0.9664773678070535; NL+QF: 0.8979007600118484; rels: [movie]; projs: [director_0.name]; preds: [movie_0.title = "Nuclear"]; havings: []; superlative: []; blanks: 1
TOT: 0.8979007600118484; NL: 0.8979007600118484; NL+AG: 0.9664773678070535; NL+QF: 0.8979007600118484; rels: [movie]; projs: [director_0.name]; preds: [company_0.name = "Nuclear"]; havings: []; superlative: []; blanks: 1
TOT: 0.8979007600118484; NL: 0.8979007600118484; NL+AG: 0.9664773678070535; NL+QF: 0.8979007600118484; rels: [movie]; projs: [director_0.name]; preds: [keyword_0.keyword = "nuclear"]; havings: []; superlative: []; blanks: 1
TOT: 0.8706421479874179; NL: 0.8301821713362141; NL+AG: 0.9775991838486775; NL+QF: 0.8706421479874179; rels: [movie]; projs: [director_0.name]; preds: [movie_0.title = "Weapons",movie_0.title = "Nuclear"]; havings: []; superlative: []; blanks: 0
TOT: 0.8706421479874179; NL: 0.8301821713362141; NL+AG: 0.9775991838486775; NL+QF: 0.8706421479874179; rels: [movie]; projs: [director_0.name]; preds: [movie_0.title = "Weapons",company_0.name = "Nuclear"]; havings: []; superlative: []; blanks: 0
TOT: 0.8706421479874179; NL: 0.8301821713362141; NL+AG: 0.9775991838486775; NL+QF: 0.8706421479874179; rels: [movie]; projs: [director_0.name]; preds: [movie_0.title = "Weapons",keyword_0.keyword = "nuclear"]; havings: []; superlative: []; blanks: 0
TOT: 0.8636522447290672; NL: 0.8301821713362141; NL+AG: 0.9775991838486775; NL+QF: 0.8636522447290672; rels: [movie]; projs: [director_0.name]; preds: [cast_0.role = "Weapons",movie_0.title = "Nuclear"]; havings: []; superlative: []; blanks: 0
TOT: 0.850715628074582; NL: 0.8470827043267568; NL+AG: 0.9426933077521801; NL+QF: 0.850715628074582; rels: [movie]; projs: [director_0.name]; preds: [cast_0.role = "Nuclear dealer"]; havings: []; superlative: []; blanks: 1
TOT: 0.8498919018967559; NL: 0.7831967519106005; NL+AG: 0.955198367697355; NL+QF: 0.8498919018967559; rels: [movie]; projs: [director_0.name]; preds: [movie_0.title = "Weapons",cast_0.role = "Nuclear dealer"]; havings: []; superlative: []; blanks: 0
TOT: 0.8423590487037597; NL: 0.8423590487037597; NL+AG: 0.9426933077521801; NL+QF: 0.8423590487037597; rels: [movie]; projs: [director_0.name]; preds: [tv_series_0.title = "Nuclear Ned"]; havings: []; superlative: []; blanks: 1
TOT: 0.8413340403902587; NL: 0.8176106028275605; NL+AG: 0.932954735614107; NL+QF: 0.8413340403902587; rels: [tv_series]; projs: [director_0.name]; preds: [company_0.name = "Nuclear"]; havings: []; superlative: []; blanks: 1

===========
RESULTS
===========
TOT: 0.8946607084825042; TR: 0.8979007600118484; QF: 0.2318840579710145; select director_0.name from directed_by as directed_by_0, director as director_0, movie as movie_0 where movie_0.title = "Nuclear" and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid
TOT: 0.8933618735289186; TR: 0.8979007600118484; QF: 0.12706521739130436; select director_0.name from company as company_0, copyright as copyright_0, directed_by as directed_by_0, director as director_0, movie as movie_0 where company_0.name = "Nuclear" and company_0.id = copyright_0.cid and copyright_0.msid = movie_0.mid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid
TOT: 0.8933617901955853; TR: 0.8979007600118484; QF: 0.12623188405797103; select director_0.name from directed_by as directed_by_0, director as director_0, keyword as keyword_0, movie as movie_0, tags as tags_0 where keyword_0.keyword = "nuclear" and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and keyword_0.id = tags_0.kid and movie_0.mid = tags_0.msid
TOT: 0.8933584605193019; TR: 0.8979007600118484; QF: 0.09293512122443451; select director_0.name from cast as cast_0, directed_by as directed_by_0, director as director_0, movie as movie_0, tv_series as tv_series_0 where movie_0.title = "Nuclear" and cast_0.msid = movie_0.mid and cast_0.msid = tv_series_0.sid and directed_by_0.did = director_0.did and directed_by_0.msid = tv_series_0.sid
TOT: 0.893357588504764; TR: 0.8979007600118484; QF: 0.08421497584541063; select director_0.name from copyright as copyright_0, directed_by as directed_by_0, director as director_0, movie as movie_0, tv_series as tv_series_0 where movie_0.title = "Nuclear" and copyright_0.msid = movie_0.mid and copyright_0.msid = tv_series_0.sid and directed_by_0.did = director_0.did and directed_by_0.msid = tv_series_0.sid
TOT: 0.8933552829492084; TR: 0.8979007600118484; QF: 0.06115942028985507; select director_0.name from directed_by as directed_by_0, director as director_0, movie as movie_0, tags as tags_0, tv_series as tv_series_0 where movie_0.title = "Nuclear" and directed_by_0.did = director_0.did and directed_by_0.msid = tv_series_0.sid and movie_0.mid = tags_0.msid and tags_0.msid = tv_series_0.sid
TOT: 0.8933551568230823; TR: 0.8979007600118484; QF: 0.059898159028593814; select director_0.name from directed_by as directed_by_0, director as director_0, movie as movie_0, tv_series as tv_series_0, written_by as written_by_0 where movie_0.title = "Nuclear" and directed_by_0.did = director_0.did and directed_by_0.msid = tv_series_0.sid and movie_0.mid = written_by_0.msid and tv_series_0.sid = written_by_0.msid
TOT: 0.8933550272414459; TR: 0.8979007600118484; QF: 0.0586023426642843; select director_0.name from directed_by as directed_by_0, director as director_0, made_by as made_by_0, movie as movie_0, tv_series as tv_series_0 where movie_0.title = "Nuclear" and directed_by_0.did = director_0.did and directed_by_0.msid = tv_series_0.sid and made_by_0.msid = movie_0.mid and made_by_0.msid = tv_series_0.sid
TOT: 0.8933550272414459; TR: 0.8979007600118484; QF: 0.0586023426642843; select director_0.name from classification as classification_0, directed_by as directed_by_0, director as director_0, movie as movie_0, tv_series as tv_series_0 where movie_0.title = "Nuclear" and classification_0.msid = movie_0.mid and classification_0.msid = tv_series_0.sid and directed_by_0.did = director_0.did and directed_by_0.msid = tv_series_0.sid
TOT: 0.8933524075868896; TR: 0.8979007600118484; QF: 0.03240579710144927; select director_0.name from directed_by as directed_by_0, directed_by as directed_by_1, director as director_0, movie as movie_0, tv_series as tv_series_0 where movie_0.title = "Nuclear" and directed_by_0.msid = movie_0.mid and directed_by_0.msid = tv_series_0.sid and directed_by_1.did = director_0.did and directed_by_1.msid = tv_series_0.sid


10:49  INFO: ================
10:49  INFO: QUERY 102: How many movies did "Quentin Tarantino" direct before 2010?
10:49  INFO: ================
10:58  INFO: ================
10:58  INFO: QUERY 111: How many companies participated in producing "Camp X-Ray"
10:58  INFO: ================
11:03  INFO: ================
11:03  INFO: QUERY 84: List all male directors who worked with the "NBCUniversal" company
11:03  INFO: ================
991. ROOT: ROOT; NA; ; (0) 
992. List: CMT; NA; ; (0) 
993. directors: NT; NA; all; (0) director.name(1.0):| director(1.0):| movie.title(0.95):Director; Director; Director; | producer.name(0.95):Director; Co-Director; Director GT; | company.name(0.95):Directors; Directors; Director; | writer.name(0.95):Director; Director X; Director X.; | tv_series.title(0.88):Directors on Directo; The Directors; The Directors; | 
995. male: VTTEXT; NA; ; (0) movie.title(1.0):Male; Female/Male; Pale Male; | director.birth_city(1.0):Male; Wilkucice Male; | director.gender(1.0):male; male; male; | actor.gender(1.0):male; male; male; | actor.name(1.0):Male; Male; Coleman Male; | cast.role(1.0):Males; Males; Males; | producer.birth_city(1.0):Male; | 
996. worked: NT; NA; ; (0) directed_by(0.71):| made_by(0.64):| written_by(0.63):| director.name(0.62):| director(0.62):| cast.role(0.62):| cast(0.62):| 
998. company: NT; NA; ; (0) company.name(1.0):| company(1.0):| movie.title(0.95):Company; Company; Company; | cast.role(0.95):Company; Company; Company; | keyword.keyword(0.95):company; company-k; it-company; | tv_series.title(0.82):X Company; Eco Company; Company and Co; | actor.name(0.74):Eva Company; Angel Company; Marc Company; | 
1001. NBCUniversal: VTTEXT; NA; ; (0) company.name(1.0):NBCUniversal; NBCUniversal Media; NBCUniversal Skycast; | genre.genre(0.2):Commercial; Commercial; Experimental; | 
List, VB
all, DT
male, JJ
directors, NNS
who, WP
worked, VBD
with, IN
the, DT
NBCUniversal, NNP
company, NN
root(ROOT-0, List-1)
det(directors-4, all-2)
amod(directors-4, male-3)
dobj(List-1, directors-4)
nsubj(worked-6, who-5)
acl:relcl(directors-4, worked-6)
case(company-10, with-7)
det(company-10, the-8)
compound(company-10, NBCUniversal-9)
nmod(worked-6, company-10)

PARSE TREE:(991) ROOT ROOT
    (992) List CMT
        (993) directors NT
            (995) male VTTEXT
            (996) worked NT
                (998) company NT
                    (1001) NBCUniversal VTTEXT


===========
TRANSLATIONS
===========
TOT: 0.8979007600118484; NL: 0.8979007600118484; NL+AG: 0.9684566970029178; NL+QF: 0.8979007600118484; rels: []; projs: [director_0.name]; preds: [movie_0.title = "Male",company_0.name = "NBCUniversal"]; havings: []; superlative: []; blanks: 1
TOT: 0.8979007600118484; NL: 0.8979007600118484; NL+AG: 0.9684566970029178; NL+QF: 0.8979007600118484; rels: []; projs: [director_0.name]; preds: [director_0.birth_city = "Male",company_0.name = "NBCUniversal"]; havings: []; superlative: []; blanks: 1
TOT: 0.8979007600118484; NL: 0.8979007600118484; NL+AG: 0.9684566970029178; NL+QF: 0.8979007600118484; rels: []; projs: [director_0.name]; preds: [director_0.gender = "male",company_0.name = "NBCUniversal"]; havings: []; superlative: []; blanks: 1
TOT: 0.8979007600118484; NL: 0.8979007600118484; NL+AG: 0.9684566970029178; NL+QF: 0.8979007600118484; rels: []; projs: [director_0.name]; preds: [actor_0.gender = "male",company_0.name = "NBCUniversal"]; havings: []; superlative: []; blanks: 1
TOT: 0.8979007600118484; NL: 0.8979007600118484; NL+AG: 0.9684566970029178; NL+QF: 0.8979007600118484; rels: []; projs: [director_0.name]; preds: [actor_0.name = "Male",company_0.name = "NBCUniversal"]; havings: []; superlative: []; blanks: 1
TOT: 0.8979007600118484; NL: 0.8979007600118484; NL+AG: 0.9684566970029178; NL+QF: 0.8979007600118484; rels: []; projs: [director_0.name]; preds: [cast_0.role = "Males",company_0.name = "NBCUniversal"]; havings: []; superlative: []; blanks: 1
TOT: 0.8979007600118484; NL: 0.8979007600118484; NL+AG: 0.9684566970029178; NL+QF: 0.8979007600118484; rels: []; projs: [director_0.name]; preds: [producer_0.birth_city = "Male",company_0.name = "NBCUniversal"]; havings: []; superlative: []; blanks: 1
TOT: 0.8504918088311111; NL: 0.7986871040769151; NL+AG: 0.9436245721637349; NL+QF: 0.8504918088311111; rels: [company]; projs: [director_0.name]; preds: [actor_0.name = "Male",company_0.name = "NBCUniversal"]; havings: []; superlative: []; blanks: 1
TOT: 0.8484621147709468; NL: 0.7986871040769151; NL+AG: 0.9436245721637349; NL+QF: 0.8484621147709468; rels: [company]; projs: [director_0.name]; preds: [movie_0.title = "Male",company_0.name = "NBCUniversal"]; havings: []; superlative: []; blanks: 1
TOT: 0.8484621147709468; NL: 0.7986871040769151; NL+AG: 0.9436245721637349; NL+QF: 0.8484621147709468; rels: [company]; projs: [director_0.name]; preds: [director_0.birth_city = "Male",company_0.name = "NBCUniversal"]; havings: []; superlative: []; blanks: 1
TOT: 0.8484621147709468; NL: 0.7986871040769151; NL+AG: 0.9436245721637349; NL+QF: 0.8484621147709468; rels: [company]; projs: [director_0.name]; preds: [director_0.gender = "male",company_0.name = "NBCUniversal"]; havings: []; superlative: []; blanks: 1
TOT: 0.8484621147709468; NL: 0.7986871040769151; NL+AG: 0.9436245721637349; NL+QF: 0.8484621147709468; rels: [company]; projs: [director_0.name]; preds: [actor_0.gender = "male",company_0.name = "NBCUniversal"]; havings: []; superlative: []; blanks: 1
TOT: 0.8484621147709468; NL: 0.7986871040769151; NL+AG: 0.9436245721637349; NL+QF: 0.8484621147709468; rels: [company]; projs: [director_0.name]; preds: [cast_0.role = "Males",company_0.name = "NBCUniversal"]; havings: []; superlative: []; blanks: 1
TOT: 0.8484621147709468; NL: 0.7986871040769151; NL+AG: 0.9436245721637349; NL+QF: 0.8484621147709468; rels: [company]; projs: [director_0.name]; preds: [producer_0.birth_city = "Male",company_0.name = "NBCUniversal"]; havings: []; superlative: []; blanks: 1

===========
RESULTS
===========
TOT: 0.8933618735289186; TR: 0.8979007600118484; QF: 0.12706521739130436; select director_0.name from company as company_0, copyright as copyright_0, directed_by as directed_by_0, director as director_0, movie as movie_0 where company_0.name = "NBCUniversal" and movie_0.title = "Male" and company_0.id = copyright_0.cid and copyright_0.msid = movie_0.mid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid
TOT: 0.8933618735289186; TR: 0.8979007600118484; QF: 0.12706521739130436; select director_0.name from company as company_0, copyright as copyright_0, directed_by as directed_by_0, director as director_0, movie as movie_0 where company_0.name = "NBCUniversal" and director_0.birth_city = "Male" and company_0.id = copyright_0.cid and copyright_0.msid = movie_0.mid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid
TOT: 0.8933618735289186; TR: 0.8979007600118484; QF: 0.12706521739130436; select director_0.name from company as company_0, copyright as copyright_0, directed_by as directed_by_0, director as director_0, movie as movie_0 where company_0.name = "NBCUniversal" and director_0.gender = "male" and company_0.id = copyright_0.cid and copyright_0.msid = movie_0.mid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid
TOT: 0.893361838504764; TR: 0.8979007600118484; QF: 0.12671497584541064; select director_0.name from company as company_0, copyright as copyright_0, directed_by as directed_by_0, director as director_0, tv_series as tv_series_0 where company_0.name = "NBCUniversal" and director_0.birth_city = "Male" and company_0.id = copyright_0.cid and copyright_0.msid = tv_series_0.sid and directed_by_0.did = director_0.did and directed_by_0.msid = tv_series_0.sid
TOT: 0.893361838504764; TR: 0.8979007600118484; QF: 0.12671497584541064; select director_0.name from company as company_0, copyright as copyright_0, directed_by as directed_by_0, director as director_0, tv_series as tv_series_0 where company_0.name = "NBCUniversal" and director_0.gender = "male" and company_0.id = copyright_0.cid and copyright_0.msid = tv_series_0.sid and directed_by_0.did = director_0.did and directed_by_0.msid = tv_series_0.sid
TOT: 0.8929739998818772; TR: 0.8979007600118484; QF: 0.10589394555058919; select director_0.name from cast as cast_0, company as company_0, copyright as copyright_0, directed_by as directed_by_0, director as director_0, movie as movie_0 where cast_0.role = "Males" and company_0.name = "NBCUniversal" and cast_0.msid = movie_0.mid and company_0.id = copyright_0.cid and copyright_0.msid = movie_0.mid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid
TOT: 0.8929733074277408; TR: 0.8979007600118484; QF: 0.09896940418679549; select director_0.name from company as company_0, copyright as copyright_0, directed_by as directed_by_0, director as director_0, movie as movie_0, tv_series as tv_series_0 where company_0.name = "NBCUniversal" and movie_0.title = "Male" and company_0.id = copyright_0.cid and copyright_0.msid = tv_series_0.sid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and directed_by_0.msid = tv_series_0.sid
TOT: 0.8929723581523785; TR: 0.8979007600118484; QF: 0.08947665056360708; select director_0.name from company as company_0, copyright as copyright_0, directed_by as directed_by_0, director as director_0, movie as movie_0, tv_series as tv_series_0 where company_0.name = "NBCUniversal" and movie_0.title = "Male" and company_0.id = copyright_0.cid and copyright_0.msid = movie_0.mid and copyright_0.msid = tv_series_0.sid and directed_by_0.did = director_0.did and directed_by_0.msid = tv_series_0.sid
TOT: 0.8929723025968229; TR: 0.8979007600118484; QF: 0.08892109500805152; select director_0.name from cast as cast_0, company as company_0, copyright as copyright_0, directed_by as directed_by_0, director as director_0, tv_series as tv_series_0 where cast_0.role = "Males" and company_0.name = "NBCUniversal" and cast_0.msid = tv_series_0.sid and company_0.id = copyright_0.cid and copyright_0.msid = tv_series_0.sid and directed_by_0.did = director_0.did and directed_by_0.msid = tv_series_0.sid
TOT: 0.8926730693096796; TR: 0.8979007600118484; QF: 0.09468615158375418; select director_0.name from actor as actor_0, cast as cast_0, company as company_0, copyright as copyright_0, directed_by as directed_by_0, director as director_0, movie as movie_0 where actor_0.gender = "male" and company_0.name = "NBCUniversal" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and company_0.id = copyright_0.cid and copyright_0.msid = movie_0.mid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid


11:26  INFO: ===== FOLD 3 =====
11:26  INFO: ===== Parsing Results =====
11:26  INFO: Total Queries: 99
11:26  INFO: Correctly Parsed: 98/99

11:26  INFO: ================
11:26  INFO: QUERY 85: What are the movies related to nuclear weapons
11:26  INFO: ================
1003. ROOT: ROOT; NA; ; (0) 
1004. related: NT; NA; ; (0) made_by(0.69):| written_by(0.66):| directed_by(0.66):| cast.role(0.61):| cast(0.6):| company.name(0.59):| company(0.59):| 
1005. What: CMT; NA; ; (0) 
1007. movies: NT; NA; ; (0) movie.title(1.0):| movie(1.0):| cast.role(0.95):Movie; Movie F; Movie AD; | company.name(0.95):Movies; Movie; Movie Movie; | tv_series.title(0.84):Movies, Movies, Movi; Movie Mob; Moon Movies; | keyword.keyword(0.83):movie-in-movie; movies-about-movies; b-movie; | actor.name(0.76):| 
1009. weapons: VTTEXT; NA; ; (0) movie.title(0.95):Weapons; Weapons; Weapons; | cast.role(0.95):Weapons; Weapons; Weapons; | keyword.keyword(0.95):weapon; weapon-x; power-weapon; | actor.name(0.74):The Weapons; Leatha Weapons; Letha Weapons; | tv_series.title(0.71):Weapons of Power; Weapon Wars; Weapons at War; | company.name(0.67):Weapon Films; Weapons Productions; No Weapon Production; | director.nationality(0.59):| 
1011. nuclear: VTTEXT; NA; ; (0) movie.title(1.0):Nuclear; Nuclear Leak; Nuclear Day; | company.name(1.0):Nuclear; Nuclear; Nuclear Cat; | keyword.keyword(1.0):nuclear; nuclear-leak; nuclear-arms; | cast.role(0.79):Nuclear dealer; Nuclear Man; Nuclear Man; | tv_series.title(0.77):Nuclear Ned; Nuclear Coleslaw; Nuclear Family; | actor.name(0.68):Nuclear Family; Nuclear Wintour; El Físico Nuclear; | company.country_code(0.62):| 
What, WP
are, VBP
the, DT
movies, NNS
related, VBN
to, TO
nuclear, JJ
weapons, NNS
dobj(related-5, What-1)
auxpass(related-5, are-2)
det(movies-4, the-3)
nsubjpass(related-5, movies-4)
root(ROOT-0, related-5)
case(weapons-8, to-6)
amod(weapons-8, nuclear-7)
nmod(related-5, weapons-8)

PARSE TREE:(1003) ROOT ROOT
    (1005) What CMT
        (1007) movies NT
            (1004) related NT
                (1009) weapons VTTEXT
                    (1011) nuclear VTTEXT


===========
TRANSLATIONS
===========
TOT: 0.806225774829855; NL: 0.806225774829855; NL+AG: 0.932954735614107; NL+QF: 0.806225774829855; rels: []; projs: [movie_0.title]; preds: [movie_0.title = "Nuclear"]; havings: []; superlative: []; blanks: 2
TOT: 0.806225774829855; NL: 0.806225774829855; NL+AG: 0.932954735614107; NL+QF: 0.806225774829855; rels: []; projs: [movie_0.title]; preds: [company_0.name = "Nuclear"]; havings: []; superlative: []; blanks: 2
TOT: 0.806225774829855; NL: 0.806225774829855; NL+AG: 0.932954735614107; NL+QF: 0.806225774829855; rels: []; projs: [movie_0.title]; preds: [keyword_0.keyword = "nuclear"]; havings: []; superlative: []; blanks: 2
TOT: 0.7819408134511872; NL: 0.6965079852259328; NL+AG: 0.9300684825695807; NL+QF: 0.7819408134511872; rels: []; projs: [actor_0.name]; preds: [cast_0.role = "Weapons",movie_0.title = "Nuclear"]; havings: []; superlative: []; blanks: 1
TOT: 0.781935141636621; NL: 0.7454212025910731; NL+AG: 0.9460558808515953; NL+QF: 0.781935141636621; rels: []; projs: [movie_0.title]; preds: [cast_0.role = "Weapons",movie_0.title = "Nuclear"]; havings: []; superlative: []; blanks: 1
TOT: 0.7702415476125124; NL: 0.7533226692667779; NL+AG: 0.9092080943898837; NL+QF: 0.7702415476125124; rels: []; projs: [actor_0.name]; preds: [movie_0.title = "Nuclear"]; havings: []; superlative: []; blanks: 2
TOT: 0.7673226555727322; NL: 0.7454212025910731; NL+AG: 0.9460558808515953; NL+QF: 0.7673226555727322; rels: []; projs: [movie_0.title]; preds: [keyword_0.keyword = "weapon",movie_0.title = "Nuclear"]; havings: []; superlative: []; blanks: 1
TOT: 0.7673226555727322; NL: 0.7454212025910731; NL+AG: 0.9460558808515953; NL+QF: 0.7673226555727322; rels: []; projs: [movie_0.title]; preds: [keyword_0.keyword = "weapon",company_0.name = "Nuclear"]; havings: []; superlative: []; blanks: 1
TOT: 0.7673226555727322; NL: 0.7454212025910731; NL+AG: 0.9460558808515953; NL+QF: 0.7673226555727322; rels: []; projs: [movie_0.title]; preds: [keyword_0.keyword = "weapon",keyword_0.keyword = "nuclear"]; havings: []; superlative: []; blanks: 1
TOT: 0.764014631182885; NL: 0.7605962040078869; NL+AG: 0.9091706755592336; NL+QF: 0.764014631182885; rels: []; projs: [movie_0.title]; preds: [cast_0.role = "Nuclear dealer"]; havings: []; superlative: []; blanks: 2
TOT: 0.7636299176394407; NL: 0.7319521074988401; NL+AG: 0.9091706755592336; NL+QF: 0.7636299176394407; rels: []; projs: [movie_0.title]; preds: [actor_0.name = "Nuclear Family"]; havings: []; superlative: []; blanks: 2

===========
RESULTS
===========
TOT: 0.8038985155157645; TR: 0.806225774829855; QF: 0.1923076923076923; select movie_0.title from keyword as keyword_0, movie as movie_0, tags as tags_0 where keyword_0.keyword = "nuclear" and keyword_0.id = tags_0.kid and movie_0.mid = tags_0.msid
TOT: 0.8038984205490028; TR: 0.806225774829855; QF: 0.19135802469135801; select movie_0.title from company as company_0, copyright as copyright_0, movie as movie_0 where company_0.name = "Nuclear" and company_0.id = copyright_0.cid and copyright_0.msid = movie_0.mid
TOT: 0.8026033688667731; TR: 0.806225774829855; QF: 0.12437189767086673; select movie_0.title from directed_by as directed_by_0, directed_by as directed_by_1, director as director_0, movie as movie_0, movie as movie_1 where movie_1.title = "Nuclear" and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and directed_by_1.did = director_0.did and directed_by_1.msid = movie_1.mid
TOT: 0.8026013273488406; TR: 0.806225774829855; QF: 0.10395671834625322; select movie_0.title from cast as cast_0, company as company_0, copyright as copyright_0, movie as movie_0, tv_series as tv_series_0 where company_0.name = "Nuclear" and cast_0.msid = movie_0.mid and cast_0.msid = tv_series_0.sid and company_0.id = copyright_0.cid and copyright_0.msid = tv_series_0.sid
TOT: 0.8026005934038101; TR: 0.806225774829855; QF: 0.09661726804123712; select movie_0.title from company as company_0, copyright as copyright_0, directed_by as directed_by_0, movie as movie_0, tv_series as tv_series_0 where company_0.name = "Nuclear" and company_0.id = copyright_0.cid and copyright_0.msid = tv_series_0.sid and directed_by_0.msid = movie_0.mid and directed_by_0.msid = tv_series_0.sid
TOT: 0.8025994523488407; TR: 0.806225774829855; QF: 0.08520671834625324; select movie_0.title from cast as cast_0, keyword as keyword_0, movie as movie_0, tags as tags_0, tv_series as tv_series_0 where keyword_0.keyword = "nuclear" and cast_0.msid = movie_0.mid and cast_0.msid = tv_series_0.sid and keyword_0.id = tags_0.kid and tags_0.msid = tv_series_0.sid
TOT: 0.8025991594908588; TR: 0.806225774829855; QF: 0.08227813852813852; select movie_0.title from company as company_0, copyright as copyright_0, made_by as made_by_0, movie as movie_0, tv_series as tv_series_0 where company_0.name = "Nuclear" and company_0.id = copyright_0.cid and copyright_0.msid = tv_series_0.sid and made_by_0.msid = movie_0.mid and made_by_0.msid = tv_series_0.sid
TOT: 0.802598739316809; TR: 0.806225774829855; QF: 0.0780763980303252; select movie_0.title from actor as actor_0, cast as cast_0, cast as cast_1, movie as movie_0, movie as movie_1 where movie_1.title = "Nuclear" and actor_0.aid = cast_0.aid and actor_0.aid = cast_1.aid and cast_0.msid = movie_0.mid and cast_1.msid = movie_1.mid
TOT: 0.8025987184038101; TR: 0.806225774829855; QF: 0.07786726804123711; select movie_0.title from directed_by as directed_by_0, directed_by as directed_by_1, movie as movie_0, movie as movie_1, tv_series as tv_series_0 where movie_1.title = "Nuclear" and directed_by_0.msid = movie_0.mid and directed_by_0.msid = tv_series_0.sid and directed_by_1.msid = movie_1.mid and directed_by_1.msid = tv_series_0.sid
TOT: 0.8025987184038101; TR: 0.806225774829855; QF: 0.07786726804123711; select movie_0.title from directed_by as directed_by_0, keyword as keyword_0, movie as movie_0, tags as tags_0, tv_series as tv_series_0 where keyword_0.keyword = "nuclear" and directed_by_0.msid = movie_0.mid and directed_by_0.msid = tv_series_0.sid and keyword_0.id = tags_0.kid and tags_0.msid = tv_series_0.sid


11:30  INFO: ================
11:30  INFO: QUERY 3: Find all movies produced in 2015
11:30  INFO: ================
11:33  INFO: ================
11:33  INFO: QUERY 61: How many movies are there that are directed by "Steven Spielberg" and featuring "Matt Damon"?
11:33  INFO: ================
1021. ROOT: ROOT; NA; ; (0) 
1023. movies: NT; NA; ; (0) movie.title(1.0):| movie(1.0):| cast.role(0.95):Movie; Movie F; Movie AD; | company.name(0.95):Movies; Movie; Movie Movie; | tv_series.title(0.84):Movies, Movies, Movi; Movie Mob; Moon Movies; | keyword.keyword(0.83):movie-in-movie; movies-about-movies; b-movie; | actor.name(0.76):| 
1025. How many: CMT; count; ; (0) 
1027. directed: NT; NA; ; (0) directed_by(1.0):| director.name(0.72):| director(0.72):| written_by(0.68):| cast.role(0.67):| cast(0.67):| made_by(0.67):| 
1033. featuring: NT; NA; ; (0) tv_series.title(0.69):| tv_series(0.69):| movie.release_year(0.64):| tv_series.release_year(0.64):| made_by(0.64):| movie.title_aka(0.62):| tv_series.title_aka(0.62):| 
1034. Matt Damon: VTTEXT; NA; ; (0) director.name(1.0):Matt Damon; Matt Diamond; Matt Diamond; | actor.name(1.0):Matt Damon; Matt Damon; Matt Diamond; | producer.name(1.0):Matt Damon; Matt Damon; Matt Diamond; | writer.name(1.0):Matt Damon; Matt Damon; Matt Diamond; | movie.title(0.76):I'm Not Matt Damon; I'm Not Matt Damon; Meeting Matt Damon; | cast.role(0.74):Matt Stamon; Matt Damien; Matt Demond; | tv_series.title(0.67):Damon; The Damon Elliott Sh; Matt Houston; | 
How, WRB
many, JJ
movies, NNS
are, VBP
there, EX
that, WDT
are, VBP
directed, VBN
by, IN
Steven Spielberg, VBG
and, CC
featuring, VBG
Matt Damon, NNP
advmod(many-2, How-1)
amod(movies-3, many-2)
nsubj(are-4, movies-3)
root(ROOT-0, are-4)
expl(are-4, there-5)
nsubjpass(directed-8, that-6)
auxpass(directed-8, are-7)
dep(are-4, directed-8)
mark(Steven Spielberg-10, by-9)
advcl(directed-8, Steven Spielberg-10)
cc(Steven Spielberg-10, and-11)
conj(Steven Spielberg-10, featuring-12)
dobj(Steven Spielberg-10, Matt Damon-13)

PARSE TREE:(1021) ROOT ROOT
    (1025) How many CMT
        (1023) movies NT
            (1027) directed NT
                (1034) Matt Damon VTTEXT
                (1033) featuring NT


===========
TRANSLATIONS
===========
TOT: 0.8979007600118484; NL: 0.8979007600118484; NL+AG: 0.9663394570469733; NL+QF: 0.8979007600118484; rels: [directed_by]; projs: [count(distinct(movie_0.title))]; preds: [director_0.name = "Matt Damon"]; havings: []; superlative: []; blanks: 1
TOT: 0.8979007600118484; NL: 0.8979007600118484; NL+AG: 0.9663394570469733; NL+QF: 0.8979007600118484; rels: [directed_by]; projs: [count(distinct(movie_0.title))]; preds: [actor_0.name = "Matt Damon"]; havings: []; superlative: []; blanks: 1
TOT: 0.8979007600118484; NL: 0.8979007600118484; NL+AG: 0.9663394570469733; NL+QF: 0.8979007600118484; rels: [directed_by]; projs: [count(distinct(movie_0.title))]; preds: [producer_0.name = "Matt Damon"]; havings: []; superlative: []; blanks: 1
TOT: 0.8979007600118484; NL: 0.8979007600118484; NL+AG: 0.9663394570469733; NL+QF: 0.8979007600118484; rels: [directed_by]; projs: [count(distinct(movie_0.title))]; preds: [writer_0.name = "Matt Damon"]; havings: []; superlative: []; blanks: 1
TOT: 0.8474596752274126; NL: 0.8396606974641339; NL+AG: 0.9396482325347206; NL+QF: 0.8474596752274126; rels: [directed_by]; projs: [count(distinct(movie_0.title))]; preds: [movie_0.title = "I'm Not Matt Damon"]; havings: []; superlative: []; blanks: 1
TOT: 0.8389821044998752; NL: 0.8389821044998752; NL+AG: 0.9394098298452102; NL+QF: 0.8389821044998752; rels: [directed_by]; projs: [count(distinct(actor_0.name))]; preds: [director_0.name = "Matt Damon"]; havings: []; superlative: []; blanks: 1
TOT: 0.8389821044998752; NL: 0.8389821044998752; NL+AG: 0.9394098298452102; NL+QF: 0.8389821044998752; rels: [directed_by]; projs: [count(distinct(actor_0.name))]; preds: [actor_0.name = "Matt Damon"]; havings: []; superlative: []; blanks: 1
TOT: 0.8389821044998752; NL: 0.8389821044998752; NL+AG: 0.9394098298452102; NL+QF: 0.8389821044998752; rels: [directed_by]; projs: [count(distinct(actor_0.name))]; preds: [producer_0.name = "Matt Damon"]; havings: []; superlative: []; blanks: 1
TOT: 0.8389821044998752; NL: 0.8389821044998752; NL+AG: 0.9394098298452102; NL+QF: 0.8389821044998752; rels: [directed_by]; projs: [count(distinct(actor_0.name))]; preds: [writer_0.name = "Matt Damon"]; havings: []; superlative: []; blanks: 1
TOT: 0.8321900818019093; NL: 0.8321900818019093; NL+AG: 0.9396482325347206; NL+QF: 0.8321900818019093; rels: [directed_by]; projs: [count(distinct(movie_0.title))]; preds: [cast_0.role = "Matt Stamon"]; havings: []; superlative: []; blanks: 1
TOT: 0.8286431523248086; NL: 0.8286431523248086; NL+AG: 0.9394098298452102; NL+QF: 0.8286431523248086; rels: [directed_by]; projs: [count(distinct(tv_series_0.title))]; preds: [director_0.name = "Matt Damon"]; havings: []; superlative: []; blanks: 1
TOT: 0.8286431523248086; NL: 0.8286431523248086; NL+AG: 0.9394098298452102; NL+QF: 0.8286431523248086; rels: [directed_by]; projs: [count(distinct(tv_series_0.title))]; preds: [actor_0.name = "Matt Damon"]; havings: []; superlative: []; blanks: 1
TOT: 0.8286431523248086; NL: 0.8286431523248086; NL+AG: 0.9394098298452102; NL+QF: 0.8286431523248086; rels: [directed_by]; projs: [count(distinct(tv_series_0.title))]; preds: [producer_0.name = "Matt Damon"]; havings: []; superlative: []; blanks: 1
TOT: 0.8286431523248086; NL: 0.8286431523248086; NL+AG: 0.9394098298452102; NL+QF: 0.8286431523248086; rels: [directed_by]; projs: [count(distinct(tv_series_0.title))]; preds: [writer_0.name = "Matt Damon"]; havings: []; superlative: []; blanks: 1
TOT: 0.8286431523248086; NL: 0.8286431523248086; NL+AG: 0.9394098298452102; NL+QF: 0.8286431523248086; rels: [directed_by]; projs: [count(distinct(tv_series_0.title))]; preds: [director_0.name = "Matt Damon"]; havings: []; superlative: []; blanks: 1
TOT: 0.8286431523248086; NL: 0.8286431523248086; NL+AG: 0.9394098298452102; NL+QF: 0.8286431523248086; rels: [directed_by]; projs: [count(distinct(tv_series_0.title))]; preds: [actor_0.name = "Matt Damon"]; havings: []; superlative: []; blanks: 1
TOT: 0.8286431523248086; NL: 0.8286431523248086; NL+AG: 0.9394098298452102; NL+QF: 0.8286431523248086; rels: [directed_by]; projs: [count(distinct(tv_series_0.title))]; preds: [producer_0.name = "Matt Damon"]; havings: []; superlative: []; blanks: 1
TOT: 0.8286431523248086; NL: 0.8286431523248086; NL+AG: 0.9394098298452102; NL+QF: 0.8286431523248086; rels: [directed_by]; projs: [count(distinct(tv_series_0.title))]; preds: [writer_0.name = "Matt Damon"]; havings: []; superlative: []; blanks: 1

===========
RESULTS
===========
TOT: 0.894661199598153; TR: 0.8979007600118484; QF: 0.23679521445844473; select count(distinct(movie_0.title)) from directed_by as directed_by_0, director as director_0, movie as movie_0 where director_0.name = "Matt Damon" and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid
TOT: 0.8933577870673169; TR: 0.8979007600118484; QF: 0.08620060137457045; select count(distinct(movie_0.title)) from directed_by as directed_by_0, made_by as made_by_0, movie as movie_0, producer as producer_0, tv_series as tv_series_0 where producer_0.name = "Matt Damon" and directed_by_0.msid = movie_0.mid and directed_by_0.msid = tv_series_0.sid and made_by_0.msid = tv_series_0.sid and made_by_0.pid = producer_0.pid
TOT: 0.8933576298086437; TR: 0.8979007600118484; QF: 0.08462801464254953; select count(distinct(movie_0.title)) from cast as cast_0, directed_by as directed_by_0, director as director_0, movie as movie_0, tv_series as tv_series_0 where director_0.name = "Matt Damon" and cast_0.msid = movie_0.mid and cast_0.msid = tv_series_0.sid and directed_by_0.did = director_0.did and directed_by_0.msid = tv_series_0.sid
TOT: 0.8933569537339836; TR: 0.8979007600118484; QF: 0.07786726804123711; select count(distinct(movie_0.title)) from directed_by as directed_by_0, movie as movie_0, tv_series as tv_series_0, writer as writer_0, written_by as written_by_0 where writer_0.name = "Matt Damon" and directed_by_0.msid = movie_0.mid and directed_by_0.msid = tv_series_0.sid and tv_series_0.sid = written_by_0.msid and writer_0.wid = written_by_0.wid
TOT: 0.8933567248775498; TR: 0.8979007600118484; QF: 0.0755787037037037; select count(distinct(movie_0.title)) from copyright as copyright_0, directed_by as directed_by_0, director as director_0, movie as movie_0, tv_series as tv_series_0 where director_0.name = "Matt Damon" and copyright_0.msid = movie_0.mid and copyright_0.msid = tv_series_0.sid and directed_by_0.did = director_0.did and directed_by_0.msid = tv_series_0.sid
TOT: 0.8933566048967743; TR: 0.8979007600118484; QF: 0.07437889594821387; select count(distinct(movie_0.title)) from actor as actor_0, cast as cast_0, directed_by as directed_by_0, movie as movie_0, tv_series as tv_series_0 where actor_0.name = "Matt Damon" and actor_0.aid = cast_0.aid and cast_0.msid = tv_series_0.sid and directed_by_0.msid = movie_0.mid and directed_by_0.msid = tv_series_0.sid
TOT: 0.893355461950662; TR: 0.8979007600118484; QF: 0.06294943482443482; select count(distinct(movie_0.title)) from directed_by as directed_by_0, director as director_0, made_by as made_by_0, movie as movie_0, tv_series as tv_series_0 where director_0.name = "Matt Damon" and directed_by_0.did = director_0.did and directed_by_0.msid = tv_series_0.sid and made_by_0.msid = movie_0.mid and made_by_0.msid = tv_series_0.sid
TOT: 0.8933548783675783; TR: 0.8979007600118484; QF: 0.05711360398860399; select count(distinct(movie_0.title)) from directed_by as directed_by_0, director as director_0, movie as movie_0, tags as tags_0, tv_series as tv_series_0 where director_0.name = "Matt Damon" and directed_by_0.did = director_0.did and directed_by_0.msid = tv_series_0.sid and movie_0.mid = tags_0.msid and tags_0.msid = tv_series_0.sid
TOT: 0.8933547584874585; TR: 0.8979007600118484; QF: 0.055914802789802785; select count(distinct(movie_0.title)) from classification as classification_0, directed_by as directed_by_0, director as director_0, movie as movie_0, tv_series as tv_series_0 where director_0.name = "Matt Damon" and classification_0.msid = movie_0.mid and classification_0.msid = tv_series_0.sid and directed_by_0.did = director_0.did and directed_by_0.msid = tv_series_0.sid
TOT: 0.8933545091368091; TR: 0.8979007600118484; QF: 0.05342129629629629; select count(distinct(movie_0.title)) from directed_by as directed_by_0, director as director_0, movie as movie_0, tv_series as tv_series_0, written_by as written_by_0 where director_0.name = "Matt Damon" and directed_by_0.did = director_0.did and directed_by_0.msid = tv_series_0.sid and movie_0.mid = written_by_0.msid and tv_series_0.sid = written_by_0.msid


11:39  INFO: ================
11:39  INFO: QUERY 51: What are the series in which "Scott Foley" is an actor?
11:39  INFO: ================
11:43  INFO: ================
11:43  INFO: QUERY 110: find the number of actors from Iran who played in "Jim Jarmusch" movies
11:43  INFO: ================
1048. ROOT: ROOT; NA; ; (0) 
1049. find: CMT; NA; ; (0) 
1050. number of: FT; count; ; (0) 
1052. actors: NT; NA; ; (0) actor.name(1.0):| actor(1.0):| movie.title(0.95):Actors; Actors; Actors; | tv_series.title(0.95):Actors; Actor; The Actor Factor; | cast.role(0.95):Actors; Actors; Actors; | keyword.keyword(0.95):actors; actor-director; no-actors; | company.name(0.79):For Actors by Actors; Actors Loft; Actors Pool; | 
1054. Iran: VTTEXT; NA; ; (0) movie.title(1.0):Iran; Iran!; Ei Iran; | director.nationality(1.0):Iran; Iran; Iran; | actor.nationality(1.0):Iran; Iran; Iran; | actor.name(1.0):Iran; Iran Torabi; Iran Daniel; | producer.nationality(1.0):Iran; Iran; Iran; | writer.nationality(1.0):Iran; Iran; Iran; | keyword.keyword(0.77):tehran-iran; shiraz-iran; iraq-iran-war; | 
1056. played: NT; NA; ; (0) tv_series.num_of_seasons(0.67):| cast.role(0.66):| directed_by(0.64):| actor.name(0.63):| actor(0.63):| cast(0.63):| movie.title_aka(0.63):| 
1058. movies: NT; NA; ; (0) movie.title(1.0):| movie(1.0):| cast.role(0.95):Movie; Movie F; Movie AD; | company.name(0.95):Movies; Movie; Movie Movie; | tv_series.title(0.84):Movies, Movies, Movi; Movie Mob; Moon Movies; | keyword.keyword(0.83):movie-in-movie; movies-about-movies; b-movie; | actor.name(0.76):| 
1060. Jim Jarmusch: VTTEXT; NA; ; (0) director.name(1.0):Jim Jarmusch; Jim Jarmusch; Tom Jarmusch; | actor.name(1.0):Jim Jarmusch; Jim Jarmusch; Tom Jarmusch; | producer.name(1.0):Jim Jarmusch; Jim Jarmusch; Tom Jarmusch; | writer.name(1.0):Jim Jarmusch; Jim Jarmusch; James R. Jarmusch; | movie.title(0.81):Behind Jim Jarmusch; Behind Jim Jarmusch; Focus on Jim Jarmusc; | cast.role(0.72):Jim Jarmusch's broth; Jim Jarmusch's broth; Jim Jamush; | tv_series.title(0.52):Earthworm Jim; Earthworm Jim; Jim Jam & Sunny; | 
find, VB
the, DT
number, NN
of, IN
actors, NNS
from, IN
Iran, NNP
who, WP
played, VBN
in, IN
Jim Jarmusch, NNP
movies, NNS
root(ROOT-0, find-1)
det(number-3, the-2)
dobj(find-1, number-3)
case(actors-5, of-4)
nmod(number-3, actors-5)
case(Iran-7, from-6)
nmod(actors-5, Iran-7)
nsubj(played-9, who-8)
acl:relcl(number-3, played-9)
case(movies-12, in-10)
compound(movies-12, Jim Jarmusch-11)
nmod(played-9, movies-12)

PARSE TREE:(1048) ROOT ROOT
    (1049) find CMT
        (1050) number of FT
            (1052) actors NT
                (1054) Iran VTTEXT
            (1056) played NT
                (1058) movies NT
                    (1060) Jim Jarmusch VTTEXT


===========
TRANSLATIONS
===========
TOT: 0.8979007600118484; NL: 0.8979007600118484; NL+AG: 0.9683187862428375; NL+QF: 0.8979007600118484; rels: []; projs: [count(distinct(actor_0.name))]; preds: [movie_0.title = "Iran",movie_0.title = "Behind Jim Jarmusch"]; havings: []; superlative: []; blanks: 1
TOT: 0.8979007600118484; NL: 0.8979007600118484; NL+AG: 0.9683187862428375; NL+QF: 0.8979007600118484; rels: []; projs: [count(distinct(actor_0.name))]; preds: [director_0.nationality = "Iran",movie_0.title = "Behind Jim Jarmusch"]; havings: []; superlative: []; blanks: 1
TOT: 0.8979007600118484; NL: 0.8979007600118484; NL+AG: 0.9683187862428375; NL+QF: 0.8979007600118484; rels: []; projs: [count(distinct(actor_0.name))]; preds: [actor_0.nationality = "Iran",movie_0.title = "Behind Jim Jarmusch"]; havings: []; superlative: []; blanks: 1
TOT: 0.8979007600118484; NL: 0.8979007600118484; NL+AG: 0.9683187862428375; NL+QF: 0.8979007600118484; rels: []; projs: [count(distinct(actor_0.name))]; preds: [actor_0.name = "Iran",movie_0.title = "Behind Jim Jarmusch"]; havings: []; superlative: []; blanks: 1
TOT: 0.8979007600118484; NL: 0.8979007600118484; NL+AG: 0.9683187862428375; NL+QF: 0.8979007600118484; rels: []; projs: [count(distinct(actor_0.name))]; preds: [producer_0.nationality = "Iran",movie_0.title = "Behind Jim Jarmusch"]; havings: []; superlative: []; blanks: 1
TOT: 0.8979007600118484; NL: 0.8979007600118484; NL+AG: 0.9683187862428375; NL+QF: 0.8979007600118484; rels: []; projs: [count(distinct(actor_0.name))]; preds: [writer_0.nationality = "Iran",movie_0.title = "Behind Jim Jarmusch"]; havings: []; superlative: []; blanks: 1
TOT: 0.8871591603836416; NL: 0.8689647470148877; NL+AG: 0.9508731367277395; NL+QF: 0.8871591603836416; rels: []; projs: [count(distinct(movie_0.title))]; preds: [actor_0.name = "Iran",director_0.name = "Jim Jarmusch"]; havings: []; superlative: []; blanks: 2
TOT: 0.884650256050894; NL: 0.8689647470148877; NL+AG: 0.9508731367277395; NL+QF: 0.884650256050894; rels: []; projs: [count(distinct(movie_0.title))]; preds: [actor_0.name = "Iran",actor_0.name = "Jim Jarmusch"]; havings: []; superlative: []; blanks: 2
TOT: 0.8795453275278585; NL: 0.8689647470148877; NL+AG: 0.9508731367277395; NL+QF: 0.8795453275278585; rels: []; projs: [count(distinct(movie_0.title))]; preds: [movie_0.title = "Iran",director_0.name = "Jim Jarmusch"]; havings: []; superlative: []; blanks: 2
TOT: 0.8795453275278585; NL: 0.8689647470148877; NL+AG: 0.9508731367277395; NL+QF: 0.8795453275278585; rels: []; projs: [count(distinct(movie_0.title))]; preds: [director_0.nationality = "Iran",director_0.name = "Jim Jarmusch"]; havings: []; superlative: []; blanks: 2
TOT: 0.8795453275278585; NL: 0.8689647470148877; NL+AG: 0.9508731367277395; NL+QF: 0.8795453275278585; rels: []; projs: [count(distinct(movie_0.title))]; preds: [actor_0.nationality = "Iran",director_0.name = "Jim Jarmusch"]; havings: []; superlative: []; blanks: 2
TOT: 0.8795453275278585; NL: 0.8689647470148877; NL+AG: 0.9508731367277395; NL+QF: 0.8795453275278585; rels: []; projs: [count(distinct(movie_0.title))]; preds: [producer_0.nationality = "Iran",director_0.name = "Jim Jarmusch"]; havings: []; superlative: []; blanks: 2
TOT: 0.8795453275278585; NL: 0.8689647470148877; NL+AG: 0.9508731367277395; NL+QF: 0.8795453275278585; rels: []; projs: [count(distinct(movie_0.title))]; preds: [writer_0.nationality = "Iran",director_0.name = "Jim Jarmusch"]; havings: []; superlative: []; blanks: 2

===========
RESULTS
===========
TOT: 0.8946616587502645; TR: 0.8979007600118484; QF: 0.24138673557278212; select count(distinct(actor_0.name)) from actor as actor_0, cast as cast_0, movie as movie_0 where actor_0.nationality = "Iran" and movie_0.title = "Behind Jim Jarmusch" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid
TOT: 0.8933635124656804; TR: 0.8979007600118484; QF: 0.14345458500936806; select count(distinct(actor_0.name)) from actor as actor_0, cast as cast_0, directed_by as directed_by_0, director as director_0, movie as movie_0 where director_0.nationality = "Iran" and movie_0.title = "Behind Jim Jarmusch" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid
TOT: 0.8933619280897661; TR: 0.8979007600118484; QF: 0.12761082586663983; select count(distinct(actor_0.name)) from actor as actor_0, cast as cast_0, made_by as made_by_0, movie as movie_0, producer as producer_0 where movie_0.title = "Behind Jim Jarmusch" and producer_0.nationality = "Iran" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid
TOT: 0.8933618086092466; TR: 0.8979007600118484; QF: 0.12641602067183463; select count(distinct(actor_0.name)) from actor as actor_0, cast as cast_0, movie as movie_0, writer as writer_0, written_by as written_by_0 where movie_0.title = "Behind Jim Jarmusch" and writer_0.nationality = "Iran" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and movie_0.mid = written_by_0.msid and writer_0.wid = written_by_0.wid
TOT: 0.8933618086092466; TR: 0.8979007600118484; QF: 0.12641602067183463; select count(distinct(actor_0.name)) from actor as actor_0, actor as actor_1, cast as cast_0, cast as cast_1, movie as movie_0 where actor_1.name = "Iran" and movie_0.title = "Behind Jim Jarmusch" and actor_0.aid = cast_0.aid and actor_1.aid = cast_1.aid and cast_0.msid = movie_0.mid and cast_1.msid = movie_0.mid
TOT: 0.8933569746469825; TR: 0.8979007600118484; QF: 0.0780763980303252; select count(distinct(actor_0.name)) from actor as actor_0, cast as cast_0, cast as cast_1, movie as movie_0, movie as movie_1 where movie_0.title = "Iran" and movie_1.title = "Behind Jim Jarmusch" and actor_0.aid = cast_0.aid and actor_0.aid = cast_1.aid and cast_0.msid = movie_0.mid and cast_1.msid = movie_1.mid
TOT: 0.8933566048967743; TR: 0.8979007600118484; QF: 0.07437889594821387; select count(distinct(actor_0.name)) from actor as actor_0, cast as cast_0, directed_by as directed_by_0, movie as movie_0, tv_series as tv_series_0 where actor_0.nationality = "Iran" and movie_0.title = "Behind Jim Jarmusch" and actor_0.aid = cast_0.aid and cast_0.msid = tv_series_0.sid and directed_by_0.msid = movie_0.mid and directed_by_0.msid = tv_series_0.sid
TOT: 0.893356433910711; TR: 0.8979007600118484; QF: 0.07266903531438415; select count(distinct(actor_0.name)) from actor as actor_0, cast as cast_0, copyright as copyright_0, movie as movie_0, tv_series as tv_series_0 where actor_0.nationality = "Iran" and movie_0.title = "Behind Jim Jarmusch" and actor_0.aid = cast_0.aid and cast_0.msid = tv_series_0.sid and copyright_0.msid = movie_0.mid and copyright_0.msid = tv_series_0.sid
TOT: 0.893355170983823; TR: 0.8979007600118484; QF: 0.06003976643511527; select count(distinct(actor_0.name)) from actor as actor_0, cast as cast_0, made_by as made_by_0, movie as movie_0, tv_series as tv_series_0 where actor_0.nationality = "Iran" and movie_0.title = "Behind Jim Jarmusch" and actor_0.aid = cast_0.aid and cast_0.msid = tv_series_0.sid and made_by_0.msid = movie_0.mid and made_by_0.msid = tv_series_0.sid
TOT: 0.8933545874007394; TR: 0.8979007600118484; QF: 0.054203935599284436; select count(distinct(actor_0.name)) from actor as actor_0, cast as cast_0, movie as movie_0, tags as tags_0, tv_series as tv_series_0 where actor_0.nationality = "Iran" and movie_0.title = "Behind Jim Jarmusch" and actor_0.aid = cast_0.aid and cast_0.msid = tv_series_0.sid and movie_0.mid = tags_0.msid and tags_0.msid = tv_series_0.sid


11:51  INFO: ================
11:51  INFO: QUERY 37: Find all movies produced by "Walt Disney" after 2010
11:51  INFO: ================
1062. ROOT: ROOT; NA; ; (0) 
1063. Find: CMT; NA; ; (0) 
1064. movies: NT; NA; all; (0) movie.title(1.0):| movie(1.0):| cast.role(0.95):Movie; Movie F; Movie AD; | company.name(0.95):Movies; Movie; Movie Movie; | tv_series.title(0.84):Movies, Movies, Movi; Movie Mob; Moon Movies; | keyword.keyword(0.83):movie-in-movie; movies-about-movies; b-movie; | actor.name(0.76):| 
1066. produced: NT; NA; ; (0) made_by(0.74):| directed_by(0.69):| producer.name(0.68):| producer(0.68):| cast.role(0.63):| cast(0.63):| written_by(0.63):| 
1067. Walt Disney: VTTEXT; NA; ; (0) director.name(1.0):Walt Disney; Walt Disney; Walter Elias Disney; | actor.name(1.0):Walt Disney; Walt Disney; Walter Disney; | producer.name(1.0):Walt Disney; Walt Disney; Walter Disney; | company.name(1.0):Walt Disney; Walt Disney; Walt Disney; | writer.name(1.0):Walt Disney; Walt Disney; The Dutch Walt Disne; | cast.role(0.85):Adult Walt Disney; Adult Walt Disney; Adult Walt Disney; | movie.title(0.81):Walt Disney Is Dead; Walt Disney Is Dead; Praça Walt Disney; | 
1069. 2010: VTNUM; NA; ; (0) movie.release_year(1.0):2012; 2014; 2015; | tv_series.release_year(1.0):2014; 2014; 2013; | actor.birth_year(1.0):2011; 2013; 2013; | 
1070. after: OT; >; ; (0) 
Find, VB
all, DT
movies, NNS
produced, VBN
by, IN
Walt Disney, NNP
after, IN
2010, CD
root(ROOT-0, Find-1)
det(movies-3, all-2)
dobj(Find-1, movies-3)
acl(movies-3, produced-4)
case(Walt Disney-6, by-5)
nmod(produced-4, Walt Disney-6)
case(2010-8, after-7)
nmod(produced-4, 2010-8)

PARSE TREE:(1062) ROOT ROOT
    (1063) Find CMT
        (1064) movies NT
            (1066) produced NT
                (1067) Walt Disney VTTEXT
                (1069) 2010 VTNUM
                    (1070) after OT


===========
TRANSLATIONS
===========
TOT: 0.8979007600118484; NL: 0.8979007600118484; NL+AG: 0.9686596782136829; NL+QF: 0.8979007600118484; rels: []; projs: [movie_0.title]; preds: [director_0.name = "Walt Disney",movie_0.release_year > 2010]; havings: []; superlative: []; blanks: 1
TOT: 0.8979007600118484; NL: 0.8979007600118484; NL+AG: 0.9686596782136829; NL+QF: 0.8979007600118484; rels: []; projs: [movie_0.title]; preds: [director_0.name = "Walt Disney",tv_series_0.release_year > 2010]; havings: []; superlative: []; blanks: 1
TOT: 0.8979007600118484; NL: 0.8979007600118484; NL+AG: 0.9686596782136829; NL+QF: 0.8979007600118484; rels: []; projs: [movie_0.title]; preds: [director_0.name = "Walt Disney",actor_0.birth_year > 2010]; havings: []; superlative: []; blanks: 1
TOT: 0.8979007600118484; NL: 0.8979007600118484; NL+AG: 0.9686596782136829; NL+QF: 0.8979007600118484; rels: []; projs: [movie_0.title]; preds: [actor_0.name = "Walt Disney",movie_0.release_year > 2010]; havings: []; superlative: []; blanks: 1
TOT: 0.8979007600118484; NL: 0.8979007600118484; NL+AG: 0.9686596782136829; NL+QF: 0.8979007600118484; rels: []; projs: [movie_0.title]; preds: [actor_0.name = "Walt Disney",tv_series_0.release_year > 2010]; havings: []; superlative: []; blanks: 1
TOT: 0.8979007600118484; NL: 0.8979007600118484; NL+AG: 0.9686596782136829; NL+QF: 0.8979007600118484; rels: []; projs: [movie_0.title]; preds: [actor_0.name = "Walt Disney",actor_0.birth_year > 2010]; havings: []; superlative: []; blanks: 1
TOT: 0.8979007600118484; NL: 0.8979007600118484; NL+AG: 0.9686596782136829; NL+QF: 0.8979007600118484; rels: []; projs: [movie_0.title]; preds: [producer_0.name = "Walt Disney",movie_0.release_year > 2010]; havings: []; superlative: []; blanks: 1
TOT: 0.8979007600118484; NL: 0.8979007600118484; NL+AG: 0.9686596782136829; NL+QF: 0.8979007600118484; rels: []; projs: [movie_0.title]; preds: [producer_0.name = "Walt Disney",tv_series_0.release_year > 2010]; havings: []; superlative: []; blanks: 1
TOT: 0.8979007600118484; NL: 0.8979007600118484; NL+AG: 0.9686596782136829; NL+QF: 0.8979007600118484; rels: []; projs: [movie_0.title]; preds: [producer_0.name = "Walt Disney",actor_0.birth_year > 2010]; havings: []; superlative: []; blanks: 1
TOT: 0.8979007600118484; NL: 0.8979007600118484; NL+AG: 0.9686596782136829; NL+QF: 0.8979007600118484; rels: []; projs: [movie_0.title]; preds: [company_0.name = "Walt Disney",movie_0.release_year > 2010]; havings: []; superlative: []; blanks: 1
TOT: 0.8979007600118484; NL: 0.8979007600118484; NL+AG: 0.9686596782136829; NL+QF: 0.8979007600118484; rels: []; projs: [movie_0.title]; preds: [company_0.name = "Walt Disney",tv_series_0.release_year > 2010]; havings: []; superlative: []; blanks: 1
TOT: 0.8979007600118484; NL: 0.8979007600118484; NL+AG: 0.9686596782136829; NL+QF: 0.8979007600118484; rels: []; projs: [movie_0.title]; preds: [company_0.name = "Walt Disney",actor_0.birth_year > 2010]; havings: []; superlative: []; blanks: 1
TOT: 0.8979007600118484; NL: 0.8979007600118484; NL+AG: 0.9686596782136829; NL+QF: 0.8979007600118484; rels: []; projs: [movie_0.title]; preds: [writer_0.name = "Walt Disney",movie_0.release_year > 2010]; havings: []; superlative: []; blanks: 1
TOT: 0.8979007600118484; NL: 0.8979007600118484; NL+AG: 0.9686596782136829; NL+QF: 0.8979007600118484; rels: []; projs: [movie_0.title]; preds: [writer_0.name = "Walt Disney",tv_series_0.release_year > 2010]; havings: []; superlative: []; blanks: 1
TOT: 0.8979007600118484; NL: 0.8979007600118484; NL+AG: 0.9686596782136829; NL+QF: 0.8979007600118484; rels: []; projs: [movie_0.title]; preds: [writer_0.name = "Walt Disney",actor_0.birth_year > 2010]; havings: []; superlative: []; blanks: 1

===========
RESULTS
===========
TOT: 0.8946616587502645; TR: 0.8979007600118484; QF: 0.24138673557278212; select movie_0.title from actor as actor_0, cast as cast_0, movie as movie_0 where actor_0.name = "Walt Disney" and movie_0.release_year > 2010 and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid
TOT: 0.8946616587502645; TR: 0.8979007600118484; QF: 0.24138673557278212; select movie_0.title from actor as actor_0, cast as cast_0, movie as movie_0 where actor_0.birth_year > 2010 and actor_0.name = "Walt Disney" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid
TOT: 0.894661199598153; TR: 0.8979007600118484; QF: 0.23679521445844473; select movie_0.title from directed_by as directed_by_0, director as director_0, movie as movie_0 where director_0.name = "Walt Disney" and movie_0.release_year > 2010 and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid
TOT: 0.8946566558791763; TR: 0.8979007600118484; QF: 0.19135802469135801; select movie_0.title from company as company_0, copyright as copyright_0, movie as movie_0 where company_0.name = "Walt Disney" and movie_0.release_year > 2010 and company_0.id = copyright_0.cid and copyright_0.msid = movie_0.mid
TOT: 0.8946559183451055; TR: 0.8979007600118484; QF: 0.183982683982684; select movie_0.title from made_by as made_by_0, movie as movie_0, producer as producer_0 where movie_0.release_year > 2010 and producer_0.name = "Walt Disney" and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid
TOT: 0.8946555200767071; TR: 0.8979007600118484; QF: 0.18000000000000002; select movie_0.title from movie as movie_0, writer as writer_0, written_by as written_by_0 where movie_0.release_year > 2010 and writer_0.name = "Walt Disney" and movie_0.mid = written_by_0.msid and writer_0.wid = written_by_0.wid
TOT: 0.8938845969423069; TR: 0.8979007600118484; QF: 0.12844530577088717; select movie_0.title from actor as actor_0, cast as cast_0, movie as movie_0, tv_series as tv_series_0 where actor_0.name = "Walt Disney" and tv_series_0.release_year > 2010 and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and cast_0.msid = tv_series_0.sid
TOT: 0.8938844453129644; TR: 0.8979007600118484; QF: 0.12692901234567902; select movie_0.title from company as company_0, copyright as copyright_0, movie as movie_0, tv_series as tv_series_0 where company_0.name = "Walt Disney" and tv_series_0.release_year > 2010 and company_0.id = copyright_0.cid and copyright_0.msid = movie_0.mid and copyright_0.msid = tv_series_0.sid
TOT: 0.8938841130057862; TR: 0.8979007600118484; QF: 0.1236059405625557; select movie_0.title from directed_by as directed_by_0, director as director_0, movie as movie_0, tv_series as tv_series_0 where director_0.name = "Walt Disney" and tv_series_0.release_year > 2010 and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and directed_by_0.msid = tv_series_0.sid
TOT: 0.893882340434818; TR: 0.8979007600118484; QF: 0.1058802308802309; select movie_0.title from made_by as made_by_0, movie as movie_0, producer as producer_0, tv_series as tv_series_0 where producer_0.name = "Walt Disney" and tv_series_0.release_year > 2010 and made_by_0.msid = movie_0.mid and made_by_0.msid = tv_series_0.sid and made_by_0.pid = producer_0.pid


11:55  INFO: ================
11:55  INFO: QUERY 81: Which movie had the character "Daffy Duck"
11:55  INFO: ================
1072. ROOT: ROOT; NA; ; (0) 
1074. movie: NT; NA; ; (0) movie.title(1.0):| movie(1.0):| cast.role(0.95):Movie; Movie F; Movie AD; | company.name(0.95):Movie; Movies; Movie Movie; | keyword.keyword(0.83):movie-in-movie; b-movie; z-movie; | actor.name(0.76):| actor(0.76):| 
1075. Which: CMT; NA; ; (0) 
1076. Daffy Duck: VTTEXT; NA; ; (0) cast.role(1.0):Daffy Duck; Daffy Duck; Daffy Duck; | movie.title(0.8):Daffy Duck Hunt; Daffy Duck Hunt; The Daffy Duckaroo; | director.name(0.78):Deafy Duck; Duck; Tim Duck; | producer.name(0.78):Deafy Duck; Duck; Duck; | writer.name(0.78):Deafy Duck; Duck; Tuck the Duck; | tv_series.title(0.75):The Daffy Duck Show; The Daffy Duck Show; Mighty Ducks; | actor.name(0.59):Joey Duck; Baby Duck; Daffy O'Brick; | 
1078. character: VTTEXT; NA; ; (0) movie.title(0.95):Character; Character; Character; | tv_series.title(0.95):Character; Character; The Characters; | cast.role(0.95):Character; Character; Character; | company.name(0.85):Character 7; Character Matters; Character Tank; | keyword.keyword(0.81):character-arc; literary-character; character-actor; | actor.name(0.78):| actor(0.78):| 
Which, WDT
movie, NN
had, VBD
the, DT
character, NN
Daffy Duck, NN
det(movie-2, Which-1)
nsubj(had-3, movie-2)
root(ROOT-0, had-3)
det(Daffy Duck-6, the-4)
compound(Daffy Duck-6, character-5)
dobj(had-3, Daffy Duck-6)

PARSE TREE:(1072) ROOT ROOT
    (1075) Which CMT
        (1074) movie NT
            (1076) Daffy Duck VTTEXT
                (1078) character VTTEXT


===========
TRANSLATIONS
===========
TOT: 0.8790472375566201; NL: 0.84126862115985; NL+AG: 0.939080334171806; NL+QF: 0.8790472375566201; rels: []; projs: [actor_0.name]; preds: [cast_0.role = "Daffy Duck"]; havings: []; superlative: []; blanks: 1
TOT: 0.8662391053409028; NL: 0.8662391053409028; NL+AG: 0.9626264316569841; NL+QF: 0.8662391053409028; rels: []; projs: [movie_0.title]; preds: [cast_0.role = "Daffy Duck"]; havings: []; superlative: []; blanks: 1
TOT: 0.8285026065603092; NL: 0.7802453753539424; NL+AG: 0.9788797416050014; NL+QF: 0.8285026065603092; rels: []; projs: [movie_0.title]; preds: [cast_0.role = "Daffy Duck",movie_0.title = "Character"]; havings: []; superlative: []; blanks: 0
TOT: 0.8272216780551298; NL: 0.6573229797118848; NL+AG: 0.9392573685336284; NL+QF: 0.8272216780551298; rels: [movie]; projs: [movie_0.title]; preds: [movie_0.title = "Daffy Duck Hunt"]; havings: []; superlative: []; blanks: 0
TOT: 0.8268266250158401; NL: 0.7912922821972069; NL+AG: 0.939080334171806; NL+QF: 0.8268266250158401; rels: []; projs: [actor_0.name]; preds: [cast_0.role = "Daffy Duck"]; havings: []; superlative: []; blanks: 1
TOT: 0.8243301190555186; NL: 0.7815446045368232; NL+AG: 0.9157112710484503; NL+QF: 0.8243301190555186; rels: []; projs: [actor_0.name]; preds: [movie_0.title = "Daffy Duck Hunt"]; havings: []; superlative: []; blanks: 1
TOT: 0.8205588163723728; NL: 0.6978163242785356; NL+AG: 0.9626264316569841; NL+QF: 0.8205588163723728; rels: [cast]; projs: [movie_0.title]; preds: [cast_0.role = "Daffy Duck"]; havings: []; superlative: []; blanks: 0
TOT: 0.8185649530142607; NL: 0.7075542375813906; NL+AG: 0.9626264316569841; NL+QF: 0.8185649530142607; rels: [movie]; projs: [movie_0.title]; preds: [cast_0.role = "Daffy Duck"]; havings: []; superlative: []; blanks: 0
TOT: 0.8173683888832901; NL: 0.7722196592760566; NL+AG: 0.9182152483953397; NL+QF: 0.8173683888832901; rels: [movie]; projs: [movie_0.title]; preds: []; havings: []; superlative: []; blanks: 1
TOT: 0.8147240789277612; NL: 0.7127387114377188; NL+AG: 0.9691278537948612; NL+QF: 0.8147240789277612; rels: []; projs: [actor_0.name]; preds: [cast_0.role = "Daffy Duck",movie_0.title = "Character"]; havings: []; superlative: []; blanks: 0
TOT: 0.8132173957703386; NL: 0.6374414043285693; NL+AG: 0.939080334171806; NL+QF: 0.8132173957703386; rels: [cast]; projs: [actor_0.name]; preds: [cast_0.role = "Daffy Duck"]; havings: []; superlative: []; blanks: 0

===========
RESULTS
===========
TOT: 0.877298982779917; TR: 0.8790472375566201; QF: 0.4186046511627907; select actor_0.name from actor as actor_0, cast as cast_0 where cast_0.role = "Daffy Duck" and actor_0.aid = cast_0.aid
TOT: 0.864607626976796; TR: 0.8662391053409028; QF: 0.3055555555555556; select movie_0.title from cast as cast_0, movie as movie_0 where cast_0.role = "Daffy Duck" and cast_0.msid = movie_0.mid
TOT: 0.8625321340259657; TR: 0.8662391053409028; QF: 0.05419738471989131; select movie_0.title from cast as cast_0, directed_by as directed_by_0, movie as movie_0, tv_series as tv_series_0 where cast_0.role = "Daffy Duck" and cast_0.msid = tv_series_0.sid and directed_by_0.msid = movie_0.mid and directed_by_0.msid = tv_series_0.sid
TOT: 0.8625318490491934; TR: 0.8662391053409028; QF: 0.051347616996841795; select movie_0.title from cast as cast_0, copyright as copyright_0, movie as movie_0, tv_series as tv_series_0 where cast_0.role = "Daffy Duck" and cast_0.msid = tv_series_0.sid and copyright_0.msid = movie_0.mid and copyright_0.msid = tv_series_0.sid
TOT: 0.8625297441710469; TR: 0.8662391053409028; QF: 0.030298835531393672; select movie_0.title from cast as cast_0, made_by as made_by_0, movie as movie_0, tv_series as tv_series_0 where cast_0.role = "Daffy Duck" and cast_0.msid = tv_series_0.sid and made_by_0.msid = movie_0.mid and made_by_0.msid = tv_series_0.sid
TOT: 0.8625287715325742; TR: 0.8662391053409028; QF: 0.020572450805008944; select movie_0.title from cast as cast_0, movie as movie_0, tags as tags_0, tv_series as tv_series_0 where cast_0.role = "Daffy Duck" and cast_0.msid = tv_series_0.sid and movie_0.mid = tags_0.msid and tags_0.msid = tv_series_0.sid
TOT: 0.8625285717323744; TR: 0.8662391053409028; QF: 0.018574448807006944; select movie_0.title from cast as cast_0, classification as classification_0, movie as movie_0, tv_series as tv_series_0 where cast_0.role = "Daffy Duck" and cast_0.msid = tv_series_0.sid and classification_0.msid = movie_0.mid and classification_0.msid = tv_series_0.sid
TOT: 0.8625281561479589; TR: 0.8662391053409028; QF: 0.014418604651162792; select movie_0.title from cast as cast_0, movie as movie_0, tv_series as tv_series_0, written_by as written_by_0 where cast_0.role = "Daffy Duck" and cast_0.msid = tv_series_0.sid and movie_0.mid = written_by_0.msid and tv_series_0.sid = written_by_0.msid
TOT: 0.8616236405671167; TR: 0.8662391053409028; QF: 0.052682040307709614; select movie_0.title from cast as cast_0, directed_by as directed_by_0, directed_by as directed_by_1, director as director_0, movie as movie_0, tv_series as tv_series_0 where cast_0.role = "Daffy Duck" and cast_0.msid = tv_series_0.sid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and directed_by_1.did = director_0.did and directed_by_1.msid = tv_series_0.sid
TOT: 0.8616225285944515; TR: 0.8662391053409028; QF: 0.041562313655336906; select movie_0.title from cast as cast_0, keyword as keyword_0, movie as movie_0, tags as tags_0, tags as tags_1, tv_series as tv_series_0 where cast_0.role = "Daffy Duck" and cast_0.msid = tv_series_0.sid and keyword_0.id = tags_0.kid and keyword_0.id = tags_1.kid and movie_0.mid = tags_0.msid and tags_1.msid = tv_series_0.sid


12:00  INFO: ================
12:00  INFO: QUERY 118: Find all movies featuring both "Matt Damon" and "Ben Affleck"
12:00  INFO: ================
1080. ROOT: ROOT; NA; ; (0) 
1081. Find: CMT; NA; ; (0) 
1082. featuring: NT; NA; ; (0) tv_series.title(0.69):| tv_series(0.69):| movie.release_year(0.64):| tv_series.release_year(0.64):| made_by(0.64):| movie.title_aka(0.62):| tv_series.title_aka(0.62):| 
1083. movies: NT; NA; all; (0) movie.title(1.0):| movie(1.0):| cast.role(0.95):Movie; Movie F; Movie AD; | company.name(0.95):Movies; Movie; Movie Movie; | tv_series.title(0.84):Movies, Movies, Movi; Movie Mob; Moon Movies; | keyword.keyword(0.83):movie-in-movie; movies-about-movies; b-movie; | actor.name(0.76):| 
1085. Matt Damon: VTTEXT; NA; ; (0) director.name(1.0):Matt Damon; Matt Diamond; Matt Diamond; | actor.name(1.0):Matt Damon; Matt Damon; Matt Diamond; | producer.name(1.0):Matt Damon; Matt Damon; Matt Diamond; | writer.name(1.0):Matt Damon; Matt Damon; Matt Diamond; | movie.title(0.76):I'm Not Matt Damon; I'm Not Matt Damon; Meeting Matt Damon; | cast.role(0.74):Matt Stamon; Matt Damien; Matt Demond; | tv_series.title(0.67):Damon; The Damon Elliott Sh; Matt Houston; | 
1088. Ben Affleck: VTTEXT; NA; ; (0) director.name(1.0):Ben Affleck; Ben Affleck; Affleck; | actor.name(1.0):Ben Affleck; Ben Affleck; Affleck; | producer.name(1.0):Ben Affleck; Ben Affleck; Affleck; | writer.name(1.0):Ben Affleck; Ben Affleck; Affleck; | cast.role(0.9):Ben Afflect; Ben Afflect; Ben Affleck Fan; | movie.title(0.59):Untitled Ben Affleck; Untitled Ben Affleck; Argo: Ben Affleck's ; | company.name(0.56):The Affleck/Middleto; Ben Fechler; Ben Fechler; | 
Find, VB
all, DT
movies, NNS
featuring, VBG
both, CC
Matt Damon, NNP
and, CC
Ben Affleck, NNP
root(ROOT-0, Find-1)
det(movies-3, all-2)
nsubj(featuring-4, movies-3)
dep(Find-1, featuring-4)
cc:preconj(Matt Damon-6, both-5)
dobj(featuring-4, Matt Damon-6)
cc(Matt Damon-6, and-7)
conj(Matt Damon-6, Ben Affleck-8)

PARSE TREE:(1080) ROOT ROOT
    (1081) Find CMT
        (1083) movies NT
            (1082) featuring NT
                (1085) Matt Damon VTTEXT
                (1088) Ben Affleck VTTEXT


===========
TRANSLATIONS
===========
TOT: 0.8979007600118484; NL: 0.8979007600118484; NL+AG: 0.9684566970029178; NL+QF: 0.8979007600118484; rels: []; projs: [movie_0.title]; preds: [director_0.name = "Matt Damon",director_0.name = "Ben Affleck"]; havings: []; superlative: []; blanks: 1
TOT: 0.8979007600118484; NL: 0.8979007600118484; NL+AG: 0.9684566970029178; NL+QF: 0.8979007600118484; rels: []; projs: [movie_0.title]; preds: [director_0.name = "Matt Damon",actor_0.name = "Ben Affleck"]; havings: []; superlative: []; blanks: 1
TOT: 0.8979007600118484; NL: 0.8979007600118484; NL+AG: 0.9684566970029178; NL+QF: 0.8979007600118484; rels: []; projs: [movie_0.title]; preds: [director_0.name = "Matt Damon",producer_0.name = "Ben Affleck"]; havings: []; superlative: []; blanks: 1
TOT: 0.8979007600118484; NL: 0.8979007600118484; NL+AG: 0.9684566970029178; NL+QF: 0.8979007600118484; rels: []; projs: [movie_0.title]; preds: [director_0.name = "Matt Damon",writer_0.name = "Ben Affleck"]; havings: []; superlative: []; blanks: 1
TOT: 0.8979007600118484; NL: 0.8979007600118484; NL+AG: 0.9684566970029178; NL+QF: 0.8979007600118484; rels: []; projs: [movie_0.title]; preds: [actor_0.name = "Matt Damon",director_0.name = "Ben Affleck"]; havings: []; superlative: []; blanks: 1
TOT: 0.8979007600118484; NL: 0.8979007600118484; NL+AG: 0.9684566970029178; NL+QF: 0.8979007600118484; rels: []; projs: [movie_0.title]; preds: [actor_0.name = "Matt Damon",actor_0.name = "Ben Affleck"]; havings: []; superlative: []; blanks: 1
TOT: 0.8979007600118484; NL: 0.8979007600118484; NL+AG: 0.9684566970029178; NL+QF: 0.8979007600118484; rels: []; projs: [movie_0.title]; preds: [actor_0.name = "Matt Damon",producer_0.name = "Ben Affleck"]; havings: []; superlative: []; blanks: 1
TOT: 0.8979007600118484; NL: 0.8979007600118484; NL+AG: 0.9684566970029178; NL+QF: 0.8979007600118484; rels: []; projs: [movie_0.title]; preds: [actor_0.name = "Matt Damon",writer_0.name = "Ben Affleck"]; havings: []; superlative: []; blanks: 1
TOT: 0.8979007600118484; NL: 0.8979007600118484; NL+AG: 0.9684566970029178; NL+QF: 0.8979007600118484; rels: []; projs: [movie_0.title]; preds: [producer_0.name = "Matt Damon",director_0.name = "Ben Affleck"]; havings: []; superlative: []; blanks: 1
TOT: 0.8979007600118484; NL: 0.8979007600118484; NL+AG: 0.9684566970029178; NL+QF: 0.8979007600118484; rels: []; projs: [movie_0.title]; preds: [producer_0.name = "Matt Damon",actor_0.name = "Ben Affleck"]; havings: []; superlative: []; blanks: 1
TOT: 0.8979007600118484; NL: 0.8979007600118484; NL+AG: 0.9684566970029178; NL+QF: 0.8979007600118484; rels: []; projs: [movie_0.title]; preds: [producer_0.name = "Matt Damon",producer_0.name = "Ben Affleck"]; havings: []; superlative: []; blanks: 1
TOT: 0.8979007600118484; NL: 0.8979007600118484; NL+AG: 0.9684566970029178; NL+QF: 0.8979007600118484; rels: []; projs: [movie_0.title]; preds: [producer_0.name = "Matt Damon",writer_0.name = "Ben Affleck"]; havings: []; superlative: []; blanks: 1
TOT: 0.8979007600118484; NL: 0.8979007600118484; NL+AG: 0.9684566970029178; NL+QF: 0.8979007600118484; rels: []; projs: [movie_0.title]; preds: [writer_0.name = "Matt Damon",director_0.name = "Ben Affleck"]; havings: []; superlative: []; blanks: 1
TOT: 0.8979007600118484; NL: 0.8979007600118484; NL+AG: 0.9684566970029178; NL+QF: 0.8979007600118484; rels: []; projs: [movie_0.title]; preds: [writer_0.name = "Matt Damon",actor_0.name = "Ben Affleck"]; havings: []; superlative: []; blanks: 1
TOT: 0.8979007600118484; NL: 0.8979007600118484; NL+AG: 0.9684566970029178; NL+QF: 0.8979007600118484; rels: []; projs: [movie_0.title]; preds: [writer_0.name = "Matt Damon",producer_0.name = "Ben Affleck"]; havings: []; superlative: []; blanks: 1
TOT: 0.8979007600118484; NL: 0.8979007600118484; NL+AG: 0.9684566970029178; NL+QF: 0.8979007600118484; rels: []; projs: [movie_0.title]; preds: [writer_0.name = "Matt Damon",writer_0.name = "Ben Affleck"]; havings: []; superlative: []; blanks: 1

===========
RESULTS
===========
TOT: 0.8933635124656804; TR: 0.8979007600118484; QF: 0.14345458500936806; select movie_0.title from actor as actor_0, cast as cast_0, directed_by as directed_by_0, director as director_0, movie as movie_0 where actor_0.name = "Ben Affleck" and director_0.name = "Matt Damon" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid
TOT: 0.8933635124656804; TR: 0.8979007600118484; QF: 0.14345458500936806; select movie_0.title from actor as actor_0, cast as cast_0, directed_by as directed_by_0, director as director_0, movie as movie_0 where actor_0.name = "Matt Damon" and director_0.name = "Ben Affleck" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid
TOT: 0.8933619280897661; TR: 0.8979007600118484; QF: 0.12761082586663983; select movie_0.title from actor as actor_0, cast as cast_0, made_by as made_by_0, movie as movie_0, producer as producer_0 where actor_0.name = "Matt Damon" and producer_0.name = "Ben Affleck" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid
TOT: 0.8933619280897661; TR: 0.8979007600118484; QF: 0.12761082586663983; select movie_0.title from actor as actor_0, cast as cast_0, made_by as made_by_0, movie as movie_0, producer as producer_0 where actor_0.name = "Ben Affleck" and producer_0.name = "Matt Damon" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid
TOT: 0.8933618086092466; TR: 0.8979007600118484; QF: 0.12641602067183463; select movie_0.title from actor as actor_0, cast as cast_0, movie as movie_0, writer as writer_0, written_by as written_by_0 where actor_0.name = "Matt Damon" and writer_0.name = "Ben Affleck" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and movie_0.mid = written_by_0.msid and writer_0.wid = written_by_0.wid
TOT: 0.8933618086092466; TR: 0.8979007600118484; QF: 0.12641602067183463; select movie_0.title from actor as actor_0, cast as cast_0, movie as movie_0, writer as writer_0, written_by as written_by_0 where actor_0.name = "Ben Affleck" and writer_0.name = "Matt Damon" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and movie_0.mid = written_by_0.msid and writer_0.wid = written_by_0.wid
TOT: 0.8933618086092466; TR: 0.8979007600118484; QF: 0.12641602067183463; select movie_0.title from actor as actor_0, actor as actor_1, cast as cast_0, cast as cast_1, movie as movie_0 where actor_0.name = "Matt Damon" and actor_1.name = "Ben Affleck" and actor_0.aid = cast_0.aid and actor_1.aid = cast_1.aid and cast_0.msid = movie_0.mid and cast_1.msid = movie_0.mid
TOT: 0.8933617903441327; TR: 0.8979007600118484; QF: 0.1262333695323386; select movie_0.title from directed_by as directed_by_0, director as director_0, made_by as made_by_0, movie as movie_0, producer as producer_0 where director_0.name = "Matt Damon" and producer_0.name = "Ben Affleck" and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid
TOT: 0.8933617903441327; TR: 0.8979007600118484; QF: 0.1262333695323386; select movie_0.title from directed_by as directed_by_0, director as director_0, made_by as made_by_0, movie as movie_0, producer as producer_0 where director_0.name = "Ben Affleck" and producer_0.name = "Matt Damon" and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid
TOT: 0.8933616708636132; TR: 0.8979007600118484; QF: 0.1250385643375334; select movie_0.title from directed_by as directed_by_0, director as director_0, movie as movie_0, writer as writer_0, written_by as written_by_0 where director_0.name = "Matt Damon" and writer_0.name = "Ben Affleck" and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and movie_0.mid = written_by_0.msid and writer_0.wid = written_by_0.wid


12:06  INFO: ================
12:06  INFO: QUERY 73: Find the actors who played in the movie "Camp X-Ray"
12:06  INFO: ================
12:10  INFO: ================
12:10  INFO: QUERY 54: Find all movies produced by Netflix
12:10  INFO: ================
1101. ROOT: ROOT; NA; ; (0) 
1102. Find: CMT; NA; ; (0) 
1103. movies: NT; NA; all; (0) movie.title(1.0):| movie(1.0):| cast.role(0.95):Movie; Movie F; Movie AD; | company.name(0.95):Movies; Movie; Movie Movie; | tv_series.title(0.84):Movies, Movies, Movi; Movie Mob; Moon Movies; | keyword.keyword(0.83):movie-in-movie; movies-about-movies; b-movie; | actor.name(0.76):| 
1105. produced: NT; NA; ; (0) made_by(0.74):| directed_by(0.69):| producer.name(0.68):| producer(0.68):| cast.role(0.63):| cast(0.63):| written_by(0.63):| 
1106. Netflix: VTTEXT; NA; ; (0) company.name(1.0):Netflix; Netflix; Netflix; | keyword.keyword(1.0):netflix; netflix-series; netflix-production; | tv_series.title(0.78):| tv_series(0.78):| cast.role(0.77):Netflix guy; | movie.title(0.74):| movie(0.74):| 
Find, VB
all, DT
movies, NNS
produced, VBN
by, IN
Netflix, NNP
root(ROOT-0, Find-1)
det(movies-3, all-2)
dobj(Find-1, movies-3)
acl(movies-3, produced-4)
case(Netflix-6, by-5)
nmod(produced-4, Netflix-6)

PARSE TREE:(1101) ROOT ROOT
    (1102) Find CMT
        (1103) movies NT
            (1105) produced NT
                (1106) Netflix VTTEXT


===========
TRANSLATIONS
===========
TOT: 0.8662391053409028; NL: 0.8662391053409028; NL+AG: 0.9626264316569841; NL+QF: 0.8662391053409028; rels: []; projs: [movie_0.title]; preds: [company_0.name = "Netflix"]; havings: []; superlative: []; blanks: 1
TOT: 0.8662391053409028; NL: 0.8662391053409028; NL+AG: 0.9626264316569841; NL+QF: 0.8662391053409028; rels: []; projs: [movie_0.title]; preds: [keyword_0.keyword = "netflix"]; havings: []; superlative: []; blanks: 1
TOT: 0.8008283722905569; NL: 0.7955417822520919; NL+AG: 0.9390470729890059; NL+QF: 0.8008283722905569; rels: []; projs: [movie_0.title]; preds: [cast_0.role = "Netflix guy"]; havings: []; superlative: []; blanks: 1
TOT: 0.7912922821972069; NL: 0.7912922821972069; NL+AG: 0.939080334171806; NL+QF: 0.7912922821972069; rels: []; projs: [actor_0.name]; preds: [company_0.name = "Netflix"]; havings: []; superlative: []; blanks: 1
TOT: 0.7912922821972069; NL: 0.7912922821972069; NL+AG: 0.939080334171806; NL+QF: 0.7912922821972069; rels: []; projs: [actor_0.name]; preds: [keyword_0.keyword = "netflix"]; havings: []; superlative: []; blanks: 1
TOT: 0.7912502774670075; NL: 0.7267116764646099; NL+AG: 0.9155009755038278; NL+QF: 0.7912502774670075; rels: []; projs: [actor_0.name]; preds: [cast_0.role = "Netflix guy"]; havings: []; superlative: []; blanks: 1
TOT: 0.783057797564375; NL: 0.783057797564375; NL+AG: 0.9182152483953397; NL+QF: 0.783057797564375; rels: []; projs: [movie_0.title]; preds: []; havings: []; superlative: []; blanks: 2
TOT: 0.7645314458836486; NL: 0.7645314458836486; NL+AG: 0.939080334171806; NL+QF: 0.7645314458836486; rels: []; projs: [tv_series_0.title]; preds: [company_0.name = "Netflix"]; havings: []; superlative: []; blanks: 1
TOT: 0.7645314458836486; NL: 0.7645314458836486; NL+AG: 0.939080334171806; NL+QF: 0.7645314458836486; rels: []; projs: [tv_series_0.title]; preds: [keyword_0.keyword = "netflix"]; havings: []; superlative: []; blanks: 1
TOT: 0.7645314458836486; NL: 0.7645314458836486; NL+AG: 0.939080334171806; NL+QF: 0.7645314458836486; rels: []; projs: [tv_series_0.title]; preds: [company_0.name = "Netflix"]; havings: []; superlative: []; blanks: 1
TOT: 0.7645314458836486; NL: 0.7645314458836486; NL+AG: 0.939080334171806; NL+QF: 0.7645314458836486; rels: []; projs: [tv_series_0.title]; preds: [keyword_0.keyword = "netflix"]; havings: []; superlative: []; blanks: 1

===========
RESULTS
===========
TOT: 0.8633117127217018; TR: 0.8662391053409028; QF: 0.1923076923076923; select movie_0.title from keyword as keyword_0, movie as movie_0, tags as tags_0 where keyword_0.keyword = "netflix" and keyword_0.id = tags_0.kid and movie_0.mid = tags_0.msid
TOT: 0.8633116177549401; TR: 0.8662391053409028; QF: 0.19135802469135801; select movie_0.title from company as company_0, copyright as copyright_0, movie as movie_0 where company_0.name = "Netflix" and company_0.id = copyright_0.cid and copyright_0.msid = movie_0.mid
TOT: 0.8620145245547779; TR: 0.8662391053409028; QF: 0.10395671834625322; select movie_0.title from cast as cast_0, company as company_0, copyright as copyright_0, movie as movie_0, tv_series as tv_series_0 where company_0.name = "Netflix" and cast_0.msid = movie_0.mid and cast_0.msid = tv_series_0.sid and company_0.id = copyright_0.cid and copyright_0.msid = tv_series_0.sid
TOT: 0.8620137906097474; TR: 0.8662391053409028; QF: 0.09661726804123712; select movie_0.title from company as company_0, copyright as copyright_0, directed_by as directed_by_0, movie as movie_0, tv_series as tv_series_0 where company_0.name = "Netflix" and company_0.id = copyright_0.cid and copyright_0.msid = tv_series_0.sid and directed_by_0.msid = movie_0.mid and directed_by_0.msid = tv_series_0.sid
TOT: 0.862012649554778; TR: 0.8662391053409028; QF: 0.08520671834625324; select movie_0.title from cast as cast_0, keyword as keyword_0, movie as movie_0, tags as tags_0, tv_series as tv_series_0 where keyword_0.keyword = "netflix" and cast_0.msid = movie_0.mid and cast_0.msid = tv_series_0.sid and keyword_0.id = tags_0.kid and tags_0.msid = tv_series_0.sid
TOT: 0.8620123566967961; TR: 0.8662391053409028; QF: 0.08227813852813852; select movie_0.title from company as company_0, copyright as copyright_0, made_by as made_by_0, movie as movie_0, tv_series as tv_series_0 where company_0.name = "Netflix" and company_0.id = copyright_0.cid and copyright_0.msid = tv_series_0.sid and made_by_0.msid = movie_0.mid and made_by_0.msid = tv_series_0.sid
TOT: 0.8620119156097474; TR: 0.8662391053409028; QF: 0.07786726804123711; select movie_0.title from directed_by as directed_by_0, keyword as keyword_0, movie as movie_0, tags as tags_0, tv_series as tv_series_0 where keyword_0.keyword = "netflix" and directed_by_0.msid = movie_0.mid and directed_by_0.msid = tv_series_0.sid and keyword_0.id = tags_0.kid and tags_0.msid = tv_series_0.sid
TOT: 0.8620117731137126; TR: 0.8662391053409028; QF: 0.07644230769230768; select movie_0.title from company as company_0, copyright as copyright_0, movie as movie_0, tags as tags_0, tv_series as tv_series_0 where company_0.name = "Netflix" and company_0.id = copyright_0.cid and copyright_0.msid = tv_series_0.sid and movie_0.mid = tags_0.msid and tags_0.msid = tv_series_0.sid
TOT: 0.862011744623684; TR: 0.8662391053409028; QF: 0.07615740740740741; select movie_0.title from copyright as copyright_0, keyword as keyword_0, movie as movie_0, tags as tags_0, tv_series as tv_series_0 where keyword_0.keyword = "netflix" and copyright_0.msid = movie_0.mid and copyright_0.msid = tv_series_0.sid and keyword_0.id = tags_0.kid and tags_0.msid = tv_series_0.sid
TOT: 0.8620116532335926; TR: 0.8662391053409028; QF: 0.0752435064935065; select movie_0.title from classification as classification_0, company as company_0, copyright as copyright_0, movie as movie_0, tv_series as tv_series_0 where company_0.name = "Netflix" and classification_0.msid = movie_0.mid and classification_0.msid = tv_series_0.sid and company_0.id = copyright_0.cid and copyright_0.msid = tv_series_0.sid


12:13  INFO: ================
12:13  INFO: QUERY 60: Find all actors from Austin born after 1980
12:13  INFO: ================
12:27  INFO: ================
12:27  INFO: QUERY 71: Who is the writer of "The Truman Show"
12:27  INFO: ================
12:31  INFO: ================
12:31  INFO: QUERY 56: Who is the director of the series "House of Cards" produced by Netflix?
12:31  INFO: ================
12:38  INFO: ================
12:38  INFO: QUERY 41: Find all movies directed by "Woody Allen" and featuring "Scarlett Johansson"
12:38  INFO: ================
12:47  INFO: ================
12:47  INFO: QUERY 18: Find all movies directed by "Steven Spielberg" after 2006
12:47  INFO: ================
12:53  INFO: ================
12:53  INFO: QUERY 5: Find all actors who are from Canada
12:53  INFO: ================
12:55  INFO: ================
12:55  INFO: QUERY 67: What year was the movie "The Imitation Game" produced
12:55  INFO: ================
1170. ROOT: ROOT; NA; ; (0) 
1171. produced: NT; NA; ; (0) made_by(0.74):| directed_by(0.69):| producer.name(0.68):| producer(0.68):| cast.role(0.63):| cast(0.63):| written_by(0.63):| 
1172. year: NT; NA; ; (0) movie.release_year(1.0):| director.birth_year(1.0):| tv_series.release_year(1.0):| actor.birth_year(1.0):| producer.birth_year(1.0):| writer.birth_year(1.0):| movie.title(0.95):Year; Years; Years; | 
1175. The Imitation Game: VTTEXT; NA; ; (0) movie.title(1.0):The Imitation Game; The Imitation Game; The Imitation Game; | cast.role(0.84):The Imitation Game &; The Imitation Game &; The Imitation Game &; | tv_series.title(0.74):The Temptation Game; The Game; The Game; | keyword.keyword(0.69):imitation; imitation; camel-imitation; | company.name(0.67):Game Station, the; Game Station; Imagination Games; | actor.name(0.64):The Game; The Game; Simon Game; | producer.name(0.64):The Game; The Game; Simon Game; | 
1177. movie: NT; NA; ; (0) movie.title(1.0):| movie(1.0):| cast.role(0.95):Movie; Movie F; Movie AD; | company.name(0.95):Movie; Movies; Movie Movie; | keyword.keyword(0.83):movie-in-movie; b-movie; z-movie; | actor.name(0.76):| actor(0.76):| 
What, WDT
year, NN
was, VBD
the, DT
movie, NN
The Imitation Game, NNP
produced, VBN
det(year-2, What-1)
nmod:tmod(produced-7, year-2)
auxpass(produced-7, was-3)
det(The Imitation Game-6, the-4)
compound(The Imitation Game-6, movie-5)
nsubjpass(produced-7, The Imitation Game-6)
root(ROOT-0, produced-7)

PARSE TREE:(1170) ROOT ROOT
    (1171) produced NT
        (1172) year NT
        (1175) The Imitation Game VTTEXT
            (1177) movie NT


===========
TRANSLATIONS
===========
TOT: 0.7103698155753153; NL: 0.6064780374253471; NL+AG: 0.8902008309520129; NL+QF: 0.7103698155753153; rels: []; projs: [actor_0.name]; preds: [cast_0.role = "The Imitation Game & Selma"]; havings: []; superlative: []; blanks: 2
TOT: 0.7041078694647765; NL: 0.6875344335370706; NL+AG: 0.9271073801545473; NL+QF: 0.7041078694647765; rels: []; projs: [movie_0.release_year]; preds: [movie_0.title = "The Imitation Game"]; havings: []; superlative: []; blanks: 1
TOT: 0.6991320529603583; NL: 0.6334663321157932; NL+AG: 0.9092080943898837; NL+QF: 0.6991320529603583; rels: []; projs: [actor_0.name]; preds: [movie_0.title = "The Imitation Game"]; havings: []; superlative: []; blanks: 2
TOT: 0.6911226373392205; NL: 0.6779523639395735; NL+AG: 0.9025816416202771; NL+QF: 0.6911226373392205; rels: [movie]; projs: [movie_0.release_year]; preds: []; havings: []; superlative: []; blanks: 2
TOT: 0.6911017428630093; NL: 0.5607381978057981; NL+AG: 0.9121666519809778; NL+QF: 0.6911017428630093; rels: []; projs: [actor_0.name]; preds: [movie_0.title = "Year",cast_0.role = "The Imitation Game & Selma"]; havings: []; superlative: []; blanks: 1
TOT: 0.6901726383416044; NL: 0.6779523639395735; NL+AG: 0.9045098871809079; NL+QF: 0.6901726383416044; rels: []; projs: [movie_0.release_year]; preds: [movie_0.title = "The Imitation Game"]; havings: []; superlative: []; blanks: 2
TOT: 0.6893161098503192; NL: 0.6349117162369328; NL+AG: 0.9045098871809079; NL+QF: 0.6893161098503192; rels: [movie]; projs: [movie_0.release_year]; preds: [movie_0.title = "The Imitation Game"]; havings: []; superlative: []; blanks: 1
TOT: 0.6875344335370706; NL: 0.6875344335370706; NL+AG: 0.9271073801545473; NL+QF: 0.6875344335370706; rels: []; projs: [director_0.birth_year]; preds: [movie_0.title = "The Imitation Game"]; havings: []; superlative: []; blanks: 1
TOT: 0.6875344335370706; NL: 0.6875344335370706; NL+AG: 0.9271073801545473; NL+QF: 0.6875344335370706; rels: []; projs: [tv_series_0.release_year]; preds: [movie_0.title = "The Imitation Game"]; havings: []; superlative: []; blanks: 1
TOT: 0.6875344335370706; NL: 0.6875344335370706; NL+AG: 0.9271073801545473; NL+QF: 0.6875344335370706; rels: []; projs: [actor_0.birth_year]; preds: [movie_0.title = "The Imitation Game"]; havings: []; superlative: []; blanks: 1
TOT: 0.6875344335370706; NL: 0.6875344335370706; NL+AG: 0.9271073801545473; NL+QF: 0.6875344335370706; rels: []; projs: [producer_0.birth_year]; preds: [movie_0.title = "The Imitation Game"]; havings: []; superlative: []; blanks: 1
TOT: 0.6875344335370706; NL: 0.6875344335370706; NL+AG: 0.9271073801545473; NL+QF: 0.6875344335370706; rels: []; projs: [writer_0.birth_year]; preds: [movie_0.title = "The Imitation Game"]; havings: []; superlative: []; blanks: 1

===========
RESULTS
===========
TOT: 0.7103083350184253; TR: 0.7103698155753153; QF: 0.4186046511627907; select actor_0.name from actor as actor_0, cast as cast_0 where cast_0.role = "The Imitation Game & Selma" and actor_0.aid = cast_0.aid
TOT: 0.7070667907701288; TR: 0.7041078694647765; QF: 1.0; select movie_0.release_year from movie as movie_0 where movie_0.title = "The Imitation Game"
TOT: 0.6978806387692893; TR: 0.6991320529603583; QF: 0.24138673557278212; select actor_0.name from actor as actor_0, cast as cast_0, movie as movie_0 where movie_0.title = "The Imitation Game" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid
TOT: 0.6965755849157991; TR: 0.6991320529603583; QF: 0.07437889594821387; select actor_0.name from actor as actor_0, cast as cast_0, directed_by as directed_by_0, movie as movie_0, tv_series as tv_series_0 where movie_0.title = "The Imitation Game" and actor_0.aid = cast_0.aid and cast_0.msid = tv_series_0.sid and directed_by_0.msid = movie_0.mid and directed_by_0.msid = tv_series_0.sid
TOT: 0.6965754139297358; TR: 0.6991320529603583; QF: 0.07266903531438415; select actor_0.name from actor as actor_0, cast as cast_0, copyright as copyright_0, movie as movie_0, tv_series as tv_series_0 where movie_0.title = "The Imitation Game" and actor_0.aid = cast_0.aid and cast_0.msid = tv_series_0.sid and copyright_0.msid = movie_0.mid and copyright_0.msid = tv_series_0.sid
TOT: 0.6965741510028478; TR: 0.6991320529603583; QF: 0.06003976643511527; select actor_0.name from actor as actor_0, cast as cast_0, made_by as made_by_0, movie as movie_0, tv_series as tv_series_0 where movie_0.title = "The Imitation Game" and actor_0.aid = cast_0.aid and cast_0.msid = tv_series_0.sid and made_by_0.msid = movie_0.mid and made_by_0.msid = tv_series_0.sid
TOT: 0.6965735674197642; TR: 0.6991320529603583; QF: 0.054203935599284436; select actor_0.name from actor as actor_0, cast as cast_0, movie as movie_0, tags as tags_0, tv_series as tv_series_0 where movie_0.title = "The Imitation Game" and actor_0.aid = cast_0.aid and cast_0.msid = tv_series_0.sid and movie_0.mid = tags_0.msid and tags_0.msid = tv_series_0.sid
TOT: 0.6965734475396443; TR: 0.6991320529603583; QF: 0.05300513440048323; select actor_0.name from actor as actor_0, cast as cast_0, classification as classification_0, movie as movie_0, tv_series as tv_series_0 where movie_0.title = "The Imitation Game" and actor_0.aid = cast_0.aid and cast_0.msid = tv_series_0.sid and classification_0.msid = movie_0.mid and classification_0.msid = tv_series_0.sid
TOT: 0.696573198188995; TR: 0.6991320529603583; QF: 0.05051162790697674; select actor_0.name from actor as actor_0, cast as cast_0, movie as movie_0, tv_series as tv_series_0, written_by as written_by_0 where movie_0.title = "The Imitation Game" and actor_0.aid = cast_0.aid and cast_0.msid = tv_series_0.sid and movie_0.mid = written_by_0.msid and tv_series_0.sid = written_by_0.msid
TOT: 0.6965722337357747; TR: 0.6991320529603583; QF: 0.0408670957047438; select actor_0.name from actor as actor_0, cast as cast_0, cast as cast_1, movie as movie_0, tv_series as tv_series_0 where movie_0.title = "The Imitation Game" and actor_0.aid = cast_1.aid and cast_0.msid = movie_0.mid and cast_0.msid = tv_series_0.sid and cast_1.msid = tv_series_0.sid


12:59  INFO: ================
12:59  INFO: QUERY 106: How many movies did Netflix produce?
12:59  INFO: ================
1179. ROOT: ROOT; NA; ; (0) 
1180. produce: NT; NA; ; (0) made_by(0.74):| directed_by(0.69):| producer.name(0.68):| producer(0.68):| cast.role(0.63):| cast(0.63):| written_by(0.63):| 
1181. movies: NT; NA; ; (0) movie.title(1.0):| movie(1.0):| cast.role(0.95):Movie; Movie F; Movie AD; | company.name(0.95):Movies; Movie; Movie Movie; | tv_series.title(0.84):Movies, Movies, Movi; Movie Mob; Moon Movies; | keyword.keyword(0.83):movie-in-movie; movies-about-movies; b-movie; | actor.name(0.76):| 
1183. How many: CMT; count; ; (0) 
1185. Netflix: VTTEXT; NA; ; (0) company.name(1.0):Netflix; Netflix; Netflix; | keyword.keyword(1.0):netflix; netflix-series; netflix-production; | tv_series.title(0.78):| tv_series(0.78):| cast.role(0.77):Netflix guy; | movie.title(0.74):| movie(0.74):| 
How, WRB
many, JJ
movies, NNS
did, VBD
Netflix, NNP
produce, VB
advmod(many-2, How-1)
amod(movies-3, many-2)
dobj(produce-6, movies-3)
aux(produce-6, did-4)
nsubj(produce-6, Netflix-5)
root(ROOT-0, produce-6)

PARSE TREE:(1179) ROOT ROOT
    (1183) How many CMT
        (1181) movies NT
            (1180) produce NT
                (1185) Netflix VTTEXT


===========
TRANSLATIONS
===========
TOT: 0.8662391053409028; NL: 0.8662391053409028; NL+AG: 0.962381256972397; NL+QF: 0.8662391053409028; rels: []; projs: [count(distinct(movie_0.title))]; preds: [company_0.name = "Netflix"]; havings: []; superlative: []; blanks: 1
TOT: 0.8662391053409028; NL: 0.8662391053409028; NL+AG: 0.962381256972397; NL+QF: 0.8662391053409028; rels: []; projs: [count(distinct(movie_0.title))]; preds: [keyword_0.keyword = "netflix"]; havings: []; superlative: []; blanks: 1
TOT: 0.7955417822520919; NL: 0.7955417822520919; NL+AG: 0.9336336059357445; NL+QF: 0.7955417822520919; rels: []; projs: [count(distinct(movie_0.title))]; preds: [cast_0.role = "Netflix guy"]; havings: []; superlative: []; blanks: 1
TOT: 0.7912922821972069; NL: 0.7912922821972069; NL+AG: 0.9334216924339575; NL+QF: 0.7912922821972069; rels: []; projs: [count(distinct(actor_0.name))]; preds: [company_0.name = "Netflix"]; havings: []; superlative: []; blanks: 1
TOT: 0.7912922821972069; NL: 0.7912922821972069; NL+AG: 0.9334216924339575; NL+QF: 0.7912922821972069; rels: []; projs: [count(distinct(actor_0.name))]; preds: [keyword_0.keyword = "netflix"]; havings: []; superlative: []; blanks: 1
TOT: 0.783057797564375; NL: 0.783057797564375; NL+AG: 0.9177248990261656; NL+QF: 0.783057797564375; rels: []; projs: [count(distinct(movie_0.title))]; preds: []; havings: []; superlative: []; blanks: 2
TOT: 0.7645314458836486; NL: 0.7645314458836486; NL+AG: 0.9334216924339575; NL+QF: 0.7645314458836486; rels: []; projs: [count(distinct(tv_series_0.title))]; preds: [company_0.name = "Netflix"]; havings: []; superlative: []; blanks: 1
TOT: 0.7645314458836486; NL: 0.7645314458836486; NL+AG: 0.9334216924339575; NL+QF: 0.7645314458836486; rels: []; projs: [count(distinct(tv_series_0.title))]; preds: [keyword_0.keyword = "netflix"]; havings: []; superlative: []; blanks: 1
TOT: 0.7645314458836486; NL: 0.7645314458836486; NL+AG: 0.9334216924339575; NL+QF: 0.7645314458836486; rels: []; projs: [count(distinct(tv_series_0.title))]; preds: [company_0.name = "Netflix"]; havings: []; superlative: []; blanks: 1
TOT: 0.7645314458836486; NL: 0.7645314458836486; NL+AG: 0.9334216924339575; NL+QF: 0.7645314458836486; rels: []; projs: [count(distinct(tv_series_0.title))]; preds: [keyword_0.keyword = "netflix"]; havings: []; superlative: []; blanks: 1
TOT: 0.7503701876218076; NL: 0.7503701876218076; NL+AG: 0.9177248990261656; NL+QF: 0.7503701876218076; rels: []; projs: [count(distinct(movie_0.title))]; preds: []; havings: []; superlative: []; blanks: 2

===========
RESULTS
===========
TOT: 0.8633117127217018; TR: 0.8662391053409028; QF: 0.1923076923076923; select count(distinct(movie_0.title)) from keyword as keyword_0, movie as movie_0, tags as tags_0 where keyword_0.keyword = "netflix" and keyword_0.id = tags_0.kid and movie_0.mid = tags_0.msid
TOT: 0.8633116177549401; TR: 0.8662391053409028; QF: 0.19135802469135801; select count(distinct(movie_0.title)) from company as company_0, copyright as copyright_0, movie as movie_0 where company_0.name = "Netflix" and company_0.id = copyright_0.cid and copyright_0.msid = movie_0.mid
TOT: 0.8620145245547779; TR: 0.8662391053409028; QF: 0.10395671834625322; select count(distinct(movie_0.title)) from cast as cast_0, company as company_0, copyright as copyright_0, movie as movie_0, tv_series as tv_series_0 where company_0.name = "Netflix" and cast_0.msid = movie_0.mid and cast_0.msid = tv_series_0.sid and company_0.id = copyright_0.cid and copyright_0.msid = tv_series_0.sid
TOT: 0.8620137906097474; TR: 0.8662391053409028; QF: 0.09661726804123712; select count(distinct(movie_0.title)) from company as company_0, copyright as copyright_0, directed_by as directed_by_0, movie as movie_0, tv_series as tv_series_0 where company_0.name = "Netflix" and company_0.id = copyright_0.cid and copyright_0.msid = tv_series_0.sid and directed_by_0.msid = movie_0.mid and directed_by_0.msid = tv_series_0.sid
TOT: 0.862012649554778; TR: 0.8662391053409028; QF: 0.08520671834625324; select count(distinct(movie_0.title)) from cast as cast_0, keyword as keyword_0, movie as movie_0, tags as tags_0, tv_series as tv_series_0 where keyword_0.keyword = "netflix" and cast_0.msid = movie_0.mid and cast_0.msid = tv_series_0.sid and keyword_0.id = tags_0.kid and tags_0.msid = tv_series_0.sid
TOT: 0.8620123566967961; TR: 0.8662391053409028; QF: 0.08227813852813852; select count(distinct(movie_0.title)) from company as company_0, copyright as copyright_0, made_by as made_by_0, movie as movie_0, tv_series as tv_series_0 where company_0.name = "Netflix" and company_0.id = copyright_0.cid and copyright_0.msid = tv_series_0.sid and made_by_0.msid = movie_0.mid and made_by_0.msid = tv_series_0.sid
TOT: 0.8620119156097474; TR: 0.8662391053409028; QF: 0.07786726804123711; select count(distinct(movie_0.title)) from directed_by as directed_by_0, keyword as keyword_0, movie as movie_0, tags as tags_0, tv_series as tv_series_0 where keyword_0.keyword = "netflix" and directed_by_0.msid = movie_0.mid and directed_by_0.msid = tv_series_0.sid and keyword_0.id = tags_0.kid and tags_0.msid = tv_series_0.sid
TOT: 0.8620117731137126; TR: 0.8662391053409028; QF: 0.07644230769230768; select count(distinct(movie_0.title)) from company as company_0, copyright as copyright_0, movie as movie_0, tags as tags_0, tv_series as tv_series_0 where company_0.name = "Netflix" and company_0.id = copyright_0.cid and copyright_0.msid = tv_series_0.sid and movie_0.mid = tags_0.msid and tags_0.msid = tv_series_0.sid
TOT: 0.862011744623684; TR: 0.8662391053409028; QF: 0.07615740740740741; select count(distinct(movie_0.title)) from copyright as copyright_0, keyword as keyword_0, movie as movie_0, tags as tags_0, tv_series as tv_series_0 where keyword_0.keyword = "netflix" and copyright_0.msid = movie_0.mid and copyright_0.msid = tv_series_0.sid and keyword_0.id = tags_0.kid and tags_0.msid = tv_series_0.sid
TOT: 0.8620116532335926; TR: 0.8662391053409028; QF: 0.0752435064935065; select count(distinct(movie_0.title)) from classification as classification_0, company as company_0, copyright as copyright_0, movie as movie_0, tv_series as tv_series_0 where company_0.name = "Netflix" and classification_0.msid = movie_0.mid and classification_0.msid = tv_series_0.sid and company_0.id = copyright_0.cid and copyright_0.msid = tv_series_0.sid


13:02  INFO: ================
13:02  INFO: QUERY 97: What is the number of movies in which "Tom Cruise" acted?
13:02  INFO: ================
13:06  INFO: ================
13:06  INFO: QUERY 89: How many movies did "Alfred Hitchcock" direct?
13:06  INFO: ================
13:09  INFO: ================
13:09  INFO: QUERY 6: Find all actors who were born in 1984
13:09  INFO: ================
13:12  INFO: ================
13:12  INFO: QUERY 31: Find all movies by directors born in "Los Angeles"
13:12  INFO: ================
13:16  INFO: ================
13:16  INFO: QUERY 126: Find all movies featuring "Jason Robards" and "Woody Strode"
13:16  INFO: ================
13:21  INFO: ================
13:21  INFO: QUERY 94: How many actors were born in "Los Angeles" after 2000?
13:21  INFO: ================
13:30  INFO: ================
13:30  INFO: QUERY 44: What are all the movies directed by "Quentin Tarantino" featuring "Christoph Waltz"?
13:30  INFO: ================
1247. ROOT: ROOT; NA; ; (0) 
1248. What: CMT; NA; ; (0) 
1250. movies: NT; NA; all; (0) movie.title(1.0):| movie(1.0):| cast.role(0.95):Movie; Movie F; Movie AD; | company.name(0.95):Movies; Movie; Movie Movie; | tv_series.title(0.84):Movies, Movies, Movi; Movie Mob; Moon Movies; | keyword.keyword(0.83):movie-in-movie; movies-about-movies; b-movie; | actor.name(0.76):| 
1253. directed: NT; NA; ; (0) directed_by(1.0):| director.name(0.72):| director(0.72):| written_by(0.68):| cast.role(0.67):| cast(0.67):| made_by(0.67):| 
1254. Christoph Waltz: VTTEXT; NA; ; (0) director.name(1.0):Christoph Waltz; Christoph Waltz; Christoph Walther; | actor.name(1.0):Christoph Waltz; Christoph Waltz; Christoph Walz; | producer.name(1.0):Christoph Waltz; Christoph Waltz; Christopher Waltz; | writer.name(1.0):Christoph Waltz; Christoph Waltz; Christoph Walz; | cast.role(0.76):Christoph Balthus; Christoph Balthus; Christoph Wenk; | movie.title(0.76):Christoph; Christoph; Christoph Columbus; | company.name(0.63):Christoph Schinko; Christoph Schinko; Christoph Kohler; | 
1256. Quentin Tarantino: VTTEXT; NA; ; (0) director.name(1.0):Quentin Tarantino; Quentin Tarantino; Quentin Tarrantino; | actor.name(1.0):Quentin Tarantino; Quentin Tarantino; Quentin Tarrantino; | producer.name(1.0):Quentin Tarantino; Quentin Tarantino; Quentin Tarrantino; | writer.name(1.0):Quentin Tarantino; Quentin Tarantino; Quentin Tarrantino; | cast.role(0.85):Quentin Tarrantino '; Quentin Tarrantino '; Quentin Tarrantino '; | movie.title(0.84):21 Years: Quentin Ta; 21 Years: Quentin Ta; Quentin Tarantino's ; | writer.birth_city(0.74):San Quentin; San Quentin; Saint-Quentin; | 
1257. featuring: VTTEXT; NA; ; (0) cast.role(1.0):Featuring; Featuring; Featuring; | tv_series.title(0.66):| tv_series(0.66):| movie.title_aka(0.64):| tv_series.title_aka(0.64):| actor.name(0.63):Coolio featuring L.V; San Jose featuring R; San Jose featuring R; | writer.name(0.63):Coolio featuring L.V; Gangstagrass featuri; San Jose featuring R; | 
What, WP
are, VBP
all, PDT
the, DT
movies, NNS
directed, VBN
by, IN
Quentin Tarantino, NNP
featuring, NNP
Christoph Waltz, NNP
root(ROOT-0, What-1)
cop(What-1, are-2)
det:predet(movies-5, all-3)
det(movies-5, the-4)
nsubj(What-1, movies-5)
acl(movies-5, directed-6)
case(Christoph Waltz-10, by-7)
compound(Christoph Waltz-10, Quentin Tarantino-8)
compound(Christoph Waltz-10, featuring-9)
nmod(directed-6, Christoph Waltz-10)

PARSE TREE:(1247) ROOT ROOT
    (1248) What CMT
        (1250) movies NT
            (1253) directed NT
                (1254) Christoph Waltz VTTEXT
                    (1256) Quentin Tarantino VTTEXT
                    (1257) featuring VTTEXT


===========
TRANSLATIONS
===========
TOT: 1.0; NL: 1.0; NL+AG: 1.0; NL+QF: 1.0; rels: [directed_by]; projs: [movie_0.title]; preds: [director_0.name = "Christoph Waltz",director_0.name = "Quentin Tarantino",cast_0.role = "Featuring"]; havings: []; superlative: []; blanks: 0
TOT: 1.0; NL: 1.0; NL+AG: 1.0; NL+QF: 1.0; rels: [directed_by]; projs: [movie_0.title]; preds: [director_0.name = "Christoph Waltz",actor_0.name = "Quentin Tarantino",cast_0.role = "Featuring"]; havings: []; superlative: []; blanks: 0
TOT: 1.0; NL: 1.0; NL+AG: 1.0; NL+QF: 1.0; rels: [directed_by]; projs: [movie_0.title]; preds: [director_0.name = "Christoph Waltz",producer_0.name = "Quentin Tarantino",cast_0.role = "Featuring"]; havings: []; superlative: []; blanks: 0
TOT: 1.0; NL: 1.0; NL+AG: 1.0; NL+QF: 1.0; rels: [directed_by]; projs: [movie_0.title]; preds: [director_0.name = "Christoph Waltz",writer_0.name = "Quentin Tarantino",cast_0.role = "Featuring"]; havings: []; superlative: []; blanks: 0
TOT: 1.0; NL: 1.0; NL+AG: 1.0; NL+QF: 1.0; rels: [directed_by]; projs: [movie_0.title]; preds: [actor_0.name = "Christoph Waltz",director_0.name = "Quentin Tarantino",cast_0.role = "Featuring"]; havings: []; superlative: []; blanks: 0
TOT: 1.0; NL: 1.0; NL+AG: 1.0; NL+QF: 1.0; rels: [directed_by]; projs: [movie_0.title]; preds: [actor_0.name = "Christoph Waltz",actor_0.name = "Quentin Tarantino",cast_0.role = "Featuring"]; havings: []; superlative: []; blanks: 0
TOT: 1.0; NL: 1.0; NL+AG: 1.0; NL+QF: 1.0; rels: [directed_by]; projs: [movie_0.title]; preds: [actor_0.name = "Christoph Waltz",producer_0.name = "Quentin Tarantino",cast_0.role = "Featuring"]; havings: []; superlative: []; blanks: 0
TOT: 1.0; NL: 1.0; NL+AG: 1.0; NL+QF: 1.0; rels: [directed_by]; projs: [movie_0.title]; preds: [actor_0.name = "Christoph Waltz",writer_0.name = "Quentin Tarantino",cast_0.role = "Featuring"]; havings: []; superlative: []; blanks: 0
TOT: 1.0; NL: 1.0; NL+AG: 1.0; NL+QF: 1.0; rels: [directed_by]; projs: [movie_0.title]; preds: [producer_0.name = "Christoph Waltz",director_0.name = "Quentin Tarantino",cast_0.role = "Featuring"]; havings: []; superlative: []; blanks: 0
TOT: 1.0; NL: 1.0; NL+AG: 1.0; NL+QF: 1.0; rels: [directed_by]; projs: [movie_0.title]; preds: [producer_0.name = "Christoph Waltz",actor_0.name = "Quentin Tarantino",cast_0.role = "Featuring"]; havings: []; superlative: []; blanks: 0
TOT: 1.0; NL: 1.0; NL+AG: 1.0; NL+QF: 1.0; rels: [directed_by]; projs: [movie_0.title]; preds: [producer_0.name = "Christoph Waltz",producer_0.name = "Quentin Tarantino",cast_0.role = "Featuring"]; havings: []; superlative: []; blanks: 0
TOT: 1.0; NL: 1.0; NL+AG: 1.0; NL+QF: 1.0; rels: [directed_by]; projs: [movie_0.title]; preds: [producer_0.name = "Christoph Waltz",writer_0.name = "Quentin Tarantino",cast_0.role = "Featuring"]; havings: []; superlative: []; blanks: 0
TOT: 1.0; NL: 1.0; NL+AG: 1.0; NL+QF: 1.0; rels: [directed_by]; projs: [movie_0.title]; preds: [writer_0.name = "Christoph Waltz",director_0.name = "Quentin Tarantino",cast_0.role = "Featuring"]; havings: []; superlative: []; blanks: 0
TOT: 1.0; NL: 1.0; NL+AG: 1.0; NL+QF: 1.0; rels: [directed_by]; projs: [movie_0.title]; preds: [writer_0.name = "Christoph Waltz",actor_0.name = "Quentin Tarantino",cast_0.role = "Featuring"]; havings: []; superlative: []; blanks: 0
TOT: 1.0; NL: 1.0; NL+AG: 1.0; NL+QF: 1.0; rels: [directed_by]; projs: [movie_0.title]; preds: [writer_0.name = "Christoph Waltz",producer_0.name = "Quentin Tarantino",cast_0.role = "Featuring"]; havings: []; superlative: []; blanks: 0
TOT: 1.0; NL: 1.0; NL+AG: 1.0; NL+QF: 1.0; rels: [directed_by]; projs: [movie_0.title]; preds: [writer_0.name = "Christoph Waltz",writer_0.name = "Quentin Tarantino",cast_0.role = "Featuring"]; havings: []; superlative: []; blanks: 0

===========
RESULTS
===========
TOT: 0.9944417600539505; TR: 1.0; QF: 0.14345458500936806; select movie_0.title from actor as actor_0, cast as cast_0, directed_by as directed_by_0, director as director_0, movie as movie_0 where actor_0.name = "Quentin Tarantino" and cast_0.role = "Featuring" and director_0.name = "Christoph Waltz" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid
TOT: 0.9944417600539505; TR: 1.0; QF: 0.14345458500936806; select movie_0.title from actor as actor_0, cast as cast_0, directed_by as directed_by_0, director as director_0, movie as movie_0 where actor_0.name = "Christoph Waltz" and cast_0.role = "Featuring" and director_0.name = "Quentin Tarantino" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid
TOT: 0.9940521106705981; TR: 1.0; QF: 0.1045259500585961; select movie_0.title from cast as cast_0, directed_by as directed_by_0, director as director_0, made_by as made_by_0, movie as movie_0, producer as producer_0 where cast_0.role = "Featuring" and director_0.name = "Christoph Waltz" and producer_0.name = "Quentin Tarantino" and cast_0.msid = movie_0.mid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid
TOT: 0.9940521106705981; TR: 1.0; QF: 0.1045259500585961; select movie_0.title from cast as cast_0, directed_by as directed_by_0, director as director_0, made_by as made_by_0, movie as movie_0, producer as producer_0 where cast_0.role = "Featuring" and director_0.name = "Quentin Tarantino" and producer_0.name = "Christoph Waltz" and cast_0.msid = movie_0.mid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid
TOT: 0.9940520310169184; TR: 1.0; QF: 0.10372941326205931; select movie_0.title from cast as cast_0, directed_by as directed_by_0, director as director_0, movie as movie_0, writer as writer_0, written_by as written_by_0 where cast_0.role = "Featuring" and director_0.name = "Christoph Waltz" and writer_0.name = "Quentin Tarantino" and cast_0.msid = movie_0.mid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and movie_0.mid = written_by_0.msid and writer_0.wid = written_by_0.wid
TOT: 0.9940520310169184; TR: 1.0; QF: 0.10372941326205931; select movie_0.title from cast as cast_0, directed_by as directed_by_0, director as director_0, movie as movie_0, writer as writer_0, written_by as written_by_0 where cast_0.role = "Featuring" and director_0.name = "Quentin Tarantino" and writer_0.name = "Christoph Waltz" and cast_0.msid = movie_0.mid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and movie_0.mid = written_by_0.msid and writer_0.wid = written_by_0.wid
TOT: 0.9940500906409095; TR: 1.0; QF: 0.08432565317255242; select movie_0.title from actor as actor_0, cast as cast_0, directed_by as directed_by_0, director as director_0, movie as movie_0, tv_series as tv_series_0 where actor_0.name = "Quentin Tarantino" and cast_0.role = "Featuring" and director_0.name = "Christoph Waltz" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and cast_0.msid = tv_series_0.sid and directed_by_0.did = director_0.did and directed_by_0.msid = tv_series_0.sid
TOT: 0.9940500906409095; TR: 1.0; QF: 0.08432565317255242; select movie_0.title from actor as actor_0, cast as cast_0, directed_by as directed_by_0, director as director_0, movie as movie_0, tv_series as tv_series_0 where actor_0.name = "Christoph Waltz" and cast_0.role = "Featuring" and director_0.name = "Quentin Tarantino" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and cast_0.msid = tv_series_0.sid and directed_by_0.did = director_0.did and directed_by_0.msid = tv_series_0.sid
TOT: 0.9940497030884086; TR: 1.0; QF: 0.08045012816300677; select movie_0.title from actor as actor_0, cast as cast_0, directed_by as directed_by_0, director as director_0, movie as movie_0, tv_series as tv_series_0 where actor_0.name = "Quentin Tarantino" and cast_0.role = "Featuring" and director_0.name = "Christoph Waltz" and actor_0.aid = cast_0.aid and cast_0.msid = tv_series_0.sid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and directed_by_0.msid = tv_series_0.sid
TOT: 0.9940497030884086; TR: 1.0; QF: 0.08045012816300677; select movie_0.title from actor as actor_0, cast as cast_0, directed_by as directed_by_0, director as director_0, movie as movie_0, tv_series as tv_series_0 where actor_0.name = "Christoph Waltz" and cast_0.role = "Featuring" and director_0.name = "Quentin Tarantino" and actor_0.aid = cast_0.aid and cast_0.msid = tv_series_0.sid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and directed_by_0.msid = tv_series_0.sid


13:38  INFO: ================
13:38  INFO: QUERY 8: What is the nationality of the actor "Christoph Waltz"?
13:38  INFO: ================
13:41  INFO: ================
13:41  INFO: QUERY 90: How many movies were produced in the year 2012?
13:41  INFO: ================
13:47  INFO: ================
13:47  INFO: QUERY 63: Find all the female actors born in "New York City" after 1980
13:47  INFO: ================
15:35  INFO: ================
15:35  INFO: QUERY 48: What are all the movies featuring "Kerry Washington"?
15:35  INFO: ================
15:38  INFO: ================
15:38  INFO: QUERY 38: Find all movies featuring "Benedict Cumberbatch"
15:38  INFO: ================
15:40  INFO: ================
15:40  INFO: QUERY 1: What year was "Ellen Page" born?
15:40  INFO: ================
15:43  INFO: ================
15:43  INFO: QUERY 30: Find all actors born in "Los Angeles" after 1980
15:43  INFO: ================
15:52  INFO: ====== RANKS ======
15:52  INFO: QUERY 0: 1
15:52  INFO: QUERY 1: 1
15:52  INFO: QUERY 2: 1
15:52  INFO: QUERY 3: 1
15:52  INFO: QUERY 4: 1
15:52  INFO: QUERY 5: 1
15:52  INFO: QUERY 6: 1
15:52  INFO: QUERY 7: 1
15:52  INFO: QUERY 8: 1
15:52  INFO: QUERY 9: 1
15:52  INFO: QUERY 10: 1
15:52  INFO: QUERY 11: 1
15:52  INFO: QUERY 12: 1
15:52  INFO: QUERY 13: 1
15:52  INFO: QUERY 14: 1
15:52  INFO: QUERY 15: 1
15:52  INFO: QUERY 16: 1
15:52  INFO: QUERY 17: 1
15:52  INFO: QUERY 18: 1
15:52  INFO: QUERY 19: 1
15:52  INFO: QUERY 20: 1
15:52  INFO: QUERY 21: 1
15:52  INFO: QUERY 22: -1
15:52  INFO: QUERY 23: 1
15:52  INFO: QUERY 24: 1
15:52  INFO: QUERY 25: -1
15:52  INFO: QUERY 26: 1
15:52  INFO: QUERY 27: 1
15:52  INFO: QUERY 28: 1
15:52  INFO: QUERY 29: 1
15:52  INFO: QUERY 30: 1
15:52  INFO: QUERY 31: 1
15:52  INFO: QUERY 32: 1
15:52  INFO: QUERY 33: 1
15:52  INFO: QUERY 34: 1
15:52  INFO: QUERY 35: 2
15:52  INFO: QUERY 36: 1
15:52  INFO: QUERY 37: 4
15:52  INFO: QUERY 38: 1
15:52  INFO: QUERY 39: -1
15:52  INFO: QUERY 40: 1
15:52  INFO: QUERY 41: 1
15:52  INFO: QUERY 42: 3
15:52  INFO: QUERY 43: 1
15:52  INFO: QUERY 44: -1
15:52  INFO: QUERY 45: 1
15:52  INFO: QUERY 46: 1
15:52  INFO: QUERY 47: 2
15:52  INFO: QUERY 48: 1
15:52  INFO: QUERY 49: 1
15:52  INFO: QUERY 50: 1
15:52  INFO: QUERY 51: 1
15:52  INFO: QUERY 52: 1
15:52  INFO: QUERY 53: 1
15:52  INFO: QUERY 54: 2
15:52  INFO: QUERY 55: 2
15:52  INFO: QUERY 56: 1
15:52  INFO: QUERY 57: 1
15:52  INFO: QUERY 58: 2
15:52  INFO: QUERY 59: 1
15:52  INFO: QUERY 60: 1
15:52  INFO: QUERY 61: -1
15:52  INFO: QUERY 62: 1
15:52  INFO: QUERY 63: 1
15:52  INFO: QUERY 64: 1
15:52  INFO: QUERY 65: 1
15:52  INFO: QUERY 66: -1
15:52  INFO: QUERY 67: 2
15:52  INFO: QUERY 68: -1
15:52  INFO: QUERY 69: 1
15:52  INFO: QUERY 70: 1
15:52  INFO: QUERY 71: 1
15:52  INFO: QUERY 72: 2
15:52  INFO: QUERY 73: 1
15:52  INFO: QUERY 74: 1
15:52  INFO: QUERY 75: 1
15:52  INFO: QUERY 76: 1
15:52  INFO: QUERY 77: 1
15:52  INFO: QUERY 78: 4
15:52  INFO: QUERY 79: 1
15:52  INFO: QUERY 80: 1
15:52  INFO: QUERY 81: 2
15:52  INFO: QUERY 82: 1
15:52  INFO: QUERY 83: -1
15:52  INFO: QUERY 84: 3
15:52  INFO: QUERY 85: -1
15:52  INFO: QUERY 86: -1
15:52  INFO: QUERY 87: 2
15:52  INFO: QUERY 88: 1
15:52  INFO: QUERY 89: 1
15:52  INFO: QUERY 90: 1
15:52  INFO: QUERY 91: 1
15:52  INFO: QUERY 92: 1
15:52  INFO: QUERY 93: 1
15:52  INFO: QUERY 94: 1
15:52  INFO: QUERY 95: 1
15:52  INFO: QUERY 96: 2
15:52  INFO: QUERY 97: 1
15:52  INFO: QUERY 98: -1
15:52  INFO: QUERY 99: 2
15:52  INFO: QUERY 100: 1
15:52  INFO: QUERY 101: 1
15:52  INFO: QUERY 102: 1
15:52  INFO: QUERY 103: -1
15:52  INFO: QUERY 104: 2
15:52  INFO: QUERY 105: 1
15:52  INFO: QUERY 106: 2
15:52  INFO: QUERY 107: 1
15:52  INFO: QUERY 108: 1
15:52  INFO: QUERY 109: 1
15:52  INFO: QUERY 110: -1
15:52  INFO: QUERY 111: 1
15:52  INFO: QUERY 112: -1
15:52  INFO: QUERY 113: 1
15:52  INFO: QUERY 114: 8
15:52  INFO: QUERY 115: 3
15:52  INFO: QUERY 116: 1
15:52  INFO: QUERY 117: 1
15:52  INFO: QUERY 118: 7
15:52  INFO: QUERY 119: -1
15:52  INFO: QUERY 120: 1
15:52  INFO: QUERY 121: -1
15:52  INFO: QUERY 122: 1
15:52  INFO: QUERY 123: 1
15:52  INFO: QUERY 124: -1
15:52  INFO: QUERY 125: -1
15:52  INFO: QUERY 126: 1
15:52  INFO: QUERY 127: -1
15:52  INFO: QUERY 128: -1
15:52  INFO: QUERY 129: 1
15:52  INFO: QUERY 130: -1
15:52  INFO: ==============
15:52  INFO: SUMMARY
15:52  INFO: ==============
15:52  INFO: Total queries: 131
15:52  INFO: Top 1: 90
15:52  INFO: Top 3: 106
15:52  INFO: Top 5: 108
