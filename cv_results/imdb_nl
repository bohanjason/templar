00:00  INFO: ==============================
00:00  INFO: Reading relations info...
00:00  INFO: Read 16 relations/views/functions.
00:00  INFO: ==============================

00:00  INFO: ==============================
00:00  INFO: Reading edges info...
00:00  INFO: Read 21 FK-PK relationships.
00:00  INFO: Read 21 PK-FK relationships.
00:00  INFO: ==============================

00:00  INFO: ==============================
00:00  INFO: Reading relations info...
00:00  INFO: Read 15 relations/views/functions.
00:00  INFO: ==============================

00:00  INFO: ==============================
00:00  INFO: Reading edges info...
00:00  INFO: Read 19 FK-PK relationships.
00:00  INFO: Read 19 PK-FK relationships.
00:00  INFO: ==============================

00:00  INFO: ===== Parsing Results =====
00:00  INFO: Total Queries: 196
00:00  INFO: Correctly Parsed: 184/196

00:00  INFO: ==============================
00:00  INFO: Generating templates using schema for join level: 6
00:22  INFO: Done generating 42197 templates.
00:22  INFO: ==============================

00:23  INFO: ===== FOLD 0 =====
Loading parser from serialized file edu/stanford/nlp/models/lexparser/englishPCFG.ser.gz ... done [0.7 sec].
00:23  INFO: ===== Parsing Results =====
00:23  INFO: Total Queries: 97
00:23  INFO: Correctly Parsed: 96/97

00:23  INFO: ================
00:23  INFO: QUERY 14: Find all actors from Italy
00:23  INFO: ================
00:27  INFO: ================
00:27  INFO: QUERY 123: which movie has the most number of actors from China?
00:27  INFO: ================
8. ROOT: ROOT; NA; ; (0) 
10. movie: NT; NA; ; (0) movie.title(1.0):| movie(1.0):| company.name(0.92):Movie; Movie Movie; Movies; | cast.role(0.87):Movie; Movie F; Movie AD; | keyword.keyword(0.81):movie-in-movie; b-movie; z-movie; | 
12. number of: FT; count; ; (0) 
14. most: FT; max; ; (0) 
15. actors: NT; NA; ; (0) actor.name(1.0):| actor(1.0):| movie.title(0.95):Actors; Actors; Actors; | cast.role(0.95):Actors; Actors; Actors; | tv_series.title(0.9):Actors; Actor; Actors Vs; | 
17. China: VTTEXT; NA; ; (0) movie.title(1.0):China; China; China; | director.nationality(1.0):China; China; China; | actor.nationality(1.0):China; China; China; | actor.name(1.0):China; China; China; | producer.nationality(1.0):China; China; China; | 
which, WDT
movie, NN
has, VBZ
the, DT
most, JJS
number, NN
of, IN
actors, NNS
from, IN
China, NNP
det(movie-2, which-1)
nsubj(has-3, movie-2)
root(ROOT-0, has-3)
det(number-6, the-4)
amod(number-6, most-5)
dobj(has-3, number-6)
case(actors-8, of-7)
nmod(number-6, actors-8)
case(China-10, from-9)
nmod(actors-8, China-10)

PARSE TREE:(8) ROOT ROOT
    (10) movie NT
    (15) actors NT
        (17) China VTTEXT


===========
TRANSLATIONS
===========
TOT: 0.875; NL: 0.875; NL+AG: 0.9791712512989792; NL+QF: 0.9631884057971014; rels: []; projs: [movie_0.title]; preds: [movie_0.title = "China"]; havings: []; superlative: [count(distinct(actor_0.name)) desc limit 1]; blanks: 0
TOT: 0.875; NL: 0.875; NL+AG: 0.9791712512989792; NL+QF: 0.9629166666666666; rels: []; projs: [movie_0.title]; preds: [director_0.nationality = "China"]; havings: []; superlative: [count(distinct(actor_0.name)) desc limit 1]; blanks: 0
TOT: 0.875; NL: 0.875; NL+AG: 0.9791712512989792; NL+QF: 0.9629166666666666; rels: []; projs: [movie_0.title]; preds: [actor_0.nationality = "China"]; havings: []; superlative: [count(distinct(actor_0.name)) desc limit 1]; blanks: 0
TOT: 0.875; NL: 0.875; NL+AG: 0.9791712512989792; NL+QF: 0.9662820512820514; rels: []; projs: [movie_0.title]; preds: [actor_0.name = "China"]; havings: []; superlative: [count(distinct(actor_0.name)) desc limit 1]; blanks: 0
TOT: 0.875; NL: 0.875; NL+AG: 0.9791712512989792; NL+QF: 0.9629166666666666; rels: []; projs: [movie_0.title]; preds: [producer_0.nationality = "China"]; havings: []; superlative: [count(distinct(actor_0.name)) desc limit 1]; blanks: 0
TOT: 0.840009506318385; NL: 0.840009506318385; NL+AG: 0.9235542217655393; NL+QF: 0.9206881509639402; rels: []; projs: [movie_0.title]; preds: [tv_series_0.title = "Actors",movie_0.title = "China"]; havings: []; superlative: [tv_series_0.sid desc limit 1]; blanks: 0
TOT: 0.840009506318385; NL: 0.840009506318385; NL+AG: 0.9235542217655393; NL+QF: 0.920514237920462; rels: []; projs: [movie_0.title]; preds: [tv_series_0.title = "Actors",director_0.nationality = "China"]; havings: []; superlative: [tv_series_0.sid desc limit 1]; blanks: 0
TOT: 0.840009506318385; NL: 0.840009506318385; NL+AG: 0.9235542217655393; NL+QF: 0.920514237920462; rels: []; projs: [movie_0.title]; preds: [tv_series_0.title = "Actors",actor_0.nationality = "China"]; havings: []; superlative: [tv_series_0.sid desc limit 1]; blanks: 0
TOT: 0.840009506318385; NL: 0.840009506318385; NL+AG: 0.9235542217655393; NL+QF: 0.9228930523859527; rels: []; projs: [movie_0.title]; preds: [tv_series_0.title = "Actors",actor_0.name = "China"]; havings: []; superlative: [tv_series_0.sid desc limit 1]; blanks: 0
TOT: 0.840009506318385; NL: 0.840009506318385; NL+AG: 0.9235542217655393; NL+QF: 0.920514237920462; rels: []; projs: [movie_0.title]; preds: [tv_series_0.title = "Actors",producer_0.nationality = "China"]; havings: []; superlative: [tv_series_0.sid desc limit 1]; blanks: 0

===========
RESULTS
===========
TOT: 0.8704166666666666; TR: 0.875; SMP: 0.41666666666666663; select movie_0.title from actor as actor_0, cast as cast_0, movie as movie_0 where actor_0.nationality = "China" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid group by movie_0.title order by count(distinct(actor_0.name)) desc limit 1
TOT: 0.8697499999999999; TR: 0.875; SMP: 0.35; select movie_0.title from actor as actor_0, cast as cast_0, made_by as made_by_0, movie as movie_0, producer as producer_0 where producer_0.nationality = "China" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid group by movie_0.title order by count(distinct(actor_0.name)) desc limit 1
TOT: 0.8697499999999999; TR: 0.875; SMP: 0.35; select movie_0.title from actor as actor_0, cast as cast_0, directed_by as directed_by_0, director as director_0, movie as movie_0 where director_0.nationality = "China" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid group by movie_0.title order by count(distinct(actor_0.name)) desc limit 1
TOT: 0.8697499999999999; TR: 0.875; SMP: 0.35; select movie_0.title from actor as actor_0, actor as actor_1, cast as cast_0, cast as cast_1, movie as movie_0 where actor_1.name = "China" and actor_0.aid = cast_0.aid and actor_1.aid = cast_1.aid and cast_0.msid = movie_0.mid and cast_1.msid = movie_0.mid group by movie_0.title order by count(distinct(actor_0.name)) desc limit 1
TOT: 0.8697499999999999; TR: 0.875; SMP: 0.35; select movie_0.title from actor as actor_0, actor as actor_1, cast as cast_0, cast as cast_1, movie as movie_0 where actor_0.name = "China" and actor_0.aid = cast_0.aid and actor_1.aid = cast_1.aid and cast_0.msid = movie_0.mid and cast_1.msid = movie_0.mid group by movie_0.title order by count(distinct(actor_1.name)) desc limit 1
TOT: 0.8697499999999999; TR: 0.875; SMP: 0.35; select movie_0.title from actor as actor_0, cast as cast_0, cast as cast_1, movie as movie_0, movie as movie_1 where movie_1.title = "China" and actor_0.aid = cast_0.aid and actor_0.aid = cast_1.aid and cast_0.msid = movie_0.mid and cast_1.msid = movie_1.mid group by movie_0.title order by count(distinct(actor_0.name)) desc limit 1
TOT: 0.8697499999999999; TR: 0.875; SMP: 0.35; select movie_1.title from actor as actor_0, cast as cast_0, cast as cast_1, movie as movie_0, movie as movie_1 where movie_0.title = "China" and actor_0.aid = cast_0.aid and actor_0.aid = cast_1.aid and cast_0.msid = movie_0.mid and cast_1.msid = movie_1.mid group by movie_1.title order by count(distinct(actor_0.name)) desc limit 1
TOT: 0.8695833333333333; TR: 0.875; SMP: 0.3333333333333333; select movie_0.title from actor as actor_0, actor as actor_1, cast as cast_0, cast as cast_1, movie as movie_0, movie as movie_1 where movie_1.title = "China" and actor_0.aid = actor_1.aid and actor_0.aid = cast_0.aid and actor_1.aid = cast_1.aid and cast_0.msid = movie_0.mid and cast_1.msid = movie_1.mid group by movie_0.title order by count(distinct(actor_0.name)) desc limit 1
TOT: 0.8695833333333333; TR: 0.875; SMP: 0.3333333333333333; select movie_1.title from actor as actor_0, actor as actor_1, cast as cast_0, cast as cast_1, movie as movie_0, movie as movie_1 where movie_0.title = "China" and actor_0.aid = actor_1.aid and actor_0.aid = cast_0.aid and actor_1.aid = cast_1.aid and cast_0.msid = movie_0.mid and cast_1.msid = movie_1.mid group by movie_1.title order by count(distinct(actor_0.name)) desc limit 1
TOT: 0.8695833333333333; TR: 0.875; SMP: 0.3333333333333333; select movie_0.title from actor as actor_0, cast as cast_0, movie as movie_0, movie as movie_1, tags as tags_0, tags as tags_1 where movie_1.title = "China" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and movie_0.mid = tags_0.msid and movie_1.mid = tags_1.msid and tags_0.id = tags_1.id group by movie_0.title order by count(distinct(actor_0.name)) desc limit 1


00:29  INFO: ================
00:29  INFO: QUERY 125: Find the name and budget of the latest movie by "Quentin Tarantino"
00:29  INFO: ================
20. ROOT: ROOT; NA; ; (0) 
21. Find: CMT; NA; ; (0) 
22. name: VTTEXT; NA; ; (0) movie.title(0.94):Name; Name; Names; | actor.name(0.83):name; No Name; Noe-Name; | actor.name(0.81):| director.name(0.79):| writer.name(0.79):| 
25. budget: NT; NA; ; (0) movie.budget(1.0):| tv_series.budget(1.0):| movie.title(0.89):Budget; Fudget's Budget; No Budget; | keyword.keyword(0.87):budget; in-budget; no-budget; | cast.role(0.87):Budgets; Budgets; Budgets; | 
26. movie: NT; NA; ; (0) movie.title(1.0):| movie(1.0):| company.name(0.92):Movie; Movie Movie; Movies; | cast.role(0.87):Movie; Movie F; Movie AD; | keyword.keyword(0.81):movie-in-movie; b-movie; z-movie; | 
29. latest: FT; max; ; (0) 
30. Quentin Tarantino: VTTEXT; NA; ; (0) director.name(1.0):Quentin Tarantino; Quentin Tarantino; Quentin Tarrantino; | actor.name(1.0):Quentin Tarantino; Quentin Tarantino; Quentin Tarrantino; | producer.name(1.0):Quentin Tarantino; Quentin Tarantino; Quentin Tarrantino; | writer.name(1.0):Quentin Tarantino; Quentin Tarantino; Quentin Tarrantino; | cast.role(0.85):Quentin Tarrantino '; Quentin Tarrantino '; Quentin Tarrantino '; | 
Find, VB
the, DT
name, NN
and, CC
budget, NN
of, IN
the, DT
latest, JJS
movie, NN
by, IN
Quentin Tarantino, NNP
root(ROOT-0, Find-1)
det(name-3, the-2)
dobj(Find-1, name-3)
cc(name-3, and-4)
conj(name-3, budget-5)
case(movie-9, of-6)
det(movie-9, the-7)
amod(movie-9, latest-8)
nmod(name-3, movie-9)
case(Quentin Tarantino-11, by-10)
nmod(Find-1, Quentin Tarantino-11)

PARSE TREE:(20) ROOT ROOT
    (21) Find CMT
        (22) name VTTEXT
            (26) movie NT
        (25) budget NT
        (30) Quentin Tarantino VTTEXT


===========
TRANSLATIONS
===========
TOT: 0.9774938355909717; NL: 0.9774938355909717; NL+AG: 0.9774938355909717; NL+QF: 0.9830153476718573; rels: []; projs: [actor_0.name]; preds: [movie_0.title = "Budget",director_0.name = "Quentin Tarantino"]; havings: []; superlative: [movie_0.title desc limit 1]; blanks: 0
TOT: 0.9774938355909717; NL: 0.9774938355909717; NL+AG: 0.9774938355909717; NL+QF: 0.9830112141021786; rels: []; projs: [actor_0.name]; preds: [movie_0.title = "Budget",actor_0.name = "Quentin Tarantino"]; havings: []; superlative: [movie_0.title desc limit 1]; blanks: 0
TOT: 0.9774938355909717; NL: 0.9774938355909717; NL+AG: 0.9774938355909717; NL+QF: 0.9830018319126902; rels: []; projs: [actor_0.name]; preds: [movie_0.title = "Budget",producer_0.name = "Quentin Tarantino"]; havings: []; superlative: [movie_0.title desc limit 1]; blanks: 0
TOT: 0.9774938355909717; NL: 0.9774938355909717; NL+AG: 0.9774938355909717; NL+QF: 0.9830018319126902; rels: []; projs: [actor_0.name]; preds: [movie_0.title = "Budget",writer_0.name = "Quentin Tarantino"]; havings: []; superlative: [movie_0.title desc limit 1]; blanks: 0
TOT: 0.9736436614200722; NL: 0.9736436614200722; NL+AG: 0.9736436614200722; NL+QF: 0.9789284448952248; rels: []; projs: [actor_0.name]; preds: [keyword_0.keyword = "budget",director_0.name = "Quentin Tarantino"]; havings: []; superlative: [movie_0.title desc limit 1]; blanks: 0
TOT: 0.9736436614200722; NL: 0.9736436614200722; NL+AG: 0.9736436614200722; NL+QF: 0.9789243113255462; rels: []; projs: [actor_0.name]; preds: [keyword_0.keyword = "budget",actor_0.name = "Quentin Tarantino"]; havings: []; superlative: [movie_0.title desc limit 1]; blanks: 0
TOT: 0.9736436614200722; NL: 0.9736436614200722; NL+AG: 0.9736436614200722; NL+QF: 0.9789149291360577; rels: []; projs: [actor_0.name]; preds: [keyword_0.keyword = "budget",producer_0.name = "Quentin Tarantino"]; havings: []; superlative: [movie_0.title desc limit 1]; blanks: 0
TOT: 0.9736436614200722; NL: 0.9736436614200722; NL+AG: 0.9736436614200722; NL+QF: 0.9789149291360577; rels: []; projs: [actor_0.name]; preds: [keyword_0.keyword = "budget",writer_0.name = "Quentin Tarantino"]; havings: []; superlative: [movie_0.title desc limit 1]; blanks: 0
TOT: 0.9730058624201756; NL: 0.9730058624201756; NL+AG: 0.9730058624201756; NL+QF: 0.9799534596870834; rels: []; projs: [actor_0.name]; preds: [cast_0.role = "Budgets",director_0.name = "Quentin Tarantino"]; havings: []; superlative: [movie_0.title desc limit 1]; blanks: 0
TOT: 0.9730058624201756; NL: 0.9730058624201756; NL+AG: 0.9730058624201756; NL+QF: 0.980233780150094; rels: []; projs: [actor_0.name]; preds: [cast_0.role = "Budgets",actor_0.name = "Quentin Tarantino"]; havings: []; superlative: [movie_0.title desc limit 1]; blanks: 0

===========
RESULTS
===========
TOT: 0.9710522305683953; TR: 0.9774938355909717; SMP: 0.3333333333333333; select actor_1.name from actor as actor_0, actor as actor_1, cast as cast_0, cast as cast_1, movie as movie_0, movie as movie_1 where actor_0.name = "Quentin Tarantino" and movie_0.title = "Budget" and actor_0.aid = cast_0.aid and actor_1.aid = cast_1.aid and cast_0.msid = movie_0.mid and cast_1.msid = movie_1.mid and movie_0.mid = movie_1.mid order by movie_1.title desc limit 1
TOT: 0.9710522305683953; TR: 0.9774938355909717; SMP: 0.3333333333333333; select actor_0.name from actor as actor_0, actor as actor_1, cast as cast_0, cast as cast_1, movie as movie_0, movie as movie_1 where actor_1.name = "Quentin Tarantino" and movie_1.title = "Budget" and actor_0.aid = cast_0.aid and actor_1.aid = cast_1.aid and cast_0.msid = movie_0.mid and cast_1.msid = movie_1.mid and movie_0.mid = movie_1.mid order by movie_0.title desc limit 1
TOT: 0.9710522305683953; TR: 0.9774938355909717; SMP: 0.3333333333333333; select actor_1.name from actor as actor_0, actor as actor_1, cast as cast_0, cast as cast_1, movie as movie_0, movie as movie_1 where actor_0.name = "Quentin Tarantino" and movie_1.title = "Budget" and actor_0.aid = cast_0.aid and actor_1.aid = cast_1.aid and cast_0.msid = movie_0.mid and cast_1.msid = movie_1.mid and movie_0.mid = movie_1.mid order by movie_0.title desc limit 1
TOT: 0.9710522305683953; TR: 0.9774938355909717; SMP: 0.3333333333333333; select actor_0.name from actor as actor_0, actor as actor_1, cast as cast_0, cast as cast_1, movie as movie_0, movie as movie_1 where actor_1.name = "Quentin Tarantino" and movie_0.title = "Budget" and actor_0.aid = cast_0.aid and actor_1.aid = cast_1.aid and cast_0.msid = movie_0.mid and cast_1.msid = movie_1.mid and movie_0.mid = movie_1.mid order by movie_1.title desc limit 1
TOT: 0.9709331829493477; TR: 0.9774938355909717; SMP: 0.3214285714285714; select actor_0.name from actor as actor_0, cast as cast_0, directed_by as directed_by_0, movie as movie_0, movie as movie_1, writer as writer_0, written_by as written_by_0 where movie_0.title = "Budget" and writer_0.name = "Quentin Tarantino" and actor_0.aid = cast_0.aid and cast_0.msid = movie_1.mid and directed_by_0.msid = movie_0.mid and directed_by_0.msid = movie_1.mid and movie_0.mid = written_by_0.msid and writer_0.wid = written_by_0.wid order by movie_1.title desc limit 1
TOT: 0.9709331829493477; TR: 0.9774938355909717; SMP: 0.3214285714285714; select actor_0.name from actor as actor_0, cast as cast_0, directed_by as directed_by_0, movie as movie_0, movie as movie_1, writer as writer_0, written_by as written_by_0 where movie_1.title = "Budget" and writer_0.name = "Quentin Tarantino" and actor_0.aid = cast_0.aid and cast_0.msid = movie_1.mid and directed_by_0.msid = movie_0.mid and directed_by_0.msid = movie_1.mid and movie_0.mid = written_by_0.msid and writer_0.wid = written_by_0.wid order by movie_0.title desc limit 1
TOT: 0.9709331829493477; TR: 0.9774938355909717; SMP: 0.3214285714285714; select actor_0.name from actor as actor_0, cast as cast_0, movie as movie_0, movie as movie_1, writer as writer_0, written_by as written_by_0, written_by as written_by_1 where movie_0.title = "Budget" and writer_0.name = "Quentin Tarantino" and actor_0.aid = cast_0.aid and cast_0.msid = movie_1.mid and movie_0.mid = written_by_0.msid and movie_0.mid = written_by_1.msid and movie_1.mid = written_by_0.msid and writer_0.wid = written_by_1.wid order by movie_1.title desc limit 1
TOT: 0.9709331829493477; TR: 0.9774938355909717; SMP: 0.3214285714285714; select actor_0.name from actor as actor_0, cast as cast_0, movie as movie_0, movie as movie_1, writer as writer_0, written_by as written_by_0, written_by as written_by_1 where movie_1.title = "Budget" and writer_0.name = "Quentin Tarantino" and actor_0.aid = cast_0.aid and cast_0.msid = movie_1.mid and movie_0.mid = written_by_0.msid and movie_0.mid = written_by_1.msid and movie_1.mid = written_by_0.msid and writer_0.wid = written_by_1.wid order by movie_0.title desc limit 1
TOT: 0.9709331829493477; TR: 0.9774938355909717; SMP: 0.3214285714285714; select actor_0.name from actor as actor_0, cast as cast_0, cast as cast_1, movie as movie_0, movie as movie_1, writer as writer_0, written_by as written_by_0 where movie_0.title = "Budget" and writer_0.name = "Quentin Tarantino" and actor_0.aid = cast_0.aid and actor_0.aid = cast_1.aid and cast_0.msid = movie_0.mid and cast_1.msid = movie_1.mid and movie_0.mid = written_by_0.msid and writer_0.wid = written_by_0.wid order by movie_1.title desc limit 1
TOT: 0.9709331829493477; TR: 0.9774938355909717; SMP: 0.3214285714285714; select actor_0.name from actor as actor_0, cast as cast_0, cast as cast_1, movie as movie_0, movie as movie_1, writer as writer_0, written_by as written_by_0 where movie_1.title = "Budget" and writer_0.name = "Quentin Tarantino" and actor_0.aid = cast_0.aid and actor_0.aid = cast_1.aid and cast_0.msid = movie_0.mid and cast_1.msid = movie_1.mid and movie_0.mid = written_by_0.msid and writer_0.wid = written_by_0.wid order by movie_0.title desc limit 1


00:30  INFO: ================
00:30  INFO: QUERY 52: What company produced the series Scandal?
00:30  INFO: ================
00:32  INFO: ================
00:32  INFO: QUERY 93: How many movies did "Ronald Reagan" act in?
00:32  INFO: ================
00:34  INFO: ================
00:34  INFO: QUERY 36: Who are the actors born in "New York City" after 1990?
00:34  INFO: ================
50. ROOT: ROOT; NA; ; (0) 
51. born: NT; NA; ; (0) tv_series.num_of_episodes(0.62):| tv_series.num_of_seasons(0.62):| tags(0.6):| director.did(0.6):| producer.name(0.59):| 
52. Who: CMT; NA; ; (0) 
54. actors: NT; NA; ; (0) actor.name(1.0):| actor(1.0):| movie.title(0.95):Actors; Actors; Actors; | cast.role(0.95):Actors; Actors; Actors; | tv_series.title(0.9):Actors; Actor; Actors Vs; | 
56. New York City: VTTEXT; NA; ; (0) director.birth_city(1.0):New York City; New York City; New York City; | actor.birth_city(1.0):New York City; New York City; New York City; | producer.birth_city(1.0):New York City; New York City; New York City; | writer.birth_city(1.0):New York City; New York City; New York City; | cast.role(0.99):New York City; New York City; New York City Cop; | 
58. 1990: VTNUM; NA; ; (0) writer.birth_year(1.0):1993; 1994; 1998; | producer.birth_year(1.0):1993; 1997; 1995; | director.birth_year(1.0):1993; 1994; 1996; | actor.birth_year(1.0):1999; 2003; 1993; | movie.release_year(0.99):2012; 2014; 2015; | 
59. after: OT; >; ; (0) 
Who, WP
are, VBP
the, DT
actors, NNS
born, VBN
in, IN
New York City, NNP
after, IN
1990, CD
dobj(born-5, Who-1)
auxpass(born-5, are-2)
det(actors-4, the-3)
nsubjpass(born-5, actors-4)
root(ROOT-0, born-5)
case(New York City-7, in-6)
nmod(born-5, New York City-7)
case(1990-9, after-8)
nmod(born-5, 1990-9)

PARSE TREE:(50) ROOT ROOT
    (52) Who CMT
        (54) actors NT
            (51) born NT
                (56) New York City VTTEXT
                (58) 1990 VTNUM
                    (59) after OT


===========
TRANSLATIONS
===========
TOT: 0.9003096105527639; NL: 0.9003096105527639; NL+AG: 0.969462671458005; NL+QF: 0.9620665829145729; rels: [tags]; projs: [actor_0.name]; preds: [director_0.birth_city = "New York City",writer_0.birth_year > 1990]; havings: []; superlative: []; blanks: 0
TOT: 0.9003096105527639; NL: 0.9003096105527639; NL+AG: 0.969462671458005; NL+QF: 0.9620665829145729; rels: [tags]; projs: [actor_0.name]; preds: [actor_0.birth_city = "New York City",writer_0.birth_year > 1990]; havings: []; superlative: []; blanks: 0
TOT: 0.9003096105527639; NL: 0.9003096105527639; NL+AG: 0.969462671458005; NL+QF: 0.9620665829145729; rels: [tags]; projs: [actor_0.name]; preds: [producer_0.birth_city = "New York City",writer_0.birth_year > 1990]; havings: []; superlative: []; blanks: 0
TOT: 0.9003096105527639; NL: 0.9003096105527639; NL+AG: 0.969462671458005; NL+QF: 0.9620665829145729; rels: [tags]; projs: [actor_0.name]; preds: [writer_0.birth_city = "New York City",writer_0.birth_year > 1990]; havings: []; superlative: []; blanks: 0
TOT: 0.900209108040201; NL: 0.900209108040201; NL+AG: 0.9693621689454421; NL+QF: 0.9619912060301509; rels: [tags]; projs: [actor_0.name]; preds: [director_0.birth_city = "New York City",producer_0.birth_year > 1990]; havings: []; superlative: []; blanks: 0
TOT: 0.900209108040201; NL: 0.900209108040201; NL+AG: 0.9693621689454421; NL+QF: 0.9619912060301509; rels: [tags]; projs: [actor_0.name]; preds: [actor_0.birth_city = "New York City",producer_0.birth_year > 1990]; havings: []; superlative: []; blanks: 0
TOT: 0.900209108040201; NL: 0.900209108040201; NL+AG: 0.9693621689454421; NL+QF: 0.9619912060301509; rels: [tags]; projs: [actor_0.name]; preds: [producer_0.birth_city = "New York City",producer_0.birth_year > 1990]; havings: []; superlative: []; blanks: 0
TOT: 0.900209108040201; NL: 0.900209108040201; NL+AG: 0.9693621689454421; NL+QF: 0.9619912060301509; rels: [tags]; projs: [actor_0.name]; preds: [writer_0.birth_city = "New York City",producer_0.birth_year > 1990]; havings: []; superlative: []; blanks: 0
TOT: 0.9001588567839196; NL: 0.9001588567839196; NL+AG: 0.9693119176891607; NL+QF: 0.9619535175879399; rels: [tags]; projs: [actor_0.name]; preds: [director_0.birth_city = "New York City",director_0.birth_year > 1990]; havings: []; superlative: []; blanks: 0
TOT: 0.9001588567839196; NL: 0.9001588567839196; NL+AG: 0.9693119176891607; NL+QF: 0.9619535175879399; rels: [tags]; projs: [actor_0.name]; preds: [actor_0.birth_city = "New York City",director_0.birth_year > 1990]; havings: []; superlative: []; blanks: 0

===========
RESULTS
===========
TOT: 0.894520800161522; TR: 0.9003096105527639; SMP: 0.3214285714285714; select actor_0.name from actor as actor_0, cast as cast_0, movie as movie_0, tags as tags_0, tv_series as tv_series_0, writer as writer_0, written_by as written_by_0 where actor_0.birth_city = "New York City" and writer_0.birth_year > 1990 and actor_0.aid = cast_0.aid and cast_0.msid = tv_series_0.sid and movie_0.mid = tags_0.msid and movie_0.mid = written_by_0.msid and tags_0.msid = tv_series_0.sid and writer_0.wid = written_by_0.wid
TOT: 0.894520800161522; TR: 0.9003096105527639; SMP: 0.3214285714285714; select actor_0.name from actor as actor_0, cast as cast_0, movie as movie_0, tags as tags_0, tv_series as tv_series_0, writer as writer_0, written_by as written_by_0 where writer_0.birth_city = "New York City" and writer_0.birth_year > 1990 and actor_0.aid = cast_0.aid and cast_0.msid = tv_series_0.sid and movie_0.mid = tags_0.msid and movie_0.mid = written_by_0.msid and tags_0.msid = tv_series_0.sid and writer_0.wid = written_by_0.wid
TOT: 0.894520800161522; TR: 0.9003096105527639; SMP: 0.3214285714285714; select actor_0.name from actor as actor_0, cast as cast_0, movie as movie_0, movie as movie_1, tags as tags_0, writer as writer_0, written_by as written_by_0 where actor_0.birth_city = "New York City" and writer_0.birth_year > 1990 and actor_0.aid = cast_0.aid and cast_0.msid = movie_1.mid and movie_0.mid = tags_0.msid and movie_0.mid = written_by_0.msid and movie_1.mid = tags_0.msid and writer_0.wid = written_by_0.wid
TOT: 0.894520800161522; TR: 0.9003096105527639; SMP: 0.3214285714285714; select actor_0.name from actor as actor_0, cast as cast_0, movie as movie_0, movie as movie_1, tags as tags_0, writer as writer_0, written_by as written_by_0 where writer_0.birth_city = "New York City" and writer_0.birth_year > 1990 and actor_0.aid = cast_0.aid and cast_0.msid = movie_1.mid and movie_0.mid = tags_0.msid and movie_0.mid = written_by_0.msid and movie_1.mid = tags_0.msid and writer_0.wid = written_by_0.wid
TOT: 0.894520800161522; TR: 0.9003096105527639; SMP: 0.3214285714285714; select actor_0.name from actor as actor_0, cast as cast_0, movie as movie_0, tags as tags_0, tv_series as tv_series_0, writer as writer_0, written_by as written_by_0 where actor_0.birth_city = "New York City" and writer_0.birth_year > 1990 and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and movie_0.mid = tags_0.msid and tags_0.msid = tv_series_0.sid and tv_series_0.sid = written_by_0.msid and writer_0.wid = written_by_0.wid
TOT: 0.894520800161522; TR: 0.9003096105527639; SMP: 0.3214285714285714; select actor_0.name from actor as actor_0, cast as cast_0, movie as movie_0, tags as tags_0, tv_series as tv_series_0, writer as writer_0, written_by as written_by_0 where writer_0.birth_city = "New York City" and writer_0.birth_year > 1990 and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and movie_0.mid = tags_0.msid and tags_0.msid = tv_series_0.sid and tv_series_0.sid = written_by_0.msid and writer_0.wid = written_by_0.wid
TOT: 0.894520800161522; TR: 0.9003096105527639; SMP: 0.3214285714285714; select actor_0.name from actor as actor_0, cast as cast_0, tags as tags_0, tv_series as tv_series_0, tv_series as tv_series_1, writer as writer_0, written_by as written_by_0 where actor_0.birth_city = "New York City" and writer_0.birth_year > 1990 and actor_0.aid = cast_0.aid and cast_0.msid = tv_series_1.sid and tags_0.msid = tv_series_0.sid and tags_0.msid = tv_series_1.sid and tv_series_0.sid = written_by_0.msid and writer_0.wid = written_by_0.wid
TOT: 0.894520800161522; TR: 0.9003096105527639; SMP: 0.3214285714285714; select actor_0.name from actor as actor_0, cast as cast_0, tags as tags_0, tv_series as tv_series_0, tv_series as tv_series_1, writer as writer_0, written_by as written_by_0 where writer_0.birth_city = "New York City" and writer_0.birth_year > 1990 and actor_0.aid = cast_0.aid and cast_0.msid = tv_series_1.sid and tags_0.msid = tv_series_0.sid and tags_0.msid = tv_series_1.sid and tv_series_0.sid = written_by_0.msid and writer_0.wid = written_by_0.wid
TOT: 0.8944213026740847; TR: 0.900209108040201; SMP: 0.3214285714285714; select actor_0.name from actor as actor_0, cast as cast_0, made_by as made_by_0, movie as movie_0, movie as movie_1, producer as producer_0, tags as tags_0 where actor_0.birth_city = "New York City" and producer_0.birth_year > 1990 and actor_0.aid = cast_0.aid and cast_0.msid = movie_1.mid and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid and movie_0.mid = tags_0.msid and movie_1.mid = tags_0.msid
TOT: 0.8944213026740847; TR: 0.900209108040201; SMP: 0.3214285714285714; select actor_0.name from actor as actor_0, cast as cast_0, made_by as made_by_0, movie as movie_0, movie as movie_1, producer as producer_0, tags as tags_0 where producer_0.birth_city = "New York City" and producer_0.birth_year > 1990 and actor_0.aid = cast_0.aid and cast_0.msid = movie_1.mid and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid and movie_0.mid = tags_0.msid and movie_1.mid = tags_0.msid


00:37  INFO: ================
00:37  INFO: QUERY 65: Who acts as "Alan Turing" in the movie "The Imitation Game"?
00:37  INFO: ================
61. ROOT: ROOT; NA; ; (0) 
62. acts: NT; NA; ; (0) director.did(0.65):| movie.release_year(0.63):| actor.name(0.62):| actor(0.62):| genre.genre(0.62):| 
64. Alan Turing: VTTEXT; NA; ; (0) cast.role(0.99):Alan Turing; Alan Turing; Alana Turing; | movie.title(0.78):Decoding Alan Turing; Decoding Alan Turing; Dear Alan: A Tribute; | director.name(0.74):Allen Turing; Alan Tang; Alan Tang; | writer.name(0.74):Allen Turing; Alan Tang; Alan Tang; | actor.name(0.73):Allen Turing; Alan King; Alan King; | 
66. The Imitation Game: VTTEXT; NA; ; (0) movie.title(0.95):The Imitation Game; The Imitation Game; The Imitation Game; | cast.role(0.8):The Imitation Game &; The Imitation Game &; The Imitation Game &; | tv_series.title(0.67):The Temptation Game; The Game; The Game; | keyword.keyword(0.65):imitation; imitation; camel-imitation; | company.name(0.63):Game Station, the; Game Station; Imagination Games; | 
69. movie: NT; NA; ; (0) movie.title(1.0):| movie(1.0):| company.name(0.92):Movie; Movie Movie; Movies; | cast.role(0.87):Movie; Movie F; Movie AD; | keyword.keyword(0.81):movie-in-movie; b-movie; z-movie; | 
Who, WP
acts, VBZ
as, IN
Alan Turing, NNP
in, IN
the, DT
movie, NN
The Imitation Game, NN
nsubj(acts-2, Who-1)
root(ROOT-0, acts-2)
case(Alan Turing-4, as-3)
nmod(acts-2, Alan Turing-4)
case(The Imitation Game-8, in-5)
det(The Imitation Game-8, the-6)
compound(The Imitation Game-8, movie-7)
nmod(acts-2, The Imitation Game-8)

PARSE TREE:(61) ROOT ROOT
    (62) acts NT
        (64) Alan Turing VTTEXT
        (66) The Imitation Game VTTEXT
            (69) movie NT


===========
TRANSLATIONS
===========
TOT: 0.7966269482569956; NL: 0.7966269482569956; NL+AG: 0.931461607347905; NL+QF: 0.9370070105984507; rels: []; projs: [director_0.did]; preds: [cast_0.role = "Alan Turing",movie_0.title = "The Imitation Game",company_0.name = "Movie"]; havings: []; superlative: []; blanks: 0
TOT: 0.7938581982569957; NL: 0.7938581982569957; NL+AG: 0.931461607347905; NL+QF: 0.9381139105984508; rels: []; projs: [movie_0.release_year]; preds: [cast_0.role = "Alan Turing",movie_0.title = "The Imitation Game",company_0.name = "Movie"]; havings: []; superlative: []; blanks: 0
TOT: 0.7921269482569957; NL: 0.7921269482569957; NL+AG: 0.957553625086264; NL+QF: 0.9403376944826476; rels: []; projs: [actor_0.name]; preds: [cast_0.role = "Alan Turing",movie_0.title = "The Imitation Game",company_0.name = "Movie"]; havings: []; superlative: []; blanks: 0
TOT: 0.7918956982569958; NL: 0.7918956982569958; NL+AG: 0.957553625086264; NL+QF: 0.9376000540767115; rels: []; projs: [genre_0.genre]; preds: [cast_0.role = "Alan Turing",movie_0.title = "The Imitation Game",company_0.name = "Movie"]; havings: []; superlative: []; blanks: 0
TOT: 0.7843378521170645; NL: 0.7843378521170645; NL+AG: 0.9191725112079736; NL+QF: 0.9299740590904468; rels: []; projs: [director_0.did]; preds: [cast_0.role = "Alan Turing",movie_0.title = "The Imitation Game",cast_0.role = "Movie"]; havings: []; superlative: []; blanks: 0
TOT: 0.7815691021170645; NL: 0.7815691021170645; NL+AG: 0.9191725112079736; NL+QF: 0.9310809590904469; rels: []; projs: [movie_0.release_year]; preds: [cast_0.role = "Alan Turing",movie_0.title = "The Imitation Game",cast_0.role = "Movie"]; havings: []; superlative: []; blanks: 0
TOT: 0.7798378521170646; NL: 0.7798378521170646; NL+AG: 0.9452645289463328; NL+QF: 0.9368785697033939; rels: []; projs: [actor_0.name]; preds: [cast_0.role = "Alan Turing",movie_0.title = "The Imitation Game",cast_0.role = "Movie"]; havings: []; superlative: []; blanks: 0
TOT: 0.7796066021170645; NL: 0.7796066021170645; NL+AG: 0.9452645289463328; NL+QF: 0.9305671025687077; rels: []; projs: [genre_0.genre]; preds: [cast_0.role = "Alan Turing",movie_0.title = "The Imitation Game",cast_0.role = "Movie"]; havings: []; superlative: []; blanks: 0
TOT: 0.7709455443440344; NL: 0.7709455443440344; NL+AG: 0.9556745847480749; NL+QF: 0.9527479445555459; rels: []; projs: [director_0.did]; preds: [cast_0.role = "Alan Turing",movie_0.title = "The Imitation Game"]; havings: []; superlative: []; blanks: 0
TOT: 0.7676605308806753; NL: 0.7676605308806753; NL+AG: 0.9024951899715845; NL+QF: 0.9152821975662104; rels: []; projs: [director_0.did]; preds: [cast_0.role = "Alan Turing",movie_0.title = "The Imitation Game",keyword_0.keyword = "movie-in-movie"]; havings: []; superlative: []; blanks: 0

===========
RESULTS
===========
TOT: 0.791994012107759; TR: 0.7966269482569956; SMP: 0.3333333333333333; select director_0.did from cast as cast_0, company as company_0, copyright as copyright_0, directed_by as directed_by_0, director as director_0, movie as movie_0 where cast_0.role = "Alan Turing" and company_0.name = "Movie" and movie_0.title = "The Imitation Game" and cast_0.msid = movie_0.mid and company_0.id = copyright_0.cid and copyright_0.msid = movie_0.mid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid
TOT: 0.7918749644887114; TR: 0.7966269482569956; SMP: 0.3214285714285714; select director_0.did from cast as cast_0, company as company_0, copyright as copyright_0, directed_by as directed_by_0, director as director_0, movie as movie_0, movie as movie_1 where cast_0.role = "Alan Turing" and company_0.name = "Movie" and movie_0.title = "The Imitation Game" and cast_0.msid = movie_0.mid and cast_0.msid = movie_1.mid and company_0.id = copyright_0.cid and copyright_0.msid = movie_0.mid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_1.mid
TOT: 0.7918749644887114; TR: 0.7966269482569956; SMP: 0.3214285714285714; select director_0.did from cast as cast_0, company as company_0, copyright as copyright_0, directed_by as directed_by_0, director as director_0, movie as movie_0, tv_series as tv_series_0 where cast_0.role = "Alan Turing" and company_0.name = "Movie" and movie_0.title = "The Imitation Game" and cast_0.msid = movie_0.mid and company_0.id = copyright_0.cid and copyright_0.msid = tv_series_0.sid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and directed_by_0.msid = tv_series_0.sid
TOT: 0.7918749644887114; TR: 0.7966269482569956; SMP: 0.3214285714285714; select director_0.did from cast as cast_0, company as company_0, copyright as copyright_0, directed_by as directed_by_0, director as director_0, movie as movie_0, movie as movie_1 where cast_0.role = "Alan Turing" and company_0.name = "Movie" and movie_0.title = "The Imitation Game" and cast_0.msid = movie_1.mid and company_0.id = copyright_0.cid and copyright_0.msid = movie_0.mid and copyright_0.msid = movie_1.mid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid
TOT: 0.7918749644887114; TR: 0.7966269482569956; SMP: 0.3214285714285714; select director_0.did from cast as cast_0, company as company_0, copyright as copyright_0, directed_by as directed_by_0, director as director_0, movie as movie_0, tv_series as tv_series_0 where cast_0.role = "Alan Turing" and company_0.name = "Movie" and movie_0.title = "The Imitation Game" and cast_0.msid = movie_0.mid and company_0.id = copyright_0.cid and copyright_0.msid = movie_0.mid and copyright_0.msid = tv_series_0.sid and directed_by_0.did = director_0.did and directed_by_0.msid = tv_series_0.sid
TOT: 0.7918749644887114; TR: 0.7966269482569956; SMP: 0.3214285714285714; select director_0.did from cast as cast_0, company as company_0, copyright as copyright_0, directed_by as directed_by_0, director as director_0, movie as movie_0, movie as movie_1 where cast_0.role = "Alan Turing" and company_0.name = "Movie" and movie_0.title = "The Imitation Game" and cast_0.msid = movie_1.mid and company_0.id = copyright_0.cid and copyright_0.msid = movie_0.mid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and directed_by_0.msid = movie_1.mid
TOT: 0.7918749644887114; TR: 0.7966269482569956; SMP: 0.3214285714285714; select director_0.did from cast as cast_0, company as company_0, copyright as copyright_0, directed_by as directed_by_0, director as director_0, movie as movie_0, tv_series as tv_series_0 where cast_0.role = "Alan Turing" and company_0.name = "Movie" and movie_0.title = "The Imitation Game" and cast_0.msid = tv_series_0.sid and company_0.id = copyright_0.cid and copyright_0.msid = movie_0.mid and copyright_0.msid = tv_series_0.sid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid
TOT: 0.7918749644887114; TR: 0.7966269482569956; SMP: 0.3214285714285714; select director_0.did from cast as cast_0, company as company_0, copyright as copyright_0, directed_by as directed_by_0, director as director_0, movie as movie_0, tv_series as tv_series_0 where cast_0.role = "Alan Turing" and company_0.name = "Movie" and movie_0.title = "The Imitation Game" and cast_0.msid = tv_series_0.sid and company_0.id = copyright_0.cid and copyright_0.msid = movie_0.mid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and directed_by_0.msid = tv_series_0.sid
TOT: 0.7918749644887114; TR: 0.7966269482569956; SMP: 0.3214285714285714; select director_0.did from cast as cast_0, company as company_0, copyright as copyright_0, directed_by as directed_by_0, director as director_0, movie as movie_0, tv_series as tv_series_0 where cast_0.role = "Alan Turing" and company_0.name = "Movie" and movie_0.title = "The Imitation Game" and cast_0.msid = movie_0.mid and cast_0.msid = tv_series_0.sid and company_0.id = copyright_0.cid and copyright_0.msid = tv_series_0.sid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid
TOT: 0.7918749644887114; TR: 0.7966269482569956; SMP: 0.3214285714285714; select director_0.did from cast as cast_0, company as company_0, copyright as copyright_0, directed_by as directed_by_0, director as director_0, movie as movie_0, tv_series as tv_series_0 where cast_0.role = "Alan Turing" and company_0.name = "Movie" and movie_0.title = "The Imitation Game" and cast_0.msid = movie_0.mid and cast_0.msid = tv_series_0.sid and company_0.id = copyright_0.cid and copyright_0.msid = movie_0.mid and directed_by_0.did = director_0.did and directed_by_0.msid = tv_series_0.sid


00:40  INFO: ================
00:40  INFO: QUERY 70: Give me the name of all the actors from Afghanistan
00:40  INFO: ================
00:41  INFO: ================
00:41  INFO: QUERY 40: Find all movies about Autism
00:41  INFO: ================
83. ROOT: ROOT; NA; ; (0) 
84. Find: CMT; NA; ; (0) 
85. movies: NT; NA; all; (0) movie.title(1.0):| movie(1.0):| company.name(0.91):Movies; Movie; W Movies; | tv_series.title(0.8):Movies, Movies, Movi; Moon Movies; Movie Memories; | cast.role(0.79):Movie; KPC Movies; Movie F; | 
87. Autism: VTTEXT; NA; ; (0) movie.title(0.97):Autism; Autism; Autism x 6; | keyword.keyword(0.81):autism; autism-spectrum-diso; treatment-for-autism; | director.birth_city(0.63):| director.birth_year(0.63):| actor.birth_city(0.63):| 
Find, VB
all, DT
movies, NNS
about, IN
Autism, NNP
root(ROOT-0, Find-1)
det(movies-3, all-2)
dobj(Find-1, movies-3)
case(Autism-5, about-4)
nmod(Find-1, Autism-5)

PARSE TREE:(83) ROOT ROOT
    (84) Find CMT
        (85) movies NT
        (87) Autism VTTEXT


===========
TRANSLATIONS
===========
TOT: 0.9872677996249963; NL: 0.9872677996249963; NL+AG: 0.9872677996249963; NL+QF: 0.9939036385629814; rels: []; projs: [movie_0.title]; preds: [movie_0.title = "Autism"]; havings: []; superlative: []; blanks: 0
TOT: 0.9283128021727874; NL: 0.9283128021727874; NL+AG: 0.9283128021727874; NL+QF: 0.9522085347818584; rels: []; projs: [company_0.id]; preds: [company_0.name = "Movies",movie_0.title = "Autism"]; havings: []; superlative: []; blanks: 0
TOT: 0.9031091257262771; NL: 0.9031091257262771; NL+AG: 0.9031091257262771; NL+QF: 0.9591140974991389; rels: []; projs: [movie_0.title]; preds: [keyword_0.keyword = "autism"]; havings: []; superlative: []; blanks: 0
TOT: 0.8722070195736413; NL: 0.8722070195736413; NL+AG: 0.8722070195736413; NL+QF: 0.9148046797157608; rels: []; projs: [company_0.id]; preds: [company_0.name = "Movies",keyword_0.keyword = "autism"]; havings: []; superlative: []; blanks: 0
TOT: 0.8310177996249963; NL: 0.8310177996249963; NL+AG: 0.9775117020640207; NL+QF: 0.9436338998124982; rels: []; projs: [tv_series_0.title]; preds: [movie_0.title = "Autism"]; havings: []; superlative: []; blanks: 0
TOT: 0.8057927996249964; NL: 0.8057927996249964; NL+AG: 0.9775117020640207; NL+QF: 0.9436338998124982; rels: []; projs: [cast_0.role]; preds: [movie_0.title = "Autism"]; havings: []; superlative: []; blanks: 0
TOT: 0.8034676024227899; NL: 0.8034676024227899; NL+AG: 0.9027365740213739; NL+QF: 0.9162861757427693; rels: []; projs: [company_0.id]; preds: [company_0.name = "Movies"]; havings: []; superlative: []; blanks: 1
TOT: 0.8; NL: 0.8; NL+AG: 0.9606141521466671; NL+QF: 0.9529459647198468; rels: []; projs: [movie_0.title]; preds: []; havings: []; superlative: []; blanks: 1
TOT: 0.7468591257262771; NL: 0.7468591257262771; NL+AG: 0.8933530281653015; NL+QF: 0.9015545628631385; rels: []; projs: [tv_series_0.title]; preds: [keyword_0.keyword = "autism"]; havings: []; superlative: []; blanks: 0
TOT: 0.721634125726277; NL: 0.721634125726277; NL+AG: 0.8933530281653015; NL+QF: 0.9015545628631385; rels: []; projs: [cast_0.role]; preds: [keyword_0.keyword = "autism"]; havings: []; superlative: []; blanks: 0

===========
RESULTS
===========
TOT: 0.9811451216287463; TR: 0.9872677996249963; SMP: 0.375; select movie_1.title from movie as movie_0, movie as movie_1, tags as tags_0, tags as tags_1 where movie_0.title = "Autism" and movie_0.mid = tags_0.msid and movie_1.mid = tags_1.msid and tags_0.id = tags_1.id
TOT: 0.9811451216287463; TR: 0.9872677996249963; SMP: 0.375; select movie_0.title from movie as movie_0, movie as movie_1, tags as tags_0, tags as tags_1 where movie_1.title = "Autism" and movie_0.mid = tags_0.msid and movie_1.mid = tags_1.msid and tags_0.id = tags_1.id
TOT: 0.9811451216287463; TR: 0.9872677996249963; SMP: 0.375; select movie_1.title from copyright as copyright_0, copyright as copyright_1, movie as movie_0, movie as movie_1 where movie_0.title = "Autism" and copyright_0.id = copyright_1.id and copyright_0.msid = movie_0.mid and copyright_1.msid = movie_1.mid
TOT: 0.9811451216287463; TR: 0.9872677996249963; SMP: 0.375; select movie_0.title from copyright as copyright_0, copyright as copyright_1, movie as movie_0, movie as movie_1 where movie_1.title = "Autism" and copyright_0.id = copyright_1.id and copyright_0.msid = movie_0.mid and copyright_1.msid = movie_1.mid
TOT: 0.9811451216287463; TR: 0.9872677996249963; SMP: 0.375; select movie_1.title from movie as movie_0, movie as movie_1, written_by as written_by_0, written_by as written_by_1 where movie_0.title = "Autism" and movie_0.mid = written_by_0.msid and movie_1.mid = written_by_1.msid and written_by_0.id = written_by_1.id
TOT: 0.9811451216287463; TR: 0.9872677996249963; SMP: 0.375; select movie_0.title from movie as movie_0, movie as movie_1, written_by as written_by_0, written_by as written_by_1 where movie_1.title = "Autism" and movie_0.mid = written_by_0.msid and movie_1.mid = written_by_1.msid and written_by_0.id = written_by_1.id
TOT: 0.9811451216287463; TR: 0.9872677996249963; SMP: 0.375; select movie_1.title from classification as classification_0, classification as classification_1, movie as movie_0, movie as movie_1 where movie_0.title = "Autism" and classification_0.id = classification_1.id and classification_0.msid = movie_0.mid and classification_1.msid = movie_1.mid
TOT: 0.9811451216287463; TR: 0.9872677996249963; SMP: 0.375; select movie_0.title from classification as classification_0, classification as classification_1, movie as movie_0, movie as movie_1 where movie_1.title = "Autism" and classification_0.id = classification_1.id and classification_0.msid = movie_0.mid and classification_1.msid = movie_1.mid
TOT: 0.9231963408177262; TR: 0.9283128021727874; SMP: 0.41666666666666663; select company_0.id from company as company_0, copyright as copyright_0, movie as movie_0 where company_0.name = "Movies" and movie_0.title = "Autism" and company_0.id = copyright_0.cid and copyright_0.msid = movie_0.mid
TOT: 0.898244701135681; TR: 0.9031091257262771; SMP: 0.41666666666666663; select movie_0.title from keyword as keyword_0, movie as movie_0, tags as tags_0 where keyword_0.keyword = "autism" and keyword_0.id = tags_0.kid and movie_0.mid = tags_0.msid


00:41  INFO: ================
00:41  INFO: QUERY 87: What is the number of movies in which "Jennifer Aniston" acted after 2010?
00:41  INFO: ================
90. ROOT: ROOT; NA; ; (0) 
91. What: CMT; NA; ; (0) 
93. number of: FT; count; ; (0) 
95. movies: NT; NA; ; (0) movie.title(1.0):| movie(1.0):| company.name(0.91):Movies; Movie; W Movies; | tv_series.title(0.8):Movies, Movies, Movi; Moon Movies; Movie Memories; | cast.role(0.79):Movie; KPC Movies; Movie F; | 
97. acted: NT; NA; ; (0) director.did(0.65):| movie.release_year(0.63):| actor.name(0.62):| actor(0.62):| genre.genre(0.62):| 
100. Jennifer Aniston: VTTEXT; NA; ; (0) director.name(0.99):Jennifer Aniston; Jennifer Aniston; Jennifer Aniston Pit; | actor.name(0.99):Jennifer Aniston; Jennifer Aniston; Jennifer Aniston Pit; | producer.name(0.99):Jennifer Aniston; Jennifer Aniston; Jennifer Aniston Pit; | cast.role(0.9):Jennifer Faniston; Jennifer Faniston; Jennifer Tangston; | writer.name(0.84):Jennifer An; Jennifer An; Jennifer Piston; | 
101. 2010: VTNUM; NA; ; (0) actor.birth_year(1.0):2011; 2013; 2013; | movie.release_year(1.0):2012; 2014; 2015; | 
102. after: OT; >; ; (0) 
What, WP
is, VBZ
the, DT
number, NN
of, IN
movies, NNS
in, IN
which, WDT
Jennifer Aniston, NNP
acted, VBD
after, IN
2010, CD
root(ROOT-0, What-1)
cop(What-1, is-2)
det(number-4, the-3)
nsubj(What-1, number-4)
case(movies-6, of-5)
nmod(number-4, movies-6)
case(which-8, in-7)
nmod(acted-10, which-8)
nsubj(acted-10, Jennifer Aniston-9)
acl:relcl(movies-6, acted-10)
case(2010-12, after-11)
nmod(acted-10, 2010-12)

PARSE TREE:(90) ROOT ROOT
    (91) What CMT
        (93) number of FT
            (95) movies NT
                (97) acted NT
                    (100) Jennifer Aniston VTTEXT
                    (101) 2010 VTNUM
                        (102) after OT


===========
TRANSLATIONS
===========
TOT: 0.9011155924964301; NL: 0.9011155924964301; NL+AG: 0.9658619142932486; NL+QF: 0.9648427417442654; rels: [actor]; projs: [count(distinct(movie_0.title))]; preds: [director_0.name = "Jennifer Aniston",actor_0.birth_year > 2010]; havings: []; superlative: []; blanks: 0
TOT: 0.9011155924964301; NL: 0.9011155924964301; NL+AG: 0.9658619142932486; NL+QF: 0.9693051513657297; rels: [actor]; projs: [count(distinct(movie_0.title))]; preds: [actor_0.name = "Jennifer Aniston",actor_0.birth_year > 2010]; havings: []; superlative: []; blanks: 0
TOT: 0.9011155924964301; NL: 0.9011155924964301; NL+AG: 0.9658619142932486; NL+QF: 0.9629488964555104; rels: [actor]; projs: [count(distinct(movie_0.title))]; preds: [producer_0.name = "Jennifer Aniston",actor_0.birth_year > 2010]; havings: []; superlative: []; blanks: 0
TOT: 0.9009912143869774; NL: 0.9009912143869774; NL+AG: 0.9657375361837959; NL+QF: 0.9632634739818825; rels: [actor]; projs: [count(distinct(movie_0.title))]; preds: [director_0.name = "Jennifer Aniston",movie_0.release_year > 2010]; havings: []; superlative: []; blanks: 0
TOT: 0.9009912143869774; NL: 0.9009912143869774; NL+AG: 0.9657375361837959; NL+QF: 0.9674770462660853; rels: [actor]; projs: [count(distinct(movie_0.title))]; preds: [actor_0.name = "Jennifer Aniston",movie_0.release_year > 2010]; havings: []; superlative: []; blanks: 0
TOT: 0.9009912143869774; NL: 0.9009912143869774; NL+AG: 0.9657375361837959; NL+QF: 0.9613385240259698; rels: [actor]; projs: [count(distinct(movie_0.title))]; preds: [producer_0.name = "Jennifer Aniston",movie_0.release_year > 2010]; havings: []; superlative: []; blanks: 0
TOT: 0.8966030924964301; NL: 0.8966030924964301; NL+AG: 0.9658619142932486; NL+QF: 0.9641023239735106; rels: []; projs: [count(distinct(movie_0.title))]; preds: [director_0.name = "Jennifer Aniston",actor_0.birth_year > 2010]; havings: []; superlative: []; blanks: 1
TOT: 0.8966030924964301; NL: 0.8966030924964301; NL+AG: 0.9658619142932486; NL+QF: 0.9640133403722094; rels: []; projs: [count(distinct(movie_0.title))]; preds: [actor_0.name = "Jennifer Aniston",actor_0.birth_year > 2010]; havings: []; superlative: []; blanks: 1
TOT: 0.8966030924964301; NL: 0.8966030924964301; NL+AG: 0.9658619142932486; NL+QF: 0.9651652270729486; rels: []; projs: [count(distinct(movie_0.title))]; preds: [producer_0.name = "Jennifer Aniston",actor_0.birth_year > 2010]; havings: []; superlative: []; blanks: 1
TOT: 0.8964787143869773; NL: 0.8964787143869773; NL+AG: 0.9657375361837959; NL+QF: 0.9636408671913843; rels: []; projs: [count(distinct(movie_0.title))]; preds: [director_0.name = "Jennifer Aniston",movie_0.release_year > 2010]; havings: []; superlative: []; blanks: 1

===========
RESULTS
===========
TOT: 0.8962711032381325; TR: 0.9011155924964301; SMP: 0.41666666666666663; select count(distinct(movie_0.title)) from actor as actor_0, cast as cast_0, movie as movie_0 where actor_0.birth_year > 2010 and actor_0.name = "Jennifer Aniston" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid
TOT: 0.8961479689097742; TR: 0.9009912143869774; SMP: 0.41666666666666663; select count(distinct(movie_0.title)) from actor as actor_0, cast as cast_0, movie as movie_0 where actor_0.name = "Jennifer Aniston" and movie_0.release_year > 2010 and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid
TOT: 0.8956044365714658; TR: 0.9011155924964301; SMP: 0.35; select count(distinct(movie_0.title)) from actor as actor_0, cast as cast_0, made_by as made_by_0, movie as movie_0, producer as producer_0 where actor_0.birth_year > 2010 and producer_0.name = "Jennifer Aniston" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid
TOT: 0.8956044365714658; TR: 0.9011155924964301; SMP: 0.35; select count(distinct(movie_0.title)) from actor as actor_0, cast as cast_0, directed_by as directed_by_0, director as director_0, movie as movie_0 where actor_0.birth_year > 2010 and director_0.name = "Jennifer Aniston" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid
TOT: 0.8953187222857516; TR: 0.9011155924964301; SMP: 0.3214285714285714; select count(distinct(movie_0.title)) from actor as actor_0, cast as cast_0, directed_by as directed_by_0, directed_by as directed_by_1, director as director_0, movie as movie_0, tv_series as tv_series_0 where actor_0.birth_year > 2010 and director_0.name = "Jennifer Aniston" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and directed_by_0.msid = movie_0.mid and directed_by_0.msid = tv_series_0.sid and directed_by_1.did = director_0.did and directed_by_1.msid = tv_series_0.sid
TOT: 0.8953187222857516; TR: 0.9011155924964301; SMP: 0.3214285714285714; select count(distinct(movie_0.title)) from actor as actor_0, cast as cast_0, cast as cast_1, made_by as made_by_0, movie as movie_0, producer as producer_0, tv_series as tv_series_0 where actor_0.birth_year > 2010 and producer_0.name = "Jennifer Aniston" and actor_0.aid = cast_1.aid and cast_0.msid = movie_0.mid and cast_0.msid = tv_series_0.sid and cast_1.msid = tv_series_0.sid and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid
TOT: 0.8953187222857516; TR: 0.9011155924964301; SMP: 0.3214285714285714; select count(distinct(movie_0.title)) from actor as actor_0, cast as cast_0, directed_by as directed_by_0, director as director_0, made_by as made_by_0, movie as movie_0, movie as movie_1 where actor_0.birth_year > 2010 and director_0.name = "Jennifer Aniston" and actor_0.aid = cast_0.aid and cast_0.msid = movie_1.mid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and made_by_0.msid = movie_0.mid and made_by_0.msid = movie_1.mid
TOT: 0.8953187222857516; TR: 0.9011155924964301; SMP: 0.3214285714285714; select count(distinct(movie_0.title)) from actor as actor_0, cast as cast_0, classification as classification_0, directed_by as directed_by_0, director as director_0, movie as movie_0, tv_series as tv_series_0 where actor_0.birth_year > 2010 and director_0.name = "Jennifer Aniston" and actor_0.aid = cast_0.aid and cast_0.msid = tv_series_0.sid and classification_0.msid = movie_0.mid and classification_0.msid = tv_series_0.sid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid
TOT: 0.8953187222857516; TR: 0.9011155924964301; SMP: 0.3214285714285714; select count(distinct(movie_0.title)) from actor as actor_0, cast as cast_0, made_by as made_by_0, made_by as made_by_1, movie as movie_0, producer as producer_0, tv_series as tv_series_0 where actor_0.birth_year > 2010 and producer_0.name = "Jennifer Aniston" and actor_0.aid = cast_0.aid and cast_0.msid = tv_series_0.sid and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid and made_by_1.msid = tv_series_0.sid and made_by_1.pid = producer_0.pid
TOT: 0.8953187222857516; TR: 0.9011155924964301; SMP: 0.3214285714285714; select count(distinct(movie_0.title)) from actor as actor_0, cast as cast_0, made_by as made_by_0, movie as movie_0, movie as movie_1, producer as producer_0, tags as tags_0 where actor_0.birth_year > 2010 and producer_0.name = "Jennifer Aniston" and actor_0.aid = cast_0.aid and cast_0.msid = movie_1.mid and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid and movie_0.mid = tags_0.msid and movie_1.mid = tags_0.msid


00:44  INFO: ================
00:44  INFO: QUERY 55: Find all movies featuring Kevin Spacey
00:44  INFO: ================
104. ROOT: ROOT; NA; ; (0) 
105. Find: CMT; NA; ; (0) 
106. featuring: NT; NA; ; (0) movie.release_year(0.64):| producer.name(0.64):| producer(0.64):| made_by(0.64):| movie.title_aka(0.62):| 
107. movies: NT; NA; all; (0) movie.title(1.0):| movie(1.0):| company.name(0.91):Movies; Movie; W Movies; | tv_series.title(0.8):Movies, Movies, Movi; Moon Movies; Movie Memories; | cast.role(0.79):Movie; KPC Movies; Movie F; | 
109. Spacey: VTTEXT; NA; ; (0) cast.role(1.0):Spacey; Spacey; Spacey; | company.name(0.98):Spacey; Kevin Spacey Foundat; | movie.title(0.75):05 Spaceys; 06 Spaceys; 07 Spaceys; | actor.name(0.69):John Spacey; Kevin Spacey; John G. Spacey; | director.name(0.67):Kevin Spacey; Kevin Spacey Fowler; | 
110. Kevin: VTTEXT; NA; ; (0) movie.title(1.0):Kevin; Kevin; Kevin; | director.name(1.0):Kevin; Kevin; Kevin; | actor.name(0.91):Kevin Kevin; Kevin Devine; Kevin Devine; | cast.role(0.82):Kevin 2; Kevin -; Kevin 1; | producer.name(0.8):Kevin Linke; Kevin Lin; Kevin Key; | 
Find, VB
all, DT
movies, NNS
featuring, VBG
Kevin, NNP
Spacey, NNP
root(ROOT-0, Find-1)
det(movies-3, all-2)
nsubj(featuring-4, movies-3)
dep(Find-1, featuring-4)
compound(Spacey-6, Kevin-5)
dobj(featuring-4, Spacey-6)

PARSE TREE:(104) ROOT ROOT
    (105) Find CMT
        (106) featuring NT
            (107) movies NT
            (109) Spacey VTTEXT
                (110) Kevin VTTEXT


===========
TRANSLATIONS
===========
TOT: 0.9107749999999999; NL: 0.9107749999999999; NL+AG: 0.9687039345063537; NL+QF: 0.9662596615384615; rels: [movie]; projs: [movie_0.release_year]; preds: [cast_0.role = "Spacey",movie_0.title = "Kevin"]; havings: []; superlative: []; blanks: 0
TOT: 0.9107749999999999; NL: 0.9107749999999999; NL+AG: 0.9687039345063537; NL+QF: 0.9657773365384614; rels: [movie]; projs: [movie_0.release_year]; preds: [cast_0.role = "Spacey",director_0.name = "Kevin"]; havings: []; superlative: []; blanks: 0
TOT: 0.910725; NL: 0.910725; NL+AG: 0.9852754892561789; NL+QF: 0.9625; rels: [movie]; projs: [producer_0.name]; preds: [cast_0.role = "Spacey",movie_0.title = "Kevin"]; havings: []; superlative: []; blanks: 0
TOT: 0.910725; NL: 0.910725; NL+AG: 0.9852754892561789; NL+QF: 0.9624999999999999; rels: [movie]; projs: [producer_0.name]; preds: [cast_0.role = "Spacey",director_0.name = "Kevin"]; havings: []; superlative: []; blanks: 0
TOT: 0.9059375; NL: 0.9059375; NL+AG: 0.9852754892561789; NL+QF: 0.9625; rels: [movie]; projs: [movie_0.title_aka]; preds: [cast_0.role = "Spacey",movie_0.title = "Kevin"]; havings: []; superlative: []; blanks: 0
TOT: 0.9059375; NL: 0.9059375; NL+AG: 0.9852754892561789; NL+QF: 0.9624999999999999; rels: [movie]; projs: [movie_0.title_aka]; preds: [cast_0.role = "Spacey",director_0.name = "Kevin"]; havings: []; superlative: []; blanks: 0
TOT: 0.905775; NL: 0.905775; NL+AG: 0.9637039345063538; NL+QF: 0.9625096615384615; rels: [movie]; projs: [movie_0.release_year]; preds: [company_0.name = "Spacey",movie_0.title = "Kevin"]; havings: []; superlative: []; blanks: 0
TOT: 0.905775; NL: 0.905775; NL+AG: 0.9637039345063538; NL+QF: 0.9620273365384615; rels: [movie]; projs: [movie_0.release_year]; preds: [company_0.name = "Spacey",director_0.name = "Kevin"]; havings: []; superlative: []; blanks: 0
TOT: 0.9057249999999999; NL: 0.9057249999999999; NL+AG: 0.9802754892561789; NL+QF: 0.95875; rels: [movie]; projs: [producer_0.name]; preds: [company_0.name = "Spacey",movie_0.title = "Kevin"]; havings: []; superlative: []; blanks: 0
TOT: 0.9057249999999999; NL: 0.9057249999999999; NL+AG: 0.9802754892561789; NL+QF: 0.95875; rels: [movie]; projs: [producer_0.name]; preds: [company_0.name = "Spacey",director_0.name = "Kevin"]; havings: []; superlative: []; blanks: 0

===========
RESULTS
===========
TOT: 0.9066672499999999; TR: 0.9107749999999999; SMP: 0.5; select movie_0.release_year from cast as cast_0, movie as movie_0 where cast_0.role = "Spacey" and movie_0.title = "Kevin" and cast_0.msid = movie_0.mid
TOT: 0.90541725; TR: 0.9107749999999999; SMP: 0.375; select movie_0.release_year from cast as cast_0, directed_by as directed_by_0, director as director_0, movie as movie_0 where cast_0.role = "Spacey" and director_0.name = "Kevin" and cast_0.msid = movie_0.mid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid
TOT: 0.90536775; TR: 0.910725; SMP: 0.375; select producer_0.name from cast as cast_0, made_by as made_by_0, movie as movie_0, producer as producer_0 where cast_0.role = "Spacey" and movie_0.title = "Kevin" and cast_0.msid = movie_0.mid and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid
TOT: 0.9050005833333332; TR: 0.9107749999999999; SMP: 0.3333333333333333; select movie_0.release_year from cast as cast_0, directed_by as directed_by_0, director as director_0, movie as movie_0, tags as tags_0, tv_series as tv_series_0 where cast_0.role = "Spacey" and director_0.name = "Kevin" and cast_0.msid = tv_series_0.sid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and movie_0.mid = tags_0.msid and tags_0.msid = tv_series_0.sid
TOT: 0.9050005833333332; TR: 0.9107749999999999; SMP: 0.3333333333333333; select movie_0.release_year from cast as cast_0, classification as classification_0, directed_by as directed_by_0, director as director_0, movie as movie_0, movie as movie_1 where cast_0.role = "Spacey" and director_0.name = "Kevin" and cast_0.msid = movie_1.mid and classification_0.msid = movie_0.mid and classification_0.msid = movie_1.mid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid
TOT: 0.9050005833333332; TR: 0.9107749999999999; SMP: 0.3333333333333333; select movie_0.release_year from cast as cast_0, directed_by as directed_by_0, director as director_0, made_by as made_by_0, movie as movie_0, tv_series as tv_series_0 where cast_0.role = "Spacey" and director_0.name = "Kevin" and cast_0.msid = tv_series_0.sid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and made_by_0.msid = movie_0.mid and made_by_0.msid = tv_series_0.sid
TOT: 0.9050005833333332; TR: 0.9107749999999999; SMP: 0.3333333333333333; select movie_0.release_year from cast as cast_0, directed_by as directed_by_0, directed_by as directed_by_1, director as director_0, movie as movie_0, tv_series as tv_series_0 where cast_0.role = "Spacey" and director_0.name = "Kevin" and cast_0.msid = tv_series_0.sid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and directed_by_1.did = director_0.did and directed_by_1.msid = tv_series_0.sid
TOT: 0.9050005833333332; TR: 0.9107749999999999; SMP: 0.3333333333333333; select movie_0.release_year from cast as cast_0, directed_by as directed_by_0, director as director_0, movie as movie_0, tv_series as tv_series_0, written_by as written_by_0 where cast_0.role = "Spacey" and director_0.name = "Kevin" and cast_0.msid = tv_series_0.sid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and movie_0.mid = written_by_0.msid and tv_series_0.sid = written_by_0.msid
TOT: 0.9050005833333332; TR: 0.9107749999999999; SMP: 0.3333333333333333; select movie_0.release_year from cast as cast_0, directed_by as directed_by_0, director as director_0, movie as movie_0, movie as movie_1, written_by as written_by_0 where cast_0.role = "Spacey" and director_0.name = "Kevin" and cast_0.msid = movie_1.mid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and movie_0.mid = written_by_0.msid and movie_1.mid = written_by_0.msid
TOT: 0.9050005833333332; TR: 0.9107749999999999; SMP: 0.3333333333333333; select movie_0.release_year from cast as cast_0, copyright as copyright_0, directed_by as directed_by_0, director as director_0, movie as movie_0, tv_series as tv_series_0 where cast_0.role = "Spacey" and director_0.name = "Kevin" and cast_0.msid = tv_series_0.sid and copyright_0.msid = movie_0.mid and copyright_0.msid = tv_series_0.sid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid


00:46  INFO: ================
00:46  INFO: QUERY 50: Find the producers of all movies in which "Kate Winslet" is an actor
00:46  INFO: ================
00:48  INFO: ================
00:48  INFO: QUERY 100: How many movies did "Matt Damon" direct?
00:48  INFO: ================
00:50  INFO: ================
00:50  INFO: QUERY 121: Who acted in the most number of movies directed by "Jim Jarmusch"
00:50  INFO: ================
134. ROOT: ROOT; NA; ; (0) 
135. acted: NT; NA; ; (0) director.did(0.65):| movie.release_year(0.63):| actor.name(0.62):| actor(0.62):| genre.genre(0.62):| 
137. number of: FT; count; ; (0) 
140. most: FT; max; ; (0) 
141. movies: NT; NA; ; (0) movie.title(1.0):| movie(1.0):| company.name(0.91):Movies; Movie; W Movies; | tv_series.title(0.8):Movies, Movies, Movi; Moon Movies; Movie Memories; | cast.role(0.79):Movie; KPC Movies; Movie F; | 
143. directed: NT; NA; ; (0) directed_by(1.0):| director.name(0.72):| director(0.72):| producer.name(0.69):| producer(0.69):| 
144. Jim Jarmusch: VTTEXT; NA; ; (0) director.name(0.98):Jim Jarmusch; Jim Jarmusch; Tom Jarmusch; | actor.name(0.98):Jim Jarmusch; Jim Jarmusch; Tom Jarmusch; | producer.name(0.98):Jim Jarmusch; Jim Jarmusch; Tom Jarmusch; | writer.name(0.96):Jim Jarmusch; Jim Jarmusch; James R. Jarmusch; | movie.title(0.81):Behind Jim Jarmusch; Behind Jim Jarmusch; Focus on Jim Jarmusc; | 
Who, WP
acted, VBD
in, IN
the, DT
most, JJS
number, NN
of, IN
movies, NNS
directed, VBN
by, IN
Jim Jarmusch, NNP
nsubj(acted-2, Who-1)
root(ROOT-0, acted-2)
case(number-6, in-3)
det(number-6, the-4)
amod(number-6, most-5)
nmod(acted-2, number-6)
case(movies-8, of-7)
nmod(number-6, movies-8)
acl(movies-8, directed-9)
case(Jim Jarmusch-11, by-10)
nmod(directed-9, Jim Jarmusch-11)

PARSE TREE:(134) ROOT ROOT
    (135) acted NT
        (141) movies NT
            (143) directed NT
                (144) Jim Jarmusch VTTEXT


===========
TRANSLATIONS
===========
TOT: 0.8617686363636363; NL: 0.8617686363636363; NL+AG: 0.9674614271749755; NL+QF: 0.9654813878203907; rels: [directed_by]; projs: [director_0.did]; preds: [director_0.name = "Jim Jarmusch"]; havings: []; superlative: [count(distinct(movie_0.title)) desc limit 1]; blanks: 0
TOT: 0.8617686363636363; NL: 0.8617686363636363; NL+AG: 0.9674614271749755; NL+QF: 0.9651355371900825; rels: [directed_by]; projs: [director_0.did]; preds: [actor_0.name = "Jim Jarmusch"]; havings: []; superlative: [count(distinct(movie_0.title)) desc limit 1]; blanks: 0
TOT: 0.8617686363636363; NL: 0.8617686363636363; NL+AG: 0.9674614271749755; NL+QF: 0.965090909090909; rels: [directed_by]; projs: [director_0.did]; preds: [producer_0.name = "Jim Jarmusch"]; havings: []; superlative: [count(distinct(movie_0.title)) desc limit 1]; blanks: 0
TOT: 0.8595536363636362; NL: 0.8595536363636362; NL+AG: 0.9674614271749755; NL+QF: 0.9660716159369631; rels: [directed_by]; projs: [movie_0.release_year]; preds: [director_0.name = "Jim Jarmusch"]; havings: []; superlative: [count(distinct(movie_0.title)) desc limit 1]; blanks: 0
TOT: 0.8595536363636362; NL: 0.8595536363636362; NL+AG: 0.9674614271749755; NL+QF: 0.9656107390309951; rels: [directed_by]; projs: [movie_0.release_year]; preds: [actor_0.name = "Jim Jarmusch"]; havings: []; superlative: [count(distinct(movie_0.title)) desc limit 1]; blanks: 0
TOT: 0.8595536363636362; NL: 0.8595536363636362; NL+AG: 0.9674614271749755; NL+QF: 0.9653569722488038; rels: [directed_by]; projs: [movie_0.release_year]; preds: [producer_0.name = "Jim Jarmusch"]; havings: []; superlative: [count(distinct(movie_0.title)) desc limit 1]; blanks: 0
TOT: 0.8581970429813366; NL: 0.8581970429813366; NL+AG: 0.9638898337926758; NL+QF: 0.9622336343850693; rels: [directed_by]; projs: [director_0.did]; preds: [writer_0.name = "Jim Jarmusch"]; havings: []; superlative: [count(distinct(movie_0.title)) desc limit 1]; blanks: 0
TOT: 0.8581686363636363; NL: 0.8581686363636363; NL+AG: 0.9767315015384497; NL+QF: 0.9665739675847496; rels: [directed_by]; projs: [actor_0.name]; preds: [director_0.name = "Jim Jarmusch"]; havings: []; superlative: [count(distinct(movie_0.title)) desc limit 1]; blanks: 0
TOT: 0.8581686363636363; NL: 0.8581686363636363; NL+AG: 0.9767315015384497; NL+QF: 0.9661823016009061; rels: [directed_by]; projs: [actor_0.name]; preds: [actor_0.name = "Jim Jarmusch"]; havings: []; superlative: [count(distinct(movie_0.title)) desc limit 1]; blanks: 0
TOT: 0.8581686363636363; NL: 0.8581686363636363; NL+AG: 0.9767315015384497; NL+QF: 0.9659960624089869; rels: [directed_by]; projs: [actor_0.name]; preds: [producer_0.name = "Jim Jarmusch"]; havings: []; superlative: [count(distinct(movie_0.title)) desc limit 1]; blanks: 0

===========
RESULTS
===========
TOT: 0.8573176166666666; TR: 0.8617686363636363; SMP: 0.41666666666666663; select director_0.did from directed_by as directed_by_0, director as director_0, movie as movie_0 where director_0.name = "Jim Jarmusch" and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid group by director_0.did order by count(distinct(movie_0.title)) desc limit 1
TOT: 0.8566509499999999; TR: 0.8617686363636363; SMP: 0.35; select director_0.did from actor as actor_0, cast as cast_0, directed_by as directed_by_0, director as director_0, movie as movie_0 where actor_0.name = "Jim Jarmusch" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid group by director_0.did order by count(distinct(movie_0.title)) desc limit 1
TOT: 0.8566509499999999; TR: 0.8617686363636363; SMP: 0.35; select director_0.did from directed_by as directed_by_0, director as director_0, made_by as made_by_0, movie as movie_0, producer as producer_0 where producer_0.name = "Jim Jarmusch" and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid group by director_0.did order by count(distinct(movie_0.title)) desc limit 1
TOT: 0.8563652357142857; TR: 0.8617686363636363; SMP: 0.3214285714285714; select director_0.did from actor as actor_0, cast as cast_0, directed_by as directed_by_0, directed_by as directed_by_1, director as director_0, movie as movie_0, tv_series as tv_series_0 where actor_0.name = "Jim Jarmusch" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and directed_by_0.msid = movie_0.mid and directed_by_0.msid = tv_series_0.sid and directed_by_1.did = director_0.did and directed_by_1.msid = tv_series_0.sid group by director_0.did order by count(distinct(movie_0.title)) desc limit 1
TOT: 0.8563652357142857; TR: 0.8617686363636363; SMP: 0.3214285714285714; select director_0.did from directed_by as directed_by_0, director as director_0, made_by as made_by_0, movie as movie_0, producer as producer_0, tags as tags_0, tv_series as tv_series_0 where producer_0.name = "Jim Jarmusch" and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and made_by_0.msid = tv_series_0.sid and made_by_0.pid = producer_0.pid and movie_0.mid = tags_0.msid and tags_0.msid = tv_series_0.sid group by director_0.did order by count(distinct(movie_0.title)) desc limit 1
TOT: 0.8563652357142857; TR: 0.8617686363636363; SMP: 0.3214285714285714; select director_0.did from actor as actor_0, cast as cast_0, directed_by as directed_by_0, director as director_0, made_by as made_by_0, movie as movie_0, movie as movie_1 where actor_0.name = "Jim Jarmusch" and actor_0.aid = cast_0.aid and cast_0.msid = movie_1.mid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and made_by_0.msid = movie_0.mid and made_by_0.msid = movie_1.mid group by director_0.did order by count(distinct(movie_0.title)) desc limit 1
TOT: 0.8563652357142857; TR: 0.8617686363636363; SMP: 0.3214285714285714; select director_0.did from directed_by as directed_by_0, director as director_0, made_by as made_by_0, made_by as made_by_1, movie as movie_0, producer as producer_0, tv_series as tv_series_0 where producer_0.name = "Jim Jarmusch" and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and made_by_0.msid = movie_0.mid and made_by_0.msid = tv_series_0.sid and made_by_1.msid = tv_series_0.sid and made_by_1.pid = producer_0.pid group by director_0.did order by count(distinct(movie_0.title)) desc limit 1
TOT: 0.8563652357142857; TR: 0.8617686363636363; SMP: 0.3214285714285714; select director_0.did from actor as actor_0, cast as cast_0, classification as classification_0, directed_by as directed_by_0, director as director_0, movie as movie_0, tv_series as tv_series_0 where actor_0.name = "Jim Jarmusch" and actor_0.aid = cast_0.aid and cast_0.msid = tv_series_0.sid and classification_0.msid = movie_0.mid and classification_0.msid = tv_series_0.sid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid group by director_0.did order by count(distinct(movie_0.title)) desc limit 1
TOT: 0.8563652357142857; TR: 0.8617686363636363; SMP: 0.3214285714285714; select director_0.did from directed_by as directed_by_0, directed_by as directed_by_1, director as director_0, made_by as made_by_0, movie as movie_0, producer as producer_0, tv_series as tv_series_0 where producer_0.name = "Jim Jarmusch" and directed_by_0.msid = movie_0.mid and directed_by_0.msid = tv_series_0.sid and directed_by_1.did = director_0.did and directed_by_1.msid = tv_series_0.sid and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid group by director_0.did order by count(distinct(movie_0.title)) desc limit 1
TOT: 0.8563652357142857; TR: 0.8617686363636363; SMP: 0.3214285714285714; select director_0.did from classification as classification_0, directed_by as directed_by_0, director as director_0, made_by as made_by_0, movie as movie_0, producer as producer_0, tv_series as tv_series_0 where producer_0.name = "Jim Jarmusch" and classification_0.msid = movie_0.mid and classification_0.msid = tv_series_0.sid and directed_by_0.did = director_0.did and directed_by_0.msid = tv_series_0.sid and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid group by director_0.did order by count(distinct(movie_0.title)) desc limit 1


00:52  INFO: ================
00:52  INFO: QUERY 39: Which movies did "Alfred Hitchcock" direct?
00:52  INFO: ================
147. ROOT: ROOT; NA; ; (0) 
148. direct: NT; NA; ; (0) directed_by(1.0):| director.name(0.72):| director(0.72):| producer.name(0.69):| producer(0.69):| 
149. movies: NT; NA; ; (0) movie.title(1.0):| movie(1.0):| company.name(0.91):Movies; Movie; W Movies; | tv_series.title(0.8):Movies, Movies, Movi; Moon Movies; Movie Memories; | cast.role(0.79):Movie; KPC Movies; Movie F; | 
152. Alfred Hitchcock: VTTEXT; NA; ; (0) actor.name(1.0):Alfred Hitchcock; Alfred Hitchcock; Alfred Hitchcock; | director.name(0.99):Alfred Hitchcock; Alfred Hitchcock; Sir Alfred Hitchcock; | producer.name(0.99):Alfred Hitchcock; Alfred Hitchcock; Sir Alfred Hitchcock; | writer.name(0.99):Alfred Hitchcock; Alfred Hitchcock; Sir Alfred Hitchcock; | cast.role(0.84):Alfred Hitchcock fig; Alfred Hitchcock fig; Alfred Hitchcock fig; | 
Which, WDT
movies, NN
did, VBD
Alfred Hitchcock, NNP
direct, VB
det(movies-2, Which-1)
dobj(direct-5, movies-2)
aux(direct-5, did-3)
nsubj(direct-5, Alfred Hitchcock-4)
root(ROOT-0, direct-5)

PARSE TREE:(147) ROOT ROOT
    (148) direct NT
        (149) movies NT
        (152) Alfred Hitchcock VTTEXT


===========
TRANSLATIONS
===========
TOT: 0.7545004678780615; NL: 0.7545004678780615; NL+AG: 0.9597283811571943; NL+QF: 0.9410505267448003; rels: []; projs: [director_0.name]; preds: [company_0.name = "Movies",actor_0.name = "Alfred Hitchcock"]; havings: []; superlative: []; blanks: 0
TOT: 0.7507845784326829; NL: 0.7507845784326829; NL+AG: 0.9560124917118156; NL+QF: 0.9385732671145477; rels: []; projs: [director_0.name]; preds: [company_0.name = "Movies",director_0.name = "Alfred Hitchcock"]; havings: []; superlative: []; blanks: 0
TOT: 0.7507845784326829; NL: 0.7507845784326829; NL+AG: 0.9560124917118156; NL+QF: 0.9385732671145477; rels: []; projs: [director_0.name]; preds: [company_0.name = "Movies",producer_0.name = "Alfred Hitchcock"]; havings: []; superlative: []; blanks: 0
TOT: 0.7507845784326829; NL: 0.7507845784326829; NL+AG: 0.9560124917118156; NL+QF: 0.9385732671145477; rels: []; projs: [director_0.name]; preds: [company_0.name = "Movies",writer_0.name = "Alfred Hitchcock"]; havings: []; superlative: []; blanks: 0
TOT: 0.7506838012113949; NL: 0.7506838012113949; NL+AG: 0.9597283811571943; NL+QF: 0.9344892008075966; rels: []; projs: [producer_0.name]; preds: [company_0.name = "Movies",actor_0.name = "Alfred Hitchcock"]; havings: []; superlative: []; blanks: 0
TOT: 0.7469679117660162; NL: 0.7469679117660162; NL+AG: 0.9560124917118156; NL+QF: 0.9320119411773441; rels: []; projs: [producer_0.name]; preds: [company_0.name = "Movies",director_0.name = "Alfred Hitchcock"]; havings: []; superlative: []; blanks: 0
TOT: 0.7469679117660162; NL: 0.7469679117660162; NL+AG: 0.9560124917118156; NL+QF: 0.9320119411773441; rels: []; projs: [producer_0.name]; preds: [company_0.name = "Movies",producer_0.name = "Alfred Hitchcock"]; havings: []; superlative: []; blanks: 0
TOT: 0.7469679117660162; NL: 0.7469679117660162; NL+AG: 0.9560124917118156; NL+QF: 0.9320119411773441; rels: []; projs: [producer_0.name]; preds: [company_0.name = "Movies",writer_0.name = "Alfred Hitchcock"]; havings: []; superlative: []; blanks: 0
TOT: 0.7192159061475166; NL: 0.7192159061475166; NL+AG: 0.968295288722118; NL+QF: 0.9111111111111111; rels: []; projs: [director_0.name]; preds: [tv_series_0.title = "Movies, Movies, Movies",actor_0.name = "Alfred Hitchcock"]; havings: []; superlative: []; blanks: 0
TOT: 0.716642715783251; NL: 0.716642715783251; NL+AG: 0.968295288722118; NL+QF: 0.9121772769661276; rels: []; projs: [director_0.name]; preds: [cast_0.role = "Movie",actor_0.name = "Alfred Hitchcock"]; havings: []; superlative: []; blanks: 0

===========
RESULTS
===========
TOT: 0.7501697489135666; TR: 0.7545004678780615; SMP: 0.3214285714285714; select director_0.name from actor as actor_0, cast as cast_0, company as company_0, copyright as copyright_0, directed_by as directed_by_0, director as director_0, movie as movie_0 where actor_0.name = "Alfred Hitchcock" and company_0.name = "Movies" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and company_0.id = copyright_0.cid and copyright_0.msid = movie_0.mid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid
TOT: 0.7501697489135666; TR: 0.7545004678780615; SMP: 0.3214285714285714; select director_0.name from actor as actor_0, cast as cast_0, company as company_0, copyright as copyright_0, directed_by as directed_by_0, director as director_0, tv_series as tv_series_0 where actor_0.name = "Alfred Hitchcock" and company_0.name = "Movies" and actor_0.aid = cast_0.aid and cast_0.msid = tv_series_0.sid and company_0.id = copyright_0.cid and copyright_0.msid = tv_series_0.sid and directed_by_0.did = director_0.did and directed_by_0.msid = tv_series_0.sid
TOT: 0.7464910183626418; TR: 0.7507845784326829; SMP: 0.3214285714285714; select director_0.name from company as company_0, copyright as copyright_0, directed_by as directed_by_0, director as director_0, made_by as made_by_0, producer as producer_0, tv_series as tv_series_0 where company_0.name = "Movies" and producer_0.name = "Alfred Hitchcock" and company_0.id = copyright_0.cid and copyright_0.msid = tv_series_0.sid and directed_by_0.did = director_0.did and directed_by_0.msid = tv_series_0.sid and made_by_0.msid = tv_series_0.sid and made_by_0.pid = producer_0.pid
TOT: 0.7464910183626418; TR: 0.7507845784326829; SMP: 0.3214285714285714; select director_0.name from company as company_0, copyright as copyright_0, directed_by as directed_by_0, director as director_0, movie as movie_0, writer as writer_0, written_by as written_by_0 where company_0.name = "Movies" and writer_0.name = "Alfred Hitchcock" and company_0.id = copyright_0.cid and copyright_0.msid = movie_0.mid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and movie_0.mid = written_by_0.msid and writer_0.wid = written_by_0.wid
TOT: 0.7464910183626418; TR: 0.7507845784326829; SMP: 0.3214285714285714; select director_0.name from company as company_0, copyright as copyright_0, directed_by as directed_by_0, director as director_0, tv_series as tv_series_0, writer as writer_0, written_by as written_by_0 where company_0.name = "Movies" and writer_0.name = "Alfred Hitchcock" and company_0.id = copyright_0.cid and copyright_0.msid = tv_series_0.sid and directed_by_0.did = director_0.did and directed_by_0.msid = tv_series_0.sid and tv_series_0.sid = written_by_0.msid and writer_0.wid = written_by_0.wid
TOT: 0.7464910183626418; TR: 0.7507845784326829; SMP: 0.3214285714285714; select director_1.name from company as company_0, copyright as copyright_0, directed_by as directed_by_0, directed_by as directed_by_1, director as director_0, director as director_1, movie as movie_0 where company_0.name = "Movies" and director_0.name = "Alfred Hitchcock" and company_0.id = copyright_0.cid and copyright_0.msid = movie_0.mid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and directed_by_1.did = director_1.did and directed_by_1.msid = movie_0.mid
TOT: 0.7464910183626418; TR: 0.7507845784326829; SMP: 0.3214285714285714; select director_0.name from company as company_0, copyright as copyright_0, directed_by as directed_by_0, directed_by as directed_by_1, director as director_0, director as director_1, movie as movie_0 where company_0.name = "Movies" and director_1.name = "Alfred Hitchcock" and company_0.id = copyright_0.cid and copyright_0.msid = movie_0.mid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and directed_by_1.did = director_1.did and directed_by_1.msid = movie_0.mid
TOT: 0.7464910183626418; TR: 0.7507845784326829; SMP: 0.3214285714285714; select director_0.name from company as company_0, copyright as copyright_0, directed_by as directed_by_0, director as director_0, made_by as made_by_0, movie as movie_0, producer as producer_0 where company_0.name = "Movies" and producer_0.name = "Alfred Hitchcock" and company_0.id = copyright_0.cid and copyright_0.msid = movie_0.mid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid
TOT: 0.7464910183626418; TR: 0.7507845784326829; SMP: 0.3214285714285714; select director_1.name from company as company_0, copyright as copyright_0, directed_by as directed_by_0, directed_by as directed_by_1, director as director_0, director as director_1, tv_series as tv_series_0 where company_0.name = "Movies" and director_0.name = "Alfred Hitchcock" and company_0.id = copyright_0.cid and copyright_0.msid = tv_series_0.sid and directed_by_0.did = director_0.did and directed_by_0.msid = tv_series_0.sid and directed_by_1.did = director_1.did and directed_by_1.msid = tv_series_0.sid
TOT: 0.7464910183626418; TR: 0.7507845784326829; SMP: 0.3214285714285714; select director_0.name from company as company_0, copyright as copyright_0, directed_by as directed_by_0, directed_by as directed_by_1, director as director_0, director as director_1, tv_series as tv_series_0 where company_0.name = "Movies" and director_1.name = "Alfred Hitchcock" and company_0.id = copyright_0.cid and copyright_0.msid = tv_series_0.sid and directed_by_0.did = director_0.did and directed_by_0.msid = tv_series_0.sid and directed_by_1.did = director_1.did and directed_by_1.msid = tv_series_0.sid


00:53  INFO: ================
00:53  INFO: QUERY 10: In what year was "Kevin Spacey" born?
00:53  INFO: ================
00:54  INFO: ================
00:54  INFO: QUERY 13: What is the nationality of "Kevin Spacey"?
00:54  INFO: ================
00:55  INFO: ================
00:55  INFO: QUERY 74: Find all actors from Canada who acted in "James Bond" movies
00:55  INFO: ================
00:57  INFO: ================
00:57  INFO: QUERY 83: What are the major roles in the movie "Daddy Long Legs"
00:57  INFO: ================
182. ROOT: ROOT; NA; ; (0) 
183. What: CMT; NA; ; (0) 
185. roles: NT; NA; ; (0) cast.role(0.82):| movie.title(0.79):Roles; Rolê; The Role; | tv_series.title(0.77):Roles; Role Call; Role Play; | actor.name(0.69):| actor(0.69):| 
187. major: VTTEXT; NA; ; (0) director.name(1.0):Major; Major; Major; | actor.name(1.0):Major; Major; Major; | producer.name(0.98):Major; Major; BP Major; | movie.title(0.94):Major; Major!; Minor/Major; | cast.role(0.91):Major Major; Maj. Major Major; Maj. Major Major; | 
188. Daddy Long Legs: VTTEXT; NA; ; (0) movie.title(0.95):Daddy Long Legs; Daddy Long Legs; Daddy Long Legs; | actor.name(0.94):Daddy Long Legs; Daddy Long Legs; Daddy Longlegs; | director.name(0.93):Daddy Long Legs; Daddy Long Legs; Daddy Long Legs of W; | cast.role(0.8):Lady Long Legs; Long Leg; Sweet Daddy Longlegs; | producer.name(0.74):Long Legs; Long Legs; Din Long Lee; | 
191. movie: NT; NA; ; (0) movie.title(1.0):| movie(1.0):| company.name(0.92):Movie; Movie Movie; Movies; | cast.role(0.87):Movie; Movie F; Movie AD; | keyword.keyword(0.81):movie-in-movie; b-movie; z-movie; | 
What, WP
are, VBP
the, DT
major, JJ
roles, NNS
in, IN
the, DT
movie, NN
Daddy Long Legs, NNS
root(ROOT-0, What-1)
cop(What-1, are-2)
det(roles-5, the-3)
amod(roles-5, major-4)
nsubj(What-1, roles-5)
case(Daddy Long Legs-9, in-6)
det(Daddy Long Legs-9, the-7)
compound(Daddy Long Legs-9, movie-8)
nmod(roles-5, Daddy Long Legs-9)

PARSE TREE:(182) ROOT ROOT
    (183) What CMT
        (185) roles NT
            (187) major VTTEXT
            (188) Daddy Long Legs VTTEXT
                (191) movie NT


===========
TRANSLATIONS
===========
TOT: 0.9404416666666666; NL: 0.9404416666666666; NL+AG: 0.9404416666666666; NL+QF: 0.9602944444444445; rels: []; projs: [cast_0.role]; preds: [director_0.name = "Major",movie_0.title = "Daddy Long Legs"]; havings: []; superlative: []; blanks: 0
TOT: 0.9404416666666666; NL: 0.9404416666666666; NL+AG: 0.9404416666666666; NL+QF: 0.9602944444444445; rels: []; projs: [cast_0.role]; preds: [actor_0.name = "Major",movie_0.title = "Daddy Long Legs"]; havings: []; superlative: []; blanks: 0
TOT: 0.9323059648672819; NL: 0.9323059648672819; NL+AG: 0.9323059648672819; NL+QF: 0.9548706432448545; rels: []; projs: [cast_0.role]; preds: [producer_0.name = "Major",movie_0.title = "Daddy Long Legs"]; havings: []; superlative: []; blanks: 0
TOT: 0.9206073136495593; NL: 0.9206073136495593; NL+AG: 0.9206073136495593; NL+QF: 0.9470715424330396; rels: []; projs: [cast_0.role]; preds: [movie_0.title = "Major",movie_0.title = "Daddy Long Legs"]; havings: []; superlative: []; blanks: 0
TOT: 0.9117219122868779; NL: 0.9117219122868779; NL+AG: 0.9117219122868779; NL+QF: 0.9430920364508729; rels: []; projs: [cast_0.role]; preds: [cast_0.role = "Major Major",movie_0.title = "Daddy Long Legs"]; havings: []; superlative: []; blanks: 0
TOT: 0.89555; NL: 0.89555; NL+AG: 0.9913279132791327; NL+QF: 0.9603656728674376; rels: []; projs: [actor_0.name]; preds: [director_0.name = "Major",movie_0.title = "Daddy Long Legs"]; havings: []; superlative: []; blanks: 0
TOT: 0.89555; NL: 0.89555; NL+AG: 0.9913279132791327; NL+QF: 0.9601462640075974; rels: []; projs: [actor_0.name]; preds: [actor_0.name = "Major",movie_0.title = "Daddy Long Legs"]; havings: []; superlative: []; blanks: 0
TOT: 0.8874142982006151; NL: 0.8874142982006151; NL+AG: 0.9831922114797479; NL+QF: 0.9540442899685013; rels: []; projs: [actor_0.name]; preds: [producer_0.name = "Major",movie_0.title = "Daddy Long Legs"]; havings: []; superlative: []; blanks: 0
TOT: 0.8757156469828926; NL: 0.8757156469828926; NL+AG: 0.9714935602620255; NL+QF: 0.9517520964220668; rels: []; projs: [actor_0.name]; preds: [movie_0.title = "Major",movie_0.title = "Daddy Long Legs"]; havings: []; superlative: []; blanks: 0
TOT: 0.86845; NL: 0.86845; NL+AG: 0.9913279132791327; NL+QF: 0.9594214645929068; rels: []; projs: [movie_0.title]; preds: [director_0.name = "Major",movie_0.title = "Daddy Long Legs"]; havings: []; superlative: []; blanks: 0

===========
RESULTS
===========
TOT: 0.9352039166666666; TR: 0.9404416666666666; SMP: 0.41666666666666663; select cast_0.role from actor as actor_0, cast as cast_0, movie as movie_0 where actor_0.name = "Major" and movie_0.title = "Daddy Long Legs" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid
TOT: 0.93478725; TR: 0.9404416666666666; SMP: 0.375; select cast_0.role from cast as cast_0, directed_by as directed_by_0, director as director_0, movie as movie_0 where director_0.name = "Major" and movie_0.title = "Daddy Long Legs" and cast_0.msid = movie_0.mid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid
TOT: 0.9343705833333332; TR: 0.9404416666666666; SMP: 0.3333333333333333; select cast_0.role from cast as cast_0, directed_by as directed_by_0, director as director_0, movie as movie_0, tags as tags_0, tv_series as tv_series_0 where director_0.name = "Major" and movie_0.title = "Daddy Long Legs" and cast_0.msid = tv_series_0.sid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and movie_0.mid = tags_0.msid and tags_0.msid = tv_series_0.sid
TOT: 0.9343705833333332; TR: 0.9404416666666666; SMP: 0.3333333333333333; select cast_0.role from cast as cast_0, classification as classification_0, directed_by as directed_by_0, director as director_0, movie as movie_0, movie as movie_1 where director_0.name = "Major" and movie_0.title = "Daddy Long Legs" and cast_0.msid = movie_1.mid and classification_0.msid = movie_0.mid and classification_0.msid = movie_1.mid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid
TOT: 0.9343705833333332; TR: 0.9404416666666666; SMP: 0.3333333333333333; select cast_0.role from cast as cast_0, directed_by as directed_by_0, director as director_0, made_by as made_by_0, movie as movie_0, tv_series as tv_series_0 where director_0.name = "Major" and movie_0.title = "Daddy Long Legs" and cast_0.msid = tv_series_0.sid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and made_by_0.msid = movie_0.mid and made_by_0.msid = tv_series_0.sid
TOT: 0.9343705833333332; TR: 0.9404416666666666; SMP: 0.3333333333333333; select cast_0.role from cast as cast_0, directed_by as directed_by_0, directed_by as directed_by_1, director as director_0, movie as movie_0, tv_series as tv_series_0 where director_0.name = "Major" and movie_0.title = "Daddy Long Legs" and cast_0.msid = tv_series_0.sid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and directed_by_1.did = director_0.did and directed_by_1.msid = tv_series_0.sid
TOT: 0.9343705833333332; TR: 0.9404416666666666; SMP: 0.3333333333333333; select cast_0.role from cast as cast_0, directed_by as directed_by_0, director as director_0, movie as movie_0, tv_series as tv_series_0, written_by as written_by_0 where director_0.name = "Major" and movie_0.title = "Daddy Long Legs" and cast_0.msid = tv_series_0.sid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and movie_0.mid = written_by_0.msid and tv_series_0.sid = written_by_0.msid
TOT: 0.9343705833333332; TR: 0.9404416666666666; SMP: 0.3333333333333333; select cast_0.role from cast as cast_0, directed_by as directed_by_0, director as director_0, movie as movie_0, movie as movie_1, written_by as written_by_0 where director_0.name = "Major" and movie_0.title = "Daddy Long Legs" and cast_0.msid = movie_1.mid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and movie_0.mid = written_by_0.msid and movie_1.mid = written_by_0.msid
TOT: 0.9343705833333332; TR: 0.9404416666666666; SMP: 0.3333333333333333; select cast_0.role from cast as cast_0, copyright as copyright_0, directed_by as directed_by_0, director as director_0, movie as movie_0, tv_series as tv_series_0 where director_0.name = "Major" and movie_0.title = "Daddy Long Legs" and cast_0.msid = tv_series_0.sid and copyright_0.msid = movie_0.mid and copyright_0.msid = tv_series_0.sid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid
TOT: 0.9343705833333332; TR: 0.9404416666666666; SMP: 0.3333333333333333; select cast_0.role from cast as cast_0, directed_by as directed_by_0, director as director_0, made_by as made_by_0, movie as movie_0, tv_series as tv_series_0 where director_0.name = "Major" and movie_0.title = "Daddy Long Legs" and cast_0.msid = movie_0.mid and directed_by_0.did = director_0.did and directed_by_0.msid = tv_series_0.sid and made_by_0.msid = movie_0.mid and made_by_0.msid = tv_series_0.sid


01:00  INFO: ================
01:00  INFO: QUERY 128: What is the latest movie by "Jim Jarmusch"
01:00  INFO: ================
193. ROOT: ROOT; NA; ; (0) 
194. What: CMT; NA; ; (0) 
196. movie: NT; NA; ; (0) movie.title(1.0):| movie(1.0):| company.name(0.92):Movie; Movie Movie; Movies; | cast.role(0.87):Movie; Movie F; Movie AD; | keyword.keyword(0.81):movie-in-movie; b-movie; z-movie; | 
198. latest: FT; max; ; (0) 
199. Jim Jarmusch: VTTEXT; NA; ; (0) director.name(0.98):Jim Jarmusch; Jim Jarmusch; Tom Jarmusch; | actor.name(0.98):Jim Jarmusch; Jim Jarmusch; Tom Jarmusch; | producer.name(0.98):Jim Jarmusch; Jim Jarmusch; Tom Jarmusch; | writer.name(0.96):Jim Jarmusch; Jim Jarmusch; James R. Jarmusch; | movie.title(0.81):Behind Jim Jarmusch; Behind Jim Jarmusch; Focus on Jim Jarmusc; | 
What, WP
is, VBZ
the, DT
latest, JJS
movie, NN
by, IN
Jim Jarmusch, NNP
root(ROOT-0, What-1)
cop(What-1, is-2)
det(movie-5, the-3)
amod(movie-5, latest-4)
nsubj(What-1, movie-5)
case(Jim Jarmusch-7, by-6)
nmod(movie-5, Jim Jarmusch-7)

PARSE TREE:(193) ROOT ROOT
    (194) What CMT
        (196) movie NT
            (199) Jim Jarmusch VTTEXT


===========
TRANSLATIONS
===========

===========
RESULTS
===========


01:00  INFO: ================
01:00  INFO: QUERY 114: Find all movies that star both "Angelina Jolie" and "Brad Pitt"
01:00  INFO: ================
202. ROOT: ROOT; NA; ; (0) 
203. Find: CMT; NA; ; (0) 
204. movies: NT; NA; all; (0) movie.title(1.0):| movie(1.0):| company.name(0.91):Movies; Movie; W Movies; | tv_series.title(0.8):Movies, Movies, Movi; Moon Movies; Movie Memories; | cast.role(0.79):Movie; KPC Movies; Movie F; | 
206. star: NT; NA; ; (0) actor.name(0.73):| actor(0.73):| cast.role(0.66):| cast(0.66):| movie.title(0.65):| 
208. Angelina Jolie: VTTEXT; NA; ; (0) director.name(0.99):Angelina Jolie; Angelina Jolie; Angelina Jolie Pitt; | actor.name(0.99):Angelina Jolie; Angelina Jolie; Angelina Jolie Pitt; | producer.name(0.99):Angelina Jolie; Angelina Jolie; Angelina Jolie Pitt; | writer.name(0.99):Angelina Jolie; Angelina Jolie; Angelina Jolie Pitt; | cast.role(0.82):Angelina John; Angelina John; Angelina Jolie Look-; | 
211. Brad Pitt: VTTEXT; NA; ; (0) actor.name(0.98):Brad Pitt; Brad Pitt; bRad sPitt; | producer.name(0.98):Brad Pitt; Brad Pitt; Mad Pitt; | cast.role(0.93):Brad Pitt'; Brad Pitt'; Brad Pitt #1; | writer.name(0.78):Brad Pruitt; Brad Pruitt; Brad Witt; | director.name(0.78):Brad Pruitt; Brad Pruitt; Brad Witty; | 
Find, VB
all, DT
movies, NNS
that, WDT
star, VB
both, CC
Angelina Jolie, NNP
and, CC
Brad Pitt, NNP
root(ROOT-0, Find-1)
det(movies-3, all-2)
dobj(Find-1, movies-3)
nsubj(star-5, that-4)
acl:relcl(movies-3, star-5)
cc:preconj(Angelina Jolie-7, both-6)
dobj(star-5, Angelina Jolie-7)
cc(Angelina Jolie-7, and-8)
conj(Angelina Jolie-7, Brad Pitt-9)

PARSE TREE:(202) ROOT ROOT
    (203) Find CMT
        (204) movies NT
            (206) star NT
                (208) Angelina Jolie VTTEXT
                (211) Brad Pitt VTTEXT


===========
TRANSLATIONS
===========
TOT: 0.989699443838958; NL: 0.989699443838958; NL+AG: 0.989699443838958; NL+QF: 0.9951488519194468; rels: []; projs: [movie_0.title]; preds: [director_0.name = "Angelina Jolie",actor_0.name = "Brad Pitt"]; havings: []; superlative: []; blanks: 0
TOT: 0.989699443838958; NL: 0.989699443838958; NL+AG: 0.989699443838958; NL+QF: 0.9953282134819567; rels: []; projs: [movie_0.title]; preds: [actor_0.name = "Angelina Jolie",actor_0.name = "Brad Pitt"]; havings: []; superlative: []; blanks: 0
TOT: 0.989699443838958; NL: 0.989699443838958; NL+AG: 0.989699443838958; NL+QF: 0.9953282134819567; rels: []; projs: [movie_0.title]; preds: [actor_0.name = "Angelina Jolie",actor_0.name = "Brad Pitt"]; havings: []; superlative: []; blanks: 0
TOT: 0.989699443838958; NL: 0.989699443838958; NL+AG: 0.989699443838958; NL+QF: 0.9943717004655515; rels: []; projs: [movie_0.title]; preds: [producer_0.name = "Angelina Jolie",actor_0.name = "Brad Pitt"]; havings: []; superlative: []; blanks: 0
TOT: 0.989699443838958; NL: 0.989699443838958; NL+AG: 0.989699443838958; NL+QF: 0.994379471169665; rels: []; projs: [movie_0.title]; preds: [writer_0.name = "Angelina Jolie",actor_0.name = "Brad Pitt"]; havings: []; superlative: []; blanks: 0
TOT: 0.989699443838958; NL: 0.989699443838958; NL+AG: 0.989699443838958; NL+QF: 0.9951488519194468; rels: []; projs: [movie_0.title]; preds: [director_0.name = "Angelina Jolie",actor_0.name = "Brad Pitt"]; havings: []; superlative: []; blanks: 0
TOT: 0.989699443838958; NL: 0.989699443838958; NL+AG: 0.989699443838958; NL+QF: 0.9953282134819567; rels: []; projs: [movie_0.title]; preds: [actor_0.name = "Angelina Jolie",actor_0.name = "Brad Pitt"]; havings: []; superlative: []; blanks: 0
TOT: 0.989699443838958; NL: 0.989699443838958; NL+AG: 0.989699443838958; NL+QF: 0.9943717004655515; rels: []; projs: [movie_0.title]; preds: [producer_0.name = "Angelina Jolie",actor_0.name = "Brad Pitt"]; havings: []; superlative: []; blanks: 0
TOT: 0.989699443838958; NL: 0.989699443838958; NL+AG: 0.989699443838958; NL+QF: 0.994379471169665; rels: []; projs: [movie_0.title]; preds: [writer_0.name = "Angelina Jolie",actor_0.name = "Brad Pitt"]; havings: []; superlative: []; blanks: 0
TOT: 0.9889269709840569; NL: 0.9889269709840569; NL+AG: 0.9889269709840569; NL+QF: 0.9937171917840316; rels: []; projs: [movie_0.title]; preds: [actor_0.name = "Angelina Jolie",producer_0.name = "Brad Pitt"]; havings: []; superlative: []; blanks: 0

===========
RESULTS
===========
TOT: 0.9833024494005684; TR: 0.989699443838958; SMP: 0.35; select movie_0.title from actor as actor_0, cast as cast_0, made_by as made_by_0, movie as movie_0, producer as producer_0 where actor_0.name = "Brad Pitt" and producer_0.name = "Angelina Jolie" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid
TOT: 0.9833024494005684; TR: 0.989699443838958; SMP: 0.35; select movie_0.title from actor as actor_0, cast as cast_0, movie as movie_0, writer as writer_0, written_by as written_by_0 where actor_0.name = "Brad Pitt" and writer_0.name = "Angelina Jolie" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and movie_0.mid = written_by_0.msid and writer_0.wid = written_by_0.wid
TOT: 0.9833024494005684; TR: 0.989699443838958; SMP: 0.35; select movie_0.title from actor as actor_0, cast as cast_0, directed_by as directed_by_0, director as director_0, movie as movie_0 where actor_0.name = "Brad Pitt" and director_0.name = "Angelina Jolie" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid
TOT: 0.9833024494005684; TR: 0.989699443838958; SMP: 0.35; select movie_0.title from actor as actor_0, actor as actor_1, cast as cast_0, cast as cast_1, movie as movie_0 where actor_0.name = "Angelina Jolie" and actor_1.name = "Brad Pitt" and actor_0.aid = cast_0.aid and actor_1.aid = cast_1.aid and cast_0.msid = movie_0.mid and cast_1.msid = movie_0.mid
TOT: 0.9833024494005684; TR: 0.989699443838958; SMP: 0.35; select movie_0.title from actor as actor_0, actor as actor_1, cast as cast_0, cast as cast_1, movie as movie_0 where actor_0.name = "Brad Pitt" and actor_1.name = "Angelina Jolie" and actor_0.aid = cast_0.aid and actor_1.aid = cast_1.aid and cast_0.msid = movie_0.mid and cast_1.msid = movie_0.mid
TOT: 0.9831357827339018; TR: 0.989699443838958; SMP: 0.3333333333333333; select movie_0.title from actor as actor_0, actor as actor_1, cast as cast_0, cast as cast_1, movie as movie_0, movie as movie_1 where actor_0.name = "Angelina Jolie" and actor_1.name = "Brad Pitt" and actor_0.aid = cast_0.aid and actor_1.aid = cast_1.aid and cast_0.msid = movie_0.mid and cast_1.msid = movie_1.mid and movie_0.mid = movie_1.mid
TOT: 0.9831357827339018; TR: 0.989699443838958; SMP: 0.3333333333333333; select movie_0.title from actor as actor_0, actor as actor_1, cast as cast_0, cast as cast_1, movie as movie_0, movie as movie_1 where actor_0.name = "Brad Pitt" and actor_1.name = "Angelina Jolie" and actor_0.aid = cast_0.aid and actor_1.aid = cast_1.aid and cast_0.msid = movie_0.mid and cast_1.msid = movie_1.mid and movie_0.mid = movie_1.mid
TOT: 0.9830167351148542; TR: 0.989699443838958; SMP: 0.3214285714285714; select movie_0.title from actor as actor_0, cast as cast_0, directed_by as directed_by_0, movie as movie_0, movie as movie_1, writer as writer_0, written_by as written_by_0 where actor_0.name = "Brad Pitt" and writer_0.name = "Angelina Jolie" and actor_0.aid = cast_0.aid and cast_0.msid = movie_1.mid and directed_by_0.msid = movie_0.mid and directed_by_0.msid = movie_1.mid and movie_0.mid = written_by_0.msid and writer_0.wid = written_by_0.wid
TOT: 0.9830167351148542; TR: 0.989699443838958; SMP: 0.3214285714285714; select movie_0.title from actor as actor_0, cast as cast_0, directed_by as directed_by_0, directed_by as directed_by_1, director as director_0, movie as movie_0, tv_series as tv_series_0 where actor_0.name = "Brad Pitt" and director_0.name = "Angelina Jolie" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and directed_by_0.msid = movie_0.mid and directed_by_0.msid = tv_series_0.sid and directed_by_1.did = director_0.did and directed_by_1.msid = tv_series_0.sid
TOT: 0.9830167351148542; TR: 0.989699443838958; SMP: 0.3214285714285714; select movie_0.title from actor as actor_0, cast as cast_0, movie as movie_0, movie as movie_1, writer as writer_0, written_by as written_by_0, written_by as written_by_1 where actor_0.name = "Brad Pitt" and writer_0.name = "Angelina Jolie" and actor_0.aid = cast_0.aid and cast_0.msid = movie_1.mid and movie_0.mid = written_by_0.msid and movie_0.mid = written_by_1.msid and movie_1.mid = written_by_0.msid and writer_0.wid = written_by_1.wid


01:02  INFO: ================
01:02  INFO: QUERY 49: Find the directors of all movies featuring "Kate Winslet"
01:02  INFO: ================
01:03  INFO: ================
01:03  INFO: QUERY 28: Find all comedies produced in year 2015
01:03  INFO: ================
223. ROOT: ROOT; NA; ; (0) 
224. Find: CMT; NA; ; (0) 
225. comedies: VTTEXT; NA; all; (0) company.name(0.77):Comus Comedies; Cub Comedies; Radio Comedies; | movie.title(0.76):| movie(0.76):| actor.name(0.72):| actor(0.72):| 
227. produced: NT; NA; ; (0) producer.name(1.0):| producer(1.0):| made_by(0.74):| directed_by(0.69):| cast.role(0.63):| 
228. year: NT; NA; ; (0) movie.release_year(1.0):| director.birth_year(1.0):| actor.birth_year(1.0):| producer.birth_year(1.0):| writer.birth_year(1.0):| 
230. 2015: VTNUM; NA; ; (0) movie.release_year(1.0):2015; 2015; 2015; | 
Find, VB
all, DT
comedies, NNS
produced, VBN
in, IN
year, NN
2015, CD
root(ROOT-0, Find-1)
det(comedies-3, all-2)
dobj(Find-1, comedies-3)
acl(comedies-3, produced-4)
case(year-6, in-5)
nmod(produced-4, year-6)
nummod(year-6, 2015-7)

PARSE TREE:(223) ROOT ROOT
    (224) Find CMT
        (225) comedies VTTEXT
            (227) produced NT
                (228) year NT
                    (230) 2015 VTNUM


===========
TRANSLATIONS
===========
TOT: 0.9199666666666667; NL: 0.9199666666666667; NL+AG: 0.960989802387766; NL+QF: 0.9566813333333334; rels: [producer]; projs: [movie_0.title]; preds: [movie_0.release_year = 2015]; havings: []; superlative: []; blanks: 0
TOT: 0.90555; NL: 0.90555; NL+AG: 0.960989802387766; NL+QF: 0.9555555555555556; rels: [producer]; projs: [actor_0.name]; preds: [movie_0.release_year = 2015]; havings: []; superlative: []; blanks: 0
TOT: 0.8858930422782693; NL: 0.8858930422782693; NL+AG: 0.9340377673646837; NL+QF: 0.925; rels: [producer]; projs: [company_0.id]; preds: [company_0.name = "Comus Comedies",movie_0.release_year = 2015]; havings: []; superlative: []; blanks: 0
TOT: 0.839975; NL: 0.839975; NL+AG: 0.9346358733798678; NL+QF: 0.9280034379166373; rels: [producer]; projs: [movie_0.title]; preds: [movie_0.release_year = 2015]; havings: []; superlative: []; blanks: 1
TOT: 0.8341500000000001; NL: 0.8341500000000001; NL+AG: 0.9235241517212461; NL+QF: 0.9170065714285714; rels: [made_by]; projs: [movie_0.title]; preds: [movie_0.release_year = 2015]; havings: []; superlative: []; blanks: 0
TOT: 0.8291625; NL: 0.8291625; NL+AG: 0.9346358733798678; NL+QF: 0.9283289815594676; rels: [producer]; projs: [actor_0.name]; preds: [movie_0.release_year = 2015]; havings: []; superlative: []; blanks: 1
TOT: 0.8287144338226154; NL: 0.8287144338226154; NL+AG: 0.918071932080964; NL+QF: 0.9062180474279551; rels: [producer]; projs: [company_0.id]; preds: [company_0.name = "Comus Comedies",movie_0.release_year = 2015]; havings: []; superlative: []; blanks: 1
TOT: 0.8215305422782693; NL: 0.8215305422782693; NL+AG: 0.9036485973523029; NL+QF: 0.8875000000000001; rels: [made_by]; projs: [company_0.id]; preds: [company_0.name = "Comus Comedies",movie_0.release_year = 2015]; havings: []; superlative: []; blanks: 0
TOT: 0.8197333333333333; NL: 0.8197333333333333; NL+AG: 0.9235241517212461; NL+QF: 0.9111111111111111; rels: [made_by]; projs: [actor_0.name]; preds: [movie_0.release_year = 2015]; havings: []; superlative: []; blanks: 0
TOT: 0.8178666666666666; NL: 0.8178666666666666; NL+AG: 0.9235241517212461; NL+QF: 0.9170822222222222; rels: [directed_by]; projs: [movie_0.title]; preds: [movie_0.release_year = 2015]; havings: []; superlative: []; blanks: 0

===========
RESULTS
===========


01:05  INFO: ================
01:05  INFO: QUERY 15: Find all actors born in Milan
01:05  INFO: ================
01:06  INFO: ================
01:06  INFO: QUERY 115: Find all actors who acted in the same movie as "Tom Hanks"
01:06  INFO: ================
240. ROOT: ROOT; NA; ; (0) 
241. Find: CMT; NA; ; (0) 
242. actors: NT; NA; all; (0) actor.name(1.0):| actor(1.0):| movie.title(0.95):Actors; Actors; Actors; | cast.role(0.95):Actors; Actors; Actors; | tv_series.title(0.9):Actors; Actor; Actors Vs; | 
244. acted: NT; NA; ; (0) director.did(0.65):| movie.release_year(0.63):| actor.name(0.62):| actor(0.62):| genre.genre(0.62):| 
246. movie: NT; NA; ; (0) movie.title(1.0):| movie(1.0):| company.name(0.92):Movie; Movie Movie; Movies; | cast.role(0.87):Movie; Movie F; Movie AD; | keyword.keyword(0.81):movie-in-movie; b-movie; z-movie; | 
250. Tom Hanks: VTTEXT; NA; ; (0) director.name(0.98):Tom Hanks; Tom Hanks; Tom Hand; | producer.name(0.98):Tom Hanks; Tom Hanks; Tom Hanc; | writer.name(0.98):Tom Hanks; Tom Hanks; Tom Hankins; | actor.name(0.9):Tom Hanks; Jim Hanks; Tom Banks; | cast.role(0.75):Young Tom Hanks; Sam Hanks; Tom Yanks; | 
Find, VB
all, DT
actors, NNS
who, WP
acted, VBD
in, IN
the, DT
same, JJ
movie, NN
as, IN
Tom Hanks, NNP
root(ROOT-0, Find-1)
det(actors-3, all-2)
dobj(Find-1, actors-3)
nsubj(acted-5, who-4)
acl:relcl(actors-3, acted-5)
case(movie-9, in-6)
det(movie-9, the-7)
amod(movie-9, same-8)
nmod(acted-5, movie-9)
case(Tom Hanks-11, as-10)
nmod(acted-5, Tom Hanks-11)

PARSE TREE:(240) ROOT ROOT
    (241) Find CMT
        (242) actors NT
            (244) acted NT
                (246) movie NT
                (250) Tom Hanks VTTEXT


===========
TRANSLATIONS
===========
TOT: 0.993392790857909; NL: 0.993392790857909; NL+AG: 0.993392790857909; NL+QF: 0.9957221790720207; rels: [movie]; projs: [actor_0.name]; preds: [director_0.name = "Tom Hanks"]; havings: []; superlative: []; blanks: 0
TOT: 0.993392790857909; NL: 0.993392790857909; NL+AG: 0.993392790857909; NL+QF: 0.9955951939052726; rels: [movie]; projs: [actor_0.name]; preds: [producer_0.name = "Tom Hanks"]; havings: []; superlative: []; blanks: 0
TOT: 0.9927541264041642; NL: 0.9927541264041642; NL+AG: 0.9927541264041642; NL+QF: 0.9955990155144935; rels: [movie]; projs: [actor_0.name]; preds: [writer_0.name = "Tom Hanks"]; havings: []; superlative: []; blanks: 0
TOT: 0.9679498441898691; NL: 0.9679498441898691; NL+AG: 0.9679498441898691; NL+QF: 0.9787602146266607; rels: []; projs: [actor_0.name]; preds: [company_0.name = "Movie",director_0.name = "Tom Hanks"]; havings: []; superlative: []; blanks: 0
TOT: 0.9679498441898691; NL: 0.9679498441898691; NL+AG: 0.9679498441898691; NL+QF: 0.9786332294599127; rels: []; projs: [actor_0.name]; preds: [company_0.name = "Movie",producer_0.name = "Tom Hanks"]; havings: []; superlative: []; blanks: 0
TOT: 0.9673111797361242; NL: 0.9673111797361242; NL+AG: 0.9673111797361242; NL+QF: 0.9782074531574162; rels: []; projs: [actor_0.name]; preds: [company_0.name = "Movie",writer_0.name = "Tom Hanks"]; havings: []; superlative: []; blanks: 0
TOT: 0.9666666666666667; NL: 0.9666666666666667; NL+AG: 0.9666666666666667; NL+QF: 0.9782222222222222; rels: [movie]; projs: [actor_0.name]; preds: [actor_0.name = "Tom Hanks"]; havings: []; superlative: []; blanks: 0
TOT: 0.9515643826699608; NL: 0.9515643826699608; NL+AG: 0.9515643826699608; NL+QF: 0.9719009692793147; rels: []; projs: [actor_0.name]; preds: [cast_0.role = "Movie",director_0.name = "Tom Hanks"]; havings: []; superlative: []; blanks: 0
TOT: 0.9515643826699608; NL: 0.9515643826699608; NL+AG: 0.9515643826699608; NL+QF: 0.9717739841125667; rels: []; projs: [actor_0.name]; preds: [cast_0.role = "Movie",producer_0.name = "Tom Hanks"]; havings: []; superlative: []; blanks: 0
TOT: 0.9509257182162157; NL: 0.9509257182162157; NL+AG: 0.9509257182162157; NL+QF: 0.97134820781007; rels: []; projs: [actor_0.name]; preds: [cast_0.role = "Movie",writer_0.name = "Tom Hanks"]; havings: []; superlative: []; blanks: 0

===========
RESULTS
===========
TOT: 0.9869588629493299; TR: 0.993392790857909; SMP: 0.35; select actor_0.name from actor as actor_0, cast as cast_0, made_by as made_by_0, movie as movie_0, producer as producer_0 where producer_0.name = "Tom Hanks" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid
TOT: 0.9869588629493299; TR: 0.993392790857909; SMP: 0.35; select actor_0.name from actor as actor_0, cast as cast_0, directed_by as directed_by_0, director as director_0, movie as movie_0 where director_0.name = "Tom Hanks" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid
TOT: 0.9866731486636157; TR: 0.993392790857909; SMP: 0.3214285714285714; select actor_0.name from actor as actor_0, cast as cast_0, directed_by as directed_by_0, directed_by as directed_by_1, director as director_0, movie as movie_0, tv_series as tv_series_0 where director_0.name = "Tom Hanks" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and directed_by_0.msid = movie_0.mid and directed_by_0.msid = tv_series_0.sid and directed_by_1.did = director_0.did and directed_by_1.msid = tv_series_0.sid
TOT: 0.9866731486636157; TR: 0.993392790857909; SMP: 0.3214285714285714; select actor_0.name from actor as actor_0, cast as cast_0, cast as cast_1, made_by as made_by_0, movie as movie_0, producer as producer_0, tv_series as tv_series_0 where producer_0.name = "Tom Hanks" and actor_0.aid = cast_1.aid and cast_0.msid = movie_0.mid and cast_0.msid = tv_series_0.sid and cast_1.msid = tv_series_0.sid and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid
TOT: 0.9866731486636157; TR: 0.993392790857909; SMP: 0.3214285714285714; select actor_0.name from actor as actor_0, cast as cast_0, directed_by as directed_by_0, director as director_0, made_by as made_by_0, movie as movie_0, movie as movie_1 where director_0.name = "Tom Hanks" and actor_0.aid = cast_0.aid and cast_0.msid = movie_1.mid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and made_by_0.msid = movie_0.mid and made_by_0.msid = movie_1.mid
TOT: 0.9866731486636157; TR: 0.993392790857909; SMP: 0.3214285714285714; select actor_0.name from actor as actor_0, cast as cast_0, classification as classification_0, directed_by as directed_by_0, director as director_0, movie as movie_0, tv_series as tv_series_0 where director_0.name = "Tom Hanks" and actor_0.aid = cast_0.aid and cast_0.msid = tv_series_0.sid and classification_0.msid = movie_0.mid and classification_0.msid = tv_series_0.sid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid
TOT: 0.9866731486636157; TR: 0.993392790857909; SMP: 0.3214285714285714; select actor_0.name from actor as actor_0, cast as cast_0, made_by as made_by_0, movie as movie_0, movie as movie_1, producer as producer_0, tags as tags_0 where producer_0.name = "Tom Hanks" and actor_0.aid = cast_0.aid and cast_0.msid = movie_1.mid and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid and movie_0.mid = tags_0.msid and movie_1.mid = tags_0.msid
TOT: 0.9866731486636157; TR: 0.993392790857909; SMP: 0.3214285714285714; select actor_0.name from actor as actor_0, cast as cast_0, directed_by as directed_by_0, made_by as made_by_0, movie as movie_0, movie as movie_1, producer as producer_0 where producer_0.name = "Tom Hanks" and actor_0.aid = cast_0.aid and cast_0.msid = movie_1.mid and directed_by_0.msid = movie_0.mid and directed_by_0.msid = movie_1.mid and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid
TOT: 0.9866731486636157; TR: 0.993392790857909; SMP: 0.3214285714285714; select actor_0.name from actor as actor_0, cast as cast_0, directed_by as directed_by_0, director as director_0, made_by as made_by_0, movie as movie_0, tv_series as tv_series_0 where director_0.name = "Tom Hanks" and actor_0.aid = cast_0.aid and cast_0.msid = tv_series_0.sid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and made_by_0.msid = movie_0.mid and made_by_0.msid = tv_series_0.sid
TOT: 0.9866731486636157; TR: 0.993392790857909; SMP: 0.3214285714285714; select actor_0.name from actor as actor_0, cast as cast_0, directed_by as directed_by_0, director as director_0, made_by as made_by_0, movie as movie_0, tv_series as tv_series_0 where director_0.name = "Tom Hanks" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and directed_by_0.did = director_0.did and directed_by_0.msid = tv_series_0.sid and made_by_0.msid = movie_0.mid and made_by_0.msid = tv_series_0.sid


01:07  INFO: ================
01:07  INFO: QUERY 46: Who is the writer of the movie "Django Unchained"
01:07  INFO: ================
253. ROOT: ROOT; NA; ; (0) 
256. writer: NT; NA; ; (0) writer.name(1.0):| writer(1.0):| movie.title(0.95):Writer; Writer; Writer; | producer.name(0.87):writer; co-writer; Jon Writer; | cast.role(0.84):Writers; A Writer; Writer 5; | 
258. Django Unchained: VTTEXT; NA; ; (0) movie.title(0.94):Django Unchained; Django Unchained; Tango Unchained; | cast.role(0.93):Django Unchained; Django Unchained; Django Unchained & A; | producer.name(0.62):Dchungo Unchained; Django Bayless; Django Bayless; | tv_series.title(0.57):Ellie Unchained; The Renaissance Unch; Unchained Reaction; | company.name(0.56):Rabbit Unchained; Unchained Media; Unchained Films; | 
261. movie: NT; NA; ; (0) movie.title(1.0):| movie(1.0):| company.name(0.92):Movie; Movie Movie; Movies; | cast.role(0.87):Movie; Movie F; Movie AD; | keyword.keyword(0.81):movie-in-movie; b-movie; z-movie; | 
Who, WP
is, VBZ
the, DT
writer, NN
of, IN
the, DT
movie, NN
Django Unchained, NN
root(ROOT-0, Who-1)
cop(Who-1, is-2)
det(writer-4, the-3)
nsubj(Who-1, writer-4)
case(Django Unchained-8, of-5)
det(Django Unchained-8, the-6)
compound(Django Unchained-8, movie-7)
nmod(writer-4, Django Unchained-8)

PARSE TREE:(253) ROOT ROOT
    (256) writer NT
        (258) Django Unchained VTTEXT
            (261) movie NT


===========
TRANSLATIONS
===========
TOT: 0.8134076988595935; NL: 0.8134076988595935; NL+AG: 0.9582335008976787; NL+QF: 0.9430264061249396; rels: [writer]; projs: [movie_0.title]; preds: [movie_0.title = "Django Unchained"]; havings: []; superlative: []; blanks: 0
TOT: 0.8105731403477628; NL: 0.8105731403477628; NL+AG: 0.9553989423858479; NL+QF: 0.942727876238925; rels: [writer]; projs: [movie_0.title]; preds: [cast_0.role = "Django Unchained"]; havings: []; superlative: []; blanks: 0
TOT: 0.7967410321929268; NL: 0.7967410321929268; NL+AG: 0.9547356121387263; NL+QF: 0.9326278554003018; rels: []; projs: [movie_0.title]; preds: [movie_0.title = "Writer",movie_0.title = "Django Unchained"]; havings: []; superlative: []; blanks: 0
TOT: 0.793906473681096; NL: 0.793906473681096; NL+AG: 0.9519010536268956; NL+QF: 0.9350729882672267; rels: []; projs: [movie_0.title]; preds: [movie_0.title = "Writer",cast_0.role = "Django Unchained"]; havings: []; superlative: []; blanks: 0
TOT: 0.7879647521915535; NL: 0.7879647521915535; NL+AG: 0.945959332137353; NL+QF: 0.9268876491907184; rels: []; projs: [writer_0.name]; preds: [movie_0.title = "Django Unchained",company_0.name = "Movie"]; havings: []; superlative: []; blanks: 0
TOT: 0.7851301936797229; NL: 0.7851301936797229; NL+AG: 0.9431247736255223; NL+QF: 0.9234201291198153; rels: []; projs: [writer_0.name]; preds: [cast_0.role = "Django Unchained",company_0.name = "Movie"]; havings: []; superlative: []; blanks: 0
TOT: 0.7715792906716453; NL: 0.7715792906716453; NL+AG: 0.9295738706174447; NL+QF: 0.9200613491211151; rels: []; projs: [writer_0.name]; preds: [movie_0.title = "Django Unchained",cast_0.role = "Movie"]; havings: []; superlative: []; blanks: 0
TOT: 0.7687813997177568; NL: 0.7687813997177568; NL+AG: 0.9267759796635563; NL+QF: 0.9167034025422809; rels: []; projs: [movie_0.title]; preds: [producer_0.name = "writer",movie_0.title = "Django Unchained"]; havings: []; superlative: []; blanks: 0
TOT: 0.7687447321598144; NL: 0.7687447321598144; NL+AG: 0.9267393121056139; NL+QF: 0.912496488106543; rels: []; projs: [writer_0.name]; preds: [cast_0.role = "Django Unchained",cast_0.role = "Movie"]; havings: []; superlative: []; blanks: 0
TOT: 0.7659468412059262; NL: 0.7659468412059262; NL+AG: 0.9239414211517256; NL+QF: 0.9164048726562662; rels: []; projs: [movie_0.title]; preds: [producer_0.name = "writer",cast_0.role = "Django Unchained"]; havings: []; superlative: []; blanks: 0

===========
RESULTS
===========
TOT: 0.7919879075852833; TR: 0.7967410321929268; SMP: 0.3214285714285714; select movie_0.title from copyright as copyright_0, copyright as copyright_1, movie as movie_0, movie as movie_1, movie as movie_2, written_by as written_by_0, written_by as written_by_1 where movie_1.title = "Writer" and movie_2.title = "Django Unchained" and copyright_0.id = copyright_1.id and copyright_0.msid = movie_0.mid and copyright_1.msid = movie_1.mid and movie_0.mid = written_by_0.msid and movie_2.mid = written_by_1.msid and written_by_0.id = written_by_1.id
TOT: 0.7919879075852833; TR: 0.7967410321929268; SMP: 0.3214285714285714; select movie_1.title from copyright as copyright_0, copyright as copyright_1, movie as movie_0, movie as movie_1, movie as movie_2, written_by as written_by_0, written_by as written_by_1 where movie_0.title = "Django Unchained" and movie_2.title = "Writer" and copyright_0.id = copyright_1.id and copyright_0.msid = movie_0.mid and copyright_1.msid = movie_1.mid and movie_0.mid = written_by_0.msid and movie_2.mid = written_by_1.msid and written_by_0.id = written_by_1.id
TOT: 0.7919879075852833; TR: 0.7967410321929268; SMP: 0.3214285714285714; select movie_2.title from copyright as copyright_0, copyright as copyright_1, movie as movie_0, movie as movie_1, movie as movie_2, written_by as written_by_0, written_by as written_by_1 where movie_0.title = "Writer" and movie_1.title = "Django Unchained" and copyright_0.id = copyright_1.id and copyright_0.msid = movie_0.mid and copyright_1.msid = movie_1.mid and movie_0.mid = written_by_0.msid and movie_2.mid = written_by_1.msid and written_by_0.id = written_by_1.id
TOT: 0.7919879075852833; TR: 0.7967410321929268; SMP: 0.3214285714285714; select movie_0.title from movie as movie_0, movie as movie_1, movie as movie_2, tags as tags_0, tags as tags_1, written_by as written_by_0, written_by as written_by_1 where movie_1.title = "Writer" and movie_2.title = "Django Unchained" and movie_0.mid = tags_0.msid and movie_0.mid = written_by_0.msid and movie_1.mid = tags_1.msid and movie_2.mid = written_by_1.msid and tags_0.id = tags_1.id and written_by_0.id = written_by_1.id
TOT: 0.7919879075852833; TR: 0.7967410321929268; SMP: 0.3214285714285714; select movie_1.title from movie as movie_0, movie as movie_1, movie as movie_2, tags as tags_0, tags as tags_1, written_by as written_by_0, written_by as written_by_1 where movie_0.title = "Django Unchained" and movie_2.title = "Writer" and movie_0.mid = tags_0.msid and movie_0.mid = written_by_0.msid and movie_1.mid = tags_1.msid and movie_2.mid = written_by_1.msid and tags_0.id = tags_1.id and written_by_0.id = written_by_1.id
TOT: 0.7919879075852833; TR: 0.7967410321929268; SMP: 0.3214285714285714; select movie_2.title from movie as movie_0, movie as movie_1, movie as movie_2, tags as tags_0, tags as tags_1, written_by as written_by_0, written_by as written_by_1 where movie_0.title = "Writer" and movie_1.title = "Django Unchained" and movie_0.mid = tags_0.msid and movie_0.mid = written_by_0.msid and movie_1.mid = tags_1.msid and movie_2.mid = written_by_1.msid and tags_0.id = tags_1.id and written_by_0.id = written_by_1.id
TOT: 0.7919879075852833; TR: 0.7967410321929268; SMP: 0.3214285714285714; select movie_0.title from copyright as copyright_0, copyright as copyright_1, movie as movie_0, movie as movie_1, movie as movie_2, tags as tags_0, tags as tags_1 where movie_1.title = "Writer" and movie_2.title = "Django Unchained" and copyright_0.id = copyright_1.id and copyright_0.msid = movie_0.mid and copyright_1.msid = movie_1.mid and movie_0.mid = tags_0.msid and movie_2.mid = tags_1.msid and tags_0.id = tags_1.id
TOT: 0.7919879075852833; TR: 0.7967410321929268; SMP: 0.3214285714285714; select movie_1.title from copyright as copyright_0, copyright as copyright_1, movie as movie_0, movie as movie_1, movie as movie_2, tags as tags_0, tags as tags_1 where movie_0.title = "Django Unchained" and movie_2.title = "Writer" and copyright_0.id = copyright_1.id and copyright_0.msid = movie_0.mid and copyright_1.msid = movie_1.mid and movie_0.mid = tags_0.msid and movie_2.mid = tags_1.msid and tags_0.id = tags_1.id
TOT: 0.7919879075852833; TR: 0.7967410321929268; SMP: 0.3214285714285714; select movie_2.title from copyright as copyright_0, copyright as copyright_1, movie as movie_0, movie as movie_1, movie as movie_2, tags as tags_0, tags as tags_1 where movie_0.title = "Writer" and movie_1.title = "Django Unchained" and copyright_0.id = copyright_1.id and copyright_0.msid = movie_0.mid and copyright_1.msid = movie_1.mid and movie_0.mid = tags_0.msid and movie_2.mid = tags_1.msid and tags_0.id = tags_1.id
TOT: 0.7919879075852833; TR: 0.7967410321929268; SMP: 0.3214285714285714; select movie_0.title from classification as classification_0, classification as classification_1, movie as movie_0, movie as movie_1, movie as movie_2, written_by as written_by_0, written_by as written_by_1 where movie_1.title = "Writer" and movie_2.title = "Django Unchained" and classification_0.id = classification_1.id and classification_0.msid = movie_0.mid and classification_1.msid = movie_1.mid and movie_0.mid = written_by_0.msid and movie_2.mid = written_by_1.msid and written_by_0.id = written_by_1.id


01:08  INFO: ================
01:08  INFO: QUERY 22: Who was the director of the movie Joy from 2015?
01:08  INFO: ================
263. ROOT: ROOT; NA; ; (0) 
264. Joy: NT; NA; ; (0) tv_series.num_of_episodes(0.61):| tv_series.num_of_seasons(0.61):| writer.name(0.6):| writer(0.6):| written_by(0.6):| 
265. Who: CMT; NA; ; (0) 
267. director: NT; NA; ; (0) director.name(1.0):| director(1.0):| movie.title(0.95):Director; Director; Director; | company.name(0.93):Director; Directors; Directors; | writer.name(0.9):Director; Director X; Director X.; | 
269. movie: NT; NA; ; (0) movie.title(1.0):| movie(1.0):| company.name(0.92):Movie; Movie Movie; Movies; | cast.role(0.87):Movie; Movie F; Movie AD; | keyword.keyword(0.81):movie-in-movie; b-movie; z-movie; | 
272. 2015: VTNUM; NA; ; (0) movie.release_year(1.0):2015; 2015; 2015; | 
Who, WP
was, VBD
the, DT
director, NN
of, IN
the, DT
movie, NN
Joy, VBN
from, IN
2015, CD
dobj(Joy-8, Who-1)
auxpass(Joy-8, was-2)
det(director-4, the-3)
nsubjpass(Joy-8, director-4)
case(movie-7, of-5)
det(movie-7, the-6)
nmod(director-4, movie-7)
root(ROOT-0, Joy-8)
case(2015-10, from-9)
nmod(Joy-8, 2015-10)

PARSE TREE:(263) ROOT ROOT
    (265) Who CMT
        (267) director NT
            (269) movie NT
            (264) Joy NT
                (272) 2015 VTNUM


===========
TRANSLATIONS
===========
TOT: 0.9; NL: 0.9; NL+AG: 0.9664255715000826; NL+QF: 0.9662473302662986; rels: [movie]; projs: [director_0.name]; preds: [movie_0.release_year = 2015]; havings: []; superlative: []; blanks: 1
TOT: 0.9; NL: 0.9; NL+AG: 0.9525509311920761; NL+QF: 0.9549334907020087; rels: [movie]; projs: [movie_0.mid]; preds: [movie_0.title = "Director",movie_0.release_year = 2015]; havings: []; superlative: []; blanks: 1
TOT: 0.8847342319991759; NL: 0.8847342319991759; NL+AG: 0.9387969294281305; NL+QF: 0.9421875068423976; rels: []; projs: [movie_0.mid]; preds: [movie_0.title = "Director",company_0.name = "Movie",movie_0.release_year = 2015]; havings: []; superlative: []; blanks: 1
TOT: 0.88091778999897; NL: 0.88091778999897; NL+AG: 0.9497054962441749; NL+QF: 0.9537442744798976; rels: []; projs: [director_0.name]; preds: [company_0.name = "Movie",movie_0.release_year = 2015]; havings: []; superlative: []; blanks: 1
TOT: 0.8749029550872309; NL: 0.8749029550872309; NL+AG: 0.9289656525161855; NL+QF: 0.9355044514685407; rels: []; projs: [movie_0.mid]; preds: [movie_0.title = "Director",cast_0.role = "Movie",movie_0.release_year = 2015]; havings: []; superlative: []; blanks: 1
TOT: 0.8686286938590388; NL: 0.8686286938590388; NL+AG: 0.9374164001042435; NL+QF: 0.9425379957356341; rels: []; projs: [director_0.name]; preds: [cast_0.role = "Movie",movie_0.release_year = 2015]; havings: []; superlative: []; blanks: 1
TOT: 0.8615610980981195; NL: 0.8615610980981195; NL+AG: 0.9156237955270742; NL+QF: 0.9250379741939259; rels: []; projs: [movie_0.mid]; preds: [movie_0.title = "Director",keyword_0.keyword = "movie-in-movie",movie_0.release_year = 2015]; havings: []; superlative: []; blanks: 1
TOT: 0.8519513726226496; NL: 0.8519513726226496; NL+AG: 0.9207390788678544; NL+QF: 0.9338311240669556; rels: []; projs: [director_0.name]; preds: [keyword_0.keyword = "movie-in-movie",movie_0.release_year = 2015]; havings: []; superlative: []; blanks: 1
TOT: 0.8274099999999999; NL: 0.8274099999999999; NL+AG: 0.9251018623841525; NL+QF: 0.9225126317452792; rels: [cast]; projs: [movie_0.mid]; preds: [movie_0.title = "Director",movie_0.release_year = 2015]; havings: []; superlative: []; blanks: 1
TOT: 0.82; NL: 0.82; NL+AG: 0.9251018623841525; NL+QF: 0.9226657162378112; rels: []; projs: [movie_0.mid]; preds: [movie_0.title = "Director",movie_0.release_year = 2015]; havings: []; superlative: []; blanks: 2

===========
RESULTS
===========
TOT: 0.8985; TR: 0.9; SMP: 0.75; select movie_0.mid from movie as movie_0 where movie_0.release_year = 2015 and movie_0.title = "Director"
TOT: 0.8951666666666667; TR: 0.9; SMP: 0.41666666666666663; select director_0.name from directed_by as directed_by_0, director as director_0, movie as movie_0 where movie_0.release_year = 2015 and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid
TOT: 0.8800535563458508; TR: 0.8847342319991759; SMP: 0.41666666666666663; select movie_0.mid from company as company_0, copyright as copyright_0, movie as movie_0 where company_0.name = "Movie" and movie_0.release_year = 2015 and movie_0.title = "Director" and company_0.id = copyright_0.cid and copyright_0.msid = movie_0.mid
TOT: 0.8756086120989802; TR: 0.88091778999897; SMP: 0.35; select director_0.name from company as company_0, copyright as copyright_0, directed_by as directed_by_0, director as director_0, movie as movie_0 where company_0.name = "Movie" and movie_0.release_year = 2015 and company_0.id = copyright_0.cid and copyright_0.msid = movie_0.mid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid
TOT: 0.875322897813266; TR: 0.88091778999897; SMP: 0.3214285714285714; select director_0.name from company as company_0, copyright as copyright_0, directed_by as directed_by_0, director as director_0, made_by as made_by_0, movie as movie_0, tv_series as tv_series_0 where company_0.name = "Movie" and movie_0.release_year = 2015 and company_0.id = copyright_0.cid and copyright_0.msid = tv_series_0.sid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and made_by_0.msid = movie_0.mid and made_by_0.msid = tv_series_0.sid
TOT: 0.875322897813266; TR: 0.88091778999897; SMP: 0.3214285714285714; select director_0.name from company as company_0, copyright as copyright_0, directed_by as directed_by_0, directed_by as directed_by_1, director as director_0, movie as movie_0, tv_series as tv_series_0 where company_0.name = "Movie" and movie_0.release_year = 2015 and company_0.id = copyright_0.cid and copyright_0.msid = tv_series_0.sid and directed_by_0.msid = movie_0.mid and directed_by_0.msid = tv_series_0.sid and directed_by_1.did = director_0.did and directed_by_1.msid = movie_0.mid
TOT: 0.875322897813266; TR: 0.88091778999897; SMP: 0.3214285714285714; select director_0.name from company as company_0, copyright as copyright_0, directed_by as directed_by_0, director as director_0, movie as movie_0, movie as movie_1, tags as tags_0 where company_0.name = "Movie" and movie_0.release_year = 2015 and company_0.id = copyright_0.cid and copyright_0.msid = movie_0.mid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_1.mid and movie_0.mid = tags_0.msid and movie_1.mid = tags_0.msid
TOT: 0.875322897813266; TR: 0.88091778999897; SMP: 0.3214285714285714; select director_0.name from company as company_0, copyright as copyright_0, directed_by as directed_by_0, director as director_0, movie as movie_0, tags as tags_0, tv_series as tv_series_0 where company_0.name = "Movie" and movie_0.release_year = 2015 and company_0.id = copyright_0.cid and copyright_0.msid = tv_series_0.sid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and movie_0.mid = tags_0.msid and tags_0.msid = tv_series_0.sid
TOT: 0.875322897813266; TR: 0.88091778999897; SMP: 0.3214285714285714; select director_0.name from company as company_0, copyright as copyright_0, copyright as copyright_1, directed_by as directed_by_0, director as director_0, movie as movie_0, tv_series as tv_series_0 where company_0.name = "Movie" and movie_0.release_year = 2015 and company_0.id = copyright_1.cid and copyright_0.msid = movie_0.mid and copyright_0.msid = tv_series_0.sid and copyright_1.msid = tv_series_0.sid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid
TOT: 0.875322897813266; TR: 0.88091778999897; SMP: 0.3214285714285714; select director_0.name from company as company_0, copyright as copyright_0, directed_by as directed_by_0, director as director_0, movie as movie_0, tv_series as tv_series_0, written_by as written_by_0 where company_0.name = "Movie" and movie_0.release_year = 2015 and company_0.id = copyright_0.cid and copyright_0.msid = tv_series_0.sid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and movie_0.mid = written_by_0.msid and tv_series_0.sid = written_by_0.msid


01:09  INFO: ================
01:09  INFO: QUERY 43: Who acts "Olivia Pope" in the series Scandal?
01:09  INFO: ================
275. ROOT: ROOT; NA; ; (0) 
276. acts: NT; NA; ; (0) director.did(0.65):| movie.release_year(0.63):| actor.name(0.62):| actor(0.62):| genre.genre(0.62):| 
278. Olivia Pope: VTTEXT; NA; ; (0) actor.name(0.98):Olivia Pope; Olivia Pope; Olivia Poli; | cast.role(0.98):Olivia Pope; Olivia Pope; Olivia Poza; | director.name(0.8):Olivia Pohl; Olivia Pohl; Olivia Peace; | producer.name(0.8):Olivia Pohl; Olivia Pohl; Olivia Lopez; | writer.name(0.76):Olivia Peace; Olivia Lopez; Olivia Peace; | 
279. Scandal: VTTEXT; NA; ; (0) movie.title(0.95):Scandal; Scandal; Scandal; | tv_series.title(0.95):Scandal; Scandal; Scandal; | actor.name(0.93):Scandal; Wilrik 'Scandal' de ; | company.name(0.74):Scandal 18; Scandal Video; Scandal-Inc.com; | keyword.keyword(0.73):sex-scandal; fbi-scandal; legal-scandal; | 
282. series: NT; NA; ; (0) tv_series.title(1.0):| tv_series(1.0):| keyword.keyword(0.9):series; series-in-series; tv-series; | cast.role(0.85):Serie; Serie; Serie; | company.name(0.84):Series+; G-Series; T-Series; | 
Who, WP
acts, VBZ
Olivia Pope, NNP
in, IN
the, DT
series, NN
Scandal, NN
nsubj(acts-2, Who-1)
root(ROOT-0, acts-2)
dobj(acts-2, Olivia Pope-3)
case(Scandal-7, in-4)
det(Scandal-7, the-5)
compound(Scandal-7, series-6)
nmod(Olivia Pope-3, Scandal-7)

PARSE TREE:(275) ROOT ROOT
    (276) acts NT
        (278) Olivia Pope VTTEXT
            (279) Scandal VTTEXT
                (282) series NT


===========
TRANSLATIONS
===========
TOT: 0.8115051418242839; NL: 0.8115051418242839; NL+AG: 0.9694997217700833; NL+QF: 0.941003427882856; rels: []; projs: [tv_series_0.title]; preds: [actor_0.name = "Olivia Pope",movie_0.title = "Scandal"]; havings: []; superlative: []; blanks: 0
TOT: 0.8115051418242839; NL: 0.8115051418242839; NL+AG: 0.9694997217700833; NL+QF: 0.941003427882856; rels: []; projs: [tv_series_0.title]; preds: [actor_0.name = "Olivia Pope",tv_series_0.title = "Scandal"]; havings: []; superlative: []; blanks: 0
TOT: 0.8051718084909504; NL: 0.8051718084909504; NL+AG: 0.96316638843675; NL+QF: 0.9377624871727184; rels: []; projs: [tv_series_0.title]; preds: [actor_0.name = "Olivia Pope",actor_0.name = "Scandal"]; havings: []; superlative: []; blanks: 0
TOT: 0.7903890673342067; NL: 0.7903890673342067; NL+AG: 0.9252237264251157; NL+QF: 0.9314746130006549; rels: []; projs: [director_0.did]; preds: [actor_0.name = "Olivia Pope",movie_0.title = "Scandal",keyword_0.keyword = "series"]; havings: []; superlative: []; blanks: 0
TOT: 0.7903890673342067; NL: 0.7903890673342067; NL+AG: 0.9252237264251157; NL+QF: 0.9314746130006549; rels: []; projs: [director_0.did]; preds: [actor_0.name = "Olivia Pope",tv_series_0.title = "Scandal",keyword_0.keyword = "series"]; havings: []; superlative: []; blanks: 0
TOT: 0.7892602109659937; NL: 0.7892602109659937; NL+AG: 0.9240948700569028; NL+QF: 0.9315599151689398; rels: []; projs: [director_0.did]; preds: [cast_0.role = "Olivia Pope",movie_0.title = "Scandal",keyword_0.keyword = "series"]; havings: []; superlative: []; blanks: 0
TOT: 0.7892602109659937; NL: 0.7892602109659937; NL+AG: 0.9240948700569028; NL+QF: 0.9306279707244953; rels: []; projs: [director_0.did]; preds: [cast_0.role = "Olivia Pope",tv_series_0.title = "Scandal",keyword_0.keyword = "series"]; havings: []; superlative: []; blanks: 0
TOT: 0.7876203173342067; NL: 0.7876203173342067; NL+AG: 0.9252237264251157; NL+QF: 0.9328977823654891; rels: []; projs: [movie_0.release_year]; preds: [actor_0.name = "Olivia Pope",movie_0.title = "Scandal",keyword_0.keyword = "series"]; havings: []; superlative: []; blanks: 0
TOT: 0.7876203173342067; NL: 0.7876203173342067; NL+AG: 0.9252237264251157; NL+QF: 0.931790882365489; rels: []; projs: [movie_0.release_year]; preds: [actor_0.name = "Olivia Pope",tv_series_0.title = "Scandal",keyword_0.keyword = "series"]; havings: []; superlative: []; blanks: 0
TOT: 0.7864914609659936; NL: 0.7864914609659936; NL+AG: 0.9240948700569028; NL+QF: 0.9326668151689397; rels: []; projs: [movie_0.release_year]; preds: [cast_0.role = "Olivia Pope",movie_0.title = "Scandal",keyword_0.keyword = "series"]; havings: []; superlative: []; blanks: 0

===========
RESULTS
===========
TOT: 0.806890090406041; TR: 0.8115051418242839; SMP: 0.35; select tv_series_0.title from actor as actor_0, cast as cast_0, cast as cast_1, tv_series as tv_series_0, tv_series as tv_series_1 where actor_0.name = "Olivia Pope" and tv_series_1.title = "Scandal" and actor_0.aid = cast_0.aid and actor_0.aid = cast_1.aid and cast_0.msid = tv_series_0.sid and cast_1.msid = tv_series_1.sid
TOT: 0.806890090406041; TR: 0.8115051418242839; SMP: 0.35; select tv_series_1.title from actor as actor_0, cast as cast_0, cast as cast_1, tv_series as tv_series_0, tv_series as tv_series_1 where actor_0.name = "Olivia Pope" and tv_series_0.title = "Scandal" and actor_0.aid = cast_0.aid and actor_0.aid = cast_1.aid and cast_0.msid = tv_series_0.sid and cast_1.msid = tv_series_1.sid
TOT: 0.806890090406041; TR: 0.8115051418242839; SMP: 0.35; select tv_series_0.title from actor as actor_0, cast as cast_0, cast as cast_1, movie as movie_0, tv_series as tv_series_0 where actor_0.name = "Olivia Pope" and movie_0.title = "Scandal" and actor_0.aid = cast_0.aid and actor_0.aid = cast_1.aid and cast_0.msid = movie_0.mid and cast_1.msid = tv_series_0.sid
TOT: 0.8067234237393743; TR: 0.8115051418242839; SMP: 0.3333333333333333; select tv_series_0.title from actor as actor_0, cast as cast_0, copyright as copyright_0, copyright as copyright_1, tv_series as tv_series_0, tv_series as tv_series_1 where actor_0.name = "Olivia Pope" and tv_series_1.title = "Scandal" and actor_0.aid = cast_0.aid and cast_0.msid = tv_series_0.sid and copyright_0.id = copyright_1.id and copyright_0.msid = tv_series_0.sid and copyright_1.msid = tv_series_1.sid
TOT: 0.8067234237393743; TR: 0.8115051418242839; SMP: 0.3333333333333333; select tv_series_1.title from actor as actor_0, cast as cast_0, copyright as copyright_0, copyright as copyright_1, tv_series as tv_series_0, tv_series as tv_series_1 where actor_0.name = "Olivia Pope" and tv_series_0.title = "Scandal" and actor_0.aid = cast_0.aid and cast_0.msid = tv_series_0.sid and copyright_0.id = copyright_1.id and copyright_0.msid = tv_series_0.sid and copyright_1.msid = tv_series_1.sid
TOT: 0.8067234237393743; TR: 0.8115051418242839; SMP: 0.3333333333333333; select tv_series_0.title from actor as actor_0, actor as actor_1, cast as cast_0, cast as cast_1, tv_series as tv_series_0, tv_series as tv_series_1 where actor_0.name = "Olivia Pope" and tv_series_1.title = "Scandal" and actor_0.aid = actor_1.aid and actor_0.aid = cast_0.aid and actor_1.aid = cast_1.aid and cast_0.msid = tv_series_0.sid and cast_1.msid = tv_series_1.sid
TOT: 0.8067234237393743; TR: 0.8115051418242839; SMP: 0.3333333333333333; select tv_series_1.title from actor as actor_0, actor as actor_1, cast as cast_0, cast as cast_1, tv_series as tv_series_0, tv_series as tv_series_1 where actor_0.name = "Olivia Pope" and tv_series_0.title = "Scandal" and actor_0.aid = actor_1.aid and actor_0.aid = cast_0.aid and actor_1.aid = cast_1.aid and cast_0.msid = tv_series_0.sid and cast_1.msid = tv_series_1.sid
TOT: 0.8067234237393743; TR: 0.8115051418242839; SMP: 0.3333333333333333; select tv_series_0.title from actor as actor_0, cast as cast_0, classification as classification_0, classification as classification_1, tv_series as tv_series_0, tv_series as tv_series_1 where actor_0.name = "Olivia Pope" and tv_series_1.title = "Scandal" and actor_0.aid = cast_0.aid and cast_0.msid = tv_series_0.sid and classification_0.id = classification_1.id and classification_0.msid = tv_series_0.sid and classification_1.msid = tv_series_1.sid
TOT: 0.8067234237393743; TR: 0.8115051418242839; SMP: 0.3333333333333333; select tv_series_1.title from actor as actor_0, cast as cast_0, classification as classification_0, classification as classification_1, tv_series as tv_series_0, tv_series as tv_series_1 where actor_0.name = "Olivia Pope" and tv_series_0.title = "Scandal" and actor_0.aid = cast_0.aid and cast_0.msid = tv_series_0.sid and classification_0.id = classification_1.id and classification_0.msid = tv_series_0.sid and classification_1.msid = tv_series_1.sid
TOT: 0.8067234237393743; TR: 0.8115051418242839; SMP: 0.3333333333333333; select tv_series_0.title from actor as actor_0, cast as cast_0, tags as tags_0, tags as tags_1, tv_series as tv_series_0, tv_series as tv_series_1 where actor_0.name = "Olivia Pope" and tv_series_1.title = "Scandal" and actor_0.aid = cast_0.aid and cast_0.msid = tv_series_0.sid and tags_0.id = tags_1.id and tags_0.msid = tv_series_0.sid and tags_1.msid = tv_series_1.sid


01:10  INFO: ================
01:10  INFO: QUERY 26: Find all movies featuring "Kate Winslet"
01:10  INFO: ================
284. ROOT: ROOT; NA; ; (0) 
285. Find: CMT; NA; ; (0) 
286. featuring: NT; NA; ; (0) movie.release_year(0.64):| producer.name(0.64):| producer(0.64):| made_by(0.64):| movie.title_aka(0.62):| 
287. movies: NT; NA; all; (0) movie.title(1.0):| movie(1.0):| company.name(0.91):Movies; Movie; W Movies; | tv_series.title(0.8):Movies, Movies, Movi; Moon Movies; Movie Memories; | cast.role(0.79):Movie; KPC Movies; Movie F; | 
289. Kate Winslet: VTTEXT; NA; ; (0) actor.name(0.98):Kate Winslet; Kate Winslet; Kate Elizabeth Winsl; | cast.role(0.9):Kate Winsled; Kate Winsled; Kate Winslow; | producer.name(0.67):Kate Winters; Kate Winters; Kate Fewins; | writer.name(0.66):Kate Wincup; Kate Wincup; Kate Wickens; | director.name(0.6):Kate Lewis; Kate Lewis; Kate Lewis; | 
Find, VB
all, DT
movies, NNS
featuring, VBG
Kate Winslet, NNP
root(ROOT-0, Find-1)
det(movies-3, all-2)
nsubj(featuring-4, movies-3)
dep(Find-1, featuring-4)
dobj(featuring-4, Kate Winslet-5)

PARSE TREE:(284) ROOT ROOT
    (285) Find CMT
        (286) featuring NT
            (287) movies NT
            (289) Kate Winslet VTTEXT


===========
TRANSLATIONS
===========
TOT: 0.8728477845384773; NL: 0.8728477845384773; NL+AG: 0.9559749812366416; NL+QF: 0.9555895056711093; rels: [movie]; projs: [movie_0.release_year]; preds: [actor_0.name = "Kate Winslet"]; havings: []; superlative: []; blanks: 0
TOT: 0.8727811178718105; NL: 0.8727811178718105; NL+AG: 0.9699735865765623; NL+QF: 0.9500985230256515; rels: [movie]; projs: [producer_0.name]; preds: [actor_0.name = "Kate Winslet"]; havings: []; superlative: []; blanks: 0
TOT: 0.8663977845384773; NL: 0.8663977845384773; NL+AG: 0.9699735865765623; NL+QF: 0.9500985230256515; rels: [movie]; projs: [movie_0.title_aka]; preds: [actor_0.name = "Kate Winslet"]; havings: []; superlative: []; blanks: 0
TOT: 0.8477; NL: 0.8477; NL+AG: 0.9308271966981644; NL+QF: 0.9377305982905982; rels: [movie]; projs: [movie_0.release_year]; preds: [cast_0.role = "Kate Winsled"]; havings: []; superlative: []; blanks: 0
TOT: 0.8476333333333333; NL: 0.8476333333333333; NL+AG: 0.9448258020380851; NL+QF: 0.9333333333333332; rels: [movie]; projs: [producer_0.name]; preds: [cast_0.role = "Kate Winsled"]; havings: []; superlative: []; blanks: 0
TOT: 0.8412499999999999; NL: 0.8412499999999999; NL+AG: 0.9448258020380851; NL+QF: 0.9333333333333332; rels: [movie]; projs: [movie_0.title_aka]; preds: [cast_0.role = "Kate Winsled"]; havings: []; superlative: []; blanks: 0
TOT: 0.7706455428174322; NL: 0.7706455428174322; NL+AG: 0.9263396786692909; NL+QF: 0.9155083760683761; rels: [movie]; projs: [movie_0.release_year]; preds: [producer_0.name = "Kate Winters"]; havings: []; superlative: []; blanks: 0
TOT: 0.7705788761507657; NL: 0.7705788761507657; NL+AG: 0.9558002204467577; NL+QF: 0.9111111111111111; rels: [movie]; projs: [producer_0.name]; preds: [producer_0.name = "Kate Winters"]; havings: []; superlative: []; blanks: 0
TOT: 0.7691392649536956; NL: 0.7691392649536956; NL+AG: 0.9263396786692909; NL+QF: 0.9181924883708451; rels: [movie]; projs: [movie_0.release_year]; preds: [writer_0.name = "Kate Wincup"]; havings: []; superlative: []; blanks: 0
TOT: 0.7690725982870289; NL: 0.7690725982870289; NL+AG: 0.9558002204467577; NL+QF: 0.9137952234135801; rels: [movie]; projs: [producer_0.name]; preds: [writer_0.name = "Kate Wincup"]; havings: []; superlative: []; blanks: 0

===========
RESULTS
===========
TOT: 0.8682859733597592; TR: 0.8728477845384773; SMP: 0.41666666666666663; select movie_0.release_year from actor as actor_0, cast as cast_0, movie as movie_0 where actor_0.name = "Kate Winslet" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid
TOT: 0.8675533066930923; TR: 0.8727811178718105; SMP: 0.35; select producer_0.name from actor as actor_0, cast as cast_0, made_by as made_by_0, movie as movie_0, producer as producer_0 where actor_0.name = "Kate Winslet" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid
TOT: 0.867267592407378; TR: 0.8727811178718105; SMP: 0.3214285714285714; select producer_0.name from actor as actor_0, cast as cast_0, cast as cast_1, made_by as made_by_0, movie as movie_0, producer as producer_0, tv_series as tv_series_0 where actor_0.name = "Kate Winslet" and actor_0.aid = cast_1.aid and cast_0.msid = movie_0.mid and cast_0.msid = tv_series_0.sid and cast_1.msid = tv_series_0.sid and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid
TOT: 0.867267592407378; TR: 0.8727811178718105; SMP: 0.3214285714285714; select producer_0.name from actor as actor_0, cast as cast_0, made_by as made_by_0, movie as movie_0, movie as movie_1, producer as producer_0, tags as tags_0 where actor_0.name = "Kate Winslet" and actor_0.aid = cast_0.aid and cast_0.msid = movie_1.mid and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid and movie_0.mid = tags_0.msid and movie_1.mid = tags_0.msid
TOT: 0.867267592407378; TR: 0.8727811178718105; SMP: 0.3214285714285714; select producer_0.name from actor as actor_0, cast as cast_0, directed_by as directed_by_0, made_by as made_by_0, movie as movie_0, movie as movie_1, producer as producer_0 where actor_0.name = "Kate Winslet" and actor_0.aid = cast_0.aid and cast_0.msid = movie_1.mid and directed_by_0.msid = movie_0.mid and directed_by_0.msid = movie_1.mid and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid
TOT: 0.867267592407378; TR: 0.8727811178718105; SMP: 0.3214285714285714; select producer_0.name from actor as actor_0, cast as cast_0, copyright as copyright_0, made_by as made_by_0, movie as movie_0, movie as movie_1, producer as producer_0 where actor_0.name = "Kate Winslet" and actor_0.aid = cast_0.aid and cast_0.msid = movie_1.mid and copyright_0.msid = movie_0.mid and copyright_0.msid = movie_1.mid and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid
TOT: 0.867267592407378; TR: 0.8727811178718105; SMP: 0.3214285714285714; select producer_0.name from actor as actor_0, cast as cast_0, directed_by as directed_by_0, made_by as made_by_0, movie as movie_0, producer as producer_0, tv_series as tv_series_0 where actor_0.name = "Kate Winslet" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and directed_by_0.msid = movie_0.mid and directed_by_0.msid = tv_series_0.sid and made_by_0.msid = tv_series_0.sid and made_by_0.pid = producer_0.pid
TOT: 0.867267592407378; TR: 0.8727811178718105; SMP: 0.3214285714285714; select producer_0.name from actor as actor_0, cast as cast_0, classification as classification_0, made_by as made_by_0, movie as movie_0, movie as movie_1, producer as producer_0 where actor_0.name = "Kate Winslet" and actor_0.aid = cast_0.aid and cast_0.msid = movie_1.mid and classification_0.msid = movie_0.mid and classification_0.msid = movie_1.mid and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid
TOT: 0.867267592407378; TR: 0.8727811178718105; SMP: 0.3214285714285714; select producer_0.name from actor as actor_0, cast as cast_0, cast as cast_1, made_by as made_by_0, movie as movie_0, producer as producer_0, tv_series as tv_series_0 where actor_0.name = "Kate Winslet" and actor_0.aid = cast_1.aid and cast_0.msid = movie_0.mid and cast_0.msid = tv_series_0.sid and cast_1.msid = movie_0.mid and made_by_0.msid = tv_series_0.sid and made_by_0.pid = producer_0.pid
TOT: 0.867267592407378; TR: 0.8727811178718105; SMP: 0.3214285714285714; select producer_0.name from actor as actor_0, cast as cast_0, made_by as made_by_0, movie as movie_0, producer as producer_0, tv_series as tv_series_0, written_by as written_by_0 where actor_0.name = "Kate Winslet" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and made_by_0.msid = tv_series_0.sid and made_by_0.pid = producer_0.pid and movie_0.mid = written_by_0.msid and tv_series_0.sid = written_by_0.msid


01:11  INFO: ================
01:11  INFO: QUERY 113: Find the number of companies which worked with "Gabriele Ferzetti"
01:11  INFO: ================
291. ROOT: ROOT; NA; ; (0) 
292. Find: CMT; NA; ; (0) 
293. number of: FT; count; ; (0) 
295. companies: NT; NA; ; (0) company.name(1.0):| company(1.0):| keyword.keyword(0.72):power-companies; pharmaceutical-compa; | movie.title(0.71):Companies Review; Super-Companies; Protect Insurance Co; | producer.name(0.65):Margo Companie; | 
297. worked: NT; NA; ; (0) directed_by(0.71):| director.did(0.69):| made_by(0.64):| producer.name(0.63):| producer(0.63):| 
299. Gabriele Ferzetti: VTTEXT; NA; ; (0) actor.name(0.99):Gabriele Ferzetti; Gabriele Ferzetti; Gabriel Ferzetti; | director.name(0.72):Gabriele Ferluga; Gabriele Ferluga; Gabriele Mainetti; | writer.name(0.72):Gabriele Ferluga; Gabriele Ferluga; Gabriele Kiefer; | cast.role(0.71):Gabriele Cercetti; Gabriele Cercetti; Gabriele Cercetti; | producer.name(0.68):Gabriele Mainetti; Gabriele Mainetti; Gabriele Gauler; | 
Find, VB
the, DT
number, NN
of, IN
companies, NNS
which, WDT
worked, VBD
with, IN
Gabriele Ferzetti, NNP
root(ROOT-0, Find-1)
det(number-3, the-2)
dobj(Find-1, number-3)
case(companies-5, of-4)
nmod(number-3, companies-5)
nsubj(worked-7, which-6)
acl:relcl(companies-5, worked-7)
case(Gabriele Ferzetti-9, with-8)
nmod(worked-7, Gabriele Ferzetti-9)

PARSE TREE:(291) ROOT ROOT
    (292) Find CMT
        (293) number of FT
            (295) companies NT
                (297) worked NT
                    (299) Gabriele Ferzetti VTTEXT


===========
TRANSLATIONS
===========
TOT: 0.8990065371371688; NL: 0.8990065371371688; NL+AG: 0.9598724192231535; NL+QF: 0.9534154692025569; rels: [directed_by]; projs: [count(distinct(company_0.name))]; preds: [actor_0.name = "Gabriele Ferzetti"]; havings: []; superlative: []; blanks: 0
TOT: 0.8763232038038354; NL: 0.8763232038038354; NL+AG: 0.9598724192231535; NL+QF: 0.9534154692025569; rels: [made_by]; projs: [count(distinct(company_0.name))]; preds: [actor_0.name = "Gabriele Ferzetti"]; havings: []; superlative: []; blanks: 0
TOT: 0.8750898704705022; NL: 0.8750898704705022; NL+AG: 0.9598724192231535; NL+QF: 0.9534154692025569; rels: [producer]; projs: [count(distinct(company_0.name))]; preds: [actor_0.name = "Gabriele Ferzetti"]; havings: []; superlative: []; blanks: 0
TOT: 0.8634565371371687; NL: 0.8634565371371687; NL+AG: 0.9598724192231535; NL+QF: 0.9562613575251094; rels: []; projs: [count(distinct(company_0.name))]; preds: [actor_0.name = "Gabriele Ferzetti"]; havings: []; superlative: []; blanks: 1
TOT: 0.8341098057057532; NL: 0.8341098057057532; NL+AG: 0.9688282165584663; NL+QF: 0.9475924028528766; rels: []; projs: [count(distinct(producer_0.name))]; preds: [actor_0.name = "Gabriele Ferzetti"]; havings: []; superlative: []; blanks: 0
TOT: 0.8100820625326998; NL: 0.8100820625326998; NL+AG: 0.9333456375674078; NL+QF: 0.9254648362913072; rels: [directed_by]; projs: [count(distinct(company_0.name))]; preds: [director_0.name = "Gabriele Ferluga"]; havings: []; superlative: []; blanks: 0
TOT: 0.8100820625326998; NL: 0.8100820625326998; NL+AG: 0.9333456375674078; NL+QF: 0.9111111111111111; rels: [directed_by]; projs: [count(distinct(company_0.name))]; preds: [writer_0.name = "Gabriele Ferluga"]; havings: []; superlative: []; blanks: 0
TOT: 0.8045855937288492; NL: 0.8045855937288492; NL+AG: 0.9333456375674078; NL+QF: 0.9111111111111111; rels: [directed_by]; projs: [count(distinct(company_0.name))]; preds: [cast_0.role = "Gabriele Cercetti"]; havings: []; superlative: []; blanks: 0
TOT: 0.7967393738695888; NL: 0.7967393738695888; NL+AG: 0.9333456375674078; NL+QF: 0.9111111111111111; rels: [directed_by]; projs: [count(distinct(company_0.name))]; preds: [producer_0.name = "Gabriele Mainetti"]; havings: []; superlative: []; blanks: 0
TOT: 0.7916232038038356; NL: 0.7916232038038356; NL+AG: 0.9292637999190156; NL+QF: 0.9089710247581125; rels: [directed_by]; projs: [count(distinct(producer_0.name))]; preds: [actor_0.name = "Gabriele Ferzetti"]; havings: []; superlative: []; blanks: 0

===========
RESULTS
===========
TOT: 0.8932307574800828; TR: 0.8990065371371688; SMP: 0.3214285714285714; select count(distinct(company_0.name)) from actor as actor_0, cast as cast_0, company as company_0, copyright as copyright_0, directed_by as directed_by_0, movie as movie_0, movie as movie_1 where actor_0.name = "Gabriele Ferzetti" and actor_0.aid = cast_0.aid and cast_0.msid = movie_1.mid and company_0.id = copyright_0.cid and copyright_0.msid = movie_0.mid and directed_by_0.msid = movie_0.mid and directed_by_0.msid = movie_1.mid
TOT: 0.8932307574800828; TR: 0.8990065371371688; SMP: 0.3214285714285714; select count(distinct(company_0.name)) from actor as actor_0, cast as cast_0, company as company_0, copyright as copyright_0, directed_by as directed_by_0, tv_series as tv_series_0, tv_series as tv_series_1 where actor_0.name = "Gabriele Ferzetti" and actor_0.aid = cast_0.aid and cast_0.msid = tv_series_1.sid and company_0.id = copyright_0.cid and copyright_0.msid = tv_series_0.sid and directed_by_0.msid = tv_series_0.sid and directed_by_0.msid = tv_series_1.sid
TOT: 0.8932307574800828; TR: 0.8990065371371688; SMP: 0.3214285714285714; select count(distinct(company_0.name)) from actor as actor_0, cast as cast_0, company as company_0, copyright as copyright_0, directed_by as directed_by_0, movie as movie_0, tv_series as tv_series_0 where actor_0.name = "Gabriele Ferzetti" and actor_0.aid = cast_0.aid and cast_0.msid = tv_series_0.sid and company_0.id = copyright_0.cid and copyright_0.msid = movie_0.mid and directed_by_0.msid = movie_0.mid and directed_by_0.msid = tv_series_0.sid
TOT: 0.8932307574800828; TR: 0.8990065371371688; SMP: 0.3214285714285714; select count(distinct(company_0.name)) from actor as actor_0, cast as cast_0, company as company_0, copyright as copyright_0, directed_by as directed_by_0, movie as movie_0, tv_series as tv_series_0 where actor_0.name = "Gabriele Ferzetti" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and company_0.id = copyright_0.cid and copyright_0.msid = tv_series_0.sid and directed_by_0.msid = movie_0.mid and directed_by_0.msid = tv_series_0.sid
TOT: 0.8707742574800827; TR: 0.8763232038038354; SMP: 0.3214285714285714; select count(distinct(company_0.name)) from actor as actor_0, cast as cast_0, company as company_0, copyright as copyright_0, made_by as made_by_0, tv_series as tv_series_0, tv_series as tv_series_1 where actor_0.name = "Gabriele Ferzetti" and actor_0.aid = cast_0.aid and cast_0.msid = tv_series_1.sid and company_0.id = copyright_0.cid and copyright_0.msid = tv_series_0.sid and made_by_0.msid = tv_series_0.sid and made_by_0.msid = tv_series_1.sid
TOT: 0.8707742574800827; TR: 0.8763232038038354; SMP: 0.3214285714285714; select count(distinct(company_0.name)) from actor as actor_0, cast as cast_0, company as company_0, copyright as copyright_0, made_by as made_by_0, movie as movie_0, tv_series as tv_series_0 where actor_0.name = "Gabriele Ferzetti" and actor_0.aid = cast_0.aid and cast_0.msid = tv_series_0.sid and company_0.id = copyright_0.cid and copyright_0.msid = movie_0.mid and made_by_0.msid = movie_0.mid and made_by_0.msid = tv_series_0.sid
TOT: 0.8707742574800827; TR: 0.8763232038038354; SMP: 0.3214285714285714; select count(distinct(company_0.name)) from actor as actor_0, cast as cast_0, company as company_0, copyright as copyright_0, made_by as made_by_0, movie as movie_0, movie as movie_1 where actor_0.name = "Gabriele Ferzetti" and actor_0.aid = cast_0.aid and cast_0.msid = movie_1.mid and company_0.id = copyright_0.cid and copyright_0.msid = movie_0.mid and made_by_0.msid = movie_0.mid and made_by_0.msid = movie_1.mid
TOT: 0.8707742574800827; TR: 0.8763232038038354; SMP: 0.3214285714285714; select count(distinct(company_0.name)) from actor as actor_0, cast as cast_0, company as company_0, copyright as copyright_0, made_by as made_by_0, movie as movie_0, tv_series as tv_series_0 where actor_0.name = "Gabriele Ferzetti" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and company_0.id = copyright_0.cid and copyright_0.msid = tv_series_0.sid and made_by_0.msid = movie_0.mid and made_by_0.msid = tv_series_0.sid
TOT: 0.8583219717657969; TR: 0.8634565371371687; SMP: 0.35; select count(distinct(company_0.name)) from actor as actor_0, cast as cast_0, company as company_0, copyright as copyright_0, movie as movie_0 where actor_0.name = "Gabriele Ferzetti" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and company_0.id = copyright_0.cid and copyright_0.msid = movie_0.mid
TOT: 0.8583219717657969; TR: 0.8634565371371687; SMP: 0.35; select count(distinct(company_0.name)) from actor as actor_0, cast as cast_0, company as company_0, copyright as copyright_0, tv_series as tv_series_0 where actor_0.name = "Gabriele Ferzetti" and actor_0.aid = cast_0.aid and cast_0.msid = tv_series_0.sid and company_0.id = copyright_0.cid and copyright_0.msid = tv_series_0.sid


01:11  INFO: ================
01:11  INFO: QUERY 72: List all the Sci-Fi movies which released in 2010
01:11  INFO: ================
302. ROOT: ROOT; NA; ; (0) 
303. List: CMT; NA; ; (0) 
304. movies: NT; NA; all; (0) movie.title(1.0):| movie(1.0):| company.name(0.91):Movies; Movie; W Movies; | tv_series.title(0.8):Movies, Movies, Movi; Moon Movies; Movie Memories; | cast.role(0.79):Movie; KPC Movies; Movie F; | 
307. Sci-Fi: VTTEXT; NA; ; (0) cast.role(0.98):Sci-Fi; Sci-Fi; Sci-fi #1; | genre.genre(0.92):Sci-Fi; Sci-Fi; Film-Noir; | keyword.keyword(0.86):sci-fi-fan; sci-fi-fan; sci-fi-geek; | company.name(0.75):AXN Sci-Fi; AXN Sci-Fi; AXN Sci-Fi; | actor.name(0.73):Mr. Sci-Fi; Mr. Sci-Fi; That Sci-fiGuy; | 
308. released: NT; NA; ; (0) movie.release_year(1.0):| movie.title(0.64):| movie(0.64):| movie.title_aka(0.63):| tv_series.title_aka(0.63):| 
310. 2010: VTNUM; NA; ; (0) movie.release_year(1.0):2010; 2010; 2010; | actor.birth_year(1.0):2010; 2010; | producer.birth_year(1.0):2010; | 
List, VB
all, PDT
the, DT
Sci-Fi, JJ
movies, NNS
which, WDT
released, VBN
in, IN
2010, CD
root(ROOT-0, List-1)
det:predet(movies-5, all-2)
det(movies-5, the-3)
amod(movies-5, Sci-Fi-4)
dobj(List-1, movies-5)
nsubj(released-7, which-6)
acl:relcl(movies-5, released-7)
case(2010-9, in-8)
nmod(released-7, 2010-9)

PARSE TREE:(302) ROOT ROOT
    (303) List CMT
        (304) movies NT
            (307) Sci-Fi VTTEXT
            (308) released NT
                (310) 2010 VTNUM


===========
TRANSLATIONS
===========
TOT: 0.993018980501403; NL: 0.993018980501403; NL+AG: 0.993018980501403; NL+QF: 0.995639957564328; rels: []; projs: [movie_0.title]; preds: [cast_0.role = "Sci-Fi",movie_0.release_year = 2010]; havings: []; superlative: []; blanks: 0
TOT: 0.993018980501403; NL: 0.993018980501403; NL+AG: 0.993018980501403; NL+QF: 0.995639957564328; rels: []; projs: [movie_0.title]; preds: [cast_0.role = "Sci-Fi",actor_0.birth_year = 2010]; havings: []; superlative: []; blanks: 0
TOT: 0.993018980501403; NL: 0.993018980501403; NL+AG: 0.993018980501403; NL+QF: 0.995639957564328; rels: []; projs: [movie_0.title]; preds: [cast_0.role = "Sci-Fi",producer_0.birth_year = 2010]; havings: []; superlative: []; blanks: 0
TOT: 0.971937129433614; NL: 0.971937129433614; NL+AG: 0.971937129433614; NL+QF: 0.9812914196224093; rels: []; projs: [movie_0.title]; preds: [genre_0.genre = "Sci-Fi",movie_0.release_year = 2010]; havings: []; superlative: []; blanks: 0
TOT: 0.971937129433614; NL: 0.971937129433614; NL+AG: 0.971937129433614; NL+QF: 0.9812914196224093; rels: []; projs: [movie_0.title]; preds: [genre_0.genre = "Sci-Fi",actor_0.birth_year = 2010]; havings: []; superlative: []; blanks: 0
TOT: 0.971937129433614; NL: 0.971937129433614; NL+AG: 0.971937129433614; NL+QF: 0.9812914196224093; rels: []; projs: [movie_0.title]; preds: [genre_0.genre = "Sci-Fi",producer_0.birth_year = 2010]; havings: []; superlative: []; blanks: 0
TOT: 0.9529594982787205; NL: 0.9529594982787205; NL+AG: 0.9529594982787205; NL+QF: 0.9736948616484559; rels: []; projs: [movie_0.title]; preds: [keyword_0.keyword = "sci-fi-fan",movie_0.release_year = 2010]; havings: []; superlative: []; blanks: 0
TOT: 0.9529594982787205; NL: 0.9529594982787205; NL+AG: 0.9529594982787205; NL+QF: 0.971246251023322; rels: []; projs: [movie_0.title]; preds: [keyword_0.keyword = "sci-fi-fan",actor_0.birth_year = 2010]; havings: []; superlative: []; blanks: 0
TOT: 0.9529594982787205; NL: 0.9529594982787205; NL+AG: 0.9529594982787205; NL+QF: 0.971246251023322; rels: []; projs: [movie_0.title]; preds: [keyword_0.keyword = "sci-fi-fan",producer_0.birth_year = 2010]; havings: []; superlative: []; blanks: 0
TOT: 0.9151186641666432; NL: 0.9151186641666432; NL+AG: 0.9742803088408243; NL+QF: 0.9576259888680555; rels: []; projs: [movie_0.title]; preds: [company_0.name = "AXN Sci-Fi",movie_0.release_year = 2010]; havings: []; superlative: []; blanks: 0

===========
RESULTS
===========
TOT: 0.988088790696389; TR: 0.993018980501403; SMP: 0.5; select movie_0.title from cast as cast_0, movie as movie_0 where cast_0.role = "Sci-Fi" and movie_0.release_year = 2010 and cast_0.msid = movie_0.mid
TOT: 0.9872554573630556; TR: 0.993018980501403; SMP: 0.41666666666666663; select movie_0.title from actor as actor_0, cast as cast_0, movie as movie_0 where actor_0.birth_year = 2010 and cast_0.role = "Sci-Fi" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid
TOT: 0.986838790696389; TR: 0.993018980501403; SMP: 0.375; select movie_0.title from cast as cast_0, made_by as made_by_0, movie as movie_0, producer as producer_0 where cast_0.role = "Sci-Fi" and producer_0.birth_year = 2010 and cast_0.msid = movie_0.mid and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid
TOT: 0.9864221240297223; TR: 0.993018980501403; SMP: 0.3333333333333333; select movie_0.title from cast as cast_0, made_by as made_by_0, made_by as made_by_1, movie as movie_0, movie as movie_1, producer as producer_0 where cast_0.role = "Sci-Fi" and producer_0.birth_year = 2010 and cast_0.msid = movie_1.mid and made_by_0.msid = movie_0.mid and made_by_0.msid = movie_1.mid and made_by_1.msid = movie_0.mid and made_by_1.pid = producer_0.pid
TOT: 0.9864221240297223; TR: 0.993018980501403; SMP: 0.3333333333333333; select movie_0.title from cast as cast_0, copyright as copyright_0, made_by as made_by_0, movie as movie_0, producer as producer_0, tv_series as tv_series_0 where cast_0.role = "Sci-Fi" and producer_0.birth_year = 2010 and cast_0.msid = movie_0.mid and copyright_0.msid = movie_0.mid and copyright_0.msid = tv_series_0.sid and made_by_0.msid = tv_series_0.sid and made_by_0.pid = producer_0.pid
TOT: 0.9864221240297223; TR: 0.993018980501403; SMP: 0.3333333333333333; select movie_0.title from cast as cast_0, made_by as made_by_0, movie as movie_0, producer as producer_0, tv_series as tv_series_0, written_by as written_by_0 where cast_0.role = "Sci-Fi" and producer_0.birth_year = 2010 and cast_0.msid = tv_series_0.sid and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid and movie_0.mid = written_by_0.msid and tv_series_0.sid = written_by_0.msid
TOT: 0.9864221240297223; TR: 0.993018980501403; SMP: 0.3333333333333333; select movie_0.title from cast as cast_0, directed_by as directed_by_0, made_by as made_by_0, movie as movie_0, producer as producer_0, tv_series as tv_series_0 where cast_0.role = "Sci-Fi" and producer_0.birth_year = 2010 and cast_0.msid = tv_series_0.sid and directed_by_0.msid = movie_0.mid and directed_by_0.msid = tv_series_0.sid and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid
TOT: 0.9864221240297223; TR: 0.993018980501403; SMP: 0.3333333333333333; select movie_0.title from cast as cast_0, directed_by as directed_by_0, made_by as made_by_0, movie as movie_0, producer as producer_0, tv_series as tv_series_0 where cast_0.role = "Sci-Fi" and producer_0.birth_year = 2010 and cast_0.msid = movie_0.mid and directed_by_0.msid = movie_0.mid and directed_by_0.msid = tv_series_0.sid and made_by_0.msid = tv_series_0.sid and made_by_0.pid = producer_0.pid
TOT: 0.9864221240297223; TR: 0.993018980501403; SMP: 0.3333333333333333; select movie_0.title from cast as cast_0, made_by as made_by_0, made_by as made_by_1, movie as movie_0, producer as producer_0, tv_series as tv_series_0 where cast_0.role = "Sci-Fi" and producer_0.birth_year = 2010 and cast_0.msid = tv_series_0.sid and made_by_0.msid = movie_0.mid and made_by_0.msid = tv_series_0.sid and made_by_1.msid = movie_0.mid and made_by_1.pid = producer_0.pid
TOT: 0.9864221240297223; TR: 0.993018980501403; SMP: 0.3333333333333333; select movie_0.title from cast as cast_0, made_by as made_by_0, made_by as made_by_1, movie as movie_0, producer as producer_0, tv_series as tv_series_0 where cast_0.role = "Sci-Fi" and producer_0.birth_year = 2010 and cast_0.msid = movie_0.mid and made_by_0.msid = movie_0.mid and made_by_0.msid = tv_series_0.sid and made_by_1.msid = tv_series_0.sid and made_by_1.pid = producer_0.pid


01:13  INFO: ================
01:13  INFO: QUERY 29: Who was the actor that played "Vinny Gambini" in the movie "My Cousin Vinny"?
01:13  INFO: ================
313. ROOT: ROOT; NA; ; (0) 
316. actor: NT; NA; ; (0) actor.name(1.0):| actor(1.0):| movie.title(0.95):Actor; Actor; Actor; | tv_series.title(0.9):Actor; Actors; The Actor Factor; | cast.role(0.85):Actors; Actors; Actors; | 
318. played: NT; NA; ; (0) tv_series.num_of_seasons(0.67):| director.did(0.66):| cast.role(0.66):| directed_by(0.64):| actor.name(0.63):| 
320. Vinny Gambini: VTTEXT; NA; ; (0) cast.role(1.0):Vinny Gambini; Vinny Gambini; Vinny Gambini; | director.name(0.71):Dino Gambini; Vinny Cunningham; Vinny Cunningham; | actor.name(0.69):Vinny Galperin; Vinny Galperin; Vinny; | producer.name(0.67):Vinny Cunningham; Vinny Cunningham; Vinny; | writer.name(0.67):Vinny Cunningham; Vinny Cunningham; Vinny; | 
321. My Cousin Vinny: VTTEXT; NA; ; (0) movie.title(0.94):My Cousin Vinny; My Cousin Vinny; My Cousin Ginny; | cast.role(0.86):Cousin Vinny; Cousin Vinny; Cousin Vinny; | actor.name(0.72):Kevin Cousin; Kevin Cousin; Cousin; | tv_series.title(0.6):My Cousin Rachel; My Cousin Rachel; Cousin Bette; | director.name(0.59):Vinny; Vinny; Vinny; | 
324. movie: NT; NA; ; (0) movie.title(1.0):| movie(1.0):| company.name(0.92):Movie; Movie Movie; Movies; | cast.role(0.87):Movie; Movie F; Movie AD; | keyword.keyword(0.81):movie-in-movie; b-movie; z-movie; | 
Who, WP
was, VBD
the, DT
actor, NN
that, WDT
played, VBD
Vinny Gambini, NNP
in, IN
the, DT
movie, NN
My Cousin Vinny, NN
root(ROOT-0, Who-1)
cop(Who-1, was-2)
det(actor-4, the-3)
nsubj(Who-1, actor-4)
nsubj(played-6, that-5)
acl:relcl(actor-4, played-6)
dobj(played-6, Vinny Gambini-7)
case(My Cousin Vinny-11, in-8)
det(My Cousin Vinny-11, the-9)
compound(My Cousin Vinny-11, movie-10)
nmod(Vinny Gambini-7, My Cousin Vinny-11)

PARSE TREE:(313) ROOT ROOT
    (316) actor NT
        (318) played NT
            (320) Vinny Gambini VTTEXT
                (321) My Cousin Vinny VTTEXT
                    (324) movie NT


===========
TRANSLATIONS
===========
TOT: 0.85953125; NL: 0.85953125; NL+AG: 0.9698067392561789; NL+QF: 0.9557039114195444; rels: [actor]; projs: [movie_0.title]; preds: [cast_0.role = "Vinny Gambini",movie_0.title = "My Cousin Vinny"]; havings: []; superlative: []; blanks: 0
TOT: 0.8470312499999999; NL: 0.8470312499999999; NL+AG: 0.9647141768292682; NL+QF: 0.944626101866715; rels: []; projs: [movie_0.title]; preds: [movie_0.title = "Actor",cast_0.role = "Vinny Gambini",movie_0.title = "My Cousin Vinny"]; havings: []; superlative: []; blanks: 0
TOT: 0.8404490399989699; NL: 0.8404490399989699; NL+AG: 0.9581319668282382; NL+QF: 0.9420091107283941; rels: []; projs: [actor_0.name]; preds: [cast_0.role = "Vinny Gambini",movie_0.title = "My Cousin Vinny",company_0.name = "Movie"]; havings: []; superlative: []; blanks: 0
TOT: 0.8404490399989699; NL: 0.8404490399989699; NL+AG: 0.9581319668282382; NL+QF: 0.9420091107283941; rels: []; projs: [actor_0.name]; preds: [cast_0.role = "Vinny Gambini",movie_0.title = "My Cousin Vinny",company_0.name = "Movie"]; havings: []; superlative: []; blanks: 0
TOT: 0.8397392319991759; NL: 0.8397392319991759; NL+AG: 0.9452024773559697; NL+QF: 0.9469496742022819; rels: [actor]; projs: [tv_series_0.num_of_seasons]; preds: [cast_0.role = "Vinny Gambini",movie_0.title = "My Cousin Vinny",company_0.name = "Movie"]; havings: []; superlative: []; blanks: 0
TOT: 0.8390796069806744; NL: 0.8390796069806744; NL+AG: 0.9493550962368533; NL+QF: 0.9415254761063756; rels: [actor]; projs: [movie_0.title]; preds: [cast_0.role = "Vinny Gambini",cast_0.role = "Cousin Vinny"]; havings: []; superlative: []; blanks: 0
TOT: 0.838774231999176; NL: 0.838774231999176; NL+AG: 0.9452024773559697; NL+QF: 0.9469496742022819; rels: [actor]; projs: [director_0.did]; preds: [cast_0.role = "Vinny Gambini",movie_0.title = "My Cousin Vinny",company_0.name = "Movie"]; havings: []; superlative: []; blanks: 0
TOT: 0.837864231999176; NL: 0.837864231999176; NL+AG: 0.9613745695133744; NL+QF: 0.9469496742022819; rels: [actor]; projs: [cast_0.role]; preds: [cast_0.role = "Vinny Gambini",movie_0.title = "My Cousin Vinny",company_0.name = "Movie"]; havings: []; superlative: []; blanks: 0
TOT: 0.835814231999176; NL: 0.835814231999176; NL+AG: 0.9613745695133744; NL+QF: 0.9504476822471538; rels: [actor]; projs: [actor_0.name]; preds: [cast_0.role = "Vinny Gambini",movie_0.title = "My Cousin Vinny",company_0.name = "Movie"]; havings: []; superlative: []; blanks: 0
TOT: 0.835568056694166; NL: 0.835568056694166; NL+AG: 0.9532509835234343; NL+QF: 0.9349681694477261; rels: []; projs: [movie_0.title]; preds: [tv_series_0.title = "Actor",cast_0.role = "Vinny Gambini",movie_0.title = "My Cousin Vinny"]; havings: []; superlative: []; blanks: 0

===========
RESULTS
===========
TOT: 0.8417752232142857; TR: 0.8470312499999999; SMP: 0.3214285714285714; select movie_0.title from cast as cast_0, classification as classification_0, movie as movie_0, movie as movie_1, movie as movie_2, written_by as written_by_0, written_by as written_by_1 where cast_0.role = "Vinny Gambini" and movie_1.title = "Actor" and movie_2.title = "My Cousin Vinny" and cast_0.msid = movie_1.mid and classification_0.msid = movie_0.mid and classification_0.msid = movie_1.mid and movie_0.mid = written_by_0.msid and movie_2.mid = written_by_1.msid and written_by_0.id = written_by_1.id
TOT: 0.8417752232142857; TR: 0.8470312499999999; SMP: 0.3214285714285714; select movie_2.title from cast as cast_0, classification as classification_0, movie as movie_0, movie as movie_1, movie as movie_2, written_by as written_by_0, written_by as written_by_1 where cast_0.role = "Vinny Gambini" and movie_0.title = "Actor" and movie_1.title = "My Cousin Vinny" and cast_0.msid = movie_1.mid and classification_0.msid = movie_0.mid and classification_0.msid = movie_1.mid and movie_0.mid = written_by_0.msid and movie_2.mid = written_by_1.msid and written_by_0.id = written_by_1.id
TOT: 0.8417752232142857; TR: 0.8470312499999999; SMP: 0.3214285714285714; select movie_1.title from cast as cast_0, classification as classification_0, movie as movie_0, movie as movie_1, movie as movie_2, written_by as written_by_0, written_by as written_by_1 where cast_0.role = "Vinny Gambini" and movie_0.title = "My Cousin Vinny" and movie_2.title = "Actor" and cast_0.msid = movie_1.mid and classification_0.msid = movie_0.mid and classification_0.msid = movie_1.mid and movie_0.mid = written_by_0.msid and movie_2.mid = written_by_1.msid and written_by_0.id = written_by_1.id
TOT: 0.8417752232142857; TR: 0.8470312499999999; SMP: 0.3214285714285714; select movie_0.title from cast as cast_0, classification as classification_0, classification as classification_1, movie as movie_0, movie as movie_1, movie as movie_2, tags as tags_0 where cast_0.role = "Vinny Gambini" and movie_1.title = "Actor" and movie_2.title = "My Cousin Vinny" and cast_0.msid = movie_1.mid and classification_0.id = classification_1.id and classification_0.msid = movie_0.mid and classification_1.msid = movie_2.mid and movie_0.mid = tags_0.msid and movie_1.mid = tags_0.msid
TOT: 0.8417752232142857; TR: 0.8470312499999999; SMP: 0.3214285714285714; select movie_2.title from cast as cast_0, classification as classification_0, classification as classification_1, movie as movie_0, movie as movie_1, movie as movie_2, tags as tags_0 where cast_0.role = "Vinny Gambini" and movie_0.title = "Actor" and movie_1.title = "My Cousin Vinny" and cast_0.msid = movie_1.mid and classification_0.id = classification_1.id and classification_0.msid = movie_0.mid and classification_1.msid = movie_2.mid and movie_0.mid = tags_0.msid and movie_1.mid = tags_0.msid
TOT: 0.8417752232142857; TR: 0.8470312499999999; SMP: 0.3214285714285714; select movie_1.title from cast as cast_0, classification as classification_0, classification as classification_1, movie as movie_0, movie as movie_1, movie as movie_2, tags as tags_0 where cast_0.role = "Vinny Gambini" and movie_0.title = "My Cousin Vinny" and movie_2.title = "Actor" and cast_0.msid = movie_1.mid and classification_0.id = classification_1.id and classification_0.msid = movie_0.mid and classification_1.msid = movie_2.mid and movie_0.mid = tags_0.msid and movie_1.mid = tags_0.msid
TOT: 0.8417752232142857; TR: 0.8470312499999999; SMP: 0.3214285714285714; select movie_0.title from cast as cast_0, copyright as copyright_0, movie as movie_0, movie as movie_1, movie as movie_2, written_by as written_by_0, written_by as written_by_1 where cast_0.role = "Vinny Gambini" and movie_1.title = "Actor" and movie_2.title = "My Cousin Vinny" and cast_0.msid = movie_1.mid and copyright_0.msid = movie_0.mid and copyright_0.msid = movie_1.mid and movie_0.mid = written_by_0.msid and movie_2.mid = written_by_1.msid and written_by_0.id = written_by_1.id
TOT: 0.8417752232142857; TR: 0.8470312499999999; SMP: 0.3214285714285714; select movie_2.title from cast as cast_0, copyright as copyright_0, movie as movie_0, movie as movie_1, movie as movie_2, written_by as written_by_0, written_by as written_by_1 where cast_0.role = "Vinny Gambini" and movie_0.title = "Actor" and movie_1.title = "My Cousin Vinny" and cast_0.msid = movie_1.mid and copyright_0.msid = movie_0.mid and copyright_0.msid = movie_1.mid and movie_0.mid = written_by_0.msid and movie_2.mid = written_by_1.msid and written_by_0.id = written_by_1.id
TOT: 0.8417752232142857; TR: 0.8470312499999999; SMP: 0.3214285714285714; select movie_1.title from cast as cast_0, copyright as copyright_0, movie as movie_0, movie as movie_1, movie as movie_2, written_by as written_by_0, written_by as written_by_1 where cast_0.role = "Vinny Gambini" and movie_0.title = "My Cousin Vinny" and movie_2.title = "Actor" and cast_0.msid = movie_1.mid and copyright_0.msid = movie_0.mid and copyright_0.msid = movie_1.mid and movie_0.mid = written_by_0.msid and movie_2.mid = written_by_1.msid and written_by_0.id = written_by_1.id
TOT: 0.8417752232142857; TR: 0.8470312499999999; SMP: 0.3214285714285714; select movie_0.title from cast as cast_0, classification as classification_0, classification as classification_1, movie as movie_0, movie as movie_1, movie as movie_2, written_by as written_by_0 where cast_0.role = "Vinny Gambini" and movie_1.title = "Actor" and movie_2.title = "My Cousin Vinny" and cast_0.msid = movie_1.mid and classification_0.id = classification_1.id and classification_0.msid = movie_0.mid and classification_1.msid = movie_2.mid and movie_0.mid = written_by_0.msid and movie_1.mid = written_by_0.msid


01:16  INFO: ================
01:16  INFO: QUERY 17: Which actors were born in Tehran
01:16  INFO: ================
01:16  INFO: ===== FOLD 1 =====
01:16  INFO: ===== Parsing Results =====
01:16  INFO: Total Queries: 98
01:16  INFO: Correctly Parsed: 97/98

01:16  INFO: ================
01:16  INFO: QUERY 35: Find all movies about Persians
01:16  INFO: ================
334. ROOT: ROOT; NA; ; (0) 
335. Find: CMT; NA; ; (0) 
336. movies: NT; NA; all; (0) movie.title(1.0):| movie(1.0):| company.name(0.91):Movies; Movie; W Movies; | tv_series.title(0.8):Movies, Movies, Movi; Moon Movies; Movie Memories; | cast.role(0.79):Movie; KPC Movies; Movie F; | 
338. Persians: VTTEXT; NA; ; (0) cast.role(0.93):Persian; Persian; Persian; | keyword.keyword(0.84):persian; persian-cat; persian-rug; | movie.title(0.74):Persian Version; The Persian; Persian Eyes; | genre.gid(0.71):| tv_series.title(0.7):Great Persians; Persian Click; Guardians of Persian; | 
Find, VB
all, DT
movies, NNS
about, IN
Persians, NNP
root(ROOT-0, Find-1)
det(movies-3, all-2)
dobj(Find-1, movies-3)
case(Persians-5, about-4)
nmod(Find-1, Persians-5)

PARSE TREE:(334) ROOT ROOT
    (335) Find CMT
        (336) movies NT
        (338) Persians VTTEXT


===========
TRANSLATIONS
===========
TOT: 0.9629100498862757; NL: 0.9629100498862757; NL+AG: 0.9629100498862757; NL+QF: 0.9835361535076741; rels: []; projs: [movie_0.title]; preds: [cast_0.role = "Persian"]; havings: []; superlative: []; blanks: 0
TOT: 0.9211734630518926; NL: 0.9211734630518926; NL+AG: 0.9211734630518926; NL+QF: 0.9672266606353108; rels: []; projs: [movie_0.title]; preds: [keyword_0.keyword = "persian"]; havings: []; superlative: []; blanks: 0
TOT: 0.9120743023469737; NL: 0.9120743023469737; NL+AG: 0.9120743023469737; NL+QF: 0.9413828682313158; rels: []; projs: [company_0.id]; preds: [company_0.name = "Movies",cast_0.role = "Persian"]; havings: []; superlative: []; blanks: 0
TOT: 0.8842499111240517; NL: 0.8842499111240517; NL+AG: 0.8842499111240517; NL+QF: 0.9228332740827011; rels: []; projs: [company_0.id]; preds: [company_0.name = "Movies",keyword_0.keyword = "persian"]; havings: []; superlative: []; blanks: 0
TOT: 0.8699503965546862; NL: 0.8699503965546862; NL+AG: 0.9902439024390244; NL+QF: 0.95; rels: []; projs: [movie_0.title]; preds: [movie_0.title = "Persian Version"]; havings: []; superlative: []; blanks: 0
TOT: 0.8501012001259141; NL: 0.8501012001259141; NL+AG: 0.8983063747615624; NL+QF: 0.9134228460596377; rels: []; projs: [company_0.id]; preds: [company_0.name = "Movies",movie_0.title = "Persian Version"]; havings: []; superlative: []; blanks: 0
TOT: 0.8493908164882054; NL: 0.8493908164882054; NL+AG: 0.9902439024390244; NL+QF: 0.95; rels: []; projs: [movie_0.title]; preds: [tv_series_0.title = "Great Persians"]; havings: []; superlative: []; blanks: 0
TOT: 0.8363948134149268; NL: 0.8363948134149268; NL+AG: 0.8983063747615624; NL+QF: 0.9134228460596377; rels: []; projs: [company_0.id]; preds: [company_0.name = "Movies",tv_series_0.title = "Great Persians"]; havings: []; superlative: []; blanks: 0
TOT: 0.8308249999999999; NL: 0.8308249999999999; NL+AG: 0.9606141521466671; NL+QF: 0.95; rels: [tv_series]; projs: [movie_0.title]; preds: []; havings: []; superlative: []; blanks: 0
TOT: 0.8240176024227899; NL: 0.8240176024227899; NL+AG: 0.9027365740213739; NL+QF: 0.9134228460596377; rels: [tv_series]; projs: [company_0.id]; preds: [company_0.name = "Movies"]; havings: []; superlative: []; blanks: 0

===========
RESULTS
===========
TOT: 0.9582809493874129; TR: 0.9629100498862757; SMP: 0.5; select movie_0.title from cast as cast_0, movie as movie_0 where cast_0.role = "Persian" and cast_0.msid = movie_0.mid
TOT: 0.9161283950880403; TR: 0.9211734630518926; SMP: 0.41666666666666663; select movie_0.title from keyword as keyword_0, movie as movie_0, tags as tags_0 where keyword_0.keyword = "persian" and keyword_0.id = tags_0.kid and movie_0.mid = tags_0.msid
TOT: 0.906703559323504; TR: 0.9120743023469737; SMP: 0.375; select company_0.id from cast as cast_0, company as company_0, copyright as copyright_0, tv_series as tv_series_0 where cast_0.role = "Persian" and company_0.name = "Movies" and cast_0.msid = tv_series_0.sid and company_0.id = copyright_0.cid and copyright_0.msid = tv_series_0.sid
TOT: 0.906703559323504; TR: 0.9120743023469737; SMP: 0.375; select company_0.id from cast as cast_0, company as company_0, copyright as copyright_0, movie as movie_0 where cast_0.role = "Persian" and company_0.name = "Movies" and cast_0.msid = movie_0.mid and company_0.id = copyright_0.cid and copyright_0.msid = movie_0.mid
TOT: 0.9062868926568373; TR: 0.9120743023469737; SMP: 0.3333333333333333; select company_0.id from cast as cast_0, company as company_0, copyright as copyright_0, directed_by as directed_by_0, movie as movie_0, movie as movie_1 where cast_0.role = "Persian" and company_0.name = "Movies" and cast_0.msid = movie_1.mid and company_0.id = copyright_0.cid and copyright_0.msid = movie_0.mid and directed_by_0.msid = movie_0.mid and directed_by_0.msid = movie_1.mid
TOT: 0.9062868926568373; TR: 0.9120743023469737; SMP: 0.3333333333333333; select company_0.id from cast as cast_0, company as company_0, copyright as copyright_0, tags as tags_0, tv_series as tv_series_0, tv_series as tv_series_1 where cast_0.role = "Persian" and company_0.name = "Movies" and cast_0.msid = tv_series_1.sid and company_0.id = copyright_0.cid and copyright_0.msid = tv_series_0.sid and tags_0.msid = tv_series_0.sid and tags_0.msid = tv_series_1.sid
TOT: 0.9062868926568373; TR: 0.9120743023469737; SMP: 0.3333333333333333; select company_0.id from cast as cast_0, company as company_0, copyright as copyright_0, copyright as copyright_1, movie as movie_0, tv_series as tv_series_0 where cast_0.role = "Persian" and company_0.name = "Movies" and cast_0.msid = tv_series_0.sid and company_0.id = copyright_1.cid and copyright_0.msid = movie_0.mid and copyright_0.msid = tv_series_0.sid and copyright_1.msid = movie_0.mid
TOT: 0.9062868926568373; TR: 0.9120743023469737; SMP: 0.3333333333333333; select company_0.id from cast as cast_0, company as company_0, copyright as copyright_0, movie as movie_0, movie as movie_1, written_by as written_by_0 where cast_0.role = "Persian" and company_0.name = "Movies" and cast_0.msid = movie_1.mid and company_0.id = copyright_0.cid and copyright_0.msid = movie_0.mid and movie_0.mid = written_by_0.msid and movie_1.mid = written_by_0.msid
TOT: 0.9062868926568373; TR: 0.9120743023469737; SMP: 0.3333333333333333; select company_0.id from cast as cast_0, company as company_0, copyright as copyright_0, movie as movie_0, tv_series as tv_series_0, written_by as written_by_0 where cast_0.role = "Persian" and company_0.name = "Movies" and cast_0.msid = tv_series_0.sid and company_0.id = copyright_0.cid and copyright_0.msid = movie_0.mid and movie_0.mid = written_by_0.msid and tv_series_0.sid = written_by_0.msid
TOT: 0.9062868926568373; TR: 0.9120743023469737; SMP: 0.3333333333333333; select company_0.id from cast as cast_0, company as company_0, copyright as copyright_0, movie as movie_0, tv_series as tv_series_0, written_by as written_by_0 where cast_0.role = "Persian" and company_0.name = "Movies" and cast_0.msid = movie_0.mid and company_0.id = copyright_0.cid and copyright_0.msid = tv_series_0.sid and movie_0.mid = written_by_0.msid and tv_series_0.sid = written_by_0.msid


01:17  INFO: ================
01:17  INFO: QUERY 33: Find all movies that were produced by Netflix
01:17  INFO: ================
341. ROOT: ROOT; NA; ; (0) 
342. Find: CMT; NA; ; (0) 
343. movies: NT; NA; all; (0) movie.title(1.0):| movie(1.0):| company.name(0.91):Movies; Movie; W Movies; | tv_series.title(0.8):Movies, Movies, Movi; Moon Movies; Movie Memories; | cast.role(0.79):Movie; KPC Movies; Movie F; | 
345. produced: NT; NA; ; (0) producer.name(1.0):| producer(1.0):| made_by(0.74):| directed_by(0.69):| cast.role(0.63):| 
348. Netflix: VTTEXT; NA; ; (0) company.name(1.0):Netflix; Netflix; Netflix; | keyword.keyword(0.86):netflix; netflix-series; netflix-production; | tv_series.title(0.78):| tv_series(0.78):| cast.role(0.77):Netflix guy; | 
Find, VB
all, DT
movies, NNS
that, WDT
were, VBD
produced, VBN
by, IN
Netflix, NNP
root(ROOT-0, Find-1)
det(movies-3, all-2)
dobj(Find-1, movies-3)
nsubjpass(produced-6, that-4)
auxpass(produced-6, were-5)
acl:relcl(movies-3, produced-6)
case(Netflix-8, by-7)
nmod(produced-6, Netflix-8)

PARSE TREE:(341) ROOT ROOT
    (342) Find CMT
        (343) movies NT
            (345) produced NT
                (348) Netflix VTTEXT


===========
TRANSLATIONS
===========
TOT: 1.0; NL: 1.0; NL+AG: 1.0; NL+QF: 1.0; rels: [producer]; projs: [movie_0.title]; preds: [company_0.name = "Netflix"]; havings: []; superlative: []; blanks: 0
TOT: 0.954406239574876; NL: 0.954406239574876; NL+AG: 0.954406239574876; NL+QF: 0.972227985546985; rels: [producer]; projs: [movie_0.title]; preds: [keyword_0.keyword = "netflix"]; havings: []; superlative: []; blanks: 0
TOT: 0.9526007018170926; NL: 0.9526007018170926; NL+AG: 0.9526007018170926; NL+QF: 0.9644505263628194; rels: [producer]; projs: [company_0.id]; preds: [company_0.name = "Movies",company_0.name = "Netflix"]; havings: []; superlative: []; blanks: 0
TOT: 0.9282166666666667; NL: 0.9282166666666667; NL+AG: 0.9602729565096298; NL+QF: 0.9555555555555556; rels: [producer,tv_series]; projs: [movie_0.title]; preds: []; havings: []; superlative: []; blanks: 0
TOT: 0.9248655564138278; NL: 0.9248655564138278; NL+AG: 0.9776410850753393; NL+QF: 0.9576420112302801; rels: [producer]; projs: [movie_0.title]; preds: [cast_0.role = "Netflix guy"]; havings: []; superlative: []; blanks: 0
TOT: 0.9184053814982494; NL: 0.9184053814982494; NL+AG: 0.9184053814982494; NL+QF: 0.9388040361236871; rels: [producer]; projs: [company_0.id]; preds: [company_0.name = "Movies",keyword_0.keyword = "netflix"]; havings: []; superlative: []; blanks: 0
TOT: 0.9141833333333335; NL: 0.9141833333333335; NL+AG: 0.964472307167625; NL+QF: 0.9567342063492065; rels: [made_by]; projs: [movie_0.title]; preds: [company_0.name = "Netflix"]; havings: []; superlative: []; blanks: 0
TOT: 0.8987632018170925; NL: 0.8987632018170925; NL+AG: 0.9209394983412958; NL+QF: 0.9269505263628194; rels: [producer,tv_series]; projs: [company_0.id]; preds: [company_0.name = "Movies"]; havings: []; superlative: []; blanks: 0
TOT: 0.8979; NL: 0.8979; NL+AG: 0.964472307167625; NL+QF: 0.9593154471544715; rels: [directed_by]; projs: [movie_0.title]; preds: [company_0.name = "Netflix"]; havings: []; superlative: []; blanks: 0
TOT: 0.8962498691274633; NL: 0.8962498691274633; NL+AG: 0.9208096460027742; NL+QF: 0.9269505263628194; rels: [producer]; projs: [company_0.id]; preds: [company_0.name = "Movies",cast_0.role = "Netflix guy"]; havings: []; superlative: []; blanks: 0

===========
RESULTS
===========


01:17  INFO: ================
01:17  INFO: QUERY 45: Who directed the movie "Inglourious Basterds"?
01:17  INFO: ================
01:18  INFO: ================
01:18  INFO: QUERY 98: How many movies about Iraq war were produced in 2015?
01:18  INFO: ================
358. ROOT: ROOT; NA; ; (0) 
359. produced: CMT; NA; ; (0) 
360. many: VTTEXT; NA; ; (0) cast.role(1.0):Many; Many; Many; | actor.birth_city(0.95):Many; | actor.name(0.81):Dany Many; Danny Many; many many others; | writer.name(0.8):Dany Many; DJ Many; Manuel 'Many;' Garcí; | tv_series.num_of_episodes(0.71):| 
362. movies: NT; NA; ; (0) movie.title(1.0):| movie(1.0):| company.name(0.91):Movies; Movie; W Movies; | tv_series.title(0.8):Movies, Movies, Movi; Moon Movies; Movie Memories; | cast.role(0.79):Movie; KPC Movies; Movie F; | 
363. war: VTTEXT; NA; ; (0) actor.name(0.95):War; War; War; | genre.genre(0.88):War; War; Documentary; | tv_series.title(0.84):War; Car Wars; War Walks; | company.name(0.8):War; War on Want; NWA War Zone; | movie.title(0.77):Wars; Wars; War, Warfare, War; | 
365. Iraq: VTTEXT; NA; ; (0) director.nationality(1.0):Iraq; Iraq; Iraq; | actor.nationality(1.0):Iraq; Iraq; Iraq; | producer.nationality(1.0):Iraq; Iraq; Iraq; | writer.nationality(1.0):Iraq; Iraq; Iraq; | movie.title(0.97):Iraq; Iraq; Ski Iraq; | 
367. 2015: VTNUM; NA; ; (0) movie.release_year(1.0):2015; 2015; 2015; | 
How, WRB
many, JJ
movies, NNS
about, IN
Iraq, NNP
war, NN
were, VBD
produced, VBN
in, IN
2015, CD
advmod(many-2, How-1)
dep(produced-8, many-2)
nsubjpass(produced-8, movies-3)
case(war-6, about-4)
compound(war-6, Iraq-5)
nmod(movies-3, war-6)
auxpass(produced-8, were-7)
root(ROOT-0, produced-8)
case(2015-10, in-9)
nmod(produced-8, 2015-10)

PARSE TREE:(358) ROOT ROOT
    (359) produced CMT
        (360) many VTTEXT
        (362) movies NT
            (363) war VTTEXT
                (365) Iraq VTTEXT
        (367) 2015 VTNUM


===========
TRANSLATIONS
===========
TOT: 0.975; NL: 0.975; NL+AG: 0.975; NL+QF: 0.9791666666666666; rels: [movie]; projs: [actor_0.aid]; preds: [actor_0.birth_city = "Many",actor_0.name = "War",director_0.nationality = "Iraq",movie_0.release_year = 2015]; havings: []; superlative: []; blanks: 0
TOT: 0.975; NL: 0.975; NL+AG: 0.975; NL+QF: 0.9791666666666666; rels: [movie]; projs: [actor_0.aid]; preds: [actor_0.birth_city = "Many",actor_0.name = "War",actor_0.nationality = "Iraq",movie_0.release_year = 2015]; havings: []; superlative: []; blanks: 0
TOT: 0.975; NL: 0.975; NL+AG: 0.975; NL+QF: 0.9791666666666666; rels: [movie]; projs: [actor_0.aid]; preds: [actor_0.birth_city = "Many",actor_0.name = "War",producer_0.nationality = "Iraq",movie_0.release_year = 2015]; havings: []; superlative: []; blanks: 0
TOT: 0.975; NL: 0.975; NL+AG: 0.975; NL+QF: 0.9791666666666666; rels: [movie]; projs: [actor_0.aid]; preds: [actor_0.birth_city = "Many",actor_0.name = "War",writer_0.nationality = "Iraq",movie_0.release_year = 2015]; havings: []; superlative: []; blanks: 0
TOT: 0.9692442278451329; NL: 0.9692442278451329; NL+AG: 0.9692442278451329; NL+QF: 0.974678912019626; rels: [movie]; projs: [actor_0.aid]; preds: [actor_0.birth_city = "Many",actor_0.name = "War",movie_0.title = "Iraq",movie_0.release_year = 2015]; havings: []; superlative: []; blanks: 0
TOT: 0.9627071076310413; NL: 0.9627071076310413; NL+AG: 0.9627071076310413; NL+QF: 0.9704287212410311; rels: [movie]; projs: [actor_0.aid]; preds: [actor_0.birth_city = "Many",genre_0.genre = "War",director_0.nationality = "Iraq",movie_0.release_year = 2015]; havings: []; superlative: []; blanks: 0
TOT: 0.9627071076310413; NL: 0.9627071076310413; NL+AG: 0.9627071076310413; NL+QF: 0.9704287212410311; rels: [movie]; projs: [actor_0.aid]; preds: [actor_0.birth_city = "Many",genre_0.genre = "War",actor_0.nationality = "Iraq",movie_0.release_year = 2015]; havings: []; superlative: []; blanks: 0
TOT: 0.9627071076310413; NL: 0.9627071076310413; NL+AG: 0.9627071076310413; NL+QF: 0.9704287212410311; rels: [movie]; projs: [actor_0.aid]; preds: [actor_0.birth_city = "Many",genre_0.genre = "War",producer_0.nationality = "Iraq",movie_0.release_year = 2015]; havings: []; superlative: []; blanks: 0
TOT: 0.9627071076310413; NL: 0.9627071076310413; NL+AG: 0.9627071076310413; NL+QF: 0.9704287212410311; rels: [movie]; projs: [actor_0.aid]; preds: [actor_0.birth_city = "Many",genre_0.genre = "War",writer_0.nationality = "Iraq",movie_0.release_year = 2015]; havings: []; superlative: []; blanks: 0
TOT: 0.9569513354761742; NL: 0.9569513354761742; NL+AG: 0.9569513354761742; NL+QF: 0.9659409665939905; rels: [movie]; projs: [actor_0.aid]; preds: [actor_0.birth_city = "Many",genre_0.genre = "War",movie_0.title = "Iraq",movie_0.release_year = 2015]; havings: []; superlative: []; blanks: 0

===========
RESULTS
===========
TOT: 0.9694166666666666; TR: 0.975; SMP: 0.41666666666666663; select actor_0.aid from actor as actor_0, cast as cast_0, movie as movie_0 where actor_0.birth_city = "Many" and actor_0.name = "War" and actor_0.nationality = "Iraq" and movie_0.release_year = 2015 and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid
TOT: 0.9687499999999999; TR: 0.975; SMP: 0.35; select actor_0.aid from actor as actor_0, cast as cast_0, made_by as made_by_0, movie as movie_0, producer as producer_0 where actor_0.birth_city = "Many" and actor_0.name = "War" and movie_0.release_year = 2015 and producer_0.nationality = "Iraq" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid
TOT: 0.9687499999999999; TR: 0.975; SMP: 0.35; select actor_0.aid from actor as actor_0, cast as cast_0, movie as movie_0, writer as writer_0, written_by as written_by_0 where actor_0.birth_city = "Many" and actor_0.name = "War" and movie_0.release_year = 2015 and writer_0.nationality = "Iraq" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and movie_0.mid = written_by_0.msid and writer_0.wid = written_by_0.wid
TOT: 0.9687499999999999; TR: 0.975; SMP: 0.35; select actor_0.aid from actor as actor_0, cast as cast_0, directed_by as directed_by_0, director as director_0, movie as movie_0 where actor_0.birth_city = "Many" and actor_0.name = "War" and director_0.nationality = "Iraq" and movie_0.release_year = 2015 and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid
TOT: 0.9684642857142857; TR: 0.975; SMP: 0.3214285714285714; select actor_0.aid from actor as actor_0, cast as cast_0, directed_by as directed_by_0, movie as movie_0, movie as movie_1, writer as writer_0, written_by as written_by_0 where actor_0.birth_city = "Many" and actor_0.name = "War" and movie_0.release_year = 2015 and writer_0.nationality = "Iraq" and actor_0.aid = cast_0.aid and cast_0.msid = movie_1.mid and directed_by_0.msid = movie_0.mid and directed_by_0.msid = movie_1.mid and movie_0.mid = written_by_0.msid and writer_0.wid = written_by_0.wid
TOT: 0.9684642857142857; TR: 0.975; SMP: 0.3214285714285714; select actor_0.aid from actor as actor_0, cast as cast_0, directed_by as directed_by_0, directed_by as directed_by_1, director as director_0, movie as movie_0, tv_series as tv_series_0 where actor_0.birth_city = "Many" and actor_0.name = "War" and director_0.nationality = "Iraq" and movie_0.release_year = 2015 and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and directed_by_0.msid = movie_0.mid and directed_by_0.msid = tv_series_0.sid and directed_by_1.did = director_0.did and directed_by_1.msid = tv_series_0.sid
TOT: 0.9684642857142857; TR: 0.975; SMP: 0.3214285714285714; select actor_0.aid from actor as actor_0, cast as cast_0, movie as movie_0, movie as movie_1, writer as writer_0, written_by as written_by_0, written_by as written_by_1 where actor_0.birth_city = "Many" and actor_0.name = "War" and movie_0.release_year = 2015 and writer_0.nationality = "Iraq" and actor_0.aid = cast_0.aid and cast_0.msid = movie_1.mid and movie_0.mid = written_by_0.msid and movie_0.mid = written_by_1.msid and movie_1.mid = written_by_0.msid and writer_0.wid = written_by_1.wid
TOT: 0.9684642857142857; TR: 0.975; SMP: 0.3214285714285714; select actor_0.aid from actor as actor_0, cast as cast_0, cast as cast_1, made_by as made_by_0, movie as movie_0, producer as producer_0, tv_series as tv_series_0 where actor_0.birth_city = "Many" and actor_0.name = "War" and movie_0.release_year = 2015 and producer_0.nationality = "Iraq" and actor_0.aid = cast_1.aid and cast_0.msid = movie_0.mid and cast_0.msid = tv_series_0.sid and cast_1.msid = tv_series_0.sid and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid
TOT: 0.9684642857142857; TR: 0.975; SMP: 0.3214285714285714; select actor_0.aid from actor as actor_0, cast as cast_0, directed_by as directed_by_0, director as director_0, made_by as made_by_0, movie as movie_0, movie as movie_1 where actor_0.birth_city = "Many" and actor_0.name = "War" and director_0.nationality = "Iraq" and movie_0.release_year = 2015 and actor_0.aid = cast_0.aid and cast_0.msid = movie_1.mid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and made_by_0.msid = movie_0.mid and made_by_0.msid = movie_1.mid
TOT: 0.9684642857142857; TR: 0.975; SMP: 0.3214285714285714; select actor_0.aid from actor as actor_0, cast as cast_0, cast as cast_1, movie as movie_0, movie as movie_1, writer as writer_0, written_by as written_by_0 where actor_0.birth_city = "Many" and actor_0.name = "War" and movie_0.release_year = 2015 and writer_0.nationality = "Iraq" and actor_0.aid = cast_1.aid and cast_0.msid = movie_0.mid and cast_0.msid = movie_1.mid and cast_1.msid = movie_1.mid and movie_0.mid = written_by_0.msid and writer_0.wid = written_by_0.wid


01:20  INFO: ================
01:20  INFO: QUERY 0: What year is the movie "Dead Poets Society" from?
01:20  INFO: ================
370. ROOT: ROOT; NA; ; (0) 
372. year: NT; NA; ; (0) movie.release_year(1.0):| director.birth_year(1.0):| actor.birth_year(1.0):| producer.birth_year(1.0):| writer.birth_year(1.0):| 
374. Dead Poets Society: VTTEXT; NA; ; (0) movie.title(0.99):Dead Poets Society; Dead Poets Society; Dead Worst Poets Soc; | keyword.keyword(0.73):poets-society; poets-society; society; | cast.role(0.72):Dead Poet; Dead Poet; Society; | company.name(0.65):Society; Sonnets of Society; Beta Society; | tv_series.title(0.64):Society; Hi Society; Dead Set; | 
376. movie: NT; NA; ; (0) movie.title(1.0):| movie(1.0):| company.name(0.92):Movie; Movie Movie; Movies; | cast.role(0.87):Movie; Movie F; Movie AD; | keyword.keyword(0.81):movie-in-movie; b-movie; z-movie; | 
What, WDT
year, NN
is, VBZ
the, DT
movie, NN
Dead Poets Society, NNP
from, IN
det(year-2, What-1)
nmod:tmod(is-3, year-2)
root(ROOT-0, is-3)
det(Dead Poets Society-6, the-4)
compound(Dead Poets Society-6, movie-5)
nsubj(is-3, Dead Poets Society-6)
dep(is-3, from-7)

PARSE TREE:(370) ROOT ROOT
    (372) year NT
    (374) Dead Poets Society VTTEXT
        (376) movie NT


===========
TRANSLATIONS
===========
TOT: 0.803616379622231; NL: 0.803616379622231; NL+AG: 0.9306870866929383; NL+QF: 0.9369960043804135; rels: []; projs: [movie_0.release_year]; preds: [movie_0.title = "Dead Poets Society",company_0.name = "Movie"]; havings: []; superlative: []; blanks: 0
TOT: 0.803616379622231; NL: 0.803616379622231; NL+AG: 0.9306870866929383; NL+QF: 0.9357442530814875; rels: []; projs: [director_0.birth_year]; preds: [movie_0.title = "Dead Poets Society",company_0.name = "Movie"]; havings: []; superlative: []; blanks: 0
TOT: 0.803616379622231; NL: 0.803616379622231; NL+AG: 0.9306870866929383; NL+QF: 0.9357442530814875; rels: []; projs: [actor_0.birth_year]; preds: [movie_0.title = "Dead Poets Society",company_0.name = "Movie"]; havings: []; superlative: []; blanks: 0
TOT: 0.803616379622231; NL: 0.803616379622231; NL+AG: 0.9306870866929383; NL+QF: 0.9357442530814875; rels: []; projs: [producer_0.birth_year]; preds: [movie_0.title = "Dead Poets Society",company_0.name = "Movie"]; havings: []; superlative: []; blanks: 0
TOT: 0.803616379622231; NL: 0.803616379622231; NL+AG: 0.9306870866929383; NL+QF: 0.9357442530814875; rels: []; projs: [writer_0.birth_year]; preds: [movie_0.title = "Dead Poets Society",company_0.name = "Movie"]; havings: []; superlative: []; blanks: 0
TOT: 0.7872309181023228; NL: 0.7872309181023228; NL+AG: 0.9143016251730298; NL+QF: 0.9293362646973641; rels: []; projs: [movie_0.release_year]; preds: [movie_0.title = "Dead Poets Society",cast_0.role = "Movie"]; havings: []; superlative: []; blanks: 0
TOT: 0.7872309181023228; NL: 0.7872309181023228; NL+AG: 0.9143016251730298; NL+QF: 0.928084513398438; rels: []; projs: [director_0.birth_year]; preds: [movie_0.title = "Dead Poets Society",cast_0.role = "Movie"]; havings: []; superlative: []; blanks: 0
TOT: 0.7872309181023228; NL: 0.7872309181023228; NL+AG: 0.9143016251730298; NL+QF: 0.928084513398438; rels: []; projs: [actor_0.birth_year]; preds: [movie_0.title = "Dead Poets Society",cast_0.role = "Movie"]; havings: []; superlative: []; blanks: 0
TOT: 0.7872309181023228; NL: 0.7872309181023228; NL+AG: 0.9143016251730298; NL+QF: 0.928084513398438; rels: []; projs: [producer_0.birth_year]; preds: [movie_0.title = "Dead Poets Society",cast_0.role = "Movie"]; havings: []; superlative: []; blanks: 0
TOT: 0.7872309181023228; NL: 0.7872309181023228; NL+AG: 0.9143016251730298; NL+QF: 0.928084513398438; rels: []; projs: [writer_0.birth_year]; preds: [movie_0.title = "Dead Poets Society",cast_0.role = "Movie"]; havings: []; superlative: []; blanks: 0

===========
RESULTS
===========
TOT: 0.7997468824926753; TR: 0.803616379622231; SMP: 0.41666666666666663; select movie_0.release_year from company as company_0, copyright as copyright_0, movie as movie_0 where company_0.name = "Movie" and movie_0.title = "Dead Poets Society" and company_0.id = copyright_0.cid and copyright_0.msid = movie_0.mid
TOT: 0.7990802158260086; TR: 0.803616379622231; SMP: 0.35; select writer_0.birth_year from company as company_0, copyright as copyright_0, movie as movie_0, writer as writer_0, written_by as written_by_0 where company_0.name = "Movie" and movie_0.title = "Dead Poets Society" and company_0.id = copyright_0.cid and copyright_0.msid = movie_0.mid and movie_0.mid = written_by_0.msid and writer_0.wid = written_by_0.wid
TOT: 0.7990802158260086; TR: 0.803616379622231; SMP: 0.35; select actor_0.birth_year from actor as actor_0, cast as cast_0, company as company_0, copyright as copyright_0, movie as movie_0 where company_0.name = "Movie" and movie_0.title = "Dead Poets Society" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and company_0.id = copyright_0.cid and copyright_0.msid = movie_0.mid
TOT: 0.7990802158260086; TR: 0.803616379622231; SMP: 0.35; select producer_0.birth_year from company as company_0, copyright as copyright_0, made_by as made_by_0, movie as movie_0, producer as producer_0 where company_0.name = "Movie" and movie_0.title = "Dead Poets Society" and company_0.id = copyright_0.cid and copyright_0.msid = movie_0.mid and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid
TOT: 0.7990802158260086; TR: 0.803616379622231; SMP: 0.35; select director_0.birth_year from company as company_0, copyright as copyright_0, directed_by as directed_by_0, director as director_0, movie as movie_0 where company_0.name = "Movie" and movie_0.title = "Dead Poets Society" and company_0.id = copyright_0.cid and copyright_0.msid = movie_0.mid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid
TOT: 0.7987945015402944; TR: 0.803616379622231; SMP: 0.3214285714285714; select director_0.birth_year from company as company_0, copyright as copyright_0, directed_by as directed_by_0, director as director_0, made_by as made_by_0, movie as movie_0, tv_series as tv_series_0 where company_0.name = "Movie" and movie_0.title = "Dead Poets Society" and company_0.id = copyright_0.cid and copyright_0.msid = tv_series_0.sid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and made_by_0.msid = movie_0.mid and made_by_0.msid = tv_series_0.sid
TOT: 0.7987945015402944; TR: 0.803616379622231; SMP: 0.3214285714285714; select director_0.birth_year from company as company_0, copyright as copyright_0, directed_by as directed_by_0, directed_by as directed_by_1, director as director_0, movie as movie_0, tv_series as tv_series_0 where company_0.name = "Movie" and movie_0.title = "Dead Poets Society" and company_0.id = copyright_0.cid and copyright_0.msid = tv_series_0.sid and directed_by_0.msid = movie_0.mid and directed_by_0.msid = tv_series_0.sid and directed_by_1.did = director_0.did and directed_by_1.msid = movie_0.mid
TOT: 0.7987945015402944; TR: 0.803616379622231; SMP: 0.3214285714285714; select actor_0.birth_year from actor as actor_0, cast as cast_0, company as company_0, copyright as copyright_0, copyright as copyright_1, movie as movie_0, tv_series as tv_series_0 where company_0.name = "Movie" and movie_0.title = "Dead Poets Society" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and company_0.id = copyright_1.cid and copyright_0.msid = movie_0.mid and copyright_0.msid = tv_series_0.sid and copyright_1.msid = tv_series_0.sid
TOT: 0.7987945015402944; TR: 0.803616379622231; SMP: 0.3214285714285714; select director_0.birth_year from company as company_0, copyright as copyright_0, directed_by as directed_by_0, director as director_0, movie as movie_0, movie as movie_1, tags as tags_0 where company_0.name = "Movie" and movie_0.title = "Dead Poets Society" and company_0.id = copyright_0.cid and copyright_0.msid = movie_0.mid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_1.mid and movie_0.mid = tags_0.msid and movie_1.mid = tags_0.msid
TOT: 0.7987945015402944; TR: 0.803616379622231; SMP: 0.3214285714285714; select writer_0.birth_year from company as company_0, copyright as copyright_0, movie as movie_0, tags as tags_0, tv_series as tv_series_0, writer as writer_0, written_by as written_by_0 where company_0.name = "Movie" and movie_0.title = "Dead Poets Society" and company_0.id = copyright_0.cid and copyright_0.msid = movie_0.mid and movie_0.mid = tags_0.msid and tags_0.msid = tv_series_0.sid and tv_series_0.sid = written_by_0.msid and writer_0.wid = written_by_0.wid


01:21  INFO: ================
01:21  INFO: QUERY 24: Find all movies written by "Matt Damon"
01:21  INFO: ================
01:22  INFO: ================
01:22  INFO: QUERY 58: Find all movies in which "Robin Wright" appears
01:22  INFO: ================
387. ROOT: ROOT; NA; ; (0) 
388. Find: CMT; NA; ; (0) 
389. movies: NT; NA; all; (0) movie.title(1.0):| movie(1.0):| company.name(0.91):Movies; Movie; W Movies; | tv_series.title(0.8):Movies, Movies, Movi; Moon Movies; Movie Memories; | cast.role(0.79):Movie; KPC Movies; Movie F; | 
391. appears: NT; NA; ; (0) made_by(0.67):| director.did(0.65):| producer.name(0.64):| producer(0.64):| writer.name(0.63):| 
394. Robin Wright: VTTEXT; NA; ; (0) actor.name(1.0):Robin Wright; Robin Wright; Robin Wright; | director.name(0.98):Robin Wright; Robin Wright; Robin Wright-Penn; | producer.name(0.98):Robin Wright; Robin Wright; Robin Wright-Penn; | writer.name(0.77):Rob Wright; Quinn Wright; Kevin Wright; | cast.role(0.76):Tobi Wright; Tobi Wright; Lorin Wright; | 
Find, VB
all, DT
movies, NNS
in, IN
which, WDT
Robin Wright, NNP
appears, VBZ
root(ROOT-0, Find-1)
det(movies-3, all-2)
dobj(Find-1, movies-3)
case(which-5, in-4)
nmod(appears-7, which-5)
nsubj(appears-7, Robin Wright-6)
acl:relcl(movies-3, appears-7)

PARSE TREE:(387) ROOT ROOT
    (388) Find CMT
        (389) movies NT
            (391) appears NT
                (394) Robin Wright VTTEXT


===========
TRANSLATIONS
===========
TOT: 0.8912999999999999; NL: 0.8912999999999999; NL+AG: 0.9644723071676249; NL+QF: 0.9566252380952381; rels: [made_by]; projs: [movie_0.title]; preds: [actor_0.name = "Robin Wright"]; havings: []; superlative: []; blanks: 0
TOT: 0.885605206586295; NL: 0.885605206586295; NL+AG: 0.9587775137539198; NL+QF: 0.9534921167258207; rels: [made_by]; projs: [movie_0.title]; preds: [director_0.name = "Robin Wright"]; havings: []; superlative: []; blanks: 0
TOT: 0.885605206586295; NL: 0.885605206586295; NL+AG: 0.9587775137539198; NL+QF: 0.9698033723503346; rels: [made_by]; projs: [movie_0.title]; preds: [producer_0.name = "Robin Wright"]; havings: []; superlative: []; blanks: 0
TOT: 0.8795833333333333; NL: 0.8795833333333333; NL+AG: 0.9644723071676249; NL+QF: 0.9555555555555556; rels: [producer]; projs: [movie_0.title]; preds: [actor_0.name = "Robin Wright"]; havings: []; superlative: []; blanks: 0
TOT: 0.8738885399196282; NL: 0.8738885399196282; NL+AG: 0.9587775137539198; NL+QF: 0.952422434186138; rels: [producer]; projs: [movie_0.title]; preds: [director_0.name = "Robin Wright"]; havings: []; superlative: []; blanks: 0
TOT: 0.8738885399196282; NL: 0.8738885399196282; NL+AG: 0.9587775137539198; NL+QF: 0.9518923004558862; rels: [producer]; projs: [movie_0.title]; preds: [producer_0.name = "Robin Wright"]; havings: []; superlative: []; blanks: 0
TOT: 0.8710757018170925; NL: 0.8710757018170925; NL+AG: 0.9233016330864181; NL+QF: 0.9269505263628194; rels: [made_by]; projs: [company_0.id]; preds: [company_0.name = "Movies",actor_0.name = "Robin Wright"]; havings: []; superlative: []; blanks: 0
TOT: 0.8668046067568137; NL: 0.8668046067568137; NL+AG: 0.9190305380261393; NL+QF: 0.9237472050676103; rels: [made_by]; projs: [company_0.id]; preds: [company_0.name = "Movies",director_0.name = "Robin Wright"]; havings: []; superlative: []; blanks: 0
TOT: 0.8668046067568137; NL: 0.8668046067568137; NL+AG: 0.9190305380261393; NL+QF: 0.933220486579666; rels: [made_by]; projs: [company_0.id]; preds: [company_0.name = "Movies",producer_0.name = "Robin Wright"]; havings: []; superlative: []; blanks: 0
TOT: 0.8666666666666667; NL: 0.8666666666666667; NL+AG: 0.9644723071676249; NL+QF: 0.9584617870961379; rels: []; projs: [movie_0.title]; preds: [actor_0.name = "Robin Wright"]; havings: []; superlative: []; blanks: 1

===========
RESULTS
===========
TOT: 0.8809158211870988; TR: 0.885605206586295; SMP: 0.41666666666666663; select movie_0.title from made_by as made_by_0, movie as movie_0, producer as producer_0 where producer_0.name = "Robin Wright" and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid
TOT: 0.8655792305132073; TR: 0.8710757018170925; SMP: 0.3214285714285714; select company_0.id from actor as actor_0, cast as cast_0, company as company_0, copyright as copyright_0, made_by as made_by_0, tv_series as tv_series_0, tv_series as tv_series_1 where actor_0.name = "Robin Wright" and company_0.name = "Movies" and actor_0.aid = cast_0.aid and cast_0.msid = tv_series_1.sid and company_0.id = copyright_0.cid and copyright_0.msid = tv_series_0.sid and made_by_0.msid = tv_series_0.sid and made_by_0.msid = tv_series_1.sid
TOT: 0.8655792305132073; TR: 0.8710757018170925; SMP: 0.3214285714285714; select company_0.id from actor as actor_0, cast as cast_0, company as company_0, copyright as copyright_0, made_by as made_by_0, movie as movie_0, tv_series as tv_series_0 where actor_0.name = "Robin Wright" and company_0.name = "Movies" and actor_0.aid = cast_0.aid and cast_0.msid = tv_series_0.sid and company_0.id = copyright_0.cid and copyright_0.msid = movie_0.mid and made_by_0.msid = movie_0.mid and made_by_0.msid = tv_series_0.sid
TOT: 0.8655792305132073; TR: 0.8710757018170925; SMP: 0.3214285714285714; select company_0.id from actor as actor_0, cast as cast_0, company as company_0, copyright as copyright_0, made_by as made_by_0, movie as movie_0, movie as movie_1 where actor_0.name = "Robin Wright" and company_0.name = "Movies" and actor_0.aid = cast_0.aid and cast_0.msid = movie_1.mid and company_0.id = copyright_0.cid and copyright_0.msid = movie_0.mid and made_by_0.msid = movie_0.mid and made_by_0.msid = movie_1.mid
TOT: 0.8655792305132073; TR: 0.8710757018170925; SMP: 0.3214285714285714; select company_0.id from actor as actor_0, cast as cast_0, company as company_0, copyright as copyright_0, made_by as made_by_0, movie as movie_0, tv_series as tv_series_0 where actor_0.name = "Robin Wright" and company_0.name = "Movies" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and company_0.id = copyright_0.cid and copyright_0.msid = tv_series_0.sid and made_by_0.msid = movie_0.mid and made_by_0.msid = tv_series_0.sid
TOT: 0.8621666666666666; TR: 0.8666666666666667; SMP: 0.41666666666666663; select movie_0.title from actor as actor_0, cast as cast_0, movie as movie_0 where actor_0.name = "Robin Wright" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid
TOT: 0.8616365606892455; TR: 0.8668046067568137; SMP: 0.35; select company_0.id from company as company_0, copyright as copyright_0, made_by as made_by_0, producer as producer_0, tv_series as tv_series_0 where company_0.name = "Movies" and producer_0.name = "Robin Wright" and company_0.id = copyright_0.cid and copyright_0.msid = tv_series_0.sid and made_by_0.msid = tv_series_0.sid and made_by_0.pid = producer_0.pid
TOT: 0.8616365606892455; TR: 0.8668046067568137; SMP: 0.35; select company_0.id from company as company_0, copyright as copyright_0, made_by as made_by_0, movie as movie_0, producer as producer_0 where company_0.name = "Movies" and producer_0.name = "Robin Wright" and company_0.id = copyright_0.cid and copyright_0.msid = movie_0.mid and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid
TOT: 0.8613508464035313; TR: 0.8668046067568137; SMP: 0.3214285714285714; select company_0.id from company as company_0, copyright as copyright_0, directed_by as directed_by_0, director as director_0, made_by as made_by_0, movie as movie_0, tv_series as tv_series_0 where company_0.name = "Movies" and director_0.name = "Robin Wright" and company_0.id = copyright_0.cid and copyright_0.msid = tv_series_0.sid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and made_by_0.msid = movie_0.mid and made_by_0.msid = tv_series_0.sid
TOT: 0.8613508464035313; TR: 0.8668046067568137; SMP: 0.3214285714285714; select company_0.id from company as company_0, copyright as copyright_0, made_by as made_by_0, made_by as made_by_1, producer as producer_0, tv_series as tv_series_0, tv_series as tv_series_1 where company_0.name = "Movies" and producer_0.name = "Robin Wright" and company_0.id = copyright_0.cid and copyright_0.msid = tv_series_0.sid and made_by_0.msid = tv_series_0.sid and made_by_0.msid = tv_series_1.sid and made_by_1.msid = tv_series_1.sid and made_by_1.pid = producer_0.pid


01:22  INFO: ================
01:22  INFO: QUERY 95: How many movies did "Humphrey Bogart" act in before 1942?
01:22  INFO: ================
396. ROOT: ROOT; NA; ; (0) 
397. act: NT; NA; ; (0) director.did(0.65):| movie.release_year(0.63):| actor.name(0.62):| actor(0.62):| genre.genre(0.62):| 
398. movies: NT; NA; ; (0) movie.title(1.0):| movie(1.0):| company.name(0.91):Movies; Movie; W Movies; | tv_series.title(0.8):Movies, Movies, Movi; Moon Movies; Movie Memories; | cast.role(0.79):Movie; KPC Movies; Movie F; | 
400. How many: CMT; count; ; (0) 
402. Humphrey Bogart: VTTEXT; NA; ; (0) actor.name(0.98):Humphrey Bogart; Humphrey Bogart; Stephen Humphrey Bog; | producer.name(0.98):Humphrey Bogart; Humphrey Bogart; Stephen Humphrey Bog; | cast.role(0.84):Humphrey 'Bogie' Bog; Humphrey 'Bogie' Bog; Humphrey 'Bogie' Bog; | tv_series.title(0.81):Being Humphrey Bogar; Being Humphrey Bogar; Bogart; | movie.title(0.79):Humphrey Bogart on F; Humphrey Bogart on F; Humphrey Bogart and ; | 
404. 1942: VTNUM; NA; ; (0) actor.birth_year(0.99):1935; 1924; 1926; | movie.release_year(0.99):1913; 1915; 1923; | writer.birth_year(0.98):1926; 1938; 1927; | producer.birth_year(0.98):1926; 1887; 1922; | director.birth_year(0.98):1927; 1924; 1883; | 
405. before: OT; <; ; (0) 
How, WRB
many, JJ
movies, NNS
did, VBD
Humphrey Bogart, NNP
act, VB
in, RP
before, IN
1942, CD
advmod(many-2, How-1)
amod(movies-3, many-2)
dobj(act-6, movies-3)
aux(act-6, did-4)
nsubj(act-6, Humphrey Bogart-5)
root(ROOT-0, act-6)
compound:prt(act-6, in-7)
case(1942-9, before-8)
nmod(act-6, 1942-9)

PARSE TREE:(396) ROOT ROOT
    (400) How many CMT
        (398) movies NT
            (397) act NT
                (402) Humphrey Bogart VTTEXT
                (404) 1942 VTNUM
                    (405) before OT


===========
TRANSLATIONS
===========
TOT: 0.897756215057204; NL: 0.897756215057204; NL+AG: 0.9612231659149346; NL+QF: 0.9653546180949326; rels: [actor]; projs: [count(distinct(movie_0.title))]; preds: [actor_0.name = "Humphrey Bogart",actor_0.birth_year < 1942]; havings: []; superlative: []; blanks: 0
TOT: 0.897756215057204; NL: 0.897756215057204; NL+AG: 0.9612231659149346; NL+QF: 0.9587571791500459; rels: [actor]; projs: [count(distinct(movie_0.title))]; preds: [producer_0.name = "Humphrey Bogart",actor_0.birth_year < 1942]; havings: []; superlative: []; blanks: 0
TOT: 0.8973185219573071; NL: 0.8973185219573071; NL+AG: 0.9607854728150377; NL+QF: 0.9651903341979129; rels: [actor]; projs: [count(distinct(movie_0.title))]; preds: [actor_0.name = "Humphrey Bogart",movie_0.release_year < 1942]; havings: []; superlative: []; blanks: 0
TOT: 0.8973185219573071; NL: 0.8973185219573071; NL+AG: 0.9607854728150377; NL+QF: 0.958592895253026; rels: [actor]; projs: [count(distinct(movie_0.title))]; preds: [producer_0.name = "Humphrey Bogart",movie_0.release_year < 1942]; havings: []; superlative: []; blanks: 0
TOT: 0.896211415881097; NL: 0.896211415881097; NL+AG: 0.9596783667388276; NL+QF: 0.9641960187128522; rels: [actor]; projs: [count(distinct(movie_0.title))]; preds: [actor_0.name = "Humphrey Bogart",writer_0.birth_year < 1942]; havings: []; superlative: []; blanks: 0
TOT: 0.896211415881097; NL: 0.896211415881097; NL+AG: 0.9596783667388276; NL+QF: 0.9575985797679656; rels: [actor]; projs: [count(distinct(movie_0.title))]; preds: [producer_0.name = "Humphrey Bogart",writer_0.birth_year < 1942]; havings: []; superlative: []; blanks: 0
TOT: 0.8960826826164214; NL: 0.8960826826164214; NL+AG: 0.959549633474152; NL+QF: 0.9640994687643456; rels: [actor]; projs: [count(distinct(movie_0.title))]; preds: [actor_0.name = "Humphrey Bogart",producer_0.birth_year < 1942]; havings: []; superlative: []; blanks: 0
TOT: 0.8960826826164214; NL: 0.8960826826164214; NL+AG: 0.959549633474152; NL+QF: 0.9575020298194589; rels: [actor]; projs: [count(distinct(movie_0.title))]; preds: [producer_0.name = "Humphrey Bogart",producer_0.birth_year < 1942]; havings: []; superlative: []; blanks: 0
TOT: 0.8956707361694595; NL: 0.8956707361694595; NL+AG: 0.95913768702719; NL+QF: 0.9637905089291241; rels: [actor]; projs: [count(distinct(movie_0.title))]; preds: [actor_0.name = "Humphrey Bogart",director_0.birth_year < 1942]; havings: []; superlative: []; blanks: 0
TOT: 0.8956707361694595; NL: 0.8956707361694595; NL+AG: 0.95913768702719; NL+QF: 0.9571930699842375; rels: [actor]; projs: [count(distinct(movie_0.title))]; preds: [producer_0.name = "Humphrey Bogart",director_0.birth_year < 1942]; havings: []; superlative: []; blanks: 0

===========
RESULTS
===========
TOT: 0.8929453195732987; TR: 0.897756215057204; SMP: 0.41666666666666663; select count(distinct(movie_0.title)) from actor as actor_0, cast as cast_0, movie as movie_0 where actor_0.birth_year < 1942 and actor_0.name = "Humphrey Bogart" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid
TOT: 0.8925120034044006; TR: 0.8973185219573071; SMP: 0.41666666666666663; select count(distinct(movie_0.title)) from actor as actor_0, cast as cast_0, movie as movie_0 where actor_0.name = "Humphrey Bogart" and movie_0.release_year < 1942 and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid
TOT: 0.892278652906632; TR: 0.897756215057204; SMP: 0.35; select count(distinct(movie_0.title)) from actor as actor_0, cast as cast_0, made_by as made_by_0, movie as movie_0, producer as producer_0 where actor_0.birth_year < 1942 and producer_0.name = "Humphrey Bogart" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid
TOT: 0.8919929386209178; TR: 0.897756215057204; SMP: 0.3214285714285714; select count(distinct(movie_0.title)) from actor as actor_0, cast as cast_0, cast as cast_1, made_by as made_by_0, movie as movie_0, producer as producer_0, tv_series as tv_series_0 where actor_0.birth_year < 1942 and producer_0.name = "Humphrey Bogart" and actor_0.aid = cast_1.aid and cast_0.msid = movie_0.mid and cast_0.msid = tv_series_0.sid and cast_1.msid = tv_series_0.sid and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid
TOT: 0.8919929386209178; TR: 0.897756215057204; SMP: 0.3214285714285714; select count(distinct(movie_0.title)) from actor as actor_0, cast as cast_0, made_by as made_by_0, made_by as made_by_1, movie as movie_0, producer as producer_0, tv_series as tv_series_0 where actor_0.birth_year < 1942 and producer_0.name = "Humphrey Bogart" and actor_0.aid = cast_0.aid and cast_0.msid = tv_series_0.sid and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid and made_by_1.msid = tv_series_0.sid and made_by_1.pid = producer_0.pid
TOT: 0.8919929386209178; TR: 0.897756215057204; SMP: 0.3214285714285714; select count(distinct(movie_0.title)) from actor as actor_0, cast as cast_0, made_by as made_by_0, movie as movie_0, movie as movie_1, producer as producer_0, tags as tags_0 where actor_0.birth_year < 1942 and producer_0.name = "Humphrey Bogart" and actor_0.aid = cast_0.aid and cast_0.msid = movie_1.mid and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid and movie_0.mid = tags_0.msid and movie_1.mid = tags_0.msid
TOT: 0.8919929386209178; TR: 0.897756215057204; SMP: 0.3214285714285714; select count(distinct(movie_0.title)) from actor as actor_0, cast as cast_0, directed_by as directed_by_0, made_by as made_by_0, movie as movie_0, movie as movie_1, producer as producer_0 where actor_0.birth_year < 1942 and producer_0.name = "Humphrey Bogart" and actor_0.aid = cast_0.aid and cast_0.msid = movie_1.mid and directed_by_0.msid = movie_0.mid and directed_by_0.msid = movie_1.mid and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid
TOT: 0.8919929386209178; TR: 0.897756215057204; SMP: 0.3214285714285714; select count(distinct(movie_0.title)) from actor as actor_0, cast as cast_0, copyright as copyright_0, made_by as made_by_0, movie as movie_0, movie as movie_1, producer as producer_0 where actor_0.birth_year < 1942 and producer_0.name = "Humphrey Bogart" and actor_0.aid = cast_0.aid and cast_0.msid = movie_1.mid and copyright_0.msid = movie_0.mid and copyright_0.msid = movie_1.mid and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid
TOT: 0.8919929386209178; TR: 0.897756215057204; SMP: 0.3214285714285714; select count(distinct(movie_0.title)) from actor as actor_0, cast as cast_0, directed_by as directed_by_0, made_by as made_by_0, movie as movie_0, producer as producer_0, tv_series as tv_series_0 where actor_0.birth_year < 1942 and producer_0.name = "Humphrey Bogart" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and directed_by_0.msid = movie_0.mid and directed_by_0.msid = tv_series_0.sid and made_by_0.msid = tv_series_0.sid and made_by_0.pid = producer_0.pid
TOT: 0.8919929386209178; TR: 0.897756215057204; SMP: 0.3214285714285714; select count(distinct(movie_0.title)) from actor as actor_0, cast as cast_0, classification as classification_0, made_by as made_by_0, movie as movie_0, movie as movie_1, producer as producer_0 where actor_0.birth_year < 1942 and producer_0.name = "Humphrey Bogart" and actor_0.aid = cast_0.aid and cast_0.msid = movie_1.mid and classification_0.msid = movie_0.mid and classification_0.msid = movie_1.mid and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid


01:23  INFO: ================
01:23  INFO: QUERY 64: Find all the female actors in the movie "Saving Private Ryan"
01:23  INFO: ================
01:32  INFO: ================
01:32  INFO: QUERY 107: How many female actors were born in "New York City" after 1980?
01:32  INFO: ================
418. ROOT: ROOT; NA; ; (0) 
419. born: NT; NA; ; (0) tv_series.num_of_episodes(0.62):| tv_series.num_of_seasons(0.62):| tags(0.6):| director.did(0.6):| producer.name(0.59):| 
421. How many: CMT; count; ; (0) 
422. actors: NT; NA; ; (0) actor.name(1.0):| actor(1.0):| movie.title(0.95):Actors; Actors; Actors; | cast.role(0.95):Actors; Actors; Actors; | tv_series.title(0.9):Actors; Actor; Actors Vs; | 
423. female: VTTEXT; NA; ; (0) director.gender(1.0):female; female; female; | actor.gender(1.0):female; female; female; | cast.role(1.0):Female; Female; Female; | producer.gender(1.0):female; female; female; | writer.gender(1.0):female; female; female; | 
425. New York City: VTTEXT; NA; ; (0) director.birth_city(1.0):New York City; New York City; New York City; | actor.birth_city(1.0):New York City; New York City; New York City; | producer.birth_city(1.0):New York City; New York City; New York City; | writer.birth_city(1.0):New York City; New York City; New York City; | cast.role(0.99):New York City; New York City; New York City Cop; | 
427. 1980: VTNUM; NA; ; (0) director.birth_year(1.0):1985; 1993; 1984; | writer.birth_year(1.0):1985; 1993; 1984; | producer.birth_year(1.0):1985; 1993; 1997; | actor.birth_year(0.99):1999; 2003; 1986; | movie.release_year(0.98):2012; 2014; 2015; | 
428. after: OT; >; ; (0) 
How, WRB
many, JJ
female, JJ
actors, NNS
were, VBD
born, VBN
in, IN
New York City, NNP
after, IN
1980, CD
advmod(many-2, How-1)
dep(born-6, many-2)
amod(actors-4, female-3)
nsubjpass(born-6, actors-4)
auxpass(born-6, were-5)
root(ROOT-0, born-6)
case(New York City-8, in-7)
nmod(born-6, New York City-8)
case(1980-10, after-9)
nmod(born-6, 1980-10)

PARSE TREE:(418) ROOT ROOT
    (421) How many CMT
        (422) actors NT
            (423) female VTTEXT
            (419) born NT
                (425) New York City VTTEXT
                (427) 1980 VTNUM
                    (428) after OT


===========
TRANSLATIONS
===========
TOT: 0.9199625252525253; NL: 0.9199625252525253; NL+AG: 0.9730899374393674; NL+QF: 0.9674020202020202; rels: [tags]; projs: [count(distinct(actor_0.name))]; preds: [director_0.gender = "female",director_0.birth_city = "New York City",director_0.birth_year > 1980]; havings: []; superlative: []; blanks: 0
TOT: 0.9199625252525253; NL: 0.9199625252525253; NL+AG: 0.9730899374393674; NL+QF: 0.9674020202020202; rels: [tags]; projs: [count(distinct(actor_0.name))]; preds: [director_0.gender = "female",director_0.birth_city = "New York City",writer_0.birth_year > 1980]; havings: []; superlative: []; blanks: 0
TOT: 0.9199625252525253; NL: 0.9199625252525253; NL+AG: 0.9730899374393674; NL+QF: 0.9674020202020202; rels: [tags]; projs: [count(distinct(actor_0.name))]; preds: [director_0.gender = "female",actor_0.birth_city = "New York City",director_0.birth_year > 1980]; havings: []; superlative: []; blanks: 0
TOT: 0.9199625252525253; NL: 0.9199625252525253; NL+AG: 0.9730899374393674; NL+QF: 0.9674020202020202; rels: [tags]; projs: [count(distinct(actor_0.name))]; preds: [director_0.gender = "female",actor_0.birth_city = "New York City",writer_0.birth_year > 1980]; havings: []; superlative: []; blanks: 0
TOT: 0.9199625252525253; NL: 0.9199625252525253; NL+AG: 0.9730899374393674; NL+QF: 0.9674020202020202; rels: [tags]; projs: [count(distinct(actor_0.name))]; preds: [director_0.gender = "female",producer_0.birth_city = "New York City",director_0.birth_year > 1980]; havings: []; superlative: []; blanks: 0
TOT: 0.9199625252525253; NL: 0.9199625252525253; NL+AG: 0.9730899374393674; NL+QF: 0.9674020202020202; rels: [tags]; projs: [count(distinct(actor_0.name))]; preds: [director_0.gender = "female",producer_0.birth_city = "New York City",writer_0.birth_year > 1980]; havings: []; superlative: []; blanks: 0
TOT: 0.9199625252525253; NL: 0.9199625252525253; NL+AG: 0.9730899374393674; NL+QF: 0.9674020202020202; rels: [tags]; projs: [count(distinct(actor_0.name))]; preds: [director_0.gender = "female",writer_0.birth_city = "New York City",director_0.birth_year > 1980]; havings: []; superlative: []; blanks: 0
TOT: 0.9199625252525253; NL: 0.9199625252525253; NL+AG: 0.9730899374393674; NL+QF: 0.9674020202020202; rels: [tags]; projs: [count(distinct(actor_0.name))]; preds: [director_0.gender = "female",writer_0.birth_city = "New York City",writer_0.birth_year > 1980]; havings: []; superlative: []; blanks: 0
TOT: 0.9199625252525253; NL: 0.9199625252525253; NL+AG: 0.9730899374393674; NL+QF: 0.9674020202020202; rels: [tags]; projs: [count(distinct(actor_0.name))]; preds: [actor_0.gender = "female",director_0.birth_city = "New York City",director_0.birth_year > 1980]; havings: []; superlative: []; blanks: 0
TOT: 0.9199625252525253; NL: 0.9199625252525253; NL+AG: 0.9730899374393674; NL+QF: 0.9674020202020202; rels: [tags]; projs: [count(distinct(actor_0.name))]; preds: [actor_0.gender = "female",director_0.birth_city = "New York City",writer_0.birth_year > 1980]; havings: []; superlative: []; blanks: 0

===========
RESULTS
===========
TOT: 0.9139771857142858; TR: 0.9199625252525253; SMP: 0.3214285714285714; select count(distinct(actor_0.name)) from actor as actor_0, cast as cast_0, directed_by as directed_by_0, director as director_0, tags as tags_0, tv_series as tv_series_0, tv_series as tv_series_1 where director_0.birth_city = "New York City" and director_0.birth_year > 1980 and director_0.gender = "female" and actor_0.aid = cast_0.aid and cast_0.msid = tv_series_1.sid and directed_by_0.did = director_0.did and directed_by_0.msid = tv_series_0.sid and tags_0.msid = tv_series_0.sid and tags_0.msid = tv_series_1.sid
TOT: 0.9139771857142858; TR: 0.9199625252525253; SMP: 0.3214285714285714; select count(distinct(actor_0.name)) from actor as actor_0, cast as cast_0, directed_by as directed_by_0, director as director_0, tags as tags_0, tv_series as tv_series_0, tv_series as tv_series_1 where actor_0.birth_city = "New York City" and director_0.birth_year > 1980 and director_0.gender = "female" and actor_0.aid = cast_0.aid and cast_0.msid = tv_series_1.sid and directed_by_0.did = director_0.did and directed_by_0.msid = tv_series_0.sid and tags_0.msid = tv_series_0.sid and tags_0.msid = tv_series_1.sid
TOT: 0.9139771857142858; TR: 0.9199625252525253; SMP: 0.3214285714285714; select count(distinct(actor_0.name)) from actor as actor_0, cast as cast_0, directed_by as directed_by_0, director as director_0, tags as tags_0, tv_series as tv_series_0, tv_series as tv_series_1 where actor_0.gender = "female" and director_0.birth_city = "New York City" and director_0.birth_year > 1980 and actor_0.aid = cast_0.aid and cast_0.msid = tv_series_1.sid and directed_by_0.did = director_0.did and directed_by_0.msid = tv_series_0.sid and tags_0.msid = tv_series_0.sid and tags_0.msid = tv_series_1.sid
TOT: 0.9139771857142858; TR: 0.9199625252525253; SMP: 0.3214285714285714; select count(distinct(actor_0.name)) from actor as actor_0, cast as cast_0, directed_by as directed_by_0, director as director_0, movie as movie_0, movie as movie_1, tags as tags_0 where director_0.birth_city = "New York City" and director_0.birth_year > 1980 and director_0.gender = "female" and actor_0.aid = cast_0.aid and cast_0.msid = movie_1.mid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and movie_0.mid = tags_0.msid and movie_1.mid = tags_0.msid
TOT: 0.9139771857142858; TR: 0.9199625252525253; SMP: 0.3214285714285714; select count(distinct(actor_0.name)) from actor as actor_0, cast as cast_0, directed_by as directed_by_0, director as director_0, movie as movie_0, movie as movie_1, tags as tags_0 where actor_0.birth_city = "New York City" and director_0.birth_year > 1980 and director_0.gender = "female" and actor_0.aid = cast_0.aid and cast_0.msid = movie_1.mid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and movie_0.mid = tags_0.msid and movie_1.mid = tags_0.msid
TOT: 0.9139771857142858; TR: 0.9199625252525253; SMP: 0.3214285714285714; select count(distinct(actor_0.name)) from actor as actor_0, cast as cast_0, directed_by as directed_by_0, director as director_0, movie as movie_0, movie as movie_1, tags as tags_0 where actor_0.gender = "female" and director_0.birth_city = "New York City" and director_0.birth_year > 1980 and actor_0.aid = cast_0.aid and cast_0.msid = movie_1.mid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and movie_0.mid = tags_0.msid and movie_1.mid = tags_0.msid
TOT: 0.9139771857142858; TR: 0.9199625252525253; SMP: 0.3214285714285714; select count(distinct(actor_0.name)) from actor as actor_0, cast as cast_0, directed_by as directed_by_0, director as director_0, movie as movie_0, tags as tags_0, tv_series as tv_series_0 where director_0.birth_city = "New York City" and director_0.birth_year > 1980 and director_0.gender = "female" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and directed_by_0.did = director_0.did and directed_by_0.msid = tv_series_0.sid and movie_0.mid = tags_0.msid and tags_0.msid = tv_series_0.sid
TOT: 0.9139771857142858; TR: 0.9199625252525253; SMP: 0.3214285714285714; select count(distinct(actor_0.name)) from actor as actor_0, cast as cast_0, directed_by as directed_by_0, director as director_0, movie as movie_0, tags as tags_0, tv_series as tv_series_0 where actor_0.birth_city = "New York City" and director_0.birth_year > 1980 and director_0.gender = "female" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and directed_by_0.did = director_0.did and directed_by_0.msid = tv_series_0.sid and movie_0.mid = tags_0.msid and tags_0.msid = tv_series_0.sid
TOT: 0.9139771857142858; TR: 0.9199625252525253; SMP: 0.3214285714285714; select count(distinct(actor_0.name)) from actor as actor_0, cast as cast_0, directed_by as directed_by_0, director as director_0, movie as movie_0, tags as tags_0, tv_series as tv_series_0 where actor_0.gender = "female" and director_0.birth_city = "New York City" and director_0.birth_year > 1980 and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and directed_by_0.did = director_0.did and directed_by_0.msid = tv_series_0.sid and movie_0.mid = tags_0.msid and tags_0.msid = tv_series_0.sid
TOT: 0.9139771857142858; TR: 0.9199625252525253; SMP: 0.3214285714285714; select count(distinct(actor_0.name)) from actor as actor_0, cast as cast_0, directed_by as directed_by_0, director as director_0, movie as movie_0, tags as tags_0, tv_series as tv_series_0 where director_0.birth_city = "New York City" and director_0.birth_year > 1980 and director_0.gender = "female" and actor_0.aid = cast_0.aid and cast_0.msid = tv_series_0.sid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and movie_0.mid = tags_0.msid and tags_0.msid = tv_series_0.sid


01:34  INFO: ================
01:34  INFO: QUERY 53: Find all tv series produced by Netflix
01:34  INFO: ================
430. ROOT: ROOT; NA; ; (0) 
431. Find: CMT; NA; ; (0) 
432. series: NT; NA; all; (0) tv_series.title(1.0):| tv_series(1.0):| keyword.keyword(0.9):series; series-in-series; tv-series; | cast.role(0.85):Serie; Serie; Serie; | company.name(0.84):Series+; G-Series; T-Series; | 
434. tv: NT; NA; ; (0) tv_series.title(1.0):| tv_series(1.0):| movie.title(0.69):| movie(0.69):| tv_series.num_of_episodes(0.67):| 
435. produced: NT; NA; ; (0) producer.name(1.0):| producer(1.0):| made_by(0.74):| directed_by(0.69):| cast.role(0.63):| 
436. Netflix: VTTEXT; NA; ; (0) company.name(1.0):Netflix; Netflix; Netflix; | keyword.keyword(0.86):netflix; netflix-series; netflix-production; | tv_series.title(0.78):| tv_series(0.78):| cast.role(0.77):Netflix guy; | 
Find, VB
all, DT
tv, NN
series, NN
produced, VBN
by, IN
Netflix, NNP
root(ROOT-0, Find-1)
det(series-4, all-2)
compound(series-4, tv-3)
dobj(Find-1, series-4)
acl(series-4, produced-5)
case(Netflix-7, by-6)
nmod(produced-5, Netflix-7)

PARSE TREE:(430) ROOT ROOT
    (431) Find CMT
        (432) series NT
            (434) tv NT
            (435) produced NT
                (436) Netflix VTTEXT


===========
TRANSLATIONS
===========
TOT: 1.0; NL: 1.0; NL+AG: 1.0; NL+QF: 1.0; rels: [producer]; projs: [tv_series_0.title]; preds: [company_0.name = "Netflix"]; havings: []; superlative: []; blanks: 0
TOT: 1.0; NL: 1.0; NL+AG: 1.0; NL+QF: 1.0; rels: [producer]; projs: [tv_series_0.title]; preds: []; havings: []; superlative: []; blanks: 0
TOT: 0.954406239574876; NL: 0.954406239574876; NL+AG: 0.954406239574876; NL+QF: 0.969604159716584; rels: [producer]; projs: [tv_series_0.title]; preds: [keyword_0.keyword = "netflix"]; havings: []; superlative: []; blanks: 0
TOT: 0.9282166666666667; NL: 0.9282166666666667; NL+AG: 0.9602729565096298; NL+QF: 0.9555555555555556; rels: [producer,tv_series]; projs: [tv_series_0.title]; preds: []; havings: []; superlative: []; blanks: 0
TOT: 0.9248655564138278; NL: 0.9248655564138278; NL+AG: 0.9776410850753393; NL+QF: 0.9555555555555556; rels: [producer]; projs: [tv_series_0.title]; preds: [cast_0.role = "Netflix guy"]; havings: []; superlative: []; blanks: 0
TOT: 0.9141833333333335; NL: 0.9141833333333335; NL+AG: 0.964472307167625; NL+QF: 0.9555555555555557; rels: [made_by]; projs: [tv_series_0.title]; preds: [company_0.name = "Netflix"]; havings: []; superlative: []; blanks: 0
TOT: 0.9000000000000001; NL: 0.9000000000000001; NL+AG: 0.9675156727817891; NL+QF: 0.964168686868687; rels: [producer]; projs: [tv_series_0.title]; preds: [company_0.name = "Netflix"]; havings: []; superlative: []; blanks: 1
TOT: 0.8979; NL: 0.8979; NL+AG: 0.964472307167625; NL+QF: 0.9555555555555557; rels: [directed_by]; projs: [tv_series_0.title]; preds: [company_0.name = "Netflix"]; havings: []; superlative: []; blanks: 0
TOT: 0.8824166666666667; NL: 0.8824166666666667; NL+AG: 0.9602729565096298; NL+QF: 0.9555555555555556; rels: [producer,keyword]; projs: [tv_series_0.title]; preds: []; havings: []; superlative: []; blanks: 0
TOT: 0.8800063375455899; NL: 0.8800063375455899; NL+AG: 0.9332549335579584; NL+QF: 0.9382827888175654; rels: [producer]; projs: [keyword_0.id]; preds: [keyword_0.keyword = "series",company_0.name = "Netflix"]; havings: []; superlative: []; blanks: 1

===========
RESULTS
===========


01:34  INFO: ================
01:34  INFO: QUERY 57: Who is the director of the tv series "House of Cards" from 2013?
01:34  INFO: ================
439. ROOT: ROOT; NA; ; (0) 
442. director: NT; NA; ; (0) director.name(1.0):| director(1.0):| movie.title(0.95):Director; Director; Director; | company.name(0.93):Director; Directors; Directors; | writer.name(0.9):Director; Director X; Director X.; | 
444. House of Cards: VTTEXT; NA; ; (0) movie.title(0.95):House of Cards; House of Cards; House of Cards; | tv_series.title(0.95):House of Cards; House of Cards; House of Cards; | company.name(0.93):House of Cards; House of Cards; House of C; | cast.role(0.72):Boy with House of Ca; Boy with House of Ca; Ted - House of Cards; | keyword.keyword(0.65):house-of-cards; house-of-cards; card-house; | 
447. tv: NT; NA; ; (0) tv_series.title(1.0):| tv_series(1.0):| movie.title(0.69):| movie(0.69):| tv_series.num_of_episodes(0.67):| 
448. series: NT; NA; ; (0) tv_series.title(1.0):| tv_series(1.0):| keyword.keyword(0.9):series; series-in-series; tv-series; | cast.role(0.85):Serie; Serie; Serie; | company.name(0.84):Series+; G-Series; T-Series; | 
449. 2013: VTNUM; NA; ; (0) movie.release_year(1.0):2013; 2013; 2013; | actor.birth_year(1.0):2013; 2013; 2013; | 
Who, WP
is, VBZ
the, DT
director, NN
of, IN
the, DT
tv, NN
series, NN
House of Cards, NN
from, IN
2013, CD
root(ROOT-0, Who-1)
cop(Who-1, is-2)
det(director-4, the-3)
nsubj(Who-1, director-4)
case(House of Cards-9, of-5)
det(House of Cards-9, the-6)
compound(House of Cards-9, tv-7)
compound(House of Cards-9, series-8)
nmod(director-4, House of Cards-9)
case(2013-11, from-10)
nmod(House of Cards-9, 2013-11)

PARSE TREE:(439) ROOT ROOT
    (442) director NT
        (444) House of Cards VTTEXT
            (447) tv NT
            (448) series NT
            (449) 2013 VTNUM


===========
TRANSLATIONS
===========
TOT: 0.875; NL: 0.875; NL+AG: 0.9756177394528744; NL+QF: 0.9625; rels: [director]; projs: [tv_series_0.title]; preds: [tv_series_0.title = "House of Cards",movie_0.release_year = 2013]; havings: []; superlative: []; blanks: 0
TOT: 0.875; NL: 0.875; NL+AG: 0.9756177394528744; NL+QF: 0.9625; rels: [director]; projs: [tv_series_0.title]; preds: [tv_series_0.title = "House of Cards",actor_0.birth_year = 2013]; havings: []; superlative: []; blanks: 0
TOT: 0.875; NL: 0.875; NL+AG: 0.9756177394528744; NL+QF: 0.9625; rels: [director]; projs: [tv_series_0.title]; preds: [tv_series_0.title = "House of Cards",movie_0.release_year = 2013]; havings: []; superlative: []; blanks: 0
TOT: 0.875; NL: 0.875; NL+AG: 0.9756177394528744; NL+QF: 0.9625; rels: [director]; projs: [tv_series_0.title]; preds: [tv_series_0.title = "House of Cards",actor_0.birth_year = 2013]; havings: []; superlative: []; blanks: 0
TOT: 0.870003168772795; NL: 0.870003168772795; NL+AG: 0.9528375464128785; NL+QF: 0.9441608683515694; rels: [director]; projs: [tv_series_0.title]; preds: [movie_0.title = "House of Cards",keyword_0.keyword = "series",movie_0.release_year = 2013]; havings: []; superlative: []; blanks: 0
TOT: 0.870003168772795; NL: 0.870003168772795; NL+AG: 0.9528375464128785; NL+QF: 0.9440025350182359; rels: [director]; projs: [tv_series_0.title]; preds: [movie_0.title = "House of Cards",keyword_0.keyword = "series",actor_0.birth_year = 2013]; havings: []; superlative: []; blanks: 0
TOT: 0.870003168772795; NL: 0.870003168772795; NL+AG: 0.9528375464128785; NL+QF: 0.9440025350182359; rels: [director]; projs: [tv_series_0.title]; preds: [tv_series_0.title = "House of Cards",keyword_0.keyword = "series",movie_0.release_year = 2013]; havings: []; superlative: []; blanks: 0
TOT: 0.870003168772795; NL: 0.870003168772795; NL+AG: 0.9528375464128785; NL+QF: 0.9440025350182359; rels: [director]; projs: [tv_series_0.title]; preds: [tv_series_0.title = "House of Cards",keyword_0.keyword = "series",actor_0.birth_year = 2013]; havings: []; superlative: []; blanks: 0
TOT: 0.8668121243652142; NL: 0.8668121243652142; NL+AG: 0.9496465020052977; NL+QF: 0.9414496994921713; rels: [director]; projs: [tv_series_0.title]; preds: [company_0.name = "House of Cards",keyword_0.keyword = "series",movie_0.release_year = 2013]; havings: []; superlative: []; blanks: 0
TOT: 0.8668121243652142; NL: 0.8668121243652142; NL+AG: 0.9496465020052977; NL+QF: 0.9414496994921713; rels: [director]; projs: [tv_series_0.title]; preds: [company_0.name = "House of Cards",keyword_0.keyword = "series",actor_0.birth_year = 2013]; havings: []; superlative: []; blanks: 0

===========
RESULTS
===========


01:38  INFO: ================
01:38  INFO: QUERY 129: Which producer has worked with the most number of directors?
01:38  INFO: ================
452. ROOT: ROOT; NA; ; (0) 
453. worked: NT; NA; ; (0) directed_by(0.71):| director.did(0.69):| made_by(0.64):| producer.name(0.63):| producer(0.63):| 
454. Which: CMT; NA; ; (0) 
455. producer: NT; NA; ; (0) producer.name(1.0):| producer(1.0):| movie.title(0.87):Producer; Producer Sam; The Producer; | writer.name(0.87):producer; The Producer; Producer Wardy; | director.name(0.86):producer; The Producer; senior producer; | 
457. number of: FT; count; ; (0) 
460. most: FT; max; ; (0) 
461. directors: NT; NA; ; (0) director.name(1.0):| director(1.0):| company.name(0.94):Directors; Directors; Director; | movie.title(0.89):Director; Director; Director; | writer.name(0.84):Director; Director X; Director X.; | 
Which, WDT
producer, NN
has, VBZ
worked, VBN
with, IN
the, DT
most, JJS
number, NN
of, IN
directors, NNS
dobj(worked-4, Which-1)
nsubj(worked-4, producer-2)
aux(worked-4, has-3)
root(ROOT-0, worked-4)
case(number-8, with-5)
det(number-8, the-6)
amod(number-8, most-7)
nmod(worked-4, number-8)
case(directors-10, of-9)
nmod(number-8, directors-10)

PARSE TREE:(452) ROOT ROOT
    (454) Which CMT
        (455) producer NT
            (453) worked NT
                (461) directors NT


===========
TRANSLATIONS
===========
TOT: 0.9266625; NL: 0.9266625; NL+AG: 0.9743741996603672; NL+QF: 0.964266625; rels: [directed_by]; projs: [producer_0.name]; preds: []; havings: []; superlative: [count(distinct(director_0.name)) desc limit 1]; blanks: 0
TOT: 0.9096500000000001; NL: 0.9096500000000001; NL+AG: 0.9743741996603672; NL+QF: 0.9625; rels: [made_by]; projs: [producer_0.name]; preds: []; havings: []; superlative: [count(distinct(director_0.name)) desc limit 1]; blanks: 0
TOT: 0.908725; NL: 0.908725; NL+AG: 0.9743741996603672; NL+QF: 0.9625; rels: [producer]; projs: [producer_0.name]; preds: []; havings: []; superlative: [count(distinct(director_0.name)) desc limit 1]; blanks: 0
TOT: 0.9; NL: 0.9; NL+AG: 0.9743741996603672; NL+QF: 0.9643308764046759; rels: []; projs: [producer_0.name]; preds: []; havings: []; superlative: [count(distinct(director_0.name)) desc limit 1]; blanks: 1
TOT: 0.8745161776152864; NL: 0.8745161776152864; NL+AG: 0.9072846225926666; NL+QF: 0.9188012784420942; rels: [directed_by]; projs: [producer_0.name]; preds: [movie_0.title = "Director"]; havings: []; superlative: [movie_0.mid desc limit 1]; blanks: 0
TOT: 0.8609061776152865; NL: 0.8609061776152865; NL+AG: 0.9072846225926666; NL+QF: 0.9145489420922293; rels: [made_by]; projs: [producer_0.name]; preds: [movie_0.title = "Director"]; havings: []; superlative: [movie_0.mid desc limit 1]; blanks: 0
TOT: 0.8601661776152865; NL: 0.8601661776152865; NL+AG: 0.9072846225926666; NL+QF: 0.9145489420922293; rels: [producer]; projs: [producer_0.name]; preds: [movie_0.title = "Director"]; havings: []; superlative: [movie_0.mid desc limit 1]; blanks: 0
TOT: 0.8555625; NL: 0.8555625; NL+AG: 0.946138013386257; NL+QF: 0.9267666250000001; rels: [directed_by]; projs: [writer_0.name]; preds: []; havings: []; superlative: [count(distinct(director_0.name)) desc limit 1]; blanks: 0
TOT: 0.8531861776152866; NL: 0.8531861776152866; NL+AG: 0.9072846225926666; NL+QF: 0.9164756414533013; rels: []; projs: [producer_0.name]; preds: [movie_0.title = "Director"]; havings: []; superlative: [movie_0.mid desc limit 1]; blanks: 1
TOT: 0.8439875; NL: 0.8439875; NL+AG: 0.946138013386257; NL+QF: 0.9330209431818182; rels: [directed_by]; projs: [director_0.name]; preds: []; havings: []; superlative: [count(distinct(director_0.name)) desc limit 1]; blanks: 0

===========
RESULTS
===========
TOT: 0.9208958749999999; TR: 0.9266625; SMP: 0.35; select producer_0.name from directed_by as directed_by_0, director as director_0, made_by as made_by_0, producer as producer_0, tv_series as tv_series_0 where directed_by_0.did = director_0.did and directed_by_0.msid = tv_series_0.sid and made_by_0.msid = tv_series_0.sid and made_by_0.pid = producer_0.pid group by producer_0.name order by count(distinct(director_0.name)) desc limit 1
TOT: 0.9208958749999999; TR: 0.9266625; SMP: 0.35; select producer_0.name from directed_by as directed_by_0, director as director_0, made_by as made_by_0, movie as movie_0, producer as producer_0 where directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid group by producer_0.name order by count(distinct(director_0.name)) desc limit 1
TOT: 0.9206101607142857; TR: 0.9266625; SMP: 0.3214285714285714; select producer_0.name from directed_by as directed_by_0, director as director_0, made_by as made_by_0, movie as movie_0, producer as producer_0, tags as tags_0, tv_series as tv_series_0 where directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and made_by_0.msid = tv_series_0.sid and made_by_0.pid = producer_0.pid and movie_0.mid = tags_0.msid and tags_0.msid = tv_series_0.sid group by producer_0.name order by count(distinct(director_0.name)) desc limit 1
TOT: 0.9206101607142857; TR: 0.9266625; SMP: 0.3214285714285714; select producer_0.name from directed_by as directed_by_0, director as director_0, made_by as made_by_0, made_by as made_by_1, movie as movie_0, producer as producer_0, tv_series as tv_series_0 where directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and made_by_0.msid = movie_0.mid and made_by_0.msid = tv_series_0.sid and made_by_1.msid = tv_series_0.sid and made_by_1.pid = producer_0.pid group by producer_0.name order by count(distinct(director_0.name)) desc limit 1
TOT: 0.9206101607142857; TR: 0.9266625; SMP: 0.3214285714285714; select producer_0.name from directed_by as directed_by_0, directed_by as directed_by_1, director as director_0, made_by as made_by_0, movie as movie_0, producer as producer_0, tv_series as tv_series_0 where directed_by_0.msid = movie_0.mid and directed_by_0.msid = tv_series_0.sid and directed_by_1.did = director_0.did and directed_by_1.msid = tv_series_0.sid and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid group by producer_0.name order by count(distinct(director_0.name)) desc limit 1
TOT: 0.9206101607142857; TR: 0.9266625; SMP: 0.3214285714285714; select producer_0.name from classification as classification_0, directed_by as directed_by_0, director as director_0, made_by as made_by_0, movie as movie_0, producer as producer_0, tv_series as tv_series_0 where classification_0.msid = movie_0.mid and classification_0.msid = tv_series_0.sid and directed_by_0.did = director_0.did and directed_by_0.msid = tv_series_0.sid and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid group by producer_0.name order by count(distinct(director_0.name)) desc limit 1
TOT: 0.9206101607142857; TR: 0.9266625; SMP: 0.3214285714285714; select producer_0.name from directed_by as directed_by_0, director as director_0, made_by as made_by_0, movie as movie_0, producer as producer_0, tv_series as tv_series_0, written_by as written_by_0 where directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and made_by_0.msid = tv_series_0.sid and made_by_0.pid = producer_0.pid and movie_0.mid = written_by_0.msid and tv_series_0.sid = written_by_0.msid group by producer_0.name order by count(distinct(director_0.name)) desc limit 1
TOT: 0.9206101607142857; TR: 0.9266625; SMP: 0.3214285714285714; select producer_0.name from copyright as copyright_0, directed_by as directed_by_0, director as director_0, made_by as made_by_0, producer as producer_0, tv_series as tv_series_0, tv_series as tv_series_1 where copyright_0.msid = tv_series_0.sid and copyright_0.msid = tv_series_1.sid and directed_by_0.did = director_0.did and directed_by_0.msid = tv_series_1.sid and made_by_0.msid = tv_series_0.sid and made_by_0.pid = producer_0.pid group by producer_0.name order by count(distinct(director_0.name)) desc limit 1
TOT: 0.9206101607142857; TR: 0.9266625; SMP: 0.3214285714285714; select producer_0.name from cast as cast_0, directed_by as directed_by_0, director as director_0, made_by as made_by_0, producer as producer_0, tv_series as tv_series_0, tv_series as tv_series_1 where cast_0.msid = tv_series_0.sid and cast_0.msid = tv_series_1.sid and directed_by_0.did = director_0.did and directed_by_0.msid = tv_series_0.sid and made_by_0.msid = tv_series_1.sid and made_by_0.pid = producer_0.pid group by producer_0.name order by count(distinct(director_0.name)) desc limit 1
TOT: 0.9206101607142857; TR: 0.9266625; SMP: 0.3214285714285714; select producer_0.name from classification as classification_0, directed_by as directed_by_0, director as director_0, made_by as made_by_0, producer as producer_0, tv_series as tv_series_0, tv_series as tv_series_1 where classification_0.msid = tv_series_0.sid and classification_0.msid = tv_series_1.sid and directed_by_0.did = director_0.did and directed_by_0.msid = tv_series_0.sid and made_by_0.msid = tv_series_1.sid and made_by_0.pid = producer_0.pid group by producer_0.name order by count(distinct(director_0.name)) desc limit 1


01:39  INFO: ================
01:39  INFO: QUERY 16: How much was the budget of "Finding Nemo"
01:39  INFO: ================
464. ROOT: ROOT; NA; ; (0) 
467. How much: CMT; count; ; (0) 
468. budget: NT; NA; ; (0) movie.budget(1.0):| tv_series.budget(1.0):| movie.title(0.89):Budget; Fudget's Budget; No Budget; | keyword.keyword(0.87):budget; in-budget; no-budget; | cast.role(0.87):Budgets; Budgets; Budgets; | 
470. Finding Nemo: VTTEXT; NA; ; (0) movie.title(0.99):Finding Nemo; Finding Nemo; Finding Neo; | company.name(0.81):Finding Cinema; Finding Cinema; Finding Darwin Films; | tv_series.title(0.8):Finding Mine; Finding Mine; Finding; | cast.role(0.78):Finding; Finding; Director - Finding N; | keyword.keyword(0.73):finding-money; finding-money; finding-a-ring; | 
How, WRB
much, JJ
was, VBD
the, DT
budget, NN
of, IN
Finding Nemo, NNP
advmod(much-2, How-1)
dep(was-3, much-2)
root(ROOT-0, was-3)
det(budget-5, the-4)
nsubj(was-3, budget-5)
case(Finding Nemo-7, of-6)
nmod(budget-5, Finding Nemo-7)

PARSE TREE:(464) ROOT ROOT
    (467) How much CMT
        (468) budget NT
            (470) Finding Nemo VTTEXT


===========
TRANSLATIONS
===========
TOT: 0.9940352422963991; NL: 0.9940352422963991; NL+AG: 0.9940352422963991; NL+QF: 0.9970176211481996; rels: []; projs: [count(distinct(movie_0.budget))]; preds: [movie_0.title = "Finding Nemo"]; havings: []; superlative: []; blanks: 0
TOT: 0.9940352422963991; NL: 0.9940352422963991; NL+AG: 0.9940352422963991; NL+QF: 0.9970176211481996; rels: []; projs: [count(distinct(tv_series_0.budget))]; preds: [movie_0.title = "Finding Nemo"]; havings: []; superlative: []; blanks: 0
TOT: 0.9042522171018474; NL: 0.9042522171018474; NL+AG: 0.9042522171018474; NL+QF: 0.9521261085509237; rels: []; projs: [count(distinct(movie_0.budget))]; preds: [company_0.name = "Finding Cinema"]; havings: []; superlative: []; blanks: 0
TOT: 0.9042522171018474; NL: 0.9042522171018474; NL+AG: 0.9042522171018474; NL+QF: 0.9521261085509237; rels: []; projs: [count(distinct(tv_series_0.budget))]; preds: [company_0.name = "Finding Cinema"]; havings: []; superlative: []; blanks: 0
TOT: 0.9024665357856455; NL: 0.9024665357856455; NL+AG: 0.9024665357856455; NL+QF: 0.9512332678928228; rels: []; projs: [count(distinct(movie_0.budget))]; preds: [tv_series_0.title = "Finding Mine"]; havings: []; superlative: []; blanks: 0
TOT: 0.9024665357856455; NL: 0.9024665357856455; NL+AG: 0.9024665357856455; NL+QF: 0.9512332678928228; rels: []; projs: [count(distinct(tv_series_0.budget))]; preds: [tv_series_0.title = "Finding Mine"]; havings: []; superlative: []; blanks: 0
TOT: 0.8910840237741606; NL: 0.8910840237741606; NL+AG: 0.9736434108527132; NL+QF: 0.95; rels: []; projs: [count(distinct(movie_0.budget))]; preds: [cast_0.role = "Finding"]; havings: []; superlative: []; blanks: 0
TOT: 0.8910840237741606; NL: 0.8910840237741606; NL+AG: 0.9736434108527132; NL+QF: 0.95; rels: []; projs: [count(distinct(tv_series_0.budget))]; preds: [cast_0.role = "Finding"]; havings: []; superlative: []; blanks: 0
TOT: 0.8668497067942798; NL: 0.8668497067942798; NL+AG: 0.9736434108527132; NL+QF: 0.95; rels: []; projs: [count(distinct(movie_0.budget))]; preds: [keyword_0.keyword = "finding-money"]; havings: []; superlative: []; blanks: 0
TOT: 0.8668497067942798; NL: 0.8668497067942798; NL+AG: 0.9736434108527132; NL+QF: 0.95; rels: []; projs: [count(distinct(tv_series_0.budget))]; preds: [keyword_0.keyword = "finding-money"]; havings: []; superlative: []; blanks: 0

===========
RESULTS
===========
TOT: 0.991594889873435; TR: 0.9940352422963991; SMP: 0.75; select count(distinct(movie_0.budget)) from movie as movie_0 where movie_0.title = "Finding Nemo"
TOT: 0.900941870427789; TR: 0.9024665357856455; SMP: 0.75; select count(distinct(tv_series_0.budget)) from tv_series as tv_series_0 where tv_series_0.title = "Finding Mine"
TOT: 0.8993763615974956; TR: 0.9042522171018474; SMP: 0.41666666666666663; select count(distinct(tv_series_0.budget)) from company as company_0, copyright as copyright_0, tv_series as tv_series_0 where company_0.name = "Finding Cinema" and company_0.id = copyright_0.cid and copyright_0.msid = tv_series_0.sid
TOT: 0.8993763615974956; TR: 0.9042522171018474; SMP: 0.41666666666666663; select count(distinct(movie_0.budget)) from company as company_0, copyright as copyright_0, movie as movie_0 where company_0.name = "Finding Cinema" and company_0.id = copyright_0.cid and copyright_0.msid = movie_0.mid
TOT: 0.887173183536419; TR: 0.8910840237741606; SMP: 0.5; select count(distinct(movie_0.budget)) from cast as cast_0, movie as movie_0 where cast_0.role = "Finding" and cast_0.msid = movie_0.mid
TOT: 0.887173183536419; TR: 0.8910840237741606; SMP: 0.5; select count(distinct(tv_series_0.budget)) from cast as cast_0, tv_series as tv_series_0 where cast_0.role = "Finding" and cast_0.msid = tv_series_0.sid
TOT: 0.8623478763930036; TR: 0.8668497067942798; SMP: 0.41666666666666663; select count(distinct(tv_series_0.budget)) from keyword as keyword_0, tags as tags_0, tv_series as tv_series_0 where keyword_0.keyword = "finding-money" and keyword_0.id = tags_0.kid and tags_0.msid = tv_series_0.sid
TOT: 0.8623478763930036; TR: 0.8668497067942798; SMP: 0.41666666666666663; select count(distinct(movie_0.budget)) from keyword as keyword_0, movie as movie_0, tags as tags_0 where keyword_0.keyword = "finding-money" and keyword_0.id = tags_0.kid and movie_0.mid = tags_0.msid


01:39  INFO: ================
01:39  INFO: QUERY 9: When was "Kevin Spacey" born?
01:39  INFO: ================
473. ROOT: ROOT; NA; ; (0) 
474. born: NT; NA; ; (0) tv_series.num_of_episodes(0.62):| tv_series.num_of_seasons(0.62):| tags(0.6):| director.did(0.6):| producer.name(0.59):| 
477. Kevin Spacey: VTTEXT; NA; ; (0) writer.name(0.99):Kevin Spacey; Kevin Spacey; Kevin Pacey; | director.name(0.98):Kevin Spacey; Kevin Spacey; Kevin Spacey Fowler; | producer.name(0.98):Kevin Spacey; Kevin Spacey; Kevin Spacey Fowler; | actor.name(0.9):Kevin Spacey; Kevin Spacey Fowler; John Spacey; | cast.role(0.85):Kid Kevin Spacey; Kid Kevin Spacey; Kevin Spatz; | 
When, WRB
was, VBD
Kevin Spacey, NNP
born, VBN
advmod(born-4, When-1)
auxpass(born-4, was-2)
nsubjpass(born-4, Kevin Spacey-3)
root(ROOT-0, born-4)

PARSE TREE:(473) ROOT ROOT
    (474) born NT
        (477) Kevin Spacey VTTEXT


===========
TRANSLATIONS
===========
TOT: 0.6480183165160516; NL: 0.6480183165160516; NL+AG: 0.948360361970597; NL+QF: 0.9464529082580257; rels: []; projs: [tv_series_0.num_of_episodes]; preds: [writer_0.name = "Kevin Spacey"]; havings: []; superlative: []; blanks: 0
TOT: 0.6480183165160516; NL: 0.6480183165160516; NL+AG: 0.948360361970597; NL+QF: 0.9464529082580257; rels: []; projs: [tv_series_0.num_of_seasons]; preds: [writer_0.name = "Kevin Spacey"]; havings: []; superlative: []; blanks: 0
TOT: 0.6441992979985285; NL: 0.6441992979985285; NL+AG: 0.9445413434530741; NL+QF: 0.9445433989992642; rels: []; projs: [tv_series_0.num_of_episodes]; preds: [director_0.name = "Kevin Spacey"]; havings: []; superlative: []; blanks: 0
TOT: 0.6441992979985285; NL: 0.6441992979985285; NL+AG: 0.9445413434530741; NL+QF: 0.9445433989992642; rels: []; projs: [tv_series_0.num_of_episodes]; preds: [producer_0.name = "Kevin Spacey"]; havings: []; superlative: []; blanks: 0
TOT: 0.6441992979985285; NL: 0.6441992979985285; NL+AG: 0.9445413434530741; NL+QF: 0.9445433989992642; rels: []; projs: [tv_series_0.num_of_seasons]; preds: [director_0.name = "Kevin Spacey"]; havings: []; superlative: []; blanks: 0
TOT: 0.6441992979985285; NL: 0.6441992979985285; NL+AG: 0.9445413434530741; NL+QF: 0.9445433989992642; rels: []; projs: [tv_series_0.num_of_seasons]; preds: [producer_0.name = "Kevin Spacey"]; havings: []; superlative: []; blanks: 0
TOT: 0.6435808165160516; NL: 0.6435808165160516; NL+AG: 0.948360361970597; NL+QF: 0.9464529082580257; rels: []; projs: [director_0.did]; preds: [writer_0.name = "Kevin Spacey"]; havings: []; superlative: []; blanks: 0
TOT: 0.6397617979985286; NL: 0.6397617979985286; NL+AG: 0.9445413434530741; NL+QF: 0.9445433989992642; rels: []; projs: [director_0.did]; preds: [director_0.name = "Kevin Spacey"]; havings: []; superlative: []; blanks: 0
TOT: 0.6397617979985286; NL: 0.6397617979985286; NL+AG: 0.9445413434530741; NL+QF: 0.9445433989992642; rels: []; projs: [director_0.did]; preds: [producer_0.name = "Kevin Spacey"]; havings: []; superlative: []; blanks: 0
TOT: 0.6057440846191815; NL: 0.6057440846191815; NL+AG: 0.9060861300737268; NL+QF: 0.9253157923095907; rels: []; projs: [tv_series_0.num_of_episodes]; preds: [actor_0.name = "Kevin Spacey"]; havings: []; superlative: []; blanks: 0

===========
RESULTS
===========
TOT: 0.6457048000175577; TR: 0.6480183165160516; SMP: 0.41666666666666663; select tv_series_0.num_of_episodes from tv_series as tv_series_0, writer as writer_0, written_by as written_by_0 where writer_0.name = "Kevin Spacey" and tv_series_0.sid = written_by_0.msid and writer_0.wid = written_by_0.wid
TOT: 0.6457048000175577; TR: 0.6480183165160516; SMP: 0.41666666666666663; select tv_series_0.num_of_seasons from tv_series as tv_series_0, writer as writer_0, written_by as written_by_0 where writer_0.name = "Kevin Spacey" and tv_series_0.sid = written_by_0.msid and writer_0.wid = written_by_0.wid
TOT: 0.6419239716852099; TR: 0.6441992979985285; SMP: 0.41666666666666663; select tv_series_0.num_of_episodes from directed_by as directed_by_0, director as director_0, tv_series as tv_series_0 where director_0.name = "Kevin Spacey" and directed_by_0.did = director_0.did and directed_by_0.msid = tv_series_0.sid
TOT: 0.6419239716852099; TR: 0.6441992979985285; SMP: 0.41666666666666663; select tv_series_0.num_of_seasons from directed_by as directed_by_0, director as director_0, tv_series as tv_series_0 where director_0.name = "Kevin Spacey" and directed_by_0.did = director_0.did and directed_by_0.msid = tv_series_0.sid
TOT: 0.6419239716852099; TR: 0.6441992979985285; SMP: 0.41666666666666663; select tv_series_0.num_of_episodes from made_by as made_by_0, producer as producer_0, tv_series as tv_series_0 where producer_0.name = "Kevin Spacey" and made_by_0.msid = tv_series_0.sid and made_by_0.pid = producer_0.pid
TOT: 0.6419239716852099; TR: 0.6441992979985285; SMP: 0.41666666666666663; select tv_series_0.num_of_seasons from made_by as made_by_0, producer as producer_0, tv_series as tv_series_0 where producer_0.name = "Kevin Spacey" and made_by_0.msid = tv_series_0.sid and made_by_0.pid = producer_0.pid
TOT: 0.6408641800185433; TR: 0.6397617979985286; SMP: 0.75; select director_0.did from director as director_0 where director_0.name = "Kevin Spacey"
TOT: 0.640645008350891; TR: 0.6435808165160516; SMP: 0.35; select director_0.did from directed_by as directed_by_0, director as director_0, tv_series as tv_series_0, writer as writer_0, written_by as written_by_0 where writer_0.name = "Kevin Spacey" and directed_by_0.did = director_0.did and directed_by_0.msid = tv_series_0.sid and tv_series_0.sid = written_by_0.msid and writer_0.wid = written_by_0.wid
TOT: 0.640645008350891; TR: 0.6435808165160516; SMP: 0.35; select director_0.did from directed_by as directed_by_0, director as director_0, movie as movie_0, writer as writer_0, written_by as written_by_0 where writer_0.name = "Kevin Spacey" and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and movie_0.mid = written_by_0.msid and writer_0.wid = written_by_0.wid
TOT: 0.6403592940651768; TR: 0.6435808165160516; SMP: 0.3214285714285714; select director_0.did from copyright as copyright_0, directed_by as directed_by_0, director as director_0, movie as movie_0, tv_series as tv_series_0, writer as writer_0, written_by as written_by_0 where writer_0.name = "Kevin Spacey" and copyright_0.msid = movie_0.mid and copyright_0.msid = tv_series_0.sid and directed_by_0.did = director_0.did and directed_by_0.msid = tv_series_0.sid and movie_0.mid = written_by_0.msid and writer_0.wid = written_by_0.wid


01:40  INFO: ================
01:40  INFO: QUERY 88: What is the number of actors in the movie "Grumpier Old Men"?
01:40  INFO: ================
01:47  INFO: ================
01:47  INFO: QUERY 99: How many movies about Persians were released after 1990?
01:47  INFO: ================
491. ROOT: ROOT; NA; ; (0) 
492. released: NT; NA; ; (0) movie.release_year(1.0):| movie.title(0.64):| movie(0.64):| movie.title_aka(0.63):| tv_series.title_aka(0.63):| 
494. How many: CMT; count; ; (0) 
495. movies: NT; NA; ; (0) movie.title(1.0):| movie(1.0):| company.name(0.91):Movies; Movie; W Movies; | tv_series.title(0.8):Movies, Movies, Movi; Moon Movies; Movie Memories; | cast.role(0.79):Movie; KPC Movies; Movie F; | 
496. Persians: VTTEXT; NA; ; (0) cast.role(0.93):Persian; Persian; Persian; | keyword.keyword(0.84):persian; persian-cat; persian-rug; | movie.title(0.74):Persian Version; The Persian; Persian Eyes; | genre.gid(0.71):| tv_series.title(0.7):Great Persians; Persian Click; Guardians of Persian; | 
499. 1990: VTNUM; NA; ; (0) writer.birth_year(1.0):1993; 1994; 1998; | producer.birth_year(1.0):1993; 1997; 1995; | director.birth_year(1.0):1993; 1994; 1996; | actor.birth_year(1.0):1999; 2003; 1993; | movie.release_year(0.99):2012; 2014; 2015; | 
500. after: OT; >; ; (0) 
How, WRB
many, JJ
movies, NNS
about, IN
Persians, NNP
were, VBD
released, VBN
after, IN
1990, CD
advmod(many-2, How-1)
dep(released-7, many-2)
nsubjpass(released-7, movies-3)
case(Persians-5, about-4)
nmod(movies-3, Persians-5)
auxpass(released-7, were-6)
root(ROOT-0, released-7)
case(1990-9, after-8)
nmod(released-7, 1990-9)

PARSE TREE:(491) ROOT ROOT
    (494) How many CMT
        (495) movies NT
            (496) Persians VTTEXT
            (492) released NT
                (499) 1990 VTNUM
                    (500) after OT


===========
TRANSLATIONS
===========
TOT: 0.8899521354959017; NL: 0.8899521354959017; NL+AG: 0.9501359572927202; NL+QF: 0.9497486016219263; rels: [movie]; projs: [count(distinct(movie_0.title))]; preds: [cast_0.role = "Persian",writer_0.birth_year > 1990]; havings: []; superlative: []; blanks: 0
TOT: 0.8898516329833388; NL: 0.8898516329833388; NL+AG: 0.9500354547801574; NL+QF: 0.9496732247375042; rels: [movie]; projs: [count(distinct(movie_0.title))]; preds: [cast_0.role = "Persian",producer_0.birth_year > 1990]; havings: []; superlative: []; blanks: 0
TOT: 0.8898013817270574; NL: 0.8898013817270574; NL+AG: 0.949985203523876; NL+QF: 0.9496355362952931; rels: [movie]; projs: [count(distinct(movie_0.title))]; preds: [cast_0.role = "Persian",director_0.birth_year > 1990]; havings: []; superlative: []; blanks: 0
TOT: 0.8897762560989168; NL: 0.8897762560989168; NL+AG: 0.9499600778957353; NL+QF: 0.9496166920741875; rels: [movie]; projs: [count(distinct(movie_0.title))]; preds: [cast_0.role = "Persian",actor_0.birth_year > 1990]; havings: []; superlative: []; blanks: 0
TOT: 0.8878918339883639; NL: 0.8878918339883639; NL+AG: 0.9480756557851826; NL+QF: 0.9484094558135403; rels: [movie]; projs: [count(distinct(movie_0.title))]; preds: [cast_0.role = "Persian",movie_0.release_year > 1990]; havings: []; superlative: []; blanks: 0
TOT: 0.8808771354959017; NL: 0.8808771354959017; NL+AG: 0.9501359572927202; NL+QF: 0.950254571717414; rels: []; projs: [count(distinct(movie_0.title))]; preds: [cast_0.role = "Persian",writer_0.birth_year > 1990]; havings: []; superlative: []; blanks: 1
TOT: 0.8807766329833389; NL: 0.8807766329833389; NL+AG: 0.9500354547801574; NL+QF: 0.950179194832992; rels: []; projs: [count(distinct(movie_0.title))]; preds: [cast_0.role = "Persian",producer_0.birth_year > 1990]; havings: []; superlative: []; blanks: 1
TOT: 0.8807263817270574; NL: 0.8807263817270574; NL+AG: 0.949985203523876; NL+QF: 0.950141506390781; rels: []; projs: [count(distinct(movie_0.title))]; preds: [cast_0.role = "Persian",director_0.birth_year > 1990]; havings: []; superlative: []; blanks: 1
TOT: 0.8807012560989168; NL: 0.8807012560989168; NL+AG: 0.9499600778957353; NL+QF: 0.9517372452893489; rels: []; projs: [count(distinct(movie_0.title))]; preds: [cast_0.role = "Persian",actor_0.birth_year > 1990]; havings: []; superlative: []; blanks: 1
TOT: 0.878816833988364; NL: 0.878816833988364; NL+AG: 0.9480756557851826; NL+QF: 0.9499948747740663; rels: []; projs: [count(distinct(movie_0.title))]; preds: [cast_0.role = "Persian",movie_0.release_year > 1990]; havings: []; superlative: []; blanks: 1

===========
RESULTS
===========
TOT: 0.8850451602045942; TR: 0.8897762560989168; SMP: 0.41666666666666663; select count(distinct(movie_0.title)) from actor as actor_0, cast as cast_0, movie as movie_0 where actor_0.birth_year > 1990 and cast_0.role = "Persian" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid
TOT: 0.8848026141409427; TR: 0.8899521354959017; SMP: 0.375; select count(distinct(movie_0.title)) from cast as cast_0, movie as movie_0, writer as writer_0, written_by as written_by_0 where cast_0.role = "Persian" and writer_0.birth_year > 1990 and cast_0.msid = movie_0.mid and movie_0.mid = written_by_0.msid and writer_0.wid = written_by_0.wid
TOT: 0.8847031166535054; TR: 0.8898516329833388; SMP: 0.375; select count(distinct(movie_0.title)) from cast as cast_0, made_by as made_by_0, movie as movie_0, producer as producer_0 where cast_0.role = "Persian" and producer_0.birth_year > 1990 and cast_0.msid = movie_0.mid and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid
TOT: 0.8846533679097868; TR: 0.8898013817270574; SMP: 0.375; select count(distinct(movie_0.title)) from cast as cast_0, directed_by as directed_by_0, director as director_0, movie as movie_0 where cast_0.role = "Persian" and director_0.birth_year > 1990 and cast_0.msid = movie_0.mid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid
TOT: 0.884385947474276; TR: 0.8899521354959017; SMP: 0.3333333333333333; select count(distinct(movie_0.title)) from cast as cast_0, made_by as made_by_0, movie as movie_0, tv_series as tv_series_0, writer as writer_0, written_by as written_by_0 where cast_0.role = "Persian" and writer_0.birth_year > 1990 and cast_0.msid = movie_0.mid and made_by_0.msid = movie_0.mid and made_by_0.msid = tv_series_0.sid and tv_series_0.sid = written_by_0.msid and writer_0.wid = written_by_0.wid
TOT: 0.884385947474276; TR: 0.8899521354959017; SMP: 0.3333333333333333; select count(distinct(movie_0.title)) from cast as cast_0, movie as movie_0, movie as movie_1, tags as tags_0, writer as writer_0, written_by as written_by_0 where cast_0.role = "Persian" and writer_0.birth_year > 1990 and cast_0.msid = movie_1.mid and movie_0.mid = tags_0.msid and movie_0.mid = written_by_0.msid and movie_1.mid = tags_0.msid and writer_0.wid = written_by_0.wid
TOT: 0.884385947474276; TR: 0.8899521354959017; SMP: 0.3333333333333333; select count(distinct(movie_0.title)) from cast as cast_0, classification as classification_0, movie as movie_0, tv_series as tv_series_0, writer as writer_0, written_by as written_by_0 where cast_0.role = "Persian" and writer_0.birth_year > 1990 and cast_0.msid = tv_series_0.sid and classification_0.msid = movie_0.mid and classification_0.msid = tv_series_0.sid and movie_0.mid = written_by_0.msid and writer_0.wid = written_by_0.wid
TOT: 0.884385947474276; TR: 0.8899521354959017; SMP: 0.3333333333333333; select count(distinct(movie_0.title)) from cast as cast_0, copyright as copyright_0, movie as movie_0, movie as movie_1, writer as writer_0, written_by as written_by_0 where cast_0.role = "Persian" and writer_0.birth_year > 1990 and cast_0.msid = movie_1.mid and copyright_0.msid = movie_0.mid and copyright_0.msid = movie_1.mid and movie_0.mid = written_by_0.msid and writer_0.wid = written_by_0.wid
TOT: 0.884385947474276; TR: 0.8899521354959017; SMP: 0.3333333333333333; select count(distinct(movie_0.title)) from cast as cast_0, movie as movie_0, movie as movie_1, writer as writer_0, written_by as written_by_0, written_by as written_by_1 where cast_0.role = "Persian" and writer_0.birth_year > 1990 and cast_0.msid = movie_1.mid and movie_0.mid = written_by_0.msid and movie_0.mid = written_by_1.msid and movie_1.mid = written_by_0.msid and writer_0.wid = written_by_1.wid
TOT: 0.884385947474276; TR: 0.8899521354959017; SMP: 0.3333333333333333; select count(distinct(movie_0.title)) from cast as cast_0, movie as movie_0, tags as tags_0, tv_series as tv_series_0, writer as writer_0, written_by as written_by_0 where cast_0.role = "Persian" and writer_0.birth_year > 1990 and cast_0.msid = tv_series_0.sid and movie_0.mid = tags_0.msid and movie_0.mid = written_by_0.msid and tags_0.msid = tv_series_0.sid and writer_0.wid = written_by_0.wid


01:48  INFO: ================
01:48  INFO: QUERY 91: What is the number of movies directed by "Woody Allen" per year?
01:48  INFO: ================
01:49  INFO: ================
01:49  INFO: QUERY 130: Find the latest movie which "Gabriele Ferzetti" acted in
01:49  INFO: ================
515. ROOT: ROOT; NA; ; (0) 
516. Find: CMT; NA; ; (0) 
517. movie: NT; NA; ; (0) movie.title(1.0):| movie(1.0):| company.name(0.92):Movie; Movie Movie; Movies; | cast.role(0.87):Movie; Movie F; Movie AD; | keyword.keyword(0.81):movie-in-movie; b-movie; z-movie; | 
519. latest: FT; max; ; (0) 
520. acted: NT; NA; ; (0) director.did(0.65):| movie.release_year(0.63):| actor.name(0.62):| actor(0.62):| genre.genre(0.62):| 
522. Gabriele Ferzetti: VTTEXT; NA; ; (0) actor.name(0.99):Gabriele Ferzetti; Gabriele Ferzetti; Gabriel Ferzetti; | director.name(0.72):Gabriele Ferluga; Gabriele Ferluga; Gabriele Mainetti; | writer.name(0.72):Gabriele Ferluga; Gabriele Ferluga; Gabriele Kiefer; | cast.role(0.71):Gabriele Cercetti; Gabriele Cercetti; Gabriele Cercetti; | producer.name(0.68):Gabriele Mainetti; Gabriele Mainetti; Gabriele Gauler; | 
Find, VB
the, DT
latest, JJS
movie, NN
which, WDT
Gabriele Ferzetti, NNP
acted, VBD
in, RP
root(ROOT-0, Find-1)
det(movie-4, the-2)
amod(movie-4, latest-3)
dobj(Find-1, movie-4)
dobj(acted-7, which-5)
nsubj(acted-7, Gabriele Ferzetti-6)
acl:relcl(movie-4, acted-7)
compound:prt(acted-7, in-8)

PARSE TREE:(515) ROOT ROOT
    (516) Find CMT
        (517) movie NT
            (520) acted NT
                (522) Gabriele Ferzetti VTTEXT


===========
TRANSLATIONS
===========
TOT: 0.8293486528528766; NL: 0.8293486528528766; NL+AG: 0.961456039216513; NL+QF: 0.9606943021396575; rels: []; projs: [director_0.did]; preds: [actor_0.name = "Gabriele Ferzetti"]; havings: []; superlative: [movie_0.title desc limit 1]; blanks: 0
TOT: 0.8265799028528766; NL: 0.8265799028528766; NL+AG: 0.961456039216513; NL+QF: 0.9609697856404307; rels: []; projs: [movie_0.release_year]; preds: [actor_0.name = "Gabriele Ferzetti"]; havings: []; superlative: [movie_0.title desc limit 1]; blanks: 0
TOT: 0.8248486528528767; NL: 0.8248486528528767; NL+AG: 0.9743200451292995; NL+QF: 0.9616556470990556; rels: []; projs: [actor_0.name]; preds: [actor_0.name = "Gabriele Ferzetti"]; havings: []; superlative: [movie_0.title desc limit 1]; blanks: 0
TOT: 0.8246174028528765; NL: 0.8246174028528765; NL+AG: 0.9743200451292995; NL+QF: 0.9606943021396575; rels: []; projs: [genre_0.genre]; preds: [actor_0.name = "Gabriele Ferzetti"]; havings: []; superlative: [movie_0.title desc limit 1]; blanks: 0
TOT: 0.8176816182798292; NL: 0.8176816182798292; NL+AG: 0.9220220728252839; NL+QF: 0.9298212946238633; rels: []; projs: [director_0.did]; preds: [company_0.name = "Movie",actor_0.name = "Gabriele Ferzetti"]; havings: []; superlative: [company_0.id desc limit 1]; blanks: 0
TOT: 0.8154666182798292; NL: 0.8154666182798292; NL+AG: 0.9220220728252839; NL+QF: 0.9299976040643584; rels: []; projs: [movie_0.release_year]; preds: [company_0.name = "Movie",actor_0.name = "Gabriele Ferzetti"]; havings: []; superlative: [company_0.id desc limit 1]; blanks: 0
TOT: 0.8140816182798293; NL: 0.8140816182798293; NL+AG: 0.9369376127967511; NL+QF: 0.931020026417363; rels: []; projs: [actor_0.name]; preds: [company_0.name = "Movie",actor_0.name = "Gabriele Ferzetti"]; havings: []; superlative: [company_0.id desc limit 1]; blanks: 0
TOT: 0.8138966182798292; NL: 0.8138966182798292; NL+AG: 0.9369376127967511; NL+QF: 0.9298212946238633; rels: []; projs: [genre_0.genre]; preds: [company_0.name = "Movie",actor_0.name = "Gabriele Ferzetti"]; havings: []; superlative: [company_0.id desc limit 1]; blanks: 0
TOT: 0.7643269335171478; NL: 0.7643269335171478; NL+AG: 0.8961924445137504; NL+QF: 0.9015143766550962; rels: []; projs: [director_0.did]; preds: [company_0.name = "Movie",director_0.name = "Gabriele Ferluga"]; havings: []; superlative: [company_0.id desc limit 1]; blanks: 0
TOT: 0.7643269335171478; NL: 0.7643269335171478; NL+AG: 0.8961924445137504; NL+QF: 0.8993621567980223; rels: []; projs: [director_0.did]; preds: [company_0.name = "Movie",writer_0.name = "Gabriele Ferluga"]; havings: []; superlative: [company_0.id desc limit 1]; blanks: 0

===========
RESULTS
===========
TOT: 0.8245551663243478; TR: 0.8293486528528766; SMP: 0.35; select director_0.did from actor as actor_0, cast as cast_0, directed_by as directed_by_0, director as director_0, movie as movie_0 where actor_0.name = "Gabriele Ferzetti" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid order by movie_0.title desc limit 1
TOT: 0.8242694520386336; TR: 0.8293486528528766; SMP: 0.3214285714285714; select director_0.did from actor as actor_0, cast as cast_0, directed_by as directed_by_0, directed_by as directed_by_1, director as director_0, movie as movie_0, tv_series as tv_series_0 where actor_0.name = "Gabriele Ferzetti" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and directed_by_0.msid = movie_0.mid and directed_by_0.msid = tv_series_0.sid and directed_by_1.did = director_0.did and directed_by_1.msid = tv_series_0.sid order by movie_0.title desc limit 1
TOT: 0.8242694520386336; TR: 0.8293486528528766; SMP: 0.3214285714285714; select director_0.did from actor as actor_0, cast as cast_0, directed_by as directed_by_0, director as director_0, made_by as made_by_0, movie as movie_0, movie as movie_1 where actor_0.name = "Gabriele Ferzetti" and actor_0.aid = cast_0.aid and cast_0.msid = movie_1.mid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and made_by_0.msid = movie_0.mid and made_by_0.msid = movie_1.mid order by movie_0.title desc limit 1
TOT: 0.8242694520386336; TR: 0.8293486528528766; SMP: 0.3214285714285714; select director_0.did from actor as actor_0, cast as cast_0, classification as classification_0, directed_by as directed_by_0, director as director_0, movie as movie_0, tv_series as tv_series_0 where actor_0.name = "Gabriele Ferzetti" and actor_0.aid = cast_0.aid and cast_0.msid = tv_series_0.sid and classification_0.msid = movie_0.mid and classification_0.msid = tv_series_0.sid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid order by movie_0.title desc limit 1
TOT: 0.8242694520386336; TR: 0.8293486528528766; SMP: 0.3214285714285714; select director_0.did from actor as actor_0, cast as cast_0, directed_by as directed_by_0, directed_by as directed_by_1, director as director_0, movie as movie_0, tv_series as tv_series_0 where actor_0.name = "Gabriele Ferzetti" and actor_0.aid = cast_0.aid and cast_0.msid = tv_series_0.sid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and directed_by_1.did = director_0.did and directed_by_1.msid = tv_series_0.sid order by movie_0.title desc limit 1
TOT: 0.8242694520386336; TR: 0.8293486528528766; SMP: 0.3214285714285714; select director_0.did from actor as actor_0, cast as cast_0, directed_by as directed_by_0, director as director_0, made_by as made_by_0, movie as movie_0, tv_series as tv_series_0 where actor_0.name = "Gabriele Ferzetti" and actor_0.aid = cast_0.aid and cast_0.msid = tv_series_0.sid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and made_by_0.msid = movie_0.mid and made_by_0.msid = tv_series_0.sid order by movie_0.title desc limit 1
TOT: 0.8242694520386336; TR: 0.8293486528528766; SMP: 0.3214285714285714; select director_0.did from actor as actor_0, cast as cast_0, directed_by as directed_by_0, director as director_0, made_by as made_by_0, movie as movie_0, tv_series as tv_series_0 where actor_0.name = "Gabriele Ferzetti" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and directed_by_0.did = director_0.did and directed_by_0.msid = tv_series_0.sid and made_by_0.msid = movie_0.mid and made_by_0.msid = tv_series_0.sid order by movie_0.title desc limit 1
TOT: 0.8242694520386336; TR: 0.8293486528528766; SMP: 0.3214285714285714; select director_0.did from actor as actor_0, cast as cast_0, cast as cast_1, directed_by as directed_by_0, director as director_0, movie as movie_0, tv_series as tv_series_0 where actor_0.name = "Gabriele Ferzetti" and actor_0.aid = cast_1.aid and cast_0.msid = movie_0.mid and cast_0.msid = tv_series_0.sid and cast_1.msid = tv_series_0.sid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid order by movie_0.title desc limit 1
TOT: 0.8242694520386336; TR: 0.8293486528528766; SMP: 0.3214285714285714; select director_0.did from actor as actor_0, cast as cast_0, classification as classification_0, directed_by as directed_by_0, director as director_0, movie as movie_0, movie as movie_1 where actor_0.name = "Gabriele Ferzetti" and actor_0.aid = cast_0.aid and cast_0.msid = movie_1.mid and classification_0.msid = movie_0.mid and classification_0.msid = movie_1.mid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid order by movie_0.title desc limit 1
TOT: 0.8242694520386336; TR: 0.8293486528528766; SMP: 0.3214285714285714; select director_0.did from actor as actor_0, cast as cast_0, directed_by as directed_by_0, directed_by as directed_by_1, director as director_0, movie as movie_0, tv_series as tv_series_0 where actor_0.name = "Gabriele Ferzetti" and actor_0.aid = cast_0.aid and cast_0.msid = tv_series_0.sid and directed_by_0.msid = movie_0.mid and directed_by_0.msid = tv_series_0.sid and directed_by_1.did = director_0.did and directed_by_1.msid = movie_0.mid order by movie_0.title desc limit 1


01:49  INFO: ================
01:49  INFO: QUERY 122: Find the movie which is classified in the most number of genres
01:49  INFO: ================
01:50  INFO: ================
01:50  INFO: QUERY 62: Find all actors from Italy born after 1980
01:50  INFO: ================
539. ROOT: ROOT; NA; ; (0) 
540. Find: CMT; NA; ; (0) 
541. actors: NT; NA; all; (0) actor.name(1.0):| actor(1.0):| movie.title(0.95):Actors; Actors; Actors; | cast.role(0.95):Actors; Actors; Actors; | tv_series.title(0.9):Actors; Actor; Actors Vs; | 
543. Italy: VTTEXT; NA; ; (0) director.nationality(1.0):Italy; Italy; Italy; | actor.nationality(1.0):Italy; Italy; Italy; | producer.nationality(1.0):Italy; Italy; Italy; | writer.nationality(1.0):Italy; Italy; Italy; | company.name(0.77):I-Italy; DAP Italy; Little Italy; | 
545. born: NT; NA; ; (0) tv_series.num_of_episodes(0.62):| tv_series.num_of_seasons(0.62):| tags(0.6):| director.did(0.6):| producer.name(0.59):| 
546. 1980: VTNUM; NA; ; (0) director.birth_year(1.0):1985; 1993; 1984; | writer.birth_year(1.0):1985; 1993; 1984; | producer.birth_year(1.0):1985; 1993; 1997; | actor.birth_year(0.99):1999; 2003; 1986; | movie.release_year(0.98):2012; 2014; 2015; | 
547. after: OT; >; ; (0) 
Find, VB
all, DT
actors, NNS
from, IN
Italy, NNP
born, VBN
after, IN
1980, CD
root(ROOT-0, Find-1)
det(actors-3, all-2)
dobj(Find-1, actors-3)
case(Italy-5, from-4)
nmod(Find-1, Italy-5)
acl(Italy-5, born-6)
case(1980-8, after-7)
nmod(born-6, 1980-8)

PARSE TREE:(539) ROOT ROOT
    (540) Find CMT
        (541) actors NT
        (543) Italy VTTEXT
            (545) born NT
                (546) 1980 VTNUM
                    (547) after OT


===========
TRANSLATIONS
===========
TOT: 0.8999531565656567; NL: 0.8999531565656567; NL+AG: 0.9691062174708978; NL+QF: 0.9617992424242424; rels: [tags]; projs: [actor_0.name]; preds: [director_0.nationality = "Italy",director_0.birth_year > 1980]; havings: []; superlative: []; blanks: 0
TOT: 0.8999531565656567; NL: 0.8999531565656567; NL+AG: 0.9691062174708978; NL+QF: 0.9617992424242424; rels: [tags]; projs: [actor_0.name]; preds: [director_0.nationality = "Italy",writer_0.birth_year > 1980]; havings: []; superlative: []; blanks: 0
TOT: 0.8999531565656567; NL: 0.8999531565656567; NL+AG: 0.9691062174708978; NL+QF: 0.9617992424242424; rels: [tags]; projs: [actor_0.name]; preds: [actor_0.nationality = "Italy",director_0.birth_year > 1980]; havings: []; superlative: []; blanks: 0
TOT: 0.8999531565656567; NL: 0.8999531565656567; NL+AG: 0.9691062174708978; NL+QF: 0.9617992424242424; rels: [tags]; projs: [actor_0.name]; preds: [actor_0.nationality = "Italy",writer_0.birth_year > 1980]; havings: []; superlative: []; blanks: 0
TOT: 0.8999531565656567; NL: 0.8999531565656567; NL+AG: 0.9691062174708978; NL+QF: 0.9617992424242424; rels: [tags]; projs: [actor_0.name]; preds: [producer_0.nationality = "Italy",director_0.birth_year > 1980]; havings: []; superlative: []; blanks: 0
TOT: 0.8999531565656567; NL: 0.8999531565656567; NL+AG: 0.9691062174708978; NL+QF: 0.9617992424242424; rels: [tags]; projs: [actor_0.name]; preds: [producer_0.nationality = "Italy",writer_0.birth_year > 1980]; havings: []; superlative: []; blanks: 0
TOT: 0.8999531565656567; NL: 0.8999531565656567; NL+AG: 0.9691062174708978; NL+QF: 0.9617992424242424; rels: [tags]; projs: [actor_0.name]; preds: [writer_0.nationality = "Italy",director_0.birth_year > 1980]; havings: []; superlative: []; blanks: 0
TOT: 0.8999531565656567; NL: 0.8999531565656567; NL+AG: 0.9691062174708978; NL+QF: 0.9617992424242424; rels: [tags]; projs: [actor_0.name]; preds: [writer_0.nationality = "Italy",writer_0.birth_year > 1980]; havings: []; superlative: []; blanks: 0
TOT: 0.8997006313131314; NL: 0.8997006313131314; NL+AG: 0.9688536922183725; NL+QF: 0.9616098484848485; rels: [tags]; projs: [actor_0.name]; preds: [director_0.nationality = "Italy",producer_0.birth_year > 1980]; havings: []; superlative: []; blanks: 0
TOT: 0.8997006313131314; NL: 0.8997006313131314; NL+AG: 0.9688536922183725; NL+QF: 0.9616098484848485; rels: [tags]; projs: [actor_0.name]; preds: [actor_0.nationality = "Italy",producer_0.birth_year > 1980]; havings: []; superlative: []; blanks: 0

===========
RESULTS
===========
TOT: 0.8941679107142858; TR: 0.8999531565656567; SMP: 0.3214285714285714; select actor_0.name from actor as actor_0, cast as cast_0, movie as movie_0, tags as tags_0, tv_series as tv_series_0, writer as writer_0, written_by as written_by_0 where actor_0.nationality = "Italy" and writer_0.birth_year > 1980 and actor_0.aid = cast_0.aid and cast_0.msid = tv_series_0.sid and movie_0.mid = tags_0.msid and movie_0.mid = written_by_0.msid and tags_0.msid = tv_series_0.sid and writer_0.wid = written_by_0.wid
TOT: 0.8941679107142858; TR: 0.8999531565656567; SMP: 0.3214285714285714; select actor_0.name from actor as actor_0, cast as cast_0, movie as movie_0, tags as tags_0, tv_series as tv_series_0, writer as writer_0, written_by as written_by_0 where writer_0.birth_year > 1980 and writer_0.nationality = "Italy" and actor_0.aid = cast_0.aid and cast_0.msid = tv_series_0.sid and movie_0.mid = tags_0.msid and movie_0.mid = written_by_0.msid and tags_0.msid = tv_series_0.sid and writer_0.wid = written_by_0.wid
TOT: 0.8941679107142858; TR: 0.8999531565656567; SMP: 0.3214285714285714; select actor_0.name from actor as actor_0, cast as cast_0, movie as movie_0, movie as movie_1, tags as tags_0, writer as writer_0, written_by as written_by_0 where actor_0.nationality = "Italy" and writer_0.birth_year > 1980 and actor_0.aid = cast_0.aid and cast_0.msid = movie_1.mid and movie_0.mid = tags_0.msid and movie_0.mid = written_by_0.msid and movie_1.mid = tags_0.msid and writer_0.wid = written_by_0.wid
TOT: 0.8941679107142858; TR: 0.8999531565656567; SMP: 0.3214285714285714; select actor_0.name from actor as actor_0, cast as cast_0, movie as movie_0, movie as movie_1, tags as tags_0, writer as writer_0, written_by as written_by_0 where writer_0.birth_year > 1980 and writer_0.nationality = "Italy" and actor_0.aid = cast_0.aid and cast_0.msid = movie_1.mid and movie_0.mid = tags_0.msid and movie_0.mid = written_by_0.msid and movie_1.mid = tags_0.msid and writer_0.wid = written_by_0.wid
TOT: 0.8941679107142858; TR: 0.8999531565656567; SMP: 0.3214285714285714; select actor_0.name from actor as actor_0, cast as cast_0, movie as movie_0, tags as tags_0, tv_series as tv_series_0, writer as writer_0, written_by as written_by_0 where actor_0.nationality = "Italy" and writer_0.birth_year > 1980 and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and movie_0.mid = tags_0.msid and tags_0.msid = tv_series_0.sid and tv_series_0.sid = written_by_0.msid and writer_0.wid = written_by_0.wid
TOT: 0.8941679107142858; TR: 0.8999531565656567; SMP: 0.3214285714285714; select actor_0.name from actor as actor_0, cast as cast_0, movie as movie_0, tags as tags_0, tv_series as tv_series_0, writer as writer_0, written_by as written_by_0 where writer_0.birth_year > 1980 and writer_0.nationality = "Italy" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and movie_0.mid = tags_0.msid and tags_0.msid = tv_series_0.sid and tv_series_0.sid = written_by_0.msid and writer_0.wid = written_by_0.wid
TOT: 0.8941679107142858; TR: 0.8999531565656567; SMP: 0.3214285714285714; select actor_0.name from actor as actor_0, cast as cast_0, directed_by as directed_by_0, director as director_0, tags as tags_0, tv_series as tv_series_0, tv_series as tv_series_1 where director_0.birth_year > 1980 and director_0.nationality = "Italy" and actor_0.aid = cast_0.aid and cast_0.msid = tv_series_1.sid and directed_by_0.did = director_0.did and directed_by_0.msid = tv_series_0.sid and tags_0.msid = tv_series_0.sid and tags_0.msid = tv_series_1.sid
TOT: 0.8941679107142858; TR: 0.8999531565656567; SMP: 0.3214285714285714; select actor_0.name from actor as actor_0, cast as cast_0, directed_by as directed_by_0, director as director_0, tags as tags_0, tv_series as tv_series_0, tv_series as tv_series_1 where actor_0.nationality = "Italy" and director_0.birth_year > 1980 and actor_0.aid = cast_0.aid and cast_0.msid = tv_series_1.sid and directed_by_0.did = director_0.did and directed_by_0.msid = tv_series_0.sid and tags_0.msid = tv_series_0.sid and tags_0.msid = tv_series_1.sid
TOT: 0.8941679107142858; TR: 0.8999531565656567; SMP: 0.3214285714285714; select actor_0.name from actor as actor_0, cast as cast_0, directed_by as directed_by_0, director as director_0, movie as movie_0, movie as movie_1, tags as tags_0 where director_0.birth_year > 1980 and director_0.nationality = "Italy" and actor_0.aid = cast_0.aid and cast_0.msid = movie_1.mid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and movie_0.mid = tags_0.msid and movie_1.mid = tags_0.msid
TOT: 0.8941679107142858; TR: 0.8999531565656567; SMP: 0.3214285714285714; select actor_0.name from actor as actor_0, cast as cast_0, directed_by as directed_by_0, director as director_0, movie as movie_0, movie as movie_1, tags as tags_0 where actor_0.nationality = "Italy" and director_0.birth_year > 1980 and actor_0.aid = cast_0.aid and cast_0.msid = movie_1.mid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and movie_0.mid = tags_0.msid and movie_1.mid = tags_0.msid


01:51  INFO: ================
01:51  INFO: QUERY 27: What was the budget of the movie Juno from 2007?
01:51  INFO: ================
01:53  INFO: ================
01:53  INFO: QUERY 20: Find the actor who played "Captain Miller" in the movie "Saving Private Ryan"
01:53  INFO: ================
01:57  INFO: ================
01:57  INFO: QUERY 117: Find all movies featuring "Benedict Cumberbatch" and "Keira Knightley"
01:57  INFO: ================
573. ROOT: ROOT; NA; ; (0) 
574. Find: CMT; NA; ; (0) 
575. featuring: NT; NA; ; (0) movie.release_year(0.64):| producer.name(0.64):| producer(0.64):| made_by(0.64):| movie.title_aka(0.62):| 
576. movies: NT; NA; all; (0) movie.title(1.0):| movie(1.0):| company.name(0.91):Movies; Movie; W Movies; | tv_series.title(0.8):Movies, Movies, Movi; Moon Movies; Movie Memories; | cast.role(0.79):Movie; KPC Movies; Movie F; | 
578. Benedict Cumberbatch: VTTEXT; NA; ; (0) actor.name(0.98):Benedict Cumberbatch; Benedict Cumberbatch; Benedict Timothy Car; | producer.name(0.98):Benedict Cumberbatch; Benedict Cumberbatch; Benedict Timothy Car; | cast.role(0.7):Tom Cumberbatch; Bert Benedict; Bert Benedict; | writer.name(0.67):Benedict Berenberg; Benedict Berenberg; Carol Cumberbatch; | director.name(0.66):Jill Cumberbatch; Benedict Coen; Benedict Coen; | 
580. Keira Knightley: VTTEXT; NA; ; (0) actor.name(0.99):Keira Knightley; Keira Knightley; Keira Knightly; | producer.name(0.99):Keira Knightley; Keira Knightley; Keira Knightly; | writer.name(0.85):Keira Knightly; Keira Knightly; Keira Ennis; | cast.role(0.81):Sara Knightley; Sara Knightley; Mr Knightley; | actor.birth_city(0.76):Knightley; | 
Find, VB
all, DT
movies, NNS
featuring, VBG
Benedict Cumberbatch, NNP
and, CC
Keira Knightley, NNP
root(ROOT-0, Find-1)
det(movies-3, all-2)
nsubj(featuring-4, movies-3)
dep(Find-1, featuring-4)
dobj(featuring-4, Benedict Cumberbatch-5)
cc(Benedict Cumberbatch-5, and-6)
conj(Benedict Cumberbatch-5, Keira Knightley-7)

PARSE TREE:(573) ROOT ROOT
    (574) Find CMT
        (575) featuring NT
            (576) movies NT
            (578) Benedict Cumberbatch VTTEXT
            (580) Keira Knightley VTTEXT


===========
TRANSLATIONS
===========
TOT: 0.9022310348397348; NL: 0.9022310348397348; NL+AG: 0.9601599693460886; NL+QF: 0.9594058089197126; rels: [movie]; projs: [movie_0.release_year]; preds: [actor_0.name = "Benedict Cumberbatch",actor_0.name = "Keira Knightley"]; havings: []; superlative: []; blanks: 0
TOT: 0.9022310348397348; NL: 0.9022310348397348; NL+AG: 0.9601599693460886; NL+QF: 0.958674482482084; rels: [movie]; projs: [movie_0.release_year]; preds: [actor_0.name = "Benedict Cumberbatch",producer_0.name = "Keira Knightley"]; havings: []; superlative: []; blanks: 0
TOT: 0.9022310348397348; NL: 0.9022310348397348; NL+AG: 0.9601599693460886; NL+QF: 0.9586303044543786; rels: [movie]; projs: [movie_0.release_year]; preds: [producer_0.name = "Benedict Cumberbatch",actor_0.name = "Keira Knightley"]; havings: []; superlative: []; blanks: 0
TOT: 0.9022310348397348; NL: 0.9022310348397348; NL+AG: 0.9601599693460886; NL+QF: 0.9581017136298011; rels: [movie]; projs: [movie_0.release_year]; preds: [producer_0.name = "Benedict Cumberbatch",producer_0.name = "Keira Knightley"]; havings: []; superlative: []; blanks: 0
TOT: 0.9021810348397348; NL: 0.9021810348397348; NL+AG: 0.9767315240959138; NL+QF: 0.9574302264096144; rels: [movie]; projs: [producer_0.name]; preds: [actor_0.name = "Benedict Cumberbatch",actor_0.name = "Keira Knightley"]; havings: []; superlative: []; blanks: 0
TOT: 0.9021810348397348; NL: 0.9021810348397348; NL+AG: 0.9767315240959138; NL+QF: 0.9566825377587178; rels: [movie]; projs: [producer_0.name]; preds: [actor_0.name = "Benedict Cumberbatch",producer_0.name = "Keira Knightley"]; havings: []; superlative: []; blanks: 0
TOT: 0.9021810348397348; NL: 0.9021810348397348; NL+AG: 0.9767315240959138; NL+QF: 0.9566369791676467; rels: [movie]; projs: [producer_0.name]; preds: [producer_0.name = "Benedict Cumberbatch",actor_0.name = "Keira Knightley"]; havings: []; superlative: []; blanks: 0
TOT: 0.9021810348397348; NL: 0.9021810348397348; NL+AG: 0.9767315240959138; NL+QF: 0.9560920261298012; rels: [movie]; projs: [producer_0.name]; preds: [producer_0.name = "Benedict Cumberbatch",producer_0.name = "Keira Knightley"]; havings: []; superlative: []; blanks: 0
TOT: 0.8973935348397348; NL: 0.8973935348397348; NL+AG: 0.9767315240959138; NL+QF: 0.9562947617428522; rels: [movie]; projs: [movie_0.title_aka]; preds: [actor_0.name = "Benedict Cumberbatch",actor_0.name = "Keira Knightley"]; havings: []; superlative: []; blanks: 0
TOT: 0.8973935348397348; NL: 0.8973935348397348; NL+AG: 0.9767315240959138; NL+QF: 0.9560920261298012; rels: [movie]; projs: [movie_0.title_aka]; preds: [actor_0.name = "Benedict Cumberbatch",producer_0.name = "Keira Knightley"]; havings: []; superlative: []; blanks: 0

===========
RESULTS
===========
TOT: 0.8967087244913373; TR: 0.9022310348397348; SMP: 0.35; select movie_0.release_year from made_by as made_by_0, made_by as made_by_1, movie as movie_0, producer as producer_0, producer as producer_1 where producer_0.name = "Benedict Cumberbatch" and producer_1.name = "Keira Knightley" and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid and made_by_1.msid = movie_0.mid and made_by_1.pid = producer_1.pid
TOT: 0.8967087244913373; TR: 0.9022310348397348; SMP: 0.35; select movie_0.release_year from made_by as made_by_0, made_by as made_by_1, movie as movie_0, producer as producer_0, producer as producer_1 where producer_0.name = "Keira Knightley" and producer_1.name = "Benedict Cumberbatch" and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid and made_by_1.msid = movie_0.mid and made_by_1.pid = producer_1.pid
TOT: 0.8967087244913373; TR: 0.9022310348397348; SMP: 0.35; select movie_0.release_year from actor as actor_0, cast as cast_0, made_by as made_by_0, movie as movie_0, producer as producer_0 where actor_0.name = "Benedict Cumberbatch" and producer_0.name = "Keira Knightley" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid
TOT: 0.8967087244913373; TR: 0.9022310348397348; SMP: 0.35; select movie_0.release_year from actor as actor_0, cast as cast_0, made_by as made_by_0, movie as movie_0, producer as producer_0 where actor_0.name = "Keira Knightley" and producer_0.name = "Benedict Cumberbatch" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid
TOT: 0.8967087244913373; TR: 0.9022310348397348; SMP: 0.35; select movie_0.release_year from actor as actor_0, actor as actor_1, cast as cast_0, cast as cast_1, movie as movie_0 where actor_0.name = "Benedict Cumberbatch" and actor_1.name = "Keira Knightley" and actor_0.aid = cast_0.aid and actor_1.aid = cast_1.aid and cast_0.msid = movie_0.mid and cast_1.msid = movie_0.mid
TOT: 0.8967087244913373; TR: 0.9022310348397348; SMP: 0.35; select movie_0.release_year from actor as actor_0, actor as actor_1, cast as cast_0, cast as cast_1, movie as movie_0 where actor_0.name = "Keira Knightley" and actor_1.name = "Benedict Cumberbatch" and actor_0.aid = cast_0.aid and actor_1.aid = cast_1.aid and cast_0.msid = movie_0.mid and cast_1.msid = movie_0.mid
TOT: 0.8965420578246707; TR: 0.9022310348397348; SMP: 0.3333333333333333; select movie_0.release_year from made_by as made_by_0, made_by as made_by_1, movie as movie_0, movie as movie_1, producer as producer_0, producer as producer_1 where producer_0.name = "Benedict Cumberbatch" and producer_1.name = "Keira Knightley" and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid and made_by_1.msid = movie_1.mid and made_by_1.pid = producer_1.pid and movie_0.mid = movie_1.mid
TOT: 0.8965420578246707; TR: 0.9022310348397348; SMP: 0.3333333333333333; select movie_0.release_year from made_by as made_by_0, made_by as made_by_1, movie as movie_0, movie as movie_1, producer as producer_0, producer as producer_1 where producer_0.name = "Keira Knightley" and producer_1.name = "Benedict Cumberbatch" and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid and made_by_1.msid = movie_1.mid and made_by_1.pid = producer_1.pid and movie_0.mid = movie_1.mid
TOT: 0.8965420578246707; TR: 0.9022310348397348; SMP: 0.3333333333333333; select movie_0.release_year from actor as actor_0, actor as actor_1, cast as cast_0, cast as cast_1, movie as movie_0, movie as movie_1 where actor_0.name = "Benedict Cumberbatch" and actor_1.name = "Keira Knightley" and actor_0.aid = cast_0.aid and actor_1.aid = cast_1.aid and cast_0.msid = movie_0.mid and cast_1.msid = movie_1.mid and movie_0.mid = movie_1.mid
TOT: 0.8965420578246707; TR: 0.9022310348397348; SMP: 0.3333333333333333; select movie_0.release_year from actor as actor_0, actor as actor_1, cast as cast_0, cast as cast_1, movie as movie_0, movie as movie_1 where actor_0.name = "Keira Knightley" and actor_1.name = "Benedict Cumberbatch" and actor_0.aid = cast_0.aid and actor_1.aid = cast_1.aid and cast_0.msid = movie_0.mid and cast_1.msid = movie_1.mid and movie_0.mid = movie_1.mid


01:59  INFO: ================
01:59  INFO: QUERY 119: What is the maximum number of movies in which "Brad Pitt" act in a given year?
01:59  INFO: ================
582. ROOT: ROOT; NA; ; (0) 
583. What: CMT; NA; ; (0) 
585. number of: FT; count; ; (0) 
587. maximum: FT; max; ; (0) 
588. movies: NT; NA; ; (0) movie.title(1.0):| movie(1.0):| company.name(0.91):Movies; Movie; W Movies; | tv_series.title(0.8):Movies, Movies, Movi; Moon Movies; Movie Memories; | cast.role(0.79):Movie; KPC Movies; Movie F; | 
590. act: NT; NA; ; (0) director.did(0.65):| movie.release_year(0.63):| actor.name(0.62):| actor(0.62):| genre.genre(0.62):| 
593. Brad Pitt: VTTEXT; NA; ; (0) actor.name(0.98):Brad Pitt; Brad Pitt; bRad sPitt; | producer.name(0.98):Brad Pitt; Brad Pitt; Mad Pitt; | cast.role(0.93):Brad Pitt'; Brad Pitt'; Brad Pitt #1; | writer.name(0.78):Brad Pruitt; Brad Pruitt; Brad Witt; | director.name(0.78):Brad Pruitt; Brad Pruitt; Brad Witty; | 
594. year: NT; NA; ; (0) movie.release_year(1.0):| director.birth_year(1.0):| actor.birth_year(1.0):| producer.birth_year(1.0):| writer.birth_year(1.0):| 
597. given: NT; NA; ; (0) made_by(0.8):| director.did(0.71):| producer.name(0.7):| producer(0.7):| tv_series.num_of_episodes(0.69):| 
What, WP
is, VBZ
the, DT
maximum, JJ
number, NN
of, IN
movies, NNS
in, IN
which, WDT
Brad Pitt, NNP
act, VBP
in, IN
a, DT
given, VBN
year, NN
root(ROOT-0, What-1)
cop(What-1, is-2)
det(number-5, the-3)
amod(number-5, maximum-4)
nsubj(What-1, number-5)
case(movies-7, of-6)
nmod(number-5, movies-7)
case(which-9, in-8)
nmod(act-11, which-9)
nsubj(act-11, Brad Pitt-10)
acl:relcl(movies-7, act-11)
case(year-15, in-12)
det(year-15, a-13)
amod(year-15, given-14)
nmod(act-11, year-15)

PARSE TREE:(582) ROOT ROOT
    (583) What CMT
        (585) number of FT
            (587) maximum FT
            (588) movies NT
                (590) act NT
                    (593) Brad Pitt VTTEXT
                    (594) year NT
                        (597) given NT


===========
TRANSLATIONS
===========
TOT: 0.8195191582276861; NL: 0.8195191582276861; NL+AG: 0.9452350022536837; NL+QF: 0.9333942061252609; rels: [made_by]; projs: [movie_0.release_year]; preds: [actor_0.name = "Brad Pitt"]; havings: []; superlative: [count(distinct(movie_0.title)) desc limit 1]; blanks: 0
TOT: 0.8190556745147454; NL: 0.8190556745147454; NL+AG: 0.944771518540743; NL+QF: 0.9399988888322941; rels: [made_by]; projs: [movie_0.release_year]; preds: [producer_0.name = "Brad Pitt"]; havings: []; superlative: [count(distinct(movie_0.title)) desc limit 1]; blanks: 0
TOT: 0.8097816847932202; NL: 0.8097816847932202; NL+AG: 0.9354975288192179; NL+QF: 0.9254093478345762; rels: [made_by]; projs: [movie_0.release_year]; preds: [cast_0.role = "Brad Pitt'"]; havings: []; superlative: [count(distinct(movie_0.title)) desc limit 1]; blanks: 0
TOT: 0.8022000003401643; NL: 0.8022000003401643; NL+AG: 0.9025357840161851; NL+QF: 0.9026492221884089; rels: [made_by]; projs: [movie_0.release_year]; preds: [company_0.name = "Movies",actor_0.name = "Brad Pitt"]; havings: []; superlative: [company_0.id desc limit 1]; blanks: 0
TOT: 0.8018137639127136; NL: 0.8018137639127136; NL+AG: 0.9021495475887344; NL+QF: 0.9071714346637182; rels: [made_by]; projs: [movie_0.release_year]; preds: [company_0.name = "Movies",producer_0.name = "Brad Pitt"]; havings: []; superlative: [company_0.id desc limit 1]; blanks: 0
TOT: 0.7990891582276861; NL: 0.7990891582276861; NL+AG: 0.9452350022536837; NL+QF: 0.9333942061252609; rels: [producer]; projs: [movie_0.release_year]; preds: [actor_0.name = "Brad Pitt"]; havings: []; superlative: [count(distinct(movie_0.title)) desc limit 1]; blanks: 0
TOT: 0.7986256745147454; NL: 0.7986256745147454; NL+AG: 0.944771518540743; NL+QF: 0.9328285396117962; rels: [producer]; projs: [movie_0.release_year]; preds: [producer_0.name = "Brad Pitt"]; havings: []; superlative: [count(distinct(movie_0.title)) desc limit 1]; blanks: 0
TOT: 0.794085439144776; NL: 0.794085439144776; NL+AG: 0.8944212228207968; NL+QF: 0.8957517548428688; rels: [made_by]; projs: [movie_0.release_year]; preds: [company_0.name = "Movies",cast_0.role = "Brad Pitt'"]; havings: []; superlative: [company_0.id desc limit 1]; blanks: 0
TOT: 0.7893516847932203; NL: 0.7893516847932203; NL+AG: 0.9354975288192179; NL+QF: 0.9254093478345762; rels: [producer]; projs: [movie_0.release_year]; preds: [cast_0.role = "Brad Pitt'"]; havings: []; superlative: [count(distinct(movie_0.title)) desc limit 1]; blanks: 0
TOT: 0.7851750003401642; NL: 0.7851750003401642; NL+AG: 0.9025357840161851; NL+QF: 0.9026492221884089; rels: [producer]; projs: [movie_0.release_year]; preds: [company_0.name = "Movies",actor_0.name = "Brad Pitt"]; havings: []; superlative: [company_0.id desc limit 1]; blanks: 0

===========
RESULTS
===========
TOT: 0.8150317844362646; TR: 0.8190556745147454; SMP: 0.41666666666666663; select movie_0.release_year from made_by as made_by_0, movie as movie_0, producer as producer_0 where producer_0.name = "Brad Pitt" and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid group by movie_0.release_year order by count(distinct(movie_0.title)) desc limit 1
TOT: 0.7973922860510483; TR: 0.8022000003401643; SMP: 0.3214285714285714; select movie_0.release_year from actor as actor_0, cast as cast_0, company as company_0, copyright as copyright_0, made_by as made_by_0, movie as movie_0, tv_series as tv_series_0 where actor_0.name = "Brad Pitt" and company_0.name = "Movies" and actor_0.aid = cast_0.aid and cast_0.msid = tv_series_0.sid and company_0.id = copyright_0.cid and copyright_0.msid = movie_0.mid and made_by_0.msid = movie_0.mid and made_by_0.msid = tv_series_0.sid group by movie_0.release_year order by company_0.id desc limit 1
TOT: 0.7973922860510483; TR: 0.8022000003401643; SMP: 0.3214285714285714; select movie_0.release_year from actor as actor_0, cast as cast_0, company as company_0, copyright as copyright_0, made_by as made_by_0, movie as movie_0, movie as movie_1 where actor_0.name = "Brad Pitt" and company_0.name = "Movies" and actor_0.aid = cast_0.aid and cast_0.msid = movie_1.mid and company_0.id = copyright_0.cid and copyright_0.msid = movie_0.mid and made_by_0.msid = movie_0.mid and made_by_0.msid = movie_1.mid group by movie_0.release_year order by company_0.id desc limit 1
TOT: 0.7973922860510483; TR: 0.8022000003401643; SMP: 0.3214285714285714; select movie_0.release_year from actor as actor_0, cast as cast_0, company as company_0, copyright as copyright_0, made_by as made_by_0, movie as movie_0, tv_series as tv_series_0 where actor_0.name = "Brad Pitt" and company_0.name = "Movies" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and company_0.id = copyright_0.cid and copyright_0.msid = tv_series_0.sid and made_by_0.msid = movie_0.mid and made_by_0.msid = tv_series_0.sid group by movie_0.release_year order by company_0.id desc limit 1
TOT: 0.7972956262735864; TR: 0.8018137639127136; SMP: 0.35; select movie_0.release_year from company as company_0, copyright as copyright_0, made_by as made_by_0, movie as movie_0, producer as producer_0 where company_0.name = "Movies" and producer_0.name = "Brad Pitt" and company_0.id = copyright_0.cid and copyright_0.msid = movie_0.mid and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid group by movie_0.release_year order by company_0.id desc limit 1
TOT: 0.7970099119878722; TR: 0.8018137639127136; SMP: 0.3214285714285714; select movie_0.release_year from company as company_0, copyright as copyright_0, made_by as made_by_0, made_by as made_by_1, movie as movie_0, movie as movie_1, producer as producer_0 where company_0.name = "Movies" and producer_0.name = "Brad Pitt" and company_0.id = copyright_0.cid and copyright_0.msid = movie_0.mid and made_by_0.msid = movie_0.mid and made_by_0.msid = movie_1.mid and made_by_1.msid = movie_1.mid and made_by_1.pid = producer_0.pid group by movie_0.release_year order by company_0.id desc limit 1
TOT: 0.7970099119878722; TR: 0.8018137639127136; SMP: 0.3214285714285714; select movie_0.release_year from company as company_0, copyright as copyright_0, made_by as made_by_0, made_by as made_by_1, movie as movie_0, producer as producer_0, tv_series as tv_series_0 where company_0.name = "Movies" and producer_0.name = "Brad Pitt" and company_0.id = copyright_0.cid and copyright_0.msid = tv_series_0.sid and made_by_0.msid = movie_0.mid and made_by_0.msid = tv_series_0.sid and made_by_1.msid = movie_0.mid and made_by_1.pid = producer_0.pid group by movie_0.release_year order by company_0.id desc limit 1
TOT: 0.7970099119878722; TR: 0.8018137639127136; SMP: 0.3214285714285714; select movie_0.release_year from cast as cast_0, company as company_0, copyright as copyright_0, made_by as made_by_0, movie as movie_0, producer as producer_0, tv_series as tv_series_0 where company_0.name = "Movies" and producer_0.name = "Brad Pitt" and cast_0.msid = movie_0.mid and cast_0.msid = tv_series_0.sid and company_0.id = copyright_0.cid and copyright_0.msid = movie_0.mid and made_by_0.msid = tv_series_0.sid and made_by_0.pid = producer_0.pid group by movie_0.release_year order by company_0.id desc limit 1
TOT: 0.7970099119878722; TR: 0.8018137639127136; SMP: 0.3214285714285714; select movie_0.release_year from classification as classification_0, company as company_0, copyright as copyright_0, made_by as made_by_0, movie as movie_0, movie as movie_1, producer as producer_0 where company_0.name = "Movies" and producer_0.name = "Brad Pitt" and classification_0.msid = movie_0.mid and classification_0.msid = movie_1.mid and company_0.id = copyright_0.cid and copyright_0.msid = movie_0.mid and made_by_0.msid = movie_1.mid and made_by_0.pid = producer_0.pid group by movie_0.release_year order by company_0.id desc limit 1
TOT: 0.7970099119878722; TR: 0.8018137639127136; SMP: 0.3214285714285714; select movie_0.release_year from cast as cast_0, company as company_0, copyright as copyright_0, made_by as made_by_0, movie as movie_0, producer as producer_0, tv_series as tv_series_0 where company_0.name = "Movies" and producer_0.name = "Brad Pitt" and cast_0.msid = movie_0.mid and cast_0.msid = tv_series_0.sid and company_0.id = copyright_0.cid and copyright_0.msid = tv_series_0.sid and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid group by movie_0.release_year order by company_0.id desc limit 1


02:01  INFO: ================
02:01  INFO: QUERY 116: What movies have the same director as the movie "Revolutionary Road"?
02:01  INFO: ================
599. ROOT: ROOT; NA; ; (0) 
601. What: CMT; NA; ; (0) 
602. movies: NT; NA; ; (0) movie.title(1.0):| movie(1.0):| company.name(0.91):Movies; Movie; W Movies; | tv_series.title(0.8):Movies, Movies, Movi; Moon Movies; Movie Memories; | cast.role(0.79):Movie; KPC Movies; Movie F; | 
603. director: NT; NA; ; (0) director.name(1.0):| director(1.0):| movie.title(0.95):Director; Director; Director; | company.name(0.93):Director; Directors; Directors; | writer.name(0.9):Director; Director X; Director X.; | 
606. Revolutionary Road: VTTEXT; NA; ; (0) movie.title(0.95):Revolutionary Road; Revolutionary Road; Revolutionary Roads; | cast.role(0.8):Revolutionary 2; Revolutionary 3; Revolutionary 3; | keyword.keyword(0.79):revolutionary; revolutionary; revolutionary-war; | tv_series.title(0.73):The Revolutionary Wa; The Revolutionary Wa; The Revolutionary Li; | company.name(0.71):Revolutionary Media; Revolutionary Media; Revolutionary Releas; | 
609. movie: NT; NA; ; (0) movie.title(1.0):| movie(1.0):| company.name(0.92):Movie; Movie Movie; Movies; | cast.role(0.87):Movie; Movie F; Movie AD; | keyword.keyword(0.81):movie-in-movie; b-movie; z-movie; | 
What, WP
movies, NNS
have, VBP
the, DT
same, JJ
director, NN
as, IN
the, DT
movie, NN
Revolutionary Road, NN
dobj(have-3, What-1)
nsubj(have-3, movies-2)
root(ROOT-0, have-3)
det(director-6, the-4)
amod(director-6, same-5)
dobj(have-3, director-6)
case(Revolutionary Road-10, as-7)
det(Revolutionary Road-10, the-8)
compound(Revolutionary Road-10, movie-9)
nmod(director-6, Revolutionary Road-10)

PARSE TREE:(599) ROOT ROOT
    (601) What CMT
        (602) movies NT
            (603) director NT
                (606) Revolutionary Road VTTEXT
                    (609) movie NT


===========
TRANSLATIONS
===========
TOT: 1.0; NL: 1.0; NL+AG: 1.0; NL+QF: 1.0; rels: [director]; projs: [movie_0.title]; preds: [movie_0.title = "Revolutionary Road"]; havings: []; superlative: []; blanks: 0
TOT: 0.9833333333333333; NL: 0.9833333333333333; NL+AG: 0.9833333333333333; NL+QF: 0.9888888888888888; rels: []; projs: [movie_0.title]; preds: [movie_0.title = "Director",movie_0.title = "Revolutionary Road"]; havings: []; superlative: []; blanks: 0
TOT: 0.9824411350005725; NL: 0.9824411350005725; NL+AG: 0.9824411350005725; NL+QF: 0.9882940900003816; rels: [director]; projs: [movie_0.title]; preds: [movie_0.title = "Revolutionary Road"]; havings: []; superlative: []; blanks: 0
TOT: 0.975152483914508; NL: 0.975152483914508; NL+AG: 0.975152483914508; NL+QF: 0.9839459963634195; rels: []; projs: [movie_0.title]; preds: [company_0.name = "Director",movie_0.title = "Revolutionary Road"]; havings: []; superlative: []; blanks: 0
TOT: 0.9677486412493994; NL: 0.9677486412493994; NL+AG: 0.9677486412493994; NL+QF: 0.9761052423878317; rels: [director]; projs: [movie_0.title]; preds: [movie_0.title = "Revolutionary Road",company_0.name = "Movie"]; havings: []; superlative: []; blanks: 0
TOT: 0.9669430256906244; NL: 0.9669430256906244; NL+AG: 0.9669430256906244; NL+QF: 0.977962017127083; rels: []; projs: [movie_0.title]; preds: [writer_0.name = "Director",movie_0.title = "Revolutionary Road"]; havings: []; superlative: []; blanks: 0
TOT: 0.9657744683339056; NL: 0.9657744683339056; NL+AG: 0.9657744683339056; NL+QF: 0.9771829788892704; rels: []; projs: [movie_0.title]; preds: [movie_0.title = "Director",movie_0.title = "Revolutionary Road"]; havings: []; superlative: []; blanks: 0
TOT: 0.9575936189150805; NL: 0.9575936189150805; NL+AG: 0.9575936189150805; NL+QF: 0.9722400863638011; rels: []; projs: [movie_0.title]; preds: [company_0.name = "Director",movie_0.title = "Revolutionary Road"]; havings: []; superlative: []; blanks: 0
TOT: 0.9554595451094681; NL: 0.9554595451094681; NL+AG: 0.9554595451094681; NL+QF: 0.9698206193058057; rels: [director]; projs: [movie_0.title]; preds: [movie_0.title = "Revolutionary Road",cast_0.role = "Movie"]; havings: []; superlative: []; blanks: 0
TOT: 0.9552486412493992; NL: 0.9552486412493992; NL+AG: 0.9552486412493992; NL+QF: 0.9667302423878317; rels: []; projs: [movie_0.title]; preds: [movie_0.title = "Director",movie_0.title = "Revolutionary Road",company_0.name = "Movie"]; havings: []; superlative: []; blanks: 0

===========
RESULTS
===========
TOT: 0.9767142857142856; TR: 0.9833333333333333; SMP: 0.3214285714285714; select movie_2.title from copyright as copyright_0, copyright as copyright_1, movie as movie_0, movie as movie_1, movie as movie_2, written_by as written_by_0, written_by as written_by_1 where movie_0.title = "Director" and movie_1.title = "Revolutionary Road" and copyright_0.id = copyright_1.id and copyright_0.msid = movie_0.mid and copyright_1.msid = movie_1.mid and movie_0.mid = written_by_0.msid and movie_2.mid = written_by_1.msid and written_by_0.id = written_by_1.id
TOT: 0.9767142857142856; TR: 0.9833333333333333; SMP: 0.3214285714285714; select movie_1.title from copyright as copyright_0, copyright as copyright_1, movie as movie_0, movie as movie_1, movie as movie_2, written_by as written_by_0, written_by as written_by_1 where movie_0.title = "Revolutionary Road" and movie_2.title = "Director" and copyright_0.id = copyright_1.id and copyright_0.msid = movie_0.mid and copyright_1.msid = movie_1.mid and movie_0.mid = written_by_0.msid and movie_2.mid = written_by_1.msid and written_by_0.id = written_by_1.id
TOT: 0.9767142857142856; TR: 0.9833333333333333; SMP: 0.3214285714285714; select movie_0.title from copyright as copyright_0, copyright as copyright_1, movie as movie_0, movie as movie_1, movie as movie_2, written_by as written_by_0, written_by as written_by_1 where movie_1.title = "Director" and movie_2.title = "Revolutionary Road" and copyright_0.id = copyright_1.id and copyright_0.msid = movie_0.mid and copyright_1.msid = movie_1.mid and movie_0.mid = written_by_0.msid and movie_2.mid = written_by_1.msid and written_by_0.id = written_by_1.id
TOT: 0.9767142857142856; TR: 0.9833333333333333; SMP: 0.3214285714285714; select movie_2.title from movie as movie_0, movie as movie_1, movie as movie_2, tags as tags_0, tags as tags_1, written_by as written_by_0, written_by as written_by_1 where movie_0.title = "Director" and movie_1.title = "Revolutionary Road" and movie_0.mid = tags_0.msid and movie_0.mid = written_by_0.msid and movie_1.mid = tags_1.msid and movie_2.mid = written_by_1.msid and tags_0.id = tags_1.id and written_by_0.id = written_by_1.id
TOT: 0.9767142857142856; TR: 0.9833333333333333; SMP: 0.3214285714285714; select movie_1.title from movie as movie_0, movie as movie_1, movie as movie_2, tags as tags_0, tags as tags_1, written_by as written_by_0, written_by as written_by_1 where movie_0.title = "Revolutionary Road" and movie_2.title = "Director" and movie_0.mid = tags_0.msid and movie_0.mid = written_by_0.msid and movie_1.mid = tags_1.msid and movie_2.mid = written_by_1.msid and tags_0.id = tags_1.id and written_by_0.id = written_by_1.id
TOT: 0.9767142857142856; TR: 0.9833333333333333; SMP: 0.3214285714285714; select movie_0.title from movie as movie_0, movie as movie_1, movie as movie_2, tags as tags_0, tags as tags_1, written_by as written_by_0, written_by as written_by_1 where movie_1.title = "Director" and movie_2.title = "Revolutionary Road" and movie_0.mid = tags_0.msid and movie_0.mid = written_by_0.msid and movie_1.mid = tags_1.msid and movie_2.mid = written_by_1.msid and tags_0.id = tags_1.id and written_by_0.id = written_by_1.id
TOT: 0.9767142857142856; TR: 0.9833333333333333; SMP: 0.3214285714285714; select movie_2.title from copyright as copyright_0, copyright as copyright_1, movie as movie_0, movie as movie_1, movie as movie_2, tags as tags_0, tags as tags_1 where movie_0.title = "Director" and movie_1.title = "Revolutionary Road" and copyright_0.id = copyright_1.id and copyright_0.msid = movie_0.mid and copyright_1.msid = movie_1.mid and movie_0.mid = tags_0.msid and movie_2.mid = tags_1.msid and tags_0.id = tags_1.id
TOT: 0.9767142857142856; TR: 0.9833333333333333; SMP: 0.3214285714285714; select movie_1.title from copyright as copyright_0, copyright as copyright_1, movie as movie_0, movie as movie_1, movie as movie_2, tags as tags_0, tags as tags_1 where movie_0.title = "Revolutionary Road" and movie_2.title = "Director" and copyright_0.id = copyright_1.id and copyright_0.msid = movie_0.mid and copyright_1.msid = movie_1.mid and movie_0.mid = tags_0.msid and movie_2.mid = tags_1.msid and tags_0.id = tags_1.id
TOT: 0.9767142857142856; TR: 0.9833333333333333; SMP: 0.3214285714285714; select movie_0.title from copyright as copyright_0, copyright as copyright_1, movie as movie_0, movie as movie_1, movie as movie_2, tags as tags_0, tags as tags_1 where movie_1.title = "Director" and movie_2.title = "Revolutionary Road" and copyright_0.id = copyright_1.id and copyright_0.msid = movie_0.mid and copyright_1.msid = movie_1.mid and movie_0.mid = tags_0.msid and movie_2.mid = tags_1.msid and tags_0.id = tags_1.id
TOT: 0.9767142857142856; TR: 0.9833333333333333; SMP: 0.3214285714285714; select movie_2.title from classification as classification_0, classification as classification_1, movie as movie_0, movie as movie_1, movie as movie_2, written_by as written_by_0, written_by as written_by_1 where movie_0.title = "Director" and movie_1.title = "Revolutionary Road" and classification_0.id = classification_1.id and classification_0.msid = movie_0.mid and classification_1.msid = movie_1.mid and movie_0.mid = written_by_0.msid and movie_2.mid = written_by_1.msid and written_by_0.id = written_by_1.id


02:04  INFO: ================
02:04  INFO: QUERY 47: What are the series featuring "Kerry Washington"?
02:04  INFO: ================
611. ROOT: ROOT; NA; ; (0) 
612. featuring: NT; NA; ; (0) movie.release_year(0.64):| producer.name(0.64):| producer(0.64):| made_by(0.64):| movie.title_aka(0.62):| 
613. What: CMT; NA; ; (0) 
615. series: NT; NA; ; (0) tv_series.title(1.0):| tv_series(1.0):| keyword.keyword(0.9):series; series-in-series; tv-series; | cast.role(0.85):Serie; Serie; Serie; | company.name(0.84):Series+; G-Series; T-Series; | 
617. Kerry Washington: VTTEXT; NA; ; (0) actor.name(0.99):Kerry Washington; Kerry Washington; Jerry Washington; | producer.name(0.99):Kerry Washington; Kerry Washington; Terry Washington; | writer.name(0.89):Jerry Washington; Ellery Washington; Leroy Washington; | director.name(0.88):Jerry Washington; Leroy Washington; Tony Washington; | cast.role(0.86):Sherry Washington; Roy Washington; Amy Washington; | 
What, WP
are, VBP
the, DT
series, NN
featuring, VBG
Kerry Washington, NNP
dep(featuring-5, What-1)
aux(featuring-5, are-2)
det(series-4, the-3)
nsubj(featuring-5, series-4)
root(ROOT-0, featuring-5)
dobj(featuring-5, Kerry Washington-6)

PARSE TREE:(611) ROOT ROOT
    (613) What CMT
        (615) series NT
            (612) featuring NT
                (617) Kerry Washington VTTEXT


===========
TRANSLATIONS
===========
TOT: 0.9966666666666666; NL: 0.9966666666666666; NL+AG: 0.9966666666666666; NL+QF: 0.9983333333333333; rels: []; projs: [tv_series_0.title]; preds: [producer_0.name = "Kerry Washington"]; havings: []; superlative: []; blanks: 0
TOT: 0.9311216736870943; NL: 0.9311216736870943; NL+AG: 0.9311216736870943; NL+QF: 0.9540811157913961; rels: []; projs: [keyword_0.id]; preds: [keyword_0.keyword = "series",producer_0.name = "Kerry Washington"]; havings: []; superlative: []; blanks: 0
TOT: 0.8921078087289404; NL: 0.8921078087289404; NL+AG: 0.8921078087289404; NL+QF: 0.9280718724859603; rels: []; projs: [company_0.id]; preds: [company_0.name = "Series+",producer_0.name = "Kerry Washington"]; havings: []; superlative: []; blanks: 0
TOT: 0.8644444444444445; NL: 0.8644444444444445; NL+AG: 0.9622500849454028; NL+QF: 0.9555584404913547; rels: []; projs: [tv_series_0.title]; preds: [actor_0.name = "Kerry Washington"]; havings: []; superlative: []; blanks: 1
TOT: 0.8644444444444445; NL: 0.8644444444444445; NL+AG: 0.9622500849454028; NL+QF: 0.9580974720752499; rels: []; projs: [tv_series_0.title]; preds: [producer_0.name = "Kerry Washington"]; havings: []; superlative: []; blanks: 1
TOT: 0.8483412552653207; NL: 0.8483412552653207; NL+AG: 0.9190421865346464; NL+QF: 0.9264811462854826; rels: []; projs: [keyword_0.id]; preds: [keyword_0.keyword = "series",actor_0.name = "Kerry Washington"]; havings: []; superlative: []; blanks: 1
TOT: 0.8483412552653207; NL: 0.8483412552653207; NL+AG: 0.9190421865346464; NL+QF: 0.9279093515514236; rels: []; projs: [keyword_0.id]; preds: [keyword_0.keyword = "series",producer_0.name = "Kerry Washington"]; havings: []; superlative: []; blanks: 1
TOT: 0.8305813058344941; NL: 0.8305813058344941; NL+AG: 0.9283869463354523; NL+QF: 0.9314986483341071; rels: []; projs: [tv_series_0.title]; preds: [writer_0.name = "Jerry Washington"]; havings: []; superlative: []; blanks: 1
TOT: 0.8263718268428413; NL: 0.8263718268428413; NL+AG: 0.9241774673437996; NL+QF: 0.9307489421849123; rels: []; projs: [tv_series_0.title]; preds: [director_0.name = "Jerry Washington"]; havings: []; superlative: []; blanks: 1
TOT: 0.8229439013078579; NL: 0.8229439013078579; NL+AG: 0.8936448325771836; NL+QF: 0.9065981747076651; rels: []; projs: [keyword_0.id]; preds: [keyword_0.keyword = "series",writer_0.name = "Jerry Washington"]; havings: []; superlative: []; blanks: 1

===========
RESULTS
===========
TOT: 0.9908666666666666; TR: 0.9966666666666666; SMP: 0.41666666666666663; select tv_series_0.title from made_by as made_by_0, producer as producer_0, tv_series as tv_series_0 where producer_0.name = "Kerry Washington" and made_by_0.msid = tv_series_0.sid and made_by_0.pid = producer_0.pid
TOT: 0.9253104569502233; TR: 0.9311216736870943; SMP: 0.35; select keyword_0.id from keyword as keyword_0, made_by as made_by_0, movie as movie_0, producer as producer_0, tags as tags_0 where keyword_0.keyword = "series" and producer_0.name = "Kerry Washington" and keyword_0.id = tags_0.kid and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid and movie_0.mid = tags_0.msid
TOT: 0.9253104569502233; TR: 0.9311216736870943; SMP: 0.35; select keyword_0.id from keyword as keyword_0, made_by as made_by_0, producer as producer_0, tags as tags_0, tv_series as tv_series_0 where keyword_0.keyword = "series" and producer_0.name = "Kerry Washington" and keyword_0.id = tags_0.kid and made_by_0.msid = tv_series_0.sid and made_by_0.pid = producer_0.pid and tags_0.msid = tv_series_0.sid
TOT: 0.9250247426645091; TR: 0.9311216736870943; SMP: 0.3214285714285714; select keyword_0.id from classification as classification_0, keyword as keyword_0, made_by as made_by_0, movie as movie_0, producer as producer_0, tags as tags_0, tv_series as tv_series_0 where keyword_0.keyword = "series" and producer_0.name = "Kerry Washington" and classification_0.msid = movie_0.mid and classification_0.msid = tv_series_0.sid and keyword_0.id = tags_0.kid and made_by_0.msid = tv_series_0.sid and made_by_0.pid = producer_0.pid and movie_0.mid = tags_0.msid
TOT: 0.9250247426645091; TR: 0.9311216736870943; SMP: 0.3214285714285714; select keyword_0.id from keyword as keyword_0, made_by as made_by_0, made_by as made_by_1, movie as movie_0, producer as producer_0, tags as tags_0, tv_series as tv_series_0 where keyword_0.keyword = "series" and producer_0.name = "Kerry Washington" and keyword_0.id = tags_0.kid and made_by_0.msid = movie_0.mid and made_by_0.msid = tv_series_0.sid and made_by_1.msid = movie_0.mid and made_by_1.pid = producer_0.pid and tags_0.msid = tv_series_0.sid
TOT: 0.9250247426645091; TR: 0.9311216736870943; SMP: 0.3214285714285714; select keyword_0.id from classification as classification_0, keyword as keyword_0, made_by as made_by_0, movie as movie_0, producer as producer_0, tags as tags_0, tv_series as tv_series_0 where keyword_0.keyword = "series" and producer_0.name = "Kerry Washington" and classification_0.msid = movie_0.mid and classification_0.msid = tv_series_0.sid and keyword_0.id = tags_0.kid and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid and tags_0.msid = tv_series_0.sid
TOT: 0.9250247426645091; TR: 0.9311216736870943; SMP: 0.3214285714285714; select keyword_0.id from cast as cast_0, keyword as keyword_0, made_by as made_by_0, movie as movie_0, movie as movie_1, producer as producer_0, tags as tags_0 where keyword_0.keyword = "series" and producer_0.name = "Kerry Washington" and cast_0.msid = movie_0.mid and cast_0.msid = movie_1.mid and keyword_0.id = tags_0.kid and made_by_0.msid = movie_1.mid and made_by_0.pid = producer_0.pid and movie_0.mid = tags_0.msid
TOT: 0.9250247426645091; TR: 0.9311216736870943; SMP: 0.3214285714285714; select keyword_0.id from keyword as keyword_0, made_by as made_by_0, made_by as made_by_1, movie as movie_0, movie as movie_1, producer as producer_0, tags as tags_0 where keyword_0.keyword = "series" and producer_0.name = "Kerry Washington" and keyword_0.id = tags_0.kid and made_by_0.msid = movie_0.mid and made_by_0.msid = movie_1.mid and made_by_1.msid = movie_1.mid and made_by_1.pid = producer_0.pid and movie_0.mid = tags_0.msid
TOT: 0.9250247426645091; TR: 0.9311216736870943; SMP: 0.3214285714285714; select keyword_0.id from keyword as keyword_0, made_by as made_by_0, movie as movie_0, movie as movie_1, producer as producer_0, tags as tags_0, written_by as written_by_0 where keyword_0.keyword = "series" and producer_0.name = "Kerry Washington" and keyword_0.id = tags_0.kid and made_by_0.msid = movie_1.mid and made_by_0.pid = producer_0.pid and movie_0.mid = tags_0.msid and movie_0.mid = written_by_0.msid and movie_1.mid = written_by_0.msid
TOT: 0.9250247426645091; TR: 0.9311216736870943; SMP: 0.3214285714285714; select keyword_0.id from cast as cast_0, keyword as keyword_0, made_by as made_by_0, producer as producer_0, tags as tags_0, tv_series as tv_series_0, tv_series as tv_series_1 where keyword_0.keyword = "series" and producer_0.name = "Kerry Washington" and cast_0.msid = tv_series_0.sid and cast_0.msid = tv_series_1.sid and keyword_0.id = tags_0.kid and made_by_0.msid = tv_series_1.sid and made_by_0.pid = producer_0.pid and tags_0.msid = tv_series_0.sid


02:10  INFO: ================
02:10  INFO: QUERY 69: Find all the directors who are from Afghanistan
02:10  INFO: ================
02:11  INFO: ================
02:11  INFO: QUERY 127: Who is directed the latest movie by "NBCUniversal"
02:11  INFO: ================
629. ROOT: ROOT; NA; ; (0) 
630. directed: NT; NA; ; (0) directed_by(1.0):| director.name(0.72):| director(0.72):| producer.name(0.69):| producer(0.69):| 
633. movie: NT; NA; ; (0) movie.title(1.0):| movie(1.0):| company.name(0.92):Movie; Movie Movie; Movies; | cast.role(0.87):Movie; Movie F; Movie AD; | keyword.keyword(0.81):movie-in-movie; b-movie; z-movie; | 
635. latest: FT; max; ; (0) 
636. NBCUniversal: VTTEXT; NA; ; (0) company.name(0.91):NBCUniversal; NBCUniversal Media; NBCUniversal Skycast; | genre.genre(0.2):Commercial; Commercial; Experimental; | 
Who, WP
is, VBZ
directed, VBN
the, DT
latest, JJS
movie, NN
by, IN
NBCUniversal, NNP
nsubjpass(directed-3, Who-1)
auxpass(directed-3, is-2)
root(ROOT-0, directed-3)
det(movie-6, the-4)
amod(movie-6, latest-5)
dobj(directed-3, movie-6)
case(NBCUniversal-8, by-7)
nmod(directed-3, NBCUniversal-8)

PARSE TREE:(629) ROOT ROOT
    (630) directed NT
        (633) movie NT
        (636) NBCUniversal VTTEXT


===========
TRANSLATIONS
===========
TOT: 0.8179986466018818; NL: 0.8179986466018818; NL+AG: 0.9551512888783047; NL+QF: 0.9497385710690729; rels: []; projs: [director_0.name]; preds: [company_0.name = "NBCUniversal"]; havings: []; superlative: [movie_0.title desc limit 1]; blanks: 0
TOT: 0.8151361466018818; NL: 0.8151361466018818; NL+AG: 0.9551512888783047; NL+QF: 0.9463177349514115; rels: []; projs: [producer_0.name]; preds: [company_0.name = "NBCUniversal"]; havings: []; superlative: [movie_0.title desc limit 1]; blanks: 0
TOT: 0.8086016132790336; NL: 0.8086016132790336; NL+AG: 0.9216026077959555; NL+QF: 0.9218104475303519; rels: []; projs: [director_0.name]; preds: [company_0.name = "Movie",company_0.name = "NBCUniversal"]; havings: []; superlative: [company_0.id desc limit 1]; blanks: 0
TOT: 0.8063116132790336; NL: 0.8063116132790336; NL+AG: 0.9216026077959555; NL+QF: 0.9175532906232269; rels: []; projs: [producer_0.name]; preds: [company_0.name = "Movie",company_0.name = "NBCUniversal"]; havings: []; superlative: [company_0.id desc limit 1]; blanks: 0
TOT: 0.7458626959975281; NL: 0.7458626959975281; NL+AG: 0.9100469171737133; NL+QF: 0.9054459371976454; rels: []; projs: [director_0.name]; preds: [company_0.name = "Movie"]; havings: []; superlative: [company_0.id desc limit 1]; blanks: 1
TOT: 0.7435726959975282; NL: 0.7435726959975282; NL+AG: 0.9100469171737133; NL+QF: 0.90200857408374; rels: []; projs: [producer_0.name]; preds: [company_0.name = "Movie"]; havings: []; superlative: [company_0.id desc limit 1]; blanks: 1
TOT: 0.739575; NL: 0.739575; NL+AG: 0.9389868902353675; NL+QF: 0.9293691560883044; rels: []; projs: [director_0.name]; preds: []; havings: []; superlative: [movie_0.title desc limit 1]; blanks: 1
TOT: 0.7390822115758645; NL: 0.7390822115758645; NL+AG: 0.8520832060927865; NL+QF: 0.8657774009579867; rels: []; projs: [director_0.name]; preds: [keyword_0.keyword = "movie-in-movie",company_0.name = "NBCUniversal"]; havings: []; superlative: [keyword_0.id desc limit 1]; blanks: 0
TOT: 0.7367922115758645; NL: 0.7367922115758645; NL+AG: 0.8520832060927865; NL+QF: 0.8619377692606918; rels: []; projs: [producer_0.name]; preds: [keyword_0.keyword = "movie-in-movie",company_0.name = "NBCUniversal"]; havings: []; superlative: [keyword_0.id desc limit 1]; blanks: 0
TOT: 0.7367125; NL: 0.7367125; NL+AG: 0.9389868902353675; NL+QF: 0.9272292477725486; rels: []; projs: [producer_0.name]; preds: []; havings: []; superlative: [movie_0.title desc limit 1]; blanks: 1

===========
RESULTS
===========
TOT: 0.813318660135863; TR: 0.8179986466018818; SMP: 0.35; select director_0.name from company as company_0, copyright as copyright_0, directed_by as directed_by_0, director as director_0, movie as movie_0 where company_0.name = "NBCUniversal" and company_0.id = copyright_0.cid and copyright_0.msid = movie_0.mid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid order by movie_0.title desc limit 1
TOT: 0.8130329458501487; TR: 0.8179986466018818; SMP: 0.3214285714285714; select director_0.name from company as company_0, copyright as copyright_0, directed_by as directed_by_0, director as director_0, made_by as made_by_0, movie as movie_0, tv_series as tv_series_0 where company_0.name = "NBCUniversal" and company_0.id = copyright_0.cid and copyright_0.msid = tv_series_0.sid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and made_by_0.msid = movie_0.mid and made_by_0.msid = tv_series_0.sid order by movie_0.title desc limit 1
TOT: 0.8130329458501487; TR: 0.8179986466018818; SMP: 0.3214285714285714; select director_0.name from company as company_0, copyright as copyright_0, directed_by as directed_by_0, directed_by as directed_by_1, director as director_0, movie as movie_0, tv_series as tv_series_0 where company_0.name = "NBCUniversal" and company_0.id = copyright_0.cid and copyright_0.msid = tv_series_0.sid and directed_by_0.msid = movie_0.mid and directed_by_0.msid = tv_series_0.sid and directed_by_1.did = director_0.did and directed_by_1.msid = movie_0.mid order by movie_0.title desc limit 1
TOT: 0.8130329458501487; TR: 0.8179986466018818; SMP: 0.3214285714285714; select director_0.name from company as company_0, copyright as copyright_0, directed_by as directed_by_0, director as director_0, movie as movie_0, movie as movie_1, tags as tags_0 where company_0.name = "NBCUniversal" and company_0.id = copyright_0.cid and copyright_0.msid = movie_0.mid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_1.mid and movie_0.mid = tags_0.msid and movie_1.mid = tags_0.msid order by movie_0.title desc limit 1
TOT: 0.8130329458501487; TR: 0.8179986466018818; SMP: 0.3214285714285714; select director_0.name from company as company_0, copyright as copyright_0, directed_by as directed_by_0, director as director_0, movie as movie_0, tags as tags_0, tv_series as tv_series_0 where company_0.name = "NBCUniversal" and company_0.id = copyright_0.cid and copyright_0.msid = tv_series_0.sid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and movie_0.mid = tags_0.msid and tags_0.msid = tv_series_0.sid order by movie_0.title desc limit 1
TOT: 0.8130329458501487; TR: 0.8179986466018818; SMP: 0.3214285714285714; select director_0.name from company as company_0, copyright as copyright_0, copyright as copyright_1, directed_by as directed_by_0, director as director_0, movie as movie_0, tv_series as tv_series_0 where company_0.name = "NBCUniversal" and company_0.id = copyright_1.cid and copyright_0.msid = movie_0.mid and copyright_0.msid = tv_series_0.sid and copyright_1.msid = tv_series_0.sid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid order by movie_0.title desc limit 1
TOT: 0.8130329458501487; TR: 0.8179986466018818; SMP: 0.3214285714285714; select director_0.name from company as company_0, copyright as copyright_0, directed_by as directed_by_0, director as director_0, movie as movie_0, tv_series as tv_series_0, written_by as written_by_0 where company_0.name = "NBCUniversal" and company_0.id = copyright_0.cid and copyright_0.msid = tv_series_0.sid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and movie_0.mid = written_by_0.msid and tv_series_0.sid = written_by_0.msid order by movie_0.title desc limit 1
TOT: 0.8130329458501487; TR: 0.8179986466018818; SMP: 0.3214285714285714; select director_0.name from cast as cast_0, company as company_0, copyright as copyright_0, directed_by as directed_by_0, director as director_0, movie as movie_0, movie as movie_1 where company_0.name = "NBCUniversal" and cast_0.msid = movie_0.mid and cast_0.msid = movie_1.mid and company_0.id = copyright_0.cid and copyright_0.msid = movie_0.mid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_1.mid order by movie_0.title desc limit 1
TOT: 0.8130329458501487; TR: 0.8179986466018818; SMP: 0.3214285714285714; select director_0.name from company as company_0, copyright as copyright_0, directed_by as directed_by_0, directed_by as directed_by_1, director as director_0, movie as movie_0, movie as movie_1 where company_0.name = "NBCUniversal" and company_0.id = copyright_0.cid and copyright_0.msid = movie_0.mid and directed_by_0.msid = movie_0.mid and directed_by_0.msid = movie_1.mid and directed_by_1.did = director_0.did and directed_by_1.msid = movie_1.mid order by movie_0.title desc limit 1
TOT: 0.8130329458501487; TR: 0.8179986466018818; SMP: 0.3214285714285714; select director_0.name from company as company_0, copyright as copyright_0, directed_by as directed_by_0, director as director_0, movie as movie_0, movie as movie_1, written_by as written_by_0 where company_0.name = "NBCUniversal" and company_0.id = copyright_0.cid and copyright_0.msid = movie_0.mid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_1.mid and movie_0.mid = written_by_0.msid and movie_1.mid = written_by_0.msid order by movie_0.title desc limit 1


02:12  INFO: ================
02:12  INFO: QUERY 82: which company funded the "Mickey Mouse" series
02:12  INFO: ================
639. ROOT: ROOT; NA; ; (0) 
640. funded: NT; NA; ; (0) movie.budget(0.69):| tv_series.budget(0.69):| company.name(0.62):| company(0.62):| movie.release_year(0.6):| 
641. company: NT; NA; ; (0) company.name(1.0):| company(1.0):| movie.title(0.95):Company; Company; Company; | cast.role(0.95):Company; Company; Company; | keyword.keyword(0.89):company; company-k; it-company; | 
643. series: NT; NA; ; (0) tv_series.title(1.0):| tv_series(1.0):| keyword.keyword(0.9):series; series-in-series; tv-series; | cast.role(0.85):Serie; Serie; Serie; | company.name(0.84):Series+; G-Series; T-Series; | 
645. Mickey Mouse: VTTEXT; NA; ; (0) tv_series.title(1.0):Mickey Mouse; Mickey Mouse; Mickey Mouse; | actor.name(0.98):Mickey Mouse; Mickey Mouse; Mickey Mod; | producer.name(0.98):Mickey Mouse; Mickey Mouse; Mickey Most; | director.name(0.97):Mickey Mouse; Mickey Mouse; Mickey Moore; | writer.name(0.97):Mickey Mouse; Mickey Mouse; Mickey Monroy; | 
which, WDT
company, NN
funded, VBD
the, DT
Mickey Mouse, NNP
series, NN
det(company-2, which-1)
nsubj(funded-3, company-2)
root(ROOT-0, funded-3)
det(series-6, the-4)
compound(series-6, Mickey Mouse-5)
dobj(funded-3, series-6)

PARSE TREE:(639) ROOT ROOT
    (640) funded NT
        (641) company NT
        (643) series NT
            (645) Mickey Mouse VTTEXT


===========
TRANSLATIONS
===========
TOT: 0.8113602109659938; NL: 0.8113602109659938; NL+AG: 0.9602794502221726; NL+QF: 0.9437529707244953; rels: [company]; projs: [movie_0.budget]; preds: [keyword_0.keyword = "series",tv_series_0.title = "Mickey Mouse"]; havings: []; superlative: []; blanks: 0
TOT: 0.8113602109659938; NL: 0.8113602109659938; NL+AG: 0.9602794502221726; NL+QF: 0.9437529707244953; rels: [company]; projs: [tv_series_0.budget]; preds: [keyword_0.keyword = "series",tv_series_0.title = "Mickey Mouse"]; havings: []; superlative: []; blanks: 0
TOT: 0.806460967271178; NL: 0.806460967271178; NL+AG: 0.9553802065273569; NL+QF: 0.9400785379533834; rels: [company]; projs: [movie_0.budget]; preds: [keyword_0.keyword = "series",actor_0.name = "Mickey Mouse"]; havings: []; superlative: []; blanks: 0
TOT: 0.806460967271178; NL: 0.806460967271178; NL+AG: 0.9553802065273569; NL+QF: 0.9400785379533834; rels: [company]; projs: [tv_series_0.budget]; preds: [keyword_0.keyword = "series",actor_0.name = "Mickey Mouse"]; havings: []; superlative: []; blanks: 0
TOT: 0.8054294627509055; NL: 0.8054294627509055; NL+AG: 0.9543487020070844; NL+QF: 0.9393049095631791; rels: [company]; projs: [movie_0.budget]; preds: [keyword_0.keyword = "series",producer_0.name = "Mickey Mouse"]; havings: []; superlative: []; blanks: 0
TOT: 0.8054294627509055; NL: 0.8054294627509055; NL+AG: 0.9543487020070844; NL+QF: 0.9393049095631791; rels: [company]; projs: [tv_series_0.budget]; preds: [keyword_0.keyword = "series",producer_0.name = "Mickey Mouse"]; havings: []; superlative: []; blanks: 0
TOT: 0.8045420291478119; NL: 0.8045420291478119; NL+AG: 0.9534612684039908; NL+QF: 0.9392369213959828; rels: [company]; projs: [movie_0.budget]; preds: [keyword_0.keyword = "series",director_0.name = "Mickey Mouse"]; havings: []; superlative: []; blanks: 0
TOT: 0.8045420291478119; NL: 0.8045420291478119; NL+AG: 0.9534612684039908; NL+QF: 0.9386393343608589; rels: [company]; projs: [tv_series_0.budget]; preds: [keyword_0.keyword = "series",director_0.name = "Mickey Mouse"]; havings: []; superlative: []; blanks: 0
TOT: 0.8037679765615635; NL: 0.8037679765615635; NL+AG: 0.9526872158177424; NL+QF: 0.9380587949211726; rels: [company]; projs: [movie_0.budget]; preds: [keyword_0.keyword = "series",writer_0.name = "Mickey Mouse"]; havings: []; superlative: []; blanks: 0
TOT: 0.8037679765615635; NL: 0.8037679765615635; NL+AG: 0.9526872158177424; NL+QF: 0.9380587949211726; rels: [company]; projs: [tv_series_0.budget]; preds: [keyword_0.keyword = "series",writer_0.name = "Mickey Mouse"]; havings: []; superlative: []; blanks: 0

===========
RESULTS
===========


02:13  INFO: ================
02:13  INFO: QUERY 25: Find all movies written and produced by "Woody Allen"
02:13  INFO: ================
647. ROOT: ROOT; NA; ; (0) 
648. Find: CMT; NA; ; (0) 
649. movies: NT; NA; all; (0) movie.title(1.0):| movie(1.0):| company.name(0.91):Movies; Movie; W Movies; | tv_series.title(0.8):Movies, Movies, Movi; Moon Movies; Movie Memories; | cast.role(0.79):Movie; KPC Movies; Movie F; | 
651. written: NT; NA; ; (0) writer.name(1.0):| writer(1.0):| written_by(1.0):| directed_by(0.68):| director.did(0.68):| 
653. produced: NT; NA; ; (0) producer.name(1.0):| producer(1.0):| made_by(0.74):| directed_by(0.69):| cast.role(0.63):| 
654. Woody Allen: VTTEXT; NA; ; (0) director.name(0.99):Woody Allen; Woody Allen; Moody Allen; | producer.name(0.99):Woody Allen; Woody Allen; Moody Allen; | writer.name(0.99):Woody Allen; Woody Allen; Moody Allen; | actor.name(0.98):Woody Allen; Woody Allen; Jody Allen; | cast.role(0.84):Woody Allen Jr.; Woody Allen Jr.; Young Woody Allen; | 
Find, VB
all, DT
movies, NNS
written, VBN
and, CC
produced, VBN
by, IN
Woody Allen, NNP
root(ROOT-0, Find-1)
det(movies-3, all-2)
dobj(Find-1, movies-3)
acl(movies-3, written-4)
cc(written-4, and-5)
conj(written-4, produced-6)
case(Woody Allen-8, by-7)
nmod(written-4, Woody Allen-8)

PARSE TREE:(647) ROOT ROOT
    (648) Find CMT
        (649) movies NT
            (651) written NT
                (654) Woody Allen VTTEXT
            (653) produced NT


===========
TRANSLATIONS
===========
TOT: 0.9974999999999999; NL: 0.9974999999999999; NL+AG: 0.9974999999999999; NL+QF: 0.9983449999999999; rels: [producer,writer]; projs: [movie_0.title]; preds: [director_0.name = "Woody Allen"]; havings: []; superlative: []; blanks: 0
TOT: 0.9974999999999999; NL: 0.9974999999999999; NL+AG: 0.9974999999999999; NL+QF: 0.9981691964285714; rels: [producer,writer]; projs: [movie_0.title]; preds: [producer_0.name = "Woody Allen"]; havings: []; superlative: []; blanks: 0
TOT: 0.9974999999999999; NL: 0.9974999999999999; NL+AG: 0.9974999999999999; NL+QF: 0.9981249999999999; rels: [producer,writer]; projs: [movie_0.title]; preds: [writer_0.name = "Woody Allen"]; havings: []; superlative: []; blanks: 0
TOT: 0.9974999999999999; NL: 0.9974999999999999; NL+AG: 0.9974999999999999; NL+QF: 0.9983449999999999; rels: [producer,written_by]; projs: [movie_0.title]; preds: [director_0.name = "Woody Allen"]; havings: []; superlative: []; blanks: 0
TOT: 0.9974999999999999; NL: 0.9974999999999999; NL+AG: 0.9974999999999999; NL+QF: 0.9981691964285714; rels: [producer,written_by]; projs: [movie_0.title]; preds: [producer_0.name = "Woody Allen"]; havings: []; superlative: []; blanks: 0
TOT: 0.9974999999999999; NL: 0.9974999999999999; NL+AG: 0.9974999999999999; NL+QF: 0.9981249999999999; rels: [producer,written_by]; projs: [movie_0.title]; preds: [writer_0.name = "Woody Allen"]; havings: []; superlative: []; blanks: 0
TOT: 0.9960818510677891; NL: 0.9960818510677891; NL+AG: 0.9960818510677891; NL+QF: 0.9975688542703144; rels: [producer,writer]; projs: [movie_0.title]; preds: [actor_0.name = "Woody Allen"]; havings: []; superlative: []; blanks: 0
TOT: 0.9960818510677891; NL: 0.9960818510677891; NL+AG: 0.9960818510677891; NL+QF: 0.9975688542703144; rels: [producer,written_by]; projs: [movie_0.title]; preds: [actor_0.name = "Woody Allen"]; havings: []; superlative: []; blanks: 0
TOT: 0.9600805614536739; NL: 0.9600805614536739; NL+AG: 0.9600805614536739; NL+QF: 0.9680644491629391; rels: [producer,writer]; projs: [company_0.id]; preds: [company_0.name = "Movies",director_0.name = "Woody Allen"]; havings: []; superlative: []; blanks: 0
TOT: 0.9600805614536739; NL: 0.9600805614536739; NL+AG: 0.9600805614536739; NL+QF: 0.9680644491629391; rels: [producer,writer]; projs: [company_0.id]; preds: [company_0.name = "Movies",producer_0.name = "Woody Allen"]; havings: []; superlative: []; blanks: 0

===========
RESULTS
===========


02:14  INFO: ================
02:14  INFO: QUERY 105: How many movies did "Steven Spielberg" direct?
02:14  INFO: ================
02:15  INFO: ================
02:15  INFO: QUERY 23: Who acted "John Nash" in the movie "A Beautiful Mind"?
02:15  INFO: ================
665. ROOT: ROOT; NA; ; (0) 
666. acted: NT; NA; ; (0) director.did(0.65):| movie.release_year(0.63):| actor.name(0.62):| actor(0.62):| genre.genre(0.62):| 
668. John Nash: VTTEXT; NA; ; (0) actor.name(1.0):John Nash; John Nash; John Nash; | writer.name(1.0):John Nash; John Nash; John Nash; | director.name(0.93):John Nash; John S. Nash; Steven John Nash; | cast.role(0.93):John Nash; Johan Nash; Johan Nash; | producer.name(0.82):Jason John Nash; Jon Nash; Steven John Nash; | 
669. A Beautiful Mind: VTTEXT; NA; ; (0) movie.title(0.94):A Beautiful Mind; A Beautiful Mind; Beautiful Mind; | tv_series.title(0.84):Beautiful Minds; Beautiful Minds; Beautiful; | cast.role(0.76):Beautiful Minion; Beautiful Minion; Beautiful Belinda; | producer.name(0.69):Beautiful Mind Recor; Beautiful Mind Recor; Beautiful Bruce Beau; | company.name(0.68):Be Beautiful; Be Beautiful; Beautiful Machine; | 
672. movie: NT; NA; ; (0) movie.title(1.0):| movie(1.0):| company.name(0.92):Movie; Movie Movie; Movies; | cast.role(0.87):Movie; Movie F; Movie AD; | keyword.keyword(0.81):movie-in-movie; b-movie; z-movie; | 
Who, WP
acted, VBD
John Nash, NNP
in, IN
the, DT
movie, NN
A Beautiful Mind, NN
nsubj(acted-2, Who-1)
root(ROOT-0, acted-2)
dobj(acted-2, John Nash-3)
case(A Beautiful Mind-7, in-4)
det(A Beautiful Mind-7, the-5)
compound(A Beautiful Mind-7, movie-6)
nmod(John Nash-3, A Beautiful Mind-7)

PARSE TREE:(665) ROOT ROOT
    (666) acted NT
        (668) John Nash VTTEXT
            (669) A Beautiful Mind VTTEXT
                (672) movie NT


===========
TRANSLATIONS
===========
TOT: 0.8144800623146232; NL: 0.8144800623146232; NL+AG: 0.9724746422604227; NL+QF: 0.948834661426123; rels: []; projs: [movie_0.title]; preds: [actor_0.name = "John Nash",movie_0.title = "A Beautiful Mind"]; havings: []; superlative: []; blanks: 0
TOT: 0.7985340867349373; NL: 0.7985340867349373; NL+AG: 0.9333687458258464; NL+QF: 0.937583377551203; rels: []; projs: [director_0.did]; preds: [actor_0.name = "John Nash",movie_0.title = "A Beautiful Mind",company_0.name = "Movie"]; havings: []; superlative: []; blanks: 0
TOT: 0.7985340867349373; NL: 0.7985340867349373; NL+AG: 0.9333687458258464; NL+QF: 0.937583377551203; rels: []; projs: [director_0.did]; preds: [writer_0.name = "John Nash",movie_0.title = "A Beautiful Mind",company_0.name = "Movie"]; havings: []; superlative: []; blanks: 0
TOT: 0.7957653367349373; NL: 0.7957653367349373; NL+AG: 0.9333687458258464; NL+QF: 0.9385511761155789; rels: []; projs: [movie_0.release_year]; preds: [actor_0.name = "John Nash",movie_0.title = "A Beautiful Mind",company_0.name = "Movie"]; havings: []; superlative: []; blanks: 0
TOT: 0.7957653367349373; NL: 0.7957653367349373; NL+AG: 0.9333687458258464; NL+QF: 0.9383118200549729; rels: []; projs: [movie_0.release_year]; preds: [writer_0.name = "John Nash",movie_0.title = "A Beautiful Mind",company_0.name = "Movie"]; havings: []; superlative: []; blanks: 0
TOT: 0.7940340867349374; NL: 0.7940340867349374; NL+AG: 0.9594607635642056; NL+QF: 0.9394376202549843; rels: []; projs: [actor_0.name]; preds: [actor_0.name = "John Nash",movie_0.title = "A Beautiful Mind",company_0.name = "Movie"]; havings: []; superlative: []; blanks: 0
TOT: 0.7940340867349374; NL: 0.7940340867349374; NL+AG: 0.9594607635642056; NL+QF: 0.9392971543458932; rels: []; projs: [actor_0.name]; preds: [writer_0.name = "John Nash",movie_0.title = "A Beautiful Mind",company_0.name = "Movie"]; havings: []; superlative: []; blanks: 0
TOT: 0.7938028367349375; NL: 0.7938028367349375; NL+AG: 0.9594607635642056; NL+QF: 0.9383020075549728; rels: []; projs: [genre_0.genre]; preds: [actor_0.name = "John Nash",movie_0.title = "A Beautiful Mind",company_0.name = "Movie"]; havings: []; superlative: []; blanks: 0
TOT: 0.7938028367349375; NL: 0.7938028367349375; NL+AG: 0.9594607635642056; NL+QF: 0.9383020075549728; rels: []; projs: [genre_0.genre]; preds: [writer_0.name = "John Nash",movie_0.title = "A Beautiful Mind",company_0.name = "Movie"]; havings: []; superlative: []; blanks: 0
TOT: 0.7862449905950062; NL: 0.7862449905950062; NL+AG: 0.9210796496859153; NL+QF: 0.9311740302098053; rels: []; projs: [director_0.did]; preds: [actor_0.name = "John Nash",movie_0.title = "A Beautiful Mind",cast_0.role = "Movie"]; havings: []; superlative: []; blanks: 0

===========
RESULTS
===========
TOT: 0.8098352616914769; TR: 0.8144800623146232; SMP: 0.35; select movie_0.title from actor as actor_0, cast as cast_0, cast as cast_1, movie as movie_0, movie as movie_1 where actor_0.name = "John Nash" and movie_1.title = "A Beautiful Mind" and actor_0.aid = cast_0.aid and actor_0.aid = cast_1.aid and cast_0.msid = movie_0.mid and cast_1.msid = movie_1.mid
TOT: 0.8098352616914769; TR: 0.8144800623146232; SMP: 0.35; select movie_1.title from actor as actor_0, cast as cast_0, cast as cast_1, movie as movie_0, movie as movie_1 where actor_0.name = "John Nash" and movie_0.title = "A Beautiful Mind" and actor_0.aid = cast_0.aid and actor_0.aid = cast_1.aid and cast_0.msid = movie_0.mid and cast_1.msid = movie_1.mid
TOT: 0.8096685950248103; TR: 0.8144800623146232; SMP: 0.3333333333333333; select movie_0.title from actor as actor_0, actor as actor_1, cast as cast_0, cast as cast_1, movie as movie_0, movie as movie_1 where actor_0.name = "John Nash" and movie_1.title = "A Beautiful Mind" and actor_0.aid = actor_1.aid and actor_0.aid = cast_0.aid and actor_1.aid = cast_1.aid and cast_0.msid = movie_0.mid and cast_1.msid = movie_1.mid
TOT: 0.8096685950248103; TR: 0.8144800623146232; SMP: 0.3333333333333333; select movie_1.title from actor as actor_0, actor as actor_1, cast as cast_0, cast as cast_1, movie as movie_0, movie as movie_1 where actor_0.name = "John Nash" and movie_0.title = "A Beautiful Mind" and actor_0.aid = actor_1.aid and actor_0.aid = cast_0.aid and actor_1.aid = cast_1.aid and cast_0.msid = movie_0.mid and cast_1.msid = movie_1.mid
TOT: 0.8096685950248103; TR: 0.8144800623146232; SMP: 0.3333333333333333; select movie_0.title from actor as actor_0, cast as cast_0, movie as movie_0, movie as movie_1, tags as tags_0, tags as tags_1 where actor_0.name = "John Nash" and movie_1.title = "A Beautiful Mind" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and movie_0.mid = tags_0.msid and movie_1.mid = tags_1.msid and tags_0.id = tags_1.id
TOT: 0.8096685950248103; TR: 0.8144800623146232; SMP: 0.3333333333333333; select movie_1.title from actor as actor_0, cast as cast_0, movie as movie_0, movie as movie_1, tags as tags_0, tags as tags_1 where actor_0.name = "John Nash" and movie_0.title = "A Beautiful Mind" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and movie_0.mid = tags_0.msid and movie_1.mid = tags_1.msid and tags_0.id = tags_1.id
TOT: 0.8096685950248103; TR: 0.8144800623146232; SMP: 0.3333333333333333; select movie_0.title from actor as actor_0, cast as cast_0, classification as classification_0, classification as classification_1, movie as movie_0, movie as movie_1 where actor_0.name = "John Nash" and movie_1.title = "A Beautiful Mind" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and classification_0.id = classification_1.id and classification_0.msid = movie_0.mid and classification_1.msid = movie_1.mid
TOT: 0.8096685950248103; TR: 0.8144800623146232; SMP: 0.3333333333333333; select movie_1.title from actor as actor_0, cast as cast_0, classification as classification_0, classification as classification_1, movie as movie_0, movie as movie_1 where actor_0.name = "John Nash" and movie_0.title = "A Beautiful Mind" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and classification_0.id = classification_1.id and classification_0.msid = movie_0.mid and classification_1.msid = movie_1.mid
TOT: 0.8096685950248103; TR: 0.8144800623146232; SMP: 0.3333333333333333; select movie_0.title from actor as actor_0, cast as cast_0, copyright as copyright_0, copyright as copyright_1, movie as movie_0, movie as movie_1 where actor_0.name = "John Nash" and movie_1.title = "A Beautiful Mind" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and copyright_0.id = copyright_1.id and copyright_0.msid = movie_0.mid and copyright_1.msid = movie_1.mid
TOT: 0.8096685950248103; TR: 0.8144800623146232; SMP: 0.3333333333333333; select movie_1.title from actor as actor_0, cast as cast_0, copyright as copyright_0, copyright as copyright_1, movie as movie_0, movie as movie_1 where actor_0.name = "John Nash" and movie_0.title = "A Beautiful Mind" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and copyright_0.id = copyright_1.id and copyright_0.msid = movie_0.mid and copyright_1.msid = movie_1.mid


02:17  INFO: ===== FOLD 2 =====
02:17  INFO: ===== Parsing Results =====
02:17  INFO: Total Queries: 97
02:17  INFO: Correctly Parsed: 95/97

02:17  INFO: ================
02:17  INFO: QUERY 120: Find the actor with most number of films
02:17  INFO: ================
674. ROOT: ROOT; NA; ; (0) 
675. Find: CMT; NA; ; (0) 
676. actor: NT; NA; ; (0) actor.name(1.0):| actor(1.0):| movie.title(0.95):Actor; Actor; Actor; | tv_series.title(0.9):Actor; Actors; The Actor Factor; | cast.role(0.85):Actors; Actors; Actors; | 
678. number of: FT; count; ; (0) 
680. most: FT; max; ; (0) 
681. films: NT; NA; ; (0) movie.title(0.93):| movie(0.93):| company.name(0.87):Films Films; Films on Films; Film; | actor.name(0.76):| actor(0.76):| 
Find, VB
the, DT
actor, NN
with, IN
most, JJS
number, NN
of, IN
films, NNS
root(ROOT-0, Find-1)
det(actor-3, the-2)
dobj(Find-1, actor-3)
case(number-6, with-4)
amod(number-6, most-5)
nmod(actor-3, number-6)
case(films-8, of-7)
nmod(actor-3, films-8)

PARSE TREE:(674) ROOT ROOT
    (675) Find CMT
        (676) actor NT
            (678) number of FT
                (680) most FT
            (681) films NT


===========
TRANSLATIONS
===========
TOT: 1.0; NL: 1.0; NL+AG: 1.0; NL+QF: 1.0; rels: []; projs: [actor_0.name]; preds: []; havings: []; superlative: []; blanks: 0
TOT: 0.966925; NL: 0.966925; NL+AG: 0.966925; NL+QF: 0.9834625; rels: [movie]; projs: [actor_0.name]; preds: []; havings: []; superlative: []; blanks: 0
TOT: 0.9140481511844429; NL: 0.9140481511844429; NL+AG: 0.9140481511844429; NL+QF: 0.9426987674562953; rels: [movie]; projs: [tv_series_0.sid]; preds: [tv_series_0.title = "Actor"]; havings: []; superlative: []; blanks: 0
TOT: 0.8809; NL: 0.8809; NL+AG: 0.9606141521466671; NL+QF: 0.9726481081081081; rels: [actor]; projs: [actor_0.name]; preds: []; havings: []; superlative: []; blanks: 0
TOT: 0.8566981511844428; NL: 0.8566981511844428; NL+AG: 0.9020337894496934; NL+QF: 0.9129543230118508; rels: [actor]; projs: [tv_series_0.sid]; preds: [tv_series_0.title = "Actor"]; havings: []; superlative: []; blanks: 0
TOT: 0.84805; NL: 0.84805; NL+AG: 0.9275391521466672; NL+QF: 0.9388181044375; rels: [movie]; projs: [movie_0.title]; preds: []; havings: []; superlative: []; blanks: 0
TOT: 0.842025; NL: 0.842025; NL+AG: 0.9275391521466672; NL+QF: 0.9334625000000001; rels: [movie]; projs: [cast_0.role]; preds: []; havings: []; superlative: []; blanks: 0
TOT: 0.8256657357238734; NL: 0.8256657357238734; NL+AG: 0.9902439024390244; NL+QF: 0.95; rels: []; projs: [actor_0.name]; preds: [company_0.name = "Films Films"]; havings: []; superlative: []; blanks: 0
TOT: 0.8198753083336917; NL: 0.8198753083336917; NL+AG: 0.8976035901898819; NL+QF: 0.9129543230118508; rels: []; projs: [tv_series_0.sid]; preds: [tv_series_0.title = "Actor",company_0.name = "Films Films"]; havings: []; superlative: []; blanks: 0
TOT: 0.8027648178511094; NL: 0.8027648178511094; NL+AG: 0.9020337894496934; NL+QF: 0.9129543230118508; rels: []; projs: [tv_series_0.sid]; preds: [tv_series_0.title = "Actor"]; havings: []; superlative: []; blanks: 1

===========
RESULTS
===========
TOT: 0.9974999999999999; TR: 1.0; SMP: 0.75; select actor_0.name from actor as actor_0
TOT: 0.8470694999999999; TR: 0.84805; SMP: 0.75; select movie_0.title from movie as movie_0
TOT: 0.8209090783666345; TR: 0.8256657357238734; SMP: 0.35; select actor_0.name from actor as actor_0, cast as cast_0, company as company_0, copyright as copyright_0, movie as movie_0 where company_0.name = "Films Films" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and company_0.id = copyright_0.cid and copyright_0.msid = movie_0.mid
TOT: 0.8209090783666345; TR: 0.8256657357238734; SMP: 0.35; select actor_0.name from actor as actor_0, cast as cast_0, company as company_0, copyright as copyright_0, tv_series as tv_series_0 where company_0.name = "Films Films" and actor_0.aid = cast_0.aid and cast_0.msid = tv_series_0.sid and company_0.id = copyright_0.cid and copyright_0.msid = tv_series_0.sid
TOT: 0.8206233640809203; TR: 0.8256657357238734; SMP: 0.3214285714285714; select actor_0.name from actor as actor_0, cast as cast_0, company as company_0, copyright as copyright_0, copyright as copyright_1, movie as movie_0, tv_series as tv_series_0 where company_0.name = "Films Films" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and company_0.id = copyright_1.cid and copyright_0.msid = movie_0.mid and copyright_0.msid = tv_series_0.sid and copyright_1.msid = tv_series_0.sid
TOT: 0.8206233640809203; TR: 0.8256657357238734; SMP: 0.3214285714285714; select actor_0.name from actor as actor_0, cast as cast_0, company as company_0, copyright as copyright_0, tv_series as tv_series_0, tv_series as tv_series_1, written_by as written_by_0 where company_0.name = "Films Films" and actor_0.aid = cast_0.aid and cast_0.msid = tv_series_1.sid and company_0.id = copyright_0.cid and copyright_0.msid = tv_series_0.sid and tv_series_0.sid = written_by_0.msid and tv_series_1.sid = written_by_0.msid
TOT: 0.8206233640809203; TR: 0.8256657357238734; SMP: 0.3214285714285714; select actor_0.name from actor as actor_0, cast as cast_0, company as company_0, copyright as copyright_0, movie as movie_0, tags as tags_0, tv_series as tv_series_0 where company_0.name = "Films Films" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and company_0.id = copyright_0.cid and copyright_0.msid = tv_series_0.sid and movie_0.mid = tags_0.msid and tags_0.msid = tv_series_0.sid
TOT: 0.8206233640809203; TR: 0.8256657357238734; SMP: 0.3214285714285714; select actor_0.name from actor as actor_0, cast as cast_0, company as company_0, copyright as copyright_0, directed_by as directed_by_0, movie as movie_0, movie as movie_1 where company_0.name = "Films Films" and actor_0.aid = cast_0.aid and cast_0.msid = movie_1.mid and company_0.id = copyright_0.cid and copyright_0.msid = movie_0.mid and directed_by_0.msid = movie_0.mid and directed_by_0.msid = movie_1.mid
TOT: 0.8206233640809203; TR: 0.8256657357238734; SMP: 0.3214285714285714; select actor_0.name from actor as actor_0, cast as cast_0, company as company_0, copyright as copyright_0, directed_by as directed_by_0, tv_series as tv_series_0, tv_series as tv_series_1 where company_0.name = "Films Films" and actor_0.aid = cast_0.aid and cast_0.msid = tv_series_1.sid and company_0.id = copyright_0.cid and copyright_0.msid = tv_series_0.sid and directed_by_0.msid = tv_series_0.sid and directed_by_0.msid = tv_series_1.sid
TOT: 0.8206233640809203; TR: 0.8256657357238734; SMP: 0.3214285714285714; select actor_0.name from actor as actor_0, cast as cast_0, cast as cast_1, company as company_0, copyright as copyright_0, movie as movie_0, movie as movie_1 where company_0.name = "Films Films" and actor_0.aid = cast_1.aid and cast_0.msid = movie_0.mid and cast_0.msid = movie_1.mid and cast_1.msid = movie_1.mid and company_0.id = copyright_0.cid and copyright_0.msid = movie_0.mid


02:18  INFO: ================
02:18  INFO: QUERY 108: How many actors are in the movie "Saving Private Ryan"?
02:18  INFO: ================
02:19  INFO: ================
02:19  INFO: QUERY 34: Find all actors who were born in "New York City" in 1984
02:19  INFO: ================
694. ROOT: ROOT; NA; ; (0) 
695. Find: CMT; NA; ; (0) 
696. actors: NT; NA; all; (0) actor.name(1.0):| actor(1.0):| movie.title(0.95):Actors; Actors; Actors; | cast.role(0.95):Actors; Actors; Actors; | tv_series.title(0.9):Actors; Actor; Actors Vs; | 
698. born: NT; NA; ; (0) tv_series.num_of_episodes(0.62):| tv_series.num_of_seasons(0.62):| tags(0.6):| director.did(0.6):| producer.name(0.59):| 
701. New York City: VTTEXT; NA; ; (0) director.birth_city(1.0):New York City; New York City; New York City; | actor.birth_city(1.0):New York City; New York City; New York City; | producer.birth_city(1.0):New York City; New York City; New York City; | writer.birth_city(1.0):New York City; New York City; New York City; | cast.role(0.99):New York City; New York City; New York City Cop; | 
703. 1984: VTNUM; NA; ; (0) movie.release_year(1.0):1984; 1984; 1984; | director.birth_year(1.0):1984; 1984; 1984; | actor.birth_year(1.0):1984; 1984; 1984; | producer.birth_year(1.0):1984; 1984; 1984; | writer.birth_year(1.0):1984; 1984; 1984; | 
Find, VB
all, DT
actors, NNS
who, WP
were, VBD
born, VBN
in, IN
New York City, NNP
in, IN
1984, CD
root(ROOT-0, Find-1)
det(actors-3, all-2)
dobj(Find-1, actors-3)
nsubjpass(born-6, who-4)
auxpass(born-6, were-5)
acl:relcl(actors-3, born-6)
case(New York City-8, in-7)
nmod(born-6, New York City-8)
case(1984-10, in-9)
nmod(born-6, 1984-10)

PARSE TREE:(694) ROOT ROOT
    (695) Find CMT
        (696) actors NT
            (698) born NT
                (701) New York City VTTEXT
                (703) 1984 VTNUM


===========
TRANSLATIONS
===========
TOT: 0.9008875000000001; NL: 0.9008875000000001; NL+AG: 0.9687877062452048; NL+QF: 0.9625000000000001; rels: [tags]; projs: [actor_0.name]; preds: [director_0.birth_city = "New York City",movie_0.release_year = 1984]; havings: []; superlative: []; blanks: 0
TOT: 0.9008875000000001; NL: 0.9008875000000001; NL+AG: 0.9687877062452048; NL+QF: 0.9625000000000001; rels: [tags]; projs: [actor_0.name]; preds: [director_0.birth_city = "New York City",director_0.birth_year = 1984]; havings: []; superlative: []; blanks: 0
TOT: 0.9008875000000001; NL: 0.9008875000000001; NL+AG: 0.9687877062452048; NL+QF: 0.9625000000000001; rels: [tags]; projs: [actor_0.name]; preds: [director_0.birth_city = "New York City",actor_0.birth_year = 1984]; havings: []; superlative: []; blanks: 0
TOT: 0.9008875000000001; NL: 0.9008875000000001; NL+AG: 0.9687877062452048; NL+QF: 0.9625000000000001; rels: [tags]; projs: [actor_0.name]; preds: [director_0.birth_city = "New York City",producer_0.birth_year = 1984]; havings: []; superlative: []; blanks: 0
TOT: 0.9008875000000001; NL: 0.9008875000000001; NL+AG: 0.9687877062452048; NL+QF: 0.9625000000000001; rels: [tags]; projs: [actor_0.name]; preds: [director_0.birth_city = "New York City",writer_0.birth_year = 1984]; havings: []; superlative: []; blanks: 0
TOT: 0.9008875000000001; NL: 0.9008875000000001; NL+AG: 0.9687877062452048; NL+QF: 0.9625000000000001; rels: [tags]; projs: [actor_0.name]; preds: [actor_0.birth_city = "New York City",movie_0.release_year = 1984]; havings: []; superlative: []; blanks: 0
TOT: 0.9008875000000001; NL: 0.9008875000000001; NL+AG: 0.9687877062452048; NL+QF: 0.9625000000000001; rels: [tags]; projs: [actor_0.name]; preds: [actor_0.birth_city = "New York City",director_0.birth_year = 1984]; havings: []; superlative: []; blanks: 0
TOT: 0.9008875000000001; NL: 0.9008875000000001; NL+AG: 0.9687877062452048; NL+QF: 0.9625000000000001; rels: [tags]; projs: [actor_0.name]; preds: [actor_0.birth_city = "New York City",actor_0.birth_year = 1984]; havings: []; superlative: []; blanks: 0
TOT: 0.9008875000000001; NL: 0.9008875000000001; NL+AG: 0.9687877062452048; NL+QF: 0.9625000000000001; rels: [tags]; projs: [actor_0.name]; preds: [actor_0.birth_city = "New York City",producer_0.birth_year = 1984]; havings: []; superlative: []; blanks: 0
TOT: 0.9008875000000001; NL: 0.9008875000000001; NL+AG: 0.9687877062452048; NL+QF: 0.9625000000000001; rels: [tags]; projs: [actor_0.name]; preds: [actor_0.birth_city = "New York City",writer_0.birth_year = 1984]; havings: []; superlative: []; blanks: 0

===========
RESULTS
===========
TOT: 0.8950929107142858; TR: 0.9008875000000001; SMP: 0.3214285714285714; select actor_0.name from actor as actor_0, cast as cast_0, made_by as made_by_0, movie as movie_0, movie as movie_1, producer as producer_0, tags as tags_0 where actor_0.birth_city = "New York City" and producer_0.birth_year = 1984 and actor_0.aid = cast_0.aid and cast_0.msid = movie_1.mid and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid and movie_0.mid = tags_0.msid and movie_1.mid = tags_0.msid
TOT: 0.8950929107142858; TR: 0.9008875000000001; SMP: 0.3214285714285714; select actor_0.name from actor as actor_0, cast as cast_0, movie as movie_0, tags as tags_0, tv_series as tv_series_0, writer as writer_0, written_by as written_by_0 where actor_0.birth_city = "New York City" and writer_0.birth_year = 1984 and actor_0.aid = cast_0.aid and cast_0.msid = tv_series_0.sid and movie_0.mid = tags_0.msid and movie_0.mid = written_by_0.msid and tags_0.msid = tv_series_0.sid and writer_0.wid = written_by_0.wid
TOT: 0.8950929107142858; TR: 0.9008875000000001; SMP: 0.3214285714285714; select actor_0.name from actor as actor_0, cast as cast_0, movie as movie_0, movie as movie_1, tags as tags_0, writer as writer_0, written_by as written_by_0 where actor_0.birth_city = "New York City" and writer_0.birth_year = 1984 and actor_0.aid = cast_0.aid and cast_0.msid = movie_1.mid and movie_0.mid = tags_0.msid and movie_0.mid = written_by_0.msid and movie_1.mid = tags_0.msid and writer_0.wid = written_by_0.wid
TOT: 0.8950929107142858; TR: 0.9008875000000001; SMP: 0.3214285714285714; select actor_0.name from actor as actor_0, cast as cast_0, movie as movie_0, tags as tags_0, tv_series as tv_series_0, writer as writer_0, written_by as written_by_0 where actor_0.birth_city = "New York City" and writer_0.birth_year = 1984 and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and movie_0.mid = tags_0.msid and tags_0.msid = tv_series_0.sid and tv_series_0.sid = written_by_0.msid and writer_0.wid = written_by_0.wid
TOT: 0.8950929107142858; TR: 0.9008875000000001; SMP: 0.3214285714285714; select actor_0.name from actor as actor_0, cast as cast_0, directed_by as directed_by_0, director as director_0, tags as tags_0, tv_series as tv_series_0, tv_series as tv_series_1 where director_0.birth_city = "New York City" and director_0.birth_year = 1984 and actor_0.aid = cast_0.aid and cast_0.msid = tv_series_1.sid and directed_by_0.did = director_0.did and directed_by_0.msid = tv_series_0.sid and tags_0.msid = tv_series_0.sid and tags_0.msid = tv_series_1.sid
TOT: 0.8950929107142858; TR: 0.9008875000000001; SMP: 0.3214285714285714; select actor_0.name from actor as actor_0, cast as cast_0, directed_by as directed_by_0, director as director_0, tags as tags_0, tv_series as tv_series_0, tv_series as tv_series_1 where actor_0.birth_year = 1984 and director_0.birth_city = "New York City" and actor_0.aid = cast_0.aid and cast_0.msid = tv_series_1.sid and directed_by_0.did = director_0.did and directed_by_0.msid = tv_series_0.sid and tags_0.msid = tv_series_0.sid and tags_0.msid = tv_series_1.sid
TOT: 0.8950929107142858; TR: 0.9008875000000001; SMP: 0.3214285714285714; select actor_0.name from actor as actor_0, cast as cast_0, directed_by as directed_by_0, director as director_0, tags as tags_0, tv_series as tv_series_0, tv_series as tv_series_1 where actor_0.birth_city = "New York City" and director_0.birth_year = 1984 and actor_0.aid = cast_0.aid and cast_0.msid = tv_series_1.sid and directed_by_0.did = director_0.did and directed_by_0.msid = tv_series_0.sid and tags_0.msid = tv_series_0.sid and tags_0.msid = tv_series_1.sid
TOT: 0.8950929107142858; TR: 0.9008875000000001; SMP: 0.3214285714285714; select actor_0.name from actor as actor_0, cast as cast_0, directed_by as directed_by_0, director as director_0, movie as movie_0, movie as movie_1, tags as tags_0 where director_0.birth_city = "New York City" and movie_0.release_year = 1984 and actor_0.aid = cast_0.aid and cast_0.msid = movie_1.mid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and movie_0.mid = tags_0.msid and movie_1.mid = tags_0.msid
TOT: 0.8950929107142858; TR: 0.9008875000000001; SMP: 0.3214285714285714; select actor_0.name from actor as actor_0, cast as cast_0, directed_by as directed_by_0, director as director_0, movie as movie_0, movie as movie_1, tags as tags_0 where director_0.birth_city = "New York City" and director_0.birth_year = 1984 and actor_0.aid = cast_0.aid and cast_0.msid = movie_1.mid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and movie_0.mid = tags_0.msid and movie_1.mid = tags_0.msid
TOT: 0.8950929107142858; TR: 0.9008875000000001; SMP: 0.3214285714285714; select actor_0.name from actor as actor_0, cast as cast_0, directed_by as directed_by_0, director as director_0, movie as movie_0, movie as movie_1, tags as tags_0 where actor_0.birth_year = 1984 and director_0.birth_city = "New York City" and actor_0.aid = cast_0.aid and cast_0.msid = movie_1.mid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and movie_0.mid = tags_0.msid and movie_1.mid = tags_0.msid


02:20  INFO: ================
02:20  INFO: QUERY 19: Who is the director of the movie "Catch Me If You Can"?
02:20  INFO: ================
706. ROOT: ROOT; NA; ; (0) 
709. director: NT; NA; ; (0) director.name(1.0):| director(1.0):| movie.title(0.95):Director; Director; Director; | company.name(0.93):Director; Directors; Directors; | writer.name(0.9):Director; Director X; Director X.; | 
711. Catch Me If You Can: VTTEXT; NA; ; (0) movie.title(0.95):Catch Me If You Can; Catch Me If You Can; Catch Me If You Can; | tv_series.title(0.72):Cuff Me If You Can; Cuff Me If You Can; Sing If You Can; | company.name(0.68):Shoot me if you can; Shoot me if you can; Catch Me Films; | keyword.keyword(0.56):catch-me-if-you-can; catch-me-if-you-can; fan-catch; | actor.name(0.53):Catch; Catch; You Chan; | 
714. movie: NT; NA; ; (0) movie.title(1.0):| movie(1.0):| company.name(0.92):Movie; Movie Movie; Movies; | cast.role(0.87):Movie; Movie F; Movie AD; | keyword.keyword(0.81):movie-in-movie; b-movie; z-movie; | 
Who, WP
is, VBZ
the, DT
director, NN
of, IN
the, DT
movie, NN
Catch Me If You Can, NN
root(ROOT-0, Who-1)
cop(Who-1, is-2)
det(director-4, the-3)
nsubj(Who-1, director-4)
case(Catch Me If You Can-8, of-5)
det(Catch Me If You Can-8, the-6)
compound(Catch Me If You Can-8, movie-7)
nmod(director-4, Catch Me If You Can-8)

PARSE TREE:(706) ROOT ROOT
    (709) director NT
        (711) Catch Me If You Can VTTEXT
            (714) movie NT


===========
TRANSLATIONS
===========
TOT: 0.8166666666666665; NL: 0.8166666666666665; NL+AG: 0.9614924687047517; NL+QF: 0.9451133786848072; rels: [director]; projs: [movie_0.title]; preds: [movie_0.title = "Catch Me If You Can"]; havings: []; superlative: []; blanks: 0
TOT: 0.7999999999999998; NL: 0.7999999999999998; NL+AG: 0.9579945799457993; NL+QF: 0.9346712018140589; rels: []; projs: [movie_0.title]; preds: [movie_0.title = "Director",movie_0.title = "Catch Me If You Can"]; havings: []; superlative: []; blanks: 0
TOT: 0.7918191505811746; NL: 0.7918191505811746; NL+AG: 0.9498137305269742; NL+QF: 0.9305782293035593; rels: []; projs: [movie_0.title]; preds: [company_0.name = "Director",movie_0.title = "Catch Me If You Can"]; havings: []; superlative: []; blanks: 0
TOT: 0.7912237199986265; NL: 0.7912237199986265; NL+AG: 0.9492182999444262; NL+QF: 0.9359338560055029; rels: []; projs: [director_0.name]; preds: [movie_0.title = "Catch Me If You Can",company_0.name = "Movie"]; havings: []; superlative: []; blanks: 0
TOT: 0.7836096923572909; NL: 0.7836096923572909; NL+AG: 0.9416042723030905; NL+QF: 0.9256253762963845; rels: []; projs: [movie_0.title]; preds: [writer_0.name = "Director",movie_0.title = "Catch Me If You Can"]; havings: []; superlative: []; blanks: 0
TOT: 0.7748382584787183; NL: 0.7748382584787183; NL+AG: 0.9328328384245177; NL+QF: 0.9250047161332198; rels: []; projs: [director_0.name]; preds: [movie_0.title = "Catch Me If You Can",cast_0.role = "Movie"]; havings: []; superlative: []; blanks: 0
TOT: 0.7526018301635328; NL: 0.7526018301635328; NL+AG: 0.9105964101093322; NL+QF: 0.9043567756645774; rels: []; projs: [director_0.name]; preds: [movie_0.title = "Catch Me If You Can",keyword_0.keyword = "movie-in-movie"]; havings: []; superlative: []; blanks: 0
TOT: 0.75; NL: 0.75; NL+AG: 0.9902439024390244; NL+QF: 0.954; rels: []; projs: [director_0.name]; preds: [movie_0.title = "Catch Me If You Can"]; havings: []; superlative: []; blanks: 0
TOT: 0.7401197710374423; NL: 0.7401197710374423; NL+AG: 0.9558002204467577; NL+QF: 0.9111111111111111; rels: [director]; projs: [movie_0.title]; preds: [tv_series_0.title = "Cuff Me If You Can"]; havings: []; superlative: []; blanks: 0
TOT: 0.7279664140801594; NL: 0.7279664140801594; NL+AG: 0.9558002204467577; NL+QF: 0.913955313494872; rels: [director]; projs: [movie_0.title]; preds: [company_0.name = "Shoot me if you can"]; havings: []; superlative: []; blanks: 0

===========
RESULTS
===========
TOT: 0.7952142857142855; TR: 0.7999999999999998; SMP: 0.3214285714285714; select movie_1.title from copyright as copyright_0, copyright as copyright_1, movie as movie_0, movie as movie_1, movie as movie_2, written_by as written_by_0, written_by as written_by_1 where movie_0.title = "Catch Me If You Can" and movie_2.title = "Director" and copyright_0.id = copyright_1.id and copyright_0.msid = movie_0.mid and copyright_1.msid = movie_1.mid and movie_0.mid = written_by_0.msid and movie_2.mid = written_by_1.msid and written_by_0.id = written_by_1.id
TOT: 0.7952142857142855; TR: 0.7999999999999998; SMP: 0.3214285714285714; select movie_2.title from copyright as copyright_0, copyright as copyright_1, movie as movie_0, movie as movie_1, movie as movie_2, written_by as written_by_0, written_by as written_by_1 where movie_0.title = "Director" and movie_1.title = "Catch Me If You Can" and copyright_0.id = copyright_1.id and copyright_0.msid = movie_0.mid and copyright_1.msid = movie_1.mid and movie_0.mid = written_by_0.msid and movie_2.mid = written_by_1.msid and written_by_0.id = written_by_1.id
TOT: 0.7952142857142855; TR: 0.7999999999999998; SMP: 0.3214285714285714; select movie_0.title from copyright as copyright_0, copyright as copyright_1, movie as movie_0, movie as movie_1, movie as movie_2, written_by as written_by_0, written_by as written_by_1 where movie_1.title = "Director" and movie_2.title = "Catch Me If You Can" and copyright_0.id = copyright_1.id and copyright_0.msid = movie_0.mid and copyright_1.msid = movie_1.mid and movie_0.mid = written_by_0.msid and movie_2.mid = written_by_1.msid and written_by_0.id = written_by_1.id
TOT: 0.7952142857142855; TR: 0.7999999999999998; SMP: 0.3214285714285714; select movie_1.title from movie as movie_0, movie as movie_1, movie as movie_2, tags as tags_0, tags as tags_1, written_by as written_by_0, written_by as written_by_1 where movie_0.title = "Catch Me If You Can" and movie_2.title = "Director" and movie_0.mid = tags_0.msid and movie_0.mid = written_by_0.msid and movie_1.mid = tags_1.msid and movie_2.mid = written_by_1.msid and tags_0.id = tags_1.id and written_by_0.id = written_by_1.id
TOT: 0.7952142857142855; TR: 0.7999999999999998; SMP: 0.3214285714285714; select movie_2.title from movie as movie_0, movie as movie_1, movie as movie_2, tags as tags_0, tags as tags_1, written_by as written_by_0, written_by as written_by_1 where movie_0.title = "Director" and movie_1.title = "Catch Me If You Can" and movie_0.mid = tags_0.msid and movie_0.mid = written_by_0.msid and movie_1.mid = tags_1.msid and movie_2.mid = written_by_1.msid and tags_0.id = tags_1.id and written_by_0.id = written_by_1.id
TOT: 0.7952142857142855; TR: 0.7999999999999998; SMP: 0.3214285714285714; select movie_0.title from movie as movie_0, movie as movie_1, movie as movie_2, tags as tags_0, tags as tags_1, written_by as written_by_0, written_by as written_by_1 where movie_1.title = "Director" and movie_2.title = "Catch Me If You Can" and movie_0.mid = tags_0.msid and movie_0.mid = written_by_0.msid and movie_1.mid = tags_1.msid and movie_2.mid = written_by_1.msid and tags_0.id = tags_1.id and written_by_0.id = written_by_1.id
TOT: 0.7952142857142855; TR: 0.7999999999999998; SMP: 0.3214285714285714; select movie_1.title from copyright as copyright_0, copyright as copyright_1, movie as movie_0, movie as movie_1, movie as movie_2, tags as tags_0, tags as tags_1 where movie_0.title = "Catch Me If You Can" and movie_2.title = "Director" and copyright_0.id = copyright_1.id and copyright_0.msid = movie_0.mid and copyright_1.msid = movie_1.mid and movie_0.mid = tags_0.msid and movie_2.mid = tags_1.msid and tags_0.id = tags_1.id
TOT: 0.7952142857142855; TR: 0.7999999999999998; SMP: 0.3214285714285714; select movie_2.title from copyright as copyright_0, copyright as copyright_1, movie as movie_0, movie as movie_1, movie as movie_2, tags as tags_0, tags as tags_1 where movie_0.title = "Director" and movie_1.title = "Catch Me If You Can" and copyright_0.id = copyright_1.id and copyright_0.msid = movie_0.mid and copyright_1.msid = movie_1.mid and movie_0.mid = tags_0.msid and movie_2.mid = tags_1.msid and tags_0.id = tags_1.id
TOT: 0.7952142857142855; TR: 0.7999999999999998; SMP: 0.3214285714285714; select movie_0.title from copyright as copyright_0, copyright as copyright_1, movie as movie_0, movie as movie_1, movie as movie_2, tags as tags_0, tags as tags_1 where movie_1.title = "Director" and movie_2.title = "Catch Me If You Can" and copyright_0.id = copyright_1.id and copyright_0.msid = movie_0.mid and copyright_1.msid = movie_1.mid and movie_0.mid = tags_0.msid and movie_2.mid = tags_1.msid and tags_0.id = tags_1.id
TOT: 0.7952142857142855; TR: 0.7999999999999998; SMP: 0.3214285714285714; select movie_1.title from classification as classification_0, classification as classification_1, movie as movie_0, movie as movie_1, movie as movie_2, written_by as written_by_0, written_by as written_by_1 where movie_0.title = "Catch Me If You Can" and movie_2.title = "Director" and classification_0.id = classification_1.id and classification_0.msid = movie_0.mid and classification_1.msid = movie_1.mid and movie_0.mid = written_by_0.msid and movie_2.mid = written_by_1.msid and written_by_0.id = written_by_1.id


02:22  INFO: ================
02:22  INFO: QUERY 59: Find all the female actors from Austin
02:22  INFO: ================
02:23  INFO: ================
02:23  INFO: QUERY 32: What company produced the movie "Juno"?
02:23  INFO: ================
02:24  INFO: ================
02:24  INFO: QUERY 7: In what year was "Benedict Cumberbatch" born
02:24  INFO: ================
733. ROOT: ROOT; NA; ; (0) 
734. born: NT; NA; ; (0) tv_series.num_of_episodes(0.62):| tv_series.num_of_seasons(0.62):| tags(0.6):| director.did(0.6):| producer.name(0.59):| 
735. year: NT; NA; ; (0) movie.release_year(1.0):| director.birth_year(1.0):| actor.birth_year(1.0):| producer.birth_year(1.0):| writer.birth_year(1.0):| 
739. Benedict Cumberbatch: VTTEXT; NA; ; (0) actor.name(0.98):Benedict Cumberbatch; Benedict Cumberbatch; Benedict Timothy Car; | producer.name(0.98):Benedict Cumberbatch; Benedict Cumberbatch; Benedict Timothy Car; | cast.role(0.7):Tom Cumberbatch; Bert Benedict; Bert Benedict; | writer.name(0.67):Benedict Berenberg; Benedict Berenberg; Carol Cumberbatch; | director.name(0.66):Jill Cumberbatch; Benedict Coen; Benedict Coen; | 
In, IN
what, WDT
year, NN
was, VBD
Benedict Cumberbatch, NNP
born, VBN
case(year-3, In-1)
det(year-3, what-2)
nmod(born-6, year-3)
auxpass(born-6, was-4)
nsubjpass(born-6, Benedict Cumberbatch-5)
root(ROOT-0, born-6)

PARSE TREE:(733) ROOT ROOT
    (734) born NT
        (735) year NT
        (739) Benedict Cumberbatch VTTEXT


===========
TRANSLATIONS
===========
TOT: 0.6934747404532025; NL: 0.6934747404532025; NL+AG: 0.9223875754166174; NL+QF: 0.9059720491910239; rels: [tags]; projs: [movie_0.release_year]; preds: [actor_0.name = "Benedict Cumberbatch"]; havings: []; superlative: []; blanks: 0
TOT: 0.6934747404532025; NL: 0.6934747404532025; NL+AG: 0.9223875754166174; NL+QF: 0.9059720491910239; rels: [tags]; projs: [movie_0.release_year]; preds: [producer_0.name = "Benedict Cumberbatch"]; havings: []; superlative: []; blanks: 0
TOT: 0.6934747404532025; NL: 0.6934747404532025; NL+AG: 0.9223875754166174; NL+QF: 0.9059720491910239; rels: [tags]; projs: [director_0.birth_year]; preds: [actor_0.name = "Benedict Cumberbatch"]; havings: []; superlative: []; blanks: 0
TOT: 0.6934747404532025; NL: 0.6934747404532025; NL+AG: 0.9223875754166174; NL+QF: 0.9059720491910239; rels: [tags]; projs: [director_0.birth_year]; preds: [producer_0.name = "Benedict Cumberbatch"]; havings: []; superlative: []; blanks: 0
TOT: 0.6934747404532025; NL: 0.6934747404532025; NL+AG: 0.9223875754166174; NL+QF: 0.908375793838135; rels: [tags]; projs: [actor_0.birth_year]; preds: [actor_0.name = "Benedict Cumberbatch"]; havings: []; superlative: []; blanks: 0
TOT: 0.6934747404532025; NL: 0.6934747404532025; NL+AG: 0.9223875754166174; NL+QF: 0.9059720491910239; rels: [tags]; projs: [actor_0.birth_year]; preds: [producer_0.name = "Benedict Cumberbatch"]; havings: []; superlative: []; blanks: 0
TOT: 0.6934747404532025; NL: 0.6934747404532025; NL+AG: 0.9223875754166174; NL+QF: 0.9059720491910239; rels: [tags]; projs: [producer_0.birth_year]; preds: [actor_0.name = "Benedict Cumberbatch"]; havings: []; superlative: []; blanks: 0
TOT: 0.6934747404532025; NL: 0.6934747404532025; NL+AG: 0.9223875754166174; NL+QF: 0.9059720491910239; rels: [tags]; projs: [producer_0.birth_year]; preds: [producer_0.name = "Benedict Cumberbatch"]; havings: []; superlative: []; blanks: 0
TOT: 0.6934747404532025; NL: 0.6934747404532025; NL+AG: 0.9223875754166174; NL+QF: 0.9059720491910239; rels: [tags]; projs: [writer_0.birth_year]; preds: [actor_0.name = "Benedict Cumberbatch"]; havings: []; superlative: []; blanks: 0
TOT: 0.6934747404532025; NL: 0.6934747404532025; NL+AG: 0.9223875754166174; NL+QF: 0.9059720491910239; rels: [tags]; projs: [writer_0.birth_year]; preds: [producer_0.name = "Benedict Cumberbatch"]; havings: []; superlative: []; blanks: 0

===========
RESULTS
===========
TOT: 0.6897542787629561; TR: 0.6934747404532025; SMP: 0.3214285714285714; select director_0.birth_year from directed_by as directed_by_0, director as director_0, made_by as made_by_0, movie as movie_0, producer as producer_0, tags as tags_0, tv_series as tv_series_0 where producer_0.name = "Benedict Cumberbatch" and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and made_by_0.msid = tv_series_0.sid and made_by_0.pid = producer_0.pid and movie_0.mid = tags_0.msid and tags_0.msid = tv_series_0.sid
TOT: 0.6897542787629561; TR: 0.6934747404532025; SMP: 0.3214285714285714; select actor_0.birth_year from actor as actor_0, cast as cast_0, made_by as made_by_0, movie as movie_0, movie as movie_1, producer as producer_0, tags as tags_0 where producer_0.name = "Benedict Cumberbatch" and actor_0.aid = cast_0.aid and cast_0.msid = movie_1.mid and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid and movie_0.mid = tags_0.msid and movie_1.mid = tags_0.msid
TOT: 0.6897542787629561; TR: 0.6934747404532025; SMP: 0.3214285714285714; select producer_0.birth_year from actor as actor_0, cast as cast_0, made_by as made_by_0, movie as movie_0, movie as movie_1, producer as producer_0, tags as tags_0 where actor_0.name = "Benedict Cumberbatch" and actor_0.aid = cast_0.aid and cast_0.msid = movie_1.mid and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid and movie_0.mid = tags_0.msid and movie_1.mid = tags_0.msid
TOT: 0.6897542787629561; TR: 0.6934747404532025; SMP: 0.3214285714285714; select writer_0.birth_year from actor as actor_0, cast as cast_0, movie as movie_0, tags as tags_0, tv_series as tv_series_0, writer as writer_0, written_by as written_by_0 where actor_0.name = "Benedict Cumberbatch" and actor_0.aid = cast_0.aid and cast_0.msid = tv_series_0.sid and movie_0.mid = tags_0.msid and movie_0.mid = written_by_0.msid and tags_0.msid = tv_series_0.sid and writer_0.wid = written_by_0.wid
TOT: 0.6897542787629561; TR: 0.6934747404532025; SMP: 0.3214285714285714; select writer_0.birth_year from made_by as made_by_0, producer as producer_0, tags as tags_0, tv_series as tv_series_0, tv_series as tv_series_1, writer as writer_0, written_by as written_by_0 where producer_0.name = "Benedict Cumberbatch" and made_by_0.msid = tv_series_0.sid and made_by_0.pid = producer_0.pid and tags_0.msid = tv_series_0.sid and tags_0.msid = tv_series_1.sid and tv_series_1.sid = written_by_0.msid and writer_0.wid = written_by_0.wid
TOT: 0.6897542787629561; TR: 0.6934747404532025; SMP: 0.3214285714285714; select director_0.birth_year from directed_by as directed_by_0, director as director_0, made_by as made_by_0, movie as movie_0, producer as producer_0, tags as tags_0, tv_series as tv_series_0 where producer_0.name = "Benedict Cumberbatch" and directed_by_0.did = director_0.did and directed_by_0.msid = tv_series_0.sid and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid and movie_0.mid = tags_0.msid and tags_0.msid = tv_series_0.sid
TOT: 0.6897542787629561; TR: 0.6934747404532025; SMP: 0.3214285714285714; select writer_0.birth_year from actor as actor_0, cast as cast_0, movie as movie_0, movie as movie_1, tags as tags_0, writer as writer_0, written_by as written_by_0 where actor_0.name = "Benedict Cumberbatch" and actor_0.aid = cast_0.aid and cast_0.msid = movie_1.mid and movie_0.mid = tags_0.msid and movie_0.mid = written_by_0.msid and movie_1.mid = tags_0.msid and writer_0.wid = written_by_0.wid
TOT: 0.6897542787629561; TR: 0.6934747404532025; SMP: 0.3214285714285714; select writer_0.birth_year from actor as actor_0, cast as cast_0, movie as movie_0, tags as tags_0, tv_series as tv_series_0, writer as writer_0, written_by as written_by_0 where actor_0.name = "Benedict Cumberbatch" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and movie_0.mid = tags_0.msid and tags_0.msid = tv_series_0.sid and tv_series_0.sid = written_by_0.msid and writer_0.wid = written_by_0.wid
TOT: 0.6897542787629561; TR: 0.6934747404532025; SMP: 0.3214285714285714; select writer_0.birth_year from made_by as made_by_0, movie as movie_0, movie as movie_1, producer as producer_0, tags as tags_0, writer as writer_0, written_by as written_by_0 where producer_0.name = "Benedict Cumberbatch" and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid and movie_0.mid = tags_0.msid and movie_1.mid = tags_0.msid and movie_1.mid = written_by_0.msid and writer_0.wid = written_by_0.wid
TOT: 0.6897542787629561; TR: 0.6934747404532025; SMP: 0.3214285714285714; select director_0.birth_year from directed_by as directed_by_0, director as director_0, made_by as made_by_0, producer as producer_0, tags as tags_0, tv_series as tv_series_0, tv_series as tv_series_1 where producer_0.name = "Benedict Cumberbatch" and directed_by_0.did = director_0.did and directed_by_0.msid = tv_series_0.sid and made_by_0.msid = tv_series_1.sid and made_by_0.pid = producer_0.pid and tags_0.msid = tv_series_0.sid and tags_0.msid = tv_series_1.sid


02:24  INFO: ================
02:24  INFO: QUERY 11: Where is the birth place of "Kevin Spacey"
02:24  INFO: ================
741. ROOT: ROOT; NA; ; (0) 
744. place: VTTEXT; NA; ; (0) movie.title(0.94):Place; Place; Places; | keyword.keyword(0.85):place; last-place; peaceful-place; | tv_series.title(0.74):Places, Places, Plac; My Place; Our Place; | actor.name(0.72):Place of Solace; Dylan Place; Bob Place; | director.name(0.7):Lila Place; Lou Place; Bob Place; | 
746. birth: NT; NA; ; (0) director.birth_city(1.0):| director.birth_year(1.0):| actor.birth_city(1.0):| actor.birth_year(1.0):| producer.birth_city(1.0):| 
747. Kevin Spacey: VTTEXT; NA; ; (0) writer.name(0.99):Kevin Spacey; Kevin Spacey; Kevin Pacey; | director.name(0.98):Kevin Spacey; Kevin Spacey; Kevin Spacey Fowler; | producer.name(0.98):Kevin Spacey; Kevin Spacey; Kevin Spacey Fowler; | actor.name(0.9):Kevin Spacey; Kevin Spacey Fowler; John Spacey; | cast.role(0.85):Kid Kevin Spacey; Kid Kevin Spacey; Kevin Spatz; | 
Where, WRB
is, VBZ
the, DT
birth, NN
place, NN
of, IN
Kevin Spacey, NNP
advmod(is-2, Where-1)
root(ROOT-0, is-2)
det(place-5, the-3)
compound(place-5, birth-4)
nsubj(is-2, place-5)
case(Kevin Spacey-7, of-6)
nmod(place-5, Kevin Spacey-7)

PARSE TREE:(741) ROOT ROOT
    (744) place VTTEXT
        (746) birth NT
        (747) Kevin Spacey VTTEXT


===========
TRANSLATIONS
===========
TOT: 0.8085940720590316; NL: 0.8085940720590316; NL+AG: 0.9665886520048311; NL+QF: 0.9390627147060212; rels: []; projs: [director_0.birth_city]; preds: [movie_0.title = "Place",writer_0.name = "Kevin Spacey"]; havings: []; superlative: []; blanks: 0
TOT: 0.8085940720590316; NL: 0.8085940720590316; NL+AG: 0.9356647791297387; NL+QF: 0.9390627147060212; rels: []; projs: [director_0.birth_year]; preds: [movie_0.title = "Place",writer_0.name = "Kevin Spacey"]; havings: []; superlative: []; blanks: 0
TOT: 0.8085940720590316; NL: 0.8085940720590316; NL+AG: 0.9665886520048311; NL+QF: 0.9390627147060212; rels: []; projs: [actor_0.birth_city]; preds: [movie_0.title = "Place",writer_0.name = "Kevin Spacey"]; havings: []; superlative: []; blanks: 0
TOT: 0.8085940720590316; NL: 0.8085940720590316; NL+AG: 0.9356647791297387; NL+QF: 0.9390627147060212; rels: []; projs: [actor_0.birth_year]; preds: [movie_0.title = "Place",writer_0.name = "Kevin Spacey"]; havings: []; superlative: []; blanks: 0
TOT: 0.8085940720590316; NL: 0.8085940720590316; NL+AG: 0.9665886520048311; NL+QF: 0.9390627147060212; rels: []; projs: [producer_0.birth_city]; preds: [movie_0.title = "Place",writer_0.name = "Kevin Spacey"]; havings: []; superlative: []; blanks: 0
TOT: 0.8060480597140164; NL: 0.8060480597140164; NL+AG: 0.9640426396598157; NL+QF: 0.9373653731426775; rels: []; projs: [director_0.birth_city]; preds: [movie_0.title = "Place",director_0.name = "Kevin Spacey"]; havings: []; superlative: []; blanks: 0
TOT: 0.8060480597140164; NL: 0.8060480597140164; NL+AG: 0.9640426396598157; NL+QF: 0.9373653731426775; rels: []; projs: [director_0.birth_city]; preds: [movie_0.title = "Place",producer_0.name = "Kevin Spacey"]; havings: []; superlative: []; blanks: 0
TOT: 0.8060480597140164; NL: 0.8060480597140164; NL+AG: 0.9331187667847233; NL+QF: 0.9373653731426775; rels: []; projs: [director_0.birth_year]; preds: [movie_0.title = "Place",director_0.name = "Kevin Spacey"]; havings: []; superlative: []; blanks: 0
TOT: 0.8060480597140164; NL: 0.8060480597140164; NL+AG: 0.9331187667847233; NL+QF: 0.9373653731426775; rels: []; projs: [director_0.birth_year]; preds: [movie_0.title = "Place",producer_0.name = "Kevin Spacey"]; havings: []; superlative: []; blanks: 0
TOT: 0.8060480597140164; NL: 0.8060480597140164; NL+AG: 0.9640426396598157; NL+QF: 0.9373653731426775; rels: []; projs: [actor_0.birth_city]; preds: [movie_0.title = "Place",director_0.name = "Kevin Spacey"]; havings: []; superlative: []; blanks: 0

===========
RESULTS
===========
TOT: 0.8040081313384412; TR: 0.8085940720590316; SMP: 0.35; select producer_0.birth_city from made_by as made_by_0, movie as movie_0, producer as producer_0, writer as writer_0, written_by as written_by_0 where movie_0.title = "Place" and writer_0.name = "Kevin Spacey" and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid and movie_0.mid = written_by_0.msid and writer_0.wid = written_by_0.wid
TOT: 0.8040081313384412; TR: 0.8085940720590316; SMP: 0.35; select actor_0.birth_city from actor as actor_0, cast as cast_0, movie as movie_0, writer as writer_0, written_by as written_by_0 where movie_0.title = "Place" and writer_0.name = "Kevin Spacey" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and movie_0.mid = written_by_0.msid and writer_0.wid = written_by_0.wid
TOT: 0.8040081313384412; TR: 0.8085940720590316; SMP: 0.35; select actor_0.birth_year from actor as actor_0, cast as cast_0, movie as movie_0, writer as writer_0, written_by as written_by_0 where movie_0.title = "Place" and writer_0.name = "Kevin Spacey" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and movie_0.mid = written_by_0.msid and writer_0.wid = written_by_0.wid
TOT: 0.8040081313384412; TR: 0.8085940720590316; SMP: 0.35; select director_0.birth_city from directed_by as directed_by_0, director as director_0, movie as movie_0, writer as writer_0, written_by as written_by_0 where movie_0.title = "Place" and writer_0.name = "Kevin Spacey" and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and movie_0.mid = written_by_0.msid and writer_0.wid = written_by_0.wid
TOT: 0.8040081313384412; TR: 0.8085940720590316; SMP: 0.35; select director_0.birth_year from directed_by as directed_by_0, director as director_0, movie as movie_0, writer as writer_0, written_by as written_by_0 where movie_0.title = "Place" and writer_0.name = "Kevin Spacey" and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and movie_0.mid = written_by_0.msid and writer_0.wid = written_by_0.wid
TOT: 0.803722417052727; TR: 0.8085940720590316; SMP: 0.3214285714285714; select producer_0.birth_city from made_by as made_by_0, movie as movie_0, producer as producer_0, tv_series as tv_series_0, writer as writer_0, written_by as written_by_0, written_by as written_by_1 where movie_0.title = "Place" and writer_0.name = "Kevin Spacey" and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid and movie_0.mid = written_by_0.msid and tv_series_0.sid = written_by_0.msid and tv_series_0.sid = written_by_1.msid and writer_0.wid = written_by_1.wid
TOT: 0.803722417052727; TR: 0.8085940720590316; SMP: 0.3214285714285714; select producer_0.birth_city from made_by as made_by_0, movie as movie_0, producer as producer_0, tv_series as tv_series_0, writer as writer_0, written_by as written_by_0, written_by as written_by_1 where movie_0.title = "Place" and writer_0.name = "Kevin Spacey" and made_by_0.msid = tv_series_0.sid and made_by_0.pid = producer_0.pid and movie_0.mid = written_by_0.msid and movie_0.mid = written_by_1.msid and tv_series_0.sid = written_by_0.msid and writer_0.wid = written_by_1.wid
TOT: 0.803722417052727; TR: 0.8085940720590316; SMP: 0.3214285714285714; select director_0.birth_city from copyright as copyright_0, directed_by as directed_by_0, director as director_0, movie as movie_0, tv_series as tv_series_0, writer as writer_0, written_by as written_by_0 where movie_0.title = "Place" and writer_0.name = "Kevin Spacey" and copyright_0.msid = movie_0.mid and copyright_0.msid = tv_series_0.sid and directed_by_0.did = director_0.did and directed_by_0.msid = tv_series_0.sid and movie_0.mid = written_by_0.msid and writer_0.wid = written_by_0.wid
TOT: 0.803722417052727; TR: 0.8085940720590316; SMP: 0.3214285714285714; select director_0.birth_year from copyright as copyright_0, directed_by as directed_by_0, director as director_0, movie as movie_0, tv_series as tv_series_0, writer as writer_0, written_by as written_by_0 where movie_0.title = "Place" and writer_0.name = "Kevin Spacey" and copyright_0.msid = movie_0.mid and copyright_0.msid = tv_series_0.sid and directed_by_0.did = director_0.did and directed_by_0.msid = tv_series_0.sid and movie_0.mid = written_by_0.msid and writer_0.wid = written_by_0.wid
TOT: 0.803722417052727; TR: 0.8085940720590316; SMP: 0.3214285714285714; select director_0.birth_city from directed_by as directed_by_0, director as director_0, movie as movie_0, tags as tags_0, tv_series as tv_series_0, writer as writer_0, written_by as written_by_0 where movie_0.title = "Place" and writer_0.name = "Kevin Spacey" and directed_by_0.did = director_0.did and directed_by_0.msid = tv_series_0.sid and movie_0.mid = tags_0.msid and movie_0.mid = written_by_0.msid and tags_0.msid = tv_series_0.sid and writer_0.wid = written_by_0.wid


02:25  INFO: ================
02:25  INFO: QUERY 66: Who is the actor playing "Alan Turing" in "The Imitation Game"?
02:25  INFO: ================
750. ROOT: ROOT; NA; ; (0) 
753. Alan Turing: VTTEXT; NA; ; (0) cast.role(0.94):Alan Turing; Alan Turing; Alana Turing; | movie.title(0.74):Decoding Alan Turing; Decoding Alan Turing; Dear Alan: A Tribute; | director.name(0.7):Allen Turing; Alan Tang; Alan Tang; | writer.name(0.7):Allen Turing; Alan Tang; Alan Tang; | actor.name(0.69):Allen Turing; Alan King; Alan King; | 
755. actor: NT; NA; ; (0) actor.name(1.0):| actor(1.0):| movie.title(0.95):Actor; Actor; Actor; | tv_series.title(0.9):Actor; Actors; The Actor Factor; | cast.role(0.85):Actors; Actors; Actors; | 
756. playing: VTTEXT; NA; ; (0) cast.role(0.95):playing; Playing; Playing; | movie.title(0.93):Playing; Playing; Playing 25; | keyword.keyword(0.88):playing; playing-gin; playing-go; | tv_series.title(0.69):Playing Dead; Multi Playing; Playing Hooky; | tv_series.num_of_seasons(0.68):| 
757. The Imitation Game: VTTEXT; NA; ; (0) movie.title(1.0):The Imitation Game; The Imitation Game; The Imitation Game; | cast.role(0.84):The Imitation Game &; The Imitation Game &; The Imitation Game &; | tv_series.title(0.7):The Temptation Game; The Game; The Game; | keyword.keyword(0.68):imitation; imitation; camel-imitation; | company.name(0.66):Game Station, the; Game Station; Imagination Games; | 
Who, WP
is, VBZ
the, DT
actor, NN
playing, NN
Alan Turing, NN
in, IN
The Imitation Game, NNP
root(ROOT-0, Who-1)
cop(Who-1, is-2)
det(Alan Turing-6, the-3)
compound(Alan Turing-6, actor-4)
compound(Alan Turing-6, playing-5)
nsubj(Who-1, Alan Turing-6)
case(The Imitation Game-8, in-7)
nmod(Alan Turing-6, The Imitation Game-8)

PARSE TREE:(750) ROOT ROOT
    (753) Alan Turing VTTEXT
        (755) actor NT
        (756) playing VTTEXT
        (757) The Imitation Game VTTEXT


===========
TRANSLATIONS
===========
TOT: 0.8466302628451245; NL: 0.8466302628451245; NL+AG: 0.9643131896743928; NL+QF: 0.9524898575197784; rels: []; projs: [actor_0.name]; preds: [cast_0.role = "Alan Turing",cast_0.role = "playing",movie_0.title = "The Imitation Game"]; havings: []; superlative: []; blanks: 0
TOT: 0.842272056642158; NL: 0.842272056642158; NL+AG: 0.9599549834714263; NL+QF: 0.9510509782271983; rels: []; projs: [actor_0.name]; preds: [cast_0.role = "Alan Turing",movie_0.title = "Playing",movie_0.title = "The Imitation Game"]; havings: []; superlative: []; blanks: 0
TOT: 0.8298003078282897; NL: 0.8298003078282897; NL+AG: 0.947483234657558; NL+QF: 0.9355853972095332; rels: []; projs: [actor_0.name]; preds: [cast_0.role = "Alan Turing",keyword_0.keyword = "playing",movie_0.title = "The Imitation Game"]; havings: []; superlative: []; blanks: 0
TOT: 0.806672275449326; NL: 0.806672275449326; NL+AG: 0.9243552022785942; NL+QF: 0.9233353465239877; rels: []; projs: [actor_0.name]; preds: [cast_0.role = "Alan Turing",cast_0.role = "playing",cast_0.role = "The Imitation Game & Selma"]; havings: []; superlative: []; blanks: 0
TOT: 0.8063302628451244; NL: 0.8063302628451244; NL+AG: 0.9382211719360336; NL+QF: 0.9446893376214127; rels: []; projs: [tv_series_0.num_of_seasons]; preds: [cast_0.role = "Alan Turing",movie_0.title = "Actor",movie_0.title = "The Imitation Game"]; havings: []; superlative: []; blanks: 0
TOT: 0.8023140692463594; NL: 0.8023140692463594; NL+AG: 0.9199969960756277; NL+QF: 0.92699378674027; rels: []; projs: [actor_0.name]; preds: [cast_0.role = "Alan Turing",movie_0.title = "Playing",cast_0.role = "The Imitation Game & Selma"]; havings: []; superlative: []; blanks: 0
TOT: 0.797983687776673; NL: 0.797983687776673; NL+AG: 0.9567102485928706; NL+QF: 0.931608936713322; rels: []; projs: [actor_0.name]; preds: [movie_0.title = "Decoding Alan Turing",cast_0.role = "playing",movie_0.title = "The Imitation Game"]; havings: []; superlative: []; blanks: 0
TOT: 0.7948670695392905; NL: 0.7948670695392905; NL+AG: 0.9267579786301996; NL+QF: 0.933863830731586; rels: []; projs: [tv_series_0.num_of_seasons]; preds: [cast_0.role = "Alan Turing",tv_series_0.title = "Actor",movie_0.title = "The Imitation Game"]; havings: []; superlative: []; blanks: 0
TOT: 0.7936254815737064; NL: 0.7936254815737064; NL+AG: 0.952352042389904; NL+QF: 0.9235404332358929; rels: []; projs: [actor_0.name]; preds: [movie_0.title = "Decoding Alan Turing",movie_0.title = "Playing",movie_0.title = "The Imitation Game"]; havings: []; superlative: []; blanks: 0
TOT: 0.7898423204324911; NL: 0.7898423204324911; NL+AG: 0.9075252472617594; NL+QF: 0.9074204695470758; rels: []; projs: [actor_0.name]; preds: [cast_0.role = "Alan Turing",keyword_0.keyword = "playing",cast_0.role = "The Imitation Game & Selma"]; havings: []; superlative: []; blanks: 0

===========
RESULTS
===========
TOT: 0.8419139602166733; TR: 0.8466302628451245; SMP: 0.375; select actor_0.name from actor as actor_0, cast as cast_0, cast as cast_1, movie as movie_0 where cast_0.role = "playing" and cast_1.role = "Alan Turing" and movie_0.title = "The Imitation Game" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and cast_1.msid = movie_0.mid
TOT: 0.8419139602166733; TR: 0.8466302628451245; SMP: 0.375; select actor_0.name from actor as actor_0, cast as cast_0, cast as cast_1, movie as movie_0 where cast_0.role = "Alan Turing" and cast_1.role = "playing" and movie_0.title = "The Imitation Game" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and cast_1.msid = movie_0.mid
TOT: 0.8419139602166733; TR: 0.8466302628451245; SMP: 0.375; select actor_0.name from actor as actor_0, cast as cast_0, cast as cast_1, movie as movie_0 where cast_0.role = "playing" and cast_1.role = "Alan Turing" and movie_0.title = "The Imitation Game" and actor_0.aid = cast_0.aid and actor_0.aid = cast_1.aid and cast_0.msid = movie_0.mid
TOT: 0.8419139602166733; TR: 0.8466302628451245; SMP: 0.375; select actor_0.name from actor as actor_0, cast as cast_0, cast as cast_1, movie as movie_0 where cast_0.role = "Alan Turing" and cast_1.role = "playing" and movie_0.title = "The Imitation Game" and actor_0.aid = cast_0.aid and actor_0.aid = cast_1.aid and cast_0.msid = movie_0.mid
TOT: 0.8416639602166732; TR: 0.8466302628451245; SMP: 0.35; select actor_0.name from actor as actor_0, actor as actor_1, cast as cast_0, cast as cast_1, movie as movie_0 where cast_0.role = "playing" and cast_1.role = "Alan Turing" and movie_0.title = "The Imitation Game" and actor_0.aid = actor_1.aid and actor_0.aid = cast_0.aid and actor_1.aid = cast_1.aid and cast_0.msid = movie_0.mid
TOT: 0.8416639602166732; TR: 0.8466302628451245; SMP: 0.35; select actor_0.name from actor as actor_0, actor as actor_1, cast as cast_0, cast as cast_1, movie as movie_0 where cast_0.role = "Alan Turing" and cast_1.role = "playing" and movie_0.title = "The Imitation Game" and actor_0.aid = actor_1.aid and actor_0.aid = cast_0.aid and actor_1.aid = cast_1.aid and cast_0.msid = movie_0.mid
TOT: 0.8416639602166732; TR: 0.8466302628451245; SMP: 0.35; select actor_0.name from actor as actor_0, cast as cast_0, cast as cast_1, movie as movie_0, movie as movie_1 where cast_0.role = "playing" and cast_1.role = "Alan Turing" and movie_0.title = "The Imitation Game" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and cast_1.msid = movie_1.mid and movie_0.mid = movie_1.mid
TOT: 0.8416639602166732; TR: 0.8466302628451245; SMP: 0.35; select actor_0.name from actor as actor_0, cast as cast_0, cast as cast_1, movie as movie_0, movie as movie_1 where cast_0.role = "Alan Turing" and cast_1.role = "playing" and movie_0.title = "The Imitation Game" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and cast_1.msid = movie_1.mid and movie_0.mid = movie_1.mid
TOT: 0.8414972935500066; TR: 0.8466302628451245; SMP: 0.3333333333333333; select actor_0.name from actor as actor_0, cast as cast_0, cast as cast_1, movie as movie_0, movie as movie_1, tags as tags_0 where cast_0.role = "playing" and cast_1.role = "Alan Turing" and movie_0.title = "The Imitation Game" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and cast_1.msid = movie_1.mid and movie_0.mid = tags_0.msid and movie_1.mid = tags_0.msid
TOT: 0.8414972935500066; TR: 0.8466302628451245; SMP: 0.3333333333333333; select actor_0.name from actor as actor_0, cast as cast_0, cast as cast_1, movie as movie_0, movie as movie_1, tags as tags_0 where cast_0.role = "Alan Turing" and cast_1.role = "playing" and movie_0.title = "The Imitation Game" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and cast_1.msid = movie_1.mid and movie_0.mid = tags_0.msid and movie_1.mid = tags_0.msid


02:27  INFO: ================
02:27  INFO: QUERY 109: How many movies did "Shahab Hosseini" act in
02:27  INFO: ================
02:28  INFO: ================
02:28  INFO: QUERY 103: How many movies did "Quentin Tarantino" direct before 2002 and after 2010?
02:28  INFO: ================
769. ROOT: ROOT; NA; ; (0) 
770. direct: NT; NA; ; (0) directed_by(1.0):| director.name(0.72):| director(0.72):| producer.name(0.69):| producer(0.69):| 
771. movies: NT; NA; ; (0) movie.title(1.0):| movie(1.0):| company.name(0.91):Movies; Movie; W Movies; | tv_series.title(0.8):Movies, Movies, Movi; Moon Movies; Movie Memories; | cast.role(0.79):Movie; KPC Movies; Movie F; | 
773. How many: CMT; count; ; (0) 
775. Quentin Tarantino: VTTEXT; NA; ; (0) director.name(1.0):Quentin Tarantino; Quentin Tarantino; Quentin Tarrantino; | actor.name(1.0):Quentin Tarantino; Quentin Tarantino; Quentin Tarrantino; | producer.name(1.0):Quentin Tarantino; Quentin Tarantino; Quentin Tarrantino; | writer.name(1.0):Quentin Tarantino; Quentin Tarantino; Quentin Tarrantino; | cast.role(0.85):Quentin Tarrantino '; Quentin Tarrantino '; Quentin Tarrantino '; | 
776. 2002: VTNUM; NA; ; (0) producer.birth_year(0.98):1926; 1964; 1985; | writer.birth_year(0.98):1955; 1926; 1985; | actor.birth_year(0.97):1935; 1958; 1924; | director.birth_year(0.97):1927; 1958; 1924; | movie.release_year(0.97):1963; 1971; 1913; | 
777. before: OT; <; ; (0) 
779. 2010: VTNUM; NA; ; (0) actor.birth_year(1.0):2011; 2013; 2013; | movie.release_year(1.0):2012; 2014; 2015; | 
780. after: OT; >; ; (0) 
How, WRB
many, JJ
movies, NNS
did, VBD
Quentin Tarantino, NNP
direct, VB
before, IN
2002, CD
and, CC
after, IN
2010, CD
advmod(many-2, How-1)
amod(movies-3, many-2)
dobj(direct-6, movies-3)
aux(direct-6, did-4)
nsubj(direct-6, Quentin Tarantino-5)
root(ROOT-0, direct-6)
case(2002-8, before-7)
nmod(direct-6, 2002-8)
cc(2002-8, and-9)
case(2010-11, after-10)
conj(2002-8, 2010-11)

PARSE TREE:(769) ROOT ROOT
    (773) How many CMT
        (771) movies NT
            (770) direct NT
                (775) Quentin Tarantino VTTEXT
                (776) 2002 VTNUM
                    (777) before OT
                (779) 2010 VTNUM
                    (780) after OT


===========
TRANSLATIONS
===========
TOT: 0.9959851551374632; NL: 0.9959851551374632; NL+AG: 0.9959851551374632; NL+QF: 0.9968701849944956; rels: [directed_by]; projs: [count(distinct(movie_0.title))]; preds: [director_0.name = "Quentin Tarantino",producer_0.birth_year < 2002,actor_0.birth_year > 2010]; havings: []; superlative: []; blanks: 0
TOT: 0.9959851551374632; NL: 0.9959851551374632; NL+AG: 0.9959851551374632; NL+QF: 0.9968044458893285; rels: [directed_by]; projs: [count(distinct(movie_0.title))]; preds: [actor_0.name = "Quentin Tarantino",producer_0.birth_year < 2002,actor_0.birth_year > 2010]; havings: []; superlative: []; blanks: 0
TOT: 0.9959851551374632; NL: 0.9959851551374632; NL+AG: 0.9959851551374632; NL+QF: 0.9967881241099704; rels: [directed_by]; projs: [count(distinct(movie_0.title))]; preds: [producer_0.name = "Quentin Tarantino",producer_0.birth_year < 2002,actor_0.birth_year > 2010]; havings: []; superlative: []; blanks: 0
TOT: 0.9959851551374632; NL: 0.9959851551374632; NL+AG: 0.9959851551374632; NL+QF: 0.9967881241099704; rels: [directed_by]; projs: [count(distinct(movie_0.title))]; preds: [writer_0.name = "Quentin Tarantino",producer_0.birth_year < 2002,actor_0.birth_year > 2010]; havings: []; superlative: []; blanks: 0
TOT: 0.9958856526499009; NL: 0.9958856526499009; NL+AG: 0.9958856526499009; NL+QF: 0.9968394576307789; rels: [directed_by]; projs: [count(distinct(movie_0.title))]; preds: [director_0.name = "Quentin Tarantino",producer_0.birth_year < 2002,movie_0.release_year > 2010]; havings: []; superlative: []; blanks: 0
TOT: 0.9958856526499009; NL: 0.9958856526499009; NL+AG: 0.9958856526499009; NL+QF: 0.9967636038481018; rels: [directed_by]; projs: [count(distinct(movie_0.title))]; preds: [actor_0.name = "Quentin Tarantino",producer_0.birth_year < 2002,movie_0.release_year > 2010]; havings: []; superlative: []; blanks: 0
TOT: 0.9958856526499009; NL: 0.9958856526499009; NL+AG: 0.9958856526499009; NL+QF: 0.9967934536984883; rels: [directed_by]; projs: [count(distinct(movie_0.title))]; preds: [producer_0.name = "Quentin Tarantino",producer_0.birth_year < 2002,movie_0.release_year > 2010]; havings: []; superlative: []; blanks: 0
TOT: 0.9958856526499009; NL: 0.9958856526499009; NL+AG: 0.9958856526499009; NL+QF: 0.9967377293177624; rels: [directed_by]; projs: [count(distinct(movie_0.title))]; preds: [writer_0.name = "Quentin Tarantino",producer_0.birth_year < 2002,movie_0.release_year > 2010]; havings: []; superlative: []; blanks: 0
TOT: 0.9954057345580425; NL: 0.9954057345580425; NL+AG: 0.9954057345580425; NL+QF: 0.9964066485309591; rels: [directed_by]; projs: [count(distinct(movie_0.title))]; preds: [director_0.name = "Quentin Tarantino",writer_0.birth_year < 2002,actor_0.birth_year > 2010]; havings: []; superlative: []; blanks: 0
TOT: 0.9954057345580425; NL: 0.9954057345580425; NL+AG: 0.9954057345580425; NL+QF: 0.9963409094257919; rels: [directed_by]; projs: [count(distinct(movie_0.title))]; preds: [actor_0.name = "Quentin Tarantino",writer_0.birth_year < 2002,actor_0.birth_year > 2010]; havings: []; superlative: []; blanks: 0

===========
RESULTS
===========
TOT: 0.9894267961234019; TR: 0.9958856526499009; SMP: 0.35; select count(distinct(movie_0.title)) from directed_by as directed_by_0, director as director_0, made_by as made_by_0, movie as movie_0, producer as producer_0 where director_0.name = "Quentin Tarantino" and movie_0.release_year > 2010 and producer_0.birth_year < 2002 and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid
TOT: 0.9892395893003743; TR: 0.9959851551374632; SMP: 0.3214285714285714; select count(distinct(movie_0.title)) from actor as actor_0, cast as cast_0, directed_by as directed_by_0, director as director_0, made_by as made_by_0, movie as movie_0, producer as producer_0 where actor_0.birth_year > 2010 and director_0.name = "Quentin Tarantino" and producer_0.birth_year < 2002 and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid
TOT: 0.9892395893003743; TR: 0.9959851551374632; SMP: 0.3214285714285714; select count(distinct(movie_0.title)) from actor as actor_0, cast as cast_0, directed_by as directed_by_0, made_by as made_by_0, movie as movie_0, movie as movie_1, producer as producer_0 where actor_0.birth_year > 2010 and actor_0.name = "Quentin Tarantino" and producer_0.birth_year < 2002 and actor_0.aid = cast_0.aid and cast_0.msid = movie_1.mid and directed_by_0.msid = movie_0.mid and directed_by_0.msid = movie_1.mid and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid
TOT: 0.9892395893003743; TR: 0.9959851551374632; SMP: 0.3214285714285714; select count(distinct(movie_0.title)) from actor as actor_0, cast as cast_0, directed_by as directed_by_0, made_by as made_by_0, movie as movie_0, movie as movie_1, producer as producer_0 where actor_0.birth_year > 2010 and producer_0.birth_year < 2002 and producer_0.name = "Quentin Tarantino" and actor_0.aid = cast_0.aid and cast_0.msid = movie_1.mid and directed_by_0.msid = movie_0.mid and directed_by_0.msid = movie_1.mid and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid
TOT: 0.9892395893003743; TR: 0.9959851551374632; SMP: 0.3214285714285714; select count(distinct(movie_0.title)) from actor as actor_0, cast as cast_0, directed_by as directed_by_0, made_by as made_by_0, movie as movie_0, producer as producer_0, tv_series as tv_series_0 where actor_0.birth_year > 2010 and actor_0.name = "Quentin Tarantino" and producer_0.birth_year < 2002 and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and directed_by_0.msid = movie_0.mid and directed_by_0.msid = tv_series_0.sid and made_by_0.msid = tv_series_0.sid and made_by_0.pid = producer_0.pid
TOT: 0.9892395893003743; TR: 0.9959851551374632; SMP: 0.3214285714285714; select count(distinct(movie_0.title)) from actor as actor_0, cast as cast_0, directed_by as directed_by_0, made_by as made_by_0, movie as movie_0, producer as producer_0, tv_series as tv_series_0 where actor_0.birth_year > 2010 and producer_0.birth_year < 2002 and producer_0.name = "Quentin Tarantino" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and directed_by_0.msid = movie_0.mid and directed_by_0.msid = tv_series_0.sid and made_by_0.msid = tv_series_0.sid and made_by_0.pid = producer_0.pid
TOT: 0.9892395893003743; TR: 0.9959851551374632; SMP: 0.3214285714285714; select count(distinct(movie_0.title)) from actor as actor_0, cast as cast_0, directed_by as directed_by_0, made_by as made_by_0, movie as movie_0, producer as producer_0, tv_series as tv_series_0 where actor_0.birth_year > 2010 and actor_0.name = "Quentin Tarantino" and producer_0.birth_year < 2002 and actor_0.aid = cast_0.aid and cast_0.msid = tv_series_0.sid and directed_by_0.msid = movie_0.mid and directed_by_0.msid = tv_series_0.sid and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid
TOT: 0.9892395893003743; TR: 0.9959851551374632; SMP: 0.3214285714285714; select count(distinct(movie_0.title)) from actor as actor_0, cast as cast_0, directed_by as directed_by_0, made_by as made_by_0, movie as movie_0, producer as producer_0, tv_series as tv_series_0 where actor_0.birth_year > 2010 and producer_0.birth_year < 2002 and producer_0.name = "Quentin Tarantino" and actor_0.aid = cast_0.aid and cast_0.msid = tv_series_0.sid and directed_by_0.msid = movie_0.mid and directed_by_0.msid = tv_series_0.sid and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid
TOT: 0.9891410818376877; TR: 0.9958856526499009; SMP: 0.3214285714285714; select count(distinct(movie_0.title)) from directed_by as directed_by_0, director as director_0, made_by as made_by_0, movie as movie_0, producer as producer_0, tags as tags_0, tv_series as tv_series_0 where director_0.name = "Quentin Tarantino" and movie_0.release_year > 2010 and producer_0.birth_year < 2002 and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and made_by_0.msid = tv_series_0.sid and made_by_0.pid = producer_0.pid and movie_0.mid = tags_0.msid and tags_0.msid = tv_series_0.sid
TOT: 0.9891410818376877; TR: 0.9958856526499009; SMP: 0.3214285714285714; select count(distinct(movie_0.title)) from directed_by as directed_by_0, director as director_0, made_by as made_by_0, made_by as made_by_1, movie as movie_0, producer as producer_0, tv_series as tv_series_0 where director_0.name = "Quentin Tarantino" and movie_0.release_year > 2010 and producer_0.birth_year < 2002 and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and made_by_0.msid = movie_0.mid and made_by_0.msid = tv_series_0.sid and made_by_1.msid = tv_series_0.sid and made_by_1.pid = producer_0.pid


02:29  INFO: ================
02:29  INFO: QUERY 77: List all the movies directed by "Asghar Farhadi" in which "Taraneh Alidoosti" played
02:29  INFO: ================
782. ROOT: ROOT; NA; ; (0) 
783. List: CMT; NA; ; (0) 
784. movies: NT; NA; all; (0) movie.title(1.0):| movie(1.0):| company.name(0.91):Movies; Movie; W Movies; | tv_series.title(0.8):Movies, Movies, Movi; Moon Movies; Movie Memories; | cast.role(0.79):Movie; KPC Movies; Movie F; | 
787. directed: NT; NA; ; (0) directed_by(1.0):| director.name(0.72):| director(0.72):| producer.name(0.69):| producer(0.69):| 
788. Asghar Farhadi: VTTEXT; NA; ; (0) company.name(0.99):Asghar Farhadi; Asghar Farhadi; Farhadi Film Product; | actor.name(0.98):Asghar Farhadi; Asghar Farhadi; Farhad Asghar; | writer.name(0.97):Asghar Farhadi; Asghar Farhadi; Asghar Saffar; | director.name(0.97):Asghar Farhadi; Asghar Farhadi; Asghar Tharani; | producer.name(0.97):Asghar Farhadi; Asghar Farhadi; Asghar Bichareh; | 
790. played: NT; NA; ; (0) tv_series.num_of_seasons(0.67):| director.did(0.66):| cast.role(0.66):| directed_by(0.64):| actor.name(0.63):| 
793. Taraneh Alidoosti: VTTEXT; NA; ; (0) actor.name(0.96):Taraneh Alidoosti; Taraneh Alidoosti; Taraneh Koohestani; | cast.role(0.61):Taraneh; Taraneh; Taraneh; | director.name(0.58):Taraneh Salke; Taraneh Salke; | producer.name(0.57):Taraneh Salke; Taraneh Salke; Taraneh Golozar; | writer.name(0.5):Taraneh Golozar; Taraneh Golozar; | 
List, VB
all, PDT
the, DT
movies, NNS
directed, VBN
by, IN
Asghar Farhadi, NNP
in, IN
which, WDT
Taraneh Alidoosti, NNP
played, VBD
root(ROOT-0, List-1)
det:predet(movies-4, all-2)
det(movies-4, the-3)
dobj(List-1, movies-4)
acl(movies-4, directed-5)
case(Asghar Farhadi-7, by-6)
nmod(directed-5, Asghar Farhadi-7)
case(which-9, in-8)
nmod(played-11, which-9)
nsubj(played-11, Taraneh Alidoosti-10)
acl:relcl(movies-4, played-11)

PARSE TREE:(782) ROOT ROOT
    (783) List CMT
        (784) movies NT
            (787) directed NT
                (788) Asghar Farhadi VTTEXT
            (790) played NT
                (793) Taraneh Alidoosti VTTEXT


===========
TRANSLATIONS
===========
TOT: 0.9182719839629796; NL: 0.9182719839629796; NL+AG: 0.9637237807802027; NL+QF: 0.9630040864629297; rels: [directed_by]; projs: [movie_0.title]; preds: [company_0.name = "Asghar Farhadi",actor_0.name = "Taraneh Alidoosti"]; havings: []; superlative: []; blanks: 0
TOT: 0.9162494777155228; NL: 0.9162494777155228; NL+AG: 0.9617012745327459; NL+QF: 0.9619468213029674; rels: [directed_by]; projs: [movie_0.title]; preds: [actor_0.name = "Asghar Farhadi",actor_0.name = "Taraneh Alidoosti"]; havings: []; superlative: []; blanks: 0
TOT: 0.9135324658811271; NL: 0.9135324658811271; NL+AG: 0.9589842626983502; NL+QF: 0.9593261053383051; rels: [directed_by]; projs: [movie_0.title]; preds: [writer_0.name = "Asghar Farhadi",actor_0.name = "Taraneh Alidoosti"]; havings: []; superlative: []; blanks: 0
TOT: 0.913389631021803; NL: 0.913389631021803; NL+AG: 0.9588414278390263; NL+QF: 0.9643433031341168; rels: [directed_by]; projs: [movie_0.title]; preds: [director_0.name = "Asghar Farhadi",actor_0.name = "Taraneh Alidoosti"]; havings: []; superlative: []; blanks: 0
TOT: 0.9129918707743802; NL: 0.9129918707743802; NL+AG: 0.9584436675916035; NL+QF: 0.9589059469823014; rels: [directed_by]; projs: [movie_0.title]; preds: [producer_0.name = "Asghar Farhadi",actor_0.name = "Taraneh Alidoosti"]; havings: []; superlative: []; blanks: 0
TOT: 0.9110019839629796; NL: 0.9110019839629796; NL+AG: 0.9637237807802027; NL+QF: 0.9642618302696825; rels: [directed_by]; projs: [movie_0.title]; preds: [company_0.name = "Asghar Farhadi",actor_0.name = "Taraneh Alidoosti"]; havings: []; superlative: []; blanks: 1
TOT: 0.9089794777155229; NL: 0.9089794777155229; NL+AG: 0.9617012745327459; NL+QF: 0.9627920341837019; rels: [directed_by]; projs: [movie_0.title]; preds: [actor_0.name = "Asghar Farhadi",actor_0.name = "Taraneh Alidoosti"]; havings: []; superlative: []; blanks: 1
TOT: 0.9062624658811271; NL: 0.9062624658811271; NL+AG: 0.9589842626983502; NL+QF: 0.9607029948350732; rels: [directed_by]; projs: [movie_0.title]; preds: [writer_0.name = "Asghar Farhadi",actor_0.name = "Taraneh Alidoosti"]; havings: []; superlative: []; blanks: 1
TOT: 0.9061196310218032; NL: 0.9061196310218032; NL+AG: 0.9588414278390263; NL+QF: 0.961471662101728; rels: [directed_by]; projs: [movie_0.title]; preds: [director_0.name = "Asghar Farhadi",actor_0.name = "Taraneh Alidoosti"]; havings: []; superlative: []; blanks: 1
TOT: 0.9057218707743802; NL: 0.9057218707743802; NL+AG: 0.9584436675916035; NL+QF: 0.9608125892031701; rels: [directed_by]; projs: [movie_0.title]; preds: [producer_0.name = "Asghar Farhadi",actor_0.name = "Taraneh Alidoosti"]; havings: []; superlative: []; blanks: 1

===========
RESULTS
===========
TOT: 0.9123035498376355; TR: 0.9182719839629796; SMP: 0.3214285714285714; select movie_0.title from actor as actor_0, cast as cast_0, company as company_0, copyright as copyright_0, directed_by as directed_by_0, movie as movie_0, movie as movie_1 where actor_0.name = "Taraneh Alidoosti" and company_0.name = "Asghar Farhadi" and actor_0.aid = cast_0.aid and cast_0.msid = movie_1.mid and company_0.id = copyright_0.cid and copyright_0.msid = movie_0.mid and directed_by_0.msid = movie_0.mid and directed_by_0.msid = movie_1.mid
TOT: 0.9123035498376355; TR: 0.9182719839629796; SMP: 0.3214285714285714; select movie_0.title from actor as actor_0, cast as cast_0, company as company_0, copyright as copyright_0, directed_by as directed_by_0, movie as movie_0, tv_series as tv_series_0 where actor_0.name = "Taraneh Alidoosti" and company_0.name = "Asghar Farhadi" and actor_0.aid = cast_0.aid and cast_0.msid = tv_series_0.sid and company_0.id = copyright_0.cid and copyright_0.msid = movie_0.mid and directed_by_0.msid = movie_0.mid and directed_by_0.msid = tv_series_0.sid
TOT: 0.9123035498376355; TR: 0.9182719839629796; SMP: 0.3214285714285714; select movie_0.title from actor as actor_0, cast as cast_0, company as company_0, copyright as copyright_0, directed_by as directed_by_0, movie as movie_0, tv_series as tv_series_0 where actor_0.name = "Taraneh Alidoosti" and company_0.name = "Asghar Farhadi" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and company_0.id = copyright_0.cid and copyright_0.msid = tv_series_0.sid and directed_by_0.msid = movie_0.mid and directed_by_0.msid = tv_series_0.sid
TOT: 0.9103012686526533; TR: 0.9162494777155228; SMP: 0.3214285714285714; select movie_0.title from actor as actor_0, actor as actor_1, cast as cast_0, cast as cast_1, directed_by as directed_by_0, movie as movie_0, movie as movie_1 where actor_0.name = "Taraneh Alidoosti" and actor_1.name = "Asghar Farhadi" and actor_0.aid = cast_0.aid and actor_1.aid = cast_1.aid and cast_0.msid = movie_0.mid and cast_1.msid = movie_1.mid and directed_by_0.msid = movie_0.mid and directed_by_0.msid = movie_1.mid
TOT: 0.9103012686526533; TR: 0.9162494777155228; SMP: 0.3214285714285714; select movie_0.title from actor as actor_0, actor as actor_1, cast as cast_0, cast as cast_1, directed_by as directed_by_0, movie as movie_0, movie as movie_1 where actor_0.name = "Asghar Farhadi" and actor_1.name = "Taraneh Alidoosti" and actor_0.aid = cast_0.aid and actor_1.aid = cast_1.aid and cast_0.msid = movie_0.mid and cast_1.msid = movie_1.mid and directed_by_0.msid = movie_0.mid and directed_by_0.msid = movie_1.mid
TOT: 0.9103012686526533; TR: 0.9162494777155228; SMP: 0.3214285714285714; select movie_0.title from actor as actor_0, actor as actor_1, cast as cast_0, cast as cast_1, directed_by as directed_by_0, movie as movie_0, tv_series as tv_series_0 where actor_0.name = "Taraneh Alidoosti" and actor_1.name = "Asghar Farhadi" and actor_0.aid = cast_0.aid and actor_1.aid = cast_1.aid and cast_0.msid = movie_0.mid and cast_1.msid = tv_series_0.sid and directed_by_0.msid = movie_0.mid and directed_by_0.msid = tv_series_0.sid
TOT: 0.9103012686526533; TR: 0.9162494777155228; SMP: 0.3214285714285714; select movie_0.title from actor as actor_0, actor as actor_1, cast as cast_0, cast as cast_1, directed_by as directed_by_0, movie as movie_0, tv_series as tv_series_0 where actor_0.name = "Asghar Farhadi" and actor_1.name = "Taraneh Alidoosti" and actor_0.aid = cast_0.aid and actor_1.aid = cast_1.aid and cast_0.msid = movie_0.mid and cast_1.msid = tv_series_0.sid and directed_by_0.msid = movie_0.mid and directed_by_0.msid = tv_series_0.sid
TOT: 0.907755734711585; TR: 0.913389631021803; SMP: 0.35; select movie_0.title from actor as actor_0, cast as cast_0, directed_by as directed_by_0, director as director_0, movie as movie_0 where actor_0.name = "Taraneh Alidoosti" and director_0.name = "Asghar Farhadi" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid
TOT: 0.9076114269366016; TR: 0.9135324658811271; SMP: 0.3214285714285714; select movie_0.title from actor as actor_0, cast as cast_0, directed_by as directed_by_0, movie as movie_0, movie as movie_1, writer as writer_0, written_by as written_by_0 where actor_0.name = "Taraneh Alidoosti" and writer_0.name = "Asghar Farhadi" and actor_0.aid = cast_0.aid and cast_0.msid = movie_1.mid and directed_by_0.msid = movie_0.mid and directed_by_0.msid = movie_1.mid and movie_0.mid = written_by_0.msid and writer_0.wid = written_by_0.wid
TOT: 0.9076114269366016; TR: 0.9135324658811271; SMP: 0.3214285714285714; select movie_0.title from actor as actor_0, cast as cast_0, directed_by as directed_by_0, movie as movie_0, tv_series as tv_series_0, writer as writer_0, written_by as written_by_0 where actor_0.name = "Taraneh Alidoosti" and writer_0.name = "Asghar Farhadi" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and directed_by_0.msid = movie_0.mid and directed_by_0.msid = tv_series_0.sid and tv_series_0.sid = written_by_0.msid and writer_0.wid = written_by_0.wid


02:30  INFO: ================
02:30  INFO: QUERY 79: who acted the role of "Mr. Bean"
02:30  INFO: ================
795. ROOT: ROOT; NA; ; (0) 
796. acted: NT; NA; ; (0) director.did(0.65):| movie.release_year(0.63):| actor.name(0.62):| actor(0.62):| genre.genre(0.62):| 
798. role: NT; NA; ; (0) cast.role(0.82):| movie.title(0.75):Roles; Rolê; The Role; | tv_series.title(0.73):Roles; Role Play; Role Call; | actor.name(0.69):| actor(0.69):| 
800. Mr. Bean: VTTEXT; NA; ; (0) cast.role(1.0):Mr. Bean; Mr. Bean; Mr. Bean; | tv_series.title(0.81):Mr. Bean; Mr. Bean: The Animat; The Human Beans; | actor.name(0.67):John R. Bean; Bean; Sean Bean; | producer.name(0.67):John R. Bean; Sean Bean; Jason R. Bean; | movie.title(0.67):Mr. Bean's Holiday: ; Mr. Bean's Holiday: ; Mr. Bean's Holiday: ; | 
who, WP
acted, VBD
the, DT
role, NN
of, IN
Mr. Bean, NNP
nsubj(acted-2, who-1)
root(ROOT-0, acted-2)
det(role-4, the-3)
dobj(acted-2, role-4)
case(Mr. Bean-6, of-5)
nmod(role-4, Mr. Bean-6)

PARSE TREE:(795) ROOT ROOT
    (796) acted NT
        (798) role NT
            (800) Mr. Bean VTTEXT


===========
TRANSLATIONS
===========
TOT: 0.6909505262914625; NL: 0.6909505262914625; NL+AG: 0.9219094794094792; NL+QF: 0.9166357524361066; rels: []; projs: [director_0.did]; preds: [movie_0.title = "Roles",cast_0.role = "Mr. Bean"]; havings: []; superlative: []; blanks: 0
TOT: 0.6872588596247958; NL: 0.6872588596247958; NL+AG: 0.9219094794094792; NL+QF: 0.9211300448334585; rels: []; projs: [movie_0.release_year]; preds: [movie_0.title = "Roles",cast_0.role = "Mr. Bean"]; havings: []; superlative: []; blanks: 0
TOT: 0.6849505262914626; NL: 0.6849505262914626; NL+AG: 0.968295288722118; NL+QF: 0.927292732970209; rels: []; projs: [actor_0.name]; preds: [movie_0.title = "Roles",cast_0.role = "Mr. Bean"]; havings: []; superlative: []; blanks: 0
TOT: 0.6846421929581292; NL: 0.6846421929581292; NL+AG: 0.968295288722118; NL+QF: 0.9166357524361066; rels: []; projs: [genre_0.genre]; preds: [movie_0.title = "Roles",cast_0.role = "Mr. Bean"]; havings: []; superlative: []; blanks: 0
TOT: 0.6844536685738438; NL: 0.6844536685738438; NL+AG: 0.9219094794094792; NL+QF: 0.9111111111111111; rels: []; projs: [director_0.did]; preds: [tv_series_0.title = "Roles",cast_0.role = "Mr. Bean"]; havings: []; superlative: []; blanks: 0
TOT: 0.6807620019071772; NL: 0.6807620019071772; NL+AG: 0.9219094794094792; NL+QF: 0.9111111111111111; rels: []; projs: [movie_0.release_year]; preds: [tv_series_0.title = "Roles",cast_0.role = "Mr. Bean"]; havings: []; superlative: []; blanks: 0
TOT: 0.6784536685738439; NL: 0.6784536685738439; NL+AG: 0.968295288722118; NL+QF: 0.9135636904761905; rels: []; projs: [actor_0.name]; preds: [tv_series_0.title = "Roles",cast_0.role = "Mr. Bean"]; havings: []; superlative: []; blanks: 0
TOT: 0.6781453352405107; NL: 0.6781453352405107; NL+AG: 0.968295288722118; NL+QF: 0.9111111111111111; rels: []; projs: [genre_0.genre]; preds: [tv_series_0.title = "Roles",cast_0.role = "Mr. Bean"]; havings: []; superlative: []; blanks: 0
TOT: 0.6702208333333332; NL: 0.6702208333333332; NL+AG: 0.9426314425390433; NL+QF: 0.9148211067975045; rels: []; projs: [cast_0.role]; preds: [cast_0.role = "Mr. Bean"]; havings: []; superlative: []; blanks: 1
TOT: 0.6545124999999998; NL: 0.6545124999999998; NL+AG: 0.9902439024390243; NL+QF: 0.9555183035714285; rels: []; projs: [actor_0.name]; preds: [cast_0.role = "Mr. Bean"]; havings: []; superlative: []; blanks: 0

===========
RESULTS
===========
TOT: 0.6877910210285478; TR: 0.6909505262914625; SMP: 0.375; select director_0.did from cast as cast_0, directed_by as directed_by_0, director as director_0, movie as movie_0 where cast_0.role = "Mr. Bean" and movie_0.title = "Roles" and cast_0.msid = movie_0.mid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid
TOT: 0.6873743543618811; TR: 0.6909505262914625; SMP: 0.3333333333333333; select director_0.did from cast as cast_0, directed_by as directed_by_0, director as director_0, movie as movie_0, tags as tags_0, tv_series as tv_series_0 where cast_0.role = "Mr. Bean" and movie_0.title = "Roles" and cast_0.msid = tv_series_0.sid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and movie_0.mid = tags_0.msid and tags_0.msid = tv_series_0.sid
TOT: 0.6873743543618811; TR: 0.6909505262914625; SMP: 0.3333333333333333; select director_0.did from cast as cast_0, classification as classification_0, directed_by as directed_by_0, director as director_0, movie as movie_0, movie as movie_1 where cast_0.role = "Mr. Bean" and movie_0.title = "Roles" and cast_0.msid = movie_1.mid and classification_0.msid = movie_0.mid and classification_0.msid = movie_1.mid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid
TOT: 0.6873743543618811; TR: 0.6909505262914625; SMP: 0.3333333333333333; select director_0.did from cast as cast_0, directed_by as directed_by_0, director as director_0, made_by as made_by_0, movie as movie_0, tv_series as tv_series_0 where cast_0.role = "Mr. Bean" and movie_0.title = "Roles" and cast_0.msid = tv_series_0.sid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and made_by_0.msid = movie_0.mid and made_by_0.msid = tv_series_0.sid
TOT: 0.6873743543618811; TR: 0.6909505262914625; SMP: 0.3333333333333333; select director_0.did from cast as cast_0, directed_by as directed_by_0, directed_by as directed_by_1, director as director_0, movie as movie_0, tv_series as tv_series_0 where cast_0.role = "Mr. Bean" and movie_0.title = "Roles" and cast_0.msid = tv_series_0.sid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and directed_by_1.did = director_0.did and directed_by_1.msid = tv_series_0.sid
TOT: 0.6873743543618811; TR: 0.6909505262914625; SMP: 0.3333333333333333; select director_0.did from cast as cast_0, directed_by as directed_by_0, director as director_0, movie as movie_0, tv_series as tv_series_0, written_by as written_by_0 where cast_0.role = "Mr. Bean" and movie_0.title = "Roles" and cast_0.msid = tv_series_0.sid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and movie_0.mid = written_by_0.msid and tv_series_0.sid = written_by_0.msid
TOT: 0.6873743543618811; TR: 0.6909505262914625; SMP: 0.3333333333333333; select director_0.did from cast as cast_0, directed_by as directed_by_0, director as director_0, movie as movie_0, movie as movie_1, written_by as written_by_0 where cast_0.role = "Mr. Bean" and movie_0.title = "Roles" and cast_0.msid = movie_1.mid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and movie_0.mid = written_by_0.msid and movie_1.mid = written_by_0.msid
TOT: 0.6873743543618811; TR: 0.6909505262914625; SMP: 0.3333333333333333; select director_0.did from cast as cast_0, copyright as copyright_0, directed_by as directed_by_0, director as director_0, movie as movie_0, tv_series as tv_series_0 where cast_0.role = "Mr. Bean" and movie_0.title = "Roles" and cast_0.msid = tv_series_0.sid and copyright_0.msid = movie_0.mid and copyright_0.msid = tv_series_0.sid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid
TOT: 0.6873743543618811; TR: 0.6909505262914625; SMP: 0.3333333333333333; select director_0.did from cast as cast_0, directed_by as directed_by_0, director as director_0, made_by as made_by_0, movie as movie_0, tv_series as tv_series_0 where cast_0.role = "Mr. Bean" and movie_0.title = "Roles" and cast_0.msid = movie_0.mid and directed_by_0.did = director_0.did and directed_by_0.msid = tv_series_0.sid and made_by_0.msid = movie_0.mid and made_by_0.msid = tv_series_0.sid
TOT: 0.6873743543618811; TR: 0.6909505262914625; SMP: 0.3333333333333333; select director_0.did from cast as cast_0, directed_by as directed_by_0, director as director_0, made_by as made_by_0, movie as movie_0, movie as movie_1 where cast_0.role = "Mr. Bean" and movie_0.title = "Roles" and cast_0.msid = movie_1.mid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and made_by_0.msid = movie_0.mid and made_by_0.msid = movie_1.mid


02:31  INFO: ================
02:31  INFO: QUERY 96: What is the number of movies that "Brad Pitt" acts in per year?
02:31  INFO: ================
02:32  INFO: ================
02:32  INFO: QUERY 104: What is the number of movies featuring "Brad Pitt"?
02:32  INFO: ================
817. ROOT: ROOT; NA; ; (0) 
818. What: CMT; NA; ; (0) 
820. number of: FT; count; ; (0) 
822. movies: NT; NA; ; (0) movie.title(1.0):| movie(1.0):| company.name(0.91):Movies; Movie; W Movies; | tv_series.title(0.8):Movies, Movies, Movi; Moon Movies; Movie Memories; | cast.role(0.79):Movie; KPC Movies; Movie F; | 
824. featuring: NT; NA; ; (0) movie.release_year(0.64):| producer.name(0.64):| producer(0.64):| made_by(0.64):| movie.title_aka(0.62):| 
825. Brad Pitt: VTTEXT; NA; ; (0) actor.name(0.98):Brad Pitt; Brad Pitt; bRad sPitt; | producer.name(0.98):Brad Pitt; Brad Pitt; Mad Pitt; | cast.role(0.93):Brad Pitt'; Brad Pitt'; Brad Pitt #1; | writer.name(0.78):Brad Pruitt; Brad Pruitt; Brad Witt; | director.name(0.78):Brad Pruitt; Brad Pruitt; Brad Witty; | 
What, WP
is, VBZ
the, DT
number, NN
of, IN
movies, NNS
featuring, VBG
Brad Pitt, NNP
root(ROOT-0, What-1)
cop(What-1, is-2)
det(number-4, the-3)
nsubj(What-1, number-4)
case(movies-6, of-5)
nmod(number-4, movies-6)
acl(movies-6, featuring-7)
dobj(featuring-7, Brad Pitt-8)

PARSE TREE:(817) ROOT ROOT
    (818) What CMT
        (820) number of FT
            (822) movies NT
                (824) featuring NT
                    (825) Brad Pitt VTTEXT


===========
TRANSLATIONS
===========
TOT: 0.9900891862868635; NL: 0.9900891862868635; NL+AG: 0.9900891862868635; NL+QF: 0.9950445931434317; rels: []; projs: [count(distinct(movie_0.title))]; preds: [producer_0.name = "Brad Pitt"]; havings: []; superlative: []; blanks: 0
TOT: 0.8608319303794768; NL: 0.8608319303794768; NL+AG: 0.9572478124654614; NL+QF: 0.955140748860889; rels: []; projs: [count(distinct(movie_0.title))]; preds: [actor_0.name = "Brad Pitt"]; havings: []; superlative: []; blanks: 1
TOT: 0.8600594575245757; NL: 0.8600594575245757; NL+AG: 0.9564753396105604; NL+QF: 0.957185061938203; rels: []; projs: [count(distinct(movie_0.title))]; preds: [producer_0.name = "Brad Pitt"]; havings: []; superlative: []; blanks: 1
TOT: 0.8446028079887004; NL: 0.8446028079887004; NL+AG: 0.9410186900746851; NL+QF: 0.9447710164360701; rels: []; projs: [count(distinct(movie_0.title))]; preds: [cast_0.role = "Brad Pitt'"]; havings: []; superlative: []; blanks: 1
TOT: 0.8338391862868635; NL: 0.8338391862868635; NL+AG: 0.9637325971395767; NL+QF: 0.9450445931434317; rels: []; projs: [count(distinct(tv_series_0.title))]; preds: [producer_0.name = "Brad Pitt"]; havings: []; superlative: []; blanks: 0
TOT: 0.8086141862868635; NL: 0.8086141862868635; NL+AG: 0.9637325971395767; NL+QF: 0.9450445931434317; rels: []; projs: [count(distinct(cast_0.role))]; preds: [producer_0.name = "Brad Pitt"]; havings: []; superlative: []; blanks: 0
TOT: 0.7931204709708113; NL: 0.7931204709708113; NL+AG: 0.9333456375674078; NL+QF: 0.9172734959773843; rels: []; projs: [count(distinct(movie_0.title))]; preds: [writer_0.name = "Brad Pruitt"]; havings: []; superlative: []; blanks: 1
TOT: 0.7916906970103629; NL: 0.7916906970103629; NL+AG: 0.9333456375674078; NL+QF: 0.9210405128914276; rels: []; projs: [count(distinct(movie_0.title))]; preds: [director_0.name = "Brad Pruitt"]; havings: []; superlative: []; blanks: 1
TOT: 0.7679819303794768; NL: 0.7679819303794768; NL+AG: 0.9572478124654614; NL+QF: 0.9520212416800377; rels: [producer]; projs: [count(distinct(movie_0.title))]; preds: [actor_0.name = "Brad Pitt"]; havings: []; superlative: []; blanks: 0
TOT: 0.7673235970461434; NL: 0.7673235970461434; NL+AG: 0.9572478124654614; NL+QF: 0.9520212416800377; rels: [made_by]; projs: [count(distinct(movie_0.title))]; preds: [actor_0.name = "Brad Pitt"]; havings: []; superlative: []; blanks: 0

===========
RESULTS
===========
TOT: 0.9843549610906615; TR: 0.9900891862868635; SMP: 0.41666666666666663; select count(distinct(movie_0.title)) from made_by as made_by_0, movie as movie_0, producer as producer_0 where producer_0.name = "Brad Pitt" and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid
TOT: 0.8563902777423487; TR: 0.8608319303794768; SMP: 0.41666666666666663; select count(distinct(movie_0.title)) from actor as actor_0, cast as cast_0, movie as movie_0 where actor_0.name = "Brad Pitt" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid
TOT: 0.8411567799088133; TR: 0.8446028079887004; SMP: 0.5; select count(distinct(movie_0.title)) from cast as cast_0, movie as movie_0 where cast_0.role = "Brad Pitt'" and cast_0.msid = movie_0.mid
TOT: 0.8296674610906615; TR: 0.8338391862868635; SMP: 0.41666666666666663; select count(distinct(tv_series_0.title)) from made_by as made_by_0, producer as producer_0, tv_series as tv_series_0 where producer_0.name = "Brad Pitt" and made_by_0.msid = tv_series_0.sid and made_by_0.pid = producer_0.pid
TOT: 0.804278044423995; TR: 0.8086141862868635; SMP: 0.375; select count(distinct(cast_0.role)) from cast as cast_0, made_by as made_by_0, producer as producer_0, tv_series as tv_series_0 where producer_0.name = "Brad Pitt" and cast_0.msid = tv_series_0.sid and made_by_0.msid = tv_series_0.sid and made_by_0.pid = producer_0.pid
TOT: 0.804278044423995; TR: 0.8086141862868635; SMP: 0.375; select count(distinct(cast_0.role)) from cast as cast_0, made_by as made_by_0, movie as movie_0, producer as producer_0 where producer_0.name = "Brad Pitt" and cast_0.msid = movie_0.mid and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid
TOT: 0.8038613777573282; TR: 0.8086141862868635; SMP: 0.3333333333333333; select count(distinct(cast_0.role)) from cast as cast_0, copyright as copyright_0, made_by as made_by_0, producer as producer_0, tv_series as tv_series_0, tv_series as tv_series_1 where producer_0.name = "Brad Pitt" and cast_0.msid = tv_series_1.sid and copyright_0.msid = tv_series_0.sid and copyright_0.msid = tv_series_1.sid and made_by_0.msid = tv_series_0.sid and made_by_0.pid = producer_0.pid
TOT: 0.8038613777573282; TR: 0.8086141862868635; SMP: 0.3333333333333333; select count(distinct(cast_0.role)) from cast as cast_0, made_by as made_by_0, made_by as made_by_1, movie as movie_0, movie as movie_1, producer as producer_0 where producer_0.name = "Brad Pitt" and cast_0.msid = movie_1.mid and made_by_0.msid = movie_0.mid and made_by_0.msid = movie_1.mid and made_by_1.msid = movie_0.mid and made_by_1.pid = producer_0.pid
TOT: 0.8038613777573282; TR: 0.8086141862868635; SMP: 0.3333333333333333; select count(distinct(cast_0.role)) from cast as cast_0, copyright as copyright_0, made_by as made_by_0, movie as movie_0, producer as producer_0, tv_series as tv_series_0 where producer_0.name = "Brad Pitt" and cast_0.msid = movie_0.mid and copyright_0.msid = movie_0.mid and copyright_0.msid = tv_series_0.sid and made_by_0.msid = tv_series_0.sid and made_by_0.pid = producer_0.pid
TOT: 0.8038613777573282; TR: 0.8086141862868635; SMP: 0.3333333333333333; select count(distinct(cast_0.role)) from cast as cast_0, made_by as made_by_0, movie as movie_0, producer as producer_0, tv_series as tv_series_0, written_by as written_by_0 where producer_0.name = "Brad Pitt" and cast_0.msid = tv_series_0.sid and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid and movie_0.mid = written_by_0.msid and tv_series_0.sid = written_by_0.msid


02:32  INFO: ================
02:32  INFO: QUERY 12: In what city was "Kevin Spacey" born?
02:32  INFO: ================
827. ROOT: ROOT; NA; ; (0) 
828. born: NT; NA; ; (0) tv_series.num_of_episodes(0.62):| tv_series.num_of_seasons(0.62):| tags(0.6):| director.did(0.6):| producer.name(0.59):| 
829. city: NT; NA; ; (0) director.birth_city(1.0):| actor.birth_city(1.0):| producer.birth_city(1.0):| writer.birth_city(1.0):| movie.title(0.95):City; City; City; | 
833. Kevin Spacey: VTTEXT; NA; ; (0) writer.name(0.99):Kevin Spacey; Kevin Spacey; Kevin Pacey; | director.name(0.98):Kevin Spacey; Kevin Spacey; Kevin Spacey Fowler; | producer.name(0.98):Kevin Spacey; Kevin Spacey; Kevin Spacey Fowler; | actor.name(0.9):Kevin Spacey; Kevin Spacey Fowler; John Spacey; | cast.role(0.85):Kid Kevin Spacey; Kid Kevin Spacey; Kevin Spatz; | 
In, IN
what, WDT
city, NN
was, VBD
Kevin Spacey, NNP
born, VBN
case(city-3, In-1)
det(city-3, what-2)
nmod(born-6, city-3)
auxpass(born-6, was-4)
nsubjpass(born-6, Kevin Spacey-5)
root(ROOT-0, born-6)

PARSE TREE:(827) ROOT ROOT
    (828) born NT
        (829) city NT
        (833) Kevin Spacey VTTEXT


===========
TRANSLATIONS
===========
TOT: 0.7486788776773677; NL: 0.7486788776773677; NL+AG: 0.9390079180814083; NL+QF: 0.9412914740071341; rels: []; projs: [tv_series_0.num_of_episodes]; preds: [movie_0.title = "City",writer_0.name = "Kevin Spacey"]; havings: []; superlative: []; blanks: 0
TOT: 0.7486788776773677; NL: 0.7486788776773677; NL+AG: 0.9390079180814083; NL+QF: 0.9412914740071341; rels: []; projs: [tv_series_0.num_of_seasons]; preds: [movie_0.title = "City",writer_0.name = "Kevin Spacey"]; havings: []; superlative: []; blanks: 0
TOT: 0.7461328653323523; NL: 0.7461328653323523; NL+AG: 0.9364619057363929; NL+QF: 0.9395941324437905; rels: []; projs: [tv_series_0.num_of_episodes]; preds: [movie_0.title = "City",director_0.name = "Kevin Spacey"]; havings: []; superlative: []; blanks: 0
TOT: 0.7461328653323523; NL: 0.7461328653323523; NL+AG: 0.9364619057363929; NL+QF: 0.9395941324437905; rels: []; projs: [tv_series_0.num_of_episodes]; preds: [movie_0.title = "City",producer_0.name = "Kevin Spacey"]; havings: []; superlative: []; blanks: 0
TOT: 0.7461328653323523; NL: 0.7461328653323523; NL+AG: 0.9364619057363929; NL+QF: 0.9395941324437905; rels: []; projs: [tv_series_0.num_of_seasons]; preds: [movie_0.title = "City",director_0.name = "Kevin Spacey"]; havings: []; superlative: []; blanks: 0
TOT: 0.7461328653323523; NL: 0.7461328653323523; NL+AG: 0.9364619057363929; NL+QF: 0.9395941324437905; rels: []; projs: [tv_series_0.num_of_seasons]; preds: [movie_0.title = "City",producer_0.name = "Kevin Spacey"]; havings: []; superlative: []; blanks: 0
TOT: 0.7457205443440346; NL: 0.7457205443440346; NL+AG: 0.9390079180814083; NL+QF: 0.9412914740071341; rels: []; projs: [director_0.did]; preds: [movie_0.title = "City",writer_0.name = "Kevin Spacey"]; havings: []; superlative: []; blanks: 0
TOT: 0.7431745319990192; NL: 0.7431745319990192; NL+AG: 0.9364619057363929; NL+QF: 0.9395941324437905; rels: []; projs: [director_0.did]; preds: [movie_0.title = "City",director_0.name = "Kevin Spacey"]; havings: []; superlative: []; blanks: 0
TOT: 0.7431745319990192; NL: 0.7431745319990192; NL+AG: 0.9364619057363929; NL+QF: 0.9395941324437905; rels: []; projs: [director_0.did]; preds: [movie_0.title = "City",producer_0.name = "Kevin Spacey"]; havings: []; superlative: []; blanks: 0
TOT: 0.7204960564127877; NL: 0.7204960564127877; NL+AG: 0.9108250968168282; NL+QF: 0.922502926497414; rels: []; projs: [tv_series_0.num_of_episodes]; preds: [movie_0.title = "City",actor_0.name = "Kevin Spacey"]; havings: []; superlative: []; blanks: 0

===========
RESULTS
===========
TOT: 0.744692088900594; TR: 0.7486788776773677; SMP: 0.35; select tv_series_0.num_of_episodes from movie as movie_0, tv_series as tv_series_0, writer as writer_0, written_by as written_by_0, written_by as written_by_1 where movie_0.title = "City" and writer_0.name = "Kevin Spacey" and movie_0.mid = written_by_0.msid and tv_series_0.sid = written_by_1.msid and writer_0.wid = written_by_0.wid and writer_0.wid = written_by_1.wid
TOT: 0.744692088900594; TR: 0.7486788776773677; SMP: 0.35; select tv_series_0.num_of_seasons from movie as movie_0, tv_series as tv_series_0, writer as writer_0, written_by as written_by_0, written_by as written_by_1 where movie_0.title = "City" and writer_0.name = "Kevin Spacey" and movie_0.mid = written_by_0.msid and tv_series_0.sid = written_by_1.msid and writer_0.wid = written_by_0.wid and writer_0.wid = written_by_1.wid
TOT: 0.7445254222339274; TR: 0.7486788776773677; SMP: 0.3333333333333333; select tv_series_0.num_of_episodes from movie as movie_0, tv_series as tv_series_0, writer as writer_0, writer as writer_1, written_by as written_by_0, written_by as written_by_1 where movie_0.title = "City" and writer_0.name = "Kevin Spacey" and movie_0.mid = written_by_0.msid and tv_series_0.sid = written_by_1.msid and writer_0.wid = writer_1.wid and writer_0.wid = written_by_0.wid and writer_1.wid = written_by_1.wid
TOT: 0.7445254222339274; TR: 0.7486788776773677; SMP: 0.3333333333333333; select tv_series_0.num_of_seasons from movie as movie_0, tv_series as tv_series_0, writer as writer_0, writer as writer_1, written_by as written_by_0, written_by as written_by_1 where movie_0.title = "City" and writer_0.name = "Kevin Spacey" and movie_0.mid = written_by_0.msid and tv_series_0.sid = written_by_1.msid and writer_0.wid = writer_1.wid and writer_0.wid = written_by_0.wid and writer_1.wid = written_by_1.wid
TOT: 0.7444063746148798; TR: 0.7486788776773677; SMP: 0.3214285714285714; select tv_series_0.num_of_episodes from movie as movie_0, tv_series as tv_series_0, writer as writer_0, writer as writer_1, written_by as written_by_0, written_by as written_by_1, written_by as written_by_2 where movie_0.title = "City" and writer_0.name = "Kevin Spacey" and movie_0.mid = written_by_0.msid and tv_series_0.sid = written_by_2.msid and writer_0.wid = written_by_0.wid and writer_0.wid = written_by_1.wid and writer_1.wid = written_by_1.wid and writer_1.wid = written_by_2.wid
TOT: 0.7444063746148798; TR: 0.7486788776773677; SMP: 0.3214285714285714; select tv_series_0.num_of_seasons from movie as movie_0, tv_series as tv_series_0, writer as writer_0, writer as writer_1, written_by as written_by_0, written_by as written_by_1, written_by as written_by_2 where movie_0.title = "City" and writer_0.name = "Kevin Spacey" and movie_0.mid = written_by_0.msid and tv_series_0.sid = written_by_2.msid and writer_0.wid = written_by_0.wid and writer_0.wid = written_by_1.wid and writer_1.wid = written_by_1.wid and writer_1.wid = written_by_2.wid
TOT: 0.7421715366790288; TR: 0.7461328653323523; SMP: 0.35; select tv_series_0.num_of_episodes from made_by as made_by_0, made_by as made_by_1, movie as movie_0, producer as producer_0, tv_series as tv_series_0 where movie_0.title = "City" and producer_0.name = "Kevin Spacey" and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid and made_by_1.msid = tv_series_0.sid and made_by_1.pid = producer_0.pid
TOT: 0.7421715366790288; TR: 0.7461328653323523; SMP: 0.35; select tv_series_0.num_of_seasons from made_by as made_by_0, made_by as made_by_1, movie as movie_0, producer as producer_0, tv_series as tv_series_0 where movie_0.title = "City" and producer_0.name = "Kevin Spacey" and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid and made_by_1.msid = tv_series_0.sid and made_by_1.pid = producer_0.pid
TOT: 0.7421715366790288; TR: 0.7461328653323523; SMP: 0.35; select tv_series_0.num_of_episodes from directed_by as directed_by_0, directed_by as directed_by_1, director as director_0, movie as movie_0, tv_series as tv_series_0 where director_0.name = "Kevin Spacey" and movie_0.title = "City" and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and directed_by_1.did = director_0.did and directed_by_1.msid = tv_series_0.sid
TOT: 0.7421715366790288; TR: 0.7461328653323523; SMP: 0.35; select tv_series_0.num_of_seasons from directed_by as directed_by_0, directed_by as directed_by_1, director as director_0, movie as movie_0, tv_series as tv_series_0 where director_0.name = "Kevin Spacey" and movie_0.title = "City" and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and directed_by_1.did = director_0.did and directed_by_1.msid = tv_series_0.sid


02:33  INFO: ================
02:33  INFO: QUERY 124: Find the actors who played in the latest movie by "Quentin Tarantino"
02:33  INFO: ================
835. ROOT: ROOT; NA; ; (0) 
836. Find: CMT; NA; ; (0) 
837. actors: NT; NA; ; (0) actor.name(1.0):| actor(1.0):| movie.title(0.95):Actors; Actors; Actors; | cast.role(0.95):Actors; Actors; Actors; | tv_series.title(0.9):Actors; Actor; Actors Vs; | 
839. played: NT; NA; ; (0) tv_series.num_of_seasons(0.67):| director.did(0.66):| cast.role(0.66):| directed_by(0.64):| actor.name(0.63):| 
841. movie: NT; NA; ; (0) movie.title(1.0):| movie(1.0):| company.name(0.92):Movie; Movie Movie; Movies; | cast.role(0.87):Movie; Movie F; Movie AD; | keyword.keyword(0.81):movie-in-movie; b-movie; z-movie; | 
844. latest: FT; max; ; (0) 
845. Quentin Tarantino: VTTEXT; NA; ; (0) director.name(1.0):Quentin Tarantino; Quentin Tarantino; Quentin Tarrantino; | actor.name(1.0):Quentin Tarantino; Quentin Tarantino; Quentin Tarrantino; | producer.name(1.0):Quentin Tarantino; Quentin Tarantino; Quentin Tarrantino; | writer.name(1.0):Quentin Tarantino; Quentin Tarantino; Quentin Tarrantino; | cast.role(0.85):Quentin Tarrantino '; Quentin Tarrantino '; Quentin Tarrantino '; | 
Find, VB
the, DT
actors, NNS
who, WP
played, VBD
in, IN
the, DT
latest, JJS
movie, NN
by, IN
Quentin Tarantino, NNP
root(ROOT-0, Find-1)
det(actors-3, the-2)
dobj(Find-1, actors-3)
nsubj(played-5, who-4)
acl:relcl(actors-3, played-5)
case(movie-9, in-6)
det(movie-9, the-7)
amod(movie-9, latest-8)
nmod(played-5, movie-9)
case(Quentin Tarantino-11, by-10)
nmod(played-5, Quentin Tarantino-11)

PARSE TREE:(835) ROOT ROOT
    (836) Find CMT
        (837) actors NT
            (839) played NT
                (841) movie NT
                (845) Quentin Tarantino VTTEXT


===========
TRANSLATIONS
===========
TOT: 0.9994504823460912; NL: 0.9994504823460912; NL+AG: 0.9994504823460912; NL+QF: 0.9996167201687949; rels: []; projs: [actor_0.name]; preds: [director_0.name = "Quentin Tarantino"]; havings: []; superlative: [movie_0.title desc limit 1]; blanks: 0
TOT: 0.9994504823460912; NL: 0.9994504823460912; NL+AG: 0.9994504823460912; NL+QF: 0.9996056168185851; rels: []; projs: [actor_0.name]; preds: [actor_0.name = "Quentin Tarantino"]; havings: []; superlative: [movie_0.title desc limit 1]; blanks: 0
TOT: 0.9994504823460912; NL: 0.9994504823460912; NL+AG: 0.9994504823460912; NL+QF: 0.9995878617595685; rels: []; projs: [actor_0.name]; preds: [producer_0.name = "Quentin Tarantino"]; havings: []; superlative: [movie_0.title desc limit 1]; blanks: 0
TOT: 0.9994504823460912; NL: 0.9994504823460912; NL+AG: 0.9994504823460912; NL+QF: 0.9995878617595685; rels: []; projs: [actor_0.name]; preds: [writer_0.name = "Quentin Tarantino"]; havings: []; superlative: [movie_0.title desc limit 1]; blanks: 0
TOT: 0.9623189370883157; NL: 0.9623189370883157; NL+AG: 0.9623189370883157; NL+QF: 0.9745964896825821; rels: []; projs: [actor_0.name]; preds: [cast_0.role = "Quentin Tarrantino 'esque' Patient"]; havings: []; superlative: [movie_0.title desc limit 1]; blanks: 0
TOT: 0.953763081874401; NL: 0.953763081874401; NL+AG: 0.953763081874401; NL+QF: 0.9649655517238761; rels: []; projs: [actor_0.name]; preds: [company_0.name = "Movie",director_0.name = "Quentin Tarantino"]; havings: []; superlative: [company_0.id desc limit 1]; blanks: 0
TOT: 0.953763081874401; NL: 0.953763081874401; NL+AG: 0.953763081874401; NL+QF: 0.9645171766010417; rels: []; projs: [actor_0.name]; preds: [company_0.name = "Movie",actor_0.name = "Quentin Tarantino"]; havings: []; superlative: [company_0.id desc limit 1]; blanks: 0
TOT: 0.953763081874401; NL: 0.953763081874401; NL+AG: 0.953763081874401; NL+QF: 0.9643533749888112; rels: []; projs: [actor_0.name]; preds: [company_0.name = "Movie",producer_0.name = "Quentin Tarantino"]; havings: []; superlative: [company_0.id desc limit 1]; blanks: 0
TOT: 0.953763081874401; NL: 0.953763081874401; NL+AG: 0.953763081874401; NL+QF: 0.9643533749888112; rels: []; projs: [actor_0.name]; preds: [company_0.name = "Movie",writer_0.name = "Quentin Tarantino"]; havings: []; superlative: [company_0.id desc limit 1]; blanks: 0
TOT: 0.9370004823460912; NL: 0.9370004823460912; NL+AG: 0.9761781246225141; NL+QF: 0.9621167201687948; rels: []; projs: [cast_0.role]; preds: [director_0.name = "Quentin Tarantino"]; havings: []; superlative: [movie_0.title desc limit 1]; blanks: 0

===========
RESULTS
===========
TOT: 0.9929559775226303; TR: 0.9994504823460912; SMP: 0.35; select actor_0.name from actor as actor_0, cast as cast_0, made_by as made_by_0, movie as movie_0, producer as producer_0 where producer_0.name = "Quentin Tarantino" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid order by movie_0.title desc limit 1
TOT: 0.9929559775226303; TR: 0.9994504823460912; SMP: 0.35; select actor_0.name from actor as actor_0, cast as cast_0, movie as movie_0, writer as writer_0, written_by as written_by_0 where writer_0.name = "Quentin Tarantino" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and movie_0.mid = written_by_0.msid and writer_0.wid = written_by_0.wid order by movie_0.title desc limit 1
TOT: 0.9929559775226303; TR: 0.9994504823460912; SMP: 0.35; select actor_0.name from actor as actor_0, cast as cast_0, directed_by as directed_by_0, director as director_0, movie as movie_0 where director_0.name = "Quentin Tarantino" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid order by movie_0.title desc limit 1
TOT: 0.9929559775226303; TR: 0.9994504823460912; SMP: 0.35; select actor_1.name from actor as actor_0, actor as actor_1, cast as cast_0, cast as cast_1, movie as movie_0 where actor_0.name = "Quentin Tarantino" and actor_0.aid = cast_0.aid and actor_1.aid = cast_1.aid and cast_0.msid = movie_0.mid and cast_1.msid = movie_0.mid order by movie_0.title desc limit 1
TOT: 0.9929559775226303; TR: 0.9994504823460912; SMP: 0.35; select actor_0.name from actor as actor_0, actor as actor_1, cast as cast_0, cast as cast_1, movie as movie_0 where actor_1.name = "Quentin Tarantino" and actor_0.aid = cast_0.aid and actor_1.aid = cast_1.aid and cast_0.msid = movie_0.mid and cast_1.msid = movie_0.mid order by movie_0.title desc limit 1
TOT: 0.9927893108559637; TR: 0.9994504823460912; SMP: 0.3333333333333333; select actor_1.name from actor as actor_0, actor as actor_1, cast as cast_0, cast as cast_1, movie as movie_0, movie as movie_1 where actor_0.name = "Quentin Tarantino" and actor_0.aid = cast_0.aid and actor_1.aid = cast_1.aid and cast_0.msid = movie_0.mid and cast_1.msid = movie_1.mid and movie_0.mid = movie_1.mid order by movie_0.title desc limit 1
TOT: 0.9927893108559637; TR: 0.9994504823460912; SMP: 0.3333333333333333; select actor_0.name from actor as actor_0, actor as actor_1, cast as cast_0, cast as cast_1, movie as movie_0, movie as movie_1 where actor_1.name = "Quentin Tarantino" and actor_0.aid = cast_0.aid and actor_1.aid = cast_1.aid and cast_0.msid = movie_0.mid and cast_1.msid = movie_1.mid and movie_0.mid = movie_1.mid order by movie_0.title desc limit 1
TOT: 0.9926702632369161; TR: 0.9994504823460912; SMP: 0.3214285714285714; select actor_0.name from actor as actor_0, cast as cast_0, directed_by as directed_by_0, movie as movie_0, movie as movie_1, writer as writer_0, written_by as written_by_0 where writer_0.name = "Quentin Tarantino" and actor_0.aid = cast_0.aid and cast_0.msid = movie_1.mid and directed_by_0.msid = movie_0.mid and directed_by_0.msid = movie_1.mid and movie_0.mid = written_by_0.msid and writer_0.wid = written_by_0.wid order by movie_0.title desc limit 1
TOT: 0.9926702632369161; TR: 0.9994504823460912; SMP: 0.3214285714285714; select actor_0.name from actor as actor_0, cast as cast_0, directed_by as directed_by_0, directed_by as directed_by_1, director as director_0, movie as movie_0, tv_series as tv_series_0 where director_0.name = "Quentin Tarantino" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and directed_by_0.msid = movie_0.mid and directed_by_0.msid = tv_series_0.sid and directed_by_1.did = director_0.did and directed_by_1.msid = tv_series_0.sid order by movie_0.title desc limit 1
TOT: 0.9926702632369161; TR: 0.9994504823460912; SMP: 0.3214285714285714; select actor_0.name from actor as actor_0, cast as cast_0, movie as movie_0, movie as movie_1, writer as writer_0, written_by as written_by_0, written_by as written_by_1 where writer_0.name = "Quentin Tarantino" and actor_0.aid = cast_0.aid and cast_0.msid = movie_1.mid and movie_0.mid = written_by_0.msid and movie_0.mid = written_by_1.msid and movie_1.mid = written_by_0.msid and writer_0.wid = written_by_1.wid order by movie_0.title desc limit 1


02:34  INFO: ================
02:34  INFO: QUERY 2: What is the nationality of the actress "Ellen Page"?
02:34  INFO: ================
02:35  INFO: ================
02:35  INFO: QUERY 68: Find all movies about Iraq war
02:35  INFO: ================
858. ROOT: ROOT; NA; ; (0) 
859. Find: CMT; NA; ; (0) 
860. movies: NT; NA; all; (0) movie.title(1.0):| movie(1.0):| company.name(0.91):Movies; Movie; W Movies; | tv_series.title(0.8):Movies, Movies, Movi; Moon Movies; Movie Memories; | cast.role(0.79):Movie; KPC Movies; Movie F; | 
862. war: VTTEXT; NA; ; (0) actor.name(0.95):War; War; War; | genre.genre(0.88):War; War; Documentary; | tv_series.title(0.84):War; Car Wars; War Walks; | company.name(0.8):War; War on Want; NWA War Zone; | movie.title(0.77):Wars; Wars; War, Warfare, War; | 
864. Iraq: VTTEXT; NA; ; (0) director.nationality(1.0):Iraq; Iraq; Iraq; | actor.nationality(1.0):Iraq; Iraq; Iraq; | producer.nationality(1.0):Iraq; Iraq; Iraq; | writer.nationality(1.0):Iraq; Iraq; Iraq; | movie.title(0.97):Iraq; Iraq; Ski Iraq; | 
Find, VB
all, DT
movies, NNS
about, IN
Iraq, NNP
war, NN
root(ROOT-0, Find-1)
det(movies-3, all-2)
dobj(Find-1, movies-3)
case(war-6, about-4)
compound(war-6, Iraq-5)
nmod(Find-1, war-6)

PARSE TREE:(858) ROOT ROOT
    (859) Find CMT
        (860) movies NT
        (862) war VTTEXT
            (864) Iraq VTTEXT


===========
TRANSLATIONS
===========
TOT: 0.9833333333333334; NL: 0.9833333333333334; NL+AG: 0.9833333333333334; NL+QF: 0.9916129032258064; rels: []; projs: [movie_0.title]; preds: [actor_0.name = "War",director_0.nationality = "Iraq"]; havings: []; superlative: []; blanks: 0
TOT: 0.9833333333333334; NL: 0.9833333333333334; NL+AG: 0.9833333333333334; NL+QF: 0.9916129032258064; rels: []; projs: [movie_0.title]; preds: [actor_0.name = "War",actor_0.nationality = "Iraq"]; havings: []; superlative: []; blanks: 0
TOT: 0.9833333333333334; NL: 0.9833333333333334; NL+AG: 0.9833333333333334; NL+QF: 0.9916129032258064; rels: []; projs: [movie_0.title]; preds: [actor_0.name = "War",producer_0.nationality = "Iraq"]; havings: []; superlative: []; blanks: 0
TOT: 0.9833333333333334; NL: 0.9833333333333334; NL+AG: 0.9833333333333334; NL+QF: 0.9916129032258064; rels: []; projs: [movie_0.title]; preds: [actor_0.name = "War",writer_0.nationality = "Iraq"]; havings: []; superlative: []; blanks: 0
TOT: 0.9718217890235992; NL: 0.9718217890235992; NL+AG: 0.9718217890235992; NL+QF: 0.9840897512009844; rels: []; projs: [movie_0.title]; preds: [actor_0.name = "War",movie_0.title = "Iraq"]; havings: []; superlative: []; blanks: 0
TOT: 0.958747548595416; NL: 0.958747548595416; NL+AG: 0.958747548595416; NL+QF: 0.9739588569288197; rels: []; projs: [movie_0.title]; preds: [genre_0.genre = "War",director_0.nationality = "Iraq"]; havings: []; superlative: []; blanks: 0
TOT: 0.958747548595416; NL: 0.958747548595416; NL+AG: 0.958747548595416; NL+QF: 0.9739588569288197; rels: []; projs: [movie_0.title]; preds: [genre_0.genre = "War",actor_0.nationality = "Iraq"]; havings: []; superlative: []; blanks: 0
TOT: 0.958747548595416; NL: 0.958747548595416; NL+AG: 0.958747548595416; NL+QF: 0.9739588569288197; rels: []; projs: [movie_0.title]; preds: [genre_0.genre = "War",producer_0.nationality = "Iraq"]; havings: []; superlative: []; blanks: 0
TOT: 0.958747548595416; NL: 0.958747548595416; NL+AG: 0.958747548595416; NL+QF: 0.9739588569288197; rels: []; projs: [movie_0.title]; preds: [genre_0.genre = "War",writer_0.nationality = "Iraq"]; havings: []; superlative: []; blanks: 0
TOT: 0.9472360042856819; NL: 0.9472360042856819; NL+AG: 0.9472360042856819; NL+QF: 0.9664357049039976; rels: []; projs: [movie_0.title]; preds: [genre_0.genre = "War",movie_0.title = "Iraq"]; havings: []; superlative: []; blanks: 0

===========
RESULTS
===========
TOT: 0.9776666666666667; TR: 0.9833333333333334; SMP: 0.41666666666666663; select movie_0.title from actor as actor_0, cast as cast_0, movie as movie_0 where actor_0.name = "War" and actor_0.nationality = "Iraq" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid
TOT: 0.977; TR: 0.9833333333333334; SMP: 0.35; select movie_0.title from actor as actor_0, cast as cast_0, made_by as made_by_0, movie as movie_0, producer as producer_0 where actor_0.name = "War" and producer_0.nationality = "Iraq" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid
TOT: 0.977; TR: 0.9833333333333334; SMP: 0.35; select movie_0.title from actor as actor_0, cast as cast_0, movie as movie_0, writer as writer_0, written_by as written_by_0 where actor_0.name = "War" and writer_0.nationality = "Iraq" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and movie_0.mid = written_by_0.msid and writer_0.wid = written_by_0.wid
TOT: 0.977; TR: 0.9833333333333334; SMP: 0.35; select movie_0.title from actor as actor_0, cast as cast_0, directed_by as directed_by_0, director as director_0, movie as movie_0 where actor_0.name = "War" and director_0.nationality = "Iraq" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid
TOT: 0.9767142857142858; TR: 0.9833333333333334; SMP: 0.3214285714285714; select movie_0.title from actor as actor_0, cast as cast_0, directed_by as directed_by_0, movie as movie_0, movie as movie_1, writer as writer_0, written_by as written_by_0 where actor_0.name = "War" and writer_0.nationality = "Iraq" and actor_0.aid = cast_0.aid and cast_0.msid = movie_1.mid and directed_by_0.msid = movie_0.mid and directed_by_0.msid = movie_1.mid and movie_0.mid = written_by_0.msid and writer_0.wid = written_by_0.wid
TOT: 0.9767142857142858; TR: 0.9833333333333334; SMP: 0.3214285714285714; select movie_0.title from actor as actor_0, cast as cast_0, directed_by as directed_by_0, directed_by as directed_by_1, director as director_0, movie as movie_0, tv_series as tv_series_0 where actor_0.name = "War" and director_0.nationality = "Iraq" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and directed_by_0.msid = movie_0.mid and directed_by_0.msid = tv_series_0.sid and directed_by_1.did = director_0.did and directed_by_1.msid = tv_series_0.sid
TOT: 0.9767142857142858; TR: 0.9833333333333334; SMP: 0.3214285714285714; select movie_0.title from actor as actor_0, cast as cast_0, movie as movie_0, movie as movie_1, writer as writer_0, written_by as written_by_0, written_by as written_by_1 where actor_0.name = "War" and writer_0.nationality = "Iraq" and actor_0.aid = cast_0.aid and cast_0.msid = movie_1.mid and movie_0.mid = written_by_0.msid and movie_0.mid = written_by_1.msid and movie_1.mid = written_by_0.msid and writer_0.wid = written_by_1.wid
TOT: 0.9767142857142858; TR: 0.9833333333333334; SMP: 0.3214285714285714; select movie_0.title from actor as actor_0, cast as cast_0, cast as cast_1, made_by as made_by_0, movie as movie_0, producer as producer_0, tv_series as tv_series_0 where actor_0.name = "War" and producer_0.nationality = "Iraq" and actor_0.aid = cast_1.aid and cast_0.msid = movie_0.mid and cast_0.msid = tv_series_0.sid and cast_1.msid = tv_series_0.sid and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid
TOT: 0.9767142857142858; TR: 0.9833333333333334; SMP: 0.3214285714285714; select movie_0.title from actor as actor_0, cast as cast_0, directed_by as directed_by_0, director as director_0, made_by as made_by_0, movie as movie_0, movie as movie_1 where actor_0.name = "War" and director_0.nationality = "Iraq" and actor_0.aid = cast_0.aid and cast_0.msid = movie_1.mid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and made_by_0.msid = movie_0.mid and made_by_0.msid = movie_1.mid
TOT: 0.9767142857142858; TR: 0.9833333333333334; SMP: 0.3214285714285714; select movie_0.title from actor as actor_0, cast as cast_0, cast as cast_1, movie as movie_0, movie as movie_1, writer as writer_0, written_by as written_by_0 where actor_0.name = "War" and writer_0.nationality = "Iraq" and actor_0.aid = cast_1.aid and cast_0.msid = movie_0.mid and cast_0.msid = movie_1.mid and cast_1.msid = movie_1.mid and movie_0.mid = written_by_0.msid and writer_0.wid = written_by_0.wid


02:35  INFO: ================
02:35  INFO: QUERY 21: What is the genre of the movie "Jurassic Park"?
02:35  INFO: ================
02:37  INFO: ================
02:37  INFO: QUERY 75: List "James Bond" directors
02:37  INFO: ================
02:38  INFO: ================
02:38  INFO: QUERY 76: find all films in which "Rowan Atkinson" acted as "Mr. Bean"
02:38  INFO: ================
881. ROOT: ROOT; NA; ; (0) 
882. find: CMT; NA; ; (0) 
883. films: NT; NA; all; (0) movie.title(0.93):| movie(0.93):| company.name(0.87):Films Films; Films on Films; Film; | actor.name(0.76):| actor(0.76):| 
885. acted: NT; NA; ; (0) director.did(0.65):| movie.release_year(0.63):| actor.name(0.62):| actor(0.62):| genre.genre(0.62):| 
888. Rowan Atkinson: VTTEXT; NA; ; (0) director.name(0.99):Rowan Atkinson; Rowan Atkinson; Mr. Rowan Atkinson; | actor.name(0.99):Rowan Atkinson; Rowan Atkinson; Mr. Rowan Atkinson; | producer.name(0.99):Rowan Atkinson; Rowan Atkinson; Mr. Rowan Atkinson; | writer.name(0.99):Rowan Atkinson; Rowan Atkinson; Mr. Rowan Atkinson; | cast.role(0.92):Rowan Atkins; Rowan Atkins; Rowan Atkins; | 
889. Mr. Bean: VTTEXT; NA; ; (0) cast.role(1.0):Mr. Bean; Mr. Bean; Mr. Bean; | tv_series.title(0.81):Mr. Bean; Mr. Bean: The Animat; The Human Beans; | actor.name(0.67):John R. Bean; Bean; Sean Bean; | producer.name(0.67):John R. Bean; Sean Bean; Jason R. Bean; | movie.title(0.67):Mr. Bean's Holiday: ; Mr. Bean's Holiday: ; Mr. Bean's Holiday: ; | 
find, VB
all, DT
films, NNS
in, IN
which, WDT
Rowan Atkinson, NNP
acted, VBD
as, IN
Mr. Bean, NNP
root(ROOT-0, find-1)
det(films-3, all-2)
dobj(find-1, films-3)
case(which-5, in-4)
nmod(acted-7, which-5)
nsubj(acted-7, Rowan Atkinson-6)
acl:relcl(films-3, acted-7)
case(Mr. Bean-9, as-8)
nmod(acted-7, Mr. Bean-9)

PARSE TREE:(881) ROOT ROOT
    (882) find CMT
        (883) films NT
            (885) acted NT
                (888) Rowan Atkinson VTTEXT
                (889) Mr. Bean VTTEXT


===========
TRANSLATIONS
===========
TOT: 0.9164158210731735; NL: 0.9164158210731735; NL+AG: 0.9871437343523063; NL+QF: 0.958812134683703; rels: []; projs: [actor_0.name]; preds: [director_0.name = "Rowan Atkinson",cast_0.role = "Mr. Bean"]; havings: []; superlative: []; blanks: 0
TOT: 0.9164158210731735; NL: 0.9164158210731735; NL+AG: 0.9871437343523063; NL+QF: 0.9601937277285738; rels: []; projs: [actor_0.name]; preds: [actor_0.name = "Rowan Atkinson",cast_0.role = "Mr. Bean"]; havings: []; superlative: []; blanks: 0
TOT: 0.9164158210731735; NL: 0.9164158210731735; NL+AG: 0.9871437343523063; NL+QF: 0.958812134683703; rels: []; projs: [actor_0.name]; preds: [producer_0.name = "Rowan Atkinson",cast_0.role = "Mr. Bean"]; havings: []; superlative: []; blanks: 0
TOT: 0.9164158210731735; NL: 0.9164158210731735; NL+AG: 0.9871437343523063; NL+QF: 0.958812134683703; rels: []; projs: [actor_0.name]; preds: [writer_0.name = "Rowan Atkinson",cast_0.role = "Mr. Bean"]; havings: []; superlative: []; blanks: 0
TOT: 0.8938887370025999; NL: 0.8938887370025999; NL+AG: 0.9646166502817328; NL+QF: 0.9527652042260965; rels: []; projs: [actor_0.name]; preds: [cast_0.role = "Rowan Atkins",cast_0.role = "Mr. Bean"]; havings: []; superlative: []; blanks: 0
TOT: 0.8848368658048802; NL: 0.8848368658048802; NL+AG: 0.9502021733317914; NL+QF: 0.9551554384017344; rels: [actor]; projs: [movie_0.title]; preds: [director_0.name = "Rowan Atkinson",cast_0.role = "Mr. Bean"]; havings: []; superlative: []; blanks: 0
TOT: 0.8848368658048802; NL: 0.8848368658048802; NL+AG: 0.9502021733317914; NL+QF: 0.9613764744865461; rels: [actor]; projs: [movie_0.title]; preds: [actor_0.name = "Rowan Atkinson",cast_0.role = "Mr. Bean"]; havings: []; superlative: []; blanks: 0
TOT: 0.8848368658048802; NL: 0.8848368658048802; NL+AG: 0.9502021733317914; NL+QF: 0.953196179156069; rels: [actor]; projs: [movie_0.title]; preds: [producer_0.name = "Rowan Atkinson",cast_0.role = "Mr. Bean"]; havings: []; superlative: []; blanks: 0
TOT: 0.8848368658048802; NL: 0.8848368658048802; NL+AG: 0.9502021733317914; NL+QF: 0.953196179156069; rels: [actor]; projs: [movie_0.title]; preds: [writer_0.name = "Rowan Atkinson",cast_0.role = "Mr. Bean"]; havings: []; superlative: []; blanks: 0
TOT: 0.8803243658048803; NL: 0.8803243658048803; NL+AG: 0.9502021733317914; NL+QF: 0.9523917498915708; rels: []; projs: [movie_0.title]; preds: [director_0.name = "Rowan Atkinson",cast_0.role = "Mr. Bean"]; havings: []; superlative: []; blanks: 1

===========
RESULTS
===========
TOT: 0.9107516628624417; TR: 0.9164158210731735; SMP: 0.35; select actor_0.name from actor as actor_0, cast as cast_0, tv_series as tv_series_0, writer as writer_0, written_by as written_by_0 where cast_0.role = "Mr. Bean" and writer_0.name = "Rowan Atkinson" and actor_0.aid = cast_0.aid and cast_0.msid = tv_series_0.sid and tv_series_0.sid = written_by_0.msid and writer_0.wid = written_by_0.wid
TOT: 0.9107516628624417; TR: 0.9164158210731735; SMP: 0.35; select actor_0.name from actor as actor_0, cast as cast_0, made_by as made_by_0, movie as movie_0, producer as producer_0 where cast_0.role = "Mr. Bean" and producer_0.name = "Rowan Atkinson" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid
TOT: 0.9107516628624417; TR: 0.9164158210731735; SMP: 0.35; select actor_0.name from actor as actor_0, cast as cast_0, movie as movie_0, writer as writer_0, written_by as written_by_0 where cast_0.role = "Mr. Bean" and writer_0.name = "Rowan Atkinson" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and movie_0.mid = written_by_0.msid and writer_0.wid = written_by_0.wid
TOT: 0.9107516628624417; TR: 0.9164158210731735; SMP: 0.35; select actor_0.name from actor as actor_0, cast as cast_0, directed_by as directed_by_0, director as director_0, movie as movie_0 where cast_0.role = "Mr. Bean" and director_0.name = "Rowan Atkinson" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid
TOT: 0.9107516628624417; TR: 0.9164158210731735; SMP: 0.35; select actor_0.name from actor as actor_0, cast as cast_0, directed_by as directed_by_0, director as director_0, tv_series as tv_series_0 where cast_0.role = "Mr. Bean" and director_0.name = "Rowan Atkinson" and actor_0.aid = cast_0.aid and cast_0.msid = tv_series_0.sid and directed_by_0.did = director_0.did and directed_by_0.msid = tv_series_0.sid
TOT: 0.9107516628624417; TR: 0.9164158210731735; SMP: 0.35; select actor_0.name from actor as actor_0, cast as cast_0, made_by as made_by_0, producer as producer_0, tv_series as tv_series_0 where cast_0.role = "Mr. Bean" and producer_0.name = "Rowan Atkinson" and actor_0.aid = cast_0.aid and cast_0.msid = tv_series_0.sid and made_by_0.msid = tv_series_0.sid and made_by_0.pid = producer_0.pid
TOT: 0.9104659485767275; TR: 0.9164158210731735; SMP: 0.3214285714285714; select actor_0.name from actor as actor_0, cast as cast_0, directed_by as directed_by_0, movie as movie_0, movie as movie_1, writer as writer_0, written_by as written_by_0 where cast_0.role = "Mr. Bean" and writer_0.name = "Rowan Atkinson" and actor_0.aid = cast_0.aid and cast_0.msid = movie_1.mid and directed_by_0.msid = movie_0.mid and directed_by_0.msid = movie_1.mid and movie_0.mid = written_by_0.msid and writer_0.wid = written_by_0.wid
TOT: 0.9104659485767275; TR: 0.9164158210731735; SMP: 0.3214285714285714; select actor_0.name from actor as actor_0, cast as cast_0, directed_by as directed_by_0, directed_by as directed_by_1, director as director_0, movie as movie_0, tv_series as tv_series_0 where cast_0.role = "Mr. Bean" and director_0.name = "Rowan Atkinson" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and directed_by_0.msid = movie_0.mid and directed_by_0.msid = tv_series_0.sid and directed_by_1.did = director_0.did and directed_by_1.msid = tv_series_0.sid
TOT: 0.9104659485767275; TR: 0.9164158210731735; SMP: 0.3214285714285714; select actor_0.name from actor as actor_0, cast as cast_0, movie as movie_0, movie as movie_1, writer as writer_0, written_by as written_by_0, written_by as written_by_1 where cast_0.role = "Mr. Bean" and writer_0.name = "Rowan Atkinson" and actor_0.aid = cast_0.aid and cast_0.msid = movie_1.mid and movie_0.mid = written_by_0.msid and movie_0.mid = written_by_1.msid and movie_1.mid = written_by_0.msid and writer_0.wid = written_by_1.wid
TOT: 0.9104659485767275; TR: 0.9164158210731735; SMP: 0.3214285714285714; select actor_0.name from actor as actor_0, cast as cast_0, cast as cast_1, made_by as made_by_0, movie as movie_0, producer as producer_0, tv_series as tv_series_0 where cast_0.role = "Mr. Bean" and producer_0.name = "Rowan Atkinson" and actor_0.aid = cast_1.aid and cast_0.msid = movie_0.mid and cast_0.msid = tv_series_0.sid and cast_1.msid = tv_series_0.sid and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid


02:39  INFO: ================
02:39  INFO: QUERY 112: How many actors from China have acted in "Rush Hour 3"
02:39  INFO: ================
02:40  INFO: ================
02:40  INFO: QUERY 78: where is the director of "The Past" from
02:40  INFO: ================
903. ROOT: ROOT; NA; ; (0) 
906. director: NT; NA; ; (0) director.name(1.0):| director(1.0):| movie.title(0.95):Director; Director; Director; | company.name(0.93):Director; Directors; Directors; | writer.name(0.9):Director; Director X; Director X.; | 
908. The Past: VTTEXT; NA; ; (0) cast.role(1.0):The Past; The Past; The Past; | movie.title(0.98):The Past; The Past; Fix the Past; | tv_series.title(0.71):Ancyal/The Past; Out of the Past; Out of the Past; | keyword.keyword(0.68):the-past; past; stuck-in-the-past; | director.name(0.62):The Nostalgia Plotho; | 
where, WRB
is, VBZ
the, DT
director, NN
of, IN
The Past, NNP
from, IN
advmod(is-2, where-1)
root(ROOT-0, is-2)
det(director-4, the-3)
nsubj(is-2, director-4)
case(The Past-6, of-5)
nmod(director-4, The Past-6)
dep(is-2, from-7)

PARSE TREE:(903) ROOT ROOT
    (906) director NT
        (908) The Past VTTEXT


===========
TRANSLATIONS
===========
TOT: 0.7499999999999999; NL: 0.7499999999999999; NL+AG: 0.9902439024390243; NL+QF: 0.95; rels: []; projs: [director_0.name]; preds: [cast_0.role = "The Past"]; havings: []; superlative: []; blanks: 0
TOT: 0.7398862017608732; NL: 0.7398862017608732; NL+AG: 0.9801301041998975; NL+QF: 0.9497358385131953; rels: []; projs: [director_0.name]; preds: [movie_0.title = "The Past"]; havings: []; superlative: []; blanks: 0
TOT: 0.6035533905932737; NL: 0.6035533905932737; NL+AG: 0.9804878048780488; NL+QF: 0.9; rels: []; projs: [director_0.name]; preds: [tv_series_0.title = "Ancyal/The Past"]; havings: []; superlative: []; blanks: 0
TOT: 0.5892098890831532; NL: 0.5892098890831532; NL+AG: 0.9804878048780488; NL+QF: 0.9; rels: []; projs: [director_0.name]; preds: [keyword_0.keyword = "the-past"]; havings: []; superlative: []; blanks: 0
TOT: 0.5598898934004561; NL: 0.5598898934004561; NL+AG: 0.9804878048780488; NL+QF: 0.9; rels: []; projs: [director_0.name]; preds: [director_0.name = "The Nostalgia Plothole of Muppets Past"]; havings: []; superlative: []; blanks: 0
TOT: 0.55; NL: 0.55; NL+AG: 0.9212283042933342; NL+QF: 0.9084748604691878; rels: []; projs: [director_0.name]; preds: []; havings: []; superlative: []; blanks: 1

===========
RESULTS
===========
TOT: 0.74625; TR: 0.7499999999999999; SMP: 0.375; select director_0.name from cast as cast_0, directed_by as directed_by_0, director as director_0, movie as movie_0 where cast_0.role = "The Past" and cast_0.msid = movie_0.mid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid
TOT: 0.74625; TR: 0.7499999999999999; SMP: 0.375; select director_0.name from cast as cast_0, directed_by as directed_by_0, director as director_0, tv_series as tv_series_0 where cast_0.role = "The Past" and cast_0.msid = tv_series_0.sid and directed_by_0.did = director_0.did and directed_by_0.msid = tv_series_0.sid
TOT: 0.7458333333333332; TR: 0.7499999999999999; SMP: 0.3333333333333333; select director_0.name from cast as cast_0, directed_by as directed_by_0, director as director_0, made_by as made_by_0, tv_series as tv_series_0, tv_series as tv_series_1 where cast_0.role = "The Past" and cast_0.msid = tv_series_1.sid and directed_by_0.did = director_0.did and directed_by_0.msid = tv_series_0.sid and made_by_0.msid = tv_series_0.sid and made_by_0.msid = tv_series_1.sid
TOT: 0.7458333333333332; TR: 0.7499999999999999; SMP: 0.3333333333333333; select director_0.name from cast as cast_0, directed_by as directed_by_0, director as director_0, movie as movie_0, tags as tags_0, tv_series as tv_series_0 where cast_0.role = "The Past" and cast_0.msid = tv_series_0.sid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and movie_0.mid = tags_0.msid and tags_0.msid = tv_series_0.sid
TOT: 0.7458333333333332; TR: 0.7499999999999999; SMP: 0.3333333333333333; select director_0.name from cast as cast_0, classification as classification_0, directed_by as directed_by_0, director as director_0, movie as movie_0, movie as movie_1 where cast_0.role = "The Past" and cast_0.msid = movie_1.mid and classification_0.msid = movie_0.mid and classification_0.msid = movie_1.mid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid
TOT: 0.7458333333333332; TR: 0.7499999999999999; SMP: 0.3333333333333333; select director_0.name from cast as cast_0, directed_by as directed_by_0, director as director_0, made_by as made_by_0, movie as movie_0, tv_series as tv_series_0 where cast_0.role = "The Past" and cast_0.msid = tv_series_0.sid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and made_by_0.msid = movie_0.mid and made_by_0.msid = tv_series_0.sid
TOT: 0.7458333333333332; TR: 0.7499999999999999; SMP: 0.3333333333333333; select director_0.name from cast as cast_0, directed_by as directed_by_0, director as director_0, movie as movie_0, tv_series as tv_series_0, written_by as written_by_0 where cast_0.role = "The Past" and cast_0.msid = tv_series_0.sid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and movie_0.mid = written_by_0.msid and tv_series_0.sid = written_by_0.msid
TOT: 0.7458333333333332; TR: 0.7499999999999999; SMP: 0.3333333333333333; select director_0.name from cast as cast_0, directed_by as directed_by_0, director as director_0, movie as movie_0, movie as movie_1, written_by as written_by_0 where cast_0.role = "The Past" and cast_0.msid = movie_1.mid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and movie_0.mid = written_by_0.msid and movie_1.mid = written_by_0.msid
TOT: 0.7458333333333332; TR: 0.7499999999999999; SMP: 0.3333333333333333; select director_0.name from cast as cast_0, copyright as copyright_0, directed_by as directed_by_0, director as director_0, movie as movie_0, tv_series as tv_series_0 where cast_0.role = "The Past" and cast_0.msid = tv_series_0.sid and copyright_0.msid = movie_0.mid and copyright_0.msid = tv_series_0.sid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid
TOT: 0.7458333333333332; TR: 0.7499999999999999; SMP: 0.3333333333333333; select director_0.name from cast as cast_0, directed_by as directed_by_0, director as director_0, made_by as made_by_0, movie as movie_0, tv_series as tv_series_0 where cast_0.role = "The Past" and cast_0.msid = movie_0.mid and directed_by_0.did = director_0.did and directed_by_0.msid = tv_series_0.sid and made_by_0.msid = movie_0.mid and made_by_0.msid = tv_series_0.sid


02:40  INFO: ================
02:40  INFO: QUERY 4: Find all actors born in "Los Angeles"
02:40  INFO: ================
02:41  INFO: ================
02:41  INFO: QUERY 42: What are all the tv series created by "Shonda Rhimes"?
02:41  INFO: ================
920. ROOT: ROOT; NA; ; (0) 
921. What: CMT; NA; ; (0) 
923. series: NT; NA; all; (0) tv_series.title(1.0):| tv_series(1.0):| keyword.keyword(0.9):series; series-in-series; tv-series; | cast.role(0.85):Serie; Serie; Serie; | company.name(0.84):Series+; G-Series; T-Series; | 
926. tv: NT; NA; ; (0) tv_series.title(1.0):| tv_series(1.0):| movie.title(0.69):| movie(0.69):| tv_series.num_of_episodes(0.67):| 
927. created: NT; NA; ; (0) made_by(0.79):| producer.name(0.78):| producer(0.78):| directed_by(0.71):| cast.role(0.69):| 
928. Shonda Rhimes: VTTEXT; NA; ; (0) producer.name(0.96):Shonda Rhimes; Shonda Rhimes; Brandon Rhimes; | actor.name(0.96):Shonda Rhimes; Shonda Rhimes; Shonda Tamez; | director.name(0.95):Shonda Rhimes; Shonda Rhimes; Shonda Harris; | writer.name(0.95):Shonda Rhimes; Shonda Rhimes; Shonda Harris; | cast.role(0.58):Shonda Wessun; Shonda Wessun; Rett Rhimes; | 
What, WP
are, VBP
all, PDT
the, DT
tv, NN
series, NN
created, VBN
by, IN
Shonda Rhimes, NNP
root(ROOT-0, What-1)
cop(What-1, are-2)
det:predet(series-6, all-3)
det(series-6, the-4)
compound(series-6, tv-5)
nsubj(What-1, series-6)
acl(series-6, created-7)
case(Shonda Rhimes-9, by-8)
nmod(created-7, Shonda Rhimes-9)

PARSE TREE:(920) ROOT ROOT
    (921) What CMT
        (923) series NT
            (926) tv NT
            (927) created NT
                (928) Shonda Rhimes VTTEXT


===========
TRANSLATIONS
===========
TOT: 0.918400420507345; NL: 0.918400420507345; NL+AG: 0.9524893943416366; NL+QF: 0.968998772191542; rels: [made_by]; projs: [tv_series_0.title]; preds: [producer_0.name = "Shonda Rhimes"]; havings: []; superlative: []; blanks: 0
TOT: 0.9173590598614981; NL: 0.9173590598614981; NL+AG: 0.9514480336957898; NL+QF: 0.946872706574332; rels: [made_by]; projs: [tv_series_0.title]; preds: [actor_0.name = "Shonda Rhimes"]; havings: []; superlative: []; blanks: 0
TOT: 0.9156170871740117; NL: 0.9156170871740117; NL+AG: 0.9524893943416366; NL+QF: 0.9475669470048967; rels: [producer]; projs: [tv_series_0.title]; preds: [producer_0.name = "Shonda Rhimes"]; havings: []; superlative: []; blanks: 0
TOT: 0.9145757265281648; NL: 0.9145757265281648; NL+AG: 0.9514480336957898; NL+QF: 0.946872706574332; rels: [producer]; projs: [tv_series_0.title]; preds: [actor_0.name = "Shonda Rhimes"]; havings: []; superlative: []; blanks: 0
TOT: 0.9137166666666667; NL: 0.9137166666666667; NL+AG: 0.9478056405009584; NL+QF: 0.9444444444444445; rels: [made_by]; projs: [tv_series_0.title]; preds: [director_0.name = "Shonda Rhimes"]; havings: []; superlative: []; blanks: 0
TOT: 0.9137166666666667; NL: 0.9137166666666667; NL+AG: 0.9478056405009584; NL+QF: 0.955873888888889; rels: [made_by]; projs: [tv_series_0.title]; preds: [writer_0.name = "Shonda Rhimes"]; havings: []; superlative: []; blanks: 0
TOT: 0.9109333333333334; NL: 0.9109333333333334; NL+AG: 0.9478056405009584; NL+QF: 0.9444444444444445; rels: [producer]; projs: [tv_series_0.title]; preds: [director_0.name = "Shonda Rhimes"]; havings: []; superlative: []; blanks: 0
TOT: 0.9109333333333334; NL: 0.9109333333333334; NL+AG: 0.9478056405009584; NL+QF: 0.9444444444444445; rels: [producer]; projs: [tv_series_0.title]; preds: [writer_0.name = "Shonda Rhimes"]; havings: []; superlative: []; blanks: 0
TOT: 0.8925837538406783; NL: 0.8925837538406783; NL+AG: 0.9524893943416366; NL+QF: 0.9475669470048967; rels: [directed_by]; projs: [tv_series_0.title]; preds: [producer_0.name = "Shonda Rhimes"]; havings: []; superlative: []; blanks: 0
TOT: 0.8915423931948315; NL: 0.8915423931948315; NL+AG: 0.9514480336957898; NL+QF: 0.946872706574332; rels: [directed_by]; projs: [tv_series_0.title]; preds: [actor_0.name = "Shonda Rhimes"]; havings: []; superlative: []; blanks: 0

===========
RESULTS
===========
TOT: 0.9133830829689382; TR: 0.918400420507345; SMP: 0.41666666666666663; select tv_series_0.title from made_by as made_by_0, producer as producer_0, tv_series as tv_series_0 where producer_0.name = "Shonda Rhimes" and made_by_0.msid = tv_series_0.sid and made_by_0.pid = producer_0.pid


02:42  INFO: ================
02:42  INFO: QUERY 92: What is the number of movies produced in 2013?
02:42  INFO: ================
02:43  INFO: ================
02:43  INFO: QUERY 101: How many movies did "Quentin Tarantino" direct after 2010?
02:43  INFO: ================
02:44  INFO: ================
02:44  INFO: QUERY 80: what are the genres of movies directed by "Asghar Farhadi"
02:44  INFO: ================
952. ROOT: ROOT; NA; ; (0) 
953. directed: NT; NA; ; (0) directed_by(1.0):| director.name(0.72):| director(0.72):| producer.name(0.69):| producer(0.69):| 
954. what: CMT; NA; ; (0) 
956. genres: NT; NA; ; (0) genre.genre(1.0):| genre(1.0):| movie.title(0.84):Genre; Genre; All Genres; | keyword.keyword(0.78):genre; sui-genres; genre-mix; | movie.title(0.73):| 
958. movies: NT; NA; ; (0) movie.title(1.0):| movie(1.0):| company.name(0.91):Movies; Movie; W Movies; | tv_series.title(0.8):Movies, Movies, Movi; Moon Movies; Movie Memories; | cast.role(0.79):Movie; KPC Movies; Movie F; | 
960. Asghar Farhadi: VTTEXT; NA; ; (0) company.name(0.99):Asghar Farhadi; Asghar Farhadi; Farhadi Film Product; | actor.name(0.98):Asghar Farhadi; Asghar Farhadi; Farhad Asghar; | writer.name(0.97):Asghar Farhadi; Asghar Farhadi; Asghar Saffar; | director.name(0.97):Asghar Farhadi; Asghar Farhadi; Asghar Tharani; | producer.name(0.97):Asghar Farhadi; Asghar Farhadi; Asghar Bichareh; | 
what, WP
are, VBP
the, DT
genres, NNS
of, IN
movies, NNS
directed, VBN
by, IN
Asghar Farhadi, NNP
dobj(directed-7, what-1)
auxpass(directed-7, are-2)
det(genres-4, the-3)
nsubjpass(directed-7, genres-4)
case(movies-6, of-5)
nmod(genres-4, movies-6)
root(ROOT-0, directed-7)
case(Asghar Farhadi-9, by-8)
nmod(directed-7, Asghar Farhadi-9)

PARSE TREE:(952) ROOT ROOT
    (954) what CMT
        (956) genres NT
            (958) movies NT
            (953) directed NT
                (960) Asghar Farhadi VTTEXT


===========
TRANSLATIONS
===========
TOT: 0.99875; NL: 0.99875; NL+AG: 0.99875; NL+QF: 0.9990625; rels: [movie,directed_by]; projs: [genre_0.genre]; preds: [company_0.name = "Asghar Farhadi"]; havings: []; superlative: []; blanks: 0
TOT: 0.9962218671906791; NL: 0.9962218671906791; NL+AG: 0.9962218671906791; NL+QF: 0.9971664003930094; rels: [movie,directed_by]; projs: [genre_0.genre]; preds: [actor_0.name = "Asghar Farhadi"]; havings: []; superlative: []; blanks: 0
TOT: 0.9928256023976845; NL: 0.9928256023976845; NL+AG: 0.9928256023976845; NL+QF: 0.9949359522381948; rels: [movie,directed_by]; projs: [genre_0.genre]; preds: [writer_0.name = "Asghar Farhadi"]; havings: []; superlative: []; blanks: 0
TOT: 0.9926470588235294; NL: 0.9926470588235294; NL+AG: 0.9926470588235294; NL+QF: 0.9955832446100612; rels: [movie,directed_by]; projs: [genre_0.genre]; preds: [director_0.name = "Asghar Farhadi"]; havings: []; superlative: []; blanks: 0
TOT: 0.9921498585142509; NL: 0.9921498585142509; NL+AG: 0.9921498585142509; NL+QF: 0.9941123938856882; rels: [movie,directed_by]; projs: [genre_0.genre]; preds: [producer_0.name = "Asghar Farhadi"]; havings: []; superlative: []; blanks: 0
TOT: 0.9321250000000001; NL: 0.9321250000000001; NL+AG: 0.9766180516830896; NL+QF: 0.9660047742628992; rels: [movie,directed_by]; projs: [movie_0.title]; preds: [company_0.name = "Asghar Farhadi"]; havings: []; superlative: []; blanks: 0
TOT: 0.9321250000000001; NL: 0.9321250000000001; NL+AG: 0.9766180516830896; NL+QF: 0.9660047742628992; rels: [movie,directed_by]; projs: [movie_0.title]; preds: [company_0.name = "Asghar Farhadi"]; havings: []; superlative: []; blanks: 0
TOT: 0.9295968671906791; NL: 0.9295968671906791; NL+AG: 0.9740899188737688; NL+QF: 0.9682962352727915; rels: [movie,directed_by]; projs: [movie_0.title]; preds: [actor_0.name = "Asghar Farhadi"]; havings: []; superlative: []; blanks: 0
TOT: 0.9295968671906791; NL: 0.9295968671906791; NL+AG: 0.9740899188737688; NL+QF: 0.9682962352727915; rels: [movie,directed_by]; projs: [movie_0.title]; preds: [actor_0.name = "Asghar Farhadi"]; havings: []; superlative: []; blanks: 0
TOT: 0.9279; NL: 0.9279; NL+AG: 0.9662656727817891; NL+QF: 0.9615625; rels: [movie,director]; projs: [genre_0.genre]; preds: [company_0.name = "Asghar Farhadi"]; havings: []; superlative: []; blanks: 0

===========
RESULTS
===========
TOT: 0.9919767857142857; TR: 0.99875; SMP: 0.3214285714285714; select genre_0.genre from classification as classification_0, company as company_0, copyright as copyright_0, directed_by as directed_by_0, genre as genre_0, movie as movie_0, tv_series as tv_series_0 where company_0.name = "Asghar Farhadi" and classification_0.gid = genre_0.gid and classification_0.msid = movie_0.mid and company_0.id = copyright_0.cid and copyright_0.msid = tv_series_0.sid and directed_by_0.msid = movie_0.mid and directed_by_0.msid = tv_series_0.sid
TOT: 0.9919767857142857; TR: 0.99875; SMP: 0.3214285714285714; select genre_0.genre from classification as classification_0, company as company_0, copyright as copyright_0, directed_by as directed_by_0, genre as genre_0, movie as movie_0, movie as movie_1 where company_0.name = "Asghar Farhadi" and classification_0.gid = genre_0.gid and classification_0.msid = movie_1.mid and company_0.id = copyright_0.cid and copyright_0.msid = movie_0.mid and directed_by_0.msid = movie_0.mid and directed_by_0.msid = movie_1.mid
TOT: 0.9919767857142857; TR: 0.99875; SMP: 0.3214285714285714; select genre_0.genre from classification as classification_0, company as company_0, copyright as copyright_0, directed_by as directed_by_0, genre as genre_0, movie as movie_0, tv_series as tv_series_0 where company_0.name = "Asghar Farhadi" and classification_0.gid = genre_0.gid and classification_0.msid = tv_series_0.sid and company_0.id = copyright_0.cid and copyright_0.msid = movie_0.mid and directed_by_0.msid = movie_0.mid and directed_by_0.msid = tv_series_0.sid
TOT: 0.989473934233058; TR: 0.9962218671906791; SMP: 0.3214285714285714; select genre_0.genre from actor as actor_0, cast as cast_0, classification as classification_0, directed_by as directed_by_0, genre as genre_0, movie as movie_0, tv_series as tv_series_0 where actor_0.name = "Asghar Farhadi" and actor_0.aid = cast_0.aid and cast_0.msid = tv_series_0.sid and classification_0.gid = genre_0.gid and classification_0.msid = movie_0.mid and directed_by_0.msid = movie_0.mid and directed_by_0.msid = tv_series_0.sid
TOT: 0.989473934233058; TR: 0.9962218671906791; SMP: 0.3214285714285714; select genre_0.genre from actor as actor_0, cast as cast_0, classification as classification_0, directed_by as directed_by_0, genre as genre_0, movie as movie_0, movie as movie_1 where actor_0.name = "Asghar Farhadi" and actor_0.aid = cast_0.aid and cast_0.msid = movie_1.mid and classification_0.gid = genre_0.gid and classification_0.msid = movie_0.mid and directed_by_0.msid = movie_0.mid and directed_by_0.msid = movie_1.mid
TOT: 0.989473934233058; TR: 0.9962218671906791; SMP: 0.3214285714285714; select genre_0.genre from actor as actor_0, cast as cast_0, classification as classification_0, directed_by as directed_by_0, genre as genre_0, movie as movie_0, tv_series as tv_series_0 where actor_0.name = "Asghar Farhadi" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and classification_0.gid = genre_0.gid and classification_0.msid = tv_series_0.sid and directed_by_0.msid = movie_0.mid and directed_by_0.msid = tv_series_0.sid
TOT: 0.9862205882352941; TR: 0.9926470588235294; SMP: 0.35; select genre_0.genre from classification as classification_0, directed_by as directed_by_0, director as director_0, genre as genre_0, movie as movie_0 where director_0.name = "Asghar Farhadi" and classification_0.gid = genre_0.gid and classification_0.msid = movie_0.mid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid
TOT: 0.9861116320879934; TR: 0.9928256023976845; SMP: 0.3214285714285714; select genre_0.genre from classification as classification_0, directed_by as directed_by_0, genre as genre_0, movie as movie_0, tv_series as tv_series_0, writer as writer_0, written_by as written_by_0 where writer_0.name = "Asghar Farhadi" and classification_0.gid = genre_0.gid and classification_0.msid = movie_0.mid and directed_by_0.msid = movie_0.mid and directed_by_0.msid = tv_series_0.sid and tv_series_0.sid = written_by_0.msid and writer_0.wid = written_by_0.wid
TOT: 0.9861116320879934; TR: 0.9928256023976845; SMP: 0.3214285714285714; select genre_0.genre from classification as classification_0, directed_by as directed_by_0, genre as genre_0, movie as movie_0, tv_series as tv_series_0, writer as writer_0, written_by as written_by_0 where writer_0.name = "Asghar Farhadi" and classification_0.gid = genre_0.gid and classification_0.msid = tv_series_0.sid and directed_by_0.msid = movie_0.mid and directed_by_0.msid = tv_series_0.sid and movie_0.mid = written_by_0.msid and writer_0.wid = written_by_0.wid
TOT: 0.9861116320879934; TR: 0.9928256023976845; SMP: 0.3214285714285714; select genre_0.genre from classification as classification_0, directed_by as directed_by_0, genre as genre_0, movie as movie_0, movie as movie_1, writer as writer_0, written_by as written_by_0 where writer_0.name = "Asghar Farhadi" and classification_0.gid = genre_0.gid and classification_0.msid = movie_0.mid and directed_by_0.msid = movie_0.mid and directed_by_0.msid = movie_1.mid and movie_1.mid = written_by_0.msid and writer_0.wid = written_by_0.wid


02:45  INFO: ================
02:45  INFO: QUERY 86: List all the directors of movies about nuclear weapons
02:45  INFO: ================
963. ROOT: ROOT; NA; ; (0) 
964. List: CMT; NA; ; (0) 
965. directors: NT; NA; all; (0) director.name(1.0):| director(1.0):| company.name(0.94):Directors; Directors; Director; | movie.title(0.89):Director; Director; Director; | writer.name(0.84):Director; Director X; Director X.; | 
968. movies: NT; NA; ; (0) movie.title(1.0):| movie(1.0):| company.name(0.91):Movies; Movie; W Movies; | tv_series.title(0.8):Movies, Movies, Movi; Moon Movies; Movie Memories; | cast.role(0.79):Movie; KPC Movies; Movie F; | 
970. weapons: VTTEXT; NA; ; (0) movie.title(0.95):Weapons; Weapons; Weapons; | cast.role(0.95):Weapons; Weapons; Weapons; | keyword.keyword(0.82):weapon; weapons-deal; weapon-x; | actor.name(0.72):The Weapons; Leatha Weapons; Letha Weapons; | tv_series.title(0.68):Weapons of Power; Weapons at War; Secrets Weapons; | 
972. nuclear: VTTEXT; NA; ; (0) company.name(0.98):Nuclear; Nuclear; Nuclear Cat; | keyword.keyword(0.94):nuclear; nuclear-leak; nuclear-war; | movie.title(0.93):Nuclear; Nuclear Leak; Nuclear Day; | cast.role(0.79):Nuclear dealer; Nuclear Man; Nuclear Man; | tv_series.title(0.74):Nuclear Ned; Nuclear Coleslaw; Nuclear Family; | 
List, VB
all, PDT
the, DT
directors, NNS
of, IN
movies, NNS
about, IN
nuclear, JJ
weapons, NNS
root(ROOT-0, List-1)
det:predet(directors-4, all-2)
det(directors-4, the-3)
dobj(List-1, directors-4)
case(movies-6, of-5)
nmod(directors-4, movies-6)
case(weapons-9, about-7)
amod(weapons-9, nuclear-8)
nmod(movies-6, weapons-9)

PARSE TREE:(963) ROOT ROOT
    (964) List CMT
        (965) directors NT
            (968) movies NT
                (970) weapons VTTEXT
                    (972) nuclear VTTEXT


===========
TRANSLATIONS
===========
TOT: 0.9224899167310372; NL: 0.9224899167310372; NL+AG: 0.9712712001628385; NL+QF: 0.9640807183135474; rels: [movie]; projs: [director_0.name]; preds: [movie_0.title = "Weapons",company_0.name = "Nuclear"]; havings: []; superlative: []; blanks: 0
TOT: 0.9224899167310372; NL: 0.9224899167310372; NL+AG: 0.9712712001628385; NL+QF: 0.9586973849802141; rels: [movie]; projs: [director_0.name]; preds: [cast_0.role = "Weapons",company_0.name = "Nuclear"]; havings: []; superlative: []; blanks: 0
TOT: 0.9119945009879753; NL: 0.9119945009879753; NL+AG: 0.9607757844197766; NL+QF: 0.9557854590743148; rels: [movie]; projs: [director_0.name]; preds: [movie_0.title = "Weapons",keyword_0.keyword = "nuclear"]; havings: []; superlative: []; blanks: 0
TOT: 0.9119945009879753; NL: 0.9119945009879753; NL+AG: 0.9607757844197766; NL+QF: 0.9504021257409815; rels: [movie]; projs: [director_0.name]; preds: [cast_0.role = "Weapons",keyword_0.keyword = "nuclear"]; havings: []; superlative: []; blanks: 0
TOT: 0.9107354699344048; NL: 0.9107354699344048; NL+AG: 0.9595167533662061; NL+QF: 0.9572861555593704; rels: [movie]; projs: [director_0.name]; preds: [movie_0.title = "Weapons",movie_0.title = "Nuclear"]; havings: []; superlative: []; blanks: 0
TOT: 0.9107354699344048; NL: 0.9107354699344048; NL+AG: 0.9595167533662061; NL+QF: 0.9562199011462025; rels: [movie]; projs: [director_0.name]; preds: [cast_0.role = "Weapons",movie_0.title = "Nuclear"]; havings: []; superlative: []; blanks: 0
TOT: 0.8980248772011149; NL: 0.8980248772011149; NL+AG: 0.9712712001628385; NL+QF: 0.9586973849802141; rels: [movie]; projs: [director_0.name]; preds: [keyword_0.keyword = "weapon",company_0.name = "Nuclear"]; havings: []; superlative: []; blanks: 0
TOT: 0.8943649167310371; NL: 0.8943649167310371; NL+AG: 0.9618805895128262; NL+QF: 0.9624989881443349; rels: [movie]; projs: [director_0.name]; preds: [company_0.name = "Nuclear"]; havings: []; superlative: []; blanks: 1
TOT: 0.8934493851283541; NL: 0.8934493851283541; NL+AG: 0.9238723401764212; NL+QF: 0.9330520615135066; rels: [movie]; projs: [movie_0.mid]; preds: [movie_0.title = "Director",movie_0.title = "Weapons",company_0.name = "Nuclear"]; havings: []; superlative: []; blanks: 0
TOT: 0.8934493851283541; NL: 0.8934493851283541; NL+AG: 0.9238723401764212; NL+QF: 0.9337381432382907; rels: [movie]; projs: [movie_0.mid]; preds: [movie_0.title = "Director",cast_0.role = "Weapons",company_0.name = "Nuclear"]; havings: []; superlative: []; blanks: 0

===========
RESULTS
===========
TOT: 0.9167650175637267; TR: 0.9224899167310372; SMP: 0.35; select director_0.name from company as company_0, copyright as copyright_0, directed_by as directed_by_0, director as director_0, movie as movie_0 where company_0.name = "Nuclear" and movie_0.title = "Weapons" and company_0.id = copyright_0.cid and copyright_0.msid = movie_0.mid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid
TOT: 0.9165983508970601; TR: 0.9224899167310372; SMP: 0.3333333333333333; select director_0.name from cast as cast_0, company as company_0, copyright as copyright_0, directed_by as directed_by_0, director as director_0, movie as movie_0 where cast_0.role = "Weapons" and company_0.name = "Nuclear" and cast_0.msid = movie_0.mid and company_0.id = copyright_0.cid and copyright_0.msid = movie_0.mid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid
TOT: 0.9164793032780125; TR: 0.9224899167310372; SMP: 0.3214285714285714; select director_0.name from company as company_0, copyright as copyright_0, directed_by as directed_by_0, director as director_0, made_by as made_by_0, movie as movie_0, tv_series as tv_series_0 where company_0.name = "Nuclear" and movie_0.title = "Weapons" and company_0.id = copyright_0.cid and copyright_0.msid = tv_series_0.sid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and made_by_0.msid = movie_0.mid and made_by_0.msid = tv_series_0.sid
TOT: 0.9164793032780125; TR: 0.9224899167310372; SMP: 0.3214285714285714; select director_0.name from company as company_0, copyright as copyright_0, directed_by as directed_by_0, directed_by as directed_by_1, director as director_0, movie as movie_0, tv_series as tv_series_0 where company_0.name = "Nuclear" and movie_0.title = "Weapons" and company_0.id = copyright_0.cid and copyright_0.msid = tv_series_0.sid and directed_by_0.msid = movie_0.mid and directed_by_0.msid = tv_series_0.sid and directed_by_1.did = director_0.did and directed_by_1.msid = movie_0.mid
TOT: 0.9164793032780125; TR: 0.9224899167310372; SMP: 0.3214285714285714; select director_0.name from company as company_0, copyright as copyright_0, directed_by as directed_by_0, director as director_0, movie as movie_0, movie as movie_1, tags as tags_0 where company_0.name = "Nuclear" and movie_0.title = "Weapons" and company_0.id = copyright_0.cid and copyright_0.msid = movie_0.mid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_1.mid and movie_0.mid = tags_0.msid and movie_1.mid = tags_0.msid
TOT: 0.9164793032780125; TR: 0.9224899167310372; SMP: 0.3214285714285714; select director_0.name from company as company_0, copyright as copyright_0, directed_by as directed_by_0, director as director_0, movie as movie_0, tags as tags_0, tv_series as tv_series_0 where company_0.name = "Nuclear" and movie_0.title = "Weapons" and company_0.id = copyright_0.cid and copyright_0.msid = tv_series_0.sid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and movie_0.mid = tags_0.msid and tags_0.msid = tv_series_0.sid
TOT: 0.9164793032780125; TR: 0.9224899167310372; SMP: 0.3214285714285714; select director_0.name from company as company_0, copyright as copyright_0, copyright as copyright_1, directed_by as directed_by_0, director as director_0, movie as movie_0, tv_series as tv_series_0 where company_0.name = "Nuclear" and movie_0.title = "Weapons" and company_0.id = copyright_1.cid and copyright_0.msid = movie_0.mid and copyright_0.msid = tv_series_0.sid and copyright_1.msid = tv_series_0.sid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid
TOT: 0.9164793032780125; TR: 0.9224899167310372; SMP: 0.3214285714285714; select director_0.name from company as company_0, copyright as copyright_0, directed_by as directed_by_0, director as director_0, movie as movie_0, tv_series as tv_series_0, written_by as written_by_0 where company_0.name = "Nuclear" and movie_0.title = "Weapons" and company_0.id = copyright_0.cid and copyright_0.msid = tv_series_0.sid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and movie_0.mid = written_by_0.msid and tv_series_0.sid = written_by_0.msid
TOT: 0.9164793032780125; TR: 0.9224899167310372; SMP: 0.3214285714285714; select director_0.name from cast as cast_0, company as company_0, copyright as copyright_0, directed_by as directed_by_0, director as director_0, movie as movie_0, movie as movie_1 where company_0.name = "Nuclear" and movie_0.title = "Weapons" and cast_0.msid = movie_0.mid and cast_0.msid = movie_1.mid and company_0.id = copyright_0.cid and copyright_0.msid = movie_0.mid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_1.mid
TOT: 0.9164793032780125; TR: 0.9224899167310372; SMP: 0.3214285714285714; select director_0.name from cast as cast_0, company as company_0, copyright as copyright_0, directed_by as directed_by_0, director as director_0, movie as movie_0, movie as movie_1 where cast_0.role = "Weapons" and company_0.name = "Nuclear" and cast_0.msid = movie_0.mid and cast_0.msid = movie_1.mid and company_0.id = copyright_0.cid and copyright_0.msid = movie_0.mid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_1.mid


02:46  INFO: ================
02:46  INFO: QUERY 102: How many movies did "Quentin Tarantino" direct before 2010?
02:46  INFO: ================
02:47  INFO: ================
02:47  INFO: QUERY 111: How many companies participated in producing "Camp X-Ray"
02:47  INFO: ================
984. ROOT: ROOT; NA; ; (0) 
985. participated: NT; NA; ; (0) directed_by(0.72):| producer.name(0.68):| producer(0.68):| writer.name(0.63):| writer(0.63):| 
987. How many: CMT; count; ; (0) 
988. companies: NT; NA; ; (0) company.name(1.0):| company(1.0):| keyword.keyword(0.72):power-companies; pharmaceutical-compa; | movie.title(0.71):Companies Review; Super-Companies; Protect Insurance Co; | producer.name(0.65):Margo Companie; | 
989. producing: NT; NA; ; (0) producer.name(1.0):| producer(1.0):| made_by(0.74):| directed_by(0.69):| cast.role(0.63):| 
991. Camp X-Ray: VTTEXT; NA; ; (0) movie.title(0.97):Camp X-Ray; Camp X-Ray; Camp X; | keyword.keyword(0.77):camp-x-ray; camp-x-ray; x-ray; | cast.role(0.7):Camp X-Ray Guard #1; Camp X-Ray Guard #1; X-Rays; | tv_series.title(0.65):X-Ray; Camp Camp; Camp Camp; | company.name(0.64):X-Ray; Camp B; Camp B; | 
How, WRB
many, JJ
companies, NNS
participated, VBD
in, IN
producing, VBG
Camp X-Ray, NNP
advmod(many-2, How-1)
dep(participated-4, many-2)
nsubj(participated-4, companies-3)
root(ROOT-0, participated-4)
mark(producing-6, in-5)
advcl(participated-4, producing-6)
dobj(producing-6, Camp X-Ray-7)

PARSE TREE:(984) ROOT ROOT
    (987) How many CMT
        (988) companies NT
            (985) participated NT
                (989) producing NT
                    (991) Camp X-Ray VTTEXT


===========
TRANSLATIONS
===========
TOT: 0.9141338998124982; NL: 0.9141338998124982; NL+AG: 0.9603678334858647; NL+QF: 0.9577254248593736; rels: [producer]; projs: [count(distinct(company_0.name))]; preds: [movie_0.title = "Camp X-Ray"]; havings: []; superlative: []; blanks: 0
TOT: 0.8621666666666666; NL: 0.8621666666666666; NL+AG: 0.9398690558767893; NL+QF: 0.925; rels: [producer]; projs: [count(distinct(company_0.name))]; preds: [keyword_0.keyword = "camp-x-ray"]; havings: []; superlative: []; blanks: 0
TOT: 0.8461838998124982; NL: 0.8461838998124982; NL+AG: 0.927101767159231; NL+QF: 0.9242375853039976; rels: [directed_by]; projs: [count(distinct(company_0.name))]; preds: [movie_0.title = "Camp X-Ray"]; havings: []; superlative: []; blanks: 0
TOT: 0.8445061456169718; NL: 0.8445061456169718; NL+AG: 0.9398690558767893; NL+QF: 0.925; rels: [producer]; projs: [count(distinct(company_0.name))]; preds: [cast_0.role = "Camp X-Ray Guard #1"]; havings: []; superlative: []; blanks: 0
TOT: 0.8335963998124982; NL: 0.8335963998124982; NL+AG: 0.9325222840555312; NL+QF: 0.9202254248593738; rels: [producer]; projs: [count(distinct(producer_0.name))]; preds: [movie_0.title = "Camp X-Ray"]; havings: []; superlative: []; blanks: 0
TOT: 0.8328609564462324; NL: 0.8328609564462324; NL+AG: 0.9398690558767893; NL+QF: 0.925; rels: [producer]; projs: [count(distinct(company_0.name))]; preds: [tv_series_0.title = "X-Ray"]; havings: []; superlative: []; blanks: 0
TOT: 0.8301284793999943; NL: 0.8301284793999943; NL+AG: 0.9398690558767893; NL+QF: 0.925; rels: [producer]; projs: [count(distinct(company_0.name))]; preds: [company_0.name = "X-Ray"]; havings: []; superlative: []; blanks: 0
TOT: 0.8227588998124982; NL: 0.8227588998124982; NL+AG: 0.927101767159231; NL+QF: 0.9253889577258496; rels: [directed_by]; projs: [count(distinct(company_0.name))]; preds: [movie_0.title = "Camp X-Ray"]; havings: []; superlative: []; blanks: 1
TOT: 0.8206088998124983; NL: 0.8206088998124983; NL+AG: 0.9325222840555312; NL+QF: 0.9202254248593738; rels: [producer]; projs: [count(distinct(keyword_0.keyword))]; preds: [movie_0.title = "Camp X-Ray"]; havings: []; superlative: []; blanks: 0
TOT: 0.8205; NL: 0.8205; NL+AG: 0.9287435978564882; NL+QF: 0.9252505896226415; rels: [producer]; projs: [count(distinct(company_0.name))]; preds: []; havings: []; superlative: []; blanks: 1

===========
RESULTS
===========
TOT: 0.8294271024810399; TR: 0.8335963998124982; SMP: 0.41666666666666663; select count(distinct(producer_0.name)) from made_by as made_by_0, movie as movie_0, producer as producer_0 where movie_0.title = "Camp X-Ray" and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid


02:48  INFO: ================
02:48  INFO: QUERY 84: List all male directors who worked with the "NBCUniversal" company
02:48  INFO: ================
993. ROOT: ROOT; NA; ; (0) 
994. List: CMT; NA; ; (0) 
995. directors: NT; NA; all; (0) director.name(1.0):| director(1.0):| company.name(0.94):Directors; Directors; Director; | movie.title(0.89):Director; Director; Director; | writer.name(0.84):Director; Director X; Director X.; | 
997. male: VTTEXT; NA; ; (0) director.gender(1.0):male; male; male; | actor.gender(1.0):male; male; male; | producer.gender(1.0):male; male; male; | writer.gender(1.0):male; male; male; | director.birth_city(0.98):Male; Wilkucice Male; Wilkucice Male; | 
998. worked: NT; NA; ; (0) directed_by(0.71):| director.did(0.69):| made_by(0.64):| producer.name(0.63):| producer(0.63):| 
1000. company: NT; NA; ; (0) company.name(1.0):| company(1.0):| movie.title(0.95):Company; Company; Company; | cast.role(0.95):Company; Company; Company; | keyword.keyword(0.89):company; company-k; it-company; | 
1003. NBCUniversal: VTTEXT; NA; ; (0) company.name(0.91):NBCUniversal; NBCUniversal Media; NBCUniversal Skycast; | genre.genre(0.2):Commercial; Commercial; Experimental; | 
List, VB
all, DT
male, JJ
directors, NNS
who, WP
worked, VBD
with, IN
the, DT
NBCUniversal, NNP
company, NN
root(ROOT-0, List-1)
det(directors-4, all-2)
amod(directors-4, male-3)
dobj(List-1, directors-4)
nsubj(worked-6, who-5)
acl:relcl(directors-4, worked-6)
case(company-10, with-7)
det(company-10, the-8)
compound(company-10, NBCUniversal-9)
nmod(worked-6, company-10)

PARSE TREE:(993) ROOT ROOT
    (994) List CMT
        (995) directors NT
            (997) male VTTEXT
            (998) worked NT
                (1000) company NT
                    (1003) NBCUniversal VTTEXT


===========
TRANSLATIONS
===========
TOT: 0.9266625; NL: 0.9266625; NL+AG: 0.9698778075269112; NL+QF: 0.9651499375; rels: [directed_by]; projs: [director_0.name]; preds: [director_0.gender = "male",company_0.name = "NBCUniversal"]; havings: []; superlative: []; blanks: 0
TOT: 0.9266625; NL: 0.9266625; NL+AG: 0.9698778075269112; NL+QF: 0.9651499375; rels: [directed_by]; projs: [director_0.name]; preds: [actor_0.gender = "male",company_0.name = "NBCUniversal"]; havings: []; superlative: []; blanks: 0
TOT: 0.9266625; NL: 0.9266625; NL+AG: 0.9698778075269112; NL+QF: 0.9651499375; rels: [directed_by]; projs: [director_0.name]; preds: [producer_0.gender = "male",company_0.name = "NBCUniversal"]; havings: []; superlative: []; blanks: 0
TOT: 0.9266625; NL: 0.9266625; NL+AG: 0.9698778075269112; NL+QF: 0.9651499375; rels: [directed_by]; projs: [director_0.name]; preds: [writer_0.gender = "male",company_0.name = "NBCUniversal"]; havings: []; superlative: []; blanks: 0
TOT: 0.9216625; NL: 0.9216625; NL+AG: 0.9648778075269113; NL+QF: 0.9628368125; rels: [directed_by]; projs: [director_0.name]; preds: [director_0.birth_city = "Male",company_0.name = "NBCUniversal"]; havings: []; superlative: []; blanks: 0
TOT: 0.9140689172815055; NL: 0.9140689172815055; NL+AG: 0.9469724803356071; NL+QF: 0.950623548600188; rels: [directed_by]; projs: [director_0.name]; preds: [director_0.gender = "male",movie_0.title = "Company",company_0.name = "NBCUniversal"]; havings: []; superlative: []; blanks: 0
TOT: 0.9140689172815055; NL: 0.9140689172815055; NL+AG: 0.9469724803356071; NL+QF: 0.9488576389227686; rels: [directed_by]; projs: [director_0.name]; preds: [director_0.gender = "male",cast_0.role = "Company",company_0.name = "NBCUniversal"]; havings: []; superlative: []; blanks: 0
TOT: 0.9140689172815055; NL: 0.9140689172815055; NL+AG: 0.9469724803356071; NL+QF: 0.9508045009811404; rels: [directed_by]; projs: [director_0.name]; preds: [actor_0.gender = "male",movie_0.title = "Company",company_0.name = "NBCUniversal"]; havings: []; superlative: []; blanks: 0
TOT: 0.9140689172815055; NL: 0.9140689172815055; NL+AG: 0.9469724803356071; NL+QF: 0.9488576389227686; rels: [directed_by]; projs: [director_0.name]; preds: [actor_0.gender = "male",cast_0.role = "Company",company_0.name = "NBCUniversal"]; havings: []; superlative: []; blanks: 0
TOT: 0.9140689172815055; NL: 0.9140689172815055; NL+AG: 0.9469724803356071; NL+QF: 0.950623548600188; rels: [directed_by]; projs: [director_0.name]; preds: [producer_0.gender = "male",movie_0.title = "Company",company_0.name = "NBCUniversal"]; havings: []; superlative: []; blanks: 0

===========
RESULTS
===========
TOT: 0.9208958749999999; TR: 0.9266625; SMP: 0.35; select director_0.name from company as company_0, copyright as copyright_0, directed_by as directed_by_0, director as director_0, tv_series as tv_series_0 where company_0.name = "NBCUniversal" and director_0.gender = "male" and company_0.id = copyright_0.cid and copyright_0.msid = tv_series_0.sid and directed_by_0.did = director_0.did and directed_by_0.msid = tv_series_0.sid
TOT: 0.9208958749999999; TR: 0.9266625; SMP: 0.35; select director_0.name from company as company_0, copyright as copyright_0, directed_by as directed_by_0, director as director_0, movie as movie_0 where company_0.name = "NBCUniversal" and director_0.gender = "male" and company_0.id = copyright_0.cid and copyright_0.msid = movie_0.mid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid
TOT: 0.9206101607142857; TR: 0.9266625; SMP: 0.3214285714285714; select director_0.name from company as company_0, copyright as copyright_0, directed_by as directed_by_0, director as director_0, made_by as made_by_0, movie as movie_0, tv_series as tv_series_0 where company_0.name = "NBCUniversal" and director_0.gender = "male" and company_0.id = copyright_0.cid and copyright_0.msid = tv_series_0.sid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and made_by_0.msid = movie_0.mid and made_by_0.msid = tv_series_0.sid
TOT: 0.9206101607142857; TR: 0.9266625; SMP: 0.3214285714285714; select director_0.name from company as company_0, copyright as copyright_0, directed_by as directed_by_0, directed_by as directed_by_1, director as director_0, movie as movie_0, tv_series as tv_series_0 where company_0.name = "NBCUniversal" and director_0.gender = "male" and company_0.id = copyright_0.cid and copyright_0.msid = tv_series_0.sid and directed_by_0.msid = movie_0.mid and directed_by_0.msid = tv_series_0.sid and directed_by_1.did = director_0.did and directed_by_1.msid = movie_0.mid
TOT: 0.9206101607142857; TR: 0.9266625; SMP: 0.3214285714285714; select director_0.name from company as company_0, copyright as copyright_0, directed_by as directed_by_0, director as director_0, movie as movie_0, movie as movie_1, tags as tags_0 where company_0.name = "NBCUniversal" and director_0.gender = "male" and company_0.id = copyright_0.cid and copyright_0.msid = movie_0.mid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_1.mid and movie_0.mid = tags_0.msid and movie_1.mid = tags_0.msid
TOT: 0.9206101607142857; TR: 0.9266625; SMP: 0.3214285714285714; select director_0.name from company as company_0, copyright as copyright_0, directed_by as directed_by_0, director as director_0, movie as movie_0, tags as tags_0, tv_series as tv_series_0 where company_0.name = "NBCUniversal" and director_0.gender = "male" and company_0.id = copyright_0.cid and copyright_0.msid = tv_series_0.sid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and movie_0.mid = tags_0.msid and tags_0.msid = tv_series_0.sid
TOT: 0.9206101607142857; TR: 0.9266625; SMP: 0.3214285714285714; select director_0.name from company as company_0, copyright as copyright_0, copyright as copyright_1, directed_by as directed_by_0, director as director_0, movie as movie_0, tv_series as tv_series_0 where company_0.name = "NBCUniversal" and director_0.gender = "male" and company_0.id = copyright_1.cid and copyright_0.msid = movie_0.mid and copyright_0.msid = tv_series_0.sid and copyright_1.msid = tv_series_0.sid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid
TOT: 0.9206101607142857; TR: 0.9266625; SMP: 0.3214285714285714; select director_0.name from company as company_0, copyright as copyright_0, directed_by as directed_by_0, director as director_0, made_by as made_by_0, producer as producer_0, tv_series as tv_series_0 where company_0.name = "NBCUniversal" and producer_0.gender = "male" and company_0.id = copyright_0.cid and copyright_0.msid = tv_series_0.sid and directed_by_0.did = director_0.did and directed_by_0.msid = tv_series_0.sid and made_by_0.msid = tv_series_0.sid and made_by_0.pid = producer_0.pid
TOT: 0.9206101607142857; TR: 0.9266625; SMP: 0.3214285714285714; select director_0.name from company as company_0, copyright as copyright_0, directed_by as directed_by_0, director as director_0, movie as movie_0, tv_series as tv_series_0, written_by as written_by_0 where company_0.name = "NBCUniversal" and director_0.gender = "male" and company_0.id = copyright_0.cid and copyright_0.msid = tv_series_0.sid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and movie_0.mid = written_by_0.msid and tv_series_0.sid = written_by_0.msid
TOT: 0.9206101607142857; TR: 0.9266625; SMP: 0.3214285714285714; select director_0.name from cast as cast_0, company as company_0, copyright as copyright_0, directed_by as directed_by_0, director as director_0, movie as movie_0, movie as movie_1 where company_0.name = "NBCUniversal" and director_0.gender = "male" and cast_0.msid = movie_0.mid and cast_0.msid = movie_1.mid and company_0.id = copyright_0.cid and copyright_0.msid = movie_0.mid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_1.mid


03:23  INFO: ===== FOLD 3 =====
03:23  INFO: ===== Parsing Results =====
03:23  INFO: Total Queries: 98
03:23  INFO: Correctly Parsed: 96/98

03:23  INFO: ================
03:23  INFO: QUERY 85: What are the movies related to nuclear weapons
03:23  INFO: ================
1005. ROOT: ROOT; NA; ; (0) 
1006. related: NT; NA; ; (0) made_by(0.69):| director.did(0.67):| writer.name(0.66):| writer(0.66):| written_by(0.66):| 
1007. What: CMT; NA; ; (0) 
1009. movies: NT; NA; ; (0) movie.title(1.0):| movie(1.0):| company.name(0.91):Movies; Movie; W Movies; | tv_series.title(0.8):Movies, Movies, Movi; Moon Movies; Movie Memories; | cast.role(0.79):Movie; KPC Movies; Movie F; | 
1011. weapons: VTTEXT; NA; ; (0) movie.title(0.95):Weapons; Weapons; Weapons; | cast.role(0.95):Weapons; Weapons; Weapons; | keyword.keyword(0.82):weapon; weapons-deal; weapon-x; | actor.name(0.72):The Weapons; Leatha Weapons; Letha Weapons; | tv_series.title(0.68):Weapons of Power; Weapons at War; Secrets Weapons; | 
1013. nuclear: VTTEXT; NA; ; (0) company.name(0.98):Nuclear; Nuclear; Nuclear Cat; | keyword.keyword(0.94):nuclear; nuclear-leak; nuclear-war; | movie.title(0.93):Nuclear; Nuclear Leak; Nuclear Day; | cast.role(0.79):Nuclear dealer; Nuclear Man; Nuclear Man; | tv_series.title(0.74):Nuclear Ned; Nuclear Coleslaw; Nuclear Family; | 
What, WP
are, VBP
the, DT
movies, NNS
related, VBN
to, TO
nuclear, JJ
weapons, NNS
dobj(related-5, What-1)
auxpass(related-5, are-2)
det(movies-4, the-3)
nsubjpass(related-5, movies-4)
root(ROOT-0, related-5)
case(weapons-8, to-6)
amod(weapons-8, nuclear-7)
nmod(related-5, weapons-8)

PARSE TREE:(1005) ROOT ROOT
    (1007) What CMT
        (1009) movies NT
            (1006) related NT
                (1011) weapons VTTEXT
                    (1013) nuclear VTTEXT


===========
TRANSLATIONS
===========
TOT: 0.8458649167310371; NL: 0.8458649167310371; NL+AG: 0.9411490076897499; NL+QF: 0.9220813366633667; rels: [made_by]; projs: [movie_0.title]; preds: [movie_0.title = "Weapons",company_0.name = "Nuclear"]; havings: []; superlative: []; blanks: 0
TOT: 0.8458649167310371; NL: 0.8458649167310371; NL+AG: 0.9411490076897499; NL+QF: 0.9223126678321979; rels: [made_by]; projs: [movie_0.title]; preds: [cast_0.role = "Weapons",company_0.name = "Nuclear"]; havings: []; superlative: []; blanks: 0
TOT: 0.8387724948385037; NL: 0.8387724948385037; NL+AG: 0.9052558121358174; NL+QF: 0.902057995870803; rels: [made_by]; projs: [company_0.id]; preds: [company_0.name = "Movies",movie_0.title = "Weapons",company_0.name = "Nuclear"]; havings: []; superlative: []; blanks: 0
TOT: 0.8387724948385037; NL: 0.8387724948385037; NL+AG: 0.9052558121358174; NL+QF: 0.902057995870803; rels: [made_by]; projs: [company_0.id]; preds: [company_0.name = "Movies",cast_0.role = "Weapons",company_0.name = "Nuclear"]; havings: []; superlative: []; blanks: 0
TOT: 0.8384024167310371; NL: 0.8384024167310371; NL+AG: 0.9411490076897499; NL+QF: 0.9212932684815485; rels: [writer]; projs: [movie_0.title]; preds: [movie_0.title = "Weapons",company_0.name = "Nuclear"]; havings: []; superlative: []; blanks: 0
TOT: 0.8384024167310371; NL: 0.8384024167310371; NL+AG: 0.9411490076897499; NL+QF: 0.9215245996503797; rels: [writer]; projs: [movie_0.title]; preds: [cast_0.role = "Weapons",company_0.name = "Nuclear"]; havings: []; superlative: []; blanks: 0
TOT: 0.8384024167310371; NL: 0.8384024167310371; NL+AG: 0.9411490076897499; NL+QF: 0.9212932684815485; rels: [written_by]; projs: [movie_0.title]; preds: [movie_0.title = "Weapons",company_0.name = "Nuclear"]; havings: []; superlative: []; blanks: 0
TOT: 0.8384024167310371; NL: 0.8384024167310371; NL+AG: 0.9411490076897499; NL+QF: 0.9215245996503797; rels: [written_by]; projs: [movie_0.title]; preds: [cast_0.role = "Weapons",company_0.name = "Nuclear"]; havings: []; superlative: []; blanks: 0
TOT: 0.8353695009879752; NL: 0.8353695009879752; NL+AG: 0.930653591946688; NL+QF: 0.9149655846423994; rels: [made_by]; projs: [movie_0.title]; preds: [movie_0.title = "Weapons",keyword_0.keyword = "nuclear"]; havings: []; superlative: []; blanks: 0
TOT: 0.8353695009879752; NL: 0.8353695009879752; NL+AG: 0.930653591946688; NL+QF: 0.9151969158112306; rels: [made_by]; projs: [movie_0.title]; preds: [cast_0.role = "Weapons",keyword_0.keyword = "nuclear"]; havings: []; superlative: []; blanks: 0

===========
RESULTS
===========
TOT: 0.84073960089706; TR: 0.8458649167310371; SMP: 0.3333333333333333; select movie_0.title from cast as cast_0, company as company_0, copyright as copyright_0, made_by as made_by_0, movie as movie_0, tv_series as tv_series_0 where cast_0.role = "Weapons" and company_0.name = "Nuclear" and cast_0.msid = movie_0.mid and company_0.id = copyright_0.cid and copyright_0.msid = tv_series_0.sid and made_by_0.msid = movie_0.mid and made_by_0.msid = tv_series_0.sid
TOT: 0.84073960089706; TR: 0.8458649167310371; SMP: 0.3333333333333333; select movie_0.title from cast as cast_0, company as company_0, copyright as copyright_0, made_by as made_by_0, movie as movie_0, movie as movie_1 where cast_0.role = "Weapons" and company_0.name = "Nuclear" and cast_0.msid = movie_1.mid and company_0.id = copyright_0.cid and copyright_0.msid = movie_0.mid and made_by_0.msid = movie_0.mid and made_by_0.msid = movie_1.mid
TOT: 0.84073960089706; TR: 0.8458649167310371; SMP: 0.3333333333333333; select movie_0.title from cast as cast_0, company as company_0, copyright as copyright_0, made_by as made_by_0, movie as movie_0, tv_series as tv_series_0 where cast_0.role = "Weapons" and company_0.name = "Nuclear" and cast_0.msid = tv_series_0.sid and company_0.id = copyright_0.cid and copyright_0.msid = movie_0.mid and made_by_0.msid = movie_0.mid and made_by_0.msid = tv_series_0.sid
TOT: 0.8335990556044044; TR: 0.8387724948385037; SMP: 0.3214285714285714; select company_0.id from company as company_0, company as company_1, copyright as copyright_0, copyright as copyright_1, made_by as made_by_0, movie as movie_0, movie as movie_1 where company_0.name = "Nuclear" and company_1.name = "Movies" and movie_0.title = "Weapons" and company_0.id = copyright_0.cid and company_1.id = copyright_1.cid and copyright_0.msid = movie_0.mid and copyright_1.msid = movie_1.mid and made_by_0.msid = movie_0.mid and made_by_0.msid = movie_1.mid
TOT: 0.8335990556044044; TR: 0.8387724948385037; SMP: 0.3214285714285714; select company_0.id from company as company_0, company as company_1, copyright as copyright_0, copyright as copyright_1, made_by as made_by_0, movie as movie_0, movie as movie_1 where company_0.name = "Movies" and company_1.name = "Nuclear" and movie_0.title = "Weapons" and company_0.id = copyright_0.cid and company_1.id = copyright_1.cid and copyright_0.msid = movie_0.mid and copyright_1.msid = movie_1.mid and made_by_0.msid = movie_0.mid and made_by_0.msid = movie_1.mid
TOT: 0.8335990556044044; TR: 0.8387724948385037; SMP: 0.3214285714285714; select company_0.id from company as company_0, company as company_1, copyright as copyright_0, copyright as copyright_1, made_by as made_by_0, movie as movie_0, tv_series as tv_series_0 where company_0.name = "Nuclear" and company_1.name = "Movies" and movie_0.title = "Weapons" and company_0.id = copyright_0.cid and company_1.id = copyright_1.cid and copyright_0.msid = movie_0.mid and copyright_1.msid = tv_series_0.sid and made_by_0.msid = movie_0.mid and made_by_0.msid = tv_series_0.sid
TOT: 0.8335990556044044; TR: 0.8387724948385037; SMP: 0.3214285714285714; select company_0.id from company as company_0, company as company_1, copyright as copyright_0, copyright as copyright_1, made_by as made_by_0, movie as movie_0, tv_series as tv_series_0 where company_0.name = "Movies" and company_1.name = "Nuclear" and movie_0.title = "Weapons" and company_0.id = copyright_0.cid and company_1.id = copyright_1.cid and copyright_0.msid = movie_0.mid and copyright_1.msid = tv_series_0.sid and made_by_0.msid = movie_0.mid and made_by_0.msid = tv_series_0.sid
TOT: 0.83335172589706; TR: 0.8384024167310371; SMP: 0.3333333333333333; select movie_0.title from cast as cast_0, company as company_0, copyright as copyright_0, movie as movie_0, movie as movie_1, written_by as written_by_0 where cast_0.role = "Weapons" and company_0.name = "Nuclear" and cast_0.msid = movie_1.mid and company_0.id = copyright_0.cid and copyright_0.msid = movie_0.mid and movie_0.mid = written_by_0.msid and movie_1.mid = written_by_0.msid
TOT: 0.83335172589706; TR: 0.8384024167310371; SMP: 0.3333333333333333; select movie_0.title from cast as cast_0, company as company_0, copyright as copyright_0, movie as movie_0, tv_series as tv_series_0, written_by as written_by_0 where cast_0.role = "Weapons" and company_0.name = "Nuclear" and cast_0.msid = tv_series_0.sid and company_0.id = copyright_0.cid and copyright_0.msid = movie_0.mid and movie_0.mid = written_by_0.msid and tv_series_0.sid = written_by_0.msid
TOT: 0.83335172589706; TR: 0.8384024167310371; SMP: 0.3333333333333333; select movie_0.title from cast as cast_0, company as company_0, copyright as copyright_0, movie as movie_0, tv_series as tv_series_0, written_by as written_by_0 where cast_0.role = "Weapons" and company_0.name = "Nuclear" and cast_0.msid = movie_0.mid and company_0.id = copyright_0.cid and copyright_0.msid = tv_series_0.sid and movie_0.mid = written_by_0.msid and tv_series_0.sid = written_by_0.msid


03:23  INFO: ================
03:23  INFO: QUERY 3: Find all movies produced in 2015
03:23  INFO: ================
03:24  INFO: ================
03:24  INFO: QUERY 61: How many movies are there that are directed by "Steven Spielberg" and featuring "Matt Damon"?
03:24  INFO: ================
1023. ROOT: ROOT; NA; ; (0) 
1025. movies: NT; NA; ; (0) movie.title(1.0):| movie(1.0):| company.name(0.91):Movies; Movie; W Movies; | tv_series.title(0.8):Movies, Movies, Movi; Moon Movies; Movie Memories; | cast.role(0.79):Movie; KPC Movies; Movie F; | 
1027. How many: CMT; count; ; (0) 
1029. directed: NT; NA; ; (0) directed_by(1.0):| director.name(0.72):| director(0.72):| producer.name(0.69):| producer(0.69):| 
1035. featuring: NT; NA; ; (0) movie.release_year(0.64):| producer.name(0.64):| producer(0.64):| made_by(0.64):| movie.title_aka(0.62):| 
1036. Matt Damon: VTTEXT; NA; ; (0) actor.name(0.98):Matt Damon; Matt Damon; Matt Diamond; | producer.name(0.98):Matt Damon; Matt Damon; Matt Diamond; | writer.name(0.98):Matt Damon; Matt Damon; Matt Diamond; | director.name(0.92):Matt Damon; Matt Diamond; Matt Diamond; | movie.title(0.76):I'm Not Matt Damon; I'm Not Matt Damon; Meeting Matt Damon; | 
How, WRB
many, JJ
movies, NNS
are, VBP
there, EX
that, WDT
are, VBP
directed, VBN
by, IN
Steven Spielberg, VBG
and, CC
featuring, VBG
Matt Damon, NNP
advmod(many-2, How-1)
amod(movies-3, many-2)
nsubj(are-4, movies-3)
root(ROOT-0, are-4)
expl(are-4, there-5)
nsubjpass(directed-8, that-6)
auxpass(directed-8, are-7)
dep(are-4, directed-8)
mark(Steven Spielberg-10, by-9)
advcl(directed-8, Steven Spielberg-10)
cc(Steven Spielberg-10, and-11)
conj(Steven Spielberg-10, featuring-12)
dobj(Steven Spielberg-10, Matt Damon-13)

PARSE TREE:(1023) ROOT ROOT
    (1027) How many CMT
        (1025) movies NT
            (1029) directed NT
                (1036) Matt Damon VTTEXT
                (1035) featuring NT


===========
TRANSLATIONS
===========
TOT: 0.9058257563051842; NL: 0.9058257563051842; NL+AG: 0.9618346899785507; NL+QF: 0.9591858097293651; rels: [producer,directed_by]; projs: [count(distinct(movie_0.title))]; preds: [actor_0.name = "Matt Damon"]; havings: []; superlative: []; blanks: 0
TOT: 0.9058257563051842; NL: 0.9058257563051842; NL+AG: 0.9618346899785507; NL+QF: 0.9588255672288881; rels: [producer,directed_by]; projs: [count(distinct(movie_0.title))]; preds: [producer_0.name = "Matt Damon"]; havings: []; superlative: []; blanks: 0
TOT: 0.9058257563051842; NL: 0.9058257563051842; NL+AG: 0.9618346899785507; NL+QF: 0.9588255672288881; rels: [producer,directed_by]; projs: [count(distinct(movie_0.title))]; preds: [writer_0.name = "Matt Damon"]; havings: []; superlative: []; blanks: 0
TOT: 0.9048382563051842; NL: 0.9048382563051842; NL+AG: 0.9618346899785507; NL+QF: 0.9591858097293651; rels: [made_by,directed_by]; projs: [count(distinct(movie_0.title))]; preds: [actor_0.name = "Matt Damon"]; havings: []; superlative: []; blanks: 0
TOT: 0.9048382563051842; NL: 0.9048382563051842; NL+AG: 0.9618346899785507; NL+QF: 0.9680132505638108; rels: [made_by,directed_by]; projs: [count(distinct(movie_0.title))]; preds: [producer_0.name = "Matt Damon"]; havings: []; superlative: []; blanks: 0
TOT: 0.9048382563051842; NL: 0.9048382563051842; NL+AG: 0.9618346899785507; NL+QF: 0.9634194088963496; rels: [made_by,directed_by]; projs: [count(distinct(movie_0.title))]; preds: [writer_0.name = "Matt Damon"]; havings: []; superlative: []; blanks: 0
TOT: 0.8951007563051843; NL: 0.8951007563051843; NL+AG: 0.9618346899785507; NL+QF: 0.9622811150243102; rels: [directed_by]; projs: [count(distinct(movie_0.title))]; preds: [actor_0.name = "Matt Damon"]; havings: []; superlative: []; blanks: 1
TOT: 0.8951007563051843; NL: 0.8951007563051843; NL+AG: 0.9618346899785507; NL+QF: 0.9638699960717598; rels: [directed_by]; projs: [count(distinct(movie_0.title))]; preds: [producer_0.name = "Matt Damon"]; havings: []; superlative: []; blanks: 1
TOT: 0.8951007563051843; NL: 0.8951007563051843; NL+AG: 0.9618346899785507; NL+QF: 0.9630041168377086; rels: [directed_by]; projs: [count(distinct(movie_0.title))]; preds: [writer_0.name = "Matt Damon"]; havings: []; superlative: []; blanks: 1
TOT: 0.891128025220737; NL: 0.891128025220737; NL+AG: 0.9471369588941034; NL+QF: 0.9521481511045825; rels: [producer,directed_by]; projs: [count(distinct(movie_0.title))]; preds: [director_0.name = "Matt Damon"]; havings: []; superlative: []; blanks: 0

===========
RESULTS
===========


03:25  INFO: ================
03:25  INFO: QUERY 51: What are the series in which "Scott Foley" is an actor?
03:25  INFO: ================
03:25  INFO: ================
03:25  INFO: QUERY 110: find the number of actors from Iran who played in "Jim Jarmusch" movies
03:25  INFO: ================
1050. ROOT: ROOT; NA; ; (0) 
1051. find: CMT; NA; ; (0) 
1052. number of: FT; count; ; (0) 
1054. actors: NT; NA; ; (0) actor.name(1.0):| actor(1.0):| movie.title(0.95):Actors; Actors; Actors; | cast.role(0.95):Actors; Actors; Actors; | tv_series.title(0.9):Actors; Actor; Actors Vs; | 
1056. Iran: VTTEXT; NA; ; (0) director.nationality(1.0):Iran; Iran; Iran; | actor.nationality(1.0):Iran; Iran; Iran; | producer.nationality(1.0):Iran; Iran; Iran; | writer.nationality(1.0):Iran; Iran; Iran; | movie.title(0.93):Iran; Iran!; Ei Iran; | 
1058. played: NT; NA; ; (0) tv_series.num_of_seasons(0.67):| director.did(0.66):| cast.role(0.66):| directed_by(0.64):| actor.name(0.63):| 
1060. movies: NT; NA; ; (0) movie.title(1.0):| movie(1.0):| company.name(0.91):Movies; Movie; W Movies; | tv_series.title(0.8):Movies, Movies, Movi; Moon Movies; Movie Memories; | cast.role(0.79):Movie; KPC Movies; Movie F; | 
1062. Jim Jarmusch: VTTEXT; NA; ; (0) director.name(0.98):Jim Jarmusch; Jim Jarmusch; Tom Jarmusch; | actor.name(0.98):Jim Jarmusch; Jim Jarmusch; Tom Jarmusch; | producer.name(0.98):Jim Jarmusch; Jim Jarmusch; Tom Jarmusch; | writer.name(0.96):Jim Jarmusch; Jim Jarmusch; James R. Jarmusch; | movie.title(0.81):Behind Jim Jarmusch; Behind Jim Jarmusch; Focus on Jim Jarmusc; | 
find, VB
the, DT
number, NN
of, IN
actors, NNS
from, IN
Iran, NNP
who, WP
played, VBN
in, IN
Jim Jarmusch, NNP
movies, NNS
root(ROOT-0, find-1)
det(number-3, the-2)
dobj(find-1, number-3)
case(actors-5, of-4)
nmod(number-3, actors-5)
case(Iran-7, from-6)
nmod(actors-5, Iran-7)
nsubj(played-9, who-8)
acl:relcl(number-3, played-9)
case(movies-12, in-10)
compound(movies-12, Jim Jarmusch-11)
nmod(played-9, movies-12)

PARSE TREE:(1050) ROOT ROOT
    (1051) find CMT
        (1052) number of FT
            (1054) actors NT
                (1056) Iran VTTEXT
            (1058) played NT
                (1060) movies NT
                    (1062) Jim Jarmusch VTTEXT


===========
TRANSLATIONS
===========
TOT: 1.0; NL: 1.0; NL+AG: 1.0; NL+QF: 1.0; rels: []; projs: [count(distinct(actor_0.name))]; preds: [director_0.nationality = "Iran",movie_0.title = "Behind Jim Jarmusch"]; havings: []; superlative: []; blanks: 0
TOT: 1.0; NL: 1.0; NL+AG: 1.0; NL+QF: 1.0; rels: []; projs: [count(distinct(actor_0.name))]; preds: [actor_0.nationality = "Iran",movie_0.title = "Behind Jim Jarmusch"]; havings: []; superlative: []; blanks: 0
TOT: 1.0; NL: 1.0; NL+AG: 1.0; NL+QF: 1.0; rels: []; projs: [count(distinct(actor_0.name))]; preds: [producer_0.nationality = "Iran",movie_0.title = "Behind Jim Jarmusch"]; havings: []; superlative: []; blanks: 0
TOT: 1.0; NL: 1.0; NL+AG: 1.0; NL+QF: 1.0; rels: []; projs: [count(distinct(actor_0.name))]; preds: [writer_0.nationality = "Iran",movie_0.title = "Behind Jim Jarmusch"]; havings: []; superlative: []; blanks: 0
TOT: 0.976839433084662; NL: 0.976839433084662; NL+AG: 0.976839433084662; NL+QF: 0.9860990028661427; rels: []; projs: [count(distinct(actor_0.name))]; preds: [movie_0.title = "Iran",movie_0.title = "Behind Jim Jarmusch"]; havings: []; superlative: []; blanks: 0
TOT: 0.9167333333333335; NL: 0.9167333333333335; NL+AG: 0.9765719207579674; NL+QF: 0.9555555555555557; rels: []; projs: [count(distinct(cast_0.role))]; preds: [director_0.nationality = "Iran",movie_0.title = "Behind Jim Jarmusch"]; havings: []; superlative: []; blanks: 0
TOT: 0.9167333333333335; NL: 0.9167333333333335; NL+AG: 0.9765719207579674; NL+QF: 0.9555555555555557; rels: []; projs: [count(distinct(cast_0.role))]; preds: [actor_0.nationality = "Iran",movie_0.title = "Behind Jim Jarmusch"]; havings: []; superlative: []; blanks: 0
TOT: 0.9167333333333335; NL: 0.9167333333333335; NL+AG: 0.9765719207579674; NL+QF: 0.9555555555555557; rels: []; projs: [count(distinct(cast_0.role))]; preds: [producer_0.nationality = "Iran",movie_0.title = "Behind Jim Jarmusch"]; havings: []; superlative: []; blanks: 0
TOT: 0.9167333333333335; NL: 0.9167333333333335; NL+AG: 0.9765719207579674; NL+QF: 0.9555555555555557; rels: []; projs: [count(distinct(cast_0.role))]; preds: [writer_0.nationality = "Iran",movie_0.title = "Behind Jim Jarmusch"]; havings: []; superlative: []; blanks: 0
TOT: 0.915179808635955; NL: 0.915179808635955; NL+AG: 0.9678317443215698; NL+QF: 0.9590909090909091; rels: []; projs: [count(distinct(actor_0.name))]; preds: [director_0.nationality = "Iran",company_0.name = "Movies",director_0.name = "Jim Jarmusch"]; havings: []; superlative: []; blanks: 0

===========
RESULTS
===========
TOT: 0.9941666666666666; TR: 1.0; SMP: 0.41666666666666663; select count(distinct(actor_0.name)) from actor as actor_0, cast as cast_0, movie as movie_0 where actor_0.nationality = "Iran" and movie_0.title = "Behind Jim Jarmusch" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid
TOT: 0.9934999999999999; TR: 1.0; SMP: 0.35; select count(distinct(actor_0.name)) from actor as actor_0, cast as cast_0, made_by as made_by_0, movie as movie_0, producer as producer_0 where movie_0.title = "Behind Jim Jarmusch" and producer_0.nationality = "Iran" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid
TOT: 0.9934999999999999; TR: 1.0; SMP: 0.35; select count(distinct(actor_0.name)) from actor as actor_0, cast as cast_0, movie as movie_0, writer as writer_0, written_by as written_by_0 where movie_0.title = "Behind Jim Jarmusch" and writer_0.nationality = "Iran" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and movie_0.mid = written_by_0.msid and writer_0.wid = written_by_0.wid
TOT: 0.9934999999999999; TR: 1.0; SMP: 0.35; select count(distinct(actor_0.name)) from actor as actor_0, cast as cast_0, directed_by as directed_by_0, director as director_0, movie as movie_0 where director_0.nationality = "Iran" and movie_0.title = "Behind Jim Jarmusch" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid
TOT: 0.9932142857142857; TR: 1.0; SMP: 0.3214285714285714; select count(distinct(actor_0.name)) from actor as actor_0, cast as cast_0, directed_by as directed_by_0, movie as movie_0, movie as movie_1, writer as writer_0, written_by as written_by_0 where movie_0.title = "Behind Jim Jarmusch" and writer_0.nationality = "Iran" and actor_0.aid = cast_0.aid and cast_0.msid = movie_1.mid and directed_by_0.msid = movie_0.mid and directed_by_0.msid = movie_1.mid and movie_0.mid = written_by_0.msid and writer_0.wid = written_by_0.wid
TOT: 0.9932142857142857; TR: 1.0; SMP: 0.3214285714285714; select count(distinct(actor_0.name)) from actor as actor_0, cast as cast_0, directed_by as directed_by_0, directed_by as directed_by_1, director as director_0, movie as movie_0, tv_series as tv_series_0 where director_0.nationality = "Iran" and movie_0.title = "Behind Jim Jarmusch" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and directed_by_0.msid = movie_0.mid and directed_by_0.msid = tv_series_0.sid and directed_by_1.did = director_0.did and directed_by_1.msid = tv_series_0.sid
TOT: 0.9932142857142857; TR: 1.0; SMP: 0.3214285714285714; select count(distinct(actor_0.name)) from actor as actor_0, cast as cast_0, movie as movie_0, movie as movie_1, writer as writer_0, written_by as written_by_0, written_by as written_by_1 where movie_0.title = "Behind Jim Jarmusch" and writer_0.nationality = "Iran" and actor_0.aid = cast_0.aid and cast_0.msid = movie_1.mid and movie_0.mid = written_by_0.msid and movie_0.mid = written_by_1.msid and movie_1.mid = written_by_0.msid and writer_0.wid = written_by_1.wid
TOT: 0.9932142857142857; TR: 1.0; SMP: 0.3214285714285714; select count(distinct(actor_0.name)) from actor as actor_0, cast as cast_0, cast as cast_1, made_by as made_by_0, movie as movie_0, producer as producer_0, tv_series as tv_series_0 where movie_0.title = "Behind Jim Jarmusch" and producer_0.nationality = "Iran" and actor_0.aid = cast_1.aid and cast_0.msid = movie_0.mid and cast_0.msid = tv_series_0.sid and cast_1.msid = tv_series_0.sid and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid
TOT: 0.9932142857142857; TR: 1.0; SMP: 0.3214285714285714; select count(distinct(actor_0.name)) from actor as actor_0, cast as cast_0, directed_by as directed_by_0, director as director_0, made_by as made_by_0, movie as movie_0, movie as movie_1 where director_0.nationality = "Iran" and movie_0.title = "Behind Jim Jarmusch" and actor_0.aid = cast_0.aid and cast_0.msid = movie_1.mid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and made_by_0.msid = movie_0.mid and made_by_0.msid = movie_1.mid
TOT: 0.9932142857142857; TR: 1.0; SMP: 0.3214285714285714; select count(distinct(actor_0.name)) from actor as actor_0, cast as cast_0, cast as cast_1, movie as movie_0, movie as movie_1, writer as writer_0, written_by as written_by_0 where movie_0.title = "Behind Jim Jarmusch" and writer_0.nationality = "Iran" and actor_0.aid = cast_1.aid and cast_0.msid = movie_0.mid and cast_0.msid = movie_1.mid and cast_1.msid = movie_1.mid and movie_0.mid = written_by_0.msid and writer_0.wid = written_by_0.wid


03:27  INFO: ================
03:27  INFO: QUERY 37: Find all movies produced by "Walt Disney" after 2010
03:27  INFO: ================
03:28  INFO: ================
03:28  INFO: QUERY 81: Which movie had the character "Daffy Duck"
03:28  INFO: ================
1074. ROOT: ROOT; NA; ; (0) 
1076. movie: NT; NA; ; (0) movie.title(1.0):| movie(1.0):| company.name(0.92):Movie; Movie Movie; Movies; | cast.role(0.87):Movie; Movie F; Movie AD; | keyword.keyword(0.81):movie-in-movie; b-movie; z-movie; | 
1078. Daffy Duck: VTTEXT; NA; ; (0) cast.role(0.95):Daffy Duck; Daffy Duck; Daffy Duck; | movie.title(0.76):Daffy Duck Hunt; Daffy Duck Hunt; The Daffy Duckaroo; | tv_series.title(0.69):The Daffy Duck Show; The Daffy Duck Show; Mighty Ducks; | producer.name(0.66):Deafy Duck; Duck; Duck; | director.name(0.66):Deafy Duck; Duck; Tim Duck; | 
1080. character: VTTEXT; NA; ; (0) movie.title(0.95):Character; Character; Character; | cast.role(0.95):Character; Character; Character; | tv_series.title(0.93):Character; Character; Into Character; | company.name(0.81):Character 7; Character Matters; Character Tank; | keyword.keyword(0.81):character-arc; literary-character; character-actor; | 
Which, WDT
movie, NN
had, VBD
the, DT
character, NN
Daffy Duck, NN
det(movie-2, Which-1)
nsubj(had-3, movie-2)
root(ROOT-0, had-3)
det(Daffy Duck-6, the-4)
compound(Daffy Duck-6, character-5)
dobj(had-3, Daffy Duck-6)

PARSE TREE:(1074) ROOT ROOT
    (1076) movie NT
    (1078) Daffy Duck VTTEXT
        (1080) character VTTEXT


===========
TRANSLATIONS
===========
TOT: 0.7999999999999998; NL: 0.7999999999999998; NL+AG: 0.9579945799457993; NL+QF: 0.9385475288600288; rels: []; projs: [movie_0.title]; preds: [cast_0.role = "Daffy Duck",movie_0.title = "Character"]; havings: []; superlative: []; blanks: 0
TOT: 0.7999999999999998; NL: 0.7999999999999998; NL+AG: 0.9579945799457993; NL+QF: 0.9356746031746032; rels: []; projs: [movie_0.title]; preds: [cast_0.role = "Daffy Duck",cast_0.role = "Character"]; havings: []; superlative: []; blanks: 0
TOT: 0.7931747104508364; NL: 0.7931747104508364; NL+AG: 0.9511692903966359; NL+QF: 0.9299537752211927; rels: []; projs: [movie_0.title]; preds: [cast_0.role = "Daffy Duck",tv_series_0.title = "Character"]; havings: []; superlative: []; blanks: 0
TOT: 0.7532199711698194; NL: 0.7532199711698194; NL+AG: 0.9112145511156191; NL+QF: 0.905670159570564; rels: []; projs: [movie_0.title]; preds: [cast_0.role = "Daffy Duck",company_0.name = "Character 7"]; havings: []; superlative: []; blanks: 0
TOT: 0.7519122074889332; NL: 0.7519122074889332; NL+AG: 0.9099067874347327; NL+QF: 0.9090230070333236; rels: []; projs: [movie_0.title]; preds: [cast_0.role = "Daffy Duck",keyword_0.keyword = "character-arc"]; havings: []; superlative: []; blanks: 0
TOT: 0.7360578004103487; NL: 0.7360578004103487; NL+AG: 0.9516286220554512; NL+QF: 0.9020158317184152; rels: []; projs: [movie_0.title]; preds: [movie_0.title = "Daffy Duck Hunt",movie_0.title = "Character"]; havings: []; superlative: []; blanks: 0
TOT: 0.7360578004103487; NL: 0.7360578004103487; NL+AG: 0.9516286220554512; NL+QF: 0.9093559157637606; rels: []; projs: [movie_0.title]; preds: [movie_0.title = "Daffy Duck Hunt",cast_0.role = "Character"]; havings: []; superlative: []; blanks: 0
TOT: 0.7292325108611853; NL: 0.7292325108611853; NL+AG: 0.9448033325062878; NL+QF: 0.8967206891906901; rels: []; projs: [movie_0.title]; preds: [movie_0.title = "Daffy Duck Hunt",tv_series_0.title = "Character"]; havings: []; superlative: []; blanks: 0
TOT: 0.7116728899374175; NL: 0.7116728899374175; NL+AG: 0.9516286220554512; NL+QF: 0.9007449494949494; rels: []; projs: [movie_0.title]; preds: [tv_series_0.title = "The Daffy Duck Show",movie_0.title = "Character"]; havings: []; superlative: []; blanks: 0
TOT: 0.7116728899374175; NL: 0.7116728899374175; NL+AG: 0.9516286220554512; NL+QF: 0.9011706349206349; rels: []; projs: [movie_0.title]; preds: [tv_series_0.title = "The Daffy Duck Show",cast_0.role = "Character"]; havings: []; superlative: []; blanks: 0

===========
RESULTS
===========
TOT: 0.7961666666666665; TR: 0.7999999999999998; SMP: 0.41666666666666663; select movie_0.title from cast as cast_0, cast as cast_1, movie as movie_0 where cast_0.role = "Character" and cast_1.role = "Daffy Duck" and cast_0.msid = movie_0.mid and cast_1.msid = movie_0.mid
TOT: 0.7961666666666665; TR: 0.7999999999999998; SMP: 0.41666666666666663; select movie_0.title from cast as cast_0, cast as cast_1, movie as movie_0 where cast_0.role = "Daffy Duck" and cast_1.role = "Character" and cast_0.msid = movie_0.mid and cast_1.msid = movie_0.mid
TOT: 0.7957499999999998; TR: 0.7999999999999998; SMP: 0.375; select movie_0.title from cast as cast_0, cast as cast_1, movie as movie_0, movie as movie_1 where cast_0.role = "Character" and cast_1.role = "Daffy Duck" and cast_0.msid = movie_0.mid and cast_1.msid = movie_1.mid and movie_0.mid = movie_1.mid
TOT: 0.7957499999999998; TR: 0.7999999999999998; SMP: 0.375; select movie_0.title from cast as cast_0, cast as cast_1, movie as movie_0, movie as movie_1 where cast_0.role = "Daffy Duck" and cast_1.role = "Character" and cast_0.msid = movie_0.mid and cast_1.msid = movie_1.mid and movie_0.mid = movie_1.mid
TOT: 0.7954999999999998; TR: 0.7999999999999998; SMP: 0.35; select movie_0.title from cast as cast_0, cast as cast_1, copyright as copyright_0, movie as movie_0, tv_series as tv_series_0 where cast_0.role = "Character" and cast_1.role = "Daffy Duck" and cast_0.msid = movie_0.mid and cast_1.msid = tv_series_0.sid and copyright_0.msid = movie_0.mid and copyright_0.msid = tv_series_0.sid
TOT: 0.7954999999999998; TR: 0.7999999999999998; SMP: 0.35; select movie_0.title from cast as cast_0, cast as cast_1, copyright as copyright_0, movie as movie_0, tv_series as tv_series_0 where cast_0.role = "Daffy Duck" and cast_1.role = "Character" and cast_0.msid = movie_0.mid and cast_1.msid = tv_series_0.sid and copyright_0.msid = movie_0.mid and copyright_0.msid = tv_series_0.sid
TOT: 0.7954999999999998; TR: 0.7999999999999998; SMP: 0.35; select movie_0.title from cast as cast_0, cast as cast_1, classification as classification_0, movie as movie_0, tv_series as tv_series_0 where cast_0.role = "Character" and cast_1.role = "Daffy Duck" and cast_0.msid = movie_0.mid and cast_1.msid = tv_series_0.sid and classification_0.msid = movie_0.mid and classification_0.msid = tv_series_0.sid
TOT: 0.7954999999999998; TR: 0.7999999999999998; SMP: 0.35; select movie_0.title from cast as cast_0, cast as cast_1, classification as classification_0, movie as movie_0, tv_series as tv_series_0 where cast_0.role = "Daffy Duck" and cast_1.role = "Character" and cast_0.msid = movie_0.mid and cast_1.msid = tv_series_0.sid and classification_0.msid = movie_0.mid and classification_0.msid = tv_series_0.sid
TOT: 0.7954999999999998; TR: 0.7999999999999998; SMP: 0.35; select movie_0.title from cast as cast_0, cast as cast_1, movie as movie_0, movie as movie_1, tags as tags_0 where cast_0.role = "Character" and cast_1.role = "Daffy Duck" and cast_0.msid = movie_0.mid and cast_1.msid = movie_1.mid and movie_0.mid = tags_0.msid and movie_1.mid = tags_0.msid
TOT: 0.7954999999999998; TR: 0.7999999999999998; SMP: 0.35; select movie_0.title from cast as cast_0, cast as cast_1, movie as movie_0, movie as movie_1, tags as tags_0 where cast_0.role = "Daffy Duck" and cast_1.role = "Character" and cast_0.msid = movie_0.mid and cast_1.msid = movie_1.mid and movie_0.mid = tags_0.msid and movie_1.mid = tags_0.msid


03:29  INFO: ================
03:29  INFO: QUERY 118: Find all movies featuring both "Matt Damon" and "Ben Affleck"
03:29  INFO: ================
1082. ROOT: ROOT; NA; ; (0) 
1083. Find: CMT; NA; ; (0) 
1084. featuring: NT; NA; ; (0) movie.release_year(0.64):| producer.name(0.64):| producer(0.64):| made_by(0.64):| movie.title_aka(0.62):| 
1085. movies: NT; NA; all; (0) movie.title(1.0):| movie(1.0):| company.name(0.91):Movies; Movie; W Movies; | tv_series.title(0.8):Movies, Movies, Movi; Moon Movies; Movie Memories; | cast.role(0.79):Movie; KPC Movies; Movie F; | 
1087. Matt Damon: VTTEXT; NA; ; (0) actor.name(0.98):Matt Damon; Matt Damon; Matt Diamond; | producer.name(0.98):Matt Damon; Matt Damon; Matt Diamond; | writer.name(0.98):Matt Damon; Matt Damon; Matt Diamond; | director.name(0.92):Matt Damon; Matt Diamond; Matt Diamond; | movie.title(0.76):I'm Not Matt Damon; I'm Not Matt Damon; Meeting Matt Damon; | 
1090. Ben Affleck: VTTEXT; NA; ; (0) director.name(0.98):Ben Affleck; Ben Affleck; Affleck; | actor.name(0.98):Ben Affleck; Ben Affleck; Affleck; | producer.name(0.98):Ben Affleck; Ben Affleck; Affleck; | writer.name(0.98):Ben Affleck; Ben Affleck; Affleck; | cast.role(0.89):Ben Afflect; Ben Afflect; Ben Affleck Fan; | 
Find, VB
all, DT
movies, NNS
featuring, VBG
both, CC
Matt Damon, NNP
and, CC
Ben Affleck, NNP
root(ROOT-0, Find-1)
det(movies-3, all-2)
nsubj(featuring-4, movies-3)
dep(Find-1, featuring-4)
cc:preconj(Matt Damon-6, both-5)
dobj(featuring-4, Matt Damon-6)
cc(Matt Damon-6, and-7)
conj(Matt Damon-6, Ben Affleck-8)

PARSE TREE:(1082) ROOT ROOT
    (1083) Find CMT
        (1084) featuring NT
            (1085) movies NT
            (1087) Matt Damon VTTEXT
            (1090) Ben Affleck VTTEXT


===========
TRANSLATIONS
===========
TOT: 0.9002406730362214; NL: 0.9002406730362214; NL+AG: 0.9581696075425752; NL+QF: 0.958220699662851; rels: [movie]; projs: [movie_0.release_year]; preds: [actor_0.name = "Matt Damon",director_0.name = "Ben Affleck"]; havings: []; superlative: []; blanks: 0
TOT: 0.9002406730362214; NL: 0.9002406730362214; NL+AG: 0.9581696075425752; NL+QF: 0.9579243928786318; rels: [movie]; projs: [movie_0.release_year]; preds: [actor_0.name = "Matt Damon",actor_0.name = "Ben Affleck"]; havings: []; superlative: []; blanks: 0
TOT: 0.9002406730362214; NL: 0.9002406730362214; NL+AG: 0.9581696075425752; NL+QF: 0.9570456121185493; rels: [movie]; projs: [movie_0.release_year]; preds: [actor_0.name = "Matt Damon",producer_0.name = "Ben Affleck"]; havings: []; superlative: []; blanks: 0
TOT: 0.9002406730362214; NL: 0.9002406730362214; NL+AG: 0.9581696075425752; NL+QF: 0.9573898662819975; rels: [movie]; projs: [movie_0.release_year]; preds: [actor_0.name = "Matt Damon",writer_0.name = "Ben Affleck"]; havings: []; superlative: []; blanks: 0
TOT: 0.9002406730362214; NL: 0.9002406730362214; NL+AG: 0.9581696075425752; NL+QF: 0.9574318399609206; rels: [movie]; projs: [movie_0.release_year]; preds: [producer_0.name = "Matt Damon",director_0.name = "Ben Affleck"]; havings: []; superlative: []; blanks: 0
TOT: 0.9002406730362214; NL: 0.9002406730362214; NL+AG: 0.9581696075425752; NL+QF: 0.9570581984270401; rels: [movie]; projs: [movie_0.release_year]; preds: [producer_0.name = "Matt Damon",actor_0.name = "Ben Affleck"]; havings: []; superlative: []; blanks: 0
TOT: 0.9002406730362214; NL: 0.9002406730362214; NL+AG: 0.9581696075425752; NL+QF: 0.9563856436660548; rels: [movie]; projs: [movie_0.release_year]; preds: [producer_0.name = "Matt Damon",producer_0.name = "Ben Affleck"]; havings: []; superlative: []; blanks: 0
TOT: 0.9002406730362214; NL: 0.9002406730362214; NL+AG: 0.9581696075425752; NL+QF: 0.9580188103238607; rels: [movie]; projs: [movie_0.release_year]; preds: [producer_0.name = "Matt Damon",writer_0.name = "Ben Affleck"]; havings: []; superlative: []; blanks: 0
TOT: 0.9002406730362214; NL: 0.9002406730362214; NL+AG: 0.9581696075425752; NL+QF: 0.9577320420446513; rels: [movie]; projs: [movie_0.release_year]; preds: [writer_0.name = "Matt Damon",director_0.name = "Ben Affleck"]; havings: []; superlative: []; blanks: 0
TOT: 0.9002406730362214; NL: 0.9002406730362214; NL+AG: 0.9581696075425752; NL+QF: 0.9573584005107707; rels: [movie]; projs: [movie_0.release_year]; preds: [writer_0.name = "Matt Damon",actor_0.name = "Ben Affleck"]; havings: []; superlative: []; blanks: 0

===========
RESULTS
===========
TOT: 0.8947382663058591; TR: 0.9002406730362214; SMP: 0.35; select movie_0.release_year from made_by as made_by_0, made_by as made_by_1, movie as movie_0, producer as producer_0, producer as producer_1 where producer_0.name = "Ben Affleck" and producer_1.name = "Matt Damon" and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid and made_by_1.msid = movie_0.mid and made_by_1.pid = producer_1.pid
TOT: 0.8947382663058591; TR: 0.9002406730362214; SMP: 0.35; select movie_0.release_year from made_by as made_by_0, made_by as made_by_1, movie as movie_0, producer as producer_0, producer as producer_1 where producer_0.name = "Matt Damon" and producer_1.name = "Ben Affleck" and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid and made_by_1.msid = movie_0.mid and made_by_1.pid = producer_1.pid
TOT: 0.8947382663058591; TR: 0.9002406730362214; SMP: 0.35; select movie_0.release_year from made_by as made_by_0, movie as movie_0, producer as producer_0, writer as writer_0, written_by as written_by_0 where producer_0.name = "Matt Damon" and writer_0.name = "Ben Affleck" and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid and movie_0.mid = written_by_0.msid and writer_0.wid = written_by_0.wid
TOT: 0.8947382663058591; TR: 0.9002406730362214; SMP: 0.35; select movie_0.release_year from actor as actor_0, cast as cast_0, made_by as made_by_0, movie as movie_0, producer as producer_0 where actor_0.name = "Matt Damon" and producer_0.name = "Ben Affleck" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid
TOT: 0.8947382663058591; TR: 0.9002406730362214; SMP: 0.35; select movie_0.release_year from actor as actor_0, cast as cast_0, made_by as made_by_0, movie as movie_0, producer as producer_0 where actor_0.name = "Ben Affleck" and producer_0.name = "Matt Damon" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid
TOT: 0.8947382663058591; TR: 0.9002406730362214; SMP: 0.35; select movie_0.release_year from actor as actor_0, cast as cast_0, movie as movie_0, writer as writer_0, written_by as written_by_0 where actor_0.name = "Matt Damon" and writer_0.name = "Ben Affleck" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and movie_0.mid = written_by_0.msid and writer_0.wid = written_by_0.wid
TOT: 0.8947382663058591; TR: 0.9002406730362214; SMP: 0.35; select movie_0.release_year from actor as actor_0, cast as cast_0, movie as movie_0, writer as writer_0, written_by as written_by_0 where actor_0.name = "Ben Affleck" and writer_0.name = "Matt Damon" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and movie_0.mid = written_by_0.msid and writer_0.wid = written_by_0.wid
TOT: 0.8947382663058591; TR: 0.9002406730362214; SMP: 0.35; select movie_0.release_year from actor as actor_0, cast as cast_0, directed_by as directed_by_0, director as director_0, movie as movie_0 where actor_0.name = "Matt Damon" and director_0.name = "Ben Affleck" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid
TOT: 0.8947382663058591; TR: 0.9002406730362214; SMP: 0.35; select movie_0.release_year from directed_by as directed_by_0, director as director_0, made_by as made_by_0, movie as movie_0, producer as producer_0 where director_0.name = "Ben Affleck" and producer_0.name = "Matt Damon" and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid
TOT: 0.8947382663058591; TR: 0.9002406730362214; SMP: 0.35; select movie_0.release_year from directed_by as directed_by_0, director as director_0, movie as movie_0, writer as writer_0, written_by as written_by_0 where director_0.name = "Ben Affleck" and writer_0.name = "Matt Damon" and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and movie_0.mid = written_by_0.msid and writer_0.wid = written_by_0.wid


03:31  INFO: ================
03:31  INFO: QUERY 73: Find the actors who played in the movie "Camp X-Ray"
03:31  INFO: ================
03:32  INFO: ================
03:32  INFO: QUERY 54: Find all movies produced by Netflix
03:32  INFO: ================
1103. ROOT: ROOT; NA; ; (0) 
1104. Find: CMT; NA; ; (0) 
1105. movies: NT; NA; all; (0) movie.title(1.0):| movie(1.0):| company.name(0.91):Movies; Movie; W Movies; | tv_series.title(0.8):Movies, Movies, Movi; Moon Movies; Movie Memories; | cast.role(0.79):Movie; KPC Movies; Movie F; | 
1107. produced: NT; NA; ; (0) producer.name(1.0):| producer(1.0):| made_by(0.74):| directed_by(0.69):| cast.role(0.63):| 
1108. Netflix: VTTEXT; NA; ; (0) company.name(1.0):Netflix; Netflix; Netflix; | keyword.keyword(0.86):netflix; netflix-series; netflix-production; | tv_series.title(0.78):| tv_series(0.78):| cast.role(0.77):Netflix guy; | 
Find, VB
all, DT
movies, NNS
produced, VBN
by, IN
Netflix, NNP
root(ROOT-0, Find-1)
det(movies-3, all-2)
dobj(Find-1, movies-3)
acl(movies-3, produced-4)
case(Netflix-6, by-5)
nmod(produced-4, Netflix-6)

PARSE TREE:(1103) ROOT ROOT
    (1104) Find CMT
        (1105) movies NT
            (1107) produced NT
                (1108) Netflix VTTEXT


===========
TRANSLATIONS
===========
TOT: 1.0; NL: 1.0; NL+AG: 1.0; NL+QF: 1.0; rels: [producer]; projs: [movie_0.title]; preds: [company_0.name = "Netflix"]; havings: []; superlative: []; blanks: 0
TOT: 0.954406239574876; NL: 0.954406239574876; NL+AG: 0.954406239574876; NL+QF: 0.9726316510593542; rels: [producer]; projs: [movie_0.title]; preds: [keyword_0.keyword = "netflix"]; havings: []; superlative: []; blanks: 0
TOT: 0.9526007018170926; NL: 0.9526007018170926; NL+AG: 0.9526007018170926; NL+QF: 0.9644505263628194; rels: [producer]; projs: [company_0.id]; preds: [company_0.name = "Movies",company_0.name = "Netflix"]; havings: []; superlative: []; blanks: 0
TOT: 0.9282166666666667; NL: 0.9282166666666667; NL+AG: 0.9602729565096298; NL+QF: 0.9555555555555556; rels: [producer,tv_series]; projs: [movie_0.title]; preds: []; havings: []; superlative: []; blanks: 0
TOT: 0.9248655564138278; NL: 0.9248655564138278; NL+AG: 0.9776410850753393; NL+QF: 0.956785074078161; rels: [producer]; projs: [movie_0.title]; preds: [cast_0.role = "Netflix guy"]; havings: []; superlative: []; blanks: 0
TOT: 0.9184053814982494; NL: 0.9184053814982494; NL+AG: 0.9184053814982494; NL+QF: 0.9388040361236871; rels: [producer]; projs: [company_0.id]; preds: [company_0.name = "Movies",keyword_0.keyword = "netflix"]; havings: []; superlative: []; blanks: 0
TOT: 0.9141833333333335; NL: 0.9141833333333335; NL+AG: 0.964472307167625; NL+QF: 0.9570556565656566; rels: [made_by]; projs: [movie_0.title]; preds: [company_0.name = "Netflix"]; havings: []; superlative: []; blanks: 0
TOT: 0.8987632018170925; NL: 0.8987632018170925; NL+AG: 0.9209394983412958; NL+QF: 0.9269505263628194; rels: [producer,tv_series]; projs: [company_0.id]; preds: [company_0.name = "Movies"]; havings: []; superlative: []; blanks: 0
TOT: 0.8979; NL: 0.8979; NL+AG: 0.964472307167625; NL+QF: 0.9588886486486489; rels: [directed_by]; projs: [movie_0.title]; preds: [company_0.name = "Netflix"]; havings: []; superlative: []; blanks: 0
TOT: 0.8962498691274633; NL: 0.8962498691274633; NL+AG: 0.9208096460027742; NL+QF: 0.9269505263628194; rels: [producer]; projs: [company_0.id]; preds: [company_0.name = "Movies",cast_0.role = "Netflix guy"]; havings: []; superlative: []; blanks: 0

===========
RESULTS
===========


03:32  INFO: ================
03:32  INFO: QUERY 60: Find all actors from Austin born after 1980
03:32  INFO: ================
1111. ROOT: ROOT; NA; ; (0) 
1112. Find: CMT; NA; ; (0) 
1113. actors: NT; NA; all; (0) actor.name(1.0):| actor(1.0):| movie.title(0.95):Actors; Actors; Actors; | cast.role(0.95):Actors; Actors; Actors; | tv_series.title(0.9):Actors; Actor; Actors Vs; | 
1115. Austin: VTTEXT; NA; ; (0) director.birth_city(1.0):Austin; Austin; Austin; | actor.birth_city(1.0):Austin; Austin; Austin; | actor.name(1.0):Austin; Austin; Austin; | producer.birth_city(1.0):Austin; Austin; Austin; | writer.birth_city(1.0):Austin; Austin; Austin; | 
1117. born: NT; NA; ; (0) tv_series.num_of_episodes(0.62):| tv_series.num_of_seasons(0.62):| tags(0.6):| director.did(0.6):| producer.name(0.59):| 
1118. 1980: VTNUM; NA; ; (0) director.birth_year(1.0):1985; 1993; 1984; | writer.birth_year(1.0):1985; 1993; 1984; | producer.birth_year(1.0):1985; 1993; 1997; | actor.birth_year(0.99):1999; 2003; 1986; | movie.release_year(0.98):2012; 2014; 2015; | 
1119. after: OT; >; ; (0) 
Find, VB
all, DT
actors, NNS
from, IN
Austin, NNP
born, VBN
after, IN
1980, CD
root(ROOT-0, Find-1)
det(actors-3, all-2)
dobj(Find-1, actors-3)
case(Austin-5, from-4)
nmod(Find-1, Austin-5)
acl(Austin-5, born-6)
case(1980-8, after-7)
nmod(born-6, 1980-8)

PARSE TREE:(1111) ROOT ROOT
    (1112) Find CMT
        (1113) actors NT
        (1115) Austin VTTEXT
            (1117) born NT
                (1118) 1980 VTNUM
                    (1119) after OT


===========
TRANSLATIONS
===========
TOT: 0.8999531565656566; NL: 0.8999531565656566; NL+AG: 0.9691062174708978; NL+QF: 0.9617992424242423; rels: [tags]; projs: [actor_0.name]; preds: [director_0.birth_city = "Austin",director_0.birth_year > 1980]; havings: []; superlative: []; blanks: 0
TOT: 0.8999531565656566; NL: 0.8999531565656566; NL+AG: 0.9691062174708978; NL+QF: 0.9617992424242423; rels: [tags]; projs: [actor_0.name]; preds: [director_0.birth_city = "Austin",writer_0.birth_year > 1980]; havings: []; superlative: []; blanks: 0
TOT: 0.8999531565656566; NL: 0.8999531565656566; NL+AG: 0.9691062174708978; NL+QF: 0.9617992424242424; rels: [tags]; projs: [actor_0.name]; preds: [actor_0.birth_city = "Austin",director_0.birth_year > 1980]; havings: []; superlative: []; blanks: 0
TOT: 0.8999531565656566; NL: 0.8999531565656566; NL+AG: 0.9691062174708978; NL+QF: 0.9617992424242424; rels: [tags]; projs: [actor_0.name]; preds: [actor_0.birth_city = "Austin",writer_0.birth_year > 1980]; havings: []; superlative: []; blanks: 0
TOT: 0.8999531565656566; NL: 0.8999531565656566; NL+AG: 0.9691062174708978; NL+QF: 0.9617992424242424; rels: [tags]; projs: [actor_0.name]; preds: [actor_0.name = "Austin",director_0.birth_year > 1980]; havings: []; superlative: []; blanks: 0
TOT: 0.8999531565656566; NL: 0.8999531565656566; NL+AG: 0.9691062174708978; NL+QF: 0.9617992424242424; rels: [tags]; projs: [actor_0.name]; preds: [actor_0.name = "Austin",writer_0.birth_year > 1980]; havings: []; superlative: []; blanks: 0
TOT: 0.8999531565656566; NL: 0.8999531565656566; NL+AG: 0.9691062174708978; NL+QF: 0.9617992424242423; rels: [tags]; projs: [actor_0.name]; preds: [producer_0.birth_city = "Austin",director_0.birth_year > 1980]; havings: []; superlative: []; blanks: 0
TOT: 0.8999531565656566; NL: 0.8999531565656566; NL+AG: 0.9691062174708978; NL+QF: 0.9617992424242423; rels: [tags]; projs: [actor_0.name]; preds: [producer_0.birth_city = "Austin",writer_0.birth_year > 1980]; havings: []; superlative: []; blanks: 0
TOT: 0.8999531565656566; NL: 0.8999531565656566; NL+AG: 0.9691062174708978; NL+QF: 0.9617992424242423; rels: [tags]; projs: [actor_0.name]; preds: [writer_0.birth_city = "Austin",director_0.birth_year > 1980]; havings: []; superlative: []; blanks: 0
TOT: 0.8999531565656566; NL: 0.8999531565656566; NL+AG: 0.9691062174708978; NL+QF: 0.9617992424242423; rels: [tags]; projs: [actor_0.name]; preds: [writer_0.birth_city = "Austin",writer_0.birth_year > 1980]; havings: []; superlative: []; blanks: 0

===========
RESULTS
===========
TOT: 0.8941679107142857; TR: 0.8999531565656566; SMP: 0.3214285714285714; select actor_0.name from actor as actor_0, cast as cast_0, movie as movie_0, tags as tags_0, tv_series as tv_series_0, writer as writer_0, written_by as written_by_0 where actor_0.birth_city = "Austin" and writer_0.birth_year > 1980 and actor_0.aid = cast_0.aid and cast_0.msid = tv_series_0.sid and movie_0.mid = tags_0.msid and movie_0.mid = written_by_0.msid and tags_0.msid = tv_series_0.sid and writer_0.wid = written_by_0.wid
TOT: 0.8941679107142857; TR: 0.8999531565656566; SMP: 0.3214285714285714; select actor_0.name from actor as actor_0, cast as cast_0, movie as movie_0, tags as tags_0, tv_series as tv_series_0, writer as writer_0, written_by as written_by_0 where writer_0.birth_city = "Austin" and writer_0.birth_year > 1980 and actor_0.aid = cast_0.aid and cast_0.msid = tv_series_0.sid and movie_0.mid = tags_0.msid and movie_0.mid = written_by_0.msid and tags_0.msid = tv_series_0.sid and writer_0.wid = written_by_0.wid
TOT: 0.8941679107142857; TR: 0.8999531565656566; SMP: 0.3214285714285714; select actor_0.name from actor as actor_0, cast as cast_0, movie as movie_0, movie as movie_1, tags as tags_0, writer as writer_0, written_by as written_by_0 where actor_0.birth_city = "Austin" and writer_0.birth_year > 1980 and actor_0.aid = cast_0.aid and cast_0.msid = movie_1.mid and movie_0.mid = tags_0.msid and movie_0.mid = written_by_0.msid and movie_1.mid = tags_0.msid and writer_0.wid = written_by_0.wid
TOT: 0.8941679107142857; TR: 0.8999531565656566; SMP: 0.3214285714285714; select actor_0.name from actor as actor_0, cast as cast_0, movie as movie_0, movie as movie_1, tags as tags_0, writer as writer_0, written_by as written_by_0 where writer_0.birth_city = "Austin" and writer_0.birth_year > 1980 and actor_0.aid = cast_0.aid and cast_0.msid = movie_1.mid and movie_0.mid = tags_0.msid and movie_0.mid = written_by_0.msid and movie_1.mid = tags_0.msid and writer_0.wid = written_by_0.wid
TOT: 0.8941679107142857; TR: 0.8999531565656566; SMP: 0.3214285714285714; select actor_0.name from actor as actor_0, cast as cast_0, movie as movie_0, tags as tags_0, tv_series as tv_series_0, writer as writer_0, written_by as written_by_0 where actor_0.birth_city = "Austin" and writer_0.birth_year > 1980 and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and movie_0.mid = tags_0.msid and tags_0.msid = tv_series_0.sid and tv_series_0.sid = written_by_0.msid and writer_0.wid = written_by_0.wid
TOT: 0.8941679107142857; TR: 0.8999531565656566; SMP: 0.3214285714285714; select actor_0.name from actor as actor_0, cast as cast_0, movie as movie_0, tags as tags_0, tv_series as tv_series_0, writer as writer_0, written_by as written_by_0 where writer_0.birth_city = "Austin" and writer_0.birth_year > 1980 and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and movie_0.mid = tags_0.msid and tags_0.msid = tv_series_0.sid and tv_series_0.sid = written_by_0.msid and writer_0.wid = written_by_0.wid
TOT: 0.8941679107142857; TR: 0.8999531565656566; SMP: 0.3214285714285714; select actor_0.name from actor as actor_0, cast as cast_0, directed_by as directed_by_0, director as director_0, tags as tags_0, tv_series as tv_series_0, tv_series as tv_series_1 where director_0.birth_city = "Austin" and director_0.birth_year > 1980 and actor_0.aid = cast_0.aid and cast_0.msid = tv_series_1.sid and directed_by_0.did = director_0.did and directed_by_0.msid = tv_series_0.sid and tags_0.msid = tv_series_0.sid and tags_0.msid = tv_series_1.sid
TOT: 0.8941679107142857; TR: 0.8999531565656566; SMP: 0.3214285714285714; select actor_0.name from actor as actor_0, cast as cast_0, directed_by as directed_by_0, director as director_0, tags as tags_0, tv_series as tv_series_0, tv_series as tv_series_1 where actor_0.birth_city = "Austin" and director_0.birth_year > 1980 and actor_0.aid = cast_0.aid and cast_0.msid = tv_series_1.sid and directed_by_0.did = director_0.did and directed_by_0.msid = tv_series_0.sid and tags_0.msid = tv_series_0.sid and tags_0.msid = tv_series_1.sid
TOT: 0.8941679107142857; TR: 0.8999531565656566; SMP: 0.3214285714285714; select actor_0.name from actor as actor_0, cast as cast_0, directed_by as directed_by_0, director as director_0, movie as movie_0, movie as movie_1, tags as tags_0 where director_0.birth_city = "Austin" and director_0.birth_year > 1980 and actor_0.aid = cast_0.aid and cast_0.msid = movie_1.mid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and movie_0.mid = tags_0.msid and movie_1.mid = tags_0.msid
TOT: 0.8941679107142857; TR: 0.8999531565656566; SMP: 0.3214285714285714; select actor_0.name from actor as actor_0, cast as cast_0, directed_by as directed_by_0, director as director_0, movie as movie_0, movie as movie_1, tags as tags_0 where actor_0.birth_city = "Austin" and director_0.birth_year > 1980 and actor_0.aid = cast_0.aid and cast_0.msid = movie_1.mid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and movie_0.mid = tags_0.msid and movie_1.mid = tags_0.msid


03:33  INFO: ================
03:33  INFO: QUERY 71: Who is the writer of "The Truman Show"
03:33  INFO: ================
03:33  INFO: ================
03:33  INFO: QUERY 56: Who is the director of the series "House of Cards" produced by Netflix?
03:33  INFO: ================
03:34  INFO: ================
03:34  INFO: QUERY 41: Find all movies directed by "Woody Allen" and featuring "Scarlett Johansson"
03:34  INFO: ================
1142. ROOT: ROOT; NA; ; (0) 
1143. Find: CMT; NA; ; (0) 
1144. directed: NT; NA; ; (0) directed_by(1.0):| director.name(0.72):| director(0.72):| producer.name(0.69):| producer(0.69):| 
1145. movies: NT; NA; all; (0) movie.title(1.0):| movie(1.0):| company.name(0.91):Movies; Movie; W Movies; | tv_series.title(0.8):Movies, Movies, Movi; Moon Movies; Movie Memories; | cast.role(0.79):Movie; KPC Movies; Movie F; | 
1147. Woody Allen: VTTEXT; NA; ; (0) director.name(0.99):Woody Allen; Woody Allen; Moody Allen; | producer.name(0.99):Woody Allen; Woody Allen; Moody Allen; | writer.name(0.99):Woody Allen; Woody Allen; Moody Allen; | actor.name(0.98):Woody Allen; Woody Allen; Jody Allen; | cast.role(0.84):Woody Allen Jr.; Woody Allen Jr.; Young Woody Allen; | 
1150. featuring: NT; NA; ; (0) movie.release_year(0.64):| producer.name(0.64):| producer(0.64):| made_by(0.64):| movie.title_aka(0.62):| 
1151. Scarlett Johansson: VTTEXT; NA; ; (0) director.name(0.99):Scarlett Johansson; Scarlett Johansson; Scarlett Johanssen; | actor.name(0.99):Scarlett Johansson; Scarlett Johansson; Scarlett Johanssen; | producer.name(0.99):Scarlett Johansson; Scarlett Johansson; Scarlett Johanssen; | writer.name(0.99):Scarlett Johansson; Scarlett Johansson; Scarlett Johanssen; | cast.role(0.89):Scarlett Johansonist; Scarlett Johansonist; Scarlett Johansen; | 
Find, VB
all, DT
movies, NNS
directed, VBN
by, IN
Woody Allen, NNP
and, CC
featuring, VBG
Scarlett Johansson, NNP
root(ROOT-0, Find-1)
det(movies-3, all-2)
nsubj(directed-4, movies-3)
ccomp(Find-1, directed-4)
case(Woody Allen-6, by-5)
nmod(directed-4, Woody Allen-6)
cc(directed-4, and-7)
conj(directed-4, featuring-8)
dobj(featuring-8, Scarlett Johansson-9)

PARSE TREE:(1142) ROOT ROOT
    (1143) Find CMT
        (1144) directed NT
            (1145) movies NT
            (1147) Woody Allen VTTEXT
        (1150) featuring NT
            (1151) Scarlett Johansson VTTEXT


===========
TRANSLATIONS
===========
TOT: 0.9237088235294117; NL: 0.9237088235294117; NL+AG: 0.9798343127855906; NL+QF: 0.9584191176470588; rels: [movie]; projs: [director_0.name]; preds: [director_0.name = "Woody Allen",producer_0.name = "Scarlett Johansson"]; havings: []; superlative: []; blanks: 0
TOT: 0.9237088235294117; NL: 0.9237088235294117; NL+AG: 0.9798343127855906; NL+QF: 0.9584191176470588; rels: [movie]; projs: [director_0.name]; preds: [producer_0.name = "Woody Allen",producer_0.name = "Scarlett Johansson"]; havings: []; superlative: []; blanks: 0
TOT: 0.9237088235294117; NL: 0.9237088235294117; NL+AG: 0.9798343127855906; NL+QF: 0.9592465019463667; rels: [movie]; projs: [director_0.name]; preds: [writer_0.name = "Woody Allen",producer_0.name = "Scarlett Johansson"]; havings: []; superlative: []; blanks: 0
TOT: 0.9222906745972009; NL: 0.9222906745972009; NL+AG: 0.9784161638533799; NL+QF: 0.9579224593960148; rels: [movie]; projs: [director_0.name]; preds: [actor_0.name = "Woody Allen",producer_0.name = "Scarlett Johansson"]; havings: []; superlative: []; blanks: 0
TOT: 0.9179838235294118; NL: 0.9179838235294118; NL+AG: 0.9798343127855906; NL+QF: 0.9584191176470588; rels: [movie]; projs: [producer_0.name]; preds: [director_0.name = "Woody Allen",director_0.name = "Scarlett Johansson"]; havings: []; superlative: []; blanks: 0
TOT: 0.9179838235294118; NL: 0.9179838235294118; NL+AG: 0.9798343127855906; NL+QF: 0.9592093022191908; rels: [movie]; projs: [producer_0.name]; preds: [director_0.name = "Woody Allen",actor_0.name = "Scarlett Johansson"]; havings: []; superlative: []; blanks: 0
TOT: 0.9179838235294118; NL: 0.9179838235294118; NL+AG: 0.9798343127855906; NL+QF: 0.9584191176470588; rels: [movie]; projs: [producer_0.name]; preds: [director_0.name = "Woody Allen",producer_0.name = "Scarlett Johansson"]; havings: []; superlative: []; blanks: 0
TOT: 0.9179838235294118; NL: 0.9179838235294118; NL+AG: 0.9798343127855906; NL+QF: 0.9586007785467128; rels: [movie]; projs: [producer_0.name]; preds: [director_0.name = "Woody Allen",writer_0.name = "Scarlett Johansson"]; havings: []; superlative: []; blanks: 0
TOT: 0.9179838235294118; NL: 0.9179838235294118; NL+AG: 0.9798343127855906; NL+QF: 0.9584191176470588; rels: [movie]; projs: [producer_0.name]; preds: [producer_0.name = "Woody Allen",director_0.name = "Scarlett Johansson"]; havings: []; superlative: []; blanks: 0
TOT: 0.9179838235294118; NL: 0.9179838235294118; NL+AG: 0.9798343127855906; NL+QF: 0.95914203253926; rels: [movie]; projs: [producer_0.name]; preds: [producer_0.name = "Woody Allen",actor_0.name = "Scarlett Johansson"]; havings: []; superlative: []; blanks: 0

===========
RESULTS
===========
TOT: 0.9176860210084034; TR: 0.9237088235294117; SMP: 0.3214285714285714; select director_0.name from directed_by as directed_by_0, director as director_0, made_by as made_by_0, movie as movie_0, producer as producer_0, writer as writer_0, written_by as written_by_0 where producer_0.name = "Scarlett Johansson" and writer_0.name = "Woody Allen" and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid and movie_0.mid = written_by_0.msid and writer_0.wid = written_by_0.wid
TOT: 0.9176860210084034; TR: 0.9237088235294117; SMP: 0.3214285714285714; select director_0.name from directed_by as directed_by_0, director as director_0, made_by as made_by_0, made_by as made_by_1, movie as movie_0, producer as producer_0, producer as producer_1 where producer_0.name = "Scarlett Johansson" and producer_1.name = "Woody Allen" and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid and made_by_1.msid = movie_0.mid and made_by_1.pid = producer_1.pid
TOT: 0.9176860210084034; TR: 0.9237088235294117; SMP: 0.3214285714285714; select director_0.name from directed_by as directed_by_0, director as director_0, made_by as made_by_0, made_by as made_by_1, movie as movie_0, producer as producer_0, producer as producer_1 where producer_0.name = "Woody Allen" and producer_1.name = "Scarlett Johansson" and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid and made_by_1.msid = movie_0.mid and made_by_1.pid = producer_1.pid
TOT: 0.9176860210084034; TR: 0.9237088235294117; SMP: 0.3214285714285714; select director_0.name from directed_by as directed_by_0, directed_by as directed_by_1, director as director_0, director as director_1, made_by as made_by_0, movie as movie_0, producer as producer_0 where director_1.name = "Woody Allen" and producer_0.name = "Scarlett Johansson" and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and directed_by_1.did = director_1.did and directed_by_1.msid = movie_0.mid and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid
TOT: 0.9176860210084034; TR: 0.9237088235294117; SMP: 0.3214285714285714; select director_1.name from directed_by as directed_by_0, directed_by as directed_by_1, director as director_0, director as director_1, made_by as made_by_0, movie as movie_0, producer as producer_0 where director_0.name = "Woody Allen" and producer_0.name = "Scarlett Johansson" and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and directed_by_1.did = director_1.did and directed_by_1.msid = movie_0.mid and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid
TOT: 0.9162820535655146; TR: 0.9222906745972009; SMP: 0.3214285714285714; select director_0.name from actor as actor_0, cast as cast_0, directed_by as directed_by_0, director as director_0, made_by as made_by_0, movie as movie_0, producer as producer_0 where actor_0.name = "Woody Allen" and producer_0.name = "Scarlett Johansson" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid
TOT: 0.9120182710084034; TR: 0.9179838235294118; SMP: 0.3214285714285714; select producer_0.name from actor as actor_0, cast as cast_0, directed_by as directed_by_0, director as director_0, made_by as made_by_0, movie as movie_0, producer as producer_0 where actor_0.name = "Scarlett Johansson" and director_0.name = "Woody Allen" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid
TOT: 0.9120182710084034; TR: 0.9179838235294118; SMP: 0.3214285714285714; select producer_0.name from directed_by as directed_by_0, director as director_0, made_by as made_by_0, movie as movie_0, producer as producer_0, writer as writer_0, written_by as written_by_0 where director_0.name = "Woody Allen" and writer_0.name = "Scarlett Johansson" and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid and movie_0.mid = written_by_0.msid and writer_0.wid = written_by_0.wid
TOT: 0.9120182710084034; TR: 0.9179838235294118; SMP: 0.3214285714285714; select producer_1.name from directed_by as directed_by_0, director as director_0, made_by as made_by_0, made_by as made_by_1, movie as movie_0, producer as producer_0, producer as producer_1 where director_0.name = "Woody Allen" and producer_0.name = "Scarlett Johansson" and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid and made_by_1.msid = movie_0.mid and made_by_1.pid = producer_1.pid
TOT: 0.9120182710084034; TR: 0.9179838235294118; SMP: 0.3214285714285714; select producer_0.name from directed_by as directed_by_0, director as director_0, made_by as made_by_0, made_by as made_by_1, movie as movie_0, producer as producer_0, producer as producer_1 where director_0.name = "Woody Allen" and producer_1.name = "Scarlett Johansson" and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid and made_by_1.msid = movie_0.mid and made_by_1.pid = producer_1.pid


03:35  INFO: ================
03:35  INFO: QUERY 18: Find all movies directed by "Steven Spielberg" after 2006
03:35  INFO: ================
03:37  INFO: ================
03:37  INFO: QUERY 5: Find all actors who are from Canada
03:37  INFO: ================
03:37  INFO: ================
03:37  INFO: QUERY 67: What year was the movie "The Imitation Game" produced
03:37  INFO: ================
03:38  INFO: ================
03:38  INFO: QUERY 106: How many movies did Netflix produce?
03:38  INFO: ================
1181. ROOT: ROOT; NA; ; (0) 
1182. produce: CMT; NA; ; (0) 
1183. movies produce: NT; NA; ; (0) movie.title(1.0):| movie(1.0):| movie.title(1.0):| company.name(0.91):Movies; Movie; W Movies; | tv_series.title(0.8):Movies, Movies, Movi; Moon Movies; Movie Memories; | 
1184. many: VTTEXT; NA; ; (0) cast.role(1.0):Many; Many; Many; | actor.birth_city(0.95):Many; Many; | actor.name(0.81):Dany Many; Danny Many; many many others; | writer.name(0.8):Dany Many; DJ Many; Manuel 'Many;' Garcí; | tv_series.num_of_episodes(0.71):| 
1187. Netflix: VTTEXT; NA; ; (0) company.name(1.0):Netflix; Netflix; Netflix; | keyword.keyword(0.86):netflix; netflix-series; netflix-production; | tv_series.title(0.78):| tv_series(0.78):| cast.role(0.77):Netflix guy; | 
How, WRB
many, JJ
movies, NNS
did, VBD
Netflix, NNP
produce, VB
advmod(many-2, How-1)
amod(movies-3, many-2)
dobj(produce-6, movies-3)
aux(produce-6, did-4)
nsubj(produce-6, Netflix-5)
root(ROOT-0, produce-6)

PARSE TREE:(1181) ROOT ROOT
    (1182) produce CMT
        (1183) movies produce NT
            (1184) many VTTEXT
        (1187) Netflix VTTEXT


===========
TRANSLATIONS
===========
TOT: 1.0; NL: 1.0; NL+AG: 1.0; NL+QF: 1.0; rels: []; projs: [movie_0.title]; preds: [cast_0.role = "Many",company_0.name = "Netflix"]; havings: []; superlative: []; blanks: 0
TOT: 1.0; NL: 1.0; NL+AG: 1.0; NL+QF: 1.0; rels: []; projs: [movie_0.title]; preds: [cast_0.role = "Many",company_0.name = "Netflix"]; havings: []; superlative: []; blanks: 0
TOT: 0.9833333333333334; NL: 0.9833333333333334; NL+AG: 0.9833333333333334; NL+QF: 0.9888888888888889; rels: []; projs: [movie_0.title]; preds: [actor_0.birth_city = "Many",company_0.name = "Netflix"]; havings: []; superlative: []; blanks: 0
TOT: 0.9833333333333334; NL: 0.9833333333333334; NL+AG: 0.9833333333333334; NL+QF: 0.9888888888888889; rels: []; projs: [movie_0.title]; preds: [actor_0.birth_city = "Many",company_0.name = "Netflix"]; havings: []; superlative: []; blanks: 0
TOT: 0.954406239574876; NL: 0.954406239574876; NL+AG: 0.954406239574876; NL+QF: 0.9726316510593542; rels: []; projs: [movie_0.title]; preds: [cast_0.role = "Many",keyword_0.keyword = "netflix"]; havings: []; superlative: []; blanks: 0
TOT: 0.954406239574876; NL: 0.954406239574876; NL+AG: 0.954406239574876; NL+QF: 0.9726316510593542; rels: []; projs: [movie_0.title]; preds: [cast_0.role = "Many",keyword_0.keyword = "netflix"]; havings: []; superlative: []; blanks: 0
TOT: 0.9526007018170926; NL: 0.9526007018170926; NL+AG: 0.9526007018170926; NL+QF: 0.9644505263628194; rels: []; projs: [company_0.id]; preds: [company_0.name = "Movies",cast_0.role = "Many",company_0.name = "Netflix"]; havings: []; superlative: []; blanks: 0
TOT: 0.9401007018170924; NL: 0.9401007018170924; NL+AG: 0.9401007018170924; NL+QF: 0.9550755263628194; rels: []; projs: [company_0.id]; preds: [company_0.name = "Movies",actor_0.birth_city = "Many",company_0.name = "Netflix"]; havings: []; superlative: []; blanks: 0
TOT: 0.9377395729082093; NL: 0.9377395729082093; NL+AG: 0.9377395729082093; NL+QF: 0.9615205399482432; rels: []; projs: [movie_0.title]; preds: [actor_0.birth_city = "Many",keyword_0.keyword = "netflix"]; havings: []; superlative: []; blanks: 0
TOT: 0.9377395729082093; NL: 0.9377395729082093; NL+AG: 0.9377395729082093; NL+QF: 0.9615205399482432; rels: []; projs: [movie_0.title]; preds: [actor_0.birth_city = "Many",keyword_0.keyword = "netflix"]; havings: []; superlative: []; blanks: 0

===========
RESULTS
===========
TOT: 0.99375; TR: 1.0; SMP: 0.375; select movie_0.title from cast as cast_0, company as company_0, copyright as copyright_0, movie as movie_0 where cast_0.role = "Many" and company_0.name = "Netflix" and cast_0.msid = movie_0.mid and company_0.id = copyright_0.cid and copyright_0.msid = movie_0.mid
TOT: 0.9933333333333333; TR: 1.0; SMP: 0.3333333333333333; select movie_0.title from cast as cast_0, company as company_0, copyright as copyright_0, directed_by as directed_by_0, movie as movie_0, movie as movie_1 where cast_0.role = "Many" and company_0.name = "Netflix" and cast_0.msid = movie_1.mid and company_0.id = copyright_0.cid and copyright_0.msid = movie_0.mid and directed_by_0.msid = movie_0.mid and directed_by_0.msid = movie_1.mid
TOT: 0.9933333333333333; TR: 1.0; SMP: 0.3333333333333333; select movie_0.title from cast as cast_0, company as company_0, copyright as copyright_0, copyright as copyright_1, movie as movie_0, tv_series as tv_series_0 where cast_0.role = "Many" and company_0.name = "Netflix" and cast_0.msid = tv_series_0.sid and company_0.id = copyright_1.cid and copyright_0.msid = movie_0.mid and copyright_0.msid = tv_series_0.sid and copyright_1.msid = movie_0.mid
TOT: 0.9933333333333333; TR: 1.0; SMP: 0.3333333333333333; select movie_0.title from cast as cast_0, company as company_0, copyright as copyright_0, movie as movie_0, movie as movie_1, written_by as written_by_0 where cast_0.role = "Many" and company_0.name = "Netflix" and cast_0.msid = movie_1.mid and company_0.id = copyright_0.cid and copyright_0.msid = movie_0.mid and movie_0.mid = written_by_0.msid and movie_1.mid = written_by_0.msid
TOT: 0.9933333333333333; TR: 1.0; SMP: 0.3333333333333333; select movie_0.title from cast as cast_0, company as company_0, copyright as copyright_0, movie as movie_0, tv_series as tv_series_0, written_by as written_by_0 where cast_0.role = "Many" and company_0.name = "Netflix" and cast_0.msid = tv_series_0.sid and company_0.id = copyright_0.cid and copyright_0.msid = movie_0.mid and movie_0.mid = written_by_0.msid and tv_series_0.sid = written_by_0.msid
TOT: 0.9933333333333333; TR: 1.0; SMP: 0.3333333333333333; select movie_0.title from cast as cast_0, company as company_0, copyright as copyright_0, movie as movie_0, tv_series as tv_series_0, written_by as written_by_0 where cast_0.role = "Many" and company_0.name = "Netflix" and cast_0.msid = movie_0.mid and company_0.id = copyright_0.cid and copyright_0.msid = tv_series_0.sid and movie_0.mid = written_by_0.msid and tv_series_0.sid = written_by_0.msid
TOT: 0.9933333333333333; TR: 1.0; SMP: 0.3333333333333333; select movie_0.title from cast as cast_0, company as company_0, copyright as copyright_0, made_by as made_by_0, movie as movie_0, tv_series as tv_series_0 where cast_0.role = "Many" and company_0.name = "Netflix" and cast_0.msid = movie_0.mid and company_0.id = copyright_0.cid and copyright_0.msid = tv_series_0.sid and made_by_0.msid = movie_0.mid and made_by_0.msid = tv_series_0.sid
TOT: 0.9933333333333333; TR: 1.0; SMP: 0.3333333333333333; select movie_0.title from cast as cast_0, classification as classification_0, company as company_0, copyright as copyright_0, movie as movie_0, tv_series as tv_series_0 where cast_0.role = "Many" and company_0.name = "Netflix" and cast_0.msid = movie_0.mid and classification_0.msid = movie_0.mid and classification_0.msid = tv_series_0.sid and company_0.id = copyright_0.cid and copyright_0.msid = tv_series_0.sid
TOT: 0.9933333333333333; TR: 1.0; SMP: 0.3333333333333333; select movie_0.title from cast as cast_0, company as company_0, copyright as copyright_0, movie as movie_0, movie as movie_1, tags as tags_0 where cast_0.role = "Many" and company_0.name = "Netflix" and cast_0.msid = movie_1.mid and company_0.id = copyright_0.cid and copyright_0.msid = movie_0.mid and movie_0.mid = tags_0.msid and movie_1.mid = tags_0.msid
TOT: 0.9933333333333333; TR: 1.0; SMP: 0.3333333333333333; select movie_0.title from cast as cast_0, company as company_0, copyright as copyright_0, copyright as copyright_1, movie as movie_0, tv_series as tv_series_0 where cast_0.role = "Many" and company_0.name = "Netflix" and cast_0.msid = movie_0.mid and company_0.id = copyright_1.cid and copyright_0.msid = movie_0.mid and copyright_0.msid = tv_series_0.sid and copyright_1.msid = tv_series_0.sid


03:39  INFO: ================
03:39  INFO: QUERY 97: What is the number of movies in which "Tom Cruise" acted?
03:39  INFO: ================
03:40  INFO: ================
03:40  INFO: QUERY 89: How many movies did "Alfred Hitchcock" direct?
03:40  INFO: ================
03:40  INFO: ================
03:40  INFO: QUERY 6: Find all actors who were born in 1984
03:40  INFO: ================
03:41  INFO: ================
03:41  INFO: QUERY 31: Find all movies by directors born in "Los Angeles"
03:41  INFO: ================
03:41  INFO: ================
03:41  INFO: QUERY 126: Find all movies featuring "Jason Robards" and "Woody Strode"
03:41  INFO: ================
1229. ROOT: ROOT; NA; ; (0) 
1230. Find: CMT; NA; ; (0) 
1231. featuring: NT; NA; ; (0) movie.release_year(0.64):| producer.name(0.64):| producer(0.64):| made_by(0.64):| movie.title_aka(0.62):| 
1232. movies: NT; NA; all; (0) movie.title(1.0):| movie(1.0):| company.name(0.91):Movies; Movie; W Movies; | tv_series.title(0.8):Movies, Movies, Movi; Moon Movies; Movie Memories; | cast.role(0.79):Movie; KPC Movies; Movie F; | 
1234. Jason Robards: VTTEXT; NA; ; (0) actor.name(1.0):Jason Robards; Jason Robards; Jason Robard; | producer.name(0.86):M. Jason Robards; Jason Robards III; Jason Robards III; | writer.name(0.81):Jason Rob; Jason Rob; Jason Richardson; | director.name(0.81):Jason Rob; Jason Rob; Jason Richard Robins; | cast.role(0.72):Jason Rickards; Jason Rickards; Jason Rickards; | 
1236. Woody Strode: VTTEXT; NA; ; (0) actor.name(1.0):Woody Strode; Woody Strode; Woody Stroode; | writer.name(0.88):Woody K. Strode; Woody K. Strode; Woody; | cast.role(0.74):Strode; Strode; Strode; | producer.name(0.72):Woody Woodrow; Woody Woodrow; Woody Wood; | movie.title(0.69):Woody; Woody; Woody; | 
Find, VB
all, DT
movies, NNS
featuring, VBG
Jason Robards, NNP
and, CC
Woody Strode, NNP
root(ROOT-0, Find-1)
det(movies-3, all-2)
nsubj(featuring-4, movies-3)
dep(Find-1, featuring-4)
dobj(featuring-4, Jason Robards-5)
cc(Jason Robards-5, and-6)
conj(Jason Robards-5, Woody Strode-7)

PARSE TREE:(1229) ROOT ROOT
    (1230) Find CMT
        (1231) featuring NT
            (1232) movies NT
            (1234) Jason Robards VTTEXT
            (1236) Woody Strode VTTEXT


===========
TRANSLATIONS
===========
TOT: 0.9089788112787622; NL: 0.9089788112787622; NL+AG: 0.9669077457851161; NL+QF: 0.9641553861331151; rels: [movie]; projs: [movie_0.release_year]; preds: [actor_0.name = "Jason Robards",actor_0.name = "Woody Strode"]; havings: []; superlative: []; blanks: 0
TOT: 0.9089288112787622; NL: 0.9089288112787622; NL+AG: 0.9834793005349413; NL+QF: 0.9624594086660389; rels: [movie]; projs: [producer_0.name]; preds: [actor_0.name = "Jason Robards",actor_0.name = "Woody Strode"]; havings: []; superlative: []; blanks: 0
TOT: 0.9041413112787623; NL: 0.9041413112787623; NL+AG: 0.9834793005349413; NL+QF: 0.9611886487606629; rels: [movie]; projs: [movie_0.title_aka]; preds: [actor_0.name = "Jason Robards",actor_0.name = "Woody Strode"]; havings: []; superlative: []; blanks: 0
TOT: 0.8798573180707963; NL: 0.8798573180707963; NL+AG: 0.9377862525771501; NL+QF: 0.9433342779192734; rels: [movie]; projs: [movie_0.release_year]; preds: [actor_0.name = "Jason Robards",writer_0.name = "Woody K. Strode"]; havings: []; superlative: []; blanks: 0
TOT: 0.8798073180707963; NL: 0.8798073180707963; NL+AG: 0.9543578073269753; NL+QF: 0.9415933214358491; rels: [movie]; projs: [producer_0.name]; preds: [actor_0.name = "Jason Robards",writer_0.name = "Woody K. Strode"]; havings: []; superlative: []; blanks: 0
TOT: 0.8758568703276138; NL: 0.8758568703276138; NL+AG: 0.9337858048339677; NL+QF: 0.9386850188471233; rels: [movie]; projs: [movie_0.release_year]; preds: [producer_0.name = "M. Jason Robards",actor_0.name = "Woody Strode"]; havings: []; superlative: []; blanks: 0
TOT: 0.8758068703276137; NL: 0.8758068703276137; NL+AG: 0.9503573595837927; NL+QF: 0.9369436089745824; rels: [movie]; projs: [producer_0.name]; preds: [producer_0.name = "M. Jason Robards",actor_0.name = "Woody Strode"]; havings: []; superlative: []; blanks: 0
TOT: 0.8750198180707963; NL: 0.8750198180707963; NL+AG: 0.9543578073269753; NL+QF: 0.9409547677593451; rels: [movie]; projs: [movie_0.title_aka]; preds: [actor_0.name = "Jason Robards",writer_0.name = "Woody K. Strode"]; havings: []; superlative: []; blanks: 0
TOT: 0.8710193703276138; NL: 0.8710193703276138; NL+AG: 0.9503573595837927; NL+QF: 0.9363114027457105; rels: [movie]; projs: [movie_0.title_aka]; preds: [producer_0.name = "M. Jason Robards",actor_0.name = "Woody Strode"]; havings: []; superlative: []; blanks: 0
TOT: 0.8619671842032365; NL: 0.8619671842032365; NL+AG: 0.9198961187095903; NL+QF: 0.9306946768629555; rels: [movie]; projs: [movie_0.release_year]; preds: [writer_0.name = "Jason Rob",actor_0.name = "Woody Strode"]; havings: []; superlative: []; blanks: 0

===========
RESULTS
===========
TOT: 0.9033890231659746; TR: 0.9089788112787622; SMP: 0.35; select movie_0.release_year from actor as actor_0, actor as actor_1, cast as cast_0, cast as cast_1, movie as movie_0 where actor_0.name = "Jason Robards" and actor_1.name = "Woody Strode" and actor_0.aid = cast_0.aid and actor_1.aid = cast_1.aid and cast_0.msid = movie_0.mid and cast_1.msid = movie_0.mid
TOT: 0.9033890231659746; TR: 0.9089788112787622; SMP: 0.35; select movie_0.release_year from actor as actor_0, actor as actor_1, cast as cast_0, cast as cast_1, movie as movie_0 where actor_0.name = "Woody Strode" and actor_1.name = "Jason Robards" and actor_0.aid = cast_0.aid and actor_1.aid = cast_1.aid and cast_0.msid = movie_0.mid and cast_1.msid = movie_0.mid
TOT: 0.9032223564993079; TR: 0.9089788112787622; SMP: 0.3333333333333333; select movie_0.release_year from actor as actor_0, actor as actor_1, cast as cast_0, cast as cast_1, movie as movie_0, movie as movie_1 where actor_0.name = "Jason Robards" and actor_1.name = "Woody Strode" and actor_0.aid = cast_0.aid and actor_1.aid = cast_1.aid and cast_0.msid = movie_0.mid and cast_1.msid = movie_1.mid and movie_0.mid = movie_1.mid
TOT: 0.9032223564993079; TR: 0.9089788112787622; SMP: 0.3333333333333333; select movie_0.release_year from actor as actor_0, actor as actor_1, cast as cast_0, cast as cast_1, movie as movie_0, movie as movie_1 where actor_0.name = "Woody Strode" and actor_1.name = "Jason Robards" and actor_0.aid = cast_0.aid and actor_1.aid = cast_1.aid and cast_0.msid = movie_0.mid and cast_1.msid = movie_1.mid and movie_0.mid = movie_1.mid
TOT: 0.9031033088802604; TR: 0.9089788112787622; SMP: 0.3214285714285714; select movie_0.release_year from actor as actor_0, actor as actor_1, cast as cast_0, cast as cast_1, made_by as made_by_0, movie as movie_0, movie as movie_1 where actor_0.name = "Jason Robards" and actor_1.name = "Woody Strode" and actor_0.aid = cast_0.aid and actor_1.aid = cast_1.aid and cast_0.msid = movie_0.mid and cast_1.msid = movie_1.mid and made_by_0.msid = movie_0.mid and made_by_0.msid = movie_1.mid
TOT: 0.9031033088802604; TR: 0.9089788112787622; SMP: 0.3214285714285714; select movie_0.release_year from actor as actor_0, actor as actor_1, cast as cast_0, cast as cast_1, made_by as made_by_0, movie as movie_0, movie as movie_1 where actor_0.name = "Woody Strode" and actor_1.name = "Jason Robards" and actor_0.aid = cast_0.aid and actor_1.aid = cast_1.aid and cast_0.msid = movie_0.mid and cast_1.msid = movie_1.mid and made_by_0.msid = movie_0.mid and made_by_0.msid = movie_1.mid
TOT: 0.9031033088802604; TR: 0.9089788112787622; SMP: 0.3214285714285714; select movie_0.release_year from actor as actor_0, actor as actor_1, cast as cast_0, cast as cast_1, classification as classification_0, movie as movie_0, movie as movie_1 where actor_0.name = "Jason Robards" and actor_1.name = "Woody Strode" and actor_0.aid = cast_0.aid and actor_1.aid = cast_1.aid and cast_0.msid = movie_0.mid and cast_1.msid = movie_1.mid and classification_0.msid = movie_0.mid and classification_0.msid = movie_1.mid
TOT: 0.9031033088802604; TR: 0.9089788112787622; SMP: 0.3214285714285714; select movie_0.release_year from actor as actor_0, actor as actor_1, cast as cast_0, cast as cast_1, classification as classification_0, movie as movie_0, movie as movie_1 where actor_0.name = "Woody Strode" and actor_1.name = "Jason Robards" and actor_0.aid = cast_0.aid and actor_1.aid = cast_1.aid and cast_0.msid = movie_0.mid and cast_1.msid = movie_1.mid and classification_0.msid = movie_0.mid and classification_0.msid = movie_1.mid
TOT: 0.9031033088802604; TR: 0.9089788112787622; SMP: 0.3214285714285714; select movie_0.release_year from actor as actor_0, actor as actor_1, cast as cast_0, cast as cast_1, copyright as copyright_0, movie as movie_0, tv_series as tv_series_0 where actor_0.name = "Jason Robards" and actor_1.name = "Woody Strode" and actor_0.aid = cast_0.aid and actor_1.aid = cast_1.aid and cast_0.msid = movie_0.mid and cast_1.msid = tv_series_0.sid and copyright_0.msid = movie_0.mid and copyright_0.msid = tv_series_0.sid
TOT: 0.9031033088802604; TR: 0.9089788112787622; SMP: 0.3214285714285714; select movie_0.release_year from actor as actor_0, actor as actor_1, cast as cast_0, cast as cast_1, copyright as copyright_0, movie as movie_0, tv_series as tv_series_0 where actor_0.name = "Woody Strode" and actor_1.name = "Jason Robards" and actor_0.aid = cast_0.aid and actor_1.aid = cast_1.aid and cast_0.msid = movie_0.mid and cast_1.msid = tv_series_0.sid and copyright_0.msid = movie_0.mid and copyright_0.msid = tv_series_0.sid


03:43  INFO: ================
03:43  INFO: QUERY 94: How many actors were born in "Los Angeles" after 2000?
03:43  INFO: ================
1238. ROOT: ROOT; NA; ; (0) 
1239. born: NT; NA; ; (0) tv_series.num_of_episodes(0.62):| tv_series.num_of_seasons(0.62):| tags(0.6):| director.did(0.6):| producer.name(0.59):| 
1241. How many: CMT; count; ; (0) 
1242. actors: NT; NA; ; (0) actor.name(1.0):| actor(1.0):| movie.title(0.95):Actors; Actors; Actors; | cast.role(0.95):Actors; Actors; Actors; | tv_series.title(0.9):Actors; Actor; Actors Vs; | 
1244. Los Angeles: VTTEXT; NA; ; (0) movie.title(1.0):Los Angeles; Los Angeles; Los Angeles; | director.birth_city(1.0):Los Angeles; Los Angeles; Los Angeles; | actor.birth_city(1.0):Los Angeles; Los Angeles; Los Angeles; | producer.birth_city(1.0):Los Angeles; Los Angeles; Los Angeles; | writer.birth_city(1.0):Los Angeles; Los Angeles; Los Angeles; | 
1246. 2000: VTNUM; NA; ; (0) writer.birth_year(1.0):2001; 2001; 2002; | director.birth_year(1.0):2004; 2001; 2001; | producer.birth_year(1.0):2004; 2001; 2002; | actor.birth_year(1.0):2003; 2004; 2001; | movie.release_year(0.99):2012; 2014; 2015; | 
1247. after: OT; >; ; (0) 
How, WRB
many, JJ
actors, NNS
were, VBD
born, VBN
in, IN
Los Angeles, NNP
after, IN
2000, CD
advmod(many-2, How-1)
dep(born-5, many-2)
nsubjpass(born-5, actors-3)
auxpass(born-5, were-4)
root(ROOT-0, born-5)
case(Los Angeles-7, in-6)
nmod(born-5, Los Angeles-7)
case(2000-9, after-8)
nmod(born-5, 2000-9)

PARSE TREE:(1238) ROOT ROOT
    (1241) How many CMT
        (1242) actors NT
            (1239) born NT
                (1244) Los Angeles VTTEXT
                (1246) 2000 VTNUM
                    (1247) after OT


===========
TRANSLATIONS
===========
TOT: 0.9007375; NL: 0.9007375; NL+AG: 0.9691088217968186; NL+QF: 0.9623875; rels: [tags]; projs: [count(distinct(actor_0.name))]; preds: [movie_0.title = "Los Angeles",writer_0.birth_year > 2000]; havings: []; superlative: []; blanks: 0
TOT: 0.9007375; NL: 0.9007375; NL+AG: 0.9691088217968186; NL+QF: 0.9623875; rels: [tags]; projs: [count(distinct(actor_0.name))]; preds: [director_0.birth_city = "Los Angeles",writer_0.birth_year > 2000]; havings: []; superlative: []; blanks: 0
TOT: 0.9007375; NL: 0.9007375; NL+AG: 0.9691088217968186; NL+QF: 0.9623875; rels: [tags]; projs: [count(distinct(actor_0.name))]; preds: [actor_0.birth_city = "Los Angeles",writer_0.birth_year > 2000]; havings: []; superlative: []; blanks: 0
TOT: 0.9007375; NL: 0.9007375; NL+AG: 0.9691088217968186; NL+QF: 0.9623875; rels: [tags]; projs: [count(distinct(actor_0.name))]; preds: [producer_0.birth_city = "Los Angeles",writer_0.birth_year > 2000]; havings: []; superlative: []; blanks: 0
TOT: 0.9007375; NL: 0.9007375; NL+AG: 0.9691088217968186; NL+QF: 0.9623875; rels: [tags]; projs: [count(distinct(actor_0.name))]; preds: [writer_0.birth_city = "Los Angeles",writer_0.birth_year > 2000]; havings: []; superlative: []; blanks: 0
TOT: 0.9006624999999999; NL: 0.9006624999999999; NL+AG: 0.9690338217968185; NL+QF: 0.9623312500000001; rels: [tags]; projs: [count(distinct(actor_0.name))]; preds: [movie_0.title = "Los Angeles",director_0.birth_year > 2000]; havings: []; superlative: []; blanks: 0
TOT: 0.9006624999999999; NL: 0.9006624999999999; NL+AG: 0.9690338217968185; NL+QF: 0.9623312499999999; rels: [tags]; projs: [count(distinct(actor_0.name))]; preds: [director_0.birth_city = "Los Angeles",director_0.birth_year > 2000]; havings: []; superlative: []; blanks: 0
TOT: 0.9006624999999999; NL: 0.9006624999999999; NL+AG: 0.9690338217968185; NL+QF: 0.9623312500000001; rels: [tags]; projs: [count(distinct(actor_0.name))]; preds: [actor_0.birth_city = "Los Angeles",director_0.birth_year > 2000]; havings: []; superlative: []; blanks: 0
TOT: 0.9006624999999999; NL: 0.9006624999999999; NL+AG: 0.9690338217968185; NL+QF: 0.9623312499999999; rels: [tags]; projs: [count(distinct(actor_0.name))]; preds: [producer_0.birth_city = "Los Angeles",director_0.birth_year > 2000]; havings: []; superlative: []; blanks: 0
TOT: 0.9006624999999999; NL: 0.9006624999999999; NL+AG: 0.9690338217968185; NL+QF: 0.9623312499999999; rels: [tags]; projs: [count(distinct(actor_0.name))]; preds: [writer_0.birth_city = "Los Angeles",director_0.birth_year > 2000]; havings: []; superlative: []; blanks: 0

===========
RESULTS
===========
TOT: 0.8949444107142857; TR: 0.9007375; SMP: 0.3214285714285714; select count(distinct(actor_0.name)) from actor as actor_0, cast as cast_0, movie as movie_0, tags as tags_0, tv_series as tv_series_0, writer as writer_0, written_by as written_by_0 where movie_0.title = "Los Angeles" and writer_0.birth_year > 2000 and actor_0.aid = cast_0.aid and cast_0.msid = tv_series_0.sid and movie_0.mid = tags_0.msid and movie_0.mid = written_by_0.msid and tags_0.msid = tv_series_0.sid and writer_0.wid = written_by_0.wid
TOT: 0.8949444107142857; TR: 0.9007375; SMP: 0.3214285714285714; select count(distinct(actor_0.name)) from actor as actor_0, cast as cast_0, movie as movie_0, tags as tags_0, tv_series as tv_series_0, writer as writer_0, written_by as written_by_0 where actor_0.birth_city = "Los Angeles" and writer_0.birth_year > 2000 and actor_0.aid = cast_0.aid and cast_0.msid = tv_series_0.sid and movie_0.mid = tags_0.msid and movie_0.mid = written_by_0.msid and tags_0.msid = tv_series_0.sid and writer_0.wid = written_by_0.wid
TOT: 0.8949444107142857; TR: 0.9007375; SMP: 0.3214285714285714; select count(distinct(actor_0.name)) from actor as actor_0, cast as cast_0, movie as movie_0, tags as tags_0, tv_series as tv_series_0, writer as writer_0, written_by as written_by_0 where writer_0.birth_city = "Los Angeles" and writer_0.birth_year > 2000 and actor_0.aid = cast_0.aid and cast_0.msid = tv_series_0.sid and movie_0.mid = tags_0.msid and movie_0.mid = written_by_0.msid and tags_0.msid = tv_series_0.sid and writer_0.wid = written_by_0.wid
TOT: 0.8949444107142857; TR: 0.9007375; SMP: 0.3214285714285714; select count(distinct(actor_0.name)) from actor as actor_0, cast as cast_0, movie as movie_0, movie as movie_1, tags as tags_0, writer as writer_0, written_by as written_by_0 where movie_0.title = "Los Angeles" and writer_0.birth_year > 2000 and actor_0.aid = cast_0.aid and cast_0.msid = movie_1.mid and movie_0.mid = tags_0.msid and movie_0.mid = written_by_0.msid and movie_1.mid = tags_0.msid and writer_0.wid = written_by_0.wid
TOT: 0.8949444107142857; TR: 0.9007375; SMP: 0.3214285714285714; select count(distinct(actor_0.name)) from actor as actor_0, cast as cast_0, movie as movie_0, movie as movie_1, tags as tags_0, writer as writer_0, written_by as written_by_0 where actor_0.birth_city = "Los Angeles" and writer_0.birth_year > 2000 and actor_0.aid = cast_0.aid and cast_0.msid = movie_1.mid and movie_0.mid = tags_0.msid and movie_0.mid = written_by_0.msid and movie_1.mid = tags_0.msid and writer_0.wid = written_by_0.wid
TOT: 0.8949444107142857; TR: 0.9007375; SMP: 0.3214285714285714; select count(distinct(actor_0.name)) from actor as actor_0, cast as cast_0, movie as movie_0, movie as movie_1, tags as tags_0, writer as writer_0, written_by as written_by_0 where writer_0.birth_city = "Los Angeles" and writer_0.birth_year > 2000 and actor_0.aid = cast_0.aid and cast_0.msid = movie_1.mid and movie_0.mid = tags_0.msid and movie_0.mid = written_by_0.msid and movie_1.mid = tags_0.msid and writer_0.wid = written_by_0.wid
TOT: 0.8949444107142857; TR: 0.9007375; SMP: 0.3214285714285714; select count(distinct(actor_0.name)) from actor as actor_0, cast as cast_0, movie as movie_0, tags as tags_0, tv_series as tv_series_0, writer as writer_0, written_by as written_by_0 where movie_0.title = "Los Angeles" and writer_0.birth_year > 2000 and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and movie_0.mid = tags_0.msid and tags_0.msid = tv_series_0.sid and tv_series_0.sid = written_by_0.msid and writer_0.wid = written_by_0.wid
TOT: 0.8949444107142857; TR: 0.9007375; SMP: 0.3214285714285714; select count(distinct(actor_0.name)) from actor as actor_0, cast as cast_0, movie as movie_0, tags as tags_0, tv_series as tv_series_0, writer as writer_0, written_by as written_by_0 where actor_0.birth_city = "Los Angeles" and writer_0.birth_year > 2000 and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and movie_0.mid = tags_0.msid and tags_0.msid = tv_series_0.sid and tv_series_0.sid = written_by_0.msid and writer_0.wid = written_by_0.wid
TOT: 0.8949444107142857; TR: 0.9007375; SMP: 0.3214285714285714; select count(distinct(actor_0.name)) from actor as actor_0, cast as cast_0, movie as movie_0, tags as tags_0, tv_series as tv_series_0, writer as writer_0, written_by as written_by_0 where writer_0.birth_city = "Los Angeles" and writer_0.birth_year > 2000 and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and movie_0.mid = tags_0.msid and tags_0.msid = tv_series_0.sid and tv_series_0.sid = written_by_0.msid and writer_0.wid = written_by_0.wid
TOT: 0.8949444107142857; TR: 0.9007375; SMP: 0.3214285714285714; select count(distinct(actor_0.name)) from actor as actor_0, cast as cast_0, tags as tags_0, tv_series as tv_series_0, tv_series as tv_series_1, writer as writer_0, written_by as written_by_0 where actor_0.birth_city = "Los Angeles" and writer_0.birth_year > 2000 and actor_0.aid = cast_0.aid and cast_0.msid = tv_series_1.sid and tags_0.msid = tv_series_0.sid and tags_0.msid = tv_series_1.sid and tv_series_0.sid = written_by_0.msid and writer_0.wid = written_by_0.wid


03:44  INFO: ================
03:44  INFO: QUERY 44: What are all the movies directed by "Quentin Tarantino" featuring "Christoph Waltz"?
03:44  INFO: ================
1249. ROOT: ROOT; NA; ; (0) 
1250. What: CMT; NA; ; (0) 
1252. movies: NT; NA; all; (0) movie.title(1.0):| movie(1.0):| company.name(0.91):Movies; Movie; W Movies; | tv_series.title(0.8):Movies, Movies, Movi; Moon Movies; Movie Memories; | cast.role(0.79):Movie; KPC Movies; Movie F; | 
1255. directed: NT; NA; ; (0) directed_by(1.0):| director.name(0.72):| director(0.72):| producer.name(0.69):| producer(0.69):| 
1256. Christoph Waltz: VTTEXT; NA; ; (0) actor.name(0.99):Christoph Waltz; Christoph Waltz; Christoph Walz; | writer.name(0.99):Christoph Waltz; Christoph Waltz; Christoph Walz; | director.name(0.99):Christoph Waltz; Christoph Waltz; Christoph Walther; | producer.name(0.99):Christoph Waltz; Christoph Waltz; Christopher Waltz; | cast.role(0.74):Christoph Wenk; Christoph Wenk; Christoph Balthus; | 
1258. Quentin Tarantino: VTTEXT; NA; ; (0) director.name(1.0):Quentin Tarantino; Quentin Tarantino; Quentin Tarrantino; | actor.name(1.0):Quentin Tarantino; Quentin Tarantino; Quentin Tarrantino; | producer.name(1.0):Quentin Tarantino; Quentin Tarantino; Quentin Tarrantino; | writer.name(1.0):Quentin Tarantino; Quentin Tarantino; Quentin Tarrantino; | cast.role(0.85):Quentin Tarrantino '; Quentin Tarrantino '; Quentin Tarrantino '; | 
1259. featuring: VTTEXT; NA; ; (0) cast.role(1.0):Featuring; Featuring; Featuring; | producer.name(0.65):| producer(0.65):| movie.title_aka(0.64):| tv_series.title_aka(0.64):| 
What, WP
are, VBP
all, PDT
the, DT
movies, NNS
directed, VBN
by, IN
Quentin Tarantino, NNP
featuring, NNP
Christoph Waltz, NNP
root(ROOT-0, What-1)
cop(What-1, are-2)
det:predet(movies-5, all-3)
det(movies-5, the-4)
nsubj(What-1, movies-5)
acl(movies-5, directed-6)
case(Christoph Waltz-10, by-7)
compound(Christoph Waltz-10, Quentin Tarantino-8)
compound(Christoph Waltz-10, featuring-9)
nmod(directed-6, Christoph Waltz-10)

PARSE TREE:(1249) ROOT ROOT
    (1250) What CMT
        (1252) movies NT
            (1255) directed NT
                (1256) Christoph Waltz VTTEXT
                    (1258) Quentin Tarantino VTTEXT
                    (1259) featuring VTTEXT


===========
TRANSLATIONS
===========
TOT: 0.9973503694767393; NL: 0.9973503694767393; NL+AG: 0.9973503694767393; NL+QF: 0.998177278076669; rels: [directed_by]; projs: [movie_0.title]; preds: [actor_0.name = "Christoph Waltz",director_0.name = "Quentin Tarantino",cast_0.role = "Featuring"]; havings: []; superlative: []; blanks: 0
TOT: 0.9973503694767393; NL: 0.9973503694767393; NL+AG: 0.9973503694767393; NL+QF: 0.9981640319541519; rels: [directed_by]; projs: [movie_0.title]; preds: [actor_0.name = "Christoph Waltz",actor_0.name = "Quentin Tarantino",cast_0.role = "Featuring"]; havings: []; superlative: []; blanks: 0
TOT: 0.9973503694767393; NL: 0.9973503694767393; NL+AG: 0.9973503694767393; NL+QF: 0.9980896107064436; rels: [directed_by]; projs: [movie_0.title]; preds: [actor_0.name = "Christoph Waltz",producer_0.name = "Quentin Tarantino",cast_0.role = "Featuring"]; havings: []; superlative: []; blanks: 0
TOT: 0.9973503694767393; NL: 0.9973503694767393; NL+AG: 0.9973503694767393; NL+QF: 0.998097586121357; rels: [directed_by]; projs: [movie_0.title]; preds: [actor_0.name = "Christoph Waltz",writer_0.name = "Quentin Tarantino",cast_0.role = "Featuring"]; havings: []; superlative: []; blanks: 0
TOT: 0.9973503694767393; NL: 0.9973503694767393; NL+AG: 0.9973503694767393; NL+QF: 0.9980291721343215; rels: [directed_by]; projs: [movie_0.title]; preds: [writer_0.name = "Christoph Waltz",director_0.name = "Quentin Tarantino",cast_0.role = "Featuring"]; havings: []; superlative: []; blanks: 0
TOT: 0.9973503694767393; NL: 0.9973503694767393; NL+AG: 0.9973503694767393; NL+QF: 0.9980001805516568; rels: [directed_by]; projs: [movie_0.title]; preds: [writer_0.name = "Christoph Waltz",actor_0.name = "Quentin Tarantino",cast_0.role = "Featuring"]; havings: []; superlative: []; blanks: 0
TOT: 0.9973503694767393; NL: 0.9973503694767393; NL+AG: 0.9973503694767393; NL+QF: 0.9982301715334685; rels: [directed_by]; projs: [movie_0.title]; preds: [writer_0.name = "Christoph Waltz",producer_0.name = "Quentin Tarantino",cast_0.role = "Featuring"]; havings: []; superlative: []; blanks: 0
TOT: 0.9973503694767393; NL: 0.9973503694767393; NL+AG: 0.9973503694767393; NL+QF: 0.9979757226125889; rels: [directed_by]; projs: [movie_0.title]; preds: [writer_0.name = "Christoph Waltz",writer_0.name = "Quentin Tarantino",cast_0.role = "Featuring"]; havings: []; superlative: []; blanks: 0
TOT: 0.9969323666011805; NL: 0.9969323666011805; NL+AG: 0.9969323666011805; NL+QF: 0.9980256203018477; rels: [directed_by]; projs: [movie_0.title]; preds: [director_0.name = "Christoph Waltz",director_0.name = "Quentin Tarantino",cast_0.role = "Featuring"]; havings: []; superlative: []; blanks: 0
TOT: 0.9969323666011805; NL: 0.9969323666011805; NL+AG: 0.9969323666011805; NL+QF: 0.9980269500658767; rels: [directed_by]; projs: [movie_0.title]; preds: [director_0.name = "Christoph Waltz",actor_0.name = "Quentin Tarantino",cast_0.role = "Featuring"]; havings: []; superlative: []; blanks: 0

===========
RESULTS
===========
TOT: 0.9908768657819719; TR: 0.9973503694767393; SMP: 0.35; select movie_0.title from actor as actor_0, cast as cast_0, directed_by as directed_by_0, director as director_0, movie as movie_0 where actor_0.name = "Christoph Waltz" and cast_0.role = "Featuring" and director_0.name = "Quentin Tarantino" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid
TOT: 0.9907101991153052; TR: 0.9973503694767393; SMP: 0.3333333333333333; select movie_0.title from cast as cast_0, directed_by as directed_by_0, director as director_0, movie as movie_0, writer as writer_0, written_by as written_by_0 where cast_0.role = "Featuring" and director_0.name = "Quentin Tarantino" and writer_0.name = "Christoph Waltz" and cast_0.msid = movie_0.mid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and movie_0.mid = written_by_0.msid and writer_0.wid = written_by_0.wid
TOT: 0.9905911514962576; TR: 0.9973503694767393; SMP: 0.3214285714285714; select movie_0.title from actor as actor_0, cast as cast_0, directed_by as directed_by_0, movie as movie_0, movie as movie_1, writer as writer_0, written_by as written_by_0 where actor_0.name = "Christoph Waltz" and cast_0.role = "Featuring" and writer_0.name = "Quentin Tarantino" and actor_0.aid = cast_0.aid and cast_0.msid = movie_1.mid and directed_by_0.msid = movie_0.mid and directed_by_0.msid = movie_1.mid and movie_0.mid = written_by_0.msid and writer_0.wid = written_by_0.wid
TOT: 0.9905911514962576; TR: 0.9973503694767393; SMP: 0.3214285714285714; select movie_0.title from actor as actor_0, cast as cast_0, directed_by as directed_by_0, movie as movie_0, movie as movie_1, writer as writer_0, written_by as written_by_0 where actor_0.name = "Quentin Tarantino" and cast_0.role = "Featuring" and writer_0.name = "Christoph Waltz" and actor_0.aid = cast_0.aid and cast_0.msid = movie_1.mid and directed_by_0.msid = movie_0.mid and directed_by_0.msid = movie_1.mid and movie_0.mid = written_by_0.msid and writer_0.wid = written_by_0.wid
TOT: 0.9905911514962576; TR: 0.9973503694767393; SMP: 0.3214285714285714; select movie_0.title from actor as actor_0, cast as cast_0, directed_by as directed_by_0, directed_by as directed_by_1, director as director_0, movie as movie_0, tv_series as tv_series_0 where actor_0.name = "Christoph Waltz" and cast_0.role = "Featuring" and director_0.name = "Quentin Tarantino" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and directed_by_0.msid = movie_0.mid and directed_by_0.msid = tv_series_0.sid and directed_by_1.did = director_0.did and directed_by_1.msid = tv_series_0.sid
TOT: 0.9905911514962576; TR: 0.9973503694767393; SMP: 0.3214285714285714; select movie_0.title from actor as actor_0, cast as cast_0, directed_by as directed_by_0, director as director_0, made_by as made_by_0, movie as movie_0, movie as movie_1 where actor_0.name = "Christoph Waltz" and cast_0.role = "Featuring" and director_0.name = "Quentin Tarantino" and actor_0.aid = cast_0.aid and cast_0.msid = movie_1.mid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and made_by_0.msid = movie_0.mid and made_by_0.msid = movie_1.mid
TOT: 0.9905911514962576; TR: 0.9973503694767393; SMP: 0.3214285714285714; select movie_0.title from actor as actor_0, cast as cast_0, classification as classification_0, directed_by as directed_by_0, director as director_0, movie as movie_0, tv_series as tv_series_0 where actor_0.name = "Christoph Waltz" and cast_0.role = "Featuring" and director_0.name = "Quentin Tarantino" and actor_0.aid = cast_0.aid and cast_0.msid = tv_series_0.sid and classification_0.msid = movie_0.mid and classification_0.msid = tv_series_0.sid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid
TOT: 0.9905911514962576; TR: 0.9973503694767393; SMP: 0.3214285714285714; select movie_0.title from actor as actor_0, cast as cast_0, directed_by as directed_by_0, directed_by as directed_by_1, director as director_0, movie as movie_0, tv_series as tv_series_0 where actor_0.name = "Christoph Waltz" and cast_0.role = "Featuring" and director_0.name = "Quentin Tarantino" and actor_0.aid = cast_0.aid and cast_0.msid = tv_series_0.sid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and directed_by_1.did = director_0.did and directed_by_1.msid = tv_series_0.sid
TOT: 0.9905911514962576; TR: 0.9973503694767393; SMP: 0.3214285714285714; select movie_0.title from actor as actor_0, cast as cast_0, directed_by as directed_by_0, made_by as made_by_0, movie as movie_0, movie as movie_1, producer as producer_0 where actor_0.name = "Christoph Waltz" and cast_0.role = "Featuring" and producer_0.name = "Quentin Tarantino" and actor_0.aid = cast_0.aid and cast_0.msid = movie_1.mid and directed_by_0.msid = movie_0.mid and directed_by_0.msid = movie_1.mid and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid
TOT: 0.9905911514962576; TR: 0.9973503694767393; SMP: 0.3214285714285714; select movie_0.title from cast as cast_0, directed_by as directed_by_0, director as director_0, movie as movie_0, tv_series as tv_series_0, writer as writer_0, written_by as written_by_0 where cast_0.role = "Featuring" and director_0.name = "Quentin Tarantino" and writer_0.name = "Christoph Waltz" and cast_0.msid = tv_series_0.sid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and directed_by_0.msid = tv_series_0.sid and movie_0.mid = written_by_0.msid and writer_0.wid = written_by_0.wid


03:46  INFO: ================
03:46  INFO: QUERY 8: What is the nationality of the actor "Christoph Waltz"?
03:46  INFO: ================
03:46  INFO: ================
03:46  INFO: QUERY 90: How many movies were produced in the year 2012?
03:46  INFO: ================
1271. ROOT: ROOT; NA; ; (0) 
1272. produced: CMT; NA; ; (0) 
1273. many: VTTEXT; NA; ; (0) cast.role(1.0):Many; Many; Many; | actor.birth_city(0.95):Many; | actor.name(0.81):Dany Many; Danny Many; many many others; | writer.name(0.8):Dany Many; DJ Many; Manuel 'Many;' Garcí; | tv_series.num_of_episodes(0.71):| 
1275. movies: NT; NA; ; (0) movie.title(1.0):| movie(1.0):| company.name(0.91):Movies; Movie; W Movies; | tv_series.title(0.8):Movies, Movies, Movi; Moon Movies; Movie Memories; | cast.role(0.79):Movie; KPC Movies; Movie F; | 
1277. year: NT; NA; ; (0) movie.release_year(1.0):| director.birth_year(1.0):| actor.birth_year(1.0):| producer.birth_year(1.0):| writer.birth_year(1.0):| 
1280. 2012: VTNUM; NA; ; (0) movie.release_year(1.0):2012; 2012; 2012; | actor.birth_year(1.0):2012; 2012; 2012; | 
How, WRB
many, JJ
movies, NNS
were, VBD
produced, VBN
in, IN
the, DT
year, NN
2012, CD
advmod(many-2, How-1)
dep(produced-5, many-2)
nsubjpass(produced-5, movies-3)
auxpass(produced-5, were-4)
root(ROOT-0, produced-5)
case(year-8, in-6)
det(year-8, the-7)
nmod(produced-5, year-8)
nummod(year-8, 2012-9)

PARSE TREE:(1271) ROOT ROOT
    (1272) produced CMT
        (1273) many VTTEXT
        (1275) movies NT
        (1277) year NT
            (1280) 2012 VTNUM


===========
TRANSLATIONS
===========
TOT: 0.975; NL: 0.975; NL+AG: 0.975; NL+QF: 0.98125; rels: [movie]; projs: [actor_0.aid]; preds: [actor_0.birth_city = "Many",movie_0.release_year = 2012]; havings: []; superlative: []; blanks: 0
TOT: 0.975; NL: 0.975; NL+AG: 0.975; NL+QF: 0.9819921875; rels: [movie]; projs: [actor_0.aid]; preds: [actor_0.birth_city = "Many",actor_0.birth_year = 2012]; havings: []; superlative: []; blanks: 0
TOT: 0.90275; NL: 0.90275; NL+AG: 0.9617362876072554; NL+QF: 0.9555555555555556; rels: [movie]; projs: [tv_series_0.num_of_episodes]; preds: [movie_0.release_year = 2012]; havings: []; superlative: []; blanks: 0
TOT: 0.90275; NL: 0.90275; NL+AG: 0.9617362876072554; NL+QF: 0.9555555555555556; rels: [movie]; projs: [tv_series_0.num_of_episodes]; preds: [actor_0.birth_year = 2012]; havings: []; superlative: []; blanks: 0
TOT: 0.9; NL: 0.9; NL+AG: 0.9525509311920762; NL+QF: 0.9545396645493286; rels: [movie]; projs: [actor_0.aid]; preds: [actor_0.birth_city = "Many",movie_0.release_year = 2012]; havings: []; superlative: []; blanks: 1
TOT: 0.9; NL: 0.9; NL+AG: 0.9525509311920762; NL+QF: 0.9546980390720391; rels: [movie]; projs: [actor_0.aid]; preds: [actor_0.birth_city = "Many",actor_0.birth_year = 2012]; havings: []; superlative: []; blanks: 1
TOT: 0.896875; NL: 0.896875; NL+AG: 0.9446108299876191; NL+QF: 0.94375; rels: [tv_series]; projs: [actor_0.aid]; preds: [actor_0.birth_city = "Many",movie_0.release_year = 2012]; havings: []; superlative: []; blanks: 0
TOT: 0.896875; NL: 0.896875; NL+AG: 0.9446108299876191; NL+QF: 0.9444921875; rels: [tv_series]; projs: [actor_0.aid]; preds: [actor_0.birth_city = "Many",actor_0.birth_year = 2012]; havings: []; superlative: []; blanks: 0
TOT: 0.8947252631814097; NL: 0.8947252631814097; NL+AG: 0.941318507553767; NL+QF: 0.94375; rels: []; projs: [actor_0.aid]; preds: [actor_0.birth_city = "Many",company_0.name = "Movies",movie_0.release_year = 2012]; havings: []; superlative: []; blanks: 0
TOT: 0.8947252631814097; NL: 0.8947252631814097; NL+AG: 0.941318507553767; NL+QF: 0.9444921875; rels: []; projs: [actor_0.aid]; preds: [actor_0.birth_city = "Many",company_0.name = "Movies",actor_0.birth_year = 2012]; havings: []; superlative: []; blanks: 0

===========
RESULTS
===========
TOT: 0.9694166666666666; TR: 0.975; SMP: 0.41666666666666663; select actor_0.aid from actor as actor_0, cast as cast_0, movie as movie_0 where actor_0.birth_city = "Many" and movie_0.release_year = 2012 and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid
TOT: 0.8892780105495955; TR: 0.8947252631814097; SMP: 0.35; select actor_0.aid from actor as actor_0, cast as cast_0, company as company_0, copyright as copyright_0, movie as movie_0 where actor_0.birth_city = "Many" and company_0.name = "Movies" and movie_0.release_year = 2012 and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and company_0.id = copyright_0.cid and copyright_0.msid = movie_0.mid
TOT: 0.8892780105495955; TR: 0.8947252631814097; SMP: 0.35; select actor_0.aid from actor as actor_0, cast as cast_0, company as company_0, copyright as copyright_0, movie as movie_0 where actor_0.birth_city = "Many" and actor_0.birth_year = 2012 and company_0.name = "Movies" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and company_0.id = copyright_0.cid and copyright_0.msid = movie_0.mid
TOT: 0.8892780105495955; TR: 0.8947252631814097; SMP: 0.35; select actor_0.aid from actor as actor_0, cast as cast_0, company as company_0, copyright as copyright_0, tv_series as tv_series_0 where actor_0.birth_city = "Many" and actor_0.birth_year = 2012 and company_0.name = "Movies" and actor_0.aid = cast_0.aid and cast_0.msid = tv_series_0.sid and company_0.id = copyright_0.cid and copyright_0.msid = tv_series_0.sid
TOT: 0.8889922962638813; TR: 0.8947252631814097; SMP: 0.3214285714285714; select actor_0.aid from actor as actor_0, cast as cast_0, company as company_0, copyright as copyright_0, copyright as copyright_1, movie as movie_0, tv_series as tv_series_0 where actor_0.birth_city = "Many" and company_0.name = "Movies" and movie_0.release_year = 2012 and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and company_0.id = copyright_1.cid and copyright_0.msid = movie_0.mid and copyright_0.msid = tv_series_0.sid and copyright_1.msid = tv_series_0.sid
TOT: 0.8889922962638813; TR: 0.8947252631814097; SMP: 0.3214285714285714; select actor_0.aid from actor as actor_0, cast as cast_0, company as company_0, copyright as copyright_0, copyright as copyright_1, movie as movie_0, tv_series as tv_series_0 where actor_0.birth_city = "Many" and actor_0.birth_year = 2012 and company_0.name = "Movies" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and company_0.id = copyright_1.cid and copyright_0.msid = movie_0.mid and copyright_0.msid = tv_series_0.sid and copyright_1.msid = tv_series_0.sid
TOT: 0.8889922962638813; TR: 0.8947252631814097; SMP: 0.3214285714285714; select actor_0.aid from actor as actor_0, cast as cast_0, company as company_0, copyright as copyright_0, tv_series as tv_series_0, tv_series as tv_series_1, written_by as written_by_0 where actor_0.birth_city = "Many" and actor_0.birth_year = 2012 and company_0.name = "Movies" and actor_0.aid = cast_0.aid and cast_0.msid = tv_series_1.sid and company_0.id = copyright_0.cid and copyright_0.msid = tv_series_0.sid and tv_series_0.sid = written_by_0.msid and tv_series_1.sid = written_by_0.msid
TOT: 0.8889922962638813; TR: 0.8947252631814097; SMP: 0.3214285714285714; select actor_0.aid from actor as actor_0, cast as cast_0, company as company_0, copyright as copyright_0, movie as movie_0, tags as tags_0, tv_series as tv_series_0 where actor_0.birth_city = "Many" and company_0.name = "Movies" and movie_0.release_year = 2012 and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and company_0.id = copyright_0.cid and copyright_0.msid = tv_series_0.sid and movie_0.mid = tags_0.msid and tags_0.msid = tv_series_0.sid
TOT: 0.8889922962638813; TR: 0.8947252631814097; SMP: 0.3214285714285714; select actor_0.aid from actor as actor_0, cast as cast_0, company as company_0, copyright as copyright_0, movie as movie_0, tags as tags_0, tv_series as tv_series_0 where actor_0.birth_city = "Many" and actor_0.birth_year = 2012 and company_0.name = "Movies" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and company_0.id = copyright_0.cid and copyright_0.msid = tv_series_0.sid and movie_0.mid = tags_0.msid and tags_0.msid = tv_series_0.sid
TOT: 0.8889922962638813; TR: 0.8947252631814097; SMP: 0.3214285714285714; select actor_0.aid from actor as actor_0, cast as cast_0, company as company_0, copyright as copyright_0, directed_by as directed_by_0, movie as movie_0, movie as movie_1 where actor_0.birth_city = "Many" and company_0.name = "Movies" and movie_0.release_year = 2012 and actor_0.aid = cast_0.aid and cast_0.msid = movie_1.mid and company_0.id = copyright_0.cid and copyright_0.msid = movie_0.mid and directed_by_0.msid = movie_0.mid and directed_by_0.msid = movie_1.mid


03:49  INFO: ================
03:49  INFO: QUERY 63: Find all the female actors born in "New York City" after 1980
03:49  INFO: ================
1282. ROOT: ROOT; NA; ; (0) 
1283. Find: CMT; NA; ; (0) 
1284. actors: NT; NA; all; (0) actor.name(1.0):| actor(1.0):| movie.title(0.95):Actors; Actors; Actors; | cast.role(0.95):Actors; Actors; Actors; | tv_series.title(0.9):Actors; Actor; Actors Vs; | 
1287. female: VTTEXT; NA; ; (0) director.gender(1.0):female; female; female; | actor.gender(1.0):female; female; female; | cast.role(1.0):Female; Female; Female; | producer.gender(1.0):female; female; female; | writer.gender(1.0):female; female; female; | 
1288. born: NT; NA; ; (0) tv_series.num_of_episodes(0.62):| tv_series.num_of_seasons(0.62):| tags(0.6):| director.did(0.6):| producer.name(0.59):| 
1289. New York City: VTTEXT; NA; ; (0) director.birth_city(1.0):New York City; New York City; New York City; | actor.birth_city(1.0):New York City; New York City; New York City; | producer.birth_city(1.0):New York City; New York City; New York City; | writer.birth_city(1.0):New York City; New York City; New York City; | cast.role(0.99):New York City; New York City; New York City Cop; | 
1291. 1980: VTNUM; NA; ; (0) director.birth_year(1.0):1985; 1993; 1984; | writer.birth_year(1.0):1985; 1993; 1984; | producer.birth_year(1.0):1985; 1993; 1997; | actor.birth_year(0.99):1999; 2003; 1986; | movie.release_year(0.98):2012; 2014; 2015; | 
1292. after: OT; >; ; (0) 
Find, VB
all, PDT
the, DT
female, JJ
actors, NNS
born, VBN
in, IN
New York City, NNP
after, IN
1980, CD
root(ROOT-0, Find-1)
det:predet(actors-5, all-2)
det(actors-5, the-3)
amod(actors-5, female-4)
dobj(Find-1, actors-5)
acl(actors-5, born-6)
case(New York City-8, in-7)
nmod(born-6, New York City-8)
case(1980-10, after-9)
nmod(born-6, 1980-10)

PARSE TREE:(1282) ROOT ROOT
    (1283) Find CMT
        (1284) actors NT
            (1287) female VTTEXT
            (1288) born NT
                (1289) New York City VTTEXT
                (1291) 1980 VTNUM
                    (1292) after OT


===========
TRANSLATIONS
===========
TOT: 0.9199625252525253; NL: 0.9199625252525253; NL+AG: 0.9735902504687578; NL+QF: 0.9674020202020202; rels: [tags]; projs: [actor_0.name]; preds: [director_0.gender = "female",director_0.birth_city = "New York City",director_0.birth_year > 1980]; havings: []; superlative: []; blanks: 0
TOT: 0.9199625252525253; NL: 0.9199625252525253; NL+AG: 0.9735902504687578; NL+QF: 0.9674020202020202; rels: [tags]; projs: [actor_0.name]; preds: [director_0.gender = "female",director_0.birth_city = "New York City",writer_0.birth_year > 1980]; havings: []; superlative: []; blanks: 0
TOT: 0.9199625252525253; NL: 0.9199625252525253; NL+AG: 0.9735902504687578; NL+QF: 0.9674020202020202; rels: [tags]; projs: [actor_0.name]; preds: [director_0.gender = "female",actor_0.birth_city = "New York City",director_0.birth_year > 1980]; havings: []; superlative: []; blanks: 0
TOT: 0.9199625252525253; NL: 0.9199625252525253; NL+AG: 0.9735902504687578; NL+QF: 0.9674020202020202; rels: [tags]; projs: [actor_0.name]; preds: [director_0.gender = "female",actor_0.birth_city = "New York City",writer_0.birth_year > 1980]; havings: []; superlative: []; blanks: 0
TOT: 0.9199625252525253; NL: 0.9199625252525253; NL+AG: 0.9735902504687578; NL+QF: 0.9674020202020202; rels: [tags]; projs: [actor_0.name]; preds: [director_0.gender = "female",producer_0.birth_city = "New York City",director_0.birth_year > 1980]; havings: []; superlative: []; blanks: 0
TOT: 0.9199625252525253; NL: 0.9199625252525253; NL+AG: 0.9735902504687578; NL+QF: 0.9674020202020202; rels: [tags]; projs: [actor_0.name]; preds: [director_0.gender = "female",producer_0.birth_city = "New York City",writer_0.birth_year > 1980]; havings: []; superlative: []; blanks: 0
TOT: 0.9199625252525253; NL: 0.9199625252525253; NL+AG: 0.9735902504687578; NL+QF: 0.9674020202020202; rels: [tags]; projs: [actor_0.name]; preds: [director_0.gender = "female",writer_0.birth_city = "New York City",director_0.birth_year > 1980]; havings: []; superlative: []; blanks: 0
TOT: 0.9199625252525253; NL: 0.9199625252525253; NL+AG: 0.9735902504687578; NL+QF: 0.9674020202020202; rels: [tags]; projs: [actor_0.name]; preds: [director_0.gender = "female",writer_0.birth_city = "New York City",writer_0.birth_year > 1980]; havings: []; superlative: []; blanks: 0
TOT: 0.9199625252525253; NL: 0.9199625252525253; NL+AG: 0.9735902504687578; NL+QF: 0.9674020202020202; rels: [tags]; projs: [actor_0.name]; preds: [actor_0.gender = "female",director_0.birth_city = "New York City",director_0.birth_year > 1980]; havings: []; superlative: []; blanks: 0
TOT: 0.9199625252525253; NL: 0.9199625252525253; NL+AG: 0.9735902504687578; NL+QF: 0.9674020202020202; rels: [tags]; projs: [actor_0.name]; preds: [actor_0.gender = "female",director_0.birth_city = "New York City",writer_0.birth_year > 1980]; havings: []; superlative: []; blanks: 0

===========
RESULTS
===========
TOT: 0.9139771857142858; TR: 0.9199625252525253; SMP: 0.3214285714285714; select actor_0.name from actor as actor_0, cast as cast_0, directed_by as directed_by_0, director as director_0, tags as tags_0, tv_series as tv_series_0, tv_series as tv_series_1 where director_0.birth_city = "New York City" and director_0.birth_year > 1980 and director_0.gender = "female" and actor_0.aid = cast_0.aid and cast_0.msid = tv_series_1.sid and directed_by_0.did = director_0.did and directed_by_0.msid = tv_series_0.sid and tags_0.msid = tv_series_0.sid and tags_0.msid = tv_series_1.sid
TOT: 0.9139771857142858; TR: 0.9199625252525253; SMP: 0.3214285714285714; select actor_0.name from actor as actor_0, cast as cast_0, directed_by as directed_by_0, director as director_0, tags as tags_0, tv_series as tv_series_0, tv_series as tv_series_1 where actor_0.birth_city = "New York City" and director_0.birth_year > 1980 and director_0.gender = "female" and actor_0.aid = cast_0.aid and cast_0.msid = tv_series_1.sid and directed_by_0.did = director_0.did and directed_by_0.msid = tv_series_0.sid and tags_0.msid = tv_series_0.sid and tags_0.msid = tv_series_1.sid
TOT: 0.9139771857142858; TR: 0.9199625252525253; SMP: 0.3214285714285714; select actor_0.name from actor as actor_0, cast as cast_0, directed_by as directed_by_0, director as director_0, tags as tags_0, tv_series as tv_series_0, tv_series as tv_series_1 where actor_0.gender = "female" and director_0.birth_city = "New York City" and director_0.birth_year > 1980 and actor_0.aid = cast_0.aid and cast_0.msid = tv_series_1.sid and directed_by_0.did = director_0.did and directed_by_0.msid = tv_series_0.sid and tags_0.msid = tv_series_0.sid and tags_0.msid = tv_series_1.sid
TOT: 0.9139771857142858; TR: 0.9199625252525253; SMP: 0.3214285714285714; select actor_0.name from actor as actor_0, cast as cast_0, directed_by as directed_by_0, director as director_0, movie as movie_0, movie as movie_1, tags as tags_0 where director_0.birth_city = "New York City" and director_0.birth_year > 1980 and director_0.gender = "female" and actor_0.aid = cast_0.aid and cast_0.msid = movie_1.mid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and movie_0.mid = tags_0.msid and movie_1.mid = tags_0.msid
TOT: 0.9139771857142858; TR: 0.9199625252525253; SMP: 0.3214285714285714; select actor_0.name from actor as actor_0, cast as cast_0, directed_by as directed_by_0, director as director_0, movie as movie_0, movie as movie_1, tags as tags_0 where actor_0.birth_city = "New York City" and director_0.birth_year > 1980 and director_0.gender = "female" and actor_0.aid = cast_0.aid and cast_0.msid = movie_1.mid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and movie_0.mid = tags_0.msid and movie_1.mid = tags_0.msid
TOT: 0.9139771857142858; TR: 0.9199625252525253; SMP: 0.3214285714285714; select actor_0.name from actor as actor_0, cast as cast_0, directed_by as directed_by_0, director as director_0, movie as movie_0, movie as movie_1, tags as tags_0 where actor_0.gender = "female" and director_0.birth_city = "New York City" and director_0.birth_year > 1980 and actor_0.aid = cast_0.aid and cast_0.msid = movie_1.mid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and movie_0.mid = tags_0.msid and movie_1.mid = tags_0.msid
TOT: 0.9139771857142858; TR: 0.9199625252525253; SMP: 0.3214285714285714; select actor_0.name from actor as actor_0, cast as cast_0, directed_by as directed_by_0, director as director_0, movie as movie_0, tags as tags_0, tv_series as tv_series_0 where director_0.birth_city = "New York City" and director_0.birth_year > 1980 and director_0.gender = "female" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and directed_by_0.did = director_0.did and directed_by_0.msid = tv_series_0.sid and movie_0.mid = tags_0.msid and tags_0.msid = tv_series_0.sid
TOT: 0.9139771857142858; TR: 0.9199625252525253; SMP: 0.3214285714285714; select actor_0.name from actor as actor_0, cast as cast_0, directed_by as directed_by_0, director as director_0, movie as movie_0, tags as tags_0, tv_series as tv_series_0 where actor_0.birth_city = "New York City" and director_0.birth_year > 1980 and director_0.gender = "female" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and directed_by_0.did = director_0.did and directed_by_0.msid = tv_series_0.sid and movie_0.mid = tags_0.msid and tags_0.msid = tv_series_0.sid
TOT: 0.9139771857142858; TR: 0.9199625252525253; SMP: 0.3214285714285714; select actor_0.name from actor as actor_0, cast as cast_0, directed_by as directed_by_0, director as director_0, movie as movie_0, tags as tags_0, tv_series as tv_series_0 where actor_0.gender = "female" and director_0.birth_city = "New York City" and director_0.birth_year > 1980 and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and directed_by_0.did = director_0.did and directed_by_0.msid = tv_series_0.sid and movie_0.mid = tags_0.msid and tags_0.msid = tv_series_0.sid
TOT: 0.9139771857142858; TR: 0.9199625252525253; SMP: 0.3214285714285714; select actor_0.name from actor as actor_0, cast as cast_0, directed_by as directed_by_0, director as director_0, movie as movie_0, tags as tags_0, tv_series as tv_series_0 where director_0.birth_city = "New York City" and director_0.birth_year > 1980 and director_0.gender = "female" and actor_0.aid = cast_0.aid and cast_0.msid = tv_series_0.sid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and movie_0.mid = tags_0.msid and tags_0.msid = tv_series_0.sid


03:50  INFO: ================
03:50  INFO: QUERY 48: What are all the movies featuring "Kerry Washington"?
03:50  INFO: ================
1294. ROOT: ROOT; NA; ; (0) 
1295. What: CMT; NA; ; (0) 
1297. movies: NT; NA; all; (0) movie.title(1.0):| movie(1.0):| company.name(0.91):Movies; Movie; W Movies; | tv_series.title(0.8):Movies, Movies, Movi; Moon Movies; Movie Memories; | cast.role(0.79):Movie; KPC Movies; Movie F; | 
1300. featuring: NT; NA; ; (0) movie.release_year(0.64):| producer.name(0.64):| producer(0.64):| made_by(0.64):| movie.title_aka(0.62):| 
1301. Kerry Washington: VTTEXT; NA; ; (0) actor.name(0.99):Kerry Washington; Kerry Washington; Jerry Washington; | producer.name(0.99):Kerry Washington; Kerry Washington; Terry Washington; | writer.name(0.89):Jerry Washington; Ellery Washington; Leroy Washington; | director.name(0.88):Jerry Washington; Leroy Washington; Tony Washington; | cast.role(0.86):Sherry Washington; Roy Washington; Amy Washington; | 
What, WP
are, VBP
all, PDT
the, DT
movies, NNS
featuring, VBG
Kerry Washington, NNP
root(ROOT-0, What-1)
cop(What-1, are-2)
det:predet(movies-5, all-3)
det(movies-5, the-4)
nsubj(What-1, movies-5)
dep(movies-5, featuring-6)
dobj(featuring-6, Kerry Washington-7)

PARSE TREE:(1294) ROOT ROOT
    (1295) What CMT
        (1297) movies NT
            (1300) featuring NT
                (1301) Kerry Washington VTTEXT


===========
TRANSLATIONS
===========
TOT: 0.9966666666666666; NL: 0.9966666666666666; NL+AG: 0.9966666666666666; NL+QF: 0.9984838383838384; rels: []; projs: [movie_0.title]; preds: [producer_0.name = "Kerry Washington"]; havings: []; superlative: []; blanks: 0
TOT: 0.934578713533901; NL: 0.934578713533901; NL+AG: 0.934578713533901; NL+QF: 0.9563858090226006; rels: []; projs: [company_0.id]; preds: [company_0.name = "Movies",producer_0.name = "Kerry Washington"]; havings: []; superlative: []; blanks: 0
TOT: 0.8644444444444445; NL: 0.8644444444444445; NL+AG: 0.9622500849454028; NL+QF: 0.9570315379560865; rels: []; projs: [movie_0.title]; preds: [actor_0.name = "Kerry Washington"]; havings: []; superlative: []; blanks: 1
TOT: 0.8644444444444445; NL: 0.8644444444444445; NL+AG: 0.9622500849454028; NL+QF: 0.9602545776515913; rels: []; projs: [movie_0.title]; preds: [producer_0.name = "Kerry Washington"]; havings: []; superlative: []; blanks: 1
TOT: 0.8509340351504258; NL: 0.8509340351504258; NL+AG: 0.9216349664197514; NL+QF: 0.9281039332702635; rels: []; projs: [company_0.id]; preds: [company_0.name = "Movies",actor_0.name = "Kerry Washington"]; havings: []; superlative: []; blanks: 1
TOT: 0.8509340351504258; NL: 0.8509340351504258; NL+AG: 0.9216349664197514; NL+QF: 0.9300448223919142; rels: []; projs: [company_0.id]; preds: [company_0.name = "Movies",producer_0.name = "Kerry Washington"]; havings: []; superlative: []; blanks: 1
TOT: 0.8404166666666666; NL: 0.8404166666666666; NL+AG: 0.986910569105691; NL+QF: 0.9483333333333333; rels: []; projs: [tv_series_0.title]; preds: [producer_0.name = "Kerry Washington"]; havings: []; superlative: []; blanks: 0
TOT: 0.8305813058344941; NL: 0.8305813058344941; NL+AG: 0.9283869463354523; NL+QF: 0.9384940035725085; rels: []; projs: [movie_0.title]; preds: [writer_0.name = "Jerry Washington"]; havings: []; superlative: []; blanks: 1
TOT: 0.8263718268428413; NL: 0.8263718268428413; NL+AG: 0.9241774673437996; NL+QF: 0.9348736710531783; rels: []; projs: [movie_0.title]; preds: [director_0.name = "Jerry Washington"]; havings: []; superlative: []; blanks: 1
TOT: 0.825536681192963; NL: 0.825536681192963; NL+AG: 0.8962376124622886; NL+QF: 0.9103957792559291; rels: []; projs: [company_0.id]; preds: [company_0.name = "Movies",writer_0.name = "Jerry Washington"]; havings: []; superlative: []; blanks: 1

===========
RESULTS
===========
TOT: 0.9908666666666666; TR: 0.9966666666666666; SMP: 0.41666666666666663; select movie_0.title from made_by as made_by_0, movie as movie_0, producer as producer_0 where producer_0.name = "Kerry Washington" and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid
TOT: 0.9287329263985619; TR: 0.934578713533901; SMP: 0.35; select company_0.id from company as company_0, copyright as copyright_0, made_by as made_by_0, producer as producer_0, tv_series as tv_series_0 where company_0.name = "Movies" and producer_0.name = "Kerry Washington" and company_0.id = copyright_0.cid and copyright_0.msid = tv_series_0.sid and made_by_0.msid = tv_series_0.sid and made_by_0.pid = producer_0.pid
TOT: 0.9287329263985619; TR: 0.934578713533901; SMP: 0.35; select company_0.id from company as company_0, copyright as copyright_0, made_by as made_by_0, movie as movie_0, producer as producer_0 where company_0.name = "Movies" and producer_0.name = "Kerry Washington" and company_0.id = copyright_0.cid and copyright_0.msid = movie_0.mid and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid
TOT: 0.9284472121128476; TR: 0.934578713533901; SMP: 0.3214285714285714; select company_0.id from company as company_0, copyright as copyright_0, made_by as made_by_0, made_by as made_by_1, producer as producer_0, tv_series as tv_series_0, tv_series as tv_series_1 where company_0.name = "Movies" and producer_0.name = "Kerry Washington" and company_0.id = copyright_0.cid and copyright_0.msid = tv_series_0.sid and made_by_0.msid = tv_series_0.sid and made_by_0.msid = tv_series_1.sid and made_by_1.msid = tv_series_1.sid and made_by_1.pid = producer_0.pid
TOT: 0.9284472121128476; TR: 0.934578713533901; SMP: 0.3214285714285714; select company_0.id from company as company_0, copyright as copyright_0, made_by as made_by_0, made_by as made_by_1, movie as movie_0, movie as movie_1, producer as producer_0 where company_0.name = "Movies" and producer_0.name = "Kerry Washington" and company_0.id = copyright_0.cid and copyright_0.msid = movie_0.mid and made_by_0.msid = movie_0.mid and made_by_0.msid = movie_1.mid and made_by_1.msid = movie_1.mid and made_by_1.pid = producer_0.pid
TOT: 0.9284472121128476; TR: 0.934578713533901; SMP: 0.3214285714285714; select company_0.id from cast as cast_0, company as company_0, copyright as copyright_0, made_by as made_by_0, producer as producer_0, tv_series as tv_series_0, tv_series as tv_series_1 where company_0.name = "Movies" and producer_0.name = "Kerry Washington" and cast_0.msid = tv_series_0.sid and cast_0.msid = tv_series_1.sid and company_0.id = copyright_0.cid and copyright_0.msid = tv_series_0.sid and made_by_0.msid = tv_series_1.sid and made_by_0.pid = producer_0.pid
TOT: 0.9284472121128476; TR: 0.934578713533901; SMP: 0.3214285714285714; select company_0.id from company as company_0, copyright as copyright_0, directed_by as directed_by_0, made_by as made_by_0, producer as producer_0, tv_series as tv_series_0, tv_series as tv_series_1 where company_0.name = "Movies" and producer_0.name = "Kerry Washington" and company_0.id = copyright_0.cid and copyright_0.msid = tv_series_0.sid and directed_by_0.msid = tv_series_0.sid and directed_by_0.msid = tv_series_1.sid and made_by_0.msid = tv_series_1.sid and made_by_0.pid = producer_0.pid
TOT: 0.9284472121128476; TR: 0.934578713533901; SMP: 0.3214285714285714; select company_0.id from company as company_0, copyright as copyright_0, made_by as made_by_0, made_by as made_by_1, movie as movie_0, producer as producer_0, tv_series as tv_series_0 where company_0.name = "Movies" and producer_0.name = "Kerry Washington" and company_0.id = copyright_0.cid and copyright_0.msid = tv_series_0.sid and made_by_0.msid = movie_0.mid and made_by_0.msid = tv_series_0.sid and made_by_1.msid = movie_0.mid and made_by_1.pid = producer_0.pid
TOT: 0.9284472121128476; TR: 0.934578713533901; SMP: 0.3214285714285714; select company_0.id from cast as cast_0, company as company_0, copyright as copyright_0, made_by as made_by_0, movie as movie_0, producer as producer_0, tv_series as tv_series_0 where company_0.name = "Movies" and producer_0.name = "Kerry Washington" and cast_0.msid = movie_0.mid and cast_0.msid = tv_series_0.sid and company_0.id = copyright_0.cid and copyright_0.msid = movie_0.mid and made_by_0.msid = tv_series_0.sid and made_by_0.pid = producer_0.pid
TOT: 0.9284472121128476; TR: 0.934578713533901; SMP: 0.3214285714285714; select company_0.id from company as company_0, copyright as copyright_0, made_by as made_by_0, producer as producer_0, tv_series as tv_series_0, tv_series as tv_series_1, written_by as written_by_0 where company_0.name = "Movies" and producer_0.name = "Kerry Washington" and company_0.id = copyright_0.cid and copyright_0.msid = tv_series_0.sid and made_by_0.msid = tv_series_1.sid and made_by_0.pid = producer_0.pid and tv_series_0.sid = written_by_0.msid and tv_series_1.sid = written_by_0.msid


03:51  INFO: ================
03:51  INFO: QUERY 38: Find all movies featuring "Benedict Cumberbatch"
03:51  INFO: ================
1303. ROOT: ROOT; NA; ; (0) 
1304. Find: CMT; NA; ; (0) 
1305. featuring: NT; NA; ; (0) movie.release_year(0.64):| producer.name(0.64):| producer(0.64):| made_by(0.64):| movie.title_aka(0.62):| 
1306. movies: NT; NA; all; (0) movie.title(1.0):| movie(1.0):| company.name(0.91):Movies; Movie; W Movies; | tv_series.title(0.8):Movies, Movies, Movi; Moon Movies; Movie Memories; | cast.role(0.79):Movie; KPC Movies; Movie F; | 
1308. Benedict Cumberbatch: VTTEXT; NA; ; (0) actor.name(0.98):Benedict Cumberbatch; Benedict Cumberbatch; Benedict Timothy Car; | producer.name(0.98):Benedict Cumberbatch; Benedict Cumberbatch; Benedict Timothy Car; | cast.role(0.7):Tom Cumberbatch; Bert Benedict; Bert Benedict; | writer.name(0.67):Benedict Berenberg; Benedict Berenberg; Carol Cumberbatch; | director.name(0.66):Jill Cumberbatch; Benedict Coen; Benedict Coen; | 
Find, VB
all, DT
movies, NNS
featuring, VBG
Benedict Cumberbatch, NNP
root(ROOT-0, Find-1)
det(movies-3, all-2)
nsubj(featuring-4, movies-3)
dep(Find-1, featuring-4)
dobj(featuring-4, Benedict Cumberbatch-5)

PARSE TREE:(1303) ROOT ROOT
    (1304) Find CMT
        (1305) featuring NT
            (1306) movies NT
            (1308) Benedict Cumberbatch VTTEXT


===========
TRANSLATIONS
===========
TOT: 0.8733247404532024; NL: 0.8733247404532024; NL+AG: 0.9564519371513668; NL+QF: 0.9547923832236728; rels: [movie]; projs: [movie_0.release_year]; preds: [actor_0.name = "Benedict Cumberbatch"]; havings: []; superlative: []; blanks: 0
TOT: 0.8733247404532024; NL: 0.8733247404532024; NL+AG: 0.9564519371513668; NL+QF: 0.953592296104604; rels: [movie]; projs: [movie_0.release_year]; preds: [producer_0.name = "Benedict Cumberbatch"]; havings: []; superlative: []; blanks: 0
TOT: 0.8732580737865357; NL: 0.8732580737865357; NL+AG: 0.9704505424912875; NL+QF: 0.9517085532679698; rels: [movie]; projs: [producer_0.name]; preds: [actor_0.name = "Benedict Cumberbatch"]; havings: []; superlative: []; blanks: 0
TOT: 0.8732580737865357; NL: 0.8732580737865357; NL+AG: 0.9704505424912875; NL+QF: 0.9504164936354682; rels: [movie]; projs: [producer_0.name]; preds: [producer_0.name = "Benedict Cumberbatch"]; havings: []; superlative: []; blanks: 0
TOT: 0.8668747404532025; NL: 0.8668747404532025; NL+AG: 0.9704505424912875; NL+QF: 0.9504164936354682; rels: [movie]; projs: [movie_0.title_aka]; preds: [actor_0.name = "Benedict Cumberbatch"]; havings: []; superlative: []; blanks: 0
TOT: 0.8668747404532025; NL: 0.8668747404532025; NL+AG: 0.9704505424912875; NL+QF: 0.9504164936354682; rels: [movie]; projs: [movie_0.title_aka]; preds: [producer_0.name = "Benedict Cumberbatch"]; havings: []; superlative: []; blanks: 0
TOT: 0.7809847374079218; NL: 0.7809847374079218; NL+AG: 0.9263396786692909; NL+QF: 0.914286913580247; rels: [movie]; projs: [movie_0.release_year]; preds: [cast_0.role = "Tom Cumberbatch"]; havings: []; superlative: []; blanks: 0
TOT: 0.780918070741255; NL: 0.780918070741255; NL+AG: 0.9558002204467577; NL+QF: 0.9111111111111111; rels: [movie]; projs: [producer_0.name]; preds: [cast_0.role = "Tom Cumberbatch"]; havings: []; superlative: []; blanks: 0
TOT: 0.7745347374079218; NL: 0.7745347374079218; NL+AG: 0.9558002204467577; NL+QF: 0.9111111111111111; rels: [movie]; projs: [movie_0.title_aka]; preds: [cast_0.role = "Tom Cumberbatch"]; havings: []; superlative: []; blanks: 0
TOT: 0.7711028412951871; NL: 0.7711028412951871; NL+AG: 0.9263396786692909; NL+QF: 0.9180102942685; rels: [movie]; projs: [movie_0.release_year]; preds: [writer_0.name = "Benedict Berenberg"]; havings: []; superlative: []; blanks: 0

===========
RESULTS
===========
TOT: 0.868758159715337; TR: 0.8733247404532024; SMP: 0.41666666666666663; select movie_0.release_year from made_by as made_by_0, movie as movie_0, producer as producer_0 where producer_0.name = "Benedict Cumberbatch" and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid
TOT: 0.868758159715337; TR: 0.8733247404532024; SMP: 0.41666666666666663; select movie_0.release_year from actor as actor_0, cast as cast_0, movie as movie_0 where actor_0.name = "Benedict Cumberbatch" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid
TOT: 0.8680254930486704; TR: 0.8732580737865357; SMP: 0.35; select producer_0.name from actor as actor_0, cast as cast_0, made_by as made_by_0, movie as movie_0, producer as producer_0 where actor_0.name = "Benedict Cumberbatch" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid
TOT: 0.8677397787629562; TR: 0.8732580737865357; SMP: 0.3214285714285714; select producer_0.name from actor as actor_0, cast as cast_0, cast as cast_1, made_by as made_by_0, movie as movie_0, producer as producer_0, tv_series as tv_series_0 where actor_0.name = "Benedict Cumberbatch" and actor_0.aid = cast_1.aid and cast_0.msid = movie_0.mid and cast_0.msid = tv_series_0.sid and cast_1.msid = tv_series_0.sid and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid
TOT: 0.8677397787629562; TR: 0.8732580737865357; SMP: 0.3214285714285714; select producer_0.name from actor as actor_0, cast as cast_0, made_by as made_by_0, movie as movie_0, movie as movie_1, producer as producer_0, tags as tags_0 where actor_0.name = "Benedict Cumberbatch" and actor_0.aid = cast_0.aid and cast_0.msid = movie_1.mid and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid and movie_0.mid = tags_0.msid and movie_1.mid = tags_0.msid
TOT: 0.8677397787629562; TR: 0.8732580737865357; SMP: 0.3214285714285714; select producer_0.name from actor as actor_0, cast as cast_0, directed_by as directed_by_0, made_by as made_by_0, movie as movie_0, movie as movie_1, producer as producer_0 where actor_0.name = "Benedict Cumberbatch" and actor_0.aid = cast_0.aid and cast_0.msid = movie_1.mid and directed_by_0.msid = movie_0.mid and directed_by_0.msid = movie_1.mid and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid
TOT: 0.8677397787629562; TR: 0.8732580737865357; SMP: 0.3214285714285714; select producer_0.name from actor as actor_0, cast as cast_0, copyright as copyright_0, made_by as made_by_0, movie as movie_0, movie as movie_1, producer as producer_0 where actor_0.name = "Benedict Cumberbatch" and actor_0.aid = cast_0.aid and cast_0.msid = movie_1.mid and copyright_0.msid = movie_0.mid and copyright_0.msid = movie_1.mid and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid
TOT: 0.8677397787629562; TR: 0.8732580737865357; SMP: 0.3214285714285714; select producer_0.name from actor as actor_0, cast as cast_0, directed_by as directed_by_0, made_by as made_by_0, movie as movie_0, producer as producer_0, tv_series as tv_series_0 where actor_0.name = "Benedict Cumberbatch" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and directed_by_0.msid = movie_0.mid and directed_by_0.msid = tv_series_0.sid and made_by_0.msid = tv_series_0.sid and made_by_0.pid = producer_0.pid
TOT: 0.8677397787629562; TR: 0.8732580737865357; SMP: 0.3214285714285714; select producer_0.name from actor as actor_0, cast as cast_0, classification as classification_0, made_by as made_by_0, movie as movie_0, movie as movie_1, producer as producer_0 where actor_0.name = "Benedict Cumberbatch" and actor_0.aid = cast_0.aid and cast_0.msid = movie_1.mid and classification_0.msid = movie_0.mid and classification_0.msid = movie_1.mid and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid
TOT: 0.8677397787629562; TR: 0.8732580737865357; SMP: 0.3214285714285714; select producer_0.name from actor as actor_0, cast as cast_0, cast as cast_1, made_by as made_by_0, movie as movie_0, producer as producer_0, tv_series as tv_series_0 where actor_0.name = "Benedict Cumberbatch" and actor_0.aid = cast_1.aid and cast_0.msid = movie_0.mid and cast_0.msid = tv_series_0.sid and cast_1.msid = movie_0.mid and made_by_0.msid = tv_series_0.sid and made_by_0.pid = producer_0.pid


03:51  INFO: ================
03:51  INFO: QUERY 1: What year was "Ellen Page" born?
03:51  INFO: ================
1310. ROOT: ROOT; NA; ; (0) 
1311. born: NT; NA; ; (0) tv_series.num_of_episodes(0.62):| tv_series.num_of_seasons(0.62):| tags(0.6):| director.did(0.6):| producer.name(0.59):| 
1312. year: NT; NA; ; (0) movie.release_year(1.0):| director.birth_year(1.0):| actor.birth_year(1.0):| producer.birth_year(1.0):| writer.birth_year(1.0):| 
1315. Ellen Page: VTTEXT; NA; ; (0) actor.name(0.99):Ellen Page; Ellen Page; Allen Page; | producer.name(0.99):Ellen Page; Ellen Page; Helen Page; | director.name(0.84):Helen Page; Ben Page; Ken Page; | cast.role(0.8):En page; Ellen Paul; Ellen Paul; | writer.name(0.76):Jen Page; Jen Page; Ken Page; | 
What, WDT
year, NN
was, VBD
Ellen Page, NNP
born, VBN
det(year-2, What-1)
nmod:tmod(born-5, year-2)
auxpass(born-5, was-3)
nsubjpass(born-5, Ellen Page-4)
root(ROOT-0, born-5)

PARSE TREE:(1310) ROOT ROOT
    (1311) born NT
        (1312) year NT
        (1315) Ellen Page VTTEXT


===========
TRANSLATIONS
===========
TOT: 0.6974796296296296; NL: 0.6974796296296296; NL+AG: 0.9263924645930445; NL+QF: 0.9095228297080148; rels: [tags]; projs: [movie_0.release_year]; preds: [actor_0.name = "Ellen Page"]; havings: []; superlative: []; blanks: 0
TOT: 0.6974796296296296; NL: 0.6974796296296296; NL+AG: 0.9263924645930445; NL+QF: 0.908641975308642; rels: [tags]; projs: [movie_0.release_year]; preds: [producer_0.name = "Ellen Page"]; havings: []; superlative: []; blanks: 0
TOT: 0.6974796296296296; NL: 0.6974796296296296; NL+AG: 0.9263924645930445; NL+QF: 0.908641975308642; rels: [tags]; projs: [director_0.birth_year]; preds: [actor_0.name = "Ellen Page"]; havings: []; superlative: []; blanks: 0
TOT: 0.6974796296296296; NL: 0.6974796296296296; NL+AG: 0.9263924645930445; NL+QF: 0.908641975308642; rels: [tags]; projs: [director_0.birth_year]; preds: [producer_0.name = "Ellen Page"]; havings: []; superlative: []; blanks: 0
TOT: 0.6974796296296296; NL: 0.6974796296296296; NL+AG: 0.9263924645930445; NL+QF: 0.9112845385067607; rels: [tags]; projs: [actor_0.birth_year]; preds: [actor_0.name = "Ellen Page"]; havings: []; superlative: []; blanks: 0
TOT: 0.6974796296296296; NL: 0.6974796296296296; NL+AG: 0.9263924645930445; NL+QF: 0.908641975308642; rels: [tags]; projs: [actor_0.birth_year]; preds: [producer_0.name = "Ellen Page"]; havings: []; superlative: []; blanks: 0
TOT: 0.6974796296296296; NL: 0.6974796296296296; NL+AG: 0.9263924645930445; NL+QF: 0.908641975308642; rels: [tags]; projs: [producer_0.birth_year]; preds: [actor_0.name = "Ellen Page"]; havings: []; superlative: []; blanks: 0
TOT: 0.6974796296296296; NL: 0.6974796296296296; NL+AG: 0.9263924645930445; NL+QF: 0.908641975308642; rels: [tags]; projs: [producer_0.birth_year]; preds: [producer_0.name = "Ellen Page"]; havings: []; superlative: []; blanks: 0
TOT: 0.6974796296296296; NL: 0.6974796296296296; NL+AG: 0.9263924645930445; NL+QF: 0.908641975308642; rels: [tags]; projs: [writer_0.birth_year]; preds: [actor_0.name = "Ellen Page"]; havings: []; superlative: []; blanks: 0
TOT: 0.6974796296296296; NL: 0.6974796296296296; NL+AG: 0.9263924645930445; NL+QF: 0.908641975308642; rels: [tags]; projs: [writer_0.birth_year]; preds: [producer_0.name = "Ellen Page"]; havings: []; superlative: []; blanks: 0

===========
RESULTS
===========
TOT: 0.6937191190476191; TR: 0.6974796296296296; SMP: 0.3214285714285714; select director_0.birth_year from directed_by as directed_by_0, director as director_0, made_by as made_by_0, movie as movie_0, producer as producer_0, tags as tags_0, tv_series as tv_series_0 where producer_0.name = "Ellen Page" and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and made_by_0.msid = tv_series_0.sid and made_by_0.pid = producer_0.pid and movie_0.mid = tags_0.msid and tags_0.msid = tv_series_0.sid
TOT: 0.6937191190476191; TR: 0.6974796296296296; SMP: 0.3214285714285714; select actor_0.birth_year from actor as actor_0, cast as cast_0, made_by as made_by_0, movie as movie_0, movie as movie_1, producer as producer_0, tags as tags_0 where producer_0.name = "Ellen Page" and actor_0.aid = cast_0.aid and cast_0.msid = movie_1.mid and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid and movie_0.mid = tags_0.msid and movie_1.mid = tags_0.msid
TOT: 0.6937191190476191; TR: 0.6974796296296296; SMP: 0.3214285714285714; select producer_0.birth_year from actor as actor_0, cast as cast_0, made_by as made_by_0, movie as movie_0, movie as movie_1, producer as producer_0, tags as tags_0 where actor_0.name = "Ellen Page" and actor_0.aid = cast_0.aid and cast_0.msid = movie_1.mid and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid and movie_0.mid = tags_0.msid and movie_1.mid = tags_0.msid
TOT: 0.6937191190476191; TR: 0.6974796296296296; SMP: 0.3214285714285714; select writer_0.birth_year from actor as actor_0, cast as cast_0, movie as movie_0, tags as tags_0, tv_series as tv_series_0, writer as writer_0, written_by as written_by_0 where actor_0.name = "Ellen Page" and actor_0.aid = cast_0.aid and cast_0.msid = tv_series_0.sid and movie_0.mid = tags_0.msid and movie_0.mid = written_by_0.msid and tags_0.msid = tv_series_0.sid and writer_0.wid = written_by_0.wid
TOT: 0.6937191190476191; TR: 0.6974796296296296; SMP: 0.3214285714285714; select writer_0.birth_year from made_by as made_by_0, producer as producer_0, tags as tags_0, tv_series as tv_series_0, tv_series as tv_series_1, writer as writer_0, written_by as written_by_0 where producer_0.name = "Ellen Page" and made_by_0.msid = tv_series_0.sid and made_by_0.pid = producer_0.pid and tags_0.msid = tv_series_0.sid and tags_0.msid = tv_series_1.sid and tv_series_1.sid = written_by_0.msid and writer_0.wid = written_by_0.wid
TOT: 0.6937191190476191; TR: 0.6974796296296296; SMP: 0.3214285714285714; select director_0.birth_year from directed_by as directed_by_0, director as director_0, made_by as made_by_0, movie as movie_0, producer as producer_0, tags as tags_0, tv_series as tv_series_0 where producer_0.name = "Ellen Page" and directed_by_0.did = director_0.did and directed_by_0.msid = tv_series_0.sid and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid and movie_0.mid = tags_0.msid and tags_0.msid = tv_series_0.sid
TOT: 0.6937191190476191; TR: 0.6974796296296296; SMP: 0.3214285714285714; select writer_0.birth_year from actor as actor_0, cast as cast_0, movie as movie_0, movie as movie_1, tags as tags_0, writer as writer_0, written_by as written_by_0 where actor_0.name = "Ellen Page" and actor_0.aid = cast_0.aid and cast_0.msid = movie_1.mid and movie_0.mid = tags_0.msid and movie_0.mid = written_by_0.msid and movie_1.mid = tags_0.msid and writer_0.wid = written_by_0.wid
TOT: 0.6937191190476191; TR: 0.6974796296296296; SMP: 0.3214285714285714; select writer_0.birth_year from actor as actor_0, cast as cast_0, movie as movie_0, tags as tags_0, tv_series as tv_series_0, writer as writer_0, written_by as written_by_0 where actor_0.name = "Ellen Page" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and movie_0.mid = tags_0.msid and tags_0.msid = tv_series_0.sid and tv_series_0.sid = written_by_0.msid and writer_0.wid = written_by_0.wid
TOT: 0.6937191190476191; TR: 0.6974796296296296; SMP: 0.3214285714285714; select writer_0.birth_year from made_by as made_by_0, movie as movie_0, movie as movie_1, producer as producer_0, tags as tags_0, writer as writer_0, written_by as written_by_0 where producer_0.name = "Ellen Page" and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid and movie_0.mid = tags_0.msid and movie_1.mid = tags_0.msid and movie_1.mid = written_by_0.msid and writer_0.wid = written_by_0.wid
TOT: 0.6937191190476191; TR: 0.6974796296296296; SMP: 0.3214285714285714; select director_0.birth_year from directed_by as directed_by_0, director as director_0, made_by as made_by_0, producer as producer_0, tags as tags_0, tv_series as tv_series_0, tv_series as tv_series_1 where producer_0.name = "Ellen Page" and directed_by_0.did = director_0.did and directed_by_0.msid = tv_series_0.sid and made_by_0.msid = tv_series_1.sid and made_by_0.pid = producer_0.pid and tags_0.msid = tv_series_0.sid and tags_0.msid = tv_series_1.sid


03:52  INFO: ================
03:52  INFO: QUERY 30: Find all actors born in "Los Angeles" after 1980
03:52  INFO: ================
1317. ROOT: ROOT; NA; ; (0) 
1318. Find: CMT; NA; ; (0) 
1319. actors: NT; NA; all; (0) actor.name(1.0):| actor(1.0):| movie.title(0.95):Actors; Actors; Actors; | cast.role(0.95):Actors; Actors; Actors; | tv_series.title(0.9):Actors; Actor; Actors Vs; | 
1321. born: NT; NA; ; (0) tv_series.num_of_episodes(0.62):| tv_series.num_of_seasons(0.62):| tags(0.6):| director.did(0.6):| producer.name(0.59):| 
1322. Los Angeles: VTTEXT; NA; ; (0) movie.title(1.0):Los Angeles; Los Angeles; Los Angeles; | director.birth_city(1.0):Los Angeles; Los Angeles; Los Angeles; | actor.birth_city(1.0):Los Angeles; Los Angeles; Los Angeles; | producer.birth_city(1.0):Los Angeles; Los Angeles; Los Angeles; | writer.birth_city(1.0):Los Angeles; Los Angeles; Los Angeles; | 
1324. 1980: VTNUM; NA; ; (0) director.birth_year(1.0):1985; 1993; 1984; | writer.birth_year(1.0):1985; 1993; 1984; | producer.birth_year(1.0):1985; 1993; 1997; | actor.birth_year(0.99):1999; 2003; 1986; | movie.release_year(0.98):2012; 2014; 2015; | 
1325. after: OT; >; ; (0) 
Find, VB
all, DT
actors, NNS
born, VBN
in, IN
Los Angeles, NNP
after, IN
1980, CD
root(ROOT-0, Find-1)
det(actors-3, all-2)
dobj(Find-1, actors-3)
acl(actors-3, born-4)
case(Los Angeles-6, in-5)
nmod(born-4, Los Angeles-6)
case(1980-8, after-7)
nmod(born-4, 1980-8)

PARSE TREE:(1317) ROOT ROOT
    (1318) Find CMT
        (1319) actors NT
            (1321) born NT
                (1322) Los Angeles VTTEXT
                (1324) 1980 VTNUM
                    (1325) after OT


===========
TRANSLATIONS
===========
TOT: 0.8999531565656566; NL: 0.8999531565656566; NL+AG: 0.9691062174708978; NL+QF: 0.9617992424242424; rels: [tags]; projs: [actor_0.name]; preds: [movie_0.title = "Los Angeles",director_0.birth_year > 1980]; havings: []; superlative: []; blanks: 0
TOT: 0.8999531565656566; NL: 0.8999531565656566; NL+AG: 0.9691062174708978; NL+QF: 0.9617992424242424; rels: [tags]; projs: [actor_0.name]; preds: [movie_0.title = "Los Angeles",writer_0.birth_year > 1980]; havings: []; superlative: []; blanks: 0
TOT: 0.8999531565656566; NL: 0.8999531565656566; NL+AG: 0.9691062174708978; NL+QF: 0.9617992424242423; rels: [tags]; projs: [actor_0.name]; preds: [director_0.birth_city = "Los Angeles",director_0.birth_year > 1980]; havings: []; superlative: []; blanks: 0
TOT: 0.8999531565656566; NL: 0.8999531565656566; NL+AG: 0.9691062174708978; NL+QF: 0.9617992424242423; rels: [tags]; projs: [actor_0.name]; preds: [director_0.birth_city = "Los Angeles",writer_0.birth_year > 1980]; havings: []; superlative: []; blanks: 0
TOT: 0.8999531565656566; NL: 0.8999531565656566; NL+AG: 0.9691062174708978; NL+QF: 0.9617992424242424; rels: [tags]; projs: [actor_0.name]; preds: [actor_0.birth_city = "Los Angeles",director_0.birth_year > 1980]; havings: []; superlative: []; blanks: 0
TOT: 0.8999531565656566; NL: 0.8999531565656566; NL+AG: 0.9691062174708978; NL+QF: 0.9617992424242424; rels: [tags]; projs: [actor_0.name]; preds: [actor_0.birth_city = "Los Angeles",writer_0.birth_year > 1980]; havings: []; superlative: []; blanks: 0
TOT: 0.8999531565656566; NL: 0.8999531565656566; NL+AG: 0.9691062174708978; NL+QF: 0.9617992424242423; rels: [tags]; projs: [actor_0.name]; preds: [producer_0.birth_city = "Los Angeles",director_0.birth_year > 1980]; havings: []; superlative: []; blanks: 0
TOT: 0.8999531565656566; NL: 0.8999531565656566; NL+AG: 0.9691062174708978; NL+QF: 0.9617992424242423; rels: [tags]; projs: [actor_0.name]; preds: [producer_0.birth_city = "Los Angeles",writer_0.birth_year > 1980]; havings: []; superlative: []; blanks: 0
TOT: 0.8999531565656566; NL: 0.8999531565656566; NL+AG: 0.9691062174708978; NL+QF: 0.9617992424242423; rels: [tags]; projs: [actor_0.name]; preds: [writer_0.birth_city = "Los Angeles",director_0.birth_year > 1980]; havings: []; superlative: []; blanks: 0
TOT: 0.8999531565656566; NL: 0.8999531565656566; NL+AG: 0.9691062174708978; NL+QF: 0.9617992424242423; rels: [tags]; projs: [actor_0.name]; preds: [writer_0.birth_city = "Los Angeles",writer_0.birth_year > 1980]; havings: []; superlative: []; blanks: 0

===========
RESULTS
===========
TOT: 0.8941679107142857; TR: 0.8999531565656566; SMP: 0.3214285714285714; select actor_0.name from actor as actor_0, cast as cast_0, movie as movie_0, tags as tags_0, tv_series as tv_series_0, writer as writer_0, written_by as written_by_0 where movie_0.title = "Los Angeles" and writer_0.birth_year > 1980 and actor_0.aid = cast_0.aid and cast_0.msid = tv_series_0.sid and movie_0.mid = tags_0.msid and movie_0.mid = written_by_0.msid and tags_0.msid = tv_series_0.sid and writer_0.wid = written_by_0.wid
TOT: 0.8941679107142857; TR: 0.8999531565656566; SMP: 0.3214285714285714; select actor_0.name from actor as actor_0, cast as cast_0, movie as movie_0, tags as tags_0, tv_series as tv_series_0, writer as writer_0, written_by as written_by_0 where actor_0.birth_city = "Los Angeles" and writer_0.birth_year > 1980 and actor_0.aid = cast_0.aid and cast_0.msid = tv_series_0.sid and movie_0.mid = tags_0.msid and movie_0.mid = written_by_0.msid and tags_0.msid = tv_series_0.sid and writer_0.wid = written_by_0.wid
TOT: 0.8941679107142857; TR: 0.8999531565656566; SMP: 0.3214285714285714; select actor_0.name from actor as actor_0, cast as cast_0, movie as movie_0, tags as tags_0, tv_series as tv_series_0, writer as writer_0, written_by as written_by_0 where writer_0.birth_city = "Los Angeles" and writer_0.birth_year > 1980 and actor_0.aid = cast_0.aid and cast_0.msid = tv_series_0.sid and movie_0.mid = tags_0.msid and movie_0.mid = written_by_0.msid and tags_0.msid = tv_series_0.sid and writer_0.wid = written_by_0.wid
TOT: 0.8941679107142857; TR: 0.8999531565656566; SMP: 0.3214285714285714; select actor_0.name from actor as actor_0, cast as cast_0, movie as movie_0, movie as movie_1, tags as tags_0, writer as writer_0, written_by as written_by_0 where movie_0.title = "Los Angeles" and writer_0.birth_year > 1980 and actor_0.aid = cast_0.aid and cast_0.msid = movie_1.mid and movie_0.mid = tags_0.msid and movie_0.mid = written_by_0.msid and movie_1.mid = tags_0.msid and writer_0.wid = written_by_0.wid
TOT: 0.8941679107142857; TR: 0.8999531565656566; SMP: 0.3214285714285714; select actor_0.name from actor as actor_0, cast as cast_0, movie as movie_0, movie as movie_1, tags as tags_0, writer as writer_0, written_by as written_by_0 where actor_0.birth_city = "Los Angeles" and writer_0.birth_year > 1980 and actor_0.aid = cast_0.aid and cast_0.msid = movie_1.mid and movie_0.mid = tags_0.msid and movie_0.mid = written_by_0.msid and movie_1.mid = tags_0.msid and writer_0.wid = written_by_0.wid
TOT: 0.8941679107142857; TR: 0.8999531565656566; SMP: 0.3214285714285714; select actor_0.name from actor as actor_0, cast as cast_0, movie as movie_0, movie as movie_1, tags as tags_0, writer as writer_0, written_by as written_by_0 where writer_0.birth_city = "Los Angeles" and writer_0.birth_year > 1980 and actor_0.aid = cast_0.aid and cast_0.msid = movie_1.mid and movie_0.mid = tags_0.msid and movie_0.mid = written_by_0.msid and movie_1.mid = tags_0.msid and writer_0.wid = written_by_0.wid
TOT: 0.8941679107142857; TR: 0.8999531565656566; SMP: 0.3214285714285714; select actor_0.name from actor as actor_0, cast as cast_0, movie as movie_0, tags as tags_0, tv_series as tv_series_0, writer as writer_0, written_by as written_by_0 where movie_0.title = "Los Angeles" and writer_0.birth_year > 1980 and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and movie_0.mid = tags_0.msid and tags_0.msid = tv_series_0.sid and tv_series_0.sid = written_by_0.msid and writer_0.wid = written_by_0.wid
TOT: 0.8941679107142857; TR: 0.8999531565656566; SMP: 0.3214285714285714; select actor_0.name from actor as actor_0, cast as cast_0, movie as movie_0, tags as tags_0, tv_series as tv_series_0, writer as writer_0, written_by as written_by_0 where actor_0.birth_city = "Los Angeles" and writer_0.birth_year > 1980 and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and movie_0.mid = tags_0.msid and tags_0.msid = tv_series_0.sid and tv_series_0.sid = written_by_0.msid and writer_0.wid = written_by_0.wid
TOT: 0.8941679107142857; TR: 0.8999531565656566; SMP: 0.3214285714285714; select actor_0.name from actor as actor_0, cast as cast_0, movie as movie_0, tags as tags_0, tv_series as tv_series_0, writer as writer_0, written_by as written_by_0 where writer_0.birth_city = "Los Angeles" and writer_0.birth_year > 1980 and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and movie_0.mid = tags_0.msid and tags_0.msid = tv_series_0.sid and tv_series_0.sid = written_by_0.msid and writer_0.wid = written_by_0.wid
TOT: 0.8941679107142857; TR: 0.8999531565656566; SMP: 0.3214285714285714; select actor_0.name from actor as actor_0, cast as cast_0, directed_by as directed_by_0, director as director_0, tags as tags_0, tv_series as tv_series_0, tv_series as tv_series_1 where director_0.birth_city = "Los Angeles" and director_0.birth_year > 1980 and actor_0.aid = cast_0.aid and cast_0.msid = tv_series_1.sid and directed_by_0.did = director_0.did and directed_by_0.msid = tv_series_0.sid and tags_0.msid = tv_series_0.sid and tags_0.msid = tv_series_1.sid


03:52  INFO: ====== RANKS ======
03:52  INFO: QUERY 0: -1
03:52  INFO: QUERY 1: -1
03:52  INFO: QUERY 2: 1
03:52  INFO: QUERY 3: 1
03:52  INFO: QUERY 4: 1
03:52  INFO: QUERY 5: 1
03:52  INFO: QUERY 6: 1
03:52  INFO: QUERY 7: -1
03:52  INFO: QUERY 8: 1
03:52  INFO: QUERY 9: -1
03:52  INFO: QUERY 10: 1
03:52  INFO: QUERY 11: -1
03:52  INFO: QUERY 12: -1
03:52  INFO: QUERY 13: 1
03:52  INFO: QUERY 14: 1
03:52  INFO: QUERY 15: 1
03:52  INFO: QUERY 16: -1
03:52  INFO: QUERY 17: 1
03:52  INFO: QUERY 18: 1
03:52  INFO: QUERY 19: -1
03:52  INFO: QUERY 20: 1
03:52  INFO: QUERY 21: 1
03:52  INFO: QUERY 22: -1
03:52  INFO: QUERY 23: -1
03:52  INFO: QUERY 24: 1
03:52  INFO: QUERY 25: -1
03:52  INFO: QUERY 26: -1
03:52  INFO: QUERY 27: 1
03:52  INFO: QUERY 28: -1
03:52  INFO: QUERY 29: -1
03:52  INFO: QUERY 30: -1
03:52  INFO: QUERY 31: 1
03:52  INFO: QUERY 32: 1
03:52  INFO: QUERY 33: -1
03:52  INFO: QUERY 34: -1
03:52  INFO: QUERY 35: 2
03:52  INFO: QUERY 36: -1
03:52  INFO: QUERY 37: 1
03:52  INFO: QUERY 38: -1
03:52  INFO: QUERY 39: -1
03:52  INFO: QUERY 40: 10
03:52  INFO: QUERY 41: -1
03:52  INFO: QUERY 42: -1
03:52  INFO: QUERY 43: -1
03:52  INFO: QUERY 44: -1
03:52  INFO: QUERY 45: 1
03:52  INFO: QUERY 46: -1
03:52  INFO: QUERY 47: -1
03:52  INFO: QUERY 48: -1
03:52  INFO: QUERY 49: 1
03:52  INFO: QUERY 50: 1
03:52  INFO: QUERY 51: 1
03:52  INFO: QUERY 52: 1
03:52  INFO: QUERY 53: -1
03:52  INFO: QUERY 54: -1
03:52  INFO: QUERY 55: -1
03:52  INFO: QUERY 56: 1
03:52  INFO: QUERY 57: -1
03:52  INFO: QUERY 58: 6
03:52  INFO: QUERY 59: 1
03:52  INFO: QUERY 60: -1
03:52  INFO: QUERY 61: -1
03:52  INFO: QUERY 62: -1
03:52  INFO: QUERY 63: -1
03:52  INFO: QUERY 64: 1
03:52  INFO: QUERY 65: -1
03:52  INFO: QUERY 66: -1
03:52  INFO: QUERY 67: 1
03:52  INFO: QUERY 68: -1
03:52  INFO: QUERY 69: 1
03:52  INFO: QUERY 70: 1
03:52  INFO: QUERY 71: 1
03:52  INFO: QUERY 72: -1
03:52  INFO: QUERY 73: 1
03:52  INFO: QUERY 74: 1
03:52  INFO: QUERY 75: 1
03:52  INFO: QUERY 76: -1
03:52  INFO: QUERY 77: 8
03:52  INFO: QUERY 78: -1
03:52  INFO: QUERY 79: -1
03:52  INFO: QUERY 80: 7
03:52  INFO: QUERY 81: -1
03:52  INFO: QUERY 82: -1
03:52  INFO: QUERY 83: -1
03:52  INFO: QUERY 84: 2
03:52  INFO: QUERY 85: -1
03:52  INFO: QUERY 86: -1
03:52  INFO: QUERY 87: 2
03:52  INFO: QUERY 88: 1
03:52  INFO: QUERY 89: 1
03:52  INFO: QUERY 90: -1
03:52  INFO: QUERY 91: 1
03:52  INFO: QUERY 92: 1
03:52  INFO: QUERY 93: 1
03:52  INFO: QUERY 94: -1
03:52  INFO: QUERY 95: 2
03:52  INFO: QUERY 96: 1
03:52  INFO: QUERY 97: 1
03:52  INFO: QUERY 98: -1
03:52  INFO: QUERY 99: -1
03:52  INFO: QUERY 100: 1
03:52  INFO: QUERY 101: 1
03:52  INFO: QUERY 102: 1
03:52  INFO: QUERY 103: -1
03:52  INFO: QUERY 104: 2
03:52  INFO: QUERY 105: 1
03:52  INFO: QUERY 106: -1
03:52  INFO: QUERY 107: -1
03:52  INFO: QUERY 108: 1
03:52  INFO: QUERY 109: 1
03:52  INFO: QUERY 110: -1
03:52  INFO: QUERY 111: -1
03:52  INFO: QUERY 112: 1
03:52  INFO: QUERY 113: 9
03:52  INFO: QUERY 114: 4
03:52  INFO: QUERY 115: -1
03:52  INFO: QUERY 116: -1
03:52  INFO: QUERY 117: -1
03:52  INFO: QUERY 118: -1
03:52  INFO: QUERY 119: -1
03:52  INFO: QUERY 120: -1
03:52  INFO: QUERY 121: -1
03:52  INFO: QUERY 122: 1
03:52  INFO: QUERY 123: -1
03:52  INFO: QUERY 124: -1
03:52  INFO: QUERY 125: -1
03:52  INFO: QUERY 126: -1
03:52  INFO: QUERY 127: -1
03:52  INFO: QUERY 128: -1
03:52  INFO: QUERY 129: -1
03:52  INFO: QUERY 130: -1
03:52  INFO: ==============
03:52  INFO: SUMMARY
03:52  INFO: ==============
03:52  INFO: Total queries: 131
03:52  INFO: Top 1: 49
03:52  INFO: Top 3: 54
03:52  INFO: Top 5: 55
