answer ( A , ( river ( A ) , loc ( A , B ) , const ( B , stateid ( s0 ) ) ) ) )
answer ( A , count ( B , ( state ( B ) , loc ( C , B ) , low_point ( B , C ) , lower ( C , D ) , low_point ( E , D ) , const ( E , stateid ( s0 ) ) , loc ( D , E ) ) , A ) ) )
answer ( A , count ( B , ( river ( B ) , loc ( B , C ) , const ( C , stateid ( s0 ) ) ) , A ) ) )
answer ( A , ( state ( A ) , next_to ( A , B ) , const ( B , stateid ( s0 ) ) ) ) )
answer ( A , ( elevation ( B , A ) , const ( B , placeid ( ' p0 ' ) ) ) ) )
answer ( A , ( elevation ( B , A ) , highest ( B , ( place ( B ) , loc ( B , C ) , const ( C , countryid ( co0 ) ) ) ) ) ) )
answer ( A , ( elevation ( B , A ) , highest ( B , ( place ( B ) , loc ( B , C ) , const ( C , stateid ( s0 ) ) ) ) ) ) )
answer ( A , ( size ( B , A ) , const ( B , stateid ( s0 ) ) ) ) )
answer ( A , ( size ( B , A ) , const ( B , stateid ( s0 ) ) ) ) )
answer ( A , ( len ( B , A ) , const ( B , riverid ( r0 ) ) , river ( B ) ) ) )
answer ( A , ( len ( B , A ) , const ( B , riverid ( s0 ) ) , river ( B ) ) ) )
answer ( A , ( len ( B , A ) , longest ( B , ( river ( B ) , loc ( B , C ) , const ( C , stateid ( s0 ) ) ) ) ) ) )
answer ( A , ( len ( B , A ) , longest ( B , ( river ( B ) , loc ( B , C ) , const ( C , countryid ( co0 ) ) ) ) ) ) )
answer ( A , ( len ( B , A ) , const ( B , riverid ( ' r0 ' ) ) , river ( B ) ) ) )
answer ( A , ( len ( B , A ) , const ( B , riverid ( s0 ) ) , river ( B ) ) ) )
answer ( A , count ( B , ( capital ( B ) , const ( C , stateid ( ' s0 ' ) ) , loc ( B , C ) ) , A ) ) )
answer ( A , count ( B , ( city ( B ) , loc ( B , C ) , const ( C , countryid ( co0 ) ) ) , A ) ) )
answer ( A , ( population ( B , A ) , largest ( B , city ( B ) ) ) ) )
answer ( A , count ( B , ( const ( B , riverid ( r0 ) ) , river ( B ) ) , A ) ) )
answer ( A , ( population ( B , A ) , const ( B , cityid ( c0 , _ ) ) ) ) )
answer ( A , ( population ( B , A ) , const ( B , cityid ( c0 , _ ) ) ) ) )
answer ( A , ( population ( B , A ) , const ( B , cityid ( c0 , mn ) ) ) ) )
answer ( A , ( population ( B , A ) , const ( B , stateid ( s0 ) ) ) ) )
answer ( A , ( population ( B , A ) , const ( B , stateid ( ' s0 ' ) ) ) ) )
answer ( A , ( population ( B , A ) , largest ( B , ( city ( B ) , loc ( B , C ) , const ( C , stateid ( ' s0 ' ) ) , state ( C ) ) ) ) ) )
answer ( A , ( population ( B , A ) , capital ( B ) , loc ( B , C ) , const ( C , stateid ( s0 ) ) ) ) )
answer ( A , ( population ( B , A ) , const ( B , countryid ( co0 ) ) ) ) )
answer ( A , ( population ( B , A ) , const ( B , cityid ( c0 , _ ) ) ) ) )
answer ( A , ( population ( B , A ) , const ( B , stateid ( s0 ) ) ) ) )
answer ( A , ( population ( B , A ) , const ( B , stateid ( s0 ) ) ) ) )
answer ( A , count ( B , ( river ( B ) , loc ( B , C ) , const ( C , stateid ( s0 ) ) ) , A ) ) )
answer ( A , count ( B , ( river ( B ) , loc ( B , C ) , most ( C , D , ( state ( C ) , loc ( D , C ) , river ( D ) ) ) ) , A ) ) )
answer ( A , count ( B , ( river ( B ) , const ( C , stateid ( s0 ) ) , loc ( B , C ) ) , A ) ) )
answer ( A , count ( B , ( state ( B ) , loc ( B , C ) , const ( C , countryid ( co0 ) ) ) , A ) ) )
answer ( A , count ( B , state ( B ) , A ) ) )
answer ( A , count ( B , ( state ( B ) , loc ( B , C ) , const ( C , countryid ( co0 ) ) ) , A ) ) )
answer ( A , count ( B , ( state ( B ) , next_to ( B , C ) , const ( C , stateid ( s0 ) ) ) , A ) ) )
answer ( A , count ( B , ( state ( B ) , next_to ( B , C ) , largest ( D , ( state ( C ) , population ( C , D ) ) ) ) , A ) ) )
answer ( A , count ( B , ( state ( B ) , \ + ( loc ( C , B ) , river ( C ) ) ) , A ) ) )
answer ( A , count ( B , ( state ( B ) , const ( C , stateid ( s0 ) ) , next_to ( C , B ) ) , A ) ) )
answer ( A , count ( B , ( state ( B ) , const ( C , countryid ( co0 ) ) , loc ( B , C ) ) , A ) ) )
answer ( A , count ( B , ( state ( B ) , loc ( C , B ) , higher ( C , D ) , place ( C ) , highest ( D , ( place ( D ) , loc ( D , E ) , state ( E ) , loc ( F , E ) , largest ( F , ( capital ( F ) , city ( F ) , loc ( F , G ) , const ( G , countryid ( co0 ) ) ) ) ) ) ) , A ) ) )
answer ( A , ( population ( B , A ) , const ( B , stateid ( s0 ) ) ) ) )
answer ( A , ( elevation ( B , A ) , const ( B , placeid ( ' p0 ' ) ) ) ) )
answer ( A , ( elevation ( B , A ) , highest ( B , ( place ( B ) , loc ( B , C ) , const ( C , stateid ( s0 ) ) ) ) ) ) )
answer ( A , count ( B , ( const ( C , stateid ( s0 ) ) , next_to ( C , B ) , state ( B ) ) , A ) ) )
answer ( A , ( major ( A ) , river ( A ) , loc ( A , B ) , const ( B , stateid ( s0 ) ) ) ) )
answer ( A , ( population ( B , A ) , const ( B , cityid ( c0 , _ ) ) ) ) )
answer ( A , count ( B , ( state ( B ) , next_to ( B , C ) , const ( C , stateid ( s0 ) ) ) , A ) ) )
answer ( A , ( river ( A ) , loc ( A , B ) , const ( B , stateid ( ' s0 ' ) ) ) ) )
answer ( A , ( const ( B , cityid ( ' c0 ' , _ ) ) , loc ( B , A ) , state ( A ) ) ) )
answer ( A , ( city ( A ) , loc ( A , B ) , const ( B , stateid ( s0 ) ) ) ) )
answer ( A , ( longest ( B , ( river ( B ) , loc ( B , C ) , const ( C , stateid ( s0 ) ) ) ) , traverse ( B , A ) ) ) )
answer ( A , ( river ( A ) , loc ( A , B ) , const ( B , stateid ( s0 ) ) ) ) )
answer ( A , ( capital ( A ) , city ( A ) , loc ( A , B ) , const ( B , stateid ( s0 ) ) ) ) )
answer ( A , ( capital ( A ) , loc ( A , B ) , state ( B ) , next_to ( B , C ) , const ( C , stateid ( s0 ) ) ) ) )
answer ( A , ( city ( A ) , loc ( A , B ) , state ( B ) , traverse ( C , B ) , const ( C , riverid ( r0 ) ) ) ) )
answer ( A , ( city ( A ) , loc ( A , B ) , state ( B ) , loc ( C , B ) , highest ( C , place ( C ) ) ) ) )
answer ( A , highest ( A , ( place ( A ) , loc ( A , B ) , state ( B ) ) ) ) )
answer ( A , ( major ( A ) , city ( A ) , loc ( A , B ) , const ( B , stateid ( s0 ) ) ) ) )
answer ( A , ( major ( A ) , city ( A ) , loc ( A , B ) , const ( B , stateid ( s0 ) ) ) ) )
answer ( A , ( major ( A ) , city ( A ) , loc ( A , B ) , const ( B , stateid ( ' s0 ' ) ) ) ) )
answer ( A , ( major ( A ) , city ( A ) , state ( B ) , traverse ( C , B ) , const ( C , riverid ( r0 ) ) ) ) )
answer ( A , ( major ( A ) , city ( A ) , loc ( A , B ) , state ( B ) , const ( B , stateid ( s0 ) ) ) ) )
answer ( A , ( major ( A ) , city ( A ) , loc ( A , B ) , const ( B , countryid ( co0 ) ) ) ) )
answer ( A , ( major ( A ) , city ( A ) , loc ( A , B ) , const ( B , stateid ( s0 ) ) ) ) )
answer ( A , ( major ( A ) , river ( A ) , loc ( A , B ) , const ( B , stateid ( s0 ) ) ) ) )
answer ( A , ( density ( B , A ) , state ( B ) ) ) )
answer ( A , ( population ( B , A ) , const ( B , stateid ( s0 ) ) ) ) )
answer ( A , ( population ( B , A ) , state ( B ) , const ( C , riverid ( r0 ) ) , river ( C ) , traverse ( C , B ) ) ) )
answer ( A , ( population ( B , A ) , state ( B ) , const ( C , riverid ( r0 ) ) , traverse ( C , B ) ) ) )
answer ( A , ( population ( B , A ) , state ( B ) , next_to ( B , C ) , const ( C , stateid ( s0 ) ) ) ) )
answer ( A , ( population ( B , A ) , major ( B ) , city ( B ) , loc ( B , C ) , const ( C , stateid ( s0 ) ) ) ) )
answer ( A , ( river ( A ) , loc ( A , B ) , const ( B , stateid ( s0 ) ) ) ) )
answer ( A , largest ( B , ( city ( A ) , population ( A , B ) ) ) ) )
answer ( A , largest ( B , ( city ( A ) , loc ( A , C ) , const ( C , countryid ( co0 ) ) , density ( A , B ) ) ) ) )
answer ( A , ( capital ( A ) , loc ( A , B ) , state ( B ) , loc ( C , B ) , lowest ( C , place ( C ) ) ) ) )
answer ( A , ( area ( B , A ) , const ( B , stateid ( s0 ) ) ) ) )
answer ( A , ( area ( B , A ) , const ( B , stateid ( s0 ) ) ) ) )
answer ( A , ( area ( B , A ) , const ( B , stateid ( s0 ) ) ) ) )
answer ( A , ( area ( B , A ) , const ( B , stateid ( s0 ) ) ) ) )
answer ( A , largest ( A , ( city ( A ) , loc ( A , B ) , state ( B ) , loc ( C , B ) , river ( C ) ) ) ) )
answer ( A , largest ( A , ( capital ( A ) , loc ( A , B ) , const ( B , countryid ( co0 ) ) ) ) ) )
answer ( A , largest ( A , ( city ( A ) , loc ( A , B ) , const ( B , stateid ( s0 ) ) ) ) ) )
answer ( A , largest ( A , ( city ( A ) , loc ( A , B ) , const ( B , stateid ( s0 ) ) ) ) ) )
answer ( A , ( capital ( A ) , loc ( A , B ) , const ( B , stateid ( s0 ) ) ) ) )
answer ( A , ( capital ( A ) , loc ( A , B ) , const ( B , stateid ( s0 ) ) ) ) )
answer ( A , ( capital ( A ) , loc ( A , B ) , const ( B , stateid ( s0 ) ) ) ) )
answer ( A , ( capital ( A ) , loc ( A , B ) , const ( B , stateid ( s0 ) ) ) ) )
answer ( A , ( capital ( A ) , loc ( A , B ) , const ( B , stateid ( s0 ) ) ) ) )
answer ( A , ( capital ( A ) , loc ( A , B ) , const ( B , stateid ( ' s0 ' ) ) ) ) )
answer ( A , ( capital ( A ) , loc ( A , B ) , const ( B , stateid ( ' s0 ' ) ) ) ) )
answer ( A , ( capital ( A ) , loc ( A , B ) , const ( B , stateid ( ' s0 ' ) ) ) ) )
answer ( A , ( capital ( A ) , loc ( A , B ) , const ( B , stateid ( s0 ) ) ) ) )
answer ( A , ( capital ( A ) , loc ( A , B ) , state ( B ) , loc ( C , B ) , city ( C ) , const ( C , cityid ( c0 , _ ) ) ) ) )
answer ( A , ( capital ( A ) , loc ( A , B ) , const ( B , stateid ( s0 ) ) , state ( B ) ) ) )
answer ( A , ( capital ( A ) , loc ( A , B ) , smallest ( B , state ( B ) ) ) ) )
answer ( A , ( capital ( A ) , loc ( A , B ) , largest ( C , ( state ( B ) , population ( B , C ) ) ) ) ) )
answer ( A , ( capital ( A ) , loc ( A , B ) , largest ( C , ( state ( B ) , density ( B , C ) ) ) ) ) )
answer ( A , ( capital ( A ) , loc ( A , B ) , longest ( C , ( state ( B ) , loc ( C , B ) , river ( C ) ) ) ) ) )
answer ( A , ( capital ( A ) , loc ( A , B ) , largest ( C , ( state ( B ) , population ( B , C ) ) ) ) ) )
answer ( A , sum ( B , ( area ( C , B ) , state ( C ) ) , A ) ) )
answer ( A , ( density ( B , A ) , const ( B , stateid ( ' s0 ' ) ) ) ) )
answer ( A , ( high_point ( B , A ) , loc ( A , B ) , const ( B , stateid ( s0 ) ) ) ) )
answer ( A , highest ( A , ( place ( A ) , loc ( A , B ) , const ( B , stateid ( s0 ) ) ) ) ) )
answer ( A , highest ( A , ( place ( A ) , loc ( A , B ) , const ( B , countryid ( co0 ) ) ) ) ) )
answer ( A , highest ( A , ( mountain ( A ) , loc ( A , B ) , const ( B , countryid ( co0 ) ) ) ) ) )
answer ( A , highest ( A , ( mountain ( A ) , loc ( A , B ) , const ( B , countryid ( co0 ) ) ) ) ) )
answer ( A , highest ( A , ( place ( A ) , loc ( A , B ) , const ( B , stateid ( s0 ) ) ) ) ) )
answer ( A , highest ( A , ( place ( A ) , loc ( A , B ) , const ( B , stateid ( s0 ) ) ) ) ) )
answer ( A , highest ( A , ( place ( A ) , loc ( A , B ) , const ( B , stateid ( s0 ) ) ) ) ) )
answer ( A , highest ( A , ( place ( A ) , loc ( A , B ) , const ( B , stateid ( s0 ) ) ) ) ) )
answer ( A , highest ( A , ( place ( A ) , loc ( A , B ) , const ( B , stateid ( s0 ) ) ) ) ) )
answer ( A , highest ( A , ( place ( A ) , loc ( A , B ) , state ( B ) , next_to ( B , C ) , const ( C , stateid ( s0 ) ) ) ) ) )
answer ( A , highest ( A , ( place ( A ) , loc ( A , B ) , state ( B ) , loc ( C , B ) , capital ( C ) , const ( C , cityid ( c0 , _ ) ) ) ) ) )
answer ( A , highest ( A , ( place ( A ) , loc ( A , B ) , state ( B ) , next_to ( B , C ) , const ( C , stateid ( s0 ) ) ) ) ) )
answer ( A , highest ( A , ( place ( A ) , loc ( A , B ) , const ( B , countryid ( co0 ) ) ) ) ) )
answer ( A , highest ( A , ( place ( A ) , loc ( A , B ) , const ( B , stateid ( s0 ) ) ) ) ) )
answer ( A , highest ( A , ( place ( A ) , loc ( A , B ) , smallest ( C , ( state ( B ) , density ( B , C ) ) ) ) ) ) )
answer ( A , highest ( A , ( place ( A ) , loc ( A , B ) , const ( B , countryid ( co0 ) ) ) ) ) )
answer ( A , largest ( A , ( capital ( A ) , city ( A ) , loc ( A , B ) , const ( B , countryid ( co0 ) ) ) ) ) )
answer ( A , largest ( A , ( city ( A ) , loc ( A , B ) , const ( B , stateid ( s0 ) ) ) ) ) )
answer ( A , largest ( A , ( city ( A ) , loc ( A , B ) , const ( B , stateid ( ' s0 ' ) ) ) ) ) )
answer ( A , largest ( A , ( city ( A ) , loc ( A , B ) , smallest ( B , ( state ( B ) , const ( C , riverid ( r0 ) ) , traverse ( C , B ) ) ) ) ) ) )
answer ( A , largest ( A , ( city ( A ) , loc ( A , B ) , smallest ( B , ( state ( B ) , loc ( B , C ) , const ( C , countryid ( co0 ) ) ) ) ) ) ) )
answer ( A , largest ( A , ( river ( A ) , loc ( A , B ) , const ( B , stateid ( s0 ) ) ) ) ) )
answer ( A , largest ( A , ( state ( A ) , next_to ( A , B ) , const ( B , stateid ( s0 ) ) ) ) ) )
answer ( A , largest ( A , ( state ( A ) , next_to ( A , B ) , const ( B , stateid ( s0 ) ) ) ) ) )
answer ( A , smallest ( B , ( population ( A , B ) , state ( A ) ) ) ) )
answer ( A , ( len ( B , A ) , const ( B , riverid ( r0 ) ) , river ( B ) ) ) )
answer ( A , ( len ( B , A ) , longest ( B , ( river ( B ) , traverse ( B , C ) , const ( C , stateid ( s0 ) ) ) ) ) ) )
answer ( A , ( len ( B , A ) , const ( B , riverid ( r0 ) ) , river ( B ) ) ) )
answer ( A , ( len ( B , A ) , most ( B , C , ( river ( B ) , traverse ( B , C ) , state ( C ) ) ) ) ) )
answer ( A , ( len ( B , A ) , most ( B , C , ( river ( B ) , traverse ( B , C ) , state ( C ) ) ) ) ) )
answer ( A , longest ( A , ( river ( A ) , loc ( A , B ) , const ( B , stateid ( s0 ) ) ) ) ) )
answer ( A , longest ( A , ( river ( A ) , loc ( A , B ) , largest ( B , state ( B ) ) ) ) ) )
answer ( A , longest ( A , ( river ( A ) , loc ( A , B ) , most ( B , C , ( state ( B ) , loc ( C , B ) , major ( C ) , city ( C ) ) ) ) ) ) )
answer ( A , longest ( A , ( river ( A ) , loc ( A , B ) , state ( B ) , next_to ( B , C ) , const ( C , stateid ( s0 ) ) ) ) ) )
answer ( A , longest ( A , ( river ( A ) , traverse ( A , B ) , state ( B ) , next_to ( B , C ) , const ( C , stateid ( s0 ) ) ) ) ) )
answer ( A , lowest ( A , ( place ( A ) , loc ( A , B ) , const ( B , stateid ( s0 ) ) ) ) ) )
answer ( A , lowest ( A , ( place ( A ) , loc ( A , B ) , const ( B , stateid ( s0 ) ) ) ) ) )
answer ( A , lowest ( A , ( place ( A ) , loc ( A , B ) , const ( B , stateid ( s0 ) ) ) ) ) )
answer ( A , lowest ( A , ( place ( A ) , loc ( A , B ) , const ( B , stateid ( s0 ) ) ) ) ) )
answer ( A , lowest ( A , ( place ( A ) , loc ( A , B ) , state ( B ) , const ( B , stateid ( s0 ) ) ) ) ) )
answer ( A , lowest ( A , ( place ( A ) , loc ( A , B ) , const ( B , countryid ( co0 ) ) ) ) ) )
answer ( A , lowest ( A , ( place ( A ) , loc ( A , B ) , state ( B ) , const ( C , riverid ( r0 ) ) , river ( C ) , traverse ( C , B ) ) ) ) )
answer ( A , highest ( A , ( place ( A ) , loc ( A , B ) , const ( B , cityid ( ' c0 ' , _ ) ) ) ) ) )
answer ( A , largest ( B , ( density ( A , B ) , state ( A ) , loc ( A , C ) , const ( C , countryid ( co0 ) ) ) ) ) )
answer ( A , largest ( B , ( population ( A , B ) , city ( A ) ) ) ) )
answer ( A , largest ( B , ( population ( A , B ) , state ( A ) ) ) ) )
answer ( A , largest ( B , ( population ( A , B ) , state ( A ) , const ( C , riverid ( r0 ) ) , traverse ( C , A ) ) ) ) )
answer ( A , ( density ( B , A ) , const ( B , stateid ( s0 ) ) ) ) )
answer ( A , ( density ( B , A ) , largest ( B , state ( B ) ) ) ) )
answer ( A , ( population ( B , A ) , const ( B , stateid ( s0 ) ) ) ) )
answer ( A , ( population ( B , A ) , const ( B , cityid ( c0 , _ ) ) ) ) )
answer ( A , ( population ( B , A ) , const ( B , cityid ( c0 , pa ) ) ) ) )
answer ( A , ( population ( B , A ) , const ( B , stateid ( s0 ) ) ) ) )
answer ( A , ( population ( B , A ) , const ( B , cityid ( c0 , _ ) ) ) ) )
answer ( A , ( population ( B , A ) , const ( B , stateid ( s0 ) ) ) ) )
answer ( A , ( population ( B , A ) , const ( B , stateid ( ' s0 ' ) ) ) ) )
answer ( A , ( population ( B , A ) , const ( B , cityid ( ' c0 ' , _ ) ) ) ) )
answer ( A , ( population ( B , A ) , const ( B , cityid ( ' c0 ' , _ ) ) ) ) )
answer ( A , ( population ( B , A ) , const ( B , cityid ( c0 , az ) ) ) ) )
answer ( A , ( population ( B , A ) , largest ( B , ( city ( B ) , loc ( B , C ) , largest ( D , ( state ( C ) , area ( C , D ) ) ) ) ) ) ) )
answer ( A , smallest ( B , ( population ( B , A ) , state ( B ) ) ) ) )
answer ( A , ( population ( B , A ) , most ( B , C , ( state ( B ) , next_to ( B , C ) , state ( C ) ) ) ) ) )
answer ( A , ( population ( B , A ) , largest ( C , ( state ( B ) , density ( B , C ) ) ) ) ) )
answer ( A , ( population ( B , A ) , const ( B , cityid ( c0 , _ ) ) ) ) )
answer ( A , ( population ( B , A ) , const ( B , stateid ( s0 ) ) ) ) )
answer ( A , ( population ( B , A ) , const ( B , stateid ( s0 ) ) ) ) )
answer ( A , smallest ( A , ( city ( A ) , loc ( A , B ) , const ( B , countryid ( co0 ) ) ) ) ) )
answer ( A , smallest ( A , ( city ( A ) , loc ( A , B ) , const ( B , countryid ( co0 ) ) ) ) ) )
answer ( A , smallest ( A , ( state ( A ) , next_to ( A , B ) , const ( B , stateid ( s0 ) ) ) ) ) )
answer ( A , smallest ( A , most ( A , B , ( state ( A ) , next_to ( A , B ) , state ( B ) ) ) ) ) )
answer ( A , smallest ( A , ( state ( A ) , const ( B , riverid ( r0 ) ) , river ( B ) , traverse ( B , A ) ) ) ) )
answer ( A , largest ( B , ( state ( A ) , area ( A , B ) ) ) ) )
answer ( A , smallest ( B , ( state ( A ) , area ( A , B ) ) ) ) )
answer ( A , sum ( B , ( len ( C , B ) , river ( C ) ) , A ) ) )
answer ( A , ( len ( B , A ) , const ( B , riverid ( r0 ) ) ) ) )
answer ( A , ( major ( A ) , city ( A ) , loc ( A , B ) , const ( B , stateid ( s0 ) ) ) ) )
answer ( A , most ( A , B , ( river ( A ) , traverse ( A , B ) , state ( B ) ) ) ) )
answer ( A , ( river ( A ) , traverse ( A , B ) , most ( B , C , ( state ( B ) , loc ( C , B ) , city ( C ) ) ) ) ) )
answer ( A , ( river ( A ) , traverse ( A , B ) , most ( B , C , ( state ( B ) , next_to ( B , C ) , state ( C ) ) ) ) ) )
answer ( A , ( river ( A ) , loc ( A , B ) , state ( B ) , next_to ( B , C ) , const ( C , stateid ( s0 ) ) ) ) )
answer ( A , ( river ( A ) , loc ( A , B ) , const ( B , stateid ( s0 ) ) ) ) )
answer ( A , ( river ( A ) , loc ( A , B ) , const ( B , stateid ( s0 ) ) ) ) )
answer ( A , ( river ( A ) , traverse ( A , B ) , const ( B , stateid ( ' s0 ' ) ) ) ) )
answer ( A , ( river ( A ) , traverse ( A , B ) , most ( B , C , ( state ( B ) , next_to ( B , C ) , state ( C ) ) ) ) ) )
answer ( A , largest ( B , ( state ( A ) , next_to ( A , C ) , const ( C , stateid ( s0 ) ) , population ( A , B ) ) ) ) )
answer ( A , ( state ( A ) , next_to ( A , B ) , const ( B , stateid ( ' s0 ' ) ) ) ) )
answer ( A , most ( A , B , ( state ( A ) , next_to ( A , B ) , state ( B ) ) ) ) )
answer ( A , ( state ( A ) , loc ( B , A ) , highest ( B , ( place ( B ) , loc ( B , C ) , state ( C ) , const ( D , riverid ( r0 ) ) , river ( D ) , traverse ( D , C ) ) ) ) ) )
answer ( A , largest ( B , ( state ( A ) , area ( A , B ) ) ) ) )
answer ( A , ( state ( A ) , loc ( B , A ) , largest ( B , capital ( B ) ) ) ) )
answer ( A , ( state ( A ) , loc ( B , A ) , longest ( B , river ( B ) ) ) ) )
answer ( A , smallest ( B , ( state ( A ) , density ( A , B ) ) ) ) )
answer ( A , most ( A , B , ( state ( A ) , loc ( B , A ) , major ( B ) , city ( B ) ) ) ) )
answer ( A , most ( A , B , ( state ( A ) , loc ( B , A ) , river ( B ) ) ) ) )
answer ( A , smallest ( B , ( state ( A ) , population ( A , B ) ) ) ) )
answer ( A , ( state ( A ) , const ( B , cityid ( c0 , _ ) ) , loc ( B , A ) ) ) )
answer ( A , ( state ( A ) , const ( B , cityid ( c0 , _ ) ) , loc ( B , A ) ) ) )
answer ( A , largest ( B , ( state ( A ) , population ( A , B ) ) ) ) )
answer ( A , ( state ( A ) , next_to ( A , B ) , const ( B , stateid ( s0 ) ) ) ) )
answer ( A , ( state ( A ) , next_to ( A , B ) , const ( B , stateid ( s0 ) ) ) ) )
answer ( A , ( state ( A ) , next_to ( A , B ) , const ( B , stateid ( s0 ) ) ) ) )
answer ( A , ( state ( A ) , next_to ( A , B ) , const ( B , stateid ( s0 ) ) ) ) )
answer ( A , ( state ( A ) , next_to ( A , B ) , const ( B , stateid ( s0 ) ) ) ) )
answer ( A , ( state ( A ) , next_to ( A , B ) , const ( B , stateid ( ' s0 ' ) ) ) ) )
answer ( A , ( state ( A ) , next_to ( A , B ) , state ( B ) , next_to ( B , C ) , const ( C , stateid ( s0 ) ) ) ) )
answer ( A , ( state ( A ) , next_to ( A , B ) , state ( B ) , const ( C , riverid ( s0 ) ) , traverse ( C , B ) ) ) )
answer ( A , ( state ( A ) , next_to ( A , B ) , const ( B , stateid ( s0 ) ) , loc ( C , A ) , major ( C ) , river ( C ) ) ) )
answer ( A , ( state ( A ) , next_to ( A , B ) , largest ( C , ( population ( B , C ) , state ( B ) ) ) ) ) )
answer ( A , ( state ( A ) , next_to ( A , B ) , most ( B , C , ( state ( B ) , next_to ( B , C ) , state ( C ) ) ) ) ) )
answer ( A , ( state ( A ) , next_to ( A , B ) , most ( B , C , ( state ( B ) , loc ( C , B ) , city ( C ) ) ) ) ) )
answer ( A , ( state ( A ) , next_to ( A , B ) , most ( B , C , ( state ( B ) , loc ( C , B ) , major ( C ) , city ( C ) ) ) ) ) )
answer ( A , ( state ( A ) , next_to ( A , B ) , smallest ( C , ( state ( B ) , area ( B , C ) ) ) ) ) )
answer ( A , ( state ( A ) , loc ( B , A ) , major ( B ) , river ( B ) ) ) )
answer ( A , ( state ( A ) , const ( B , riverid ( s0 ) ) , river ( B ) , traverse ( B , A ) ) ) )
answer ( A , ( state ( A ) , const ( B , riverid ( r0 ) ) , river ( B ) , traverse ( B , A ) ) ) )
answer ( A , ( state ( A ) , const ( B , riverid ( s0 ) ) , traverse ( B , A ) ) ) )
answer ( A , ( state ( A ) , const ( B , riverid ( s0 ) ) , river ( B ) , traverse ( B , A ) ) ) )
answer ( A , ( state ( A ) , loc ( B , A ) , city ( B ) , const ( B , cityid ( c0 , _ ) ) ) ) )
answer ( A , ( state ( A ) , loc ( B , A ) , city ( B ) , const ( B , cityid ( c0 , _ ) ) ) ) )
answer ( A , ( state ( A ) , loc ( B , A ) , city ( B ) , const ( B , cityid ( c0 , _ ) ) ) ) )
answer ( A , ( state ( A ) , loc ( B , A ) , city ( B ) , const ( B , cityid ( c0 , _ ) ) ) ) )
answer ( A , ( state ( A ) , loc ( B , A ) , city ( B ) , const ( B , cityid ( ' c0 ' , _ ) ) ) ) )
answer ( A , ( state ( A ) , next_to ( A , B ) , const ( B , stateid ( s0 ) ) ) ) )
answer ( A , ( loc ( B , A ) , mountain ( B ) ) ) )
answer ( A , ( loc ( B , A ) , const ( B , cityid ( c0 , _ ) ) ) ) )
answer ( A , ( loc ( B , A ) , const ( B , cityid ( c0 , _ ) ) ) ) )
answer ( A , ( loc ( B , A ) , const ( B , riverid ( r0 ) ) , river ( B ) ) ) )
answer ( A , highest ( A , ( mountain ( A ) , loc ( A , B ) , const ( B , countryid ( co0 ) ) ) ) ) )
answer ( A , highest ( A , ( place ( A ) , loc ( A , B ) , const ( B , stateid ( s0 ) ) ) ) ) )
answer ( A , lowest ( A , ( place ( A ) , loc ( A , B ) , const ( B , stateid ( s0 ) ) ) ) ) )
answer ( A , largest ( B , ( population ( A , B ) , city ( A ) , loc ( A , C ) , const ( C , stateid ( ' s0 ' ) ) ) ) ) )
answer ( A , ( loc ( B , A ) , smallest ( B , city ( B ) ) ) ) )
answer ( A , largest ( B , ( city ( A ) , loc ( A , C ) , const ( C , stateid ( s0 ) ) , population ( A , B ) ) ) ) )
answer ( A , ( density ( B , A ) , state ( B ) , longest ( C , ( river ( C ) , loc ( C , D ) , const ( D , countryid ( co0 ) ) ) ) , traverse ( C , B ) ) ) )
answer ( A , highest ( A , ( mountain ( A ) , \ + ( loc ( A , B ) , const ( B , stateid ( s0 ) ) ) ) ) ) )
answer ( A , longest ( A , ( river ( A ) , loc ( A , B ) , const ( B , countryid ( co0 ) ) ) ) ) )
answer ( A , smallest ( A , state ( A ) ) ) )
answer ( A , largest ( B , ( state ( A ) , next_to ( A , C ) , const ( C , stateid ( s0 ) ) , population ( A , B ) ) ) ) )
answer ( A , most ( A , B , ( river ( A ) , traverse ( A , B ) , state ( B ) ) ) ) )
answer ( A , most ( A , B , ( river ( A ) , traverse ( A , B ) , state ( B ) ) ) ) )
answer ( A , most ( A , B , ( river ( A ) , traverse ( A , B ) , state ( B ) ) ) ) )
answer ( A , ( river ( A ) , \ + ( traverse ( A , B ) , const ( B , stateid ( s0 ) ) ) ) ) )
answer ( A , ( river ( A ) , \ + ( traverse ( A , B ) , const ( B , countryid ( co0 ) ) ) ) ) )
answer ( A , ( river ( A ) , traverse ( A , B ) , state ( B ) , next_to ( B , C ) , state ( C ) , loc ( D , C ) , capital ( D ) , const ( D , cityid ( c0 , _ ) ) ) ) )
answer ( A , ( river ( A ) , traverse ( A , B ) , fewest ( B , C , ( state ( B ) , loc ( C , B ) , city ( C ) ) ) ) ) )
answer ( A , ( state ( A ) , next_to ( A , B ) , const ( B , stateid ( s0 ) ) ) ) )
answer ( A , most ( A , B , ( state ( A ) , next_to ( A , B ) , state ( B ) ) ) ) )
answer ( A , smallest ( B , ( capital ( A ) , population ( A , B ) ) ) ) )
answer ( A , largest ( B , ( state ( A ) , population ( A , B ) ) ) ) )
answer ( A , largest ( B , ( state ( A ) , population ( A , B ) ) ) ) )
answer ( A , highest ( B , ( state ( A ) , loc ( B , A ) , place ( B ) ) ) ) )
answer ( A , ( state ( A ) , loc ( B , A ) , highest ( B , place ( B ) ) ) ) )
answer ( A , largest ( B , ( state ( A ) , density ( A , B ) ) ) ) )
answer ( A , ( state ( A ) , loc ( B , A ) , lowest ( B , place ( B ) ) ) ) )
answer ( A , ( state ( A ) , loc ( B , A ) , lowest ( B , place ( B ) ) , next_to ( A , C ) , const ( C , stateid ( s0 ) ) ) ) )
answer ( A , smallest ( B , ( state ( A ) , density ( A , B ) ) ) ) )
answer ( A , most ( A , B , ( state ( A ) , loc ( B , A ) , major ( B ) , city ( B ) ) ) ) )
answer ( A , most ( A , B , ( state ( A ) , loc ( B , A ) , major ( B ) , river ( B ) ) ) ) )
answer ( A , most ( A , B , ( state ( A ) , loc ( B , A ) , major ( B ) , river ( B ) , traverse ( B , A ) ) ) ) )
answer ( A , largest ( B , ( state ( A ) , population ( A , B ) ) ) ) )
answer ( A , most ( A , B , ( state ( A ) , loc ( B , A ) , river ( B ) ) ) ) )
answer ( A , smallest ( B , ( state ( A ) , density ( A , B ) ) ) ) )
answer ( A , smallest ( B , ( state ( A ) , density ( A , B ) ) ) ) )
answer ( A , ( state ( A ) , const ( B , placeid ( ' p0 ' ) ) , loc ( B , A ) ) ) )
answer ( A , smallest ( A , state ( A ) ) ) )
answer ( A , ( state ( A ) , next_to ( A , B ) , const ( B , stateid ( s0 ) ) ) ) )
answer ( A , ( state ( A ) , next_to ( A , B ) , const ( B , stateid ( s0 ) ) ) ) )
answer ( A , ( state ( A ) , next_to ( A , B ) , const ( B , riverid ( s0 ) ) , river ( B ) ) ) )
answer ( A , ( state ( A ) , next_to ( A , B ) , smallest ( C , ( state ( B ) , area ( B , C ) ) ) ) ) )
answer ( A , largest ( B , ( state ( A ) , capital ( A , B ) , city ( B ) ) ) ) )
answer ( A , ( state ( A ) , const ( B , riverid ( r0 ) ) , river ( B ) , traverse ( B , A ) ) ) )
answer ( A , ( state ( A ) , longest ( B , river ( B ) ) , traverse ( B , A ) ) ) )
answer ( A , ( state ( A ) , const ( B , riverid ( r0 ) ) , traverse ( B , A ) ) ) )
answer ( A , ( state ( A ) , loc ( B , A ) , river ( B ) ) ) )
answer ( A , ( state ( A ) , loc ( B , A ) , city ( B ) , const ( B , cityid ( c0 , _ ) ) ) ) )
answer ( A , largest ( B , ( city ( A ) , density ( A , B ) ) ) ) )
